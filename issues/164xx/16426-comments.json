[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17579](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17579.html) ([refactor] Merge getreceivedby tally into GetReceived function by andrewtoth)\n* [#17564](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17564.html) (rpc: Use mempool from node context instead of global by MarcoFalke)\n* [#17484](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17484.html) (wallet: add cached m_is_ibd to remove Chain::isInitialBlockDownload by ariard)\n* [#17443](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17443.html) (Use Median Time Past to check finality of wallet transactions by ariard)\n* [#17261](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17261.html) (Make ScriptPubKeyMan an actual interface and the wallet to have multiple by achow101)\n* [#16963](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16963.html) (wallet: Fix unique_ptr usage in boost::signals2 by promag)\n* [#16895](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16895.html) (External signer multisig support by Sjors)\n* [#16549](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16549.html) ([WIP] UI external signer support (e.g. hardware wallet) by Sjors)\n* [#16546](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16546.html) ([WIP] External signer support - Wallet Box edition by Sjors)\n* [#16528](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16528.html) ([WIP] Native Descriptor Wallets (take 2) by achow101)\n* [#16224](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16224.html) (gui: Bilingual GUI error messages by hebasto)\n* [#15606](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15606.html) ([experimental] UTXO snapshots by jamesob)\n* [#14707](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14707.html) ([RPC] Include coinbase transactions in receivedby RPCs by andrewtoth)\n* [#9381](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9381.html) (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-07-20T06:53:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-513442866",
      "id" : 513442866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMzQ0Mjg2Ng==",
      "updated_at" : "2019-12-09T21:30:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513442866",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Great work! I'd suggest changing the PR title to something like \"Reverse cs_main, cs_wallet lock order and reduce cs_main locking\" to motivate it better and describe the change.\r\n\r\nThe current title \"Remove Chain::Lock interface\" and starting sentence \"Follow-up in the set of Chain interface refactoring\" make this sound mostly like a refactoring. But this is more of a locking change, and a change to make the wallet more asynchronous and event driven than a refactoring change.",
      "created_at" : "2019-07-20T11:17:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-513459089",
      "id" : 513459089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMzQ1OTA4OQ==",
      "updated_at" : "2019-07-20T11:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513459089",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nExcellent work!",
      "created_at" : "2019-07-22T11:00:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-513745160",
      "id" : 513745160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMzc0NTE2MA==",
      "updated_at" : "2019-07-22T11:00:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513745160",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. This might help IBD, because `cs_main` had to be acquired due to the lock order requirement. If it doesn't help IBD, the change will hopefully still speed up the `msghand` thread because the wallets take the main lock less.",
      "created_at" : "2019-07-22T20:43:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-513946565",
      "id" : 513946565,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMzk0NjU2NQ==",
      "updated_at" : "2019-07-22T20:43:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513946565",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Big concept ACK! Thanks @ariard ",
      "created_at" : "2019-07-22T21:32:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-513963292",
      "id" : 513963292,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMzk2MzI5Mg==",
      "updated_at" : "2019-07-22T21:32:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513963292",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-07-24T18:15:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-514742145",
      "id" : 514742145,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDc0MjE0NQ==",
      "updated_at" : "2019-07-24T18:15:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514742145",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, mother of god, not locking `cs_main`!",
      "created_at" : "2019-07-25T02:58:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-514875510",
      "id" : 514875510,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDg3NTUxMA==",
      "updated_at" : "2019-07-25T02:58:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514875510",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r342719832"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342719832"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Instead of adding an `interfaces::Chain::checkFinalTx` method, it might be better to call [`IsFinalTx`](https://github.com/bitcoin/bitcoin/blob/50591f6ec61b802cf4193cdbefcc85ad75716e8d/src/consensus/tx_verify.cpp#L17-L28) directly with the wallet's height and time, avoiding going through [`CheckFinalTx`](https://github.com/bitcoin/bitcoin/blob/50591f6ec61b802cf4193cdbefcc85ad75716e8d/src/validation.cpp#L189-L219).\r\n\r\nThis could perform better since it wouldn't require locking cs_main, and could make wallet calls return more internally consistent information when the wallet is catching up to the chain.",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-11-05T18:18:14Z",
      "diff_hunk" : "@@ -2274,13 +2252,13 @@ bool CWalletTx::InMempool() const\n     return fInMempool;\n }\n \n-bool CWalletTx::IsTrusted(interfaces::Chain::Lock& locked_chain) const\n+bool CWalletTx::IsTrusted() const\n {\n     // Quick answer in most cases\n-    if (!locked_chain.checkFinalTx(*tx)) {\n+    if (!pwallet->chain().checkFinalTx(*tx)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r342719832",
      "id" : 342719832,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjcxOTgzMg==",
      "original_commit_id" : "a052c3748b6551137c4477a87293f231e707578d",
      "original_position" : 452,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 311940772,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342719832",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Finally rebased after merge of #15931, PR should be ready for review. \r\n\r\nApart of 3efe38d which use the new `m_last_block_processed_height` to avoid querying the chainstate and introduce some modifications, other commits are pretty straight-forward. It's just taking `cs_main` inside the `Chain` implementation instead of using `Chain::lock`. Lock order is reversed only in last commit f057aed to avoid any deadlock issue.\r\n\r\nIf you still feel PR is hard to review, I can subsplit easily in another PR.",
      "created_at" : "2019-11-11T19:33:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-552582365",
      "id" : 552582365,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MjU4MjM2NQ==",
      "updated_at" : "2019-11-11T19:33:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552582365",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Approach ACK. Code changes here are very simple after #15931.\r\n\r\nAll the changes before the last commit f057aedf80d8bd6083c2227e42d4887be4c2933b seem straightforward and don't change behavior other than locking `cs_main` in new places recursively, so all the new locks are no-ops.\r\n\r\nOnly the last commit f057aedf80d8bd6083c2227e42d4887be4c2933b is the big scary change that removes `cs_main` locks all over the wallet, leaving us to hope that remaining locking is sufficient and that stretches of wallet code that used to run under `cs_main` aren't making assumptions about the tip not changing and other wallet threads not running.\r\n\r\n---\r\n\r\nI'll review this PR more closely this week. It might be nice to simplify the PR description now that #15931 is merged. I think the description just basically needs to say that `interfaces::Chain::Lock` is a wrapper around around `cs_main`, and that this PR changes wallet code to not lock and unlock `cs_main` directly anymore, and not keep `cs_main` locked while it locks `cs_wallet` and does other work. Instead, after this PR, wallet code only locks `cs_main` indirectly and intermittently when it needs to look up bits of chain information, and never holds onto `cs_main` while it does other work.",
      "created_at" : "2019-11-11T20:41:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-552606573",
      "id" : 552606573,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MjYwNjU3Mw==",
      "updated_at" : "2019-11-11T20:41:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552606573",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Restating my concept ACK. I plan to review this fully soon.\r\n\r\nThanks for rebasing this so quickly",
      "created_at" : "2019-11-11T21:01:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-552613910",
      "id" : 552613910,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MjYxMzkxMA==",
      "updated_at" : "2019-11-11T21:01:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552613910",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Only the last commit f057aed is the big scary change that removes cs_main locks all over the wallet, leaving us to hope that remaining locking is sufficient and that stretches of wallet code that used to run under cs_main aren't making assumptions about the tip not changing and other wallet threads not running.\r\n\r\nMost of the code making assumptions about the tip is confined in the rescan logic, so I think this one should get the focus, you can grep for all methods fetching tip like `getHeight`, `getBlockHeight` `getX` and check no decision is made on return value of 2 different calls of them. Concerning other wallet threads, it should be cover by wallet lock in itself.",
      "created_at" : "2019-11-11T22:03:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-552637188",
      "id" : 552637188,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MjYzNzE4OA==",
      "updated_at" : "2019-11-11T22:03:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552637188",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-11-22T19:56:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-557672181",
      "id" : 557672181,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzY3MjE4MQ==",
      "updated_at" : "2019-11-22T19:56:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557672181",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r352868751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/352868751"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why use chain height instead of wallet height here and other places? Anywhere the wallet is locked and the chain isn't locked it would seem safer to use the wallet height.",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-02T21:31:03Z",
      "diff_hunk" : "@@ -565,7 +565,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        Optional<int> tip_height = pwallet->chain().getHeight();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r352868751",
      "id" : 352868751,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Mjg2ODc1MQ==",
      "original_commit_id" : "be2651fd8931b6317bd68e652f58755413abf906",
      "original_position" : 5,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 72,
      "pull_request_review_id" : 325756305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/352868751",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353369610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353369610"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think I can switch for the one in `CreateTransaction`, all left are tied to the rescan logic which doesn't call `BlockConnected` and so doesn't update `m_last_block_processed` accurately. I can rework a bit the rescan logic to make it work on m_last_block_processed_height but I felt it was a bit of scope and an increased burden for reviewers.\r\n\r\nAs you know I plan to rework the rescan logic after this PR. At term it would remove all `getHeight` callsites`.",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-03T19:13:01Z",
      "diff_hunk" : "@@ -565,7 +565,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        Optional<int> tip_height = pwallet->chain().getHeight();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353369610",
      "id" : 353369610,
      "in_reply_to_id" : 352868751,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MzM2OTYxMA==",
      "original_commit_id" : "be2651fd8931b6317bd68e652f58755413abf906",
      "original_position" : 5,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 72,
      "pull_request_review_id" : 326383097,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353369610",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353376692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353376692"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, chain height seems fine for rescan logic, and is what I'd expect there. I think the other places should use wallet height if there isn't an explicit reason not to.",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-03T19:27:13Z",
      "diff_hunk" : "@@ -565,7 +565,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        Optional<int> tip_height = pwallet->chain().getHeight();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353376692",
      "id" : 353376692,
      "in_reply_to_id" : 352868751,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MzM3NjY5Mg==",
      "original_commit_id" : "be2651fd8931b6317bd68e652f58755413abf906",
      "original_position" : 5,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 72,
      "pull_request_review_id" : 326391993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353376692",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353391359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353391359"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Corrected on 24f40fc, there was only one occurrence in `CreateTransaction`. All others are tied to rescan logic, including ones in `rpcdump`/`rpcwallet`.",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-03T19:57:05Z",
      "diff_hunk" : "@@ -565,7 +565,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        Optional<int> tip_height = pwallet->chain().getHeight();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353391359",
      "id" : 353391359,
      "in_reply_to_id" : 352868751,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MzM5MTM1OQ==",
      "original_commit_id" : "be2651fd8931b6317bd68e652f58755413abf906",
      "original_position" : 5,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 72,
      "pull_request_review_id" : 326409878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353391359",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-12-04T11:29:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561604205",
      "id" : 561604205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTYwNDIwNQ==",
      "updated_at" : "2019-12-04T11:29:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561604205",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "When compiling with these changes, I get a new compilation warning related to holding `cs_wallet`:\r\n\r\n```\r\n  CXX      bitcoin_wallet-bitcoin-wallet.o\r\nwallet/wallet.cpp:2528:61: warning: reading variable 'm_last_block_processed_height' requires holding mutex\r\n      'cs_wallet' [-Wthread-safety-analysis]\r\n    txNew.nLockTime = GetLocktimeForNewTransaction(chain(), m_last_block_processed_height);\r\n                                                            ^\r\n```",
      "created_at" : "2019-12-04T16:07:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561713099",
      "id" : 561713099,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTcxMzA5OQ==",
      "updated_at" : "2019-12-04T16:07:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561713099",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jkczyz, what platform, compiler, and configure flags did you use so I can try to reproduce? My build (Debian, gcc 8.3, --enable-debug, --enable-bench) didn't show that warning. Perhaps I should use clang -c -Wthread-safety.",
      "created_at" : "2019-12-04T16:35:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561725952",
      "id" : 561725952,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTcyNTk1Mg==",
      "updated_at" : "2019-12-04T16:35:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561725952",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @jkczyz, what platform, compiler, and configure flags did you use so I can try to reproduce? My build (Debian, gcc 8.3, --enable-debug, --enable-bench) didn't show that warning. Perhaps I should use clang -c -Wthread-safety.\r\n\r\n@jonatack Built on MacOS using clang-1001.0.46.4. No special configuration flags. I performed `make clean && make` at a7aec7ad9 followed by `make` at 24f40fc1a to confirm the warning only appeared at the latter commit. I haven't tried building on my Linux box yet.",
      "created_at" : "2019-12-04T16:55:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561734875",
      "id" : 561734875,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTczNDg3NQ==",
      "updated_at" : "2019-12-04T16:55:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561734875",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > @jkczyz, what platform, compiler, and configure flags did you use so I can try to reproduce? My build (Debian, gcc 8.3, --enable-debug, --enable-bench) didn't show that warning. Perhaps I should use clang -c -Wthread-safety.\r\n> \r\n> @jonatack Built on MacOS using clang-1001.0.46.4. No special configuration flags. I performed `make clean && make` at [a7aec7a](https://github.com/bitcoin/bitcoin/commit/a7aec7ad97949a82f870c033d8fd8b65d772eacb) followed by `make` at [24f40fc](https://github.com/bitcoin/bitcoin/commit/24f40fc1afa9d25e5032ba4f8d1c0161e81dce3f) to confirm the warning only appeared at the latter commit. I haven't tried building on my Linux box yet.\r\n\r\nConfirmed no warning on Ubuntu:\r\n\r\n```\r\n$ gcc --version\r\ngcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0\r\n```",
      "created_at" : "2019-12-04T17:09:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561740382",
      "id" : 561740382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTc0MDM4Mg==",
      "updated_at" : "2019-12-04T17:09:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561740382",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for reviews,\r\n\r\n@jkczyz it should be good now on df508be, following Russ remark I switchted `GetLocktimeForNewTransaction` to use `m_last_block_processed_height` but without remembering the reason I avoid to do it at first, which was to avoid tweaking lock order issue. I just changed `GetLocktimeForNewTransaction` after lock taking in `CreateTransaction`, it shouldn't change anything.\r\n\r\n>  Can LockAssertion in sync.h be removed? \r\n\r\n@jonatack I would prefer to let it like this. We may need again this thread assertion helper in the future. IIRC clang thread safety detection only works on Mac for now",
      "created_at" : "2019-12-04T17:17:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561743673",
      "id" : 561743673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTc0MzY3Mw==",
      "updated_at" : "2019-12-04T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561743673",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @jonatack Built on MacOS using clang-1001.0.46.4. No special configuration flags. I performed `make clean && make` at [a7aec7a](https://github.com/bitcoin/bitcoin/commit/a7aec7ad97949a82f870c033d8fd8b65d772eacb) followed by `make` at [24f40fc](https://github.com/bitcoin/bitcoin/commit/24f40fc1afa9d25e5032ba4f8d1c0161e81dce3f) to confirm the warning only appeared at the latter commit. I haven't tried building on my Linux box yet.\r\n\r\n@jkczyz Thanks! Found this warning with Debian/clang version 7.0.1-8:\r\n```\r\n  CXX      libbitcoin_common_a-merkleblock.o\r\nwallet/wallet.cpp:2528:61: warning: reading variable 'm_last_block_processed_height' requires holding mutex 'cs_wallet' [-Wthread-safety-analysis]\r\n    txNew.nLockTime = GetLocktimeForNewTransaction(chain(), m_last_block_processed_height);\r\n                                                            ^\r\n1 warning generated.\r\n```\r\n```\r\n  CC            = /usr/bin/ccache clang\r\n  CFLAGS        = -g -O2\r\n  CPPFLAGS      =  -DDEBUG -DDEBUG_LOCKORDER  -Qunused-arguments\r\n                   -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\r\n  CXX           = /usr/bin/ccache clang++ -std=c++11\r\n  CXXFLAGS      =  -O0 -g3 -ftrapv  -Wstack-protector -fstack-protector-all  -Wall -Wextra\r\n                   -Wformat -Wvla -Wswitch -Wformat-security -Wthread-safety-analysis\r\n                   -Wrange-loop-analysis -Wredundant-decls  -Wno-unused-parameter\r\n                   -Wno-self-assign -Wno-unused-local-typedef -Wno-deprecated-register\r\n                   -Wno-implicit-fallthrough\r\n```",
      "created_at" : "2019-12-04T17:17:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561743874",
      "id" : 561743874,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTc0Mzg3NA==",
      "updated_at" : "2019-12-04T17:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561743874",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> it should be good now on [df508be](https://github.com/bitcoin/bitcoin/commit/df508be1368e72a77b9ad50280a5a1c5d2e983b1)\r\n> \r\n> IIRC clang thread safety detection only works on Mac for now\r\n\r\nYes, rebuilt and the warning is now gone in df508be. As commented just above, I reproduced the warning on 24f40fc with Debian and Clang (passing --enable-debug).\r\n\r\n```\r\n~/projects/bitcoin/bitcoin/src ((HEAD detached at origin/pr/16426))$ bitcoind\r\n2019-12-04T17:41:08Z Bitcoin Core version v0.19.99.0-df508be136 (debug build)\r\n```",
      "created_at" : "2019-12-04T17:37:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561758337",
      "id" : 561758337,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTc1ODMzNw==",
      "updated_at" : "2019-12-04T17:41:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561758337",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would be interesting to see the impact (if any) on IBD :)",
      "created_at" : "2019-12-04T17:37:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561758447",
      "id" : 561758447,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTc1ODQ0Nw==",
      "updated_at" : "2019-12-04T17:37:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561758447",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonatack that's a compiler warning and `--enable-debug` is about turning on our deadlock detection with conditional compilation they are not related.",
      "created_at" : "2019-12-04T19:54:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561812904",
      "id" : 561812904,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTgxMjkwNA==",
      "updated_at" : "2019-12-04T19:54:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561812904",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm getting the warning at df508be on MacOS using clang as before.",
      "created_at" : "2019-12-04T21:15:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561841975",
      "id" : 561841975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTg0MTk3NQ==",
      "updated_at" : "2019-12-04T21:15:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561841975",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jkczyz  at 3773b41, add a `AssertLockHeld` in `CreateTransaction` after taking `cs_wallet`, it should avoid clang false positive warning according to documentation \"utility class for indicating to compiler thread analysis that a mutex is locked (when it couldn't be determined otherwise)\"",
      "created_at" : "2019-12-04T21:34:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561849240",
      "id" : 561849240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTg0OTI0MA==",
      "updated_at" : "2019-12-04T21:35:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561849240",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @jkczyz at [3773b41](https://github.com/bitcoin/bitcoin/commit/3773b4159c37db993b9bb7c3f5d7dd7a51a39b09), add a `AssertLockHeld` in `CreateTransaction` after taking `cs_wallet`, it should avoid clang false positive warning according to documentation \"utility class for indicating to compiler thread analysis that a mutex is locked (when it couldn't be determined otherwise)\"\r\n\r\nLooks like I had a problem on my end. I don't get the warning with df508be after all. Sorry about the confusion!",
      "created_at" : "2019-12-04T22:10:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561862498",
      "id" : 561862498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTg2MjQ5OA==",
      "updated_at" : "2019-12-04T22:10:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561862498",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @jonatack that's a compiler warning and `--enable-debug` is about turning on our deadlock detection with conditional compilation they are not related.\r\n\r\nThanks. Agreed. Verified locally: warning present on 24f40fc with Debian+Clang without passing --enable-debug.\r\n```\r\n  CC            = /usr/bin/ccache clang\r\n  CFLAGS        = -g -O2\r\n  CPPFLAGS      =   -U_FORTIFY_SOURCE  -D_FORTIFY_SOURCE=2  -Qunused-arguments\r\n                    -DHAVE_BUILD_INFO  -D__STDC_FORMAT_MACROS\r\n  CXX           = /usr/bin/ccache clang++ -std=c++11\r\n  CXXFLAGS      =   -Wstack-protector -fstack-protector-all  -Wall -Wextra -Wformat\r\n                    -Wvla -Wswitch -Wformat-security -Wthread-safety-analysis\r\n                    -Wrange-loop-analysis -Wredundant-decls  -Wno-unused-parameter\r\n                    -Wno-self-assign -Wno-unused-local-typedef -Wno-deprecated-register\r\n                    -Wno-implicit-fallthrough   -g -O2\r\n```",
      "created_at" : "2019-12-04T22:40:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561872913",
      "id" : 561872913,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTg3MjkxMw==",
      "updated_at" : "2019-12-04T22:40:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561872913",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ariard what changed from df508be to df17e36 to 3773b41?",
      "created_at" : "2019-12-04T22:43:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561873798",
      "id" : 561873798,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTg3Mzc5OA==",
      "updated_at" : "2019-12-04T22:47:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561873798",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonatack Adding the `AssertLockHeld` to be sure to not raise false positive warning from the compiler.",
      "created_at" : "2019-12-04T23:36:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561892216",
      "id" : 561892216,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MTg5MjIxNg==",
      "updated_at" : "2019-12-04T23:36:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561892216",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ariard 3773b4159c37db993b9bb7c3f5d7dd7a51a39b09 builds without warnings or errors. Where exactly did you add the `AssertLockHeld`? I don't see it in CreateTransaction, nor in the diff of the last commit, and I'm not getting `git range-diff` to help me. Help a dumb reviewer out :D ",
      "created_at" : "2019-12-05T18:43:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-562260378",
      "id" : 562260378,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MjI2MDM3OA==",
      "updated_at" : "2019-12-05T18:43:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562260378",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonatack src/wallet/wallet.cpp L2553 on head commit. But you should really recompile latest git to get `git range-diff` it changes your life!",
      "created_at" : "2019-12-05T19:27:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-562277913",
      "id" : 562277913,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MjI3NzkxMw==",
      "updated_at" : "2019-12-05T19:27:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562277913",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "could you update the OP? It's slightly outdated due to dependent PRs being merged",
      "created_at" : "2019-12-05T19:33:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-562281219",
      "id" : 562281219,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MjI4MTIxOQ==",
      "updated_at" : "2019-12-05T19:33:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562281219",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "OP updated, see also for more context https://bitcoincore.reviews/16426.html",
      "created_at" : "2019-12-06T16:38:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-562645739",
      "id" : 562645739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MjY0NTczOQ==",
      "updated_at" : "2019-12-06T16:38:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562645739",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355223947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355223947"
         }
      },
      "author_association" : "MEMBER",
      "body" : "b844282ba6539954e6ad9ba899497e28fed60d91\r\n\r\nIMO drop this comment, or adjust and move to L3412.",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-08T23:29:58Z",
      "diff_hunk" : "@@ -3403,16 +3403,14 @@ void CWallet::GetKeyBirthTimes(interfaces::Chain::Lock& locked_chain, std::map<C\n     for (const auto& entry : mapWallet) {\n         // iterate over all wallet transactions...\n         const CWalletTx &wtx = entry.second;\n-        if (Optional<int> height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock)) {\n-            // ... which are already in a block\n-            for (const CTxOut &txout : wtx.tx->vout) {\n-                // iterate over all their outputs\n-                for (const auto &keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n-                    // ... and all their affected keys\n-                    std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n-                    if (rit != mapKeyFirstBlock.end() && *height < rit->second)\n-                        rit->second = *height;\n-                }\n+        // ... which are already in a block",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355223947",
      "id" : 355223947,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIyMzk0Nw==",
      "original_commit_id" : "b844282ba6539954e6ad9ba899497e28fed60d91",
      "original_position" : 65,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 328641294,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355223947",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355223993"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355223993"
         }
      },
      "author_association" : "MEMBER",
      "body" : "b844282ba6539954e6ad9ba899497e28fed60d91\r\n\r\nnit, const?",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-08T23:30:44Z",
      "diff_hunk" : "@@ -758,6 +758,9 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     /** Interface to assert chain access and if successful lock it */\n     std::unique_ptr<interfaces::Chain::Lock> LockChain() { return m_chain ? m_chain->lock() : nullptr; }\n \n+    /** Interface to assert chain access */\n+    bool HaveChain() { return m_chain ? true : false; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355223993",
      "id" : 355223993,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIyMzk5Mw==",
      "original_commit_id" : "b844282ba6539954e6ad9ba899497e28fed60d91",
      "original_position" : 5,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 328641294,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355223993",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355224044"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355224044"
         }
      },
      "author_association" : "MEMBER",
      "body" : "b844282ba6539954e6ad9ba899497e28fed60d91\r\n\r\nnit, since this line is no longer different add braces?",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-08T23:31:37Z",
      "diff_hunk" : "@@ -3403,16 +3403,14 @@ void CWallet::GetKeyBirthTimes(interfaces::Chain::Lock& locked_chain, std::map<C\n     for (const auto& entry : mapWallet) {\n         // iterate over all wallet transactions...\n         const CWalletTx &wtx = entry.second;\n-        if (Optional<int> height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock)) {\n-            // ... which are already in a block\n-            for (const CTxOut &txout : wtx.tx->vout) {\n-                // iterate over all their outputs\n-                for (const auto &keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n-                    // ... and all their affected keys\n-                    std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n-                    if (rit != mapKeyFirstBlock.end() && *height < rit->second)\n-                        rit->second = *height;\n-                }\n+        // ... which are already in a block\n+        for (const CTxOut& txout : wtx.tx->vout) {\n+            // iterate over all their outputs\n+            for (const auto& keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n+                // ... and all their affected keys\n+                std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n+                if (rit != mapKeyFirstBlock.end() && wtx.m_confirm.block_height < rit->second)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355224044",
      "id" : 355224044,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIyNDA0NA==",
      "original_commit_id" : "b844282ba6539954e6ad9ba899497e28fed60d91",
      "original_position" : 71,
      "path" : "src/wallet/wallet.cpp",
      "position" : 420,
      "pull_request_review_id" : 328641294,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355224044",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355224375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355224375"
         }
      },
      "author_association" : "MEMBER",
      "body" : "e64f0909c66e39896c1e41df77576cccc3001088\r\n\r\nnit, I'm aware this goes away later in 6b4d68ec25f024f009efc79b99816fa9ff6d89de but maybe the `interfaces::Chain::Lock& locked_chain` arg should be dropped later instead - so this commit would keep `locked_chain` and just adde `block_height`.",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-08T23:36:40Z",
      "diff_hunk" : "@@ -2445,13 +2445,14 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n     return true;\n }\n \n-static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, interfaces::Chain::Lock& locked_chain)\n+static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, int block_height)\n {\n     if (chain.isInitialBlockDownload()) {\n         return false;\n     }\n     constexpr int64_t MAX_ANTI_FEE_SNIPING_TIP_AGE = 8 * 60 * 60; // in seconds\n-    if (locked_chain.getBlockTime(*locked_chain.getHeight()) < (GetTime() - MAX_ANTI_FEE_SNIPING_TIP_AGE)) {\n+    auto locked_chain = chain.lock();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355224375",
      "id" : 355224375,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIyNDM3NQ==",
      "original_commit_id" : "e64f0909c66e39896c1e41df77576cccc3001088",
      "original_position" : 48,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 328641294,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355224375",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355227118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355227118"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3773b4159c37db993b9bb7c3f5d7dd7a51a39b09\r\n\r\nIs this going to change in a follow up? Maybe add a comment explaining this lock?",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-09T00:17:34Z",
      "diff_hunk" : "@@ -344,6 +331,7 @@ class ChainImpl : public Chain\n     }\n     std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n     {\n+        LOCK(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355227118",
      "id" : 355227118,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIyNzExOA==",
      "original_commit_id" : "3773b4159c37db993b9bb7c3f5d7dd7a51a39b09",
      "original_position" : 31,
      "path" : "src/interfaces/chain.cpp",
      "position" : 244,
      "pull_request_review_id" : 328641294,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355227118",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356336742"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356336742"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this a style requirement? IMO don't find code easier to read doing so.",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-10T23:38:52Z",
      "diff_hunk" : "@@ -3403,16 +3403,14 @@ void CWallet::GetKeyBirthTimes(interfaces::Chain::Lock& locked_chain, std::map<C\n     for (const auto& entry : mapWallet) {\n         // iterate over all wallet transactions...\n         const CWalletTx &wtx = entry.second;\n-        if (Optional<int> height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock)) {\n-            // ... which are already in a block\n-            for (const CTxOut &txout : wtx.tx->vout) {\n-                // iterate over all their outputs\n-                for (const auto &keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n-                    // ... and all their affected keys\n-                    std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n-                    if (rit != mapKeyFirstBlock.end() && *height < rit->second)\n-                        rit->second = *height;\n-                }\n+        // ... which are already in a block\n+        for (const CTxOut& txout : wtx.tx->vout) {\n+            // iterate over all their outputs\n+            for (const auto& keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n+                // ... and all their affected keys\n+                std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n+                if (rit != mapKeyFirstBlock.end() && wtx.m_confirm.block_height < rit->second)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356336742",
      "id" : 356336742,
      "in_reply_to_id" : 355224044,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjMzNjc0Mg==",
      "original_commit_id" : "b844282ba6539954e6ad9ba899497e28fed60d91",
      "original_position" : 71,
      "path" : "src/wallet/wallet.cpp",
      "position" : 420,
      "pull_request_review_id" : 330218377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356336742",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356337755"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356337755"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Going to let it like this, one of both commits have to clean it anyway unless adding a temporary one line is really gross..",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-10T23:42:15Z",
      "diff_hunk" : "@@ -2445,13 +2445,14 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n     return true;\n }\n \n-static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, interfaces::Chain::Lock& locked_chain)\n+static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, int block_height)\n {\n     if (chain.isInitialBlockDownload()) {\n         return false;\n     }\n     constexpr int64_t MAX_ANTI_FEE_SNIPING_TIP_AGE = 8 * 60 * 60; // in seconds\n-    if (locked_chain.getBlockTime(*locked_chain.getHeight()) < (GetTime() - MAX_ANTI_FEE_SNIPING_TIP_AGE)) {\n+    auto locked_chain = chain.lock();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356337755",
      "id" : 356337755,
      "in_reply_to_id" : 355224375,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjMzNzc1NQ==",
      "original_commit_id" : "e64f0909c66e39896c1e41df77576cccc3001088",
      "original_position" : 48,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 330219515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356337755",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356338388"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356338388"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Adding a comment only for this method would seem obscure compare to other methods for future reviewers after refactoring, that's why it's in commit message \"Lock cs_main in handleNotifications as it was relaying on its caller to do  so before\", or do you have a different opinion ?",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-10T23:44:24Z",
      "diff_hunk" : "@@ -344,6 +331,7 @@ class ChainImpl : public Chain\n     }\n     std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n     {\n+        LOCK(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356338388",
      "id" : 356338388,
      "in_reply_to_id" : 355227118,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjMzODM4OA==",
      "original_commit_id" : "3773b4159c37db993b9bb7c3f5d7dd7a51a39b09",
      "original_position" : 31,
      "path" : "src/interfaces/chain.cpp",
      "position" : 244,
      "pull_request_review_id" : 330220242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-10T23:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356338388",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for review @promag, corrected some nits on f87558b.",
      "created_at" : "2019-12-10T23:46:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-564311349",
      "id" : 564311349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDMxMTM0OQ==",
      "updated_at" : "2019-12-10T23:46:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564311349",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift after a run on bitcoinperf, there is no seen performance change on IBD. It still may be an improvement with a heavy workload on wallet RPCs (but harder to simulate).",
      "created_at" : "2019-12-12T19:25:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-565148815",
      "id" : 565148815,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTE0ODgxNQ==",
      "updated_at" : "2019-12-12T19:25:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565148815",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357761094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357761094"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "For getBlockHash, getBlockTime, and getBlockMedianTimePast, I don't think it safe anymore for these methods to abort when an invalid height is passed. Previously it was possible to guarantee that an invalid height would never be passed because `cs_main` would be held before calling these (and if an invalid height was passed it indicated a bug). But now that cs_main isn't held, there could be a race condition where `invalidateblock` is called, or there is a reorg to a shorter chain that would cause aborts now.\r\n\r\nA possible fix would be to implement error handling for race conditions in the places where these methods are called, maybe changing these methods to throw an exception or return `Optional<>` values or success `bools` to indicate failure instead of aborting.\r\n\r\nAnother solution would be to drop these methods, and replace them with a more general method similar to [`findBlock`](https://github.com/bitcoin/bitcoin/blob/ddecb671f0a41eaa8e6198f7e55172c1256bd978/src/interfaces/chain.h#L128-L137) that is capable of returning multiple pieces of information atomically so there aren't new race conditions the wallet has to handle now because it isn't holding `cs_main`.",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-13T17:52:49Z",
      "diff_hunk" : "@@ -56,74 +51,59 @@ class Chain\n public:\n     virtual ~Chain() {}\n \n-    //! Interface for querying locked chain state, used by legacy code that\n-    //! assumes state won't change between calls. New code should avoid using\n-    //! the Lock interface and instead call higher-level Chain methods\n-    //! that return more information so the chain doesn't need to stay locked\n-    //! between calls.\n-    class Lock\n-    {\n-    public:\n-        virtual ~Lock() {}\n-\n-        //! Get current chain height, not including genesis block (returns 0 if\n-        //! chain only contains genesis block, nullopt if chain does not contain\n-        //! any blocks).\n-        virtual Optional<int> getHeight() = 0;\n-\n-        //! Get block height above genesis block. Returns 0 for genesis block,\n-        //! 1 for following block, and so on. Returns nullopt for a block not\n-        //! included in the current chain.\n-        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n-\n-        //! Get block hash. Height must be valid or this function will abort.\n-        virtual uint256 getBlockHash(int height) = 0;\n-\n-        //! Get block time. Height must be valid or this function will abort.\n-        virtual int64_t getBlockTime(int height) = 0;\n-\n-        //! Get block median time past. Height must be valid or this function\n-        //! will abort.\n-        virtual int64_t getBlockMedianTimePast(int height) = 0;\n-\n-        //! Check that the block is available on disk (i.e. has not been\n-        //! pruned), and contains transactions.\n-        virtual bool haveBlockOnDisk(int height) = 0;\n-\n-        //! Return height of the first block in the chain with timestamp equal\n-        //! or greater than the given time and height equal or greater than the\n-        //! given height, or nullopt if there is no block with a high enough\n-        //! timestamp and height. Also return the block hash as an optional output parameter\n-        //! (to avoid the cost of a second lookup in case this information is needed.)\n-        virtual Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height, uint256* hash) = 0;\n-\n-        //! Return height of last block in the specified range which is pruned, or\n-        //! nullopt if no block in the range is pruned. Range is inclusive.\n-        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n-\n-        //! Return height of the specified block if it is on the chain, otherwise\n-        //! return the height of the highest block on chain that's an ancestor\n-        //! of the specified block, or nullopt if there is no common ancestor.\n-        //! Also return the height of the specified block as an optional output\n-        //! parameter (to avoid the cost of a second hash lookup in case this\n-        //! information is desired).\n-        virtual Optional<int> findFork(const uint256& hash, Optional<int>* height) = 0;\n-\n-        //! Get locator for the current chain tip.\n-        virtual CBlockLocator getTipLocator() = 0;\n-\n-        //! Return height of the highest block on chain in common with the locator,\n-        //! which will either be the original block used to create the locator,\n-        //! or one of its ancestors.\n-        virtual Optional<int> findLocatorFork(const CBlockLocator& locator) = 0;\n-\n-        //! Check if transaction will be final given chain height current time.\n-        virtual bool checkFinalTx(const CTransaction& tx) = 0;\n-    };\n-\n-    //! Return Lock interface. Chain is locked when this is called, and\n-    //! unlocked when the returned interface is freed.\n-    virtual std::unique_ptr<Lock> lock(bool try_lock = false) = 0;\n+    //! Get current chain height, not including genesis block (returns 0 if\n+    //! chain only contains genesis block, nullopt if chain does not contain\n+    //! any blocks)\n+    virtual Optional<int> getHeight() = 0;\n+\n+    //! Get block height above genesis block. Returns 0 for genesis block,\n+    //! 1 for following block, and so on. Returns nullopt for a block not\n+    //! included in the current chain.\n+    virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+    //! Get block hash. Height must be valid or this function will abort.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357761094",
      "id" : 357761094,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Nzc2MTA5NA==",
      "original_commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "original_position" : 94,
      "path" : "src/interfaces/chain.h",
      "position" : 94,
      "pull_request_review_id" : 332022429,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-13T17:52:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357761094",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357762993"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357762993"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is behavior changing here? Does this need need to be changed to continue returning `std::numeric_limits<int>::max()` in the case of an abandoned or unconfirmed transaction, or does it not matter?",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-13T17:58:00Z",
      "diff_hunk" : "@@ -60,16 +60,16 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n }\n \n //! Construct wallet tx status struct.\n-WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n+WalletTxStatus MakeWalletTxStatus(CWallet& wallet, const CWalletTx& wtx)\n {\n     WalletTxStatus result;\n-    result.block_height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock).get_value_or(std::numeric_limits<int>::max());\n+    result.block_height = wtx.m_confirm.block_height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357762993",
      "id" : 357762993,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Nzc2Mjk5Mw==",
      "original_commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "original_position" : 9,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 9,
      "pull_request_review_id" : 332024993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-13T17:58:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357762993",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357829493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357829493"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356338388\r\n\r\n> Adding a comment only for this method would seem obscure compare to other methods for future reviewers after refactoring\r\n\r\nI think this lock is a little different than the locks in the other Chain methods because it is not obvious why locking is needed for something that appears to just be a memory allocation. If this lock really is necessary, having a comment in the code would be helpful to me at least. Or if it is possible to drop the lock or move it closer to where it might be needed in the [`NotificationsHandlerImpl` constructor](https://github.com/bitcoin/bitcoin/blob/3773b4159c37db993b9bb7c3f5d7dd7a51a39b09/src/interfaces/chain.cpp#L44-L48)  that would be even better.",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-13T20:56:15Z",
      "diff_hunk" : "@@ -344,6 +331,7 @@ class ChainImpl : public Chain\n     }\n     std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n     {\n+        LOCK(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357829493",
      "id" : 357829493,
      "in_reply_to_id" : 355227118,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzgyOTQ5Mw==",
      "original_commit_id" : "3773b4159c37db993b9bb7c3f5d7dd7a51a39b09",
      "original_position" : 31,
      "path" : "src/interfaces/chain.cpp",
      "position" : 244,
      "pull_request_review_id" : 332112453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-13T20:56:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357829493",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357836647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357836647"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think to avoid the race condition mentioned https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357761094, where there is a block reorg between the `CWallet::GetLastBlockHeight` and `Chain::getBlockTime` calls, it would be safer to avoid triggering asserts by getting the time by hash rather than height. You could tweak `GetLastBlock` to optionally return the block hash:\r\n\r\n```c++\r\nint GetLastBlock(uint256* block_hash = nullptr);\r\n```\r\n\r\nfor\r\n\r\n```c++\r\nuint256 block_hash;\r\nnum_blocks = m_wallet->GetLastBlock(&block_hash);\r\nif (num_blocks < 0 || !m_wallet.chain().findBlock(block_hash, nullptr, &block_time)) {\r\n    block_time = -1;\r\n}\r\n```\r\n\r\nThere are probably other places in this PR where similar changes would be appropriate.",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-13T21:18:25Z",
      "diff_hunk" : "@@ -330,14 +316,13 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        if (num_blocks >= 0) {\n+            block_time = m_wallet->chain().getBlockTime(num_blocks);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357836647",
      "id" : 357836647,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzgzNjY0Nw==",
      "original_commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "original_position" : 118,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 118,
      "pull_request_review_id" : 332122016,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-13T21:18:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357836647",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r358357704"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358357704"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/16426#discussion_r342719832\r\n\r\n> Instead of adding an `interfaces::Chain::checkFinalTx` method, it might be better to call [`IsFinalTx`](https://github.com/bitcoin/bitcoin/blob/50591f6ec61b802cf4193cdbefcc85ad75716e8d/src/consensus/tx_verify.cpp#L17-L28)\r\n\r\n#17443 is a step in this direction (https://github.com/bitcoin/bitcoin/pull/17443#pullrequestreview-332692782)\r\n",
      "commit_id" : "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
      "created_at" : "2019-12-16T17:12:46Z",
      "diff_hunk" : "@@ -2274,13 +2252,13 @@ bool CWalletTx::InMempool() const\n     return fInMempool;\n }\n \n-bool CWalletTx::IsTrusted(interfaces::Chain::Lock& locked_chain) const\n+bool CWalletTx::IsTrusted() const\n {\n     // Quick answer in most cases\n-    if (!locked_chain.checkFinalTx(*tx)) {\n+    if (!pwallet->chain().checkFinalTx(*tx)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r358357704",
      "id" : 358357704,
      "in_reply_to_id" : 342719832,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1ODM1NzcwNA==",
      "original_commit_id" : "a052c3748b6551137c4477a87293f231e707578d",
      "original_position" : 452,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 332728592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
      "updated_at" : "2019-12-16T17:12:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358357704",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-12-16T21:54:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-566261567",
      "id" : 566261567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NjI2MTU2Nw==",
      "updated_at" : "2019-12-16T21:54:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/566261567",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I was reading the review club discussion, and it sounded like there was some confusion about what motivated the PR. I think it would help to simplify the PR description. If I were describing this PR, I would write something like:\r\n\r\n<dl><dd><p>This change is intended to make the bitcoin node and its rpc, network, and gui interfaces more responsive while the wallet is in use. Currently, because the node's <code>cs_main</code> mutex is always locked before the wallet's <code>cs_wallet</code> mutex (to prevent deadlocks), <code>cs_main</code> currently stays locked while the wallet does relatively slow things like creating and listing transactions.</p>\r\n\r\n<p>Switching the lock order so <code>cs_main</code> is acquired after <code>cs_wallet</code> allows <code>cs_main</code> to be only locked intermittently while the wallet is doing slow operations, so the node is not blocked waiting for the wallet.</p></dd></dl>\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/16426#issue-299541584\r\n\r\n> `Chain::Lock` reason was mostly a temporary interface to help separation of Wallet from Node (#10973) without modifying behavior of legacy wallet code relying on chain state. It was a relief of review burden in the aforementioned separation PR, at the cost of keeping synchronicity between Wallet and Node execution.\r\n> \r\n> Caching more state in CWallet (#15931), let us remove the more used calls like `getBlockDepth` and move toward a more asynchronous interface. The current PR 1) move all remaining Chain::Lock methods to simple one and ensure `cs_main` lock is taken inside the interface 2) remove locking of `cs_main` inside any wallet code, which is another asynchronicity gain.\r\n> Lock order has to be swapped atomically at once to avoid potential deadlock issues raised by thread sync verification stuff.\r\n\r\nEspecially now that #15931 is merged, this mostly feels like historical information that doesn't help make the PR description more understandable. I would probably drop these paragraphs from the PR description or maybe move them to footnotes.\r\n\r\n> Some future works which would enhance Chain interface:\r\n> \r\n> * move `ScanForWalletTransactions` and most we can of rescanning logic on the node side,  would let us remove directly methods like `guessVerificationProgress` or `getBlockHeight`, meanwhile relieving of the the hardship of multiple simultaneous rescanning processing\r\n> * split `listsinceblock` into a wallet part and node one, #15931 caching block height in tx, I think that's possible\r\n> * move fee estimation queries to a notification interface and let the wallet cache it, fee estimation being driven by node mempool, wallet should be the consumer\r\n> * obviously remove the RPC specific methods by letting the wallet processing RPC requests without going through the node, need to add `--server`  and `--rpcserver` options\r\n\r\nI'm also not sure so much detail about future todos belongs in the PR description here. I've been trying to keep a list of cleanup todos at the top of src/interfaces/chain.h, so you could definitely merge this list into that list, and keep discussion of followup changes in the PR description more brief and basic.\r\n\r\n> To review the present PR, most of getting right the move is ensuring any `LockAssertion` in `Chain::Lock` method is amended as a `LOCK(cs_main)`. And in final commit, check that any wallet code which was previously locking the chain is now calling a method, enforcing the lock taking job. So far the only exception I found is `handleNotifications`, which should be corrected.\r\n\r\nThis paragraph is helpful and seems useful to keep, except I'm not clear about the `handleNotifications` comment. Would that be addressed by following up to https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355227118?\r\n",
      "created_at" : "2019-12-17T20:06:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-566727654",
      "id" : 566727654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NjcyNzY1NA==",
      "updated_at" : "2019-12-17T20:06:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/566727654",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "A suggestion for other reviewers might be to review last commit first: \"Remove locked_chain from CWallet, its RPCs and tests\" (f87558b49bc63922a70c9ff02c33c0b1ed1f44b1), since this is the commit that actually changes behavior, while other commits are moving and refactoring code.\r\n\r\nNote to Antoine: If it would make it easier to update the PR, I think it'd be fine to squash it into just one or two commits. Personally I'm mostly reviewing this PR by looking at the overall diff, because it's less work to focus on the end result when reviewing parts of the code that are changing more than once.",
      "created_at" : "2019-12-18T18:05:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-567145477",
      "id" : 567145477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NzE0NTQ3Nw==",
      "updated_at" : "2019-12-18T18:05:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/567145477",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
