[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This is an alternate approach to #16345 . It may solve #15412 and remove the desire to drop client-side arg validation per #15448 . Previous discussion (as pointed out in 16345) is in #16317, #14858 and #8457.\r\n\r\nThere's a bunch of other ways of doing this:\r\n\r\n * just keep requiring a call to `getblockhash N` first -- this is less convenient and [slower](https://github.com/bitcoin/bitcoin/pull/16345#issuecomment-514057030)\r\n * use the type of the parameter to distinguish heights and hashes -- this is what getblockstats does, but it means the type of the parameter is ambiguous which goes back to #15412\r\n * add an additional `height` parameter to the RPC functions and make `blockhash` or `height` be alternatives -- I tried this at https://github.com/ajtowns/bitcoin/commit/cf0868719748e2bb4f0394924245d4212d0f4260 but it's more code and not very convenient to use\r\n * duplicate the RPC calls that take a blockhash and add \"byheight\" variants -- this is what 16345 does, but it's a fair chunk of duplicated code, which has received NACKs (see https://github.com/bitcoin/bitcoin/pull/16345#issuecomment-510840305 and https://github.com/bitcoin/bitcoin/pull/16345#issuecomment-512874508 )\r\n * MarcoFalke [suggested](https://github.com/bitcoin/bitcoin/pull/16345#issuecomment-512414974) that aliases would cover the convenience factor and be useful for other things like \"generate\", but notes this isn't really possible in bitcoin-qt without a lot of work\r\n * laanwj [suggested](https://github.com/bitcoin/bitcoin/pull/8457#issuecomment-239611262) that we could add pipelining to json, so a single request would call two RPCs passing the results of the first into the second. This seems pretty complicated, and the cli and gui would need to define some sort of shortcut mechanism to make that accessible as far as I can see.\r\n\r\nThis way isn't much code, particularly for supporting more generally, and while having to turn the number into a string is a bit annoying in code, it's not that bad, and very easy from the command line or the GUI. So up for consideration\r\n\r\n(edited to add json pipelining suggestion)",
      "created_at" : "2019-07-23T03:25:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16439#issuecomment-514038924",
      "id" : 514038924,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16439",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDAzODkyNA==",
      "updated_at" : "2019-07-25T08:34:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514038924",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16440](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16440.html) (BIP-322: Generic signed message format by kallewoof)\n* [#16365](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16365.html) (Log RPC parameters (arguments) if -debug=rpcparams by LarryRuane)\n* [#16345](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16345.html) (rpc: Add getblockbyheight method by emilengler)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-07-23T06:39:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16439#issuecomment-514075082",
      "id" : 514075082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16439",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDA3NTA4Mg==",
      "updated_at" : "2019-07-29T10:51:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514075082",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I still don't like overloading the meaning of the parameter, but I'll stop repeating myself â¦ \r\n\r\n(also theoretically this could mess with software that assumes that only valid block hashes would be accepted by the RPC, though passing unchecked user input directly to RPC is arguably a bad ideaâ¦)",
      "created_at" : "2019-07-24T13:34:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16439#issuecomment-514634389",
      "id" : 514634389,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16439",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDYzNDM4OQ==",
      "updated_at" : "2019-07-24T13:38:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514634389",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I still don't like overloading the meaning of the parameter, but I'll stop repeating myself â¦\r\n\r\nSo leave things as-is including the exception for `getblockstats hash_or_height` and consider this a wontfix, or do any of the other approaches seem appealing? Could be plausible to teach bitcon-cli to accept a 64-byte hex string or a number and make the hash_or_height str-vs-num work a bit better, I think, but everything else seems a lot of hassle to me.",
      "created_at" : "2019-07-24T14:42:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16439#issuecomment-514661807",
      "id" : 514661807,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16439",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDY2MTgwNw==",
      "updated_at" : "2019-07-24T14:42:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514661807",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns do you see advantages of these approaches beside being faster to write or slightly fast execution (compared to also calling `getblockhash`)?\r\n\r\nIf this goes forward, wouldn't it be better to prefix with `#` instead? Or maybe just check the input because an hash can never be an height.",
      "created_at" : "2019-07-25T00:43:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16439#issuecomment-514850402",
      "id" : 514850402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16439",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDg1MDQwMg==",
      "updated_at" : "2019-07-25T01:45:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514850402",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @ajtowns do you see advantages of these approaches beside being faster to write or slightly fast execution (compared to also calling `getblockhash`)?\r\n\r\nIt's a fair bit less complexity for the person asking for something -- you don't have to cut and paste a blockhash, or have a `$( .. )` subcommand in shell, or remember what the name of the `getblockhash` rpc is. The speed difference is really just a side-effect of that, if you're making lots of `getblock` calls, you can lookup the blockhash once, and use the `nextblockhash` or `previousblockhash` to avoid extra calls after that, but again it's more complexity.\r\n\r\n> If this goes forward, wouldn't it be better to prefix with `#` instead?\r\n\r\nDid think about that, but `#` is a comment character in shell, so `bitcoin-cli getblock #500000` would need quotes which seems annoying. I think \"getblock at 500000\" reads pretty well anyway though.\r\n\r\n> Or maybe just check the input because an hash can never be an height.\r\n\r\nUsing a non-hex prefix makes it pretty unambiguous you don't mean a block hash. At least in theory you could have a block with hash `0000000000000000000000000000000000000000000000000000000000512345` eg, and misinterpret it. Also, see https://github.com/bitcoin/bitcoin/pull/8457#issuecomment-237647103",
      "created_at" : "2019-07-25T08:31:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16439#issuecomment-514951037",
      "id" : 514951037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16439",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDk1MTAzNw==",
      "updated_at" : "2019-07-25T08:31:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514951037",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Weak concept ACK.\r\n\r\nI understand @laanwj's point of view: ideally, the RPC server code implements simple unambiguous primitive operations, and complexity of how to make them interact is offloaded to the client. In places where user friendliness for CLI users conflicts with that, it can be implemented as extra functionality in `bitcoin-cli`.\r\n\r\nOn the other hand, this approach seems actually simpler in total code complexity than having various hooks in `bitcoin-cli` for intercepting heights and requesting their hashes, and this is a frequently requested feature.\r\n\r\nPerhaps an analogy is `git`'s syntax for specifying commits, where hashes can be provided, but also branch names, and even simple operators on other commits like `~`.",
      "created_at" : "2019-07-29T17:01:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16439#issuecomment-516075116",
      "id" : 516075116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16439",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNjA3NTExNg==",
      "updated_at" : "2019-07-29T17:01:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516075116",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. I didn't follow previous discussions, but I like the @ syntax, think it is simpler and more convenient than the other duplicating / aliasing / pipelining suggestions, and don't see a real potential for misuse. (Apologies if I missed any other practical objections in previous discussion, they mostly seemed like aesthetic complaints.)",
      "created_at" : "2019-07-29T19:16:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16439#issuecomment-516125452",
      "id" : 516125452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16439",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNjEyNTQ1Mg==",
      "updated_at" : "2019-07-29T19:16:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516125452",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16439#discussion_r308395928"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16439"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308395928"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`STR_HEX` no longer applies and this should be a new type, similar to `AMOUNT`",
      "commit_id" : "792c2a5dbca346e1b693446accd68b6a5448292f",
      "created_at" : "2019-07-29T19:22:13Z",
      "diff_hunk" : "@@ -820,7 +843,7 @@ static UniValue getblock(const JSONRPCRequest& request)\n     RPCHelpMan{\"getblock\",\n                 \"\\nIf verbosity is 0, returns a string that is serialized, hex-encoded data for block 'hash'.\\n\"\n                 \"If verbosity is 1, returns an Object with information about block <hash>.\\n\"\n-                \"If verbosity is 2, returns an Object with information about block <hash> and information about each transaction. \\n\",\n+                \"If verbosity is 2, returns an Object with information about block <hash> and information about each transaction.\\n\",\n                 {\n                     {\"blockhash\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The block hash\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16439#discussion_r308395928",
      "id" : 308395928,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODM5NTkyOA==",
      "original_commit_id" : "792c2a5dbca346e1b693446accd68b6a5448292f",
      "original_position" : 57,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 57,
      "pull_request_review_id" : 267988355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16439",
      "updated_at" : "2019-07-29T19:22:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308395928",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
