[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24751](https://github.com/bitcoin/bitcoin/pull/24751) (refactor: Remove ParseHex(const char*) from public interface by MarcoFalke)\n* [#24058](https://github.com/bitcoin/bitcoin/pull/24058) (BIP-322 basic support by kallewoof)\n* [#23595](https://github.com/bitcoin/bitcoin/pull/23595) (util: Add ParseHex<std::byte>() helper by MarcoFalke)\n* [#22953](https://github.com/bitcoin/bitcoin/pull/22953) (refactor: introduce single-separator split helper (boost::split replacement) by theStack)\n* [#22087](https://github.com/bitcoin/bitcoin/pull/22087) (Validate port-options by amadeuszpawlik)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-04-04T23:40:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24764#issuecomment-1088125027",
      "id" : 1088125027,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24764",
      "node_id" : "IC_kwDOABII585A23hj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088125027/reactions"
      },
      "updated_at" : "2022-04-04T23:40:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088125027",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\n> Add RemovePrefixView and TrimStringView which also return std::string_view objects (the corresponding RemovePrefix and TrimString keep returning an std::string, as that's needed in many call sites still).\r\n\r\nReturning a string_view can be somewhat dangerous (in combination with auto? also when the original string goes out of scope, especially if it's a temporary), so giving these functions new names is a good idea.",
      "created_at" : "2022-04-05T08:03:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24764#issuecomment-1088393028",
      "id" : 1088393028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24764",
      "node_id" : "IC_kwDOABII585A349E",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088393028/reactions"
      },
      "updated_at" : "2022-04-05T08:12:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088393028",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24764#discussion_r842495509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24764"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842495509"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ParseHex itself could use error feedback using an `optional` at some point too. But this will need revisiting all call sites, too much for this PR.",
      "commit_id" : "6e1f14780452d956503f1dbc3c91b17b44287f77",
      "created_at" : "2022-04-05T08:09:53Z",
      "diff_hunk" : "@@ -58,56 +58,43 @@ signed char HexDigit(char c)\n     return p_util_hexdigit[(unsigned char)c];\n }\n \n-bool IsHex(const std::string& str)\n+bool IsHex(std::string_view str)\n {\n-    for(std::string::const_iterator it(str.begin()); it != str.end(); ++it)\n-    {\n-        if (HexDigit(*it) < 0)\n-            return false;\n+    for (char c : str) {\n+        if (HexDigit(c) < 0) return false;\n     }\n     return (str.size() > 0) && (str.size()%2 == 0);\n }\n \n-bool IsHexNumber(const std::string& str)\n+bool IsHexNumber(std::string_view str)\n {\n-    size_t starting_location = 0;\n-    if (str.size() > 2 && *str.begin() == '0' && *(str.begin()+1) == 'x') {\n-        starting_location = 2;\n-    }\n-    for (const char c : str.substr(starting_location)) {\n+    if (str.size() > 2 && str[0] == '0' && str[1] == 'x') str.remove_prefix(2);\n+    for (char c : str) {\n         if (HexDigit(c) < 0) return false;\n     }\n     // Return false for empty string or \"0x\".\n-    return (str.size() > starting_location);\n+    return str.size() > 0;\n }\n \n-std::vector<unsigned char> ParseHex(const char* psz)\n+std::vector<unsigned char> ParseHex(std::string_view str)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24764#discussion_r842495509",
      "id" : 842495509,
      "line" : 79,
      "node_id" : "PRRC_kwDOABII584yN3YV",
      "original_commit_id" : "6e1f14780452d956503f1dbc3c91b17b44287f77",
      "original_line" : 79,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/util/strencodings.cpp",
      "position" : 58,
      "pull_request_review_id" : 931446483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24764",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842495509/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-05T08:09:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/842495509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> A new name is good, but doesn't solve the problem. I think this can be fixed with an attribute: https://github.com/bitcoin/bitcoin/issues/20493\r\n\r\nAgree, I just meant that putting a string_view-returning function as a drop-in replacement would have been a very bad idea, a new function with a new name means that people using it can reason about the risks anew. Sure, if an attribute can help avoid such problems more widely that's of course even better.",
      "created_at" : "2022-04-05T11:04:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24764#issuecomment-1088568594",
      "id" : 1088568594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24764",
      "node_id" : "IC_kwDOABII585A4j0S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088568594/reactions"
      },
      "updated_at" : "2022-04-05T11:04:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088568594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
