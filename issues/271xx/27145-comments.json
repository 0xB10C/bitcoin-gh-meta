[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/27145#issuecomment-1450530407), [glozow](https://github.com/bitcoin/bitcoin/pull/27145#pullrequestreview-1374815913) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25297](https://github.com/bitcoin/bitcoin/pull/25297) (wallet: group independent db writes on single batched db transaction by furszy)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-02-22T19:00:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#issuecomment-1440638145",
      "id" : 1440638145,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27145",
      "node_id" : "IC_kwDOABII585V3mTB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1440638145/reactions"
      },
      "updated_at" : "2023-04-06T13:55:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1440638145",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK on refreshing state of conflicted transactions in the wallet when a block is disconnected. I think there is a potential problem with the implementation though because it isn't recursively marking conflicted transactions as unconfirmed, only marking the top level transactions without recursing.\r\n\r\nI think a good approach could be to steal from the previous implementation of this idea in commits b8b4592d985fa36dd0dddfd0e2bc6daf8df6e79c and 3c8bd6814ca88715d3d56994b10dc2c5f3e38e2d from #17543, which did recurse. That approach was also nice because it reused the existing MarkConflicted function in order to avoid code duplication. Commit ec5a89a26fa17e68b3e5928730e7d7c3e0370729 from that PR also added some more test coverage which could be used here.",
      "created_at" : "2023-03-01T17:19:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#issuecomment-1450530407",
      "id" : 1450530407,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27145",
      "node_id" : "IC_kwDOABII585WdVZn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450530407/reactions"
      },
      "updated_at" : "2023-03-01T17:19:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450530407",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky \r\n> I think there is a potential problem with the implementation though because it isn't recursively marking conflicted transactions as unconfirmed, only marking the top level transactions without recursing.\r\n\r\nYes, I had forgotten about this, thanks for pointing it out! \r\n> I think a good approach could be to steal from the previous implementation of this idea in commits https://github.com/bitcoin/bitcoin/commit/b8b4592d985fa36dd0dddfd0e2bc6daf8df6e79c and https://github.com/bitcoin/bitcoin/commit/3c8bd6814ca88715d3d56994b10dc2c5f3e38e2d from https://github.com/bitcoin/bitcoin/pull/17543, which did recurse.\r\n\r\nI have used ideas from that PR so that the transaction state updating will recurse.\r\n> Commit https://github.com/bitcoin/bitcoin/commit/ec5a89a26fa17e68b3e5928730e7d7c3e0370729 from that PR also added some more test coverage which could be used here.\r\n\r\nI have cherry-picked that commit to this branch with a few adjustments.",
      "created_at" : "2023-03-05T06:17:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#issuecomment-1455001809",
      "id" : 1455001809,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27145",
      "node_id" : "IC_kwDOABII585WuZDR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1455001809/reactions"
      },
      "updated_at" : "2023-03-05T06:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1455001809",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159765529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159765529"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in 77a2e522d845eda270b2c03fd7e0a16bc4c00fbb:\r\n\r\nI think this comment is a little bit hard to follow. Something more descriptive might be\r\n```suggestion\r\n\"\"\"\r\nTest that wallet correctly tracks transactions that have been conflicted by blocks, particularly during reorgs.\r\n\"\"\"\r\n```",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-06T12:58:54Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test conflicts tracking with multilple txn conflicting a conflicted tx.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159765529",
      "id" : 1159765529,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FIJ4Z",
      "original_commit_id" : "77a2e522d845eda270b2c03fd7e0a16bc4c00fbb",
      "original_line" : 6,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1374815913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159765529/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-06T13:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159765529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159784792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159784792"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We should also test who \"wins\" in this conflict contest and what the values are, i.e. conflicting A has 8 confirmations and conflicting B has 4 confirmations.",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-06T13:17:13Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test conflicts tracking with multilple txn conflicting a conflicted tx.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+)\n+\n+class TxConflicts(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"Send tx from which to conflict outputs later\")\n+        txid_conflict_from_1 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        txid_conflict_from_2 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.generate(self.nodes[0], 1)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Disconnect nodes to broadcast conflicts on their respective chains\")\n+        self.disconnect_nodes(0, 1)\n+        self.disconnect_nodes(2, 1)\n+\n+        self.log.info(\"Create a transaction with conflicted transactions spending outpoints A & B\")\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_1)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        nB = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_2)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs_conflicted_tx = []\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+        inputs_conflicting_tx_A = []\n+        inputs_conflicting_tx_A.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicting_tx_B = []\n+        inputs_conflicting_tx_B.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+\n+        outputs_conflicted_tx = {}\n+        outputs_conflicted_tx[self.nodes[0].getnewaddress()] = Decimal(\"19.99998\")\n+        outputs_conflicting_tx_A = {}\n+        outputs_conflicting_tx_A[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        outputs_conflicting_tx_B = {}\n+        outputs_conflicting_tx_B[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+\n+        conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicted_tx, outputs_conflicted_tx))\n+        conflicting_tx_A = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_A, outputs_conflicting_tx_A))\n+        conflicting_tx_B = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_B, outputs_conflicting_tx_B))\n+\n+        self.log.info(\"Broadcast conflicted transaction\")\n+        conflicted_txid = self.nodes[0].sendrawtransaction(conflicted[\"hex\"])\n+        self.generate(self.nodes[0], 1, sync_fun=self.no_op)\n+\n+        # Build child conflicted tx\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(conflicted_txid)[\"details\"] if tx_out[\"amount\"] == Decimal(\"19.99998\"))\n+        inputs_child_conflicted = []\n+        inputs_child_conflicted.append({\"txid\": conflicted_txid, \"vout\": nA})\n+        outputs_child_conflicted = {}\n+        outputs_child_conflicted[self.nodes[0].getnewaddress()] = Decimal(\"19.99996\")\n+        child_conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_child_conflicted, outputs_child_conflicted))\n+        child_conflicted_txid = self.nodes[0].sendrawtransaction(child_conflicted[\"hex\"])\n+        self.generate(self.nodes[0], 1, sync_fun=self.no_op)\n+\n+        self.log.info(\"Broadcast conflicting tx to node 1\")\n+        conflicting_txid_A = self.nodes[1].sendrawtransaction(conflicting_tx_A[\"hex\"])\n+        self.generate(self.nodes[1], 4, sync_fun=self.no_op)\n+        self.nodes[1].sendrawtransaction(conflicting_tx_B[\"hex\"])\n+        self.generate(self.nodes[1], 4, sync_fun=self.no_op)\n+\n+        # Reconnect node0 and node1 and check that conflicted_txid is effectively conflicted\n+        self.log.info(\"Connect nodes 0 and 1, and ensure that the tx is effectively conflicted\")\n+        self.connect_nodes(0, 1)\n+        self.sync_blocks([self.nodes[0], self.nodes[1]])\n+        conflicted = self.nodes[0].gettransaction(conflicted_txid)\n+        child_conflicted = self.nodes[0].gettransaction(child_conflicted_txid)\n+        conflicting = self.nodes[0].gettransaction(conflicting_txid_A)\n+        # Conflicted tx should have confirmations set to the confirmations of the most conflicting tx\n+        assert_equal(conflicted[\"confirmations\"], -conflicting[\"confirmations\"])\n+        # Child should inherit conflicted state from parent\n+        assert_equal(child_conflicted[\"confirmations\"], -conflicting[\"confirmations\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159784792",
      "id" : 1159784792,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FIOlY",
      "original_commit_id" : "77a2e522d845eda270b2c03fd7e0a16bc4c00fbb",
      "original_line" : 88,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1374815913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159784792/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-06T13:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159784792",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159787578"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159787578"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit in 77a2e522d845eda270b2c03fd7e0a16bc4c00fbb, I think this is clearer (same with the other arrays of inputs and outputs)\r\n\r\n```suggestion\r\n        inputs_conflicted_tx = [{\"txid\": txid_conflict_from_1, \"vout\": nA}, {\"txid\": txid_conflict_from_2, \"vout\": nB}]\r\n```",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-06T13:19:38Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test conflicts tracking with multilple txn conflicting a conflicted tx.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+)\n+\n+class TxConflicts(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"Send tx from which to conflict outputs later\")\n+        txid_conflict_from_1 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        txid_conflict_from_2 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.generate(self.nodes[0], 1)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Disconnect nodes to broadcast conflicts on their respective chains\")\n+        self.disconnect_nodes(0, 1)\n+        self.disconnect_nodes(2, 1)\n+\n+        self.log.info(\"Create a transaction with conflicted transactions spending outpoints A & B\")\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_1)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        nB = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_2)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs_conflicted_tx = []\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_2, \"vout\": nB})",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159787578",
      "id" : 1159787578,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FIPQ6",
      "original_commit_id" : "77a2e522d845eda270b2c03fd7e0a16bc4c00fbb",
      "original_line" : 41,
      "original_position" : 41,
      "original_start_line" : 39,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1374815913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159787578/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-06T13:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159787578",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159806134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159806134"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry to bikeshed, but I think the naming is a bit hard to follow (\"conflicted\" vs \"conflicting\" don't immediately make sense to me, especially since both sets of transactions get conflicted at some point during the test). Might I suggest names that indicate which input(s) they spend, which node broadcasts them, and what \"generation\" they are? For example\r\n\r\n`tx_AB_0_parent` instead of `conflicted`\r\n`tx_A_1` instead of `conflicting_tx_A`\r\n`tx_B_1` instead of `conflicting_tx_B`\r\n\r\n`C` instead of `nA` for the 19.99998BTC output, because `nA` is already the name of the 10BTC output from one of the funding transactions.\r\n`tx_C_0_child` instead of `child_conflicted`",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-06T13:33:00Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test conflicts tracking with multilple txn conflicting a conflicted tx.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+)\n+\n+class TxConflicts(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"Send tx from which to conflict outputs later\")\n+        txid_conflict_from_1 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        txid_conflict_from_2 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.generate(self.nodes[0], 1)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Disconnect nodes to broadcast conflicts on their respective chains\")\n+        self.disconnect_nodes(0, 1)\n+        self.disconnect_nodes(2, 1)\n+\n+        self.log.info(\"Create a transaction with conflicted transactions spending outpoints A & B\")\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_1)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        nB = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_2)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs_conflicted_tx = []\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+        inputs_conflicting_tx_A = []\n+        inputs_conflicting_tx_A.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicting_tx_B = []\n+        inputs_conflicting_tx_B.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+\n+        outputs_conflicted_tx = {}\n+        outputs_conflicted_tx[self.nodes[0].getnewaddress()] = Decimal(\"19.99998\")\n+        outputs_conflicting_tx_A = {}\n+        outputs_conflicting_tx_A[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        outputs_conflicting_tx_B = {}\n+        outputs_conflicting_tx_B[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+\n+        conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicted_tx, outputs_conflicted_tx))\n+        conflicting_tx_A = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_A, outputs_conflicting_tx_A))\n+        conflicting_tx_B = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_B, outputs_conflicting_tx_B))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159806134",
      "id" : 1159806134,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FITy2",
      "original_commit_id" : "77a2e522d845eda270b2c03fd7e0a16bc4c00fbb",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : 54,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1374815913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159806134/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-06T13:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159806134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159807735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159807735"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        self.sync_blocks()\r\n```",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-06T13:34:01Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test conflicts tracking with multilple txn conflicting a conflicted tx.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+)\n+\n+class TxConflicts(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"Send tx from which to conflict outputs later\")\n+        txid_conflict_from_1 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        txid_conflict_from_2 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.generate(self.nodes[0], 1)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Disconnect nodes to broadcast conflicts on their respective chains\")\n+        self.disconnect_nodes(0, 1)\n+        self.disconnect_nodes(2, 1)\n+\n+        self.log.info(\"Create a transaction with conflicted transactions spending outpoints A & B\")\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_1)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        nB = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_2)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs_conflicted_tx = []\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+        inputs_conflicting_tx_A = []\n+        inputs_conflicting_tx_A.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicting_tx_B = []\n+        inputs_conflicting_tx_B.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+\n+        outputs_conflicted_tx = {}\n+        outputs_conflicted_tx[self.nodes[0].getnewaddress()] = Decimal(\"19.99998\")\n+        outputs_conflicting_tx_A = {}\n+        outputs_conflicting_tx_A[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        outputs_conflicting_tx_B = {}\n+        outputs_conflicting_tx_B[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+\n+        conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicted_tx, outputs_conflicted_tx))\n+        conflicting_tx_A = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_A, outputs_conflicting_tx_A))\n+        conflicting_tx_B = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_B, outputs_conflicting_tx_B))\n+\n+        self.log.info(\"Broadcast conflicted transaction\")\n+        conflicted_txid = self.nodes[0].sendrawtransaction(conflicted[\"hex\"])\n+        self.generate(self.nodes[0], 1, sync_fun=self.no_op)\n+\n+        # Build child conflicted tx\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(conflicted_txid)[\"details\"] if tx_out[\"amount\"] == Decimal(\"19.99998\"))\n+        inputs_child_conflicted = []\n+        inputs_child_conflicted.append({\"txid\": conflicted_txid, \"vout\": nA})\n+        outputs_child_conflicted = {}\n+        outputs_child_conflicted[self.nodes[0].getnewaddress()] = Decimal(\"19.99996\")\n+        child_conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_child_conflicted, outputs_child_conflicted))\n+        child_conflicted_txid = self.nodes[0].sendrawtransaction(child_conflicted[\"hex\"])\n+        self.generate(self.nodes[0], 1, sync_fun=self.no_op)\n+\n+        self.log.info(\"Broadcast conflicting tx to node 1\")\n+        conflicting_txid_A = self.nodes[1].sendrawtransaction(conflicting_tx_A[\"hex\"])\n+        self.generate(self.nodes[1], 4, sync_fun=self.no_op)\n+        self.nodes[1].sendrawtransaction(conflicting_tx_B[\"hex\"])\n+        self.generate(self.nodes[1], 4, sync_fun=self.no_op)\n+\n+        # Reconnect node0 and node1 and check that conflicted_txid is effectively conflicted\n+        self.log.info(\"Connect nodes 0 and 1, and ensure that the tx is effectively conflicted\")\n+        self.connect_nodes(0, 1)\n+        self.sync_blocks([self.nodes[0], self.nodes[1]])\n+        conflicted = self.nodes[0].gettransaction(conflicted_txid)\n+        child_conflicted = self.nodes[0].gettransaction(child_conflicted_txid)\n+        conflicting = self.nodes[0].gettransaction(conflicting_txid_A)\n+        # Conflicted tx should have confirmations set to the confirmations of the most conflicting tx\n+        assert_equal(conflicted[\"confirmations\"], -conflicting[\"confirmations\"])\n+        # Child should inherit conflicted state from parent\n+        assert_equal(child_conflicted[\"confirmations\"], -conflicting[\"confirmations\"])\n+\n+        # Node2 chain without conflicts\n+        self.generate(self.nodes[2], 15, sync_fun=self.no_op)\n+\n+        # Connect node0 and node2 and wait reorg\n+        self.connect_nodes(0, 2)\n+        self.sync_blocks([self.nodes[0], self.nodes[2]])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159807735",
      "id" : 1159807735,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FIUL3",
      "original_commit_id" : "77a2e522d845eda270b2c03fd7e0a16bc4c00fbb",
      "original_line" : 95,
      "original_position" : 95,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1374815913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159807735/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-06T13:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159807735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159814534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159814534"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 49f8af533f2e6370f4ae5220f5c706e30b90d06c\r\n\r\nno need for const reference to integer\r\n",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-06T13:39:49Z",
      "diff_hunk" : "@@ -1465,8 +1465,32 @@ void CWallet::blockDisconnected(const interfaces::BlockInfo& block)\n     // future with a stickier abandoned state or even removing abandontransaction call.\n     m_last_block_processed_height = block.height - 1;\n     m_last_block_processed = *Assert(block.prev_hash);\n+\n+    const int& disconnect_height = block.height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1159814534",
      "id" : 1159814534,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FIV2G",
      "original_commit_id" : "49f8af533f2e6370f4ae5220f5c706e30b90d06c",
      "original_line" : 1469,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1374815913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159814534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-06T13:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1159814534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062770"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've updated it to this, this is much more clear.",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-08T04:54:34Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test conflicts tracking with multilple txn conflicting a conflicted tx.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062770",
      "id" : 1161062770,
      "in_reply_to_id" : 1159765529,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FNGly",
      "original_commit_id" : "77a2e522d845eda270b2c03fd7e0a16bc4c00fbb",
      "original_line" : 6,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1376712428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062770/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-08T04:54:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062770",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062811"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062811"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've added a check for this.",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-08T04:54:48Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test conflicts tracking with multilple txn conflicting a conflicted tx.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+)\n+\n+class TxConflicts(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"Send tx from which to conflict outputs later\")\n+        txid_conflict_from_1 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        txid_conflict_from_2 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.generate(self.nodes[0], 1)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Disconnect nodes to broadcast conflicts on their respective chains\")\n+        self.disconnect_nodes(0, 1)\n+        self.disconnect_nodes(2, 1)\n+\n+        self.log.info(\"Create a transaction with conflicted transactions spending outpoints A & B\")\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_1)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        nB = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_2)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs_conflicted_tx = []\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+        inputs_conflicting_tx_A = []\n+        inputs_conflicting_tx_A.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicting_tx_B = []\n+        inputs_conflicting_tx_B.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+\n+        outputs_conflicted_tx = {}\n+        outputs_conflicted_tx[self.nodes[0].getnewaddress()] = Decimal(\"19.99998\")\n+        outputs_conflicting_tx_A = {}\n+        outputs_conflicting_tx_A[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        outputs_conflicting_tx_B = {}\n+        outputs_conflicting_tx_B[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+\n+        conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicted_tx, outputs_conflicted_tx))\n+        conflicting_tx_A = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_A, outputs_conflicting_tx_A))\n+        conflicting_tx_B = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_B, outputs_conflicting_tx_B))\n+\n+        self.log.info(\"Broadcast conflicted transaction\")\n+        conflicted_txid = self.nodes[0].sendrawtransaction(conflicted[\"hex\"])\n+        self.generate(self.nodes[0], 1, sync_fun=self.no_op)\n+\n+        # Build child conflicted tx\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(conflicted_txid)[\"details\"] if tx_out[\"amount\"] == Decimal(\"19.99998\"))\n+        inputs_child_conflicted = []\n+        inputs_child_conflicted.append({\"txid\": conflicted_txid, \"vout\": nA})\n+        outputs_child_conflicted = {}\n+        outputs_child_conflicted[self.nodes[0].getnewaddress()] = Decimal(\"19.99996\")\n+        child_conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_child_conflicted, outputs_child_conflicted))\n+        child_conflicted_txid = self.nodes[0].sendrawtransaction(child_conflicted[\"hex\"])\n+        self.generate(self.nodes[0], 1, sync_fun=self.no_op)\n+\n+        self.log.info(\"Broadcast conflicting tx to node 1\")\n+        conflicting_txid_A = self.nodes[1].sendrawtransaction(conflicting_tx_A[\"hex\"])\n+        self.generate(self.nodes[1], 4, sync_fun=self.no_op)\n+        self.nodes[1].sendrawtransaction(conflicting_tx_B[\"hex\"])\n+        self.generate(self.nodes[1], 4, sync_fun=self.no_op)\n+\n+        # Reconnect node0 and node1 and check that conflicted_txid is effectively conflicted\n+        self.log.info(\"Connect nodes 0 and 1, and ensure that the tx is effectively conflicted\")\n+        self.connect_nodes(0, 1)\n+        self.sync_blocks([self.nodes[0], self.nodes[1]])\n+        conflicted = self.nodes[0].gettransaction(conflicted_txid)\n+        child_conflicted = self.nodes[0].gettransaction(child_conflicted_txid)\n+        conflicting = self.nodes[0].gettransaction(conflicting_txid_A)\n+        # Conflicted tx should have confirmations set to the confirmations of the most conflicting tx\n+        assert_equal(conflicted[\"confirmations\"], -conflicting[\"confirmations\"])\n+        # Child should inherit conflicted state from parent\n+        assert_equal(child_conflicted[\"confirmations\"], -conflicting[\"confirmations\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062811",
      "id" : 1161062811,
      "in_reply_to_id" : 1159784792,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FNGmb",
      "original_commit_id" : "77a2e522d845eda270b2c03fd7e0a16bc4c00fbb",
      "original_line" : 88,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1376712439,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062811/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-08T04:54:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062833"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-08T04:55:00Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test conflicts tracking with multilple txn conflicting a conflicted tx.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+)\n+\n+class TxConflicts(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"Send tx from which to conflict outputs later\")\n+        txid_conflict_from_1 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        txid_conflict_from_2 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.generate(self.nodes[0], 1)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Disconnect nodes to broadcast conflicts on their respective chains\")\n+        self.disconnect_nodes(0, 1)\n+        self.disconnect_nodes(2, 1)\n+\n+        self.log.info(\"Create a transaction with conflicted transactions spending outpoints A & B\")\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_1)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        nB = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_2)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs_conflicted_tx = []\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_2, \"vout\": nB})",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062833",
      "id" : 1161062833,
      "in_reply_to_id" : 1159787578,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FNGmx",
      "original_commit_id" : "77a2e522d845eda270b2c03fd7e0a16bc4c00fbb",
      "original_line" : 41,
      "original_position" : 41,
      "original_start_line" : 39,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1376712446,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062833/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-08T04:55:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062833",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062927"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree, the naming here was a bit confusing. It should be fixed now.",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-08T04:55:58Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test conflicts tracking with multilple txn conflicting a conflicted tx.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+)\n+\n+class TxConflicts(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"Send tx from which to conflict outputs later\")\n+        txid_conflict_from_1 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        txid_conflict_from_2 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.generate(self.nodes[0], 1)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Disconnect nodes to broadcast conflicts on their respective chains\")\n+        self.disconnect_nodes(0, 1)\n+        self.disconnect_nodes(2, 1)\n+\n+        self.log.info(\"Create a transaction with conflicted transactions spending outpoints A & B\")\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_1)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        nB = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_2)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs_conflicted_tx = []\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+        inputs_conflicting_tx_A = []\n+        inputs_conflicting_tx_A.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicting_tx_B = []\n+        inputs_conflicting_tx_B.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+\n+        outputs_conflicted_tx = {}\n+        outputs_conflicted_tx[self.nodes[0].getnewaddress()] = Decimal(\"19.99998\")\n+        outputs_conflicting_tx_A = {}\n+        outputs_conflicting_tx_A[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        outputs_conflicting_tx_B = {}\n+        outputs_conflicting_tx_B[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+\n+        conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicted_tx, outputs_conflicted_tx))\n+        conflicting_tx_A = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_A, outputs_conflicting_tx_A))\n+        conflicting_tx_B = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_B, outputs_conflicting_tx_B))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062927",
      "id" : 1161062927,
      "in_reply_to_id" : 1159806134,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FNGoP",
      "original_commit_id" : "77a2e522d845eda270b2c03fd7e0a16bc4c00fbb",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : 54,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1376712520,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062927/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-08T04:55:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062954"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done both here and one other place.",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-08T04:56:21Z",
      "diff_hunk" : "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test conflicts tracking with multilple txn conflicting a conflicted tx.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+        assert_equal,\n+)\n+\n+class TxConflicts(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info(\"Send tx from which to conflict outputs later\")\n+        txid_conflict_from_1 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        txid_conflict_from_2 = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.generate(self.nodes[0], 1)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Disconnect nodes to broadcast conflicts on their respective chains\")\n+        self.disconnect_nodes(0, 1)\n+        self.disconnect_nodes(2, 1)\n+\n+        self.log.info(\"Create a transaction with conflicted transactions spending outpoints A & B\")\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_1)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        nB = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(txid_conflict_from_2)[\"details\"] if tx_out[\"amount\"] == Decimal(\"10\"))\n+        inputs_conflicted_tx = []\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicted_tx.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+        inputs_conflicting_tx_A = []\n+        inputs_conflicting_tx_A.append({\"txid\": txid_conflict_from_1, \"vout\": nA})\n+        inputs_conflicting_tx_B = []\n+        inputs_conflicting_tx_B.append({\"txid\": txid_conflict_from_2, \"vout\": nB})\n+\n+        outputs_conflicted_tx = {}\n+        outputs_conflicted_tx[self.nodes[0].getnewaddress()] = Decimal(\"19.99998\")\n+        outputs_conflicting_tx_A = {}\n+        outputs_conflicting_tx_A[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+        outputs_conflicting_tx_B = {}\n+        outputs_conflicting_tx_B[self.nodes[0].getnewaddress()] = Decimal(\"9.99998\")\n+\n+        conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicted_tx, outputs_conflicted_tx))\n+        conflicting_tx_A = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_A, outputs_conflicting_tx_A))\n+        conflicting_tx_B = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_conflicting_tx_B, outputs_conflicting_tx_B))\n+\n+        self.log.info(\"Broadcast conflicted transaction\")\n+        conflicted_txid = self.nodes[0].sendrawtransaction(conflicted[\"hex\"])\n+        self.generate(self.nodes[0], 1, sync_fun=self.no_op)\n+\n+        # Build child conflicted tx\n+        nA = next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(conflicted_txid)[\"details\"] if tx_out[\"amount\"] == Decimal(\"19.99998\"))\n+        inputs_child_conflicted = []\n+        inputs_child_conflicted.append({\"txid\": conflicted_txid, \"vout\": nA})\n+        outputs_child_conflicted = {}\n+        outputs_child_conflicted[self.nodes[0].getnewaddress()] = Decimal(\"19.99996\")\n+        child_conflicted = self.nodes[0].signrawtransactionwithwallet(self.nodes[0].createrawtransaction(inputs_child_conflicted, outputs_child_conflicted))\n+        child_conflicted_txid = self.nodes[0].sendrawtransaction(child_conflicted[\"hex\"])\n+        self.generate(self.nodes[0], 1, sync_fun=self.no_op)\n+\n+        self.log.info(\"Broadcast conflicting tx to node 1\")\n+        conflicting_txid_A = self.nodes[1].sendrawtransaction(conflicting_tx_A[\"hex\"])\n+        self.generate(self.nodes[1], 4, sync_fun=self.no_op)\n+        self.nodes[1].sendrawtransaction(conflicting_tx_B[\"hex\"])\n+        self.generate(self.nodes[1], 4, sync_fun=self.no_op)\n+\n+        # Reconnect node0 and node1 and check that conflicted_txid is effectively conflicted\n+        self.log.info(\"Connect nodes 0 and 1, and ensure that the tx is effectively conflicted\")\n+        self.connect_nodes(0, 1)\n+        self.sync_blocks([self.nodes[0], self.nodes[1]])\n+        conflicted = self.nodes[0].gettransaction(conflicted_txid)\n+        child_conflicted = self.nodes[0].gettransaction(child_conflicted_txid)\n+        conflicting = self.nodes[0].gettransaction(conflicting_txid_A)\n+        # Conflicted tx should have confirmations set to the confirmations of the most conflicting tx\n+        assert_equal(conflicted[\"confirmations\"], -conflicting[\"confirmations\"])\n+        # Child should inherit conflicted state from parent\n+        assert_equal(child_conflicted[\"confirmations\"], -conflicting[\"confirmations\"])\n+\n+        # Node2 chain without conflicts\n+        self.generate(self.nodes[2], 15, sync_fun=self.no_op)\n+\n+        # Connect node0 and node2 and wait reorg\n+        self.connect_nodes(0, 2)\n+        self.sync_blocks([self.nodes[0], self.nodes[2]])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062954",
      "id" : 1161062954,
      "in_reply_to_id" : 1159807735,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FNGoq",
      "original_commit_id" : "77a2e522d845eda270b2c03fd7e0a16bc4c00fbb",
      "original_line" : 95,
      "original_position" : 95,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1376712542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062954/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-08T04:56:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062971"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062971"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed",
      "commit_id" : "9895be8d792b9cf5c6ed9779e631b4d81d7d894a",
      "created_at" : "2023-04-08T04:56:33Z",
      "diff_hunk" : "@@ -1465,8 +1465,32 @@ void CWallet::blockDisconnected(const interfaces::BlockInfo& block)\n     // future with a stickier abandoned state or even removing abandontransaction call.\n     m_last_block_processed_height = block.height - 1;\n     m_last_block_processed = *Assert(block.prev_hash);\n+\n+    const int& disconnect_height = block.height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#discussion_r1161062971",
      "id" : 1161062971,
      "in_reply_to_id" : 1159814534,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FNGo7",
      "original_commit_id" : "49f8af533f2e6370f4ae5220f5c706e30b90d06c",
      "original_line" : 1469,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1376712557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27145",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062971/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-08T04:56:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161062971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the review @glozow, I have addressed your comments and also made a modification to `RecursiveUpdateTxState` which will allow it to be more extensible.",
      "created_at" : "2023-04-08T04:59:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27145#issuecomment-1500792114",
      "id" : 1500792114,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27145",
      "node_id" : "IC_kwDOABII585ZdEUy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1500792114/reactions"
      },
      "updated_at" : "2023-04-08T04:59:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1500792114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   }
]
