[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jamesob](https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1433262848), [jonatack](https://github.com/bitcoin/bitcoin/pull/27109#pullrequestreview-1301984484), [RandyMcMillan](https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1433504037), [kristapsk](https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1433509860), [theStack](https://github.com/bitcoin/bitcoin/pull/27109#pullrequestreview-1302901104), [brunoerg](https://github.com/bitcoin/bitcoin/pull/27109#pullrequestreview-1305801592) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2023-02-16T12:49:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1433038607",
      "id" : 1433038607,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585Vam8P",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433038607/reactions"
      },
      "updated_at" : "2023-02-20T13:27:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433038607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nProbably worth just squashing this down to 1 commit.",
      "created_at" : "2023-02-16T15:26:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1433262848",
      "id" : 1433262848,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585VbdsA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433262848/reactions"
      },
      "updated_at" : "2023-02-16T15:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433262848",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108648411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108648411"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe for `OP_0`, `OP_1`..`OP_16`, `OP_1NEGATE`, elaborate a bit by stating they they push an element onto the stack, and perhaps give the exact byte encoding rather than just the number.\r\n\r\nE.g. `OP_3 = 0x53, // Push \"\\x03\" onto the stack (which is interpreted as 3 by numerical opcodes)`",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T15:31:29Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // empty array of bytes",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108648411",
      "id" : 1108648411,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CFKHb",
      "original_commit_id" : "ea38a2d75aca7125d60ae8f918aaaf95f4f28a99",
      "original_line" : 72,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301715668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108648411/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T15:36:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108648411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108651477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108651477"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also, perhaps use `/**< ... */` or `//!< ..` so that doxygen will pick the descriptions up.",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T15:32:56Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // empty array of bytes",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108651477",
      "id" : 1108651477,
      "in_reply_to_id" : 1108648411,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CFK3V",
      "original_commit_id" : "ea38a2d75aca7125d60ae8f918aaaf95f4f28a99",
      "original_line" : 72,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301715668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108651477/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T15:36:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108651477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108652111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108652111"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I can't really parse what you're trying to say here.",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T15:33:24Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // empty array of bytes\n+    OP_FALSE = OP_0, // empty array of bytes\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // -1\n+    OP_RESERVED = 0x50, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_1 = 0x51, // 1\n+    OP_TRUE=OP_1, // 1\n+    OP_2 = 0x52, // 2\n+    OP_3 = 0x53, // 3\n+    OP_4 = 0x54, // 4\n+    OP_5 = 0x55, // 5\n+    OP_6 = 0x56, // 6\n+    OP_7 = 0x57, // 7\n+    OP_8 = 0x58, // 8\n+    OP_9 = 0x59, // 9\n+    OP_10 = 0x5a, // 10\n+    OP_11 = 0x5b, // 11\n+    OP_12 = 0x5c, // 12\n+    OP_13 = 0x5d, // 13\n+    OP_14 = 0x5e, // 14\n+    OP_15 = 0x5f, // 15\n+    OP_16 = 0x60, // 16\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61, // do nothing\n+    OP_VER = 0x62, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63, // if top stack value true, execute the statement\n+    OP_NOTIF = 0x64, // if top stack value false, execute the statement\n+    OP_VERIF = 0x65, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_VERNOTIF = 0x66, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_ELSE = 0x67, // if neither OP_IF, OP_NOTIF, OP_ELSE not executed, execute the statement",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108652111",
      "id" : 1108652111,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CFLBP",
      "original_commit_id" : "ea38a2d75aca7125d60ae8f918aaaf95f4f28a99",
      "original_line" : 104,
      "original_position" : 70,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301715668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108652111/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T15:36:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108652111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108652728"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108652728"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe add whether or not it also applies in unexecuted branches?",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T15:33:53Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // empty array of bytes\n+    OP_FALSE = OP_0, // empty array of bytes\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // -1\n+    OP_RESERVED = 0x50, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_1 = 0x51, // 1\n+    OP_TRUE=OP_1, // 1\n+    OP_2 = 0x52, // 2\n+    OP_3 = 0x53, // 3\n+    OP_4 = 0x54, // 4\n+    OP_5 = 0x55, // 5\n+    OP_6 = 0x56, // 6\n+    OP_7 = 0x57, // 7\n+    OP_8 = 0x58, // 8\n+    OP_9 = 0x59, // 9\n+    OP_10 = 0x5a, // 10\n+    OP_11 = 0x5b, // 11\n+    OP_12 = 0x5c, // 12\n+    OP_13 = 0x5d, // 13\n+    OP_14 = 0x5e, // 14\n+    OP_15 = 0x5f, // 15\n+    OP_16 = 0x60, // 16\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61, // do nothing\n+    OP_VER = 0x62, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63, // if top stack value true, execute the statement\n+    OP_NOTIF = 0x64, // if top stack value false, execute the statement\n+    OP_VERIF = 0x65, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_VERNOTIF = 0x66, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_ELSE = 0x67, // if neither OP_IF, OP_NOTIF, OP_ELSE not executed, execute the statement\n+    OP_ENDIF = 0x68, // end if/else block(must include, otherwise tx become invalid)\n+    OP_VERIFY = 0x69, // mark tx invalid if top stack value false\n+    OP_RETURN = 0x6a, // mark tx invalid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108652728",
      "id" : 1108652728,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CFLK4",
      "original_commit_id" : "ea38a2d75aca7125d60ae8f918aaaf95f4f28a99",
      "original_line" : 107,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301715668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108652728/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T15:36:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108652728",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108653671"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108653671"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"second-top\" sounds a bit strange to me; perhaps \"second from the top\"?\r\n\r\nAlternatively: \"remove the two top stack items\" ?",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T15:34:35Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // empty array of bytes\n+    OP_FALSE = OP_0, // empty array of bytes\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // -1\n+    OP_RESERVED = 0x50, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_1 = 0x51, // 1\n+    OP_TRUE=OP_1, // 1\n+    OP_2 = 0x52, // 2\n+    OP_3 = 0x53, // 3\n+    OP_4 = 0x54, // 4\n+    OP_5 = 0x55, // 5\n+    OP_6 = 0x56, // 6\n+    OP_7 = 0x57, // 7\n+    OP_8 = 0x58, // 8\n+    OP_9 = 0x59, // 9\n+    OP_10 = 0x5a, // 10\n+    OP_11 = 0x5b, // 11\n+    OP_12 = 0x5c, // 12\n+    OP_13 = 0x5d, // 13\n+    OP_14 = 0x5e, // 14\n+    OP_15 = 0x5f, // 15\n+    OP_16 = 0x60, // 16\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61, // do nothing\n+    OP_VER = 0x62, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63, // if top stack value true, execute the statement\n+    OP_NOTIF = 0x64, // if top stack value false, execute the statement\n+    OP_VERIF = 0x65, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_VERNOTIF = 0x66, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_ELSE = 0x67, // if neither OP_IF, OP_NOTIF, OP_ELSE not executed, execute the statement\n+    OP_ENDIF = 0x68, // end if/else block(must include, otherwise tx become invalid)\n+    OP_VERIFY = 0x69, // mark tx invalid if top stack value false\n+    OP_RETURN = 0x6a, // mark tx invalid\n \n     // stack ops\n-    OP_TOALTSTACK = 0x6b,\n-    OP_FROMALTSTACK = 0x6c,\n-    OP_2DROP = 0x6d,\n-    OP_2DUP = 0x6e,\n-    OP_3DUP = 0x6f,\n-    OP_2OVER = 0x70,\n-    OP_2ROT = 0x71,\n-    OP_2SWAP = 0x72,\n-    OP_IFDUP = 0x73,\n-    OP_DEPTH = 0x74,\n-    OP_DROP = 0x75,\n-    OP_DUP = 0x76,\n-    OP_NIP = 0x77,\n-    OP_OVER = 0x78,\n-    OP_PICK = 0x79,\n-    OP_ROLL = 0x7a,\n-    OP_ROT = 0x7b,\n-    OP_SWAP = 0x7c,\n-    OP_TUCK = 0x7d,\n+    OP_TOALTSTACK = 0x6b, // pop an item from the main stack onto the alt stack\n+    OP_FROMALTSTACK = 0x6c, // pop an item from the alt stack onto the main stack\n+    OP_2DROP = 0x6d, // remove top and second-top stack item",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108653671",
      "id" : 1108653671,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CFLZn",
      "original_commit_id" : "ea38a2d75aca7125d60ae8f918aaaf95f4f28a99",
      "original_line" : 112,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301715668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108653671/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T15:36:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108653671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108654824"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108654824"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps add whether this also applies in unexecuted branches? What does the unconditionally refer to?",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T15:35:30Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // empty array of bytes\n+    OP_FALSE = OP_0, // empty array of bytes\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // -1\n+    OP_RESERVED = 0x50, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_1 = 0x51, // 1\n+    OP_TRUE=OP_1, // 1\n+    OP_2 = 0x52, // 2\n+    OP_3 = 0x53, // 3\n+    OP_4 = 0x54, // 4\n+    OP_5 = 0x55, // 5\n+    OP_6 = 0x56, // 6\n+    OP_7 = 0x57, // 7\n+    OP_8 = 0x58, // 8\n+    OP_9 = 0x59, // 9\n+    OP_10 = 0x5a, // 10\n+    OP_11 = 0x5b, // 11\n+    OP_12 = 0x5c, // 12\n+    OP_13 = 0x5d, // 13\n+    OP_14 = 0x5e, // 14\n+    OP_15 = 0x5f, // 15\n+    OP_16 = 0x60, // 16\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61, // do nothing\n+    OP_VER = 0x62, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63, // if top stack value true, execute the statement\n+    OP_NOTIF = 0x64, // if top stack value false, execute the statement\n+    OP_VERIF = 0x65, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_VERNOTIF = 0x66, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_ELSE = 0x67, // if neither OP_IF, OP_NOTIF, OP_ELSE not executed, execute the statement\n+    OP_ENDIF = 0x68, // end if/else block(must include, otherwise tx become invalid)\n+    OP_VERIFY = 0x69, // mark tx invalid if top stack value false\n+    OP_RETURN = 0x6a, // mark tx invalid\n \n     // stack ops\n-    OP_TOALTSTACK = 0x6b,\n-    OP_FROMALTSTACK = 0x6c,\n-    OP_2DROP = 0x6d,\n-    OP_2DUP = 0x6e,\n-    OP_3DUP = 0x6f,\n-    OP_2OVER = 0x70,\n-    OP_2ROT = 0x71,\n-    OP_2SWAP = 0x72,\n-    OP_IFDUP = 0x73,\n-    OP_DEPTH = 0x74,\n-    OP_DROP = 0x75,\n-    OP_DUP = 0x76,\n-    OP_NIP = 0x77,\n-    OP_OVER = 0x78,\n-    OP_PICK = 0x79,\n-    OP_ROLL = 0x7a,\n-    OP_ROT = 0x7b,\n-    OP_SWAP = 0x7c,\n-    OP_TUCK = 0x7d,\n+    OP_TOALTSTACK = 0x6b, // pop an item from the main stack onto the alt stack\n+    OP_FROMALTSTACK = 0x6c, // pop an item from the alt stack onto the main stack\n+    OP_2DROP = 0x6d, // remove top and second-top stack item\n+    OP_2DUP = 0x6e, // duplicate top and second-top stack item\n+    OP_3DUP = 0x6f, // duplicate top, second-top and third-top stack item\n+    OP_2OVER = 0x70, // copy third and fourth top stack items to the top\n+    OP_2ROT = 0x71, // move fifth and sixth top stack items to the top\n+    OP_2SWAP = 0x72, // swap: top and second-top <-> third and fourth top items of stack\n+    OP_IFDUP = 0x73, // if top stack value != 0, duplicate it\n+    OP_DEPTH = 0x74, // push the current number of stack items onto the stack\n+    OP_DROP = 0x75, // remove top stack item\n+    OP_DUP = 0x76, // duplicate top stack item\n+    OP_NIP = 0x77, // remove second-top stack item\n+    OP_OVER = 0x78, // copy second-top stack item to the top\n+    OP_PICK = 0x79, // copy item N back in stack to the top\n+    OP_ROLL = 0x7a, // move item N back in stack\n+    OP_ROT = 0x7b, // move third-top stack item to the top\n+    OP_SWAP = 0x7c, // swap top two items of stack\n+    OP_TUCK = 0x7d, // copy top stack item and insert before second-top\n \n     // splice ops\n-    OP_CAT = 0x7e,\n-    OP_SUBSTR = 0x7f,\n-    OP_LEFT = 0x80,\n-    OP_RIGHT = 0x81,\n-    OP_SIZE = 0x82,\n+    OP_CAT = 0x7e, // disabled, fail the script unconditionally",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108654824",
      "id" : 1108654824,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CFLro",
      "original_commit_id" : "ea38a2d75aca7125d60ae8f918aaaf95f4f28a99",
      "original_line" : 131,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301715668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108654824/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T15:36:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108654824",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108656534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108656534"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps clarify that this does not pop the top element whose size is inspected.",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T15:36:45Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // empty array of bytes\n+    OP_FALSE = OP_0, // empty array of bytes\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // -1\n+    OP_RESERVED = 0x50, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_1 = 0x51, // 1\n+    OP_TRUE=OP_1, // 1\n+    OP_2 = 0x52, // 2\n+    OP_3 = 0x53, // 3\n+    OP_4 = 0x54, // 4\n+    OP_5 = 0x55, // 5\n+    OP_6 = 0x56, // 6\n+    OP_7 = 0x57, // 7\n+    OP_8 = 0x58, // 8\n+    OP_9 = 0x59, // 9\n+    OP_10 = 0x5a, // 10\n+    OP_11 = 0x5b, // 11\n+    OP_12 = 0x5c, // 12\n+    OP_13 = 0x5d, // 13\n+    OP_14 = 0x5e, // 14\n+    OP_15 = 0x5f, // 15\n+    OP_16 = 0x60, // 16\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61, // do nothing\n+    OP_VER = 0x62, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63, // if top stack value true, execute the statement\n+    OP_NOTIF = 0x64, // if top stack value false, execute the statement\n+    OP_VERIF = 0x65, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_VERNOTIF = 0x66, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_ELSE = 0x67, // if neither OP_IF, OP_NOTIF, OP_ELSE not executed, execute the statement\n+    OP_ENDIF = 0x68, // end if/else block(must include, otherwise tx become invalid)\n+    OP_VERIFY = 0x69, // mark tx invalid if top stack value false\n+    OP_RETURN = 0x6a, // mark tx invalid\n \n     // stack ops\n-    OP_TOALTSTACK = 0x6b,\n-    OP_FROMALTSTACK = 0x6c,\n-    OP_2DROP = 0x6d,\n-    OP_2DUP = 0x6e,\n-    OP_3DUP = 0x6f,\n-    OP_2OVER = 0x70,\n-    OP_2ROT = 0x71,\n-    OP_2SWAP = 0x72,\n-    OP_IFDUP = 0x73,\n-    OP_DEPTH = 0x74,\n-    OP_DROP = 0x75,\n-    OP_DUP = 0x76,\n-    OP_NIP = 0x77,\n-    OP_OVER = 0x78,\n-    OP_PICK = 0x79,\n-    OP_ROLL = 0x7a,\n-    OP_ROT = 0x7b,\n-    OP_SWAP = 0x7c,\n-    OP_TUCK = 0x7d,\n+    OP_TOALTSTACK = 0x6b, // pop an item from the main stack onto the alt stack\n+    OP_FROMALTSTACK = 0x6c, // pop an item from the alt stack onto the main stack\n+    OP_2DROP = 0x6d, // remove top and second-top stack item\n+    OP_2DUP = 0x6e, // duplicate top and second-top stack item\n+    OP_3DUP = 0x6f, // duplicate top, second-top and third-top stack item\n+    OP_2OVER = 0x70, // copy third and fourth top stack items to the top\n+    OP_2ROT = 0x71, // move fifth and sixth top stack items to the top\n+    OP_2SWAP = 0x72, // swap: top and second-top <-> third and fourth top items of stack\n+    OP_IFDUP = 0x73, // if top stack value != 0, duplicate it\n+    OP_DEPTH = 0x74, // push the current number of stack items onto the stack\n+    OP_DROP = 0x75, // remove top stack item\n+    OP_DUP = 0x76, // duplicate top stack item\n+    OP_NIP = 0x77, // remove second-top stack item\n+    OP_OVER = 0x78, // copy second-top stack item to the top\n+    OP_PICK = 0x79, // copy item N back in stack to the top\n+    OP_ROLL = 0x7a, // move item N back in stack\n+    OP_ROT = 0x7b, // move third-top stack item to the top\n+    OP_SWAP = 0x7c, // swap top two items of stack\n+    OP_TUCK = 0x7d, // copy top stack item and insert before second-top\n \n     // splice ops\n-    OP_CAT = 0x7e,\n-    OP_SUBSTR = 0x7f,\n-    OP_LEFT = 0x80,\n-    OP_RIGHT = 0x81,\n-    OP_SIZE = 0x82,\n+    OP_CAT = 0x7e, // disabled, fail the script unconditionally\n+    OP_SUBSTR = 0x7f, // disabled, fail the script unconditionally\n+    OP_LEFT = 0x80, // disabled, fail the script unconditionally\n+    OP_RIGHT = 0x81, // disabled, fail the script unconditionally\n+    OP_SIZE = 0x82, // push the length of top stack item",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108656534",
      "id" : 1108656534,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CFMGW",
      "original_commit_id" : "ea38a2d75aca7125d60ae8f918aaaf95f4f28a99",
      "original_line" : 135,
      "original_position" : 125,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301715668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108656534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T15:36:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108656534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Grateful for kind feedbacks, @sipa\r\nI made commit to reflect feedbacks, and squashed this PR down to 1 commit!",
      "created_at" : "2023-02-16T16:56:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1433401897",
      "id" : 1433401897,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585Vb_op",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433401897/reactions"
      },
      "updated_at" : "2023-02-16T17:23:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433401897",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73169711?v=4",
         "events_url" : "https://api.github.com/users/Hyunhum/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Hyunhum/followers",
         "following_url" : "https://api.github.com/users/Hyunhum/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Hyunhum/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Hyunhum",
         "id" : 73169711,
         "login" : "Hyunhum",
         "node_id" : "MDQ6VXNlcjczMTY5NzEx",
         "organizations_url" : "https://api.github.com/users/Hyunhum/orgs",
         "received_events_url" : "https://api.github.com/users/Hyunhum/received_events",
         "repos_url" : "https://api.github.com/users/Hyunhum/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Hyunhum/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Hyunhum/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Hyunhum"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108823232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108823232"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here and elsewhere in your changes.\r\n```suggestion\r\n    OP_RESERVED = 0x50, // mark tx invalid unless occurring in an unexecuted OP_IF branch\r\n```\r\n\r\n(You can run a spelling check by running `test/lint/lint-spelling.py` from the repository root.)",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T17:44:23Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_FALSE = OP_0, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // push \"\\x-1\" onto the stack (which is interpreted as -1 by numerical opcodes)\n+    OP_RESERVED = 0x50, // mark tx invalid unless occuring in an unexecuted OP_IF branch",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108823232",
      "id" : 1108823232,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CF0zA",
      "original_commit_id" : "4e8f9cb8db6c12e77cba3b7b1e25bc32de75b5ce",
      "original_line" : 78,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301984484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108823232/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T17:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108823232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108827460"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108827460"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    OP_ENDIF = 0x68, // end if/else block (must include, otherwise tx becomes invalid)\r\n```",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T17:46:36Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_FALSE = OP_0, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // push \"\\x-1\" onto the stack (which is interpreted as -1 by numerical opcodes)\n+    OP_RESERVED = 0x50, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_1 = 0x51, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_TRUE=OP_1, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_2 = 0x52, // push \"\\x02\" onto the stack (which is interpreted as 2 by numerical opcodes)\n+    OP_3 = 0x53, // push \"\\x03\" onto the stack (which is interpreted as 3 by numerical opcodes)\n+    OP_4 = 0x54, // push \"\\x04\" onto the stack (which is interpreted as 4 by numerical opcodes)\n+    OP_5 = 0x55, // push \"\\x05\" onto the stack (which is interpreted as 5 by numerical opcodes)\n+    OP_6 = 0x56, // push \"\\x06\" onto the stack (which is interpreted as 6 by numerical opcodes)\n+    OP_7 = 0x57, // push \"\\x07\" onto the stack (which is interpreted as 7 by numerical opcodes)\n+    OP_8 = 0x58, // push \"\\x08\" onto the stack (which is interpreted as 8 by numerical opcodes)\n+    OP_9 = 0x59, // push \"\\x09\" onto the stack (which is interpreted as 9 by numerical opcodes)\n+    OP_10 = 0x5a, // push \"\\x0A\" onto the stack (which is interpreted as 10 by numerical opcodes)\n+    OP_11 = 0x5b, // push \"\\x0B\" onto the stack (which is interpreted as 11 by numerical opcodes)\n+    OP_12 = 0x5c, // push \"\\x0C\" onto the stack (which is interpreted as 12 by numerical opcodes)\n+    OP_13 = 0x5d, // push \"\\x0D\" onto the stack (which is interpreted as 13 by numerical opcodes)\n+    OP_14 = 0x5e, // push \"\\x0E\" onto the stack (which is interpreted as 14 by numerical opcodes)\n+    OP_15 = 0x5f, // push \"\\x0F\" onto the stack (which is interpreted as 15 by numerical opcodes)\n+    OP_16 = 0x60, // push \"\\x10\" onto the stack (which is interpreted as 16 by numerical opcodes)\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61, // do nothing\n+    OP_VER = 0x62, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63, // if top stack value true, execute the statement\n+    OP_NOTIF = 0x64, // if top stack value false, execute the statement\n+    OP_VERIF = 0x65, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_VERNOTIF = 0x66, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_ELSE = 0x67, // if the preceding OP_IF, OP_NOTIF or OP_ELSE not executed, execute the statement\n+    OP_ENDIF = 0x68, // end if/else block(must include, otherwise tx become invalid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108827460",
      "id" : 1108827460,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CF11E",
      "original_commit_id" : "4e8f9cb8db6c12e77cba3b7b1e25bc32de75b5ce",
      "original_line" : 105,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301984484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108827460/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T17:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108827460",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108829461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108829461"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    OP_3DUP = 0x6f, // duplicate top, second from top and third from top stack items\r\n```",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T17:47:45Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_FALSE = OP_0, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // push \"\\x-1\" onto the stack (which is interpreted as -1 by numerical opcodes)\n+    OP_RESERVED = 0x50, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_1 = 0x51, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_TRUE=OP_1, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_2 = 0x52, // push \"\\x02\" onto the stack (which is interpreted as 2 by numerical opcodes)\n+    OP_3 = 0x53, // push \"\\x03\" onto the stack (which is interpreted as 3 by numerical opcodes)\n+    OP_4 = 0x54, // push \"\\x04\" onto the stack (which is interpreted as 4 by numerical opcodes)\n+    OP_5 = 0x55, // push \"\\x05\" onto the stack (which is interpreted as 5 by numerical opcodes)\n+    OP_6 = 0x56, // push \"\\x06\" onto the stack (which is interpreted as 6 by numerical opcodes)\n+    OP_7 = 0x57, // push \"\\x07\" onto the stack (which is interpreted as 7 by numerical opcodes)\n+    OP_8 = 0x58, // push \"\\x08\" onto the stack (which is interpreted as 8 by numerical opcodes)\n+    OP_9 = 0x59, // push \"\\x09\" onto the stack (which is interpreted as 9 by numerical opcodes)\n+    OP_10 = 0x5a, // push \"\\x0A\" onto the stack (which is interpreted as 10 by numerical opcodes)\n+    OP_11 = 0x5b, // push \"\\x0B\" onto the stack (which is interpreted as 11 by numerical opcodes)\n+    OP_12 = 0x5c, // push \"\\x0C\" onto the stack (which is interpreted as 12 by numerical opcodes)\n+    OP_13 = 0x5d, // push \"\\x0D\" onto the stack (which is interpreted as 13 by numerical opcodes)\n+    OP_14 = 0x5e, // push \"\\x0E\" onto the stack (which is interpreted as 14 by numerical opcodes)\n+    OP_15 = 0x5f, // push \"\\x0F\" onto the stack (which is interpreted as 15 by numerical opcodes)\n+    OP_16 = 0x60, // push \"\\x10\" onto the stack (which is interpreted as 16 by numerical opcodes)\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61, // do nothing\n+    OP_VER = 0x62, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63, // if top stack value true, execute the statement\n+    OP_NOTIF = 0x64, // if top stack value false, execute the statement\n+    OP_VERIF = 0x65, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_VERNOTIF = 0x66, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_ELSE = 0x67, // if the preceding OP_IF, OP_NOTIF or OP_ELSE not executed, execute the statement\n+    OP_ENDIF = 0x68, // end if/else block(must include, otherwise tx become invalid)\n+    OP_VERIFY = 0x69, // mark tx invalid if top stack value false, unless occuring in an unexecuted OP_IF branch\n+    OP_RETURN = 0x6a, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n \n     // stack ops\n-    OP_TOALTSTACK = 0x6b,\n-    OP_FROMALTSTACK = 0x6c,\n-    OP_2DROP = 0x6d,\n-    OP_2DUP = 0x6e,\n-    OP_3DUP = 0x6f,\n-    OP_2OVER = 0x70,\n-    OP_2ROT = 0x71,\n-    OP_2SWAP = 0x72,\n-    OP_IFDUP = 0x73,\n-    OP_DEPTH = 0x74,\n-    OP_DROP = 0x75,\n-    OP_DUP = 0x76,\n-    OP_NIP = 0x77,\n-    OP_OVER = 0x78,\n-    OP_PICK = 0x79,\n-    OP_ROLL = 0x7a,\n-    OP_ROT = 0x7b,\n-    OP_SWAP = 0x7c,\n-    OP_TUCK = 0x7d,\n+    OP_TOALTSTACK = 0x6b, // pop an item from the main stack onto the alt stack\n+    OP_FROMALTSTACK = 0x6c, // pop an item from the alt stack onto the main stack\n+    OP_2DROP = 0x6d, // remove the two top stack items\n+    OP_2DUP = 0x6e, // duplicate top and second from top stack item\n+    OP_3DUP = 0x6f, // duplicate top, second from top and third from top stack item",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108829461",
      "id" : 1108829461,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CF2UV",
      "original_commit_id" : "4e8f9cb8db6c12e77cba3b7b1e25bc32de75b5ce",
      "original_line" : 114,
      "original_position" : 99,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301984484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108829461/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T17:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108829461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108829784"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108829784"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    OP_2DUP = 0x6e, // duplicate top and second from top stack items\r\n```",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T17:47:58Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_FALSE = OP_0, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // push \"\\x-1\" onto the stack (which is interpreted as -1 by numerical opcodes)\n+    OP_RESERVED = 0x50, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_1 = 0x51, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_TRUE=OP_1, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_2 = 0x52, // push \"\\x02\" onto the stack (which is interpreted as 2 by numerical opcodes)\n+    OP_3 = 0x53, // push \"\\x03\" onto the stack (which is interpreted as 3 by numerical opcodes)\n+    OP_4 = 0x54, // push \"\\x04\" onto the stack (which is interpreted as 4 by numerical opcodes)\n+    OP_5 = 0x55, // push \"\\x05\" onto the stack (which is interpreted as 5 by numerical opcodes)\n+    OP_6 = 0x56, // push \"\\x06\" onto the stack (which is interpreted as 6 by numerical opcodes)\n+    OP_7 = 0x57, // push \"\\x07\" onto the stack (which is interpreted as 7 by numerical opcodes)\n+    OP_8 = 0x58, // push \"\\x08\" onto the stack (which is interpreted as 8 by numerical opcodes)\n+    OP_9 = 0x59, // push \"\\x09\" onto the stack (which is interpreted as 9 by numerical opcodes)\n+    OP_10 = 0x5a, // push \"\\x0A\" onto the stack (which is interpreted as 10 by numerical opcodes)\n+    OP_11 = 0x5b, // push \"\\x0B\" onto the stack (which is interpreted as 11 by numerical opcodes)\n+    OP_12 = 0x5c, // push \"\\x0C\" onto the stack (which is interpreted as 12 by numerical opcodes)\n+    OP_13 = 0x5d, // push \"\\x0D\" onto the stack (which is interpreted as 13 by numerical opcodes)\n+    OP_14 = 0x5e, // push \"\\x0E\" onto the stack (which is interpreted as 14 by numerical opcodes)\n+    OP_15 = 0x5f, // push \"\\x0F\" onto the stack (which is interpreted as 15 by numerical opcodes)\n+    OP_16 = 0x60, // push \"\\x10\" onto the stack (which is interpreted as 16 by numerical opcodes)\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61, // do nothing\n+    OP_VER = 0x62, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63, // if top stack value true, execute the statement\n+    OP_NOTIF = 0x64, // if top stack value false, execute the statement\n+    OP_VERIF = 0x65, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_VERNOTIF = 0x66, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_ELSE = 0x67, // if the preceding OP_IF, OP_NOTIF or OP_ELSE not executed, execute the statement\n+    OP_ENDIF = 0x68, // end if/else block(must include, otherwise tx become invalid)\n+    OP_VERIFY = 0x69, // mark tx invalid if top stack value false, unless occuring in an unexecuted OP_IF branch\n+    OP_RETURN = 0x6a, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n \n     // stack ops\n-    OP_TOALTSTACK = 0x6b,\n-    OP_FROMALTSTACK = 0x6c,\n-    OP_2DROP = 0x6d,\n-    OP_2DUP = 0x6e,\n-    OP_3DUP = 0x6f,\n-    OP_2OVER = 0x70,\n-    OP_2ROT = 0x71,\n-    OP_2SWAP = 0x72,\n-    OP_IFDUP = 0x73,\n-    OP_DEPTH = 0x74,\n-    OP_DROP = 0x75,\n-    OP_DUP = 0x76,\n-    OP_NIP = 0x77,\n-    OP_OVER = 0x78,\n-    OP_PICK = 0x79,\n-    OP_ROLL = 0x7a,\n-    OP_ROT = 0x7b,\n-    OP_SWAP = 0x7c,\n-    OP_TUCK = 0x7d,\n+    OP_TOALTSTACK = 0x6b, // pop an item from the main stack onto the alt stack\n+    OP_FROMALTSTACK = 0x6c, // pop an item from the alt stack onto the main stack\n+    OP_2DROP = 0x6d, // remove the two top stack items\n+    OP_2DUP = 0x6e, // duplicate top and second from top stack item",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108829784",
      "id" : 1108829784,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CF2ZY",
      "original_commit_id" : "4e8f9cb8db6c12e77cba3b7b1e25bc32de75b5ce",
      "original_line" : 113,
      "original_position" : 98,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301984484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108829784/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T17:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108829784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108831224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108831224"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here and in the next 8 lines and also in additional lines after that.\r\n```suggestion\r\n    OP_CAT = 0x7e, // disabled, fail the script unconditionally (apply in an unexecuted conditional branch)\r\n```",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T17:48:59Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_FALSE = OP_0, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // push \"\\x-1\" onto the stack (which is interpreted as -1 by numerical opcodes)\n+    OP_RESERVED = 0x50, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_1 = 0x51, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_TRUE=OP_1, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_2 = 0x52, // push \"\\x02\" onto the stack (which is interpreted as 2 by numerical opcodes)\n+    OP_3 = 0x53, // push \"\\x03\" onto the stack (which is interpreted as 3 by numerical opcodes)\n+    OP_4 = 0x54, // push \"\\x04\" onto the stack (which is interpreted as 4 by numerical opcodes)\n+    OP_5 = 0x55, // push \"\\x05\" onto the stack (which is interpreted as 5 by numerical opcodes)\n+    OP_6 = 0x56, // push \"\\x06\" onto the stack (which is interpreted as 6 by numerical opcodes)\n+    OP_7 = 0x57, // push \"\\x07\" onto the stack (which is interpreted as 7 by numerical opcodes)\n+    OP_8 = 0x58, // push \"\\x08\" onto the stack (which is interpreted as 8 by numerical opcodes)\n+    OP_9 = 0x59, // push \"\\x09\" onto the stack (which is interpreted as 9 by numerical opcodes)\n+    OP_10 = 0x5a, // push \"\\x0A\" onto the stack (which is interpreted as 10 by numerical opcodes)\n+    OP_11 = 0x5b, // push \"\\x0B\" onto the stack (which is interpreted as 11 by numerical opcodes)\n+    OP_12 = 0x5c, // push \"\\x0C\" onto the stack (which is interpreted as 12 by numerical opcodes)\n+    OP_13 = 0x5d, // push \"\\x0D\" onto the stack (which is interpreted as 13 by numerical opcodes)\n+    OP_14 = 0x5e, // push \"\\x0E\" onto the stack (which is interpreted as 14 by numerical opcodes)\n+    OP_15 = 0x5f, // push \"\\x0F\" onto the stack (which is interpreted as 15 by numerical opcodes)\n+    OP_16 = 0x60, // push \"\\x10\" onto the stack (which is interpreted as 16 by numerical opcodes)\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61, // do nothing\n+    OP_VER = 0x62, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63, // if top stack value true, execute the statement\n+    OP_NOTIF = 0x64, // if top stack value false, execute the statement\n+    OP_VERIF = 0x65, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_VERNOTIF = 0x66, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_ELSE = 0x67, // if the preceding OP_IF, OP_NOTIF or OP_ELSE not executed, execute the statement\n+    OP_ENDIF = 0x68, // end if/else block(must include, otherwise tx become invalid)\n+    OP_VERIFY = 0x69, // mark tx invalid if top stack value false, unless occuring in an unexecuted OP_IF branch\n+    OP_RETURN = 0x6a, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n \n     // stack ops\n-    OP_TOALTSTACK = 0x6b,\n-    OP_FROMALTSTACK = 0x6c,\n-    OP_2DROP = 0x6d,\n-    OP_2DUP = 0x6e,\n-    OP_3DUP = 0x6f,\n-    OP_2OVER = 0x70,\n-    OP_2ROT = 0x71,\n-    OP_2SWAP = 0x72,\n-    OP_IFDUP = 0x73,\n-    OP_DEPTH = 0x74,\n-    OP_DROP = 0x75,\n-    OP_DUP = 0x76,\n-    OP_NIP = 0x77,\n-    OP_OVER = 0x78,\n-    OP_PICK = 0x79,\n-    OP_ROLL = 0x7a,\n-    OP_ROT = 0x7b,\n-    OP_SWAP = 0x7c,\n-    OP_TUCK = 0x7d,\n+    OP_TOALTSTACK = 0x6b, // pop an item from the main stack onto the alt stack\n+    OP_FROMALTSTACK = 0x6c, // pop an item from the alt stack onto the main stack\n+    OP_2DROP = 0x6d, // remove the two top stack items\n+    OP_2DUP = 0x6e, // duplicate top and second from top stack item\n+    OP_3DUP = 0x6f, // duplicate top, second from top and third from top stack item\n+    OP_2OVER = 0x70, // copy third and fourth from top stack items to the top\n+    OP_2ROT = 0x71, // move fifth and sixth from top stack items to the top\n+    OP_2SWAP = 0x72, // swap: top and second from top <-> third and fourth from top items of stack\n+    OP_IFDUP = 0x73, // if top stack value != 0, duplicate it\n+    OP_DEPTH = 0x74, // push the current number of stack items onto the stack\n+    OP_DROP = 0x75, // remove top stack item\n+    OP_DUP = 0x76, // duplicate top stack item\n+    OP_NIP = 0x77, // remove second from top stack item\n+    OP_OVER = 0x78, // copy second from top stack item to the top\n+    OP_PICK = 0x79, // copy item N back in stack to the top\n+    OP_ROLL = 0x7a, // move item N back in stack\n+    OP_ROT = 0x7b, // move third from top stack item to the top\n+    OP_SWAP = 0x7c, // swap top two items of stack\n+    OP_TUCK = 0x7d, // copy top stack item and insert before second from top item\n \n     // splice ops\n-    OP_CAT = 0x7e,\n-    OP_SUBSTR = 0x7f,\n-    OP_LEFT = 0x80,\n-    OP_RIGHT = 0x81,\n-    OP_SIZE = 0x82,\n+    OP_CAT = 0x7e, // disabled, fail the script unconditionally(apply in an unexecuted conditional branch)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108831224",
      "id" : 1108831224,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CF2v4",
      "original_commit_id" : "4e8f9cb8db6c12e77cba3b7b1e25bc32de75b5ce",
      "original_line" : 131,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301984484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108831224/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T17:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108831224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108833548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108833548"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    OP_NEGATE = 0x8f, // multiply the top stack item by -1\r\n```",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T17:50:46Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_FALSE = OP_0, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // push \"\\x-1\" onto the stack (which is interpreted as -1 by numerical opcodes)\n+    OP_RESERVED = 0x50, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_1 = 0x51, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_TRUE=OP_1, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_2 = 0x52, // push \"\\x02\" onto the stack (which is interpreted as 2 by numerical opcodes)\n+    OP_3 = 0x53, // push \"\\x03\" onto the stack (which is interpreted as 3 by numerical opcodes)\n+    OP_4 = 0x54, // push \"\\x04\" onto the stack (which is interpreted as 4 by numerical opcodes)\n+    OP_5 = 0x55, // push \"\\x05\" onto the stack (which is interpreted as 5 by numerical opcodes)\n+    OP_6 = 0x56, // push \"\\x06\" onto the stack (which is interpreted as 6 by numerical opcodes)\n+    OP_7 = 0x57, // push \"\\x07\" onto the stack (which is interpreted as 7 by numerical opcodes)\n+    OP_8 = 0x58, // push \"\\x08\" onto the stack (which is interpreted as 8 by numerical opcodes)\n+    OP_9 = 0x59, // push \"\\x09\" onto the stack (which is interpreted as 9 by numerical opcodes)\n+    OP_10 = 0x5a, // push \"\\x0A\" onto the stack (which is interpreted as 10 by numerical opcodes)\n+    OP_11 = 0x5b, // push \"\\x0B\" onto the stack (which is interpreted as 11 by numerical opcodes)\n+    OP_12 = 0x5c, // push \"\\x0C\" onto the stack (which is interpreted as 12 by numerical opcodes)\n+    OP_13 = 0x5d, // push \"\\x0D\" onto the stack (which is interpreted as 13 by numerical opcodes)\n+    OP_14 = 0x5e, // push \"\\x0E\" onto the stack (which is interpreted as 14 by numerical opcodes)\n+    OP_15 = 0x5f, // push \"\\x0F\" onto the stack (which is interpreted as 15 by numerical opcodes)\n+    OP_16 = 0x60, // push \"\\x10\" onto the stack (which is interpreted as 16 by numerical opcodes)\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61, // do nothing\n+    OP_VER = 0x62, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63, // if top stack value true, execute the statement\n+    OP_NOTIF = 0x64, // if top stack value false, execute the statement\n+    OP_VERIF = 0x65, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_VERNOTIF = 0x66, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_ELSE = 0x67, // if the preceding OP_IF, OP_NOTIF or OP_ELSE not executed, execute the statement\n+    OP_ENDIF = 0x68, // end if/else block(must include, otherwise tx become invalid)\n+    OP_VERIFY = 0x69, // mark tx invalid if top stack value false, unless occuring in an unexecuted OP_IF branch\n+    OP_RETURN = 0x6a, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n \n     // stack ops\n-    OP_TOALTSTACK = 0x6b,\n-    OP_FROMALTSTACK = 0x6c,\n-    OP_2DROP = 0x6d,\n-    OP_2DUP = 0x6e,\n-    OP_3DUP = 0x6f,\n-    OP_2OVER = 0x70,\n-    OP_2ROT = 0x71,\n-    OP_2SWAP = 0x72,\n-    OP_IFDUP = 0x73,\n-    OP_DEPTH = 0x74,\n-    OP_DROP = 0x75,\n-    OP_DUP = 0x76,\n-    OP_NIP = 0x77,\n-    OP_OVER = 0x78,\n-    OP_PICK = 0x79,\n-    OP_ROLL = 0x7a,\n-    OP_ROT = 0x7b,\n-    OP_SWAP = 0x7c,\n-    OP_TUCK = 0x7d,\n+    OP_TOALTSTACK = 0x6b, // pop an item from the main stack onto the alt stack\n+    OP_FROMALTSTACK = 0x6c, // pop an item from the alt stack onto the main stack\n+    OP_2DROP = 0x6d, // remove the two top stack items\n+    OP_2DUP = 0x6e, // duplicate top and second from top stack item\n+    OP_3DUP = 0x6f, // duplicate top, second from top and third from top stack item\n+    OP_2OVER = 0x70, // copy third and fourth from top stack items to the top\n+    OP_2ROT = 0x71, // move fifth and sixth from top stack items to the top\n+    OP_2SWAP = 0x72, // swap: top and second from top <-> third and fourth from top items of stack\n+    OP_IFDUP = 0x73, // if top stack value != 0, duplicate it\n+    OP_DEPTH = 0x74, // push the current number of stack items onto the stack\n+    OP_DROP = 0x75, // remove top stack item\n+    OP_DUP = 0x76, // duplicate top stack item\n+    OP_NIP = 0x77, // remove second from top stack item\n+    OP_OVER = 0x78, // copy second from top stack item to the top\n+    OP_PICK = 0x79, // copy item N back in stack to the top\n+    OP_ROLL = 0x7a, // move item N back in stack\n+    OP_ROT = 0x7b, // move third from top stack item to the top\n+    OP_SWAP = 0x7c, // swap top two items of stack\n+    OP_TUCK = 0x7d, // copy top stack item and insert before second from top item\n \n     // splice ops\n-    OP_CAT = 0x7e,\n-    OP_SUBSTR = 0x7f,\n-    OP_LEFT = 0x80,\n-    OP_RIGHT = 0x81,\n-    OP_SIZE = 0x82,\n+    OP_CAT = 0x7e, // disabled, fail the script unconditionally(apply in an unexecuted conditional branch)\n+    OP_SUBSTR = 0x7f, // disabled, fail the script unconditionally(apply in an unexecuted conditional branch)\n+    OP_LEFT = 0x80, // disabled, fail the script unconditionally(apply in an unexecuted conditional branch)\n+    OP_RIGHT = 0x81, // disabled, fail the script unconditionally(apply in an unexecuted conditional branch)\n+    OP_SIZE = 0x82, // push the length of top stack item(not pop the top element whose size is inspected)\n \n     // bit logic\n-    OP_INVERT = 0x83,\n-    OP_AND = 0x84,\n-    OP_OR = 0x85,\n-    OP_XOR = 0x86,\n-    OP_EQUAL = 0x87,\n-    OP_EQUALVERIFY = 0x88,\n-    OP_RESERVED1 = 0x89,\n-    OP_RESERVED2 = 0x8a,\n+    OP_INVERT = 0x83, // disabled, fail the script unconditionally(apply in an unexecuted conditional branch)\n+    OP_AND = 0x84, // disabled, fail the script unconditionally(apply in an unexecuted conditional branch)\n+    OP_OR = 0x85, // disabled, fail the script unconditionally(apply in an unexecuted conditional branch)\n+    OP_XOR = 0x86, // disabled, fail the script unconditionally(apply in an unexecuted conditional branch)\n+    OP_EQUAL = 0x87, // return 1 if the inputs are equal, 0 otherwise\n+    OP_EQUALVERIFY = 0x88, // execute OP_EQUAL, then OP_VERIFY afterward\n+    OP_RESERVED1 = 0x89, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_RESERVED2 = 0x8a, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n \n     // numeric\n-    OP_1ADD = 0x8b,\n-    OP_1SUB = 0x8c,\n-    OP_2MUL = 0x8d,\n-    OP_2DIV = 0x8e,\n-    OP_NEGATE = 0x8f,\n-    OP_ABS = 0x90,\n-    OP_NOT = 0x91,\n-    OP_0NOTEQUAL = 0x92,\n-\n-    OP_ADD = 0x93,\n-    OP_SUB = 0x94,\n-    OP_MUL = 0x95,\n-    OP_DIV = 0x96,\n-    OP_MOD = 0x97,\n-    OP_LSHIFT = 0x98,\n-    OP_RSHIFT = 0x99,\n-\n-    OP_BOOLAND = 0x9a,\n-    OP_BOOLOR = 0x9b,\n-    OP_NUMEQUAL = 0x9c,\n-    OP_NUMEQUALVERIFY = 0x9d,\n-    OP_NUMNOTEQUAL = 0x9e,\n-    OP_LESSTHAN = 0x9f,\n-    OP_GREATERTHAN = 0xa0,\n-    OP_LESSTHANOREQUAL = 0xa1,\n-    OP_GREATERTHANOREQUAL = 0xa2,\n-    OP_MIN = 0xa3,\n-    OP_MAX = 0xa4,\n-\n-    OP_WITHIN = 0xa5,\n+    OP_1ADD = 0x8b, // 1 added to the top stack item\n+    OP_1SUB = 0x8c, // 1 subtracted from the top stack item\n+    OP_2MUL = 0x8d, // disabled, fail the script unconditionally(apply in an unexecuted conditional branch)\n+    OP_2DIV = 0x8e, // disabled, fail the script unconditionally(apply in an unexecuted conditional branch)\n+    OP_NEGATE = 0x8f, // multiply the tops stack item by -1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108833548",
      "id" : 1108833548,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CF3UM",
      "original_commit_id" : "4e8f9cb8db6c12e77cba3b7b1e25bc32de75b5ce",
      "original_line" : 152,
      "original_position" : 180,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1301984484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108833548/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T17:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108833548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-02-16T18:07:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1433504037",
      "id" : 1433504037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585VcYkl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433504037/reactions"
      },
      "updated_at" : "2023-02-16T18:07:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433504037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-02-16T18:12:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1433509860",
      "id" : 1433509860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585VcZ_k",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433509860/reactions"
      },
      "updated_at" : "2023-02-16T18:12:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433509860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108865017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108865017"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd just say `\"\"` or `the empty array`. \"\\x\" isn't any valid syntax I know.",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T18:21:09Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // push \"\\x\" onto the stack (which is an empty array of bytes)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108865017",
      "id" : 1108865017,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CF-_5",
      "original_commit_id" : "bcff35a76e6f364b86759b61b766ed58b50ccd52",
      "original_line" : 72,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1302042129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108865017/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T18:22:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108865017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108865326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108865326"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It pushes `\"\\x81\"` (the byte array consisting of a single byte with value 129).",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T18:21:28Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_FALSE = OP_0, // push \"\\x\" onto the stack (which is an empty array of bytes)\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // push \"\\x-1\" onto the stack (which is interpreted as -1 by numerical opcodes)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1108865326",
      "id" : 1108865326,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CF_Eu",
      "original_commit_id" : "bcff35a76e6f364b86759b61b766ed58b50ccd52",
      "original_line" : 77,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : null,
      "pull_request_review_id" : 1302042129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108865326/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T18:22:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1108865326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "applying clang-formatting:\r\nper `src/.clang-format`\r\nmay be useful\r\n\r\nhttps://github.com/RandyMcMillan/bitcoin/commit/99e3dc536dca94dffd703e77572f6dca91f4bb26\r\n\r\npatch:\r\nhttps://raw.githubusercontent.com/bitcoin/bitcoin/433d01c67657f49773a649ba48c264cda833e783/clang-format.patch",
      "created_at" : "2023-02-16T20:05:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1433649698",
      "id" : 1433649698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585Vc8Ii",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433649698/reactions"
      },
      "updated_at" : "2023-02-16T20:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433649698",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1109011531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1109011531"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We should probably be consistent in describing how Script deals with true/false, since it's later described as `if top stack value != 0`.  Maybe add a section along the lines of:\r\n\r\n``` \r\n/** \r\n* Opcodes that take a true/false value will evaluate the following as false:\r\n*     an empty vector\r\n*     a vector (of any length) of all zero bytes \r\n*     a single byte of \"\\x80\" ('negative zero')\r\n*     a vector (of any length) of all zero bytes except the last byte is \"\\x80\"\r\n*\r\n* Any other value will evaluate to true.\r\n* /\r\n```\r\n\r\nI'd also say ` if the top stack value is true,`, and indicate that it consumes the stack item.",
      "commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "created_at" : "2023-02-16T20:52:33Z",
      "diff_hunk" : "@@ -69,143 +69,143 @@ std::vector<unsigned char> ToByteVector(const T& in)\n enum opcodetype\n {\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00, // push \"\" onto the stack (which is an empty array of bytes)\n+    OP_FALSE = OP_0, // push \"\" onto the stack (which is an empty array of bytes)\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f, // push \"\\x81\" onto the stack (which is interpreted as -1 by numerical opcodes)\n+    OP_RESERVED = 0x50, // mark tx invalid unless occurring in an unexecuted OP_IF branch\n+    OP_1 = 0x51, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_TRUE=OP_1, // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_2 = 0x52, // push \"\\x02\" onto the stack (which is interpreted as 2 by numerical opcodes)\n+    OP_3 = 0x53, // push \"\\x03\" onto the stack (which is interpreted as 3 by numerical opcodes)\n+    OP_4 = 0x54, // push \"\\x04\" onto the stack (which is interpreted as 4 by numerical opcodes)\n+    OP_5 = 0x55, // push \"\\x05\" onto the stack (which is interpreted as 5 by numerical opcodes)\n+    OP_6 = 0x56, // push \"\\x06\" onto the stack (which is interpreted as 6 by numerical opcodes)\n+    OP_7 = 0x57, // push \"\\x07\" onto the stack (which is interpreted as 7 by numerical opcodes)\n+    OP_8 = 0x58, // push \"\\x08\" onto the stack (which is interpreted as 8 by numerical opcodes)\n+    OP_9 = 0x59, // push \"\\x09\" onto the stack (which is interpreted as 9 by numerical opcodes)\n+    OP_10 = 0x5a, // push \"\\x0A\" onto the stack (which is interpreted as 10 by numerical opcodes)\n+    OP_11 = 0x5b, // push \"\\x0B\" onto the stack (which is interpreted as 11 by numerical opcodes)\n+    OP_12 = 0x5c, // push \"\\x0C\" onto the stack (which is interpreted as 12 by numerical opcodes)\n+    OP_13 = 0x5d, // push \"\\x0D\" onto the stack (which is interpreted as 13 by numerical opcodes)\n+    OP_14 = 0x5e, // push \"\\x0E\" onto the stack (which is interpreted as 14 by numerical opcodes)\n+    OP_15 = 0x5f, // push \"\\x0F\" onto the stack (which is interpreted as 15 by numerical opcodes)\n+    OP_16 = 0x60, // push \"\\x10\" onto the stack (which is interpreted as 16 by numerical opcodes)\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61, // do nothing\n+    OP_VER = 0x62, // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63, // if top stack value true, execute the statement",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1109011531",
      "id" : 1109011531,
      "line" : 100,
      "node_id" : "PRRC_kwDOABII585CGixL",
      "original_commit_id" : "49bdfa51ef27863193701d0befd094d9f2b99227",
      "original_line" : 100,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : 66,
      "pull_request_review_id" : 1302261728,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1109011531/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-16T20:58:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1109011531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/116917595?v=4",
         "events_url" : "https://api.github.com/users/john-moffett/events{/privacy}",
         "followers_url" : "https://api.github.com/users/john-moffett/followers",
         "following_url" : "https://api.github.com/users/john-moffett/following{/other_user}",
         "gists_url" : "https://api.github.com/users/john-moffett/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/john-moffett",
         "id" : 116917595,
         "login" : "john-moffett",
         "node_id" : "U_kgDOBvgFWw",
         "organizations_url" : "https://api.github.com/users/john-moffett/orgs",
         "received_events_url" : "https://api.github.com/users/john-moffett/received_events",
         "repos_url" : "https://api.github.com/users/john-moffett/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/john-moffett/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/john-moffett/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/john-moffett"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "clang-format applied and description for evaluating false added!",
      "created_at" : "2023-02-17T02:47:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1434020186",
      "id" : 1434020186,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585VeWla",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1434020186/reactions"
      },
      "updated_at" : "2023-02-17T02:47:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1434020186",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73169711?v=4",
         "events_url" : "https://api.github.com/users/Hyunhum/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Hyunhum/followers",
         "following_url" : "https://api.github.com/users/Hyunhum/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Hyunhum/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Hyunhum",
         "id" : 73169711,
         "login" : "Hyunhum",
         "node_id" : "MDQ6VXNlcjczMTY5NzEx",
         "organizations_url" : "https://api.github.com/users/Hyunhum/orgs",
         "received_events_url" : "https://api.github.com/users/Hyunhum/received_events",
         "repos_url" : "https://api.github.com/users/Hyunhum/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Hyunhum/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Hyunhum/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Hyunhum"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1109449787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1109449787"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    OP_PUSHDATA4 = 0x4e, // read the next 4 bytes as N and push the next N bytes as an array onto the stack\r\n```",
      "commit_id" : "d6ab4d5157ddaaaf30dc3661aadf84ad869dea6e",
      "created_at" : "2023-02-17T08:46:37Z",
      "diff_hunk" : "@@ -68,144 +68,153 @@ std::vector<unsigned char> ToByteVector(const T& in)\n /** Script opcodes */\n enum opcodetype\n {\n+/**\n+ * Opcodes that take a true/false value will evaluate the following as false:\n+ *     an empty vector\n+ *     a vector (of any length) of all zero bytes\n+ *     a single byte of \"\\x80\" ('negative zero')\n+ *     a vector (of any length) of all zero bytes except the last byte is \"\\x80\"\n+ *\n+ * Any other value will evaluate to true.\n+ */\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00,         // push \"\" onto the stack (which is an empty array of bytes)\n+    OP_FALSE = OP_0,     // push \"\" onto the stack (which is an empty array of bytes)\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1109449787",
      "id" : 1109449787,
      "line" : 85,
      "node_id" : "PRRC_kwDOABII585CINw7",
      "original_commit_id" : "d6ab4d5157ddaaaf30dc3661aadf84ad869dea6e",
      "original_line" : 85,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/script/script.h",
      "position" : 42,
      "pull_request_review_id" : 1302901104,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1109449787/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-17T08:51:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1109449787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1109456114"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1109456114"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "would also use the active form here\r\n```suggestion\r\n    OP_1ADD = 0x8b,      // add 1 to the top stack item\r\n    OP_1SUB = 0x8c,      // subtract 1 from the top stack item\r\n```",
      "commit_id" : "d6ab4d5157ddaaaf30dc3661aadf84ad869dea6e",
      "created_at" : "2023-02-17T08:48:51Z",
      "diff_hunk" : "@@ -68,144 +68,153 @@ std::vector<unsigned char> ToByteVector(const T& in)\n /** Script opcodes */\n enum opcodetype\n {\n+/**\n+ * Opcodes that take a true/false value will evaluate the following as false:\n+ *     an empty vector\n+ *     a vector (of any length) of all zero bytes\n+ *     a single byte of \"\\x80\" ('negative zero')\n+ *     a vector (of any length) of all zero bytes except the last byte is \"\\x80\"\n+ *\n+ * Any other value will evaluate to true.\n+ */\n     // push value\n-    OP_0 = 0x00,\n-    OP_FALSE = OP_0,\n-    OP_PUSHDATA1 = 0x4c,\n-    OP_PUSHDATA2 = 0x4d,\n-    OP_PUSHDATA4 = 0x4e,\n-    OP_1NEGATE = 0x4f,\n-    OP_RESERVED = 0x50,\n-    OP_1 = 0x51,\n-    OP_TRUE=OP_1,\n-    OP_2 = 0x52,\n-    OP_3 = 0x53,\n-    OP_4 = 0x54,\n-    OP_5 = 0x55,\n-    OP_6 = 0x56,\n-    OP_7 = 0x57,\n-    OP_8 = 0x58,\n-    OP_9 = 0x59,\n-    OP_10 = 0x5a,\n-    OP_11 = 0x5b,\n-    OP_12 = 0x5c,\n-    OP_13 = 0x5d,\n-    OP_14 = 0x5e,\n-    OP_15 = 0x5f,\n-    OP_16 = 0x60,\n+    OP_0 = 0x00,         // push \"\" onto the stack (which is an empty array of bytes)\n+    OP_FALSE = OP_0,     // push \"\" onto the stack (which is an empty array of bytes)\n+    OP_PUSHDATA1 = 0x4c, // read the next byte as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA2 = 0x4d, // read the next 2 bytes as N and push the next N bytes as an array onto the stack\n+    OP_PUSHDATA4 = 0x4e, // // read the next 4 bytes as N and push the next N bytes as an array onto the stack\n+    OP_1NEGATE = 0x4f,   // push \"\\x81\" onto the stack (which is interpreted as -1 by numerical opcodes)\n+    OP_RESERVED = 0x50,  // mark tx invalid unless occurring in an unexecuted OP_IF branch\n+    OP_1 = 0x51,         // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_TRUE = OP_1,      // push \"\\x01\" onto the stack (which is interpreted as 1 by numerical opcodes)\n+    OP_2 = 0x52,         // push \"\\x02\" onto the stack (which is interpreted as 2 by numerical opcodes)\n+    OP_3 = 0x53,         // push \"\\x03\" onto the stack (which is interpreted as 3 by numerical opcodes)\n+    OP_4 = 0x54,         // push \"\\x04\" onto the stack (which is interpreted as 4 by numerical opcodes)\n+    OP_5 = 0x55,         // push \"\\x05\" onto the stack (which is interpreted as 5 by numerical opcodes)\n+    OP_6 = 0x56,         // push \"\\x06\" onto the stack (which is interpreted as 6 by numerical opcodes)\n+    OP_7 = 0x57,         // push \"\\x07\" onto the stack (which is interpreted as 7 by numerical opcodes)\n+    OP_8 = 0x58,         // push \"\\x08\" onto the stack (which is interpreted as 8 by numerical opcodes)\n+    OP_9 = 0x59,         // push \"\\x09\" onto the stack (which is interpreted as 9 by numerical opcodes)\n+    OP_10 = 0x5a,        // push \"\\x0A\" onto the stack (which is interpreted as 10 by numerical opcodes)\n+    OP_11 = 0x5b,        // push \"\\x0B\" onto the stack (which is interpreted as 11 by numerical opcodes)\n+    OP_12 = 0x5c,        // push \"\\x0C\" onto the stack (which is interpreted as 12 by numerical opcodes)\n+    OP_13 = 0x5d,        // push \"\\x0D\" onto the stack (which is interpreted as 13 by numerical opcodes)\n+    OP_14 = 0x5e,        // push \"\\x0E\" onto the stack (which is interpreted as 14 by numerical opcodes)\n+    OP_15 = 0x5f,        // push \"\\x0F\" onto the stack (which is interpreted as 15 by numerical opcodes)\n+    OP_16 = 0x60,        // push \"\\x10\" onto the stack (which is interpreted as 16 by numerical opcodes)\n \n     // control\n-    OP_NOP = 0x61,\n-    OP_VER = 0x62,\n-    OP_IF = 0x63,\n-    OP_NOTIF = 0x64,\n-    OP_VERIF = 0x65,\n-    OP_VERNOTIF = 0x66,\n-    OP_ELSE = 0x67,\n-    OP_ENDIF = 0x68,\n-    OP_VERIFY = 0x69,\n-    OP_RETURN = 0x6a,\n+    OP_NOP = 0x61,      // do nothing\n+    OP_VER = 0x62,      // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_IF = 0x63,       // if top stack value is true, execute the statement\n+    OP_NOTIF = 0x64,    // if top stack value is false, execute the statement\n+    OP_VERIF = 0x65,    // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_VERNOTIF = 0x66, // mark tx invalid even when occuring in an unexecuted OP_IF branch\n+    OP_ELSE = 0x67,     // if the preceding OP_IF, OP_NOTIF or OP_ELSE not executed, execute the statement\n+    OP_ENDIF = 0x68,    // end if/else block (must include, otherwise tx becomes invalid)\n+    OP_VERIFY = 0x69,   // mark tx invalid if top stack value is false, unless occuring in an unexecuted OP_IF branch\n+    OP_RETURN = 0x6a,   // mark tx invalid unless occuring in an unexecuted OP_IF branch\n \n     // stack ops\n-    OP_TOALTSTACK = 0x6b,\n-    OP_FROMALTSTACK = 0x6c,\n-    OP_2DROP = 0x6d,\n-    OP_2DUP = 0x6e,\n-    OP_3DUP = 0x6f,\n-    OP_2OVER = 0x70,\n-    OP_2ROT = 0x71,\n-    OP_2SWAP = 0x72,\n-    OP_IFDUP = 0x73,\n-    OP_DEPTH = 0x74,\n-    OP_DROP = 0x75,\n-    OP_DUP = 0x76,\n-    OP_NIP = 0x77,\n-    OP_OVER = 0x78,\n-    OP_PICK = 0x79,\n-    OP_ROLL = 0x7a,\n-    OP_ROT = 0x7b,\n-    OP_SWAP = 0x7c,\n-    OP_TUCK = 0x7d,\n+    OP_TOALTSTACK = 0x6b,   // pop an item from the main stack onto the alt stack\n+    OP_FROMALTSTACK = 0x6c, // pop an item from the alt stack onto the main stack\n+    OP_2DROP = 0x6d,        // remove the two top stack items\n+    OP_2DUP = 0x6e,         // duplicate top and second from top stack items\n+    OP_3DUP = 0x6f,         // duplicate top, second from top and third from top stack items\n+    OP_2OVER = 0x70,        // copy third and fourth from top stack items to the top\n+    OP_2ROT = 0x71,         // move fifth and sixth from top stack items to the top\n+    OP_2SWAP = 0x72,        // swap: top and second from top <-> third and fourth from top items of stack\n+    OP_IFDUP = 0x73,        // if top stack value is false, duplicate it\n+    OP_DEPTH = 0x74,        // push the current number of stack items onto the stack\n+    OP_DROP = 0x75,         // remove top stack item\n+    OP_DUP = 0x76,          // duplicate top stack item\n+    OP_NIP = 0x77,          // remove second from top stack item\n+    OP_OVER = 0x78,         // copy second from top stack item to the top\n+    OP_PICK = 0x79,         // copy item N back in stack to the top\n+    OP_ROLL = 0x7a,         // move item N back in stack\n+    OP_ROT = 0x7b,          // move third from top stack item to the top\n+    OP_SWAP = 0x7c,         // swap top two items of stack\n+    OP_TUCK = 0x7d,         // copy top stack item and insert before second from top item\n \n     // splice ops\n-    OP_CAT = 0x7e,\n-    OP_SUBSTR = 0x7f,\n-    OP_LEFT = 0x80,\n-    OP_RIGHT = 0x81,\n-    OP_SIZE = 0x82,\n+    OP_CAT = 0x7e,    // disabled, fail the script unconditionally (apply in an unexecuted conditional branch)\n+    OP_SUBSTR = 0x7f, // disabled, fail the script unconditionally (apply in an unexecuted conditional branch)\n+    OP_LEFT = 0x80,   // disabled, fail the script unconditionally (apply in an unexecuted conditional branch)\n+    OP_RIGHT = 0x81,  // disabled, fail the script unconditionally (apply in an unexecuted conditional branch)\n+    OP_SIZE = 0x82,   // push the length of top stack item (not pop the top element whose size is inspected)\n \n     // bit logic\n-    OP_INVERT = 0x83,\n-    OP_AND = 0x84,\n-    OP_OR = 0x85,\n-    OP_XOR = 0x86,\n-    OP_EQUAL = 0x87,\n-    OP_EQUALVERIFY = 0x88,\n-    OP_RESERVED1 = 0x89,\n-    OP_RESERVED2 = 0x8a,\n+    OP_INVERT = 0x83,      // disabled, fail the script unconditionally (apply in an unexecuted conditional branch)\n+    OP_AND = 0x84,         // disabled, fail the script unconditionally (apply in an unexecuted conditional branch)\n+    OP_OR = 0x85,          // disabled, fail the script unconditionally (apply in an unexecuted conditional branch)\n+    OP_XOR = 0x86,         // disabled, fail the script unconditionally (apply in an unexecuted conditional branch)\n+    OP_EQUAL = 0x87,       // return 1 if the inputs are equal, 0 otherwise\n+    OP_EQUALVERIFY = 0x88, // execute OP_EQUAL, then OP_VERIFY afterward\n+    OP_RESERVED1 = 0x89,   // mark tx invalid unless occuring in an unexecuted OP_IF branch\n+    OP_RESERVED2 = 0x8a,   // mark tx invalid unless occuring in an unexecuted OP_IF branch\n \n     // numeric\n-    OP_1ADD = 0x8b,\n-    OP_1SUB = 0x8c,\n-    OP_2MUL = 0x8d,\n-    OP_2DIV = 0x8e,\n-    OP_NEGATE = 0x8f,\n-    OP_ABS = 0x90,\n-    OP_NOT = 0x91,\n-    OP_0NOTEQUAL = 0x92,\n-\n-    OP_ADD = 0x93,\n-    OP_SUB = 0x94,\n-    OP_MUL = 0x95,\n-    OP_DIV = 0x96,\n-    OP_MOD = 0x97,\n-    OP_LSHIFT = 0x98,\n-    OP_RSHIFT = 0x99,\n-\n-    OP_BOOLAND = 0x9a,\n-    OP_BOOLOR = 0x9b,\n-    OP_NUMEQUAL = 0x9c,\n-    OP_NUMEQUALVERIFY = 0x9d,\n-    OP_NUMNOTEQUAL = 0x9e,\n-    OP_LESSTHAN = 0x9f,\n-    OP_GREATERTHAN = 0xa0,\n-    OP_LESSTHANOREQUAL = 0xa1,\n-    OP_GREATERTHANOREQUAL = 0xa2,\n-    OP_MIN = 0xa3,\n-    OP_MAX = 0xa4,\n-\n-    OP_WITHIN = 0xa5,\n+    OP_1ADD = 0x8b,      // 1 added to the top stack item\n+    OP_1SUB = 0x8c,      // 1 subtracted from the top stack item",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#discussion_r1109456114",
      "id" : 1109456114,
      "line" : 158,
      "node_id" : "PRRC_kwDOABII585CIPTy",
      "original_commit_id" : "d6ab4d5157ddaaaf30dc3661aadf84ad869dea6e",
      "original_line" : 158,
      "original_position" : 187,
      "original_start_line" : 157,
      "path" : "src/script/script.h",
      "position" : 187,
      "pull_request_review_id" : 1302901104,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27109",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1109456114/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 157,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-17T08:51:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1109456114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  It will help a lot for developers who want to do script programming.\r\n\r\nNo strong opinion, but this purpose is already served by this [detailed wiki article](https://en.bitcoin.it/wiki/Script#Opcodes) presenting how each opcode works along with a bit of history. Using a \"opcode, input, output, description\" table it is even probably better at explaining what each opcode does than we can ever get in code comments.",
      "created_at" : "2023-02-17T10:06:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1434416059",
      "id" : 1434416059,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585Vf3O7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1434416059/reactions"
      },
      "updated_at" : "2023-02-17T10:06:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1434416059",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Detailed wiki does help dev! However, it's just a complementary material. \r\nIf simple description on script.h, \r\n1. Bitcoin repo itself leads the standard description of opcodes, does not depend on external ones\r\n2. Newly added opcode can be described here first\r\n3. dev can get info easier and publicly discuss more to utilize script\r\n\r\nThese are my personal opinion, and any opinion is welcome!",
      "created_at" : "2023-02-17T10:27:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1434438615",
      "id" : 1434438615,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585Vf8vX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1434438615/reactions"
      },
      "updated_at" : "2023-02-17T10:27:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1434438615",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73169711?v=4",
         "events_url" : "https://api.github.com/users/Hyunhum/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Hyunhum/followers",
         "following_url" : "https://api.github.com/users/Hyunhum/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Hyunhum/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Hyunhum",
         "id" : 73169711,
         "login" : "Hyunhum",
         "node_id" : "MDQ6VXNlcjczMTY5NzEx",
         "organizations_url" : "https://api.github.com/users/Hyunhum/orgs",
         "received_events_url" : "https://api.github.com/users/Hyunhum/received_events",
         "repos_url" : "https://api.github.com/users/Hyunhum/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Hyunhum/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Hyunhum/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Hyunhum"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > It will help a lot for developers who want to do script programming.\r\n> \r\n> No strong opinion, but this purpose is already served by this [detailed wiki article](https://en.bitcoin.it/wiki/Script#Opcodes) presenting how each opcode works along with a bit of history. Using a \"opcode, input, output, description\" table it is even probably better at explaining what each opcode does than we can ever get in code comments.\r\n\r\nAgree with this. So many single line comments look weird. If wiki has some outdated or incorrect information, maybe that can be updated and use its link in the comment above all opcodes.",
      "created_at" : "2023-02-20T11:07:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1436763116",
      "id" : 1436763116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585Vo0Ps",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1436763116/reactions"
      },
      "updated_at" : "2023-02-20T11:07:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1436763116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94559964?v=4",
         "events_url" : "https://api.github.com/users/1440000bytes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/1440000bytes/followers",
         "following_url" : "https://api.github.com/users/1440000bytes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/1440000bytes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/1440000bytes",
         "id" : 94559964,
         "login" : "1440000bytes",
         "node_id" : "U_kgDOBaLe3A",
         "organizations_url" : "https://api.github.com/users/1440000bytes/orgs",
         "received_events_url" : "https://api.github.com/users/1440000bytes/received_events",
         "repos_url" : "https://api.github.com/users/1440000bytes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/1440000bytes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/1440000bytes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/1440000bytes"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I followed the way [miniscript.h](https://github.com/bitcoin/bitcoin/blob/master/src/script/miniscript.h) comments. There are so many single lines as well, and look fine & helpful in my opinion.\r\nHowever, I think it's also not bad to add a simple overall description and wiki link above all opcodes, only if wiki is well managed.",
      "created_at" : "2023-02-20T13:20:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1437016840",
      "id" : 1437016840,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585VpyMI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1437016840/reactions"
      },
      "updated_at" : "2023-02-20T13:42:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1437016840",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73169711?v=4",
         "events_url" : "https://api.github.com/users/Hyunhum/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Hyunhum/followers",
         "following_url" : "https://api.github.com/users/Hyunhum/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Hyunhum/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Hyunhum",
         "id" : 73169711,
         "login" : "Hyunhum",
         "node_id" : "MDQ6VXNlcjczMTY5NzEx",
         "organizations_url" : "https://api.github.com/users/Hyunhum/orgs",
         "received_events_url" : "https://api.github.com/users/Hyunhum/received_events",
         "repos_url" : "https://api.github.com/users/Hyunhum/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Hyunhum/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Hyunhum/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Hyunhum"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NIT\r\n\r\n```bash\r\ncd src/ && clang-format --lines 68:148 -i script/script.h\r\n```\r\n\r\n```c\r\ndiff --git a/src/script/script.h b/src/script/script.h\r\nindex 35211ff376..5143593029 100644\r\n--- a/src/script/script.h\r\n+++ b/src/script/script.h\r\n@@ -66,17 +66,16 @@ std::vector<unsigned char> ToByteVector(const T& in)\r\n }\r\n \r\n /** Script opcodes */\r\n-enum opcodetype\r\n-{\r\n-/**\r\n- * Opcodes that take a true/false value will evaluate the following as false:\r\n- *     an empty vector\r\n- *     a vector (of any length) of all zero bytes\r\n- *     a single byte of \"\\x80\" ('negative zero')\r\n- *     a vector (of any length) of all zero bytes except the last byte is \"\\x80\"\r\n- *\r\n- * Any other value will evaluate to true.\r\n- */\r\n+enum opcodetype {\r\n+    /**\r\n+     * Opcodes that take a true/false value will evaluate the following as false:\r\n+     *     an empty vector\r\n+     *     a vector (of any length) of all zero bytes\r\n+     *     a single byte of \"\\x80\" ('negative zero')\r\n+     *     a vector (of any length) of all zero bytes except the last byte is \"\\x80\"\r\n+     *\r\n+     * Any other value will evaluate to true.\r\n+     */\r\n     // push value\r\n     OP_0 = 0x00,         // push \"\" onto the stack (which is an empty array of bytes)\r\n     OP_FALSE = OP_0,     // push \"\" onto the stack (which is an empty array of bytes)\r\n\r\n\r\n```",
      "created_at" : "2023-02-20T16:05:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1437246550",
      "id" : 1437246550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585VqqRW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1437246550/reactions"
      },
      "updated_at" : "2023-02-20T16:05:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1437246550",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> NIT\r\n> \r\n> ```shell\r\n> cd src/ && clang-format --lines 68:148 -i script/script.h\r\n> ```\r\n> \r\n> ```c\r\n> diff --git a/src/script/script.h b/src/script/script.h\r\n> index 35211ff376..5143593029 100644\r\n> --- a/src/script/script.h\r\n> +++ b/src/script/script.h\r\n> @@ -66,17 +66,16 @@ std::vector<unsigned char> ToByteVector(const T& in)\r\n>  }\r\n>  \r\n>  /** Script opcodes */\r\n> -enum opcodetype\r\n> -{\r\n> -/**\r\n> - * Opcodes that take a true/false value will evaluate the following as false:\r\n> - *     an empty vector\r\n> - *     a vector (of any length) of all zero bytes\r\n> - *     a single byte of \"\\x80\" ('negative zero')\r\n> - *     a vector (of any length) of all zero bytes except the last byte is \"\\x80\"\r\n> - *\r\n> - * Any other value will evaluate to true.\r\n> - */\r\n> +enum opcodetype {\r\n> +    /**\r\n> +     * Opcodes that take a true/false value will evaluate the following as false:\r\n> +     *     an empty vector\r\n> +     *     a vector (of any length) of all zero bytes\r\n> +     *     a single byte of \"\\x80\" ('negative zero')\r\n> +     *     a vector (of any length) of all zero bytes except the last byte is \"\\x80\"\r\n> +     *\r\n> +     * Any other value will evaluate to true.\r\n> +     */\r\n>      // push value\r\n>      OP_0 = 0x00,         // push \"\" onto the stack (which is an empty array of bytes)\r\n>      OP_FALSE = OP_0,     // push \"\" onto the stack (which is an empty array of bytes)\r\n> ```\r\n\r\nBecause it's global comment for opcodes, I didn't indent. Reference might be [this](https://github.com/bitcoin/bitcoin/blob/4087c156535dd3e939baa37384347906dbb4d78b/src/script/script.h#L233).",
      "created_at" : "2023-02-21T02:08:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27109#issuecomment-1437763548",
      "id" : 1437763548,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27109",
      "node_id" : "IC_kwDOABII585Vsofc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1437763548/reactions"
      },
      "updated_at" : "2023-02-21T02:08:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1437763548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73169711?v=4",
         "events_url" : "https://api.github.com/users/Hyunhum/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Hyunhum/followers",
         "following_url" : "https://api.github.com/users/Hyunhum/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Hyunhum/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Hyunhum",
         "id" : 73169711,
         "login" : "Hyunhum",
         "node_id" : "MDQ6VXNlcjczMTY5NzEx",
         "organizations_url" : "https://api.github.com/users/Hyunhum/orgs",
         "received_events_url" : "https://api.github.com/users/Hyunhum/received_events",
         "repos_url" : "https://api.github.com/users/Hyunhum/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Hyunhum/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Hyunhum/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Hyunhum"
      }
   }
]
