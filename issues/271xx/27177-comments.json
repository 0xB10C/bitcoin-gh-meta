[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/27177#pullrequestreview-1318410408), [theStack](https://github.com/bitcoin/bitcoin/pull/27177#pullrequestreview-1318517874), [josibake](https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1487242654) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2023-02-28T13:00:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1448138168",
      "id" : 1448138168,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585WUNW4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448138168/reactions"
      },
      "updated_at" : "2023-03-28T16:26:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448138168",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120032517"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120032517"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wonder if this can instead be fixed by making `get_utxo` not return immature coinbases by default?",
      "commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "created_at" : "2023-02-28T13:06:28Z",
      "diff_hunk" : "@@ -222,7 +222,8 @@ def test_sequence_lock_unconfirmed_inputs(self):\n \n         # Create a mempool tx.\n         self.wallet.rescan_utxos()\n-        tx1 = self.wallet.send_self_transfer(from_node=self.nodes[0])[\"tx\"]\n+        utxo = self.wallet.get_utxos(include_immature_coinbase=False)[0]\n+        tx1 = self.wallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo)[\"tx\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120032517",
      "id" : 1120032517,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CwlcF",
      "original_commit_id" : "c2ec9fc1c499fbed5562c66fae73334382dad9e2",
      "original_line" : 226,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/feature_bip68_sequence.py",
      "position" : null,
      "pull_request_review_id" : 1317522697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120032517/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-28T13:06:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120032517",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120034162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120034162"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's a good idea, going to do it.",
      "commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "created_at" : "2023-02-28T13:07:57Z",
      "diff_hunk" : "@@ -222,7 +222,8 @@ def test_sequence_lock_unconfirmed_inputs(self):\n \n         # Create a mempool tx.\n         self.wallet.rescan_utxos()\n-        tx1 = self.wallet.send_self_transfer(from_node=self.nodes[0])[\"tx\"]\n+        utxo = self.wallet.get_utxos(include_immature_coinbase=False)[0]\n+        tx1 = self.wallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo)[\"tx\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120034162",
      "id" : 1120034162,
      "in_reply_to_id" : 1120032517,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Cwl1y",
      "original_commit_id" : "c2ec9fc1c499fbed5562c66fae73334382dad9e2",
      "original_line" : 226,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/feature_bip68_sequence.py",
      "position" : null,
      "pull_request_review_id" : 1317526418,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120034162/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-28T13:07:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120034162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed addressing @MarcoFalke's suggestion. Also, just updated the description.",
      "created_at" : "2023-02-28T13:39:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1448195567",
      "id" : 1448195567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585WUbXv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448195567/reactions"
      },
      "updated_at" : "2023-02-28T13:39:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448195567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120193686"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120193686"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Instead of overwriting and discarding the previous filter, it might be better to just set it once. This can be done by nesting the new `if` under a new `elif`.\r\n\r\nAnother alternative would be to always apply the filter.",
      "commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "created_at" : "2023-02-28T14:52:59Z",
      "diff_hunk" : "@@ -212,16 +212,18 @@ def get_address(self):\n         assert_equal(self._mode, MiniWalletMode.ADDRESS_OP_TRUE)\n         return self._address\n \n-    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True) -> dict:\n+    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True, include_immature_coinbase=False) -> dict:\n         \"\"\"\n         Returns a utxo and marks it as spent (pops it from the internal list)\n \n         Args:\n         txid: get the first utxo we find from a specific transaction\n         \"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: (k['value'], -k['height']))  # Put the largest utxo last\n+        if not include_immature_coinbase:\n+            utxo_filter: Any = filter(lambda utxo: not utxo['coinbase'] or COINBASE_MATURITY <= utxo['confirmations'], self._utxos)\n         if txid:\n-            utxo_filter: Any = filter(lambda utxo: txid == utxo['txid'], self._utxos)\n+            utxo_filter = filter(lambda utxo: txid == utxo['txid'], self._utxos)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120193686",
      "id" : 1120193686,
      "line" : 226,
      "node_id" : "PRRC_kwDOABII585CxMyW",
      "original_commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "original_line" : 226,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : 17,
      "pull_request_review_id" : 1317796587,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120193686/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-28T14:53:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120193686",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120508531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120508531"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "it makes sense, I didn't notice it was discarding the previous one, gonna change it. However, I realized we can't always apply this coinbase filter because some tests need to use unconfirmed coinbase utxo (because it's the only available ones).",
      "commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "created_at" : "2023-02-28T17:40:45Z",
      "diff_hunk" : "@@ -212,16 +212,18 @@ def get_address(self):\n         assert_equal(self._mode, MiniWalletMode.ADDRESS_OP_TRUE)\n         return self._address\n \n-    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True) -> dict:\n+    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True, include_immature_coinbase=False) -> dict:\n         \"\"\"\n         Returns a utxo and marks it as spent (pops it from the internal list)\n \n         Args:\n         txid: get the first utxo we find from a specific transaction\n         \"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: (k['value'], -k['height']))  # Put the largest utxo last\n+        if not include_immature_coinbase:\n+            utxo_filter: Any = filter(lambda utxo: not utxo['coinbase'] or COINBASE_MATURITY <= utxo['confirmations'], self._utxos)\n         if txid:\n-            utxo_filter: Any = filter(lambda utxo: txid == utxo['txid'], self._utxos)\n+            utxo_filter = filter(lambda utxo: txid == utxo['txid'], self._utxos)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120508531",
      "id" : 1120508531,
      "in_reply_to_id" : 1120193686,
      "line" : 226,
      "node_id" : "PRRC_kwDOABII585CyZpz",
      "original_commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "original_line" : 226,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : 17,
      "pull_request_review_id" : 1318177760,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120508531/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-28T17:40:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120508531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120662435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120662435"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What's the purpose of this annotation `Any` here?",
      "commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "created_at" : "2023-02-28T19:23:12Z",
      "diff_hunk" : "@@ -212,16 +212,18 @@ def get_address(self):\n         assert_equal(self._mode, MiniWalletMode.ADDRESS_OP_TRUE)\n         return self._address\n \n-    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True) -> dict:\n+    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True, include_immature_coinbase=False) -> dict:\n         \"\"\"\n         Returns a utxo and marks it as spent (pops it from the internal list)\n \n         Args:\n         txid: get the first utxo we find from a specific transaction\n         \"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: (k['value'], -k['height']))  # Put the largest utxo last\n+        if not include_immature_coinbase:\n+            utxo_filter: Any = filter(lambda utxo: not utxo['coinbase'] or COINBASE_MATURITY <= utxo['confirmations'], self._utxos)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120662435",
      "id" : 1120662435,
      "line" : 224,
      "node_id" : "PRRC_kwDOABII585Cy_Oj",
      "original_commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "original_line" : 224,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : 14,
      "pull_request_review_id" : 1318410408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120662435/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-28T19:43:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120662435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120688318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120688318"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe I'm reading this wrong, but it looks like the `reversed()` on L288 can just be factored in to this first sort? That might make the actual filtering logic cleaner.",
      "commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "created_at" : "2023-02-28T19:42:46Z",
      "diff_hunk" : "@@ -212,16 +212,18 @@ def get_address(self):\n         assert_equal(self._mode, MiniWalletMode.ADDRESS_OP_TRUE)\n         return self._address\n \n-    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True) -> dict:\n+    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True, include_immature_coinbase=False) -> dict:\n         \"\"\"\n         Returns a utxo and marks it as spent (pops it from the internal list)\n \n         Args:\n         txid: get the first utxo we find from a specific transaction\n         \"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: (k['value'], -k['height']))  # Put the largest utxo last",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1120688318",
      "id" : 1120688318,
      "line" : 222,
      "node_id" : "PRRC_kwDOABII585CzFi-",
      "original_commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "original_line" : 222,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : 12,
      "pull_request_review_id" : 1318410408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120688318/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-28T19:43:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120688318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I assume you meant immature coinbases, rather than unconfirmed ones. Which tests currently rely on those? Can't really imagine a case where an unspendable UTXO would be of any use (only if mining of new blocks happen between fetching the UTXO and actually spending them, but then we can probably change those tests to fetch the UTXO later?).\r\n\r\nOne of the examples I found:\r\n\r\nIn `p2p_segwit.py`: \r\nhttps://github.com/bitcoin/bitcoin/blob/cb40639bdf04bab31bcdceb3bf941e9bade8317a/test/functional/p2p_segwit.py#L2009-L2010\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_segwit.py b/test/functional/p2p_segwit.py\r\nindex b0900e49b..c502bac8c 100755\r\n--- a/test/functional/p2p_segwit.py\r\n+++ b/test/functional/p2p_segwit.py\r\n@@ -2006,6 +2006,7 @@ class SegWitTest(BitcoinTestFramework):\r\n             def serialize(self):\r\n                 return serialize_with_bogus_witness(self.tx)\r\n \r\n+        self.log.info(self.wallet.get_utxos(include_immature_coinbase=True))\r\n         tx = self.wallet.create_self_transfer()['tx']\r\n         assert_raises_rpc_error(-22, \"TX decode failed\", self.nodes[0].decoderawtransaction, hexstring=serialize_with_bogus_witness(tx).hex(), iswitness=True)\r\n         with self.nodes[0].assert_debug_log(['Unknown transaction optional data']):\r\n```\r\n\r\nIt will print a lot of utxos, but if you set `include_immature_coinbase=False`, it will return an empty list. ",
      "created_at" : "2023-02-28T20:34:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1448877559",
      "id" : 1448877559,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585WXB33",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448877559/reactions"
      },
      "updated_at" : "2023-02-28T20:34:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448877559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed changing the approach.\r\n\r\nThe logic:\r\n- if you don't specify a `txid`, it will return the largest utxo desconsidering immature coinbase. In case the only ones available are immature ones, it will return the largest of them. \r\n_Why?_ - We can't filter the immature coinbase ones by default because in some tests they're the only available ones.\r\n\r\n- Added a flag `avoid_immature_coinbase` to not break some mempool tests, in that case, they need to fetch it considering the immature ones even having other (_\"normal\"_) utxos.",
      "created_at" : "2023-03-02T13:04:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1451836694",
      "id" : 1451836694,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585WiUUW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1451836694/reactions"
      },
      "updated_at" : "2023-03-02T13:04:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1451836694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1123068867"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123068867"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "removing `Any` it throw a lint error, I believe it's because it can be any value from `filter` or `reversed`.",
      "commit_id" : "d4f5dfa960f602c3b70b7f7c53bd628663230d81",
      "created_at" : "2023-03-02T13:06:26Z",
      "diff_hunk" : "@@ -212,16 +212,18 @@ def get_address(self):\n         assert_equal(self._mode, MiniWalletMode.ADDRESS_OP_TRUE)\n         return self._address\n \n-    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True) -> dict:\n+    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True, include_immature_coinbase=False) -> dict:\n         \"\"\"\n         Returns a utxo and marks it as spent (pops it from the internal list)\n \n         Args:\n         txid: get the first utxo we find from a specific transaction\n         \"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: (k['value'], -k['height']))  # Put the largest utxo last\n+        if not include_immature_coinbase:\n+            utxo_filter: Any = filter(lambda utxo: not utxo['coinbase'] or COINBASE_MATURITY <= utxo['confirmations'], self._utxos)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1123068867",
      "id" : 1123068867,
      "in_reply_to_id" : 1120662435,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585C8KvD",
      "original_commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "original_line" : 224,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : null,
      "pull_request_review_id" : 1321785345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123068867/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T13:06:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123068867",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1123069732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123069732"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure. In case of specifying a `txid`, it will not have to return the largest one.",
      "commit_id" : "d4f5dfa960f602c3b70b7f7c53bd628663230d81",
      "created_at" : "2023-03-02T13:07:10Z",
      "diff_hunk" : "@@ -212,16 +212,18 @@ def get_address(self):\n         assert_equal(self._mode, MiniWalletMode.ADDRESS_OP_TRUE)\n         return self._address\n \n-    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True) -> dict:\n+    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True, include_immature_coinbase=False) -> dict:\n         \"\"\"\n         Returns a utxo and marks it as spent (pops it from the internal list)\n \n         Args:\n         txid: get the first utxo we find from a specific transaction\n         \"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: (k['value'], -k['height']))  # Put the largest utxo last",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1123069732",
      "id" : 1123069732,
      "in_reply_to_id" : 1120688318,
      "line" : 222,
      "node_id" : "PRRC_kwDOABII585C8K8k",
      "original_commit_id" : "b4d64437d07180dc025edffa01e8b0165d345d94",
      "original_line" : 222,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : 12,
      "pull_request_review_id" : 1321786545,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123069732/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T13:07:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123069732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1128487451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128487451"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Feels like there must be a way to express this without rewriting the filter? I think the only reason you need to do that here is because `list(coinbase_filter)` exhausts the iterator so you need to start it over. What if `coinbase_filter` was actually a list called `mature_coins` from the beginning of the function? I dunno, just an idea.",
      "commit_id" : "ff1cd5ec6e10061dd4b1d6cd0fd23d35f5bbeede",
      "created_at" : "2023-03-07T19:55:27Z",
      "diff_hunk" : "@@ -212,16 +212,20 @@ def get_address(self):\n         assert_equal(self._mode, MiniWalletMode.ADDRESS_OP_TRUE)\n         return self._address\n \n-    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True) -> dict:\n+    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True, avoid_immature_coinbase=True) -> dict:\n         \"\"\"\n         Returns a utxo and marks it as spent (pops it from the internal list)\n \n         Args:\n         txid: get the first utxo we find from a specific transaction\n         \"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: (k['value'], -k['height']))  # Put the largest utxo last\n+        coinbase_filter = filter(lambda utxo: not utxo['coinbase'] or COINBASE_MATURITY <= utxo['confirmations'], self._utxos)\n         if txid:\n             utxo_filter: Any = filter(lambda utxo: txid == utxo['txid'], self._utxos)\n+        elif len(list(coinbase_filter)) > 0 and avoid_immature_coinbase:\n+            utxo_filter = filter(lambda utxo: not utxo['coinbase'] or COINBASE_MATURITY <= utxo['confirmations'], self._utxos)\n+            utxo_filter = reversed(list(utxo_filter))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1128487451",
      "id" : 1128487451,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DQ1ob",
      "original_commit_id" : "d4f5dfa960f602c3b70b7f7c53bd628663230d81",
      "original_line" : 228,
      "original_position" : 18,
      "original_start_line" : 227,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : null,
      "pull_request_review_id" : 1329406835,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128487451/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-07T19:55:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1128487451",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1137297128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137297128"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, you're right, there is a way to simplify it, no need to rewrite the filter. Force-pushed addressing it.",
      "commit_id" : "ff1cd5ec6e10061dd4b1d6cd0fd23d35f5bbeede",
      "created_at" : "2023-03-15T15:25:16Z",
      "diff_hunk" : "@@ -212,16 +212,20 @@ def get_address(self):\n         assert_equal(self._mode, MiniWalletMode.ADDRESS_OP_TRUE)\n         return self._address\n \n-    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True) -> dict:\n+    def get_utxo(self, *, txid: str = '', vout: Optional[int] = None, mark_as_spent=True, avoid_immature_coinbase=True) -> dict:\n         \"\"\"\n         Returns a utxo and marks it as spent (pops it from the internal list)\n \n         Args:\n         txid: get the first utxo we find from a specific transaction\n         \"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: (k['value'], -k['height']))  # Put the largest utxo last\n+        coinbase_filter = filter(lambda utxo: not utxo['coinbase'] or COINBASE_MATURITY <= utxo['confirmations'], self._utxos)\n         if txid:\n             utxo_filter: Any = filter(lambda utxo: txid == utxo['txid'], self._utxos)\n+        elif len(list(coinbase_filter)) > 0 and avoid_immature_coinbase:\n+            utxo_filter = filter(lambda utxo: not utxo['coinbase'] or COINBASE_MATURITY <= utxo['confirmations'], self._utxos)\n+            utxo_filter = reversed(list(utxo_filter))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#discussion_r1137297128",
      "id" : 1137297128,
      "in_reply_to_id" : 1128487451,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Dycbo",
      "original_commit_id" : "d4f5dfa960f602c3b70b7f7c53bd628663230d81",
      "original_line" : 228,
      "original_position" : 18,
      "original_start_line" : 227,
      "path" : "test/functional/test_framework/wallet.py",
      "position" : null,
      "pull_request_review_id" : 1341785396,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27177",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137297128/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-15T15:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137297128",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The filtering logic looks very nice and clean now! But, so, are there only those two mempool tests that need immature spends? It looks like you had to add lots of argument-forwarding to get there. I'm wondering if you've looked into the possibility of just adding more block confirmations in those two tests? And then you perhaps wouldn't need `avoid_immature_coinbase` at all which I feel should just be an implied default anyway.",
      "created_at" : "2023-03-17T15:17:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1473999269",
      "id" : 1473999269,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585X23Gl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473999269/reactions"
      },
      "updated_at" : "2023-03-17T15:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473999269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@brunoerg are you following up here?",
      "created_at" : "2023-03-28T14:44:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1487030103",
      "id" : 1487030103,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585YokdX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1487030103/reactions"
      },
      "updated_at" : "2023-03-28T14:44:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1487030103",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @brunoerg are you following up here?\r\n\r\nYes.",
      "created_at" : "2023-03-28T15:45:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1487160825",
      "id" : 1487160825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585YpEX5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1487160825/reactions"
      },
      "updated_at" : "2023-03-28T15:45:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1487160825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nRegarding the approach, I think we should always apply the filter or allow the argument but have it default to True and only let you change it to false if you are calling `get_utxo` directly (no argument forwarding).\r\n\r\nI'm also a little confused by the `mempool_package_limit.py`, because it looks like the test assumes it is already working with mature UTXOs: \r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/test/functional/mempool_package_limits.py#L26-L29\r\n\r\nUsing immature UTXOs in the mempool test feels like a hack, where we could just add more confirmations or figure out why the test is failing when there are _supposed_ to already be mature UTXOs\r\n\r\nEDIT: if you do end up needing to touch `mempool_package_limits.py` with a fix, I'd also suggest adding it as its own commit ",
      "created_at" : "2023-03-28T16:26:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1487242654",
      "id" : 1487242654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585YpYWe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1487242654/reactions"
      },
      "updated_at" : "2023-03-28T16:27:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1487242654",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm gonna change the approach and touch `mempool_package_limits.py`.",
      "created_at" : "2023-03-28T20:21:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1487543635",
      "id" : 1487543635,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585Yqh1T",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1487543635/reactions"
      },
      "updated_at" : "2023-03-28T20:21:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1487543635",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed changing the approach:\r\n1. there is only a flag in `get_utxo` (`avoid_immature_coinbase=True`), removed that in other functions.\r\n2. changed `mempool_package_limits` from `self.generate(self.nodes[0], COINBASE_MATURITY)` to `self.generate(self.wallet, COINBASE_MATURITY)`.\r\n\r\nSeems like the fix in `mempool_package_limits` was simpler than I thought.",
      "created_at" : "2023-03-28T21:23:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1487611348",
      "id" : 1487611348,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585YqyXU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1487611348/reactions"
      },
      "updated_at" : "2023-03-28T21:23:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1487611348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice, this looks much simpler now. `interface_usdt_mempool.py` is now failing but the fix is very simple: just mine a block after each test: https://github.com/josibake/bitcoin/commit/85ec64b1eb3037e8bd9349242b05615b41b87261\r\n\r\n",
      "created_at" : "2023-03-29T07:35:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1488088372",
      "id" : 1488088372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585Ysm00",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1488088372/reactions"
      },
      "updated_at" : "2023-03-29T07:35:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1488088372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Nice, this looks much simpler now. interface_usdt_mempool.py is now failing but the fix is very simple: just mine a block after each test: https://github.com/josibake/bitcoin/commit/85ec64b1eb3037e8bd9349242b05615b41b87261\r\n\r\nAdded a commit fixing it and added you as co-author, thank you! Force-pushed doing it!",
      "created_at" : "2023-03-29T10:18:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1488328390",
      "id" : 1488328390,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585YthbG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1488328390/reactions"
      },
      "updated_at" : "2023-03-29T10:18:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1488328390",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@glozow want to take a look at the mempool tests?",
      "created_at" : "2023-03-29T10:35:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27177#issuecomment-1488350147",
      "id" : 1488350147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27177",
      "node_id" : "IC_kwDOABII585YtmvD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1488350147/reactions"
      },
      "updated_at" : "2023-03-29T10:35:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1488350147",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
