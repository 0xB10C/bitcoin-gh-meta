[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25602#discussion_r920604335"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25602"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920604335"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the following works, though I would rather do some wallet options encapsulations like done with `MemPoolOptions`. I believe the wallet could have its own default transaction-relay policy settings in case the mempool ones are bigger (e.g if local `limitdescendantsize=100`, still makes sense to propagate chain of transactions of max size=25)\r\n\r\n```\r\ndiff --git a/src/rpc/rawtransaction.cpp b/src/rpc/rawtransaction.cpp\r\nindex 263baa3c9..dc9f02160 100644\r\n--- a/src/rpc/rawtransaction.cpp\r\n+++ b/src/rpc/rawtransaction.cpp\r\n@@ -305,8 +305,9 @@ static RPCHelpMan createrawtransaction()\r\n         }, true\r\n     );\r\n     const ArgsManager& args{EnsureAnyArgsman(request.context)};\r\n+    const NodeContext& node = EnsureAnyNodeContext(request.context);\r\n \r\n-    const bool rbf{request.params[3].isNull() ? args.GetBoolArg(\"-mempoolfullrbf\", DEFAULT_MEMPOOL_FULL_RBF) : request.params[3].getBool()};\r\n+    const bool rbf{request.params[3].isNull() ? node.mempool->m_full_rbf : request.params[3].getBool()};\r\n     CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\r\n \r\n     return EncodeHexTx(CTransaction(rawTx));\r\n```",
      "commit_id" : "fac6ce45bce13950896a31c683f71a78efad0bb8",
      "created_at" : "2022-07-14T00:06:16Z",
      "diff_hunk" : "@@ -303,11 +304,9 @@ static RPCHelpMan createrawtransaction()\n         UniValue::VBOOL\n         }, true\n     );\n+    const ArgsManager& args{EnsureAnyArgsman(request.context)};\n \n-    bool rbf = false;\n-    if (!request.params[3].isNull()) {\n-        rbf = request.params[3].isTrue();\n-    }\n+    const bool rbf{request.params[3].isNull() ? args.GetBoolArg(\"-mempoolfullrbf\", DEFAULT_MEMPOOL_FULL_RBF) : request.params[3].getBool()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25602#discussion_r920604335",
      "id" : 920604335,
      "line" : 309,
      "node_id" : "PRRC_kwDOABII5842306v",
      "original_commit_id" : "fac6ce45bce13950896a31c683f71a78efad0bb8",
      "original_line" : 309,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 20,
      "pull_request_review_id" : 1038101337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25602",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920604335/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-14T00:07:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920604335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
