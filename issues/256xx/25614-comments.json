[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nðµï¸ @harding has been requested to review this pull request as specified in the REVIEWERS file.",
      "created_at" : "2022-07-14T14:25:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#issuecomment-1184513896",
      "id" : 1184513896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25614",
      "node_id" : "IC_kwDOABII585Gmj9o",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1184513896/reactions"
      },
      "updated_at" : "2022-07-14T14:25:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1184513896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24950](https://github.com/bitcoin/bitcoin/pull/24950) (Add config option to set max debug log size by tehelsper)\n* [#16673](https://github.com/bitcoin/bitcoin/pull/16673) (Relog configuration args on debug.log rotation by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-07-14T19:00:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#issuecomment-1184794070",
      "id" : 1184794070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25614",
      "node_id" : "IC_kwDOABII585GnoXW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1184794070/reactions"
      },
      "updated_at" : "2022-08-04T15:08:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1184794070",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r922851218"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922851218"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "* Should `BCLog::Level::None` be placed at the end of the vector so that the ordering will be similar to its enum value? Maybe we could remove `BCLog::Level::None` from this list entirely.\r\n* Should `BCLog::Level::Trace` be included in this list as well?\r\n\r\nWe could modify this function to be `constexpr` and return `std::array` instead. This will allow us to static assert the number of elements in the array at compile time. ie:\r\n\r\n```cpp\r\nconstexpr std::array<BCLog::Level, static_cast<size_t>(BCLog::Level::None) + 1> BCLog::Logger::LogLevelsList() const\r\n{\r\n    return {BCLog::Level::Trace, BCLog::Level::Debug, BCLog::Level::Info, BCLog::Level::Warning, BCLog::Level::Error, BCLog::Level::None};\r\n}\r\n```\r\n",
      "commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "created_at" : "2022-07-17T15:36:55Z",
      "diff_hunk" : "@@ -287,6 +321,16 @@ std::vector<LogCategory> BCLog::Logger::LogCategoriesList() const\n     return ret;\n }\n \n+std::vector<BCLog::Level> BCLog::Logger::LogLevelsList() const\n+{\n+    return {BCLog::Level::Debug, BCLog::Level::None, BCLog::Level::Info, BCLog::Level::Warning, BCLog::Level::Error};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r922851218",
      "id" : 922851218,
      "line" : 326,
      "node_id" : "PRRC_kwDOABII5843AZeS",
      "original_commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "original_line" : 326,
      "original_position" : 91,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 91,
      "pull_request_review_id" : 1041143003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922851218/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-17T16:35:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922851218",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/49265907?v=4",
         "events_url" : "https://api.github.com/users/klementtan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/klementtan/followers",
         "following_url" : "https://api.github.com/users/klementtan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/klementtan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/klementtan",
         "id" : 49265907,
         "login" : "klementtan",
         "node_id" : "MDQ6VXNlcjQ5MjY1OTA3",
         "organizations_url" : "https://api.github.com/users/klementtan/orgs",
         "received_events_url" : "https://api.github.com/users/klementtan/received_events",
         "repos_url" : "https://api.github.com/users/klementtan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/klementtan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/klementtan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/klementtan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r922853408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922853408"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    const auto levels = LogLevelsList();\r\n    return Join(std::vector<BCLog::Level>{levels.begin(), levels.end() - 1}, \", \", [this](BCLog::Level level) { return LogLevelToStr(level); });\r\n```\r\n\r\nAs `LogLevelsString` returns `\"\"` for `BCLog::Level::None`, this function will return `, ,`. Maybe remove `BCLog::Level::None` from the vector of levels? Alternatively, we could remove `BCLog::Level::None` from `LogLevelsList` completely",
      "commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "created_at" : "2022-07-17T15:55:54Z",
      "diff_hunk" : "@@ -287,6 +321,16 @@ std::vector<LogCategory> BCLog::Logger::LogCategoriesList() const\n     return ret;\n }\n \n+std::vector<BCLog::Level> BCLog::Logger::LogLevelsList() const\n+{\n+    return {BCLog::Level::Debug, BCLog::Level::None, BCLog::Level::Info, BCLog::Level::Warning, BCLog::Level::Error};\n+}\n+\n+std::string BCLog::Logger::LogLevelsString() const\n+{\n+    return Join(LogLevelsList(), \", \", [this](BCLog::Level level) { return LogLevelToStr(level); });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r922853408",
      "id" : 922853408,
      "line" : 331,
      "node_id" : "PRRC_kwDOABII5843AaAg",
      "original_commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "original_line" : 331,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 96,
      "pull_request_review_id" : 1041143003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922853408/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-17T16:37:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922853408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/49265907?v=4",
         "events_url" : "https://api.github.com/users/klementtan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/klementtan/followers",
         "following_url" : "https://api.github.com/users/klementtan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/klementtan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/klementtan",
         "id" : 49265907,
         "login" : "klementtan",
         "node_id" : "MDQ6VXNlcjQ5MjY1OTA3",
         "organizations_url" : "https://api.github.com/users/klementtan/orgs",
         "received_events_url" : "https://api.github.com/users/klementtan/received_events",
         "repos_url" : "https://api.github.com/users/klementtan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/klementtan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/klementtan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/klementtan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r922868809"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922868809"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    const auto level = GetLogLevel(level_str);\r\n    if (level > BCLog::Level::Warning) return false;\r\n```\r\n\r\nSuggestion ( feel free to ignore ):\r\n\r\nSince we are unconditionally logging any logs `>=  BCLog::Level::Warning` level, should we prevent users from setting any threshold level  `> BCLog::Level::Warning`? This will prevent users from having the weird behavior of successfully setting the threshold log level to `Error` but still seeing `Warning` logs. (Same for `SetCategoryLogLevel`)",
      "commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "created_at" : "2022-07-17T16:51:00Z",
      "diff_hunk" : "@@ -443,3 +487,22 @@ void BCLog::Logger::ShrinkDebugFile()\n     else if (file != nullptr)\n         fclose(file);\n }\n+\n+bool BCLog::Logger::SetLogLevel(const std::string& level_str)\n+{\n+    const auto level = GetLogLevel(level_str);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r922868809",
      "id" : 922868809,
      "line" : 493,
      "node_id" : "PRRC_kwDOABII5843AdxJ",
      "original_commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "original_line" : 493,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 118,
      "pull_request_review_id" : 1041161459,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922868809/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-17T16:52:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922868809",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/49265907?v=4",
         "events_url" : "https://api.github.com/users/klementtan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/klementtan/followers",
         "following_url" : "https://api.github.com/users/klementtan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/klementtan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/klementtan",
         "id" : 49265907,
         "login" : "klementtan",
         "node_id" : "MDQ6VXNlcjQ5MjY1OTA3",
         "organizations_url" : "https://api.github.com/users/klementtan/orgs",
         "received_events_url" : "https://api.github.com/users/klementtan/received_events",
         "repos_url" : "https://api.github.com/users/klementtan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/klementtan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/klementtan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/klementtan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r922869012"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922869012"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It might be useful to state that all logs `>= Warning` will still be unconditionally logged.",
      "commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "created_at" : "2022-07-17T16:52:50Z",
      "diff_hunk" : "@@ -28,6 +29,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n         ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-debugexclude=<category>\", \"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except the specified category. This option can be specified multiple times to exclude multiple categories.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-logips\", strprintf(\"Include IP addresses in debug output (default: %u)\", DEFAULT_LOGIPS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-loglevel=<level>|<category>:<level>\", strprintf(\"Set the global or per-category logging severity level: %s (default=%s). If <category>:<level> is supplied, the setting will override the global one and may be specified multiple times to set multiple category-specific levels. <category> can be: %s.\", LogInstance().LogLevelsString(), LogInstance().LogLevelToStr(), LogInstance().LogCategoriesString()), ArgsManager::DISALLOW_NEGATION | ArgsManager::DISALLOW_ELISION, OptionsCategory::DEBUG_TEST);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r922869012",
      "id" : 922869012,
      "line" : 32,
      "node_id" : "PRRC_kwDOABII5843Ad0U",
      "original_commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "original_line" : 32,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : 12,
      "pull_request_review_id" : 1041161459,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922869012/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-17T16:53:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/922869012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/49265907?v=4",
         "events_url" : "https://api.github.com/users/klementtan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/klementtan/followers",
         "following_url" : "https://api.github.com/users/klementtan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/klementtan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/klementtan",
         "id" : 49265907,
         "login" : "klementtan",
         "node_id" : "MDQ6VXNlcjQ5MjY1OTA3",
         "organizations_url" : "https://api.github.com/users/klementtan/orgs",
         "received_events_url" : "https://api.github.com/users/klementtan/received_events",
         "repos_url" : "https://api.github.com/users/klementtan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/klementtan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/klementtan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/klementtan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r924339238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924339238"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I plan to replace this hardcoded data structure with an automated version in c57d6e7d449e14827528439537716bed6cbfc9fe but good ideas, done!",
      "commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "created_at" : "2022-07-19T10:38:26Z",
      "diff_hunk" : "@@ -287,6 +321,16 @@ std::vector<LogCategory> BCLog::Logger::LogCategoriesList() const\n     return ret;\n }\n \n+std::vector<BCLog::Level> BCLog::Logger::LogLevelsList() const\n+{\n+    return {BCLog::Level::Debug, BCLog::Level::None, BCLog::Level::Info, BCLog::Level::Warning, BCLog::Level::Error};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r924339238",
      "id" : 924339238,
      "in_reply_to_id" : 922851218,
      "line" : 326,
      "node_id" : "PRRC_kwDOABII5843GEwm",
      "original_commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "original_line" : 326,
      "original_position" : 91,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 91,
      "pull_request_review_id" : 1043207962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924339238/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-19T10:38:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924339238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r924406121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924406121"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Alternatively, we could remove `BCLog::Level::None` from `LogLevelsList` completely\r\n\r\nAgree SGTM, thanks!\r\n",
      "commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "created_at" : "2022-07-19T11:57:29Z",
      "diff_hunk" : "@@ -287,6 +321,16 @@ std::vector<LogCategory> BCLog::Logger::LogCategoriesList() const\n     return ret;\n }\n \n+std::vector<BCLog::Level> BCLog::Logger::LogLevelsList() const\n+{\n+    return {BCLog::Level::Debug, BCLog::Level::None, BCLog::Level::Info, BCLog::Level::Warning, BCLog::Level::Error};\n+}\n+\n+std::string BCLog::Logger::LogLevelsString() const\n+{\n+    return Join(LogLevelsList(), \", \", [this](BCLog::Level level) { return LogLevelToStr(level); });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r924406121",
      "id" : 924406121,
      "in_reply_to_id" : 922853408,
      "line" : 331,
      "node_id" : "PRRC_kwDOABII5843GVFp",
      "original_commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "original_line" : 331,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 96,
      "pull_request_review_id" : 1043301340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924406121/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-19T11:57:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/924406121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r925475777"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925475777"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "9405e02b032d03dfb4533a154498414be7305fd6",
      "created_at" : "2022-07-20T11:08:19Z",
      "diff_hunk" : "@@ -28,6 +29,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n         ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-debugexclude=<category>\", \"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except the specified category. This option can be specified multiple times to exclude multiple categories.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-logips\", strprintf(\"Include IP addresses in debug output (default: %u)\", DEFAULT_LOGIPS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-loglevel=<level>|<category>:<level>\", strprintf(\"Set the global or per-category logging severity level: %s (default=%s). If <category>:<level> is supplied, the setting will override the global one and may be specified multiple times to set multiple category-specific levels. <category> can be: %s.\", LogInstance().LogLevelsString(), LogInstance().LogLevelToStr(), LogInstance().LogCategoriesString()), ArgsManager::DISALLOW_NEGATION | ArgsManager::DISALLOW_ELISION, OptionsCategory::DEBUG_TEST);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r925475777",
      "id" : 925475777,
      "in_reply_to_id" : 922869012,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5843KaPB",
      "original_commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "original_line" : 32,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1044838807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925475777/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-20T11:08:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925475777",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r925477721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925477721"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Was thinking about this as well. Let's leave it for a follow-up as this commit is already quite large, unless others feel strongly.",
      "commit_id" : "9405e02b032d03dfb4533a154498414be7305fd6",
      "created_at" : "2022-07-20T11:10:43Z",
      "diff_hunk" : "@@ -443,3 +487,22 @@ void BCLog::Logger::ShrinkDebugFile()\n     else if (file != nullptr)\n         fclose(file);\n }\n+\n+bool BCLog::Logger::SetLogLevel(const std::string& level_str)\n+{\n+    const auto level = GetLogLevel(level_str);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r925477721",
      "id" : 925477721,
      "in_reply_to_id" : 922868809,
      "line" : 494,
      "node_id" : "PRRC_kwDOABII5843KatZ",
      "original_commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "original_line" : 494,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 119,
      "pull_request_review_id" : 1044841456,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925477721/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-20T11:10:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/925477721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated with review feedack by @klementtan (thanks!) per `git range-diff 0897b18 5326f46 706805d`",
      "created_at" : "2022-07-20T11:27:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#issuecomment-1190156391",
      "id" : 1190156391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25614",
      "node_id" : "IC_kwDOABII585G8Fhn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1190156391/reactions"
      },
      "updated_at" : "2022-07-20T15:05:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1190156391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK and tested ACK [706805d](https://github.com/bitcoin/bitcoin/commit/706805d9ac98dc4fc0543108c0bf6d914b27bef1)\r\n\r\nTesting:\r\n```txt\r\n# Absence of debug log when loglevel=INFO\r\n$  ./src/bitcoind -signet -loglevel=info\r\n$  grep -o \"net:debug\" ~/.bitcoin/signet/debug.log | wc -l\r\n      0\r\n\r\n# Debug log present when loglevel=DEBUG\r\n$ ./src/bitcoind -signet -loglevel=debug\r\n$  grep -o \"net:debug\" ~/.bitcoin/signet/debug.log | wc -l\r\n       2\r\n\r\n# Category-specific log level. loglevel=net:info\r\n$ ./src/bitcoind -signet -loglevel=net:info\r\nBitcoin Core starting\r\n$  grep -o \"net:debug\" ~/.bitcoin/signet/debug.log | wc -l\r\n       0\r\n```",
      "created_at" : "2022-07-25T16:05:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#issuecomment-1194292255",
      "id" : 1194292255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25614",
      "node_id" : "IC_kwDOABII585HL3Qf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1194292255/reactions"
      },
      "updated_at" : "2022-07-25T16:05:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1194292255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/49265907?v=4",
         "events_url" : "https://api.github.com/users/klementtan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/klementtan/followers",
         "following_url" : "https://api.github.com/users/klementtan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/klementtan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/klementtan",
         "id" : 49265907,
         "login" : "klementtan",
         "node_id" : "MDQ6VXNlcjQ5MjY1OTA3",
         "organizations_url" : "https://api.github.com/users/klementtan/orgs",
         "received_events_url" : "https://api.github.com/users/klementtan/received_events",
         "repos_url" : "https://api.github.com/users/klementtan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/klementtan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/klementtan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/klementtan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r933943920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/933943920"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Feel free to ignore. Perhaps if the user enters an invalid value, initialization should not proceed. The log can also record the level.\r\n\r\nFor example, the user might type `-loglevel=DEBUG` and think logging is working while it is not a valid option.\r\n\r\n```suggestion\r\n                if (!LogInstance().SetLogLevel(level_str)) {\r\n                    InitError(strprintf(_(\"Unsupported global logging level -loglevel=%s. Valid values: %s\"), level_str, LogInstance().LogLevelsString()));\r\n                }\r\n                else LogPrintf(\"Using log level %s\\n\", level_str);\r\n```",
      "commit_id" : "706805d9ac98dc4fc0543108c0bf6d914b27bef1",
      "created_at" : "2022-07-31T07:59:21Z",
      "diff_hunk" : "@@ -55,6 +57,26 @@ void SetLoggingOptions(const ArgsManager& args)\n     fLogIPs = args.GetBoolArg(\"-logips\", DEFAULT_LOGIPS);\n }\n \n+void SetLoggingLevel(const ArgsManager& args)\n+{\n+    if (args.IsArgSet(\"-loglevel\")) {\n+        for (const std::string& level_str : args.GetArgs(\"-loglevel\")) {\n+            if (level_str.find_first_of(':', 3) == std::string::npos) {\n+                // user passed a global log level, i.e. -loglevel=<level>\n+                if (!LogInstance().SetLogLevel(level_str)) {\n+                    InitWarning(strprintf(_(\"Unsupported global logging level -loglevel=%s. Valid values: %s\"), level_str, LogInstance().LogLevelsString()));\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r933943920",
      "id" : 933943920,
      "line" : 68,
      "node_id" : "PRRC_kwDOABII5843qtpw",
      "original_commit_id" : "706805d9ac98dc4fc0543108c0bf6d914b27bef1",
      "original_line" : 68,
      "original_position" : 28,
      "original_start_line" : 66,
      "path" : "src/init/common.cpp",
      "position" : 28,
      "pull_request_review_id" : 1056529768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/933943920/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 66,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-31T08:04:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/933943920",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94266259?v=4",
         "events_url" : "https://api.github.com/users/w0xlt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/w0xlt/followers",
         "following_url" : "https://api.github.com/users/w0xlt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/w0xlt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/w0xlt",
         "id" : 94266259,
         "login" : "w0xlt",
         "node_id" : "U_kgDOBZ5jkw",
         "organizations_url" : "https://api.github.com/users/w0xlt/orgs",
         "received_events_url" : "https://api.github.com/users/w0xlt/received_events",
         "repos_url" : "https://api.github.com/users/w0xlt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/w0xlt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/w0xlt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/w0xlt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r933944004"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/933944004"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit:\r\n```suggestion\r\n  log severity levels. (#25614)\r\n```",
      "commit_id" : "706805d9ac98dc4fc0543108c0bf6d914b27bef1",
      "created_at" : "2022-07-31T08:00:01Z",
      "diff_hunk" : "@@ -93,6 +93,9 @@ New settings\n Tools and Utilities\n -------------------\n \n+- A new `-loglevel` configuration option allows setting global and per-category\n+  log severity levels. (#25203)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r933944004",
      "id" : 933944004,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII5843qtrE",
      "original_commit_id" : "706805d9ac98dc4fc0543108c0bf6d914b27bef1",
      "original_line" : 97,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : 5,
      "pull_request_review_id" : 1056529768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/933944004/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-31T08:04:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/933944004",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94266259?v=4",
         "events_url" : "https://api.github.com/users/w0xlt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/w0xlt/followers",
         "following_url" : "https://api.github.com/users/w0xlt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/w0xlt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/w0xlt",
         "id" : 94266259,
         "login" : "w0xlt",
         "node_id" : "U_kgDOBZ5jkw",
         "organizations_url" : "https://api.github.com/users/w0xlt/orgs",
         "received_events_url" : "https://api.github.com/users/w0xlt/received_events",
         "repos_url" : "https://api.github.com/users/w0xlt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/w0xlt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/w0xlt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/w0xlt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r939683825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/939683825"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Indentation of the comment doesn't match the ones above",
      "commit_id" : "706805d9ac98dc4fc0543108c0bf6d914b27bef1",
      "created_at" : "2022-08-07T15:20:00Z",
      "diff_hunk" : "@@ -68,11 +68,11 @@ namespace BCLog {\n         ALL         = ~(uint32_t)0,\n     };\n     enum class Level {\n-        Debug = 0,\n-        None = 1,\n-        Info = 2,\n-        Warning = 3,\n-        Error = 4,\n+        Debug = 0, // High-volume or detailed logging for development/debugging\n+        Info,      // Default\n+        Warning,\n+        Error,\n+        None, // Internal use only",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r939683825",
      "id" : 939683825,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII5844Am_x",
      "original_commit_id" : "e1513f25fab8398e930dcd948e9bd316028212bf",
      "original_line" : 75,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 13,
      "pull_request_review_id" : 1064438055,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/939683825/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-07T16:33:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/939683825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r939724505"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/939724505"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for the suggestion but this is what clang-format returns.",
      "commit_id" : "706805d9ac98dc4fc0543108c0bf6d914b27bef1",
      "created_at" : "2022-08-07T21:28:18Z",
      "diff_hunk" : "@@ -68,11 +68,11 @@ namespace BCLog {\n         ALL         = ~(uint32_t)0,\n     };\n     enum class Level {\n-        Debug = 0,\n-        None = 1,\n-        Info = 2,\n-        Warning = 3,\n-        Error = 4,\n+        Debug = 0, // High-volume or detailed logging for development/debugging\n+        Info,      // Default\n+        Warning,\n+        Error,\n+        None, // Internal use only",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r939724505",
      "id" : 939724505,
      "in_reply_to_id" : 939683825,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII5844Aw7Z",
      "original_commit_id" : "e1513f25fab8398e930dcd948e9bd316028212bf",
      "original_line" : 75,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 13,
      "pull_request_review_id" : 1064470298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/939724505/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-07T21:28:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/939724505",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Code looks good but I think this is missing some documentation on how `-loglevel` and `-debug` relate to each other. Otherwise I think some users may be confused.\r\n\r\nThanks for having a look. What change would you suggest for the help?\r\n\r\n```\r\n$ ./src/bitcoind -h | grep -A10 loglevel\r\n  -loglevel=<level>|<category>:<level>\r\n       Set the global or per-category debug logging severity level: trace,\r\n       debug, info, warning, error (default=info). Error and warning\r\n       levels are logged unconditionally.  If <category>:<level> is\r\n       supplied, the setting will override the global one and may be\r\n       specified multiple times to set multiple category-specific\r\n       levels. <category> can be: addrman, bench, blockstorage,\r\n       cmpctblock, coindb, estimatefee, http, i2p, ipc, leveldb,\r\n       libevent, lock, mempool, mempoolrej, net, proxy, prune, qt, rand,\r\n       reindex, rpc, selectcoins, tor, util, validation, walletdb, zmq.\r\n```",
      "created_at" : "2022-08-07T21:30:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#issuecomment-1207489090",
      "id" : 1207489090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25614",
      "node_id" : "IC_kwDOABII585H-NJC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207489090/reactions"
      },
      "updated_at" : "2022-08-07T21:30:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207489090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r943422350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943422350"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> nit: Feel free to ignore. Perhaps if the user enters an invalid value, initialization should not proceed. \r\n\r\nThanks for the suggestion! However, updating from `InitWarning` to `InitError` would only change the first line of the debug log, and I think it makes more sense to log \"Warning\" than \"Error\" for this case. Also, the existing log init errors (for -debug=) are warnings as well.\r\n\r\n> The log can also record the level. For example, the user might type `-loglevel=DEBUG` and think logging is working while it is not a valid option.\r\n\r\nIt is already logged as either `Command-line arg: loglevel=<setting>` or `Config file arg: loglevel=<setting>`.",
      "commit_id" : "706805d9ac98dc4fc0543108c0bf6d914b27bef1",
      "created_at" : "2022-08-11T12:25:15Z",
      "diff_hunk" : "@@ -55,6 +57,26 @@ void SetLoggingOptions(const ArgsManager& args)\n     fLogIPs = args.GetBoolArg(\"-logips\", DEFAULT_LOGIPS);\n }\n \n+void SetLoggingLevel(const ArgsManager& args)\n+{\n+    if (args.IsArgSet(\"-loglevel\")) {\n+        for (const std::string& level_str : args.GetArgs(\"-loglevel\")) {\n+            if (level_str.find_first_of(':', 3) == std::string::npos) {\n+                // user passed a global log level, i.e. -loglevel=<level>\n+                if (!LogInstance().SetLogLevel(level_str)) {\n+                    InitWarning(strprintf(_(\"Unsupported global logging level -loglevel=%s. Valid values: %s\"), level_str, LogInstance().LogLevelsString()));\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r943422350",
      "id" : 943422350,
      "in_reply_to_id" : 933943920,
      "line" : 68,
      "node_id" : "PRRC_kwDOABII5844O3uO",
      "original_commit_id" : "706805d9ac98dc4fc0543108c0bf6d914b27bef1",
      "original_line" : 68,
      "original_position" : 28,
      "original_start_line" : 66,
      "path" : "src/init/common.cpp",
      "position" : 28,
      "pull_request_review_id" : 1069629005,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943422350/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 66,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-11T12:40:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943422350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r943437168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943437168"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "706805d9ac98dc4fc0543108c0bf6d914b27bef1",
      "created_at" : "2022-08-11T12:40:37Z",
      "diff_hunk" : "@@ -93,6 +93,9 @@ New settings\n Tools and Utilities\n -------------------\n \n+- A new `-loglevel` configuration option allows setting global and per-category\n+  log severity levels. (#25203)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r943437168",
      "id" : 943437168,
      "in_reply_to_id" : 933944004,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII5844O7Vw",
      "original_commit_id" : "706805d9ac98dc4fc0543108c0bf6d914b27bef1",
      "original_line" : 97,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : 5,
      "pull_request_review_id" : 1069649402,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943437168/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-11T12:40:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943437168",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r943589946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943589946"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Suggestion ( feel free to ignore ):\r\n> \r\n> Since we are unconditionally logging any logs `>= BCLog::Level::Warning` level, should we prevent users from setting any threshold level `> BCLog::Level::Warning`? This will prevent users from having the weird behavior of successfully setting the threshold log level to `Error` but still seeing `Warning` logs. (Same for `SetCategoryLogLevel`)\r\n\r\nI updated your first commit here to do this.",
      "commit_id" : "3b777e3a2038193c56a67f373865338d1c3fcd21",
      "created_at" : "2022-08-11T14:57:22Z",
      "diff_hunk" : "@@ -443,3 +487,22 @@ void BCLog::Logger::ShrinkDebugFile()\n     else if (file != nullptr)\n         fclose(file);\n }\n+\n+bool BCLog::Logger::SetLogLevel(const std::string& level_str)\n+{\n+    const auto level = GetLogLevel(level_str);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#discussion_r943589946",
      "id" : 943589946,
      "in_reply_to_id" : 922868809,
      "line" : 495,
      "node_id" : "PRRC_kwDOABII5844Pgo6",
      "original_commit_id" : "5326f46bba46bbd111c00c616e1362276d717e99",
      "original_line" : 495,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 120,
      "pull_request_review_id" : 1069869883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25614",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943589946/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-11T14:57:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943589946",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated to address @fjahr's https://github.com/bitcoin/bitcoin/pull/25614#pullrequestreview-1064438055 suggestion in the -loglevel help with `\"Set the global or per-category severity level for logging categories enabled with the -debug configuration option or the logging RPC\"`), @w0xlt's release note feedback, @klementtan's suggestion in https://github.com/bitcoin/bitcoin/pull/25614#discussion_r922868809 and a few other minor improvements. Mind (re-)ACKing, please? (Thanks!)\r\n\r\n<details><summary><code>git diff 706805d 3b777e3</code></summary><p>\r\n\r\n```diff\r\ndiff --git a/doc/release-notes.md b/doc/release-notes.md\r\nindex 4680731280..9585144ce5 100644\r\n--- a/doc/release-notes.md\r\n+++ b/doc/release-notes.md\r\n@@ -94,7 +94,7 @@ Tools and Utilities\r\n -------------------\r\n \r\n - A new `-loglevel` configuration option allows setting global and per-category\r\n-  log severity levels. (#25203)\r\n+  log severity levels. (#25614)\r\n \r\n Wallet\r\n ------\r\ndiff --git a/src/init/common.cpp b/src/init/common.cpp\r\nindex a0f5cb2a6e..a22d921b21 100644\r\n--- a/src/init/common.cpp\r\n+++ b/src/init/common.cpp\r\n@@ -29,7 +29,7 @@ void AddLoggingArgs(ArgsManager& argsman)\r\n         ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\r\n     argsman.AddArg(\"-debugexclude=<category>\", \"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except the specified category. This option can be specified multiple times to exclude multiple categories.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\r\n     argsman.AddArg(\"-logips\", strprintf(\"Include IP addresses in debug output (default: %u)\", DEFAULT_LOGIPS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\r\n-    argsman.AddArg(\"-loglevel=<level>|<category>:<level>\", strprintf(\"Set the global or per-category debug logging severity level: %s (default=%s). Error and warning levels are logged unconditionally.  If <category>:<level> is supplied, the setting will override the global one and may be specified multiple times to set multiple category-specific levels. <category> can be: %s.\", LogInstance().LogLevelsString(), LogInstance().LogLevelToStr(), LogInstance().LogCategoriesString()), ArgsManager::DISALLOW_NEGATION | ArgsManager::DISALLOW_ELISION, OptionsCategory::DEBUG_TEST);\r\n+    argsman.AddArg(\"-loglevel=<level>|<category>:<level>\", strprintf(\"Set the global or per-category severity level for logging categories enabled with the -debug configuration option or the logging RPC: %s (default=%s); warning and error levels are always logged. If <category>:<level> is supplied, the setting will override the global one and may be specified multiple times to set multiple category-specific levels. <category> can be: %s.\", LogInstance().LogLevelsString(), LogInstance().LogLevelToStr(BCLog::DEFAULT_LOG_LEVEL), LogInstance().LogCategoriesString()), ArgsManager::DISALLOW_NEGATION | ArgsManager::DISALLOW_ELISION, OptionsCategory::DEBUG_TEST);\r\n     argsman.AddArg(\"-logtimestamps\", strprintf(\"Prepend debug output with timestamp (default: %u)\", DEFAULT_LOGTIMESTAMPS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\r\n #ifdef HAVE_THREAD_LOCAL\r\n     argsman.AddArg(\"-logthreadnames\", strprintf(\"Prepend debug output with name of the originating thread (only available on platforms supporting thread_local) (default: %u)\", DEFAULT_LOGTHREADNAMES), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\r\n@@ -64,13 +64,13 @@ void SetLoggingLevel(const ArgsManager& args)\r\n             if (level_str.find_first_of(':', 3) == std::string::npos) {\r\n                 // user passed a global log level, i.e. -loglevel=<level>\r\n                 if (!LogInstance().SetLogLevel(level_str)) {\r\n-                    InitWarning(strprintf(_(\"Unsupported global logging level -loglevel=%s. Valid values: %s\"), level_str, LogInstance().LogLevelsString()));\r\n+                    InitWarning(strprintf(_(\"Unsupported global logging level -loglevel=%s. Valid values: %s.\"), level_str, LogInstance().LogLevelsString()));\r\n                 }\r\n             } else {\r\n                 // user passed a category-specific log level, i.e. -loglevel=<category>:<level>\r\n                 const auto& toks = SplitString(level_str, ':');\r\n                 if (!(toks.size() == 2 && LogInstance().SetCategoryLogLevel(toks[0], toks[1]))) {\r\n-                    InitWarning(strprintf(_(\"Unsupported category-specific logging level -loglevel=%s. Expected -loglevel=<category>:<loglevel>\"), level_str));\r\n+                    InitWarning(strprintf(_(\"Unsupported category-specific logging level -loglevel=%s. Expected -loglevel=<category>:<loglevel>. Valid loglevel values: %s.\"), level_str, LogInstance().LogLevelsString()));\r\n                 }\r\n             }\r\n         }\r\ndiff --git a/src/logging.cpp b/src/logging.cpp\r\nindex 3891be1cdc..964eb57eb8 100644\r\n--- a/src/logging.cpp\r\n+++ b/src/logging.cpp\r\n@@ -321,9 +321,10 @@ std::vector<LogCategory> BCLog::Logger::LogCategoriesList() const\r\n     return ret;\r\n }\r\n \r\n-static constexpr std::array<BCLog::Level, static_cast<size_t>(BCLog::Level::None)> LogLevelsList()\r\n+/** Log severity levels that can be selected by the user. */\r\n+static constexpr std::array<BCLog::Level, 3> LogLevelsList()\r\n {\r\n-    return {BCLog::Level::Trace, BCLog::Level::Debug, BCLog::Level::Info, BCLog::Level::Warning, BCLog::Level::Error};\r\n+    return {BCLog::Level::Info, BCLog::Level::Debug, BCLog::Level::Trace};\r\n }\r\n \r\n std::string BCLog::Logger::LogLevelsString() const\r\n@@ -492,7 +493,7 @@ void BCLog::Logger::ShrinkDebugFile()\r\n bool BCLog::Logger::SetLogLevel(const std::string& level_str)\r\n {\r\n     const auto level = GetLogLevel(level_str);\r\n-    if (!level) return false;\r\n+    if (!level || level > BCLog::Level::Info) return false;\r\n     m_log_level = level.value();\r\n     return true;\r\n }\r\n@@ -503,7 +504,7 @@ bool BCLog::Logger::SetCategoryLogLevel(const std::string& category_str, const s\r\n     if (!GetLogCategory(flag, category_str)) return false;\r\n \r\n     const auto level = GetLogLevel(level_str);\r\n-    if (!level) return false;\r\n+    if (!level || level > BCLog::Level::Info) return false;\r\n     m_category_log_levels[flag] = level.value();\r\n     return true;\r\n }\r\ndiff --git a/src/logging.h b/src/logging.h\r\nindex 88e5486545..6d4661792b 100644\r\n--- a/src/logging.h\r\n+++ b/src/logging.h\r\n@@ -7,8 +7,8 @@\r\n #define BITCOIN_LOGGING_H\r\n \r\n #include <fs.h>\r\n-#include <tinyformat.h>\r\n #include <threadsafety.h>\r\n+#include <tinyformat.h>\r\n #include <unordered_map>\r\n #include <util/string.h>\r\n \r\n@@ -191,7 +191,7 @@ namespace BCLog {\r\n         std::string LogLevelsString() const;\r\n \r\n         //! Returns the string representation of a log level.\r\n-        std::string LogLevelToStr(BCLog::Level level = DEFAULT_LOG_LEVEL) const;\r\n+        std::string LogLevelToStr(BCLog::Level level) const;\r\n \r\n         bool DefaultShrinkDebugFile() const;\r\n     };\r\ndiff --git a/src/test/logging_tests.cpp b/src/test/logging_tests.cpp\r\nindex c3b4a8a8c1..b4fd4c93f8 100644\r\n--- a/src/test/logging_tests.cpp\r\n+++ b/src/test/logging_tests.cpp\r\n@@ -207,11 +207,11 @@ BOOST_FIXTURE_TEST_CASE(logging_Conf, LogSetup)\r\n         ResetLogger();\r\n         ArgsManager args;\r\n         args.AddArg(\"-loglevel\", \"...\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\r\n-        const char* argv_test[] = {\"bitcoind\", \"-loglevel=warning\"};\r\n+        const char* argv_test[] = {\"bitcoind\", \"-loglevel=debug\"};\r\n         std::string err;\r\n         BOOST_CHECK(args.ParseParameters(2, argv_test, err));\r\n         init::SetLoggingLevel(args);\r\n-        BOOST_CHECK_EQUAL(LogInstance().LogLevel(), BCLog::Level::Warning);\r\n+        BOOST_CHECK_EQUAL(LogInstance().LogLevel(), BCLog::Level::Debug);\r\n     }\r\n \r\n     // Set category-specific log level\r\n@@ -219,7 +219,7 @@ BOOST_FIXTURE_TEST_CASE(logging_Conf, LogSetup)\r\n         ResetLogger();\r\n         ArgsManager args;\r\n         args.AddArg(\"-loglevel\", \"...\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\r\n-        const char* argv_test[] = {\"bitcoind\", \"-loglevel=net:warning\"};\r\n+        const char* argv_test[] = {\"bitcoind\", \"-loglevel=net:trace\"};\r\n         std::string err;\r\n         BOOST_CHECK(args.ParseParameters(2, argv_test, err));\r\n         init::SetLoggingLevel(args);\r\n@@ -228,7 +228,7 @@ BOOST_FIXTURE_TEST_CASE(logging_Conf, LogSetup)\r\n         const auto& category_levels{LogInstance().CategoryLevels()};\r\n         const auto net_it{category_levels.find(BCLog::LogFlags::NET)};\r\n         BOOST_CHECK(net_it != category_levels.end());\r\n-        BOOST_CHECK_EQUAL(net_it->second, BCLog::Level::Warning);\r\n+        BOOST_CHECK_EQUAL(net_it->second, BCLog::Level::Trace);\r\n     }\r\n \r\n     // Set both global log level and category-specific log level\r\n@@ -236,7 +236,7 @@ BOOST_FIXTURE_TEST_CASE(logging_Conf, LogSetup)\r\n         ResetLogger();\r\n         ArgsManager args;\r\n         args.AddArg(\"-loglevel\", \"...\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\r\n-        const char* argv_test[] = {\"bitcoind\", \"-loglevel=debug\", \"-loglevel=net:warning\", \"-loglevel=http:error\"};\r\n+        const char* argv_test[] = {\"bitcoind\", \"-loglevel=debug\", \"-loglevel=net:trace\", \"-loglevel=http:info\"};\r\n         std::string err;\r\n         BOOST_CHECK(args.ParseParameters(4, argv_test, err));\r\n         init::SetLoggingLevel(args);\r\n@@ -247,11 +247,11 @@ BOOST_FIXTURE_TEST_CASE(logging_Conf, LogSetup)\r\n \r\n         const auto net_it{category_levels.find(BCLog::LogFlags::NET)};\r\n         BOOST_CHECK(net_it != category_levels.end());\r\n-        BOOST_CHECK_EQUAL(net_it->second, BCLog::Level::Warning);\r\n+        BOOST_CHECK_EQUAL(net_it->second, BCLog::Level::Trace);\r\n \r\n         const auto http_it{category_levels.find(BCLog::LogFlags::HTTP)};\r\n         BOOST_CHECK(http_it != category_levels.end());\r\n-        BOOST_CHECK_EQUAL(http_it->second, BCLog::Level::Error);\r\n+        BOOST_CHECK_EQUAL(http_it->second, BCLog::Level::Info);\r\n     }\r\n }\r\n```\r\n</p></details>\r\n\r\n\r\n<details><summary>Updated -loglevel help</summary><p>\r\n\r\n```\r\n$  bitcoind -h | grep -A10 loglevel\r\n  -loglevel=<level>|<category>:<level>\r\n       Set the global or per-category severity level for logging categories\r\n       enabled with the -debug configuration option or the logging RPC:\r\n       info, debug, trace (default=info); warning and error levels are\r\n       always logged. If <category>:<level> is supplied, the setting\r\n       will override the global one and may be specified multiple times\r\n       to set multiple category-specific levels. <category> can be:\r\n       addrman, bench, blockstorage, cmpctblock, coindb, estimatefee,\r\n       http, i2p, ipc, leveldb, libevent, lock, mempool, mempoolrej,\r\n       net, proxy, prune, qt, rand, reindex, rpc, selectcoins, tor,\r\n       util, validation, walletdb, zmq.\r\n```\r\n</p></details>\r\n",
      "created_at" : "2022-08-11T15:07:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25614#issuecomment-1212120795",
      "id" : 1212120795,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25614",
      "node_id" : "IC_kwDOABII585IP37b",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1212120795/reactions"
      },
      "updated_at" : "2022-08-11T15:07:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1212120795",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
