[
   {
      "body" : "would be much nicer if you just typedef std::vector<char> vector_type; :P",
      "created_at" : "2012-01-03T08:00:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3337214",
      "id" : 3337214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-03T08:00:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3337214",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "I prefer it the other way, but meh I dont care; changed.",
      "created_at" : "2012-01-03T08:04:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3337231",
      "id" : 3337231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-03T08:04:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3337231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "well, ... 1000x is perhaps an exaggeration. More like 40-50x or so.   A _complete chain_ syncup here took 29 minutes on code with all the mlock removed. On the same system syncing to about height 37k took three and a half hours earlier today.  I'm not patient enough to benchmark a complete chain syncup without the fix, though perhaps someone else will.\r\n\r\nThis problem was really tricky to findÃ¢ÂÂ oprofile cycle sampling was completely blind to the slowdown caused by mlock, I guess if I had hooked GLOBAL_TLB_FLUSHES I would have seen it but who would guess to do that?  Valgrind's callgrind couldn't see it (unsurprisingly).  I eventually found it with ltrace. \r\n\r\nIn general we shouldn't be calling mlock per-allocation for _anything_. Even on private key data it's really too slow to use more than a couple times during execution, though I guess it's not completely horrific if just used for that.  Instead we should pre-allocate a mlocked arena and allocate from that for private keys. Perhaps boost has something to make this easier?\r\n\r\nIndependent of the that, CDataStream's wide usage and allocation behavior make me cringe.  It's creating a LOT of tiny indirect heap allocation calls all over the code. That can't be good for performance. (though obviously not on the same scale as the mlock overuse)",
      "created_at" : "2012-01-03T08:07:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3337245",
      "id" : 3337245,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-03T08:10:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3337245",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Error compiling, compiler version problem?\r\n\r\ni686-apple-darwin10-llvm-g++-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)\r\n\r\nserialize.h:872: error: Ã¢ÂÂCDataStream::CDataStream(const std::vector<char, std::allocator<char> >&, int, int)Ã¢ÂÂ cannot be overloaded\r\nserialize.h:867: error: with Ã¢ÂÂCDataStream::CDataStream(const std::vector<char, std::allocator<char> >&, int, int)Ã¢ÂÂ\r\n\r\nAlso, not zeroing freed memory any more makes me nervous, because memory containing leftover garbage is a good building block for remote code exploits.  Maybe a free_after_delete_allocator... (does boost already define one?)",
      "created_at" : "2012-01-03T15:42:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3341417",
      "id" : 3341417,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-03T15:42:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3341417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "Same error here, on Ubuntu. I'm also in favor of keeping the zeroing functionality, even for non-mlocked allocations.",
      "created_at" : "2012-01-03T15:54:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3341582",
      "id" : 3341582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-03T15:54:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3341582",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Boost apparently does have an allocator, which you can override how it gets memory:  http://www.boost.org/doc/libs/1_47_0/libs/pool/doc/interfaces/user_allocator.html\r\nIf we want to be properly security paranoid, and we're using a specialized allocator, we could potentially add canary functionality just like the stack protection in addition to the zeroize. I'd have to dump the allocator usage data to see how much overhead that might  have. (e.g. add a word after (and perhaps before) every allocation which is checked on free)\r\n\r\nI think the mlock security improvement is pretty inconsequential. The significance of the zeroizing at making use-after-free exploits hard is more significant.   While we're discussing this, we should note that if we use our own allocator we should add IFDEFed out valgrind macros (see memcheck.h IIRC) so that we don't reduce valgrind's sensitivity.\r\n",
      "created_at" : "2012-01-03T16:01:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3341703",
      "id" : 3341703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-03T16:01:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3341703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Fixed (I need to stop coding so late, probably also why I didnt catch this bug before I included it in my encryption pull...)\r\nMy 2 cents (well, ok more like 1): use-after-free exploits are so rare its almost not worth doing the freeing.  When you combine that with the fact that the item in question is a std::vector, not a class, I would argue its even less of an issue.  If someone wants to use the stuff in the vector to call a nasty function, they would be 100x more likely to be able to while its still allocated and in memory, not once it has been freed/reallocated.",
      "created_at" : "2012-01-03T18:43:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3344150",
      "id" : 3344150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-03T18:43:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3344150",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Oops more to fix( I had to board and didn't have time to test it) I'll fix it when I'm in the air and have wifi\n\ngmaxwell <reply@reply.github.com> wrote:\n\n>Boost apparently does have an allocator, which you can override how it\n>gets memory: \n>http://www.boost.org/doc/libs/1_47_0/libs/pool/doc/interfaces/user_allocator.html\n>If we want to be properly security paranoid, and we're using a\n>specialized allocator, we could potentially add canary functionality\n>just like the stack protection in addition to the zeroize. I'd have to\n>dump the allocator usage data to see how much overhead that might \n>have. (e.g. add a word after (and perhaps before) every allocation\n>which is checked on free)\n>\n>I think the mlock security improvement is pretty inconsequential. The\n>significance of the zeroizing at making use-after-free exploits hard is\n>more significant.   While we're discussing this, we should note that if\n>we use our own allocator we should add IFDEFed out valgrind macros (see\n>memcheck.h IIRC) so that we don't reduce valgrind's sensitivity.\n>\n>--- \n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3341703",
      "created_at" : "2012-01-03T19:07:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3344492",
      "id" : 3344492,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-03T19:07:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3344492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Actually fixed in that commit.",
      "created_at" : "2012-01-04T07:50:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3351576",
      "id" : 3351576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-04T07:50:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3351576",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "ACK, this is great :)\r\n",
      "created_at" : "2012-01-04T10:53:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3353097",
      "id" : 3353097,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-04T10:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3353097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I love the performance improvement, but I still don't like the elimination of zero-after-free. Security in depth is important.\r\n\r\nHere's the danger:\r\n\r\nAttacker finds a remotely-exploitable buffer overrun somewhere in the networking code that crashes the process.\r\nThey turn the crash into a full remote exploit by sending carefully constructed packets before the crash packet, to initialize used-but-then-freed memory to a known state.\r\n\r\nUnlikely? Sure.\r\n\r\nIs it ugly to define a zero_after_free_allocator for CDataStream?  Sure.  (simplest implementation:  copy secure_allocator, remove the mlock/munlock calls).\r\n\r\nBut given that CDataStream is the primary interface between bitcoin and the network, I think being extra paranoid here is a very good idea.\r\n\r\n",
      "created_at" : "2012-01-04T15:49:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3356239",
      "id" : 3356239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-04T15:49:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3356239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "The performance difference from avoiding the zeroization doesn't appear to be huge: It saves about 30 seconds out of a 30 minute full sync (compared to not zeroizing).\r\n\r\nChart showing all mlocks gone, vs bluematt's patch: http://people.xiph.org/~greg/bitcoin-sync.png  The bluematt patch gets a late start due to the time spent filling the keypool, but because its a bit faster it eventually catches up.\r\n\r\nThe mlocks on the keying stuff are still problematic:  The keypool refill takes 17 seconds with the mlocks in, <1 second with them out.  Users with encrypted wallets will often do a mass refill when they unlock.   To resolve that the frequency of mlocking should be reduced.  The pool allocator I linked to above should make that easy to use (make secure_allocator use the pool, make the pool use malloc + mlock).\r\n\r\nThe frequent mlock usage may also be creating security weaknesses in the form of mlock ineffectiveness. If the process leaks mlocked pages then eventually it will hit the limit (e.g. I think most linux desktops have a 1MB/process limit or something like that), and past the limit pages will no longer be mlocked.\r\n\r\n",
      "created_at" : "2012-01-04T16:09:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3356541",
      "id" : 3356541,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-04T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3356541",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I was thinking it would make more of a performance difference, but as long as its very minor, I just made it zero_after_free.",
      "created_at" : "2012-01-04T19:04:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3359285",
      "id" : 3359285,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-04T19:04:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3359285",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "BlueMatt: I don't think you should have to provide a allocate(). Though maybe it's fine to leave it in case we convert it into a canary allocator. ",
      "created_at" : "2012-01-04T19:10:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3359368",
      "id" : 3359368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-04T19:10:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3359368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "ACK",
      "created_at" : "2012-01-04T22:49:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3362592",
      "id" : 3362592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-04T22:49:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3362592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@gmaxwell heh, of course...maybe I just need to give up programming at this point...",
      "created_at" : "2012-01-05T00:46:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3363921",
      "id" : 3363921,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-05T00:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3363921",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "ACK",
      "created_at" : "2012-01-05T04:01:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/740#issuecomment-3365334",
      "id" : 3365334,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/740",
      "updated_at" : "2012-01-05T04:01:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3365334",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   }
]
