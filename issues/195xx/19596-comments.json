[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It should be substantially faster and memory friendly for these big txns to\nfill the parents set as a vector of hashes, sort it, use std::unique to\nshift out the duplicates, and then erase garbage.\n\n\nstd::set will do O(n) allocations and use about 3x the memory compared to\nstd::vector, and set traversal and construction is worse than vector.\n\n\nThe only case where set may win is if the duplicate rate was large, but the\nadversarial worst case is better under vector than under set and I suspect\nthe average case (not a big duplicate rate) is better too.\n",
      "created_at" : "2020-07-27T06:43:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664151671",
      "id" : 664151671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDE1MTY3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T06:43:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664151671",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Good ideas. There is the question of using sets for the data structure. The first commit 2898d6505a3 \"Rewrite parent txid loop of requested transactions\" seems to break a number of functional tests for me locally. All the tests pass again after rebasing to keep only the second commit.\r\n\r\n```\r\ninterface_rest.py                       | â Failed  | 35 s\r\nmempool_packages.py                     | â Failed  | 3 s\r\np2p_segwit.py                           | â Failed  | 23 s\r\nrpc_rawtransaction.py                   | â Failed  | 9 s\r\nwallet_avoidreuse.py                    | â Failed  | 6 s\r\nwallet_avoidreuse.py --descriptors      | â Failed  | 7 s\r\nwallet_backup.py                        | â Failed  | 9 s\r\nwallet_balance.py                       | â Failed  | 15 s\r\nwallet_bumpfee.py                       | â Failed  | 5 s\r\nwallet_groups.py                        | â Failed  | 12 s\r\nwallet_listtransactions.py              | â Failed  | 36 s\r\n```",
      "created_at" : "2020-07-27T07:31:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664172214",
      "id" : 664172214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDE3MjIxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T07:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664172214",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19569 (Enable fetching of orphan parents from wtxid peers by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-27T10:34:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664291963",
      "id" : 664291963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDI5MTk2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T10:34:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664291963",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It should be substantially faster and memory friendly for these big txns to fill the parents set as a vector of hashes, sort it, use std::unique to shift out the duplicates, and then erase garbage.\r\n\r\nI think this is just:\r\n\r\n```diff\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2990,10 +2990,12 @@ void ProcessMessage(\r\n \r\n             // Deduplicate parent txids, so that we don't have to loop over\r\n             // the same parent txid more than once down below.\r\n-            std::set<uint256> unique_parents;\r\n+            std::vector<uint256> unique_parents;\r\n+            unique_parents.reserve(tx.vin.size());\r\n             for (const CTxIn& txin : tx.vin) {\r\n-                unique_parents.insert(txin.prevout.hash);\r\n+                unique_parents.push_back(txin.prevout.hash);\r\n             }\r\n+            std::sort(unique_parents.begin(), unique_parents.end());\r\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());\r\n             for (const uint256& parent_txid : unique_parents) {\r\n                 if (recentRejects->contains(parent_txid)) {\r\n                     fRejectedParents = true;\r\n```\r\n\r\nI think I agree the vector/sort/unique approach is better -- temporarily allocating up to twice the space it takes to store the transaction seems fine, and allocating memory at once rather than for each input seems better; but not sure it should matter all that much.\r\n\r\nAlternatively, could maybe do it as:\r\n\r\n```c++\r\n    for (txin : tx.vin) {\r\n        if (recentRejects->contains(txin.prevout.hash)) {\r\n            fRejectedParents = true;\r\n        }\r\n    }\r\n    if (!fRejectedParents && pfrom.m_tx_relay != nullptr) {\r\n        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\r\n        for (txin : tx.vin) {\r\n            if (pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash)) continue;\r\n            if (AlreadyHave(CInv(MSG_TX | nFetchFlags, txin.prevout.hash))) continue;\r\n            pfrom.m_tx_relay->filterInventoryKnown.insert(txin.prevout.hash)\r\n            RequestTx(txin.prevout.hash);\r\n        }\r\n    }\r\n```\r\n\r\nand rely on both recentRejects and filterInventoryKnown lookups being quick enough that duplicates don't matter, and use filterInventoryKnown to ensure the slow ops only get queried once per tx, rather than once per prevout.\r\n\r\n(travis reports a lock order violation btw)",
      "created_at" : "2020-07-27T10:38:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664296550",
      "id" : 664296550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDI5NjU1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T10:38:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664296550",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks all for the quick review!  @ajtowns I grabbed your code for using a vector instead of a set, and hopefully fixed the lock inversion problem.\r\n\r\n@jonatack I'm surprised by the test failures, is it possible the lock inversion caused that? ",
      "created_at" : "2020-07-27T23:23:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664687862",
      "id" : 664687862,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDY4Nzg2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T23:23:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664687862",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 842f908cefc33baea116bb134810fc9ff8a0ea17\r\n\r\nI don't understand where the locking failure is coming from. Is it possibly fixed now?",
      "created_at" : "2020-07-28T18:34:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-665207022",
      "id" : 665207022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTIwNzAyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-28T18:34:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665207022",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't understand where the locking failure is coming from. Is it possibly fixed now?\r\n\r\n@sipa Yes it should be fixed now; when I opened the PR initially, I wasn't letting go of the mempool lock before acquiring the others in the first commit.",
      "created_at" : "2020-07-28T18:48:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-665213776",
      "id" : 665213776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTIxMzc3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-28T18:48:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665213776",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462733100"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462733100"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: only if need to retouch, separating the `unique` operation from the `erase`, similar to the code example in https://en.cppreference.com/w/cpp/algorithm/unique, seems slightly clearer to me\r\n\r\n```diff\r\n-            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());\r\n+            auto last_unique_parent = std::unique(unique_parents.begin(), unique_parents.end());\r\n+            unique_parents.erase(last_unique_parent, unique_parents.end());\r\n```",
      "commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "created_at" : "2020-07-30T04:48:34Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());\n             for (const CTxIn& txin : tx.vin) {\n-                if (recentRejects->contains(txin.prevout.hash)) {\n+                unique_parents.push_back(txin.prevout.hash);\n+            }\n+            std::sort(unique_parents.begin(), unique_parents.end());\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462733100",
      "id" : 462733100,
      "line" : 3002,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjczMzEwMA==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3002,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 48,
      "pull_request_review_id" : 458068431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T04:51:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462733100",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462783746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462783746"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it be better to `reserve()` the capacity of this vector to `tx->vin.size()` here (or even better to `parents.size()` later) to avoid repeated reallocations in the worst case?",
      "commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "created_at" : "2020-07-30T07:00:30Z",
      "diff_hunk" : "@@ -1739,16 +1739,26 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             connman.PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(tx->GetHash());\n             // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n-            for (const auto& txin : tx->vin) {\n-                auto txinfo = mempool.info(txin.prevout.hash);\n-                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n-                    // Relaying a transaction with a recent but unconfirmed parent.\n-                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n-                        LOCK(cs_main);\n-                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);\n+            std::vector<uint256> parent_ids_to_add;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462783746",
      "id" : 462783746,
      "line" : 1742,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc4Mzc0Ng==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 1742,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 11,
      "pull_request_review_id" : 458132417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T07:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462783746",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462792647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462792647"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think `parents` would be a better name here. They only become unique later once you deduplicate them.",
      "commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "created_at" : "2020-07-30T07:11:11Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462792647",
      "id" : 462792647,
      "line" : 2997,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc5MjY0Nw==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 2997,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 42,
      "pull_request_review_id" : 458132417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T07:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462792647",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462795493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462795493"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I disagree. The remove-erase (or in this case unique-erase) idiom is common in c++. Once you've seen it a couple of times it's clear what it's doing. Plus, unique leaves the last elements of the vector in indeterminate state, so we don't want anyone to be tempted to do anything with it between unique and erase.",
      "commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "created_at" : "2020-07-30T07:14:29Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());\n             for (const CTxIn& txin : tx.vin) {\n-                if (recentRejects->contains(txin.prevout.hash)) {\n+                unique_parents.push_back(txin.prevout.hash);\n+            }\n+            std::sort(unique_parents.begin(), unique_parents.end());\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462795493",
      "id" : 462795493,
      "in_reply_to_id" : 462733100,
      "line" : 3002,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc5NTQ5Mw==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3002,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 48,
      "pull_request_review_id" : 458132417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T07:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462795493",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462798675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462798675"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This might be an over-optimization, but I expect that transactions which contain multiple inputs from the same parent may group those inputs together. If that's true, then checking the prevout hash against the last element of `unique_parents` would prevent us from adding duplicates in many cases.",
      "commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "created_at" : "2020-07-30T07:20:47Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());\n             for (const CTxIn& txin : tx.vin) {\n-                if (recentRejects->contains(txin.prevout.hash)) {\n+                unique_parents.push_back(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462798675",
      "id" : 462798675,
      "line" : 2999,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc5ODY3NQ==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 2999,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 45,
      "pull_request_review_id" : 458132417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T07:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462798675",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462801556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462801556"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since you're already touching this line, maybe we could remove `nFetchFlags` here.\r\n\r\n`AlreadyHave()` and `RequestTx()` don't do anything differently depending on whether the CInv is an MSG_TX or MSG_WITNESSTX, so adding the `MSG_WITNESS_FLAG` is useless here. (the same is true for the `nFetchFlags` in the INV processing in ProcessMessages).\r\n\r\nPerhaps best left for a different PR.",
      "commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "created_at" : "2020-07-30T07:26:30Z",
      "diff_hunk" : "@@ -2991,14 +3011,14 @@ void ProcessMessage(\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 if (!State(pfrom.GetId())->m_wtxid_relay) {\n-                    for (const CTxIn& txin : tx.vin) {\n+                    for (const uint256& parent_txid : unique_parents) {\n                         // Here, we only have the txid (and not wtxid) of the\n                         // inputs, so we only request parents from\n                         // non-wtxid-relay peers.\n                         // Eventually we should replace this with an improved\n                         // protocol for getting all unconfirmed parents.\n-                        CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                        pfrom.AddKnownTx(txin.prevout.hash);\n+                        CInv _inv(MSG_TX | nFetchFlags, parent_txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462801556",
      "id" : 462801556,
      "line" : 3020,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgwMTU1Ng==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3020,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 67,
      "pull_request_review_id" : 458132417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T07:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462801556",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462852804"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462852804"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Interesting point. If not done before, #19611 touches `nFetchFlags` while refactoring the INV processing in ProcessMessages (to take CInv::type private) and I can look at/update it there.",
      "commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "created_at" : "2020-07-30T08:57:33Z",
      "diff_hunk" : "@@ -2991,14 +3011,14 @@ void ProcessMessage(\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 if (!State(pfrom.GetId())->m_wtxid_relay) {\n-                    for (const CTxIn& txin : tx.vin) {\n+                    for (const uint256& parent_txid : unique_parents) {\n                         // Here, we only have the txid (and not wtxid) of the\n                         // inputs, so we only request parents from\n                         // non-wtxid-relay peers.\n                         // Eventually we should replace this with an improved\n                         // protocol for getting all unconfirmed parents.\n-                        CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                        pfrom.AddKnownTx(txin.prevout.hash);\n+                        CInv _inv(MSG_TX | nFetchFlags, parent_txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462852804",
      "id" : 462852804,
      "in_reply_to_id" : 462801556,
      "line" : 3020,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg1MjgwNA==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3020,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 67,
      "pull_request_review_id" : 458213961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T08:57:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462852804",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462853312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462853312"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fair.",
      "commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "created_at" : "2020-07-30T08:58:24Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());\n             for (const CTxIn& txin : tx.vin) {\n-                if (recentRejects->contains(txin.prevout.hash)) {\n+                unique_parents.push_back(txin.prevout.hash);\n+            }\n+            std::sort(unique_parents.begin(), unique_parents.end());\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462853312",
      "id" : 462853312,
      "in_reply_to_id" : 462733100,
      "line" : 3002,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg1MzMxMg==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3002,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 48,
      "pull_request_review_id" : 458214723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T08:58:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462853312",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
