[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It should be substantially faster and memory friendly for these big txns to\nfill the parents set as a vector of hashes, sort it, use std::unique to\nshift out the duplicates, and then erase garbage.\n\n\nstd::set will do O(n) allocations and use about 3x the memory compared to\nstd::vector, and set traversal and construction is worse than vector.\n\n\nThe only case where set may win is if the duplicate rate was large, but the\nadversarial worst case is better under vector than under set and I suspect\nthe average case (not a big duplicate rate) is better too.\n",
      "created_at" : "2020-07-27T06:43:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664151671",
      "id" : 664151671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDE1MTY3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T06:43:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664151671",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Good ideas. There is the question of using sets for the data structure. The first commit 2898d6505a3 \"Rewrite parent txid loop of requested transactions\" seems to break a number of functional tests for me locally. All the tests pass again after rebasing to keep only the second commit.\r\n\r\n```\r\ninterface_rest.py                       | â Failed  | 35 s\r\nmempool_packages.py                     | â Failed  | 3 s\r\np2p_segwit.py                           | â Failed  | 23 s\r\nrpc_rawtransaction.py                   | â Failed  | 9 s\r\nwallet_avoidreuse.py                    | â Failed  | 6 s\r\nwallet_avoidreuse.py --descriptors      | â Failed  | 7 s\r\nwallet_backup.py                        | â Failed  | 9 s\r\nwallet_balance.py                       | â Failed  | 15 s\r\nwallet_bumpfee.py                       | â Failed  | 5 s\r\nwallet_groups.py                        | â Failed  | 12 s\r\nwallet_listtransactions.py              | â Failed  | 36 s\r\n```",
      "created_at" : "2020-07-27T07:31:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664172214",
      "id" : 664172214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDE3MjIxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T07:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664172214",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19569 (Enable fetching of orphan parents from wtxid peers by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-27T10:34:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664291963",
      "id" : 664291963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDI5MTk2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T10:34:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664291963",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It should be substantially faster and memory friendly for these big txns to fill the parents set as a vector of hashes, sort it, use std::unique to shift out the duplicates, and then erase garbage.\r\n\r\nI think this is just:\r\n\r\n```diff\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2990,10 +2990,12 @@ void ProcessMessage(\r\n \r\n             // Deduplicate parent txids, so that we don't have to loop over\r\n             // the same parent txid more than once down below.\r\n-            std::set<uint256> unique_parents;\r\n+            std::vector<uint256> unique_parents;\r\n+            unique_parents.reserve(tx.vin.size());\r\n             for (const CTxIn& txin : tx.vin) {\r\n-                unique_parents.insert(txin.prevout.hash);\r\n+                unique_parents.push_back(txin.prevout.hash);\r\n             }\r\n+            std::sort(unique_parents.begin(), unique_parents.end());\r\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());\r\n             for (const uint256& parent_txid : unique_parents) {\r\n                 if (recentRejects->contains(parent_txid)) {\r\n                     fRejectedParents = true;\r\n```\r\n\r\nI think I agree the vector/sort/unique approach is better -- temporarily allocating up to twice the space it takes to store the transaction seems fine, and allocating memory at once rather than for each input seems better; but not sure it should matter all that much.\r\n\r\nAlternatively, could maybe do it as:\r\n\r\n```c++\r\n    for (txin : tx.vin) {\r\n        if (recentRejects->contains(txin.prevout.hash)) {\r\n            fRejectedParents = true;\r\n        }\r\n    }\r\n    if (!fRejectedParents && pfrom.m_tx_relay != nullptr) {\r\n        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\r\n        for (txin : tx.vin) {\r\n            if (pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash)) continue;\r\n            if (AlreadyHave(CInv(MSG_TX | nFetchFlags, txin.prevout.hash))) continue;\r\n            pfrom.m_tx_relay->filterInventoryKnown.insert(txin.prevout.hash)\r\n            RequestTx(txin.prevout.hash);\r\n        }\r\n    }\r\n```\r\n\r\nand rely on both recentRejects and filterInventoryKnown lookups being quick enough that duplicates don't matter, and use filterInventoryKnown to ensure the slow ops only get queried once per tx, rather than once per prevout.\r\n\r\n(travis reports a lock order violation btw)",
      "created_at" : "2020-07-27T10:38:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664296550",
      "id" : 664296550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDI5NjU1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T10:38:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664296550",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
