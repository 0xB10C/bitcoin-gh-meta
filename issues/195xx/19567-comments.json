[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19503 (Add parameter feature to serialization and use it for CAddress by sipa)\n* #18991 (Cache responses to GETADDR to prevent topology leaks by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-22T14:20:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19567#issuecomment-662481541",
      "id" : 662481541,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MjQ4MTU0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-22T23:00:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662481541",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 7aad9b2f02d0c62c05134e24b7274c27bb0a4624",
      "created_at" : "2020-07-22T15:27:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19567#issuecomment-662519787",
      "id" : 662519787,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MjUxOTc4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-22T15:27:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662519787",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19567#discussion_r459235938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19567"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459235938"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: Instead of c-style casting of one or both arguments, selecting the exact template will force the type of both arguments and the return type as well. (Just casting one argument could still yield a different return type otherwise). Though, please don't change if there is nothing else to change\r\n\r\n```suggestion\r\n            vAddr.reserve(std::min<size_t>(pto->vAddrToSend.size(), MAX_ADDR_TO_SEND));\r\n```",
      "commit_id" : "7aad9b2f02d0c62c05134e24b7274c27bb0a4624",
      "created_at" : "2020-07-23T06:22:33Z",
      "diff_hunk" : "@@ -3927,17 +3927,16 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         if (pto->IsAddrRelayPeer() && pto->m_next_addr_send < current_time) {\n             pto->m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n             std::vector<CAddress> vAddr;\n-            vAddr.reserve(pto->vAddrToSend.size());\n+            vAddr.reserve(std::min(pto->vAddrToSend.size(), (size_t)MAX_ADDR_TO_SEND));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19567#discussion_r459235938",
      "id" : 459235938,
      "line" : 3930,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIzNTkzOA==",
      "original_commit_id" : "7aad9b2f02d0c62c05134e24b7274c27bb0a4624",
      "original_line" : 3930,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 453860121,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19567",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-23T06:27:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459235938",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Amazingly I have the following, almost identical, patch lurking locally! Notice that in this case there are two other magic numbers `1000` in the code which are not `MAX_ADDR_TO_SEND`.\r\n\r\n<details>\r\n<summary>diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/net.h b/src/net.h\r\nindex a72af83ee..b059c28f8 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -53,13 +53,13 @@ static const int TIMEOUT_INTERVAL = 20 * 60;\r\n static const int FEELER_INTERVAL = 120;\r\n /** The maximum number of entries in an 'inv' protocol message */\r\n static const unsigned int MAX_INV_SZ = 50000;\r\n /** The maximum number of entries in a locator */\r\n static const unsigned int MAX_LOCATOR_SZ = 101;\r\n /** The maximum number of new addresses to accumulate before announcing. */\r\n-static const unsigned int MAX_ADDR_TO_SEND = 1000;\r\n+static constexpr size_t MAX_ADDR_TO_SEND = 1000;\r\n /** Maximum length of incoming protocol messages (no message over 4 MB is currently acceptable). */\r\n static const unsigned int MAX_PROTOCOL_MESSAGE_LENGTH = 4 * 1000 * 1000;\r\n /** Maximum length of the user agent string in `version` message */\r\n static const unsigned int MAX_SUBVERSION_LENGTH = 256;\r\n /** Maximum number of automatic outgoing nodes over which we'll relay everything (blocks, tx, addrs, etc) */\r\n static const int MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8;\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex f63d048aa..5627910ea 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2059,13 +2059,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& msg_type, CDataStream& vRec\r\n                     LogPrint(BCLog::NET, \"ProcessMessages: advertising address %s\\n\", addr.ToString());\r\n                     pfrom->PushAddress(addr, insecure_rand);\r\n                 }\r\n             }\r\n \r\n             // Get recent addresses\r\n-            if (pfrom->fOneShot || pfrom->nVersion >= CADDR_TIME_VERSION || connman->GetAddressCount() < 1000)\r\n+            if (pfrom->fOneShot || pfrom->nVersion >= CADDR_TIME_VERSION || connman->GetAddressCount() < 1000 /* is not MAX_ADDR_TO_SEND */)\r\n             {\r\n                 connman->PushMessage(pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\r\n                 pfrom->fGetAddr = true;\r\n             }\r\n             connman->MarkAddressGood(pfrom->addr);\r\n         }\r\n@@ -2154,19 +2154,18 @@ bool ProcessMessage(CNode* pfrom, const std::string& msg_type, CDataStream& vRec\r\n \r\n     if (msg_type == NetMsgType::ADDR) {\r\n         std::vector<CAddress> vAddr;\r\n         vRecv >> vAddr;\r\n \r\n         // Don't want addr from older versions unless seeding\r\n-        if (pfrom->nVersion < CADDR_TIME_VERSION && connman->GetAddressCount() > 1000)\r\n+        if (pfrom->nVersion < CADDR_TIME_VERSION && connman->GetAddressCount() > 1000 /* is not MAX_ADDR_TO_SEND */)\r\n             return true;\r\n         if (!pfrom->IsAddrRelayPeer()) {\r\n             return true;\r\n         }\r\n-        if (vAddr.size() > 1000)\r\n-        {\r\n+        if (vAddr.size() > MAX_ADDR_TO_SEND) {\r\n             LOCK(cs_main);\r\n             Misbehaving(pfrom->GetId(), 20, strprintf(\"message addr size() = %u\", vAddr.size()));\r\n             return false;\r\n         }\r\n \r\n         // Store the new addresses\r\n@@ -2196,13 +2195,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& msg_type, CDataStream& vRec\r\n             }\r\n             // Do not store addresses outside our network\r\n             if (fReachable)\r\n                 vAddrOk.push_back(addr);\r\n         }\r\n         connman->AddNewAddresses(vAddrOk, pfrom->addr, 2 * 60 * 60);\r\n-        if (vAddr.size() < 1000)\r\n+        if (vAddr.size() < MAX_ADDR_TO_SEND)\r\n             pfrom->fGetAddr = false;\r\n         if (pfrom->fOneShot)\r\n             pfrom->fDisconnect = true;\r\n         return true;\r\n     }\r\n \r\n@@ -3591,22 +3590,22 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\r\n         //\r\n         // Message: addr\r\n         //\r\n         if (pto->IsAddrRelayPeer() && pto->nNextAddrSend < nNow) {\r\n             pto->nNextAddrSend = PoissonNextSend(nNow, AVG_ADDRESS_BROADCAST_INTERVAL);\r\n             std::vector<CAddress> vAddr;\r\n-            vAddr.reserve(pto->vAddrToSend.size());\r\n+            vAddr.reserve(std::min(pto->vAddrToSend.size(), MAX_ADDR_TO_SEND));\r\n             assert(pto->m_addr_known);\r\n             for (const CAddress& addr : pto->vAddrToSend)\r\n             {\r\n                 if (!pto->m_addr_known->contains(addr.GetKey()))\r\n                 {\r\n                     pto->m_addr_known->insert(addr.GetKey());\r\n                     vAddr.push_back(addr);\r\n-                    // receiver rejects addr messages larger than 1000\r\n-                    if (vAddr.size() >= 1000)\r\n+                    // Receiver would reject addr messages with too many addresses in them.\r\n+                    if (vAddr.size() >= MAX_ADDR_TO_SEND)\r\n                     {\r\n                         connman->PushMessage(pto, msgMaker.Make(NetMsgType::ADDR, vAddr));\r\n                         vAddr.clear();\r\n                     }\r\n                 }\r\n             }\r\n```\r\n</details>",
      "created_at" : "2020-07-23T07:17:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19567#issuecomment-662855486",
      "id" : 662855486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Mjg1NTQ4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T07:17:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662855486",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19567#discussion_r459257707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19567"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459257707"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Or change the type of `MAX_ADDR_TO_SEND` from `unsigned int` to `size_t` (`std::vector::size()` always returns `size_t`).",
      "commit_id" : "7aad9b2f02d0c62c05134e24b7274c27bb0a4624",
      "created_at" : "2020-07-23T07:19:44Z",
      "diff_hunk" : "@@ -3927,17 +3927,16 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         if (pto->IsAddrRelayPeer() && pto->m_next_addr_send < current_time) {\n             pto->m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n             std::vector<CAddress> vAddr;\n-            vAddr.reserve(pto->vAddrToSend.size());\n+            vAddr.reserve(std::min(pto->vAddrToSend.size(), (size_t)MAX_ADDR_TO_SEND));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19567#discussion_r459257707",
      "id" : 459257707,
      "in_reply_to_id" : 459235938,
      "line" : 3930,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1NzcwNw==",
      "original_commit_id" : "7aad9b2f02d0c62c05134e24b7274c27bb0a4624",
      "original_line" : 3930,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 453886151,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19567",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-23T07:19:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459257707",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19567#discussion_r459260092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19567"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459260092"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Or change the type of `MAX_ADDR_TO_SEND` from `unsigned int` to `size_t` (`std::vector::size()` always returns `size_t`).\r\n\r\nTo be pedantic, `std::vector::size()` always returns `size_type` which [is](https://en.cppreference.com/w/cpp/container/vector)\r\n>  Unsigned integer type (_usually_ std::size_t) \r\n\r\n:)",
      "commit_id" : "7aad9b2f02d0c62c05134e24b7274c27bb0a4624",
      "created_at" : "2020-07-23T07:24:53Z",
      "diff_hunk" : "@@ -3927,17 +3927,16 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         if (pto->IsAddrRelayPeer() && pto->m_next_addr_send < current_time) {\n             pto->m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n             std::vector<CAddress> vAddr;\n-            vAddr.reserve(pto->vAddrToSend.size());\n+            vAddr.reserve(std::min(pto->vAddrToSend.size(), (size_t)MAX_ADDR_TO_SEND));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19567#discussion_r459260092",
      "id" : 459260092,
      "in_reply_to_id" : 459235938,
      "line" : 3930,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2MDA5Mg==",
      "original_commit_id" : "7aad9b2f02d0c62c05134e24b7274c27bb0a4624",
      "original_line" : 3930,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 453888985,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19567",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-23T07:24:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459260092",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Amazingly I have the following, almost identical, patch lurking locally! Notice that in this case there are two other magic numbers `1000` in the code which are not `MAX_ADDR_TO_SEND`.\r\n\r\nSame! :smile: Therefore, concept ACK modulo @MarcoFalke's suggestion and @vasild's added comments.\r\n",
      "created_at" : "2020-07-23T09:13:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19567#issuecomment-662902150",
      "id" : 662902150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19567",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MjkwMjE1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T09:13:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662902150",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
