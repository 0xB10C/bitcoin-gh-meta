[
   {
      "author_association" : "MEMBER",
      "body" : "Sounds good to me. I'm surprised that this wasn't already the case. Read-only code and data was already kept apart from writable data. I guess mixing read-only code and read-only data has a smaller security impact. But this is better.\r\nACK d9315eae407e3180580befda17c0005347d82900",
      "created_at" : "2020-07-15T11:17:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-658709604",
      "id" : 658709604,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19525",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODcwOTYwNA==",
      "updated_at" : "2020-07-15T11:18:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658709604",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK d9315eae407e3180580befda17c0005347d82900 -- explicit is better than implicit, and hardened is better than non-hardened.\r\n\r\n@fanquake Would it make sense to test for this in `contrib/devtools/security-check.py`?",
      "created_at" : "2020-07-15T11:21:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-658711278",
      "id" : 658711278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19525",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODcxMTI3OA==",
      "updated_at" : "2020-07-15T11:21:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658711278",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @fanquake Would it make sense to test for this in contrib/devtools/security-check.py?\r\n\r\nI think this is a good idea, but how would you go about this? It is not entirely trivial. I think you'd have to correlate sections with LOAD headers and check that data sections are in a separate LOAD command than text ones? Or maybe it's easier.\r\n\r\nWithout the option there is no `LOAD` with `r--` flags:\r\n```\r\n    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12\r\n         filesz 0x00000000008f6a87 memsz 0x00000000008f6a87 flags r-x\r\n    LOAD off    0x00000000008f7920 vaddr 0x00000000008f8920 paddr 0x00000000008f8920 align 2**12\r\n         filesz 0x00000000000183e0 memsz 0x0000000000022fd0 flags rw-\r\n```\r\nBut with the option, there are:\r\n```\r\n    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12\r\n         filesz 0x0000000000038f10 memsz 0x0000000000038f10 flags r--\r\n    LOAD off    0x0000000000039000 vaddr 0x0000000000039000 paddr 0x0000000000039000 align 2**12\r\n         filesz 0x00000000006b9389 memsz 0x00000000006b9389 flags r-x\r\n    LOAD off    0x00000000006f3000 vaddr 0x00000000006f3000 paddr 0x00000000006f3000 align 2**12\r\n         filesz 0x0000000000204847 memsz 0x0000000000204847 flags r--\r\n    LOAD off    0x00000000008f7920 vaddr 0x00000000008f8920 paddr 0x00000000008f8920 align 2**12\r\n         filesz 0x00000000000183e0 memsz 0x0000000000022fd0 flags rw-\r\n```\r\nAlso, LOADs with different flags than the previous one are page-aligned (they need to be, otherwise it wouldn't work with MMU permission bits). Maybe that's enough of a heuristic, I don't know.\r\n",
      "created_at" : "2020-07-15T11:34:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-658716154",
      "id" : 658716154,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19525",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODcxNjE1NA==",
      "updated_at" : "2020-07-15T11:34:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658716154",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
