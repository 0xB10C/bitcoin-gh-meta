[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454153812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454153812"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it is needed in python to duplicate how the script was called in the help.\r\n\r\n```suggestion\r\n        epilog=\"EXAMPLE \\n\\t{sys.argv[0]} -o out.json <data-dir>/peer_logging/**/*.dat\",\r\n```\r\n\r\nIn case you wanted to do this because the import (` sys.path.append('test/functional')`) is relative to the pwd, you could make it relative to this file, which would be more stable.\r\n\r\nAlso, a test wouldn't hurt.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T07:19:41Z",
      "diff_hunk" : "@@ -0,0 +1,91 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append('test/functional')\n+\n+from test_framework.mininode import MESSAGEMAP\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def to_jsonable(obj: Any) -> Any:\n+    ret = {}\n+    # The msg objects don't generally include \"msgtype\" in their __slots__\n+    if hasattr(obj, \"msgtype\"):\n+        ret[\"msgtype\"] = getattr(obj, \"msgtype\", None).decode()\n+    if hasattr(obj, \"__dict__\"):\n+        ret = obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            ret[slot] = to_jsonable(val)\n+    elif isinstance(obj, list):\n+        ret = [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        ret = obj.hex()\n+    else:\n+        ret = obj\n+    return ret\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header:\n+                break\n+            tmp_header = BytesIO(tmp_header)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\") # type: int\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]  # type: bytes\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\") # type: int\n+            if command not in MESSAGEMAP:\n+                continue    # For now just skip unrecognized messages\n+            msg = MESSAGEMAP[command]()\n+            msg.deserialize(f_in)\n+            msg_dict = to_jsonable(msg)\n+            msg_dict[\"time\"] = time\n+            msg_dict[\"length\"] = length\n+            msg_dict[\"recv\"] = recv\n+            messages.append(msg_dict)\n+\n+\n+def main():\n+    \"\"\"Main\"\"\"\n+    parser = argparse.ArgumentParser(\n+        description=__doc__,\n+        epilog=\"EXAMPLE \\n\\tpython contrib/peer-logging/peer-logging-parser.py -o out.json <data-dir>/peer_logging/**/*.dat\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454153812",
      "id" : 454153812,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE1MzgxMg==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 67,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 447849752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454153812",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454163465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454163465"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"dumpmessages\"?",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T07:38:12Z",
      "diff_hunk" : "@@ -3636,6 +3636,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     }\n     CNetMessage& msg(msgs.front());\n \n+    std::vector<unsigned char> tmp(msg.m_recv.data(), msg.m_recv.data() + msg.m_recv.size());\n+    if (gArgs.IsArgSet(\"-dumpmessages\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454163465",
      "id" : 454163465,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE2MzQ2NQ==",
      "original_commit_id" : "38c6f10d5c0c21818c934f5f265890909abd1ec2",
      "original_line" : 3640,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 447861896,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454163465",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK the high-level idea. I think this feature may be quite useful while debugging, and it requires very few lines of code.\r\n\r\nI have two questions though:\r\n1. How to better integrate it with the existing codebase? Should the format be similar to what we have now:\r\n`received: addr (30003 bytes) peer=0`? Or maybe it doesn't matter.\r\n2. Is there any threat of this feature being used for DoS? Perhaps on a system where file create is expensive, an attacker could disconnect/reconnect (from a new net address?) to make us create a new file? Maybe the file should be created after 1 minute of connection lifetime? (Although the messages from the very beginning should not be lost).",
      "created_at" : "2020-07-14T07:48:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-658027492",
      "id" : 658027492,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODAyNzQ5Mg==",
      "updated_at" : "2020-07-14T07:48:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658027492",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19673 (Move cs_vSend into SocketSendData and resolve RecordBytesSent lock inconsistency by troygiorshev)\n* #19107 (p2p: Move all header verification into the network layer, extend logging by troygiorshev)\n* #18784 (net: RecordBytesSent under cs_vSend lock by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-14T07:58:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-658032164",
      "id" : 658032164,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODAzMjE2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T20:02:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658032164",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454189508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454189508"
         }
      },
      "author_association" : "MEMBER",
      "body" : "use `fs::create_directories` (which is currently just an alias for boost::filesystem`, but means that the std filesystem can be substituted in when we upgrade our c++ version.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T08:25:32Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node->addr.ToString();\n+    boost::filesystem::create_directories(base_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454189508",
      "id" : 454189508,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE4OTUwOA==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 2876,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 447894982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454189508",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454189846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454189846"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Does this mean we try to create the directory every time we send/receive a message? Is that a problem?",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T08:26:09Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node->addr.ToString();\n+    boost::filesystem::create_directories(base_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454189846",
      "id" : 454189846,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE4OTg0Ng==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 2876,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 447894982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454189846",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454190521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454190521"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can this logic be moved to `ReceiveMsgBytes` so that all the message dumping is contained within the net layer?",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T08:27:21Z",
      "diff_hunk" : "@@ -3636,6 +3636,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     }\n     CNetMessage& msg(msgs.front());\n \n+    std::vector<unsigned char> tmp(msg.m_recv.data(), msg.m_recv.data() + msg.m_recv.size());\n+    if (gArgs.IsArgSet(\"-dumpmessages\"))\n+        LogMessage(pfrom, msg.m_command, tmp, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454190521",
      "id" : 454190521,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5MDUyMQ==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 3641,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 447894982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454190521",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454288639"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454288639"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ah thanks fixed!",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T11:28:35Z",
      "diff_hunk" : "@@ -3636,6 +3636,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     }\n     CNetMessage& msg(msgs.front());\n \n+    std::vector<unsigned char> tmp(msg.m_recv.data(), msg.m_recv.data() + msg.m_recv.size());\n+    if (gArgs.IsArgSet(\"-dumpmessages\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454288639",
      "id" : 454288639,
      "in_reply_to_id" : 454163465,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4ODYzOQ==",
      "original_commit_id" : "38c6f10d5c0c21818c934f5f265890909abd1ec2",
      "original_line" : 3640,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 448020557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454288639",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-07-14T13:16:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-658173380",
      "id" : 658173380,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODE3MzM4MA==",
      "updated_at" : "2020-07-14T13:16:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658173380",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454466665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454466665"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes!  It's unfortunate that we have some MessageHandler code in net.cpp.  Right now all of the logging is done is done in MessageHandler, I think we should keep it that way.  It would be nice to move PushMessage to net_processing some day.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T16:01:25Z",
      "diff_hunk" : "@@ -3636,6 +3636,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     }\n     CNetMessage& msg(msgs.front());\n \n+    std::vector<unsigned char> tmp(msg.m_recv.data(), msg.m_recv.data() + msg.m_recv.size());\n+    if (gArgs.IsArgSet(\"-dumpmessages\"))\n+        LogMessage(pfrom, msg.m_command, tmp, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454466665",
      "id" : 454466665,
      "in_reply_to_id" : 454190521,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ2NjY2NQ==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 3641,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 448247139,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454466665",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454484398"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454484398"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\nvoid LogMessage(const CNode& node, const std::string& command, const std::vector<unsigned char>& data, bool is_incoming)\r\n```\r\n\r\nRationale: [F.15: Prefer simple and conventional ways of passing information ](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-conventional) (C++ Core Guidlines) :)",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T16:28:11Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454484398",
      "id" : 454484398,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ4NDM5OA==",
      "original_commit_id" : "cf5966a76f136d1ca7a986d6ca11808047a812c6",
      "original_line" : 2871,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 448269477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454484398",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454512068"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454512068"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, you're right. Even though PushMessage is in net.cpp, it's always executed on the MessageHandler thread.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T17:11:49Z",
      "diff_hunk" : "@@ -3636,6 +3636,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     }\n     CNetMessage& msg(msgs.front());\n \n+    std::vector<unsigned char> tmp(msg.m_recv.data(), msg.m_recv.data() + msg.m_recv.size());\n+    if (gArgs.IsArgSet(\"-dumpmessages\"))\n+        LogMessage(pfrom, msg.m_command, tmp, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454512068",
      "id" : 454512068,
      "in_reply_to_id" : 454190521,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxMjA2OA==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 3641,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 448303477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454512068",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454516050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454516050"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    f.write((const char*)data.data(), data.size());\r\n```",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T17:18:25Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node->addr.ToString();\n+    boost::filesystem::create_directories(base_path);\n+\n+    fs::path path = base_path / (is_incoming ? \"msgs_recv.dat\" : \"msgs_sent.dat\");\n+    std::ofstream f(path.c_str(), std::ios::binary | std::ios::out | std::ios::app);\n+\n+    f.write((char *) &time, sizeof(time));\n+    f << command.data();\n+    for (int i = command.length(); i < CMessageHeader::COMMAND_SIZE; ++i){\n+        f << '\\0';\n+    }\n+    uint32_t size = data.size();\n+    f.write((char *) &size, sizeof(size));\n+    for (auto i : data){\n+        f << i;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454516050",
      "id" : 454516050,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxNjA1MA==",
      "original_commit_id" : "cf5966a76f136d1ca7a986d6ca11808047a812c6",
      "original_line" : 2890,
      "original_position" : 33,
      "original_start_line" : 2888,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 448269477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454516050",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454516500"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454516500"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\nvoid LogMessage(const CNode& node, const std::string& command, const std::vector<unsigned char>& data, bool is_incoming);\r\n```",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T17:19:11Z",
      "diff_hunk" : "@@ -1004,4 +1004,6 @@ inline std::chrono::microseconds PoissonNextSend(std::chrono::microseconds now,\n     return std::chrono::microseconds{PoissonNextSend(now.count(), average_interval.count())};\n }\n \n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454516500",
      "id" : 454516500,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxNjUwMA==",
      "original_commit_id" : "cf5966a76f136d1ca7a986d6ca11808047a812c6",
      "original_line" : 1007,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 448269477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454516500",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454516814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454516814"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The scope of `tmp` can be limited to the `gArgs.IsArgSet(\"-logmessages\")` case below.\r\n\r\n(Or perhaps skip introducing a new variable - the name `tmp` really doesn't add any information to the reader.)",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T17:19:41Z",
      "diff_hunk" : "@@ -3636,6 +3636,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     }\n     CNetMessage& msg(msgs.front());\n \n+    std::vector<unsigned char> tmp(msg.m_recv.data(), msg.m_recv.data() + msg.m_recv.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454516814",
      "id" : 454516814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxNjgxNA==",
      "original_commit_id" : "cf5966a76f136d1ca7a986d6ca11808047a812c6",
      "original_line" : 3639,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 448269477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454516814",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454525647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454525647"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could use `CAutoFile` instead (which provides proper serialization automatically)?\r\n\r\nNo need for `c_str()` here :)",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T17:33:50Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node->addr.ToString();\n+    boost::filesystem::create_directories(base_path);\n+\n+    fs::path path = base_path / (is_incoming ? \"msgs_recv.dat\" : \"msgs_sent.dat\");\n+    std::ofstream f(path.c_str(), std::ios::binary | std::ios::out | std::ios::app);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454525647",
      "id" : 454525647,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUyNTY0Nw==",
      "original_commit_id" : "cf5966a76f136d1ca7a986d6ca11808047a812c6",
      "original_line" : 2879,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 448269477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454525647",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454531068"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454531068"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Could be introduced when needed?\r\n\r\nRationale: [ES.21: Donât introduce a variable (or constant) before you need to use it](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-introduce) (C++ Core Guidelines) :)",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T17:42:24Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454531068",
      "id" : 454531068,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzMTA2OA==",
      "original_commit_id" : "cf5966a76f136d1ca7a986d6ca11808047a812c6",
      "original_line" : 2870,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 448269477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454531068",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454586940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454586940"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit. If if log messages where enabled  by` -logmessages=<LogMessageDir> `not empty\r\nwe would have a separate LogMessagesDir , instead of logging in DataDir by default. And DataDir should be always <> LogDir.imho. see   #19419  ",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-14T19:18:41Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node->addr.ToString();\n+    boost::filesystem::create_directories(base_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r454586940",
      "id" : 454586940,
      "in_reply_to_id" : 454189508,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4Njk0MA==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 2876,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 448394427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/454586940",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456432065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456432065"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is ok.  As per the boost docs: \"Creation failure because [base_path] resolves to an existing directory shall not be treated as an error.\"",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-17T13:11:13Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node->addr.ToString();\n+    boost::filesystem::create_directories(base_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456432065",
      "id" : 456432065,
      "in_reply_to_id" : 454189846,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQzMjA2NQ==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 2876,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 450643906,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456432065",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456464413"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456464413"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I can't imagine this is a performance hit, but if anyone is worried I guess this could be moved to the CNode's constructor.  I would want to first be really sure that a node's address won't ever change.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-17T14:06:06Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node->addr.ToString();\n+    boost::filesystem::create_directories(base_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456464413",
      "id" : 456464413,
      "in_reply_to_id" : 454189846,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ2NDQxMw==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 2876,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 450686601,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456464413",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456978790"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456978790"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> \r\n> \r\n> Nit. If if log messages where enabled by`-logmessages=<LogMessageDir>`not empty\r\n> we would have a separate LogMessagesDir , instead of logging in DataDir by default. And DataDir should be always <> LogDir.imho. see #19419\r\n\r\nI'll consider this, having the log directory configurable would be nice.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-20T00:51:12Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node->addr.ToString();\n+    boost::filesystem::create_directories(base_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456978790",
      "id" : 456978790,
      "in_reply_to_id" : 454189508,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3ODc5MA==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 2876,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 451187565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456978790",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456998242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456998242"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks :)",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-20T02:36:52Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456998242",
      "id" : 456998242,
      "in_reply_to_id" : 454484398,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODI0Mg==",
      "original_commit_id" : "cf5966a76f136d1ca7a986d6ca11808047a812c6",
      "original_line" : 2871,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 451255367,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456998242",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456998332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456998332"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for suggesting this, `CAutoFile` is much nicer",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-20T02:37:11Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node->addr.ToString();\n+    boost::filesystem::create_directories(base_path);\n+\n+    fs::path path = base_path / (is_incoming ? \"msgs_recv.dat\" : \"msgs_sent.dat\");\n+    std::ofstream f(path.c_str(), std::ios::binary | std::ios::out | std::ios::app);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456998332",
      "id" : 456998332,
      "in_reply_to_id" : 454525647,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODMzMg==",
      "original_commit_id" : "cf5966a76f136d1ca7a986d6ca11808047a812c6",
      "original_line" : 2879,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 451255566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456998332",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456998405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456998405"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-20T02:37:23Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node->addr.ToString();\n+    boost::filesystem::create_directories(base_path);\n+\n+    fs::path path = base_path / (is_incoming ? \"msgs_recv.dat\" : \"msgs_sent.dat\");\n+    std::ofstream f(path.c_str(), std::ios::binary | std::ios::out | std::ios::app);\n+\n+    f.write((char *) &time, sizeof(time));\n+    f << command.data();\n+    for (int i = command.length(); i < CMessageHeader::COMMAND_SIZE; ++i){\n+        f << '\\0';\n+    }\n+    uint32_t size = data.size();\n+    f.write((char *) &size, sizeof(size));\n+    for (auto i : data){\n+        f << i;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456998405",
      "id" : 456998405,
      "in_reply_to_id" : 454516050,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODQwNQ==",
      "original_commit_id" : "cf5966a76f136d1ca7a986d6ca11808047a812c6",
      "original_line" : 2890,
      "original_position" : 33,
      "original_start_line" : 2888,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 451255673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456998405",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456998477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456998477"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good point, done",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-20T02:37:39Z",
      "diff_hunk" : "@@ -3636,6 +3636,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     }\n     CNetMessage& msg(msgs.front());\n \n+    std::vector<unsigned char> tmp(msg.m_recv.data(), msg.m_recv.data() + msg.m_recv.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r456998477",
      "id" : 456998477,
      "in_reply_to_id" : 454516814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODQ3Nw==",
      "original_commit_id" : "cf5966a76f136d1ca7a986d6ca11808047a812c6",
      "original_line" : 3639,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 451255883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456998477",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`git range-diff master cf5966a 9898fa1`\r\n\r\nMade suggested changes and fixed the Travis problem.",
      "created_at" : "2020-07-20T02:39:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-660768336",
      "id" : 660768336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MDc2ODMzNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-20T02:39:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/660768336",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r457072901"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457072901"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit:\r\n\r\n```suggestion\r\n        if (gArgs.IsArgSet(\"-logmessages\")) {\r\n```",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-20T05:47:11Z",
      "diff_hunk" : "@@ -2813,6 +2813,8 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n \n         if (pnode->nSendSize > nSendBufferMaxSize)\n             pnode->fPauseSend = true;\n+        if (gArgs.IsArgSet(\"-logmessages\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r457072901",
      "id" : 457072901,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3MjkwMQ==",
      "original_commit_id" : "9898fa106229d79772657ae8c4ff4555e8641aad",
      "original_line" : 2816,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 447849752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457072901",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r457073081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457073081"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit:\r\n\r\n```suggestion\r\n            LogMessage(*pnode, msg.m_type, msg.data, /* incoming */ false);\r\n```",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-20T05:47:30Z",
      "diff_hunk" : "@@ -2813,6 +2813,8 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n \n         if (pnode->nSendSize > nSendBufferMaxSize)\n             pnode->fPauseSend = true;\n+        if (gArgs.IsArgSet(\"-logmessages\"))\n+            LogMessage(*pnode, msg.m_type, msg.data, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r457073081",
      "id" : 457073081,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3MzA4MQ==",
      "original_commit_id" : "9898fa106229d79772657ae8c4ff4555e8641aad",
      "original_line" : 2817,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 447849752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457073081",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r457075888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457075888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Only valid message types are logged, not junk data\r\n\r\n```suggestion\r\nvoid LogMessage(const CNode& node, const std::string& msg_type, const std::vector<unsigned char>& data, bool is_incoming)\r\n```\r\n\r\nAlso, instead of copying the message data into a new vector, why not use a cheap std::span?",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-20T05:53:02Z",
      "diff_hunk" : "@@ -2865,3 +2867,23 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(const CNode& node, const std::string& command, const std::vector<unsigned char>& data, bool is_incoming)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r457075888",
      "id" : 457075888,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3NTg4OA==",
      "original_commit_id" : "9898fa106229d79772657ae8c4ff4555e8641aad",
      "original_line" : 2871,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 447849752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457075888",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r457076718"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457076718"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Q: Is it important that this time is equal to the receive time of the message?\r\n\r\nIf yes, you could pass in the time from the caller. (msg.m_time)",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-20T05:54:42Z",
      "diff_hunk" : "@@ -2865,3 +2867,23 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(const CNode& node, const std::string& command, const std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r457076718",
      "id" : 457076718,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3NjcxOA==",
      "original_commit_id" : "9898fa106229d79772657ae8c4ff4555e8641aad",
      "original_line" : 2870,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 447849752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457076718",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@naumenkogs thanks for the concept ack!\r\n\r\n> How to better integrate it with the existing codebase? Should the format be similar to what we have now:\r\nreceived: addr (30003 bytes) peer=0? Or maybe it doesn't matter.\r\n\r\nIMO that format is good for a debug log, where things need to be compact on a single line.  For this I much prefer JSON.\r\n\r\n> Is there any threat of this feature being used for DoS? ...\r\n\r\nAt the moment, with this locked behind a debug flag, I'm not worried about DoS vectors.  For both debugging and learning someone should be at the keyboard and the node shouldn't be working with anything real.  Additionally, I imagine that if writing a very small amount to disk in this way (every time a message is sent or received) is a DoS vector then there are many more serious ones available.\r\n\r\nThat said, this is worth consideration, especially if we think this will one day be used for wider purposes.\r\n",
      "created_at" : "2020-07-21T12:48:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-661838550",
      "id" : 661838550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MTgzODU1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-21T12:48:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/661838550",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r458760191"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458760191"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The exact time doesn't matter, this is mainly used for sorting the messages later.  All that's important is that messages that are sent later have a later time.  To avoid races I only call LogMessage from the MessageHandler thread.  When sending a message in PushMessage, we don't have anything like msg.m_time until the message is into SocketHandler.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-22T12:39:01Z",
      "diff_hunk" : "@@ -2865,3 +2867,23 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(const CNode& node, const std::string& command, const std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r458760191",
      "id" : 458760191,
      "in_reply_to_id" : 457076718,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2MDE5MQ==",
      "original_commit_id" : "9898fa106229d79772657ae8c4ff4555e8641aad",
      "original_line" : 2870,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 453275506,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458760191",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r458763531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458763531"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd prefer to keep this as it is.  I understand (and agree with) ES.21 completely, but I'm trying to treat `time` as an argument, not a local, which is why it's right at the top.  I would love to pass it in instead but practically can't (see [here](https://github.com/bitcoin/bitcoin/pull/19509#discussion_r458760191)).\r\n\r\nIf anyone is strongly against this I'll move it.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-22T12:44:55Z",
      "diff_hunk" : "@@ -2865,3 +2867,25 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(CNode* node, std::string& command, std::vector<unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r458763531",
      "id" : 458763531,
      "in_reply_to_id" : 454531068,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2MzUzMQ==",
      "original_commit_id" : "cf5966a76f136d1ca7a986d6ca11808047a812c6",
      "original_line" : 2870,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 453279914,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458763531",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r458765292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458765292"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah I misread the style guide!\r\n\r\nNow that I'm adding braces to this, I'll add them to the rest of PushMessage.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-22T12:47:50Z",
      "diff_hunk" : "@@ -2813,6 +2813,8 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n \n         if (pnode->nSendSize > nSendBufferMaxSize)\n             pnode->fPauseSend = true;\n+        if (gArgs.IsArgSet(\"-logmessages\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r458765292",
      "id" : 458765292,
      "in_reply_to_id" : 457072901,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2NTI5Mg==",
      "original_commit_id" : "9898fa106229d79772657ae8c4ff4555e8641aad",
      "original_line" : 2816,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 453282138,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458765292",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459000213"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459000213"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done\r\n\r\n(That sort of format string is something I'm looking forward to in 3.6 ð)",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-22T18:33:21Z",
      "diff_hunk" : "@@ -0,0 +1,91 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append('test/functional')\n+\n+from test_framework.mininode import MESSAGEMAP\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def to_jsonable(obj: Any) -> Any:\n+    ret = {}\n+    # The msg objects don't generally include \"msgtype\" in their __slots__\n+    if hasattr(obj, \"msgtype\"):\n+        ret[\"msgtype\"] = getattr(obj, \"msgtype\", None).decode()\n+    if hasattr(obj, \"__dict__\"):\n+        ret = obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            ret[slot] = to_jsonable(val)\n+    elif isinstance(obj, list):\n+        ret = [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        ret = obj.hex()\n+    else:\n+        ret = obj\n+    return ret\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header:\n+                break\n+            tmp_header = BytesIO(tmp_header)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\") # type: int\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]  # type: bytes\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\") # type: int\n+            if command not in MESSAGEMAP:\n+                continue    # For now just skip unrecognized messages\n+            msg = MESSAGEMAP[command]()\n+            msg.deserialize(f_in)\n+            msg_dict = to_jsonable(msg)\n+            msg_dict[\"time\"] = time\n+            msg_dict[\"length\"] = length\n+            msg_dict[\"recv\"] = recv\n+            messages.append(msg_dict)\n+\n+\n+def main():\n+    \"\"\"Main\"\"\"\n+    parser = argparse.ArgumentParser(\n+        description=__doc__,\n+        epilog=\"EXAMPLE \\n\\tpython contrib/peer-logging/peer-logging-parser.py -o out.json <data-dir>/peer_logging/**/*.dat\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459000213",
      "id" : 459000213,
      "in_reply_to_id" : 454153812,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwMDIxMw==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 67,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 453581023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459000213",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459000283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459000283"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "A test is in the works",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-22T18:33:30Z",
      "diff_hunk" : "@@ -0,0 +1,91 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append('test/functional')\n+\n+from test_framework.mininode import MESSAGEMAP\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def to_jsonable(obj: Any) -> Any:\n+    ret = {}\n+    # The msg objects don't generally include \"msgtype\" in their __slots__\n+    if hasattr(obj, \"msgtype\"):\n+        ret[\"msgtype\"] = getattr(obj, \"msgtype\", None).decode()\n+    if hasattr(obj, \"__dict__\"):\n+        ret = obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            ret[slot] = to_jsonable(val)\n+    elif isinstance(obj, list):\n+        ret = [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        ret = obj.hex()\n+    else:\n+        ret = obj\n+    return ret\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header:\n+                break\n+            tmp_header = BytesIO(tmp_header)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\") # type: int\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]  # type: bytes\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\") # type: int\n+            if command not in MESSAGEMAP:\n+                continue    # For now just skip unrecognized messages\n+            msg = MESSAGEMAP[command]()\n+            msg.deserialize(f_in)\n+            msg_dict = to_jsonable(msg)\n+            msg_dict[\"time\"] = time\n+            msg_dict[\"length\"] = length\n+            msg_dict[\"recv\"] = recv\n+            messages.append(msg_dict)\n+\n+\n+def main():\n+    \"\"\"Main\"\"\"\n+    parser = argparse.ArgumentParser(\n+        description=__doc__,\n+        epilog=\"EXAMPLE \\n\\tpython contrib/peer-logging/peer-logging-parser.py -o out.json <data-dir>/peer_logging/**/*.dat\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459000283",
      "id" : 459000283,
      "in_reply_to_id" : 454153812,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwMDI4Mw==",
      "original_commit_id" : "dc393b30e97f743c1e58ce94051c4f4f918beb70",
      "original_line" : 67,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 453581112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459000283",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459000374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459000374"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-22T18:33:39Z",
      "diff_hunk" : "@@ -2813,6 +2813,8 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n \n         if (pnode->nSendSize > nSendBufferMaxSize)\n             pnode->fPauseSend = true;\n+        if (gArgs.IsArgSet(\"-logmessages\"))\n+            LogMessage(*pnode, msg.m_type, msg.data, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459000374",
      "id" : 459000374,
      "in_reply_to_id" : 457073081,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwMDM3NA==",
      "original_commit_id" : "9898fa106229d79772657ae8c4ff4555e8641aad",
      "original_line" : 2817,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 453581216,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459000374",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459000465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459000465"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point!  done",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-22T18:33:47Z",
      "diff_hunk" : "@@ -2865,3 +2867,23 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(const CNode& node, const std::string& command, const std::vector<unsigned char>& data, bool is_incoming)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459000465",
      "id" : 459000465,
      "in_reply_to_id" : 457075888,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwMDQ2NQ==",
      "original_commit_id" : "9898fa106229d79772657ae8c4ff4555e8641aad",
      "original_line" : 2871,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 453581310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459000465",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`git range-diff master 9898fa1 cbb154e`\r\n\r\n- Trivial Rebase\r\n- Added a commit at the beginning cleaning up PushMessage's and ProcessMessages's if statements\r\n- LogMessage now uses Span\r\n- command -> msg_type\r\n- python import is now relative to file\r\n- other small comments and fixes",
      "created_at" : "2020-07-22T19:03:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-662631024",
      "id" : 662631024,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MjYzMTAyNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-22T19:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662631024",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459072714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459072714"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please avoid change unrelated lines (unless there are good reasons doing so). It makes it harder to reason about the actual changes if one includes unrelated whitespace changes in the same commit :)\r\n\r\nApplies also below and throughout this PR.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-22T20:46:03Z",
      "diff_hunk" : "@@ -2811,18 +2811,17 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n         pnode->mapSendBytesPerMsgCmd[msg.m_type] += nTotalSize;\n         pnode->nSendSize += nTotalSize;\n \n-        if (pnode->nSendSize > nSendBufferMaxSize)\n-            pnode->fPauseSend = true;\n+        if (pnode->nSendSize > nSendBufferMaxSize) pnode->fPauseSend = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459072714",
      "id" : 459072714,
      "line" : 2816,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA3MjcxNA==",
      "original_commit_id" : "cbb154e5d5b001b8e940be49a9692e2f6e27e29c",
      "original_line" : 2816,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 453671898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459072714",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459075159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459075159"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here (and below): don't change unrelated lines :)",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-22T20:50:44Z",
      "diff_hunk" : "@@ -3648,14 +3648,12 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     if (!pfrom->orphan_work_set.empty()) return true;\n \n     // Don't bother if send buffer is too full to respond anyway\n-    if (pfrom->fPauseSend)\n-        return false;\n+    if (pfrom->fPauseSend) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459075159",
      "id" : 459075159,
      "line" : 3793,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA3NTE1OQ==",
      "original_commit_id" : "cbb154e5d5b001b8e940be49a9692e2f6e27e29c",
      "original_line" : 3793,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 6,
      "pull_request_review_id" : 453671898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459075159",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459179239"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459179239"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I made these changes in response to [this comment](https://github.com/bitcoin/bitcoin/pull/19509#discussion_r457072901).  As far as I can tell they're all in the first commit 84a79d61cef5c9386597869adccda4aa5992cc96 (which only contains the unrelated changes), and they don't show up at all in `git range-diff master 9898fa1 cbb154e`.  i.e. on my machine I haven't mixed any real changes with whitespace changes.\r\n\r\nAre you seeing something different?  Is there a better way I could have done this?",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-23T02:05:34Z",
      "diff_hunk" : "@@ -2811,18 +2811,17 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n         pnode->mapSendBytesPerMsgCmd[msg.m_type] += nTotalSize;\n         pnode->nSendSize += nTotalSize;\n \n-        if (pnode->nSendSize > nSendBufferMaxSize)\n-            pnode->fPauseSend = true;\n+        if (pnode->nSendSize > nSendBufferMaxSize) pnode->fPauseSend = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459179239",
      "id" : 459179239,
      "in_reply_to_id" : 459072714,
      "line" : 2816,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE3OTIzOQ==",
      "original_commit_id" : "cbb154e5d5b001b8e940be49a9692e2f6e27e29c",
      "original_line" : 2816,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 453798174,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459179239",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459347986"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459347986"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems reasonable. Although the general advice is to not fix style on lines that you're not otherwise touching, if it's all contained within a single cleanup commit, then I think that's also fine.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-23T10:14:25Z",
      "diff_hunk" : "@@ -2811,18 +2811,17 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n         pnode->mapSendBytesPerMsgCmd[msg.m_type] += nTotalSize;\n         pnode->nSendSize += nTotalSize;\n \n-        if (pnode->nSendSize > nSendBufferMaxSize)\n-            pnode->fPauseSend = true;\n+        if (pnode->nSendSize > nSendBufferMaxSize) pnode->fPauseSend = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459347986",
      "id" : 459347986,
      "in_reply_to_id" : 459072714,
      "line" : 2816,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM0Nzk4Ng==",
      "original_commit_id" : "cbb154e5d5b001b8e940be49a9692e2f6e27e29c",
      "original_line" : 2816,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 6,
      "pull_request_review_id" : 453999273,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459347986",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459643471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459643471"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    for (auto i = msg_type.length(); i < CMessageHeader::COMMAND_SIZE; ++i) {\r\n```\r\n\r\nto fix the compile failure:\r\n\r\n```\r\nnet.cpp:2880:39: error: comparison of integers of different signs: 'int' and 'const size_t' (aka 'const unsigned long') [-Werror,-Wsign-compare]\r\n\r\n    for (int i = msg_type.length(); i < CMessageHeader::COMMAND_SIZE; ++i) {\r\n\r\n                                    ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n1 error generated.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-23T18:23:55Z",
      "diff_hunk" : "@@ -2865,3 +2864,23 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(const CNode& node, const std::string& msg_type, const Span<const unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node.addr.ToString();\n+    fs::create_directories(base_path);\n+\n+    fs::path path = base_path / (is_incoming ? \"msgs_recv.dat\" : \"msgs_sent.dat\");\n+    CAutoFile f(fsbridge::fopen(path, \"ab\"), SER_DISK, CLIENT_VERSION);\n+\n+    f.write((const char*)&time, sizeof(time));\n+    f.write(msg_type.data(), msg_type.length());\n+    for (int i = msg_type.length(); i < CMessageHeader::COMMAND_SIZE; ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459643471",
      "id" : 459643471,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY0MzQ3MQ==",
      "original_commit_id" : "cbb154e5d5b001b8e940be49a9692e2f6e27e29c",
      "original_line" : 2880,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 454388361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459643471",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459655628"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459655628"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure why this didn't come up before, and still doesn't come up on my machine :/  Regardless, fixed.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-23T18:45:29Z",
      "diff_hunk" : "@@ -2865,3 +2864,23 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(const CNode& node, const std::string& msg_type, const Span<const unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node.addr.ToString();\n+    fs::create_directories(base_path);\n+\n+    fs::path path = base_path / (is_incoming ? \"msgs_recv.dat\" : \"msgs_sent.dat\");\n+    CAutoFile f(fsbridge::fopen(path, \"ab\"), SER_DISK, CLIENT_VERSION);\n+\n+    f.write((const char*)&time, sizeof(time));\n+    f.write(msg_type.data(), msg_type.length());\n+    for (int i = msg_type.length(); i < CMessageHeader::COMMAND_SIZE; ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459655628",
      "id" : 459655628,
      "in_reply_to_id" : 459643471,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1NTYyOA==",
      "original_commit_id" : "cbb154e5d5b001b8e940be49a9692e2f6e27e29c",
      "original_line" : 2880,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 454403731,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459655628",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`git range-diff master cbb154e 863c6b5`\r\n\r\n- Added Test\r\n- Fixed Travis warning\r\n- Made Time Mockable",
      "created_at" : "2020-07-23T18:47:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-663172100",
      "id" : 663172100,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzE3MjEwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T18:47:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663172100",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459677362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459677362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't know either: #19123",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-23T19:26:02Z",
      "diff_hunk" : "@@ -2865,3 +2864,23 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(const CNode& node, const std::string& msg_type, const Span<const unsigned char>& data, bool is_incoming)\n+{\n+    int64_t time = GetTimeMicros();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node.addr.ToString();\n+    fs::create_directories(base_path);\n+\n+    fs::path path = base_path / (is_incoming ? \"msgs_recv.dat\" : \"msgs_sent.dat\");\n+    CAutoFile f(fsbridge::fopen(path, \"ab\"), SER_DISK, CLIENT_VERSION);\n+\n+    f.write((const char*)&time, sizeof(time));\n+    f.write(msg_type.data(), msg_type.length());\n+    for (int i = msg_type.length(); i < CMessageHeader::COMMAND_SIZE; ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r459677362",
      "id" : 459677362,
      "in_reply_to_id" : 459643471,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY3NzM2Mg==",
      "original_commit_id" : "cbb154e5d5b001b8e940be49a9692e2f6e27e29c",
      "original_line" : 2880,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 454431303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459677362",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Huge Concept ACK! Very nice idea with simple implementation, I'm also pretty sure this will be very helpful for debugging purposes. Will definitely code-review that within the next days.\r\n\r\nJust one detail I find quite odd: why create two files instead of just one and not rather include the direction as part of the serialization for each message? Is it only about saving disk space (1 byte per message) or is there another reason I'm not aware of? I've never seen a logging/sniffing tool that divides up into multiple files before and tend to think it would only complicate re-assembling the whole send/receive order later.",
      "created_at" : "2020-07-26T19:45:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-664031860",
      "id" : 664031860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDAzMTg2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-26T19:48:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664031860",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@theStack Thanks for the concept ACK!\r\n\r\n> why create two files instead of just one\r\n\r\nGood question; I considered a few ways of doing this.  Just to be clear, I create two files _per peer_.  Partially, yes, this saves 1 byte per message.  I could have also just logged everything into one file, which meant I would have had to save the peer address alongside each message as well.  Ultimately, I chose the current way with the intention of simplifying the usage of the parser.  As it stands, the parser is a simple \"just give me what you want me to parse\" sort of program.  This allows the user to take advantage of globbing when selecting which files to parse (e.g. `**/*.dat` or `**/msgs_recv.dat`).  Additionally the parser, being written in python, is actually noticeably slow.  Forcing it to process all of the messages and then filter would be unnecessarily inconvenient.",
      "created_at" : "2020-07-27T12:46:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-664374225",
      "id" : 664374225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDM3NDIyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T12:47:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664374225",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > why create two files instead of just one\r\n> \r\n> Good question; I considered a few ways of doing this. Just to be clear, I create two files _per peer_. Partially, yes, this saves 1 byte per message. I could have also just logged everything into one file, which meant I would have had to save the peer address alongside each message as well. Ultimately, I chose the current way with the intention of simplifying the usage of the parser. As it stands, the parser is a simple \"just give me what you want me to parse\" sort of program. This allows the user to take advantage of globbing when selecting which files to parse (e.g. `**/*.dat` or `**/msgs_recv.dat`). Additionally the parser, being written in python, is actually noticeably slow. Forcing it to process all of the messages and then filter would be unnecessarily inconvenient.\r\n\r\nGenerally I'd say it makes sense to divide up into files/folders by criteria that I would likely use as frequent search key for accessing the logging data. Would I often want to access logs for a certain peer? Absolutely. Would I want to see _only_ incoming or outcoming messages for a certain peer? Very unlikely, as the resulting data is probably not very valueable without the whole request/response stream in both directions. On the other hand, your arguments for simplification, efficiency (if only looking for incoming _or_ outcoming messages is really such a frequent operation) and flexibility are also very strong, hence this solution is also okay with me.\r\n\r\nI reviewed the code in more detail and noticed that there may be a serialization endianness problem, see the comments soon following below.\r\n",
      "created_at" : "2020-07-28T12:53:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-665021261",
      "id" : 665021261,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTAyMTI2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-28T12:53:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665021261",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r461556730"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461556730"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This way of serialization doesn't seem to be endian-agnostic, i.e. it depends on the architecture whether this is written out in big or little endian format. In the parsing script you assume both time and data size are stored in little endian, hence this needs to be enforced here. I think `ser_writedata32` (see `serialization.h`) can be used for this.\r\nIt's a pity though that the CI tests don't fail, I think this is because we don't have any testing instance where the architecture uses big endian byte order :/",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-28T12:55:24Z",
      "diff_hunk" : "@@ -2861,3 +2861,23 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(const CNode& node, const std::string& msg_type, const Span<const unsigned char>& data, bool is_incoming)\n+{\n+    auto time = GetTime<std::chrono::microseconds>();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node.addr.ToString();\n+    fs::create_directories(base_path);\n+\n+    fs::path path = base_path / (is_incoming ? \"msgs_recv.dat\" : \"msgs_sent.dat\");\n+    CAutoFile f(fsbridge::fopen(path, \"ab\"), SER_DISK, CLIENT_VERSION);\n+\n+    f.write((const char*)&time, sizeof(time));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r461556730",
      "id" : 461556730,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NjczMA==",
      "original_commit_id" : "0c31d58f7d5c40a73e9fd67f57acf33a4d45f24a",
      "original_line" : 2875,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 456600960,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461556730",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r461556757"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461556757"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same as above, this should be guaranteed to be written out in little endian byte order.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-28T12:55:28Z",
      "diff_hunk" : "@@ -2861,3 +2861,23 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(const CNode& node, const std::string& msg_type, const Span<const unsigned char>& data, bool is_incoming)\n+{\n+    auto time = GetTime<std::chrono::microseconds>();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node.addr.ToString();\n+    fs::create_directories(base_path);\n+\n+    fs::path path = base_path / (is_incoming ? \"msgs_recv.dat\" : \"msgs_sent.dat\");\n+    CAutoFile f(fsbridge::fopen(path, \"ab\"), SER_DISK, CLIENT_VERSION);\n+\n+    f.write((const char*)&time, sizeof(time));\n+    f.write(msg_type.data(), msg_type.length());\n+    for (auto i = msg_type.length(); i < CMessageHeader::COMMAND_SIZE; ++i) {\n+        f << '\\0';\n+    }\n+    uint32_t size = data.size();\n+    f.write((const char*)&size, sizeof(size));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r461556757",
      "id" : 461556757,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1Njc1Nw==",
      "original_commit_id" : "0c31d58f7d5c40a73e9fd67f57acf33a4d45f24a",
      "original_line" : 2881,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 456600960,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461556757",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-run ci",
      "created_at" : "2020-07-28T15:53:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-665122781",
      "id" : 665122781,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTEyMjc4MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-28T15:53:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665122781",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r461724204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461724204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "would be good to use assert_equal for debugability \r\n\r\nhttps://travis-ci.org/github/bitcoin/bitcoin/jobs/712616300#L3056",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-28T16:45:10Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\") # type: int\n+            assert(time >= 1231006505000000)   # genesis block timestamp\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]  # type: bytes\n+            assert(len(command) > 0)\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\") # type: int\n+            data = f_in.read(length)\n+            assert(len(data) == length)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r461724204",
      "id" : 461724204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyNDIwNA==",
      "original_commit_id" : "863c6b5aeb08a8769895a3fb08a9adb6753b4567",
      "original_line" : 48,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 456820101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461724204",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't find your \"why not Wireshark?\" very convincing... If anything, it made me less sure this should get merged.\r\n\r\nWireshark is a fairly simple and standard tool. Glancing at the code, this PR is basically just a less-user-friendly reinvention thereof.\r\n\r\nIf there are concerns with maintenance of the Wireshark dissector, as I understand it, we could fork it and maintain it out of Wireshark's codebase.",
      "created_at" : "2020-07-29T23:50:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-665987681",
      "id" : 665987681,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTk4NzY4MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-29T23:50:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665987681",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r462986846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462986846"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-30T13:15:04Z",
      "diff_hunk" : "@@ -2861,3 +2861,23 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(const CNode& node, const std::string& msg_type, const Span<const unsigned char>& data, bool is_incoming)\n+{\n+    auto time = GetTime<std::chrono::microseconds>();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node.addr.ToString();\n+    fs::create_directories(base_path);\n+\n+    fs::path path = base_path / (is_incoming ? \"msgs_recv.dat\" : \"msgs_sent.dat\");\n+    CAutoFile f(fsbridge::fopen(path, \"ab\"), SER_DISK, CLIENT_VERSION);\n+\n+    f.write((const char*)&time, sizeof(time));\n+    f.write(msg_type.data(), msg_type.length());\n+    for (auto i = msg_type.length(); i < CMessageHeader::COMMAND_SIZE; ++i) {\n+        f << '\\0';\n+    }\n+    uint32_t size = data.size();\n+    f.write((const char*)&size, sizeof(size));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r462986846",
      "id" : 462986846,
      "in_reply_to_id" : 461556757,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk4Njg0Ng==",
      "original_commit_id" : "0c31d58f7d5c40a73e9fd67f57acf33a4d45f24a",
      "original_line" : 2881,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 458388071,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462986846",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r462988168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462988168"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for catching this!  When fixing it I considered if it was better to instead change the test to follow the system endianness (with python's `sys.byteorder`).  I think fixing a particular endianness for the .dat files, as temporary as they are, is better.  Someone might generate them on a BE system and then parse them on a LE system one day...",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-30T13:17:02Z",
      "diff_hunk" : "@@ -2861,3 +2861,23 @@ uint64_t CConnman::CalculateKeyedNetGroup(const CAddress& ad) const\n \n     return GetDeterministicRandomizer(RANDOMIZER_ID_NETGROUP).Write(vchNetGroup.data(), vchNetGroup.size()).Finalize();\n }\n+\n+void LogMessage(const CNode& node, const std::string& msg_type, const Span<const unsigned char>& data, bool is_incoming)\n+{\n+    auto time = GetTime<std::chrono::microseconds>();\n+\n+    fs::path base_path = GetDataDir() / \"peer_logging\" / node.addr.ToString();\n+    fs::create_directories(base_path);\n+\n+    fs::path path = base_path / (is_incoming ? \"msgs_recv.dat\" : \"msgs_sent.dat\");\n+    CAutoFile f(fsbridge::fopen(path, \"ab\"), SER_DISK, CLIENT_VERSION);\n+\n+    f.write((const char*)&time, sizeof(time));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r462988168",
      "id" : 462988168,
      "in_reply_to_id" : 461556730,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk4ODE2OA==",
      "original_commit_id" : "0c31d58f7d5c40a73e9fd67f57acf33a4d45f24a",
      "original_line" : 2875,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 458389774,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462988168",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r462988274"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462988274"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-30T13:17:11Z",
      "diff_hunk" : "@@ -0,0 +1,69 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\") # type: int\n+            assert(time >= 1231006505000000)   # genesis block timestamp\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]  # type: bytes\n+            assert(len(command) > 0)\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\") # type: int\n+            data = f_in.read(length)\n+            assert(len(data) == length)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r462988274",
      "id" : 462988274,
      "in_reply_to_id" : 461724204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk4ODI3NA==",
      "original_commit_id" : "863c6b5aeb08a8769895a3fb08a9adb6753b4567",
      "original_line" : 48,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 458389902,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462988274",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`git range-diff master 863c6b5 f5fffb7`\r\n\r\n- Enforced little-endian writing to match parser\r\n- Test uses `assert_equal` when possible",
      "created_at" : "2020-07-30T13:19:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-666359778",
      "id" : 666359778,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjM1OTc3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T13:19:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666359778",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-07-30T16:25:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-666505365",
      "id" : 666505365,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjUwNTM2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T16:25:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666505365",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "rebased",
      "created_at" : "2020-07-31T00:46:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-666845848",
      "id" : 666845848,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Njg0NTg0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T00:46:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666845848",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r463725486"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463725486"
         }
      },
      "author_association" : "MEMBER",
      "body" : "chmod this to 755 so it's executable.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-31T17:01:48Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r463725486",
      "id" : 463725486,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyNTQ4Ng==",
      "original_commit_id" : "6095431033a3590fa74761f1bfede4c68a032a88",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 459324826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463725486",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r463725672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463725672"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: pep8 says at least 2 spaces before an inline comment :grimacing: ",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-31T17:02:13Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.mininode import MESSAGEMAP  # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def to_jsonable(obj: Any) -> Any:\n+    ret = {}    # type: Any\n+    # The msg objects don't generally include \"msgtype\" in their __slots__\n+    if hasattr(obj, \"msgtype\"):\n+        ret[\"msgtype\"] = getattr(obj, \"msgtype\", None).decode()\n+    if hasattr(obj, \"__dict__\"):\n+        ret = obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            ret[slot] = to_jsonable(val)\n+    elif isinstance(obj, list):\n+        ret = [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        ret = obj.hex()\n+    else:\n+        ret = obj\n+    return ret\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\") # type: int",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r463725672",
      "id" : 463725672,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyNTY3Mg==",
      "original_commit_id" : "6095431033a3590fa74761f1bfede4c68a032a88",
      "original_line" : 50,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 459324826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463725672",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r463725809"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463725809"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: `is_incoming` can be const",
      "commit_id" : "6095431033a3590fa74761f1bfede4c68a032a88",
      "created_at" : "2020-07-31T17:02:31Z",
      "diff_hunk" : "@@ -1005,4 +1006,6 @@ inline std::chrono::microseconds PoissonNextSend(std::chrono::microseconds now,\n     return std::chrono::microseconds{PoissonNextSend(now.count(), average_interval.count())};\n }\n \n+void LogMessage(const CNode& node, const std::string& msg_type, const Span<const unsigned char>& data, bool is_incoming);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r463725809",
      "id" : 463725809,
      "line" : 1009,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyNTgwOQ==",
      "original_commit_id" : "6095431033a3590fa74761f1bfede4c68a032a88",
      "original_line" : 1009,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 18,
      "pull_request_review_id" : 459324826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-31T17:21:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463725809",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r463731380"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463731380"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`\"recv\": true` and `\"recv\": false` don't seem very friendly here. Perhaps `\"direction\": \"received\"` and `\"direction\": \"sent\"` is better?",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-31T17:14:44Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.mininode import MESSAGEMAP  # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def to_jsonable(obj: Any) -> Any:\n+    ret = {}    # type: Any\n+    # The msg objects don't generally include \"msgtype\" in their __slots__\n+    if hasattr(obj, \"msgtype\"):\n+        ret[\"msgtype\"] = getattr(obj, \"msgtype\", None).decode()\n+    if hasattr(obj, \"__dict__\"):\n+        ret = obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            ret[slot] = to_jsonable(val)\n+    elif isinstance(obj, list):\n+        ret = [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        ret = obj.hex()\n+    else:\n+        ret = obj\n+    return ret\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\") # type: int\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]  # type: bytes\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\") # type: int\n+            if command not in MESSAGEMAP:\n+                continue    # For now just skip unrecognized messages\n+            msg = MESSAGEMAP[command]()\n+            msg.deserialize(f_in)\n+            msg_dict = to_jsonable(msg)\n+            msg_dict[\"time\"] = time\n+            msg_dict[\"length\"] = length\n+            msg_dict[\"recv\"] = recv",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r463731380",
      "id" : 463731380,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzczMTM4MA==",
      "original_commit_id" : "6095431033a3590fa74761f1bfede4c68a032a88",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 459324826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463731380",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r463732392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463732392"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You should deserialize the body of the message to a sub-object. That means if any message types contain fields called 'msgtype', 'time', 'length' or 'recv', they won't conflict with the metadata.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-07-31T17:16:55Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.mininode import MESSAGEMAP  # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def to_jsonable(obj: Any) -> Any:\n+    ret = {}    # type: Any\n+    # The msg objects don't generally include \"msgtype\" in their __slots__\n+    if hasattr(obj, \"msgtype\"):\n+        ret[\"msgtype\"] = getattr(obj, \"msgtype\", None).decode()\n+    if hasattr(obj, \"__dict__\"):\n+        ret = obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            ret[slot] = to_jsonable(val)\n+    elif isinstance(obj, list):\n+        ret = [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        ret = obj.hex()\n+    else:\n+        ret = obj\n+    return ret\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\") # type: int\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]  # type: bytes\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\") # type: int\n+            if command not in MESSAGEMAP:\n+                continue    # For now just skip unrecognized messages\n+            msg = MESSAGEMAP[command]()\n+            msg.deserialize(f_in)\n+            msg_dict = to_jsonable(msg)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r463732392",
      "id" : 463732392,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzczMjM5Mg==",
      "original_commit_id" : "6095431033a3590fa74761f1bfede4c68a032a88",
      "original_line" : 57,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 459324826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463732392",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r465302710"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465302710"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "oof thanks, TIL\r\n\r\n(I'm surprised nothing caught this)",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-04T20:11:49Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.mininode import MESSAGEMAP  # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def to_jsonable(obj: Any) -> Any:\n+    ret = {}    # type: Any\n+    # The msg objects don't generally include \"msgtype\" in their __slots__\n+    if hasattr(obj, \"msgtype\"):\n+        ret[\"msgtype\"] = getattr(obj, \"msgtype\", None).decode()\n+    if hasattr(obj, \"__dict__\"):\n+        ret = obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            ret[slot] = to_jsonable(val)\n+    elif isinstance(obj, list):\n+        ret = [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        ret = obj.hex()\n+    else:\n+        ret = obj\n+    return ret\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\") # type: int",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r465302710",
      "id" : 465302710,
      "in_reply_to_id" : 463725672,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMjcxMA==",
      "original_commit_id" : "6095431033a3590fa74761f1bfede4c68a032a88",
      "original_line" : 50,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 461138138,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465302710",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r465307759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465307759"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'll meet you in the middle and do `\"direction\": \"recv\"` and `\"direction\": \"sent\"` :)",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-04T20:21:36Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.mininode import MESSAGEMAP  # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def to_jsonable(obj: Any) -> Any:\n+    ret = {}    # type: Any\n+    # The msg objects don't generally include \"msgtype\" in their __slots__\n+    if hasattr(obj, \"msgtype\"):\n+        ret[\"msgtype\"] = getattr(obj, \"msgtype\", None).decode()\n+    if hasattr(obj, \"__dict__\"):\n+        ret = obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            ret[slot] = to_jsonable(val)\n+    elif isinstance(obj, list):\n+        ret = [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        ret = obj.hex()\n+    else:\n+        ret = obj\n+    return ret\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\") # type: int\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]  # type: bytes\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\") # type: int\n+            if command not in MESSAGEMAP:\n+                continue    # For now just skip unrecognized messages\n+            msg = MESSAGEMAP[command]()\n+            msg.deserialize(f_in)\n+            msg_dict = to_jsonable(msg)\n+            msg_dict[\"time\"] = time\n+            msg_dict[\"length\"] = length\n+            msg_dict[\"recv\"] = recv",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r465307759",
      "id" : 465307759,
      "in_reply_to_id" : 463731380,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNzc1OQ==",
      "original_commit_id" : "6095431033a3590fa74761f1bfede4c68a032a88",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 461144991,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465307759",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r465310100"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465310100"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-04T20:26:23Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r465310100",
      "id" : 465310100,
      "in_reply_to_id" : 463725486,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxMDEwMA==",
      "original_commit_id" : "6095431033a3590fa74761f1bfede4c68a032a88",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 461147857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465310100",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r465310222"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465310222"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done, and improved the names and order",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-04T20:26:40Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.mininode import MESSAGEMAP  # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def to_jsonable(obj: Any) -> Any:\n+    ret = {}    # type: Any\n+    # The msg objects don't generally include \"msgtype\" in their __slots__\n+    if hasattr(obj, \"msgtype\"):\n+        ret[\"msgtype\"] = getattr(obj, \"msgtype\", None).decode()\n+    if hasattr(obj, \"__dict__\"):\n+        ret = obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            ret[slot] = to_jsonable(val)\n+    elif isinstance(obj, list):\n+        ret = [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        ret = obj.hex()\n+    else:\n+        ret = obj\n+    return ret\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\") # type: int\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]  # type: bytes\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\") # type: int\n+            if command not in MESSAGEMAP:\n+                continue    # For now just skip unrecognized messages\n+            msg = MESSAGEMAP[command]()\n+            msg.deserialize(f_in)\n+            msg_dict = to_jsonable(msg)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r465310222",
      "id" : 465310222,
      "in_reply_to_id" : 463732392,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxMDIyMg==",
      "original_commit_id" : "6095431033a3590fa74761f1bfede4c68a032a88",
      "original_line" : 57,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 461148006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465310222",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`git range-diff master 6095431 8e165ac`\r\n\r\n  * Values coming from `uint256` variables print as hex correctly\r\n  * Restructured the output, renamed some fields\r\n  * Some whitespace fixes\r\n  * Small change to `msg_generic` (unused) in `messages.py`",
      "created_at" : "2020-08-04T20:28:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-668808754",
      "id" : 668808754,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODgwODc1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-04T20:28:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668808754",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`git range-diff master 6095431 0547b23`\r\n\r\n  * Values coming from `uint256` variables print as hex correctly\r\n  * Restructured the output, renamed some fields\r\n  * Some whitespace fixes\r\n  * Small change to `msg_generic` (unused) in `messages.py`",
      "created_at" : "2020-08-05T14:21:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-669222105",
      "id" : 669222105,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTIyMjEwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T14:21:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669222105",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r465770624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465770624"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Instead of reimplementing the parser here, couldn't this just call `contrib/peer-logging/peer-logging-parser.py {dat_file}`?",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-05T14:31:14Z",
      "diff_hunk" : "@@ -0,0 +1,70 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r465770624",
      "id" : 465770624,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3MDYyNA==",
      "original_commit_id" : "0547b23754b193e45ba722e555f97f2dd60dd1b5",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 461722878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465770624",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466248108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466248108"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the cast to `size_t` is not needed here? `msg.m_recv` is an instance of `CDataStream`, its `size()` method returns `CDataStream::size_type` which is a typedef to a `std::vector::size_type`, which again is `size_t`.\r\n```suggestion\r\n        LogMessage(*pfrom, msg.m_command, Span<const unsigned char>{(unsigned char*)msg.m_recv.data(), msg.m_recv.size()}, /* incoming */ true);\r\n```",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T08:52:03Z",
      "diff_hunk" : "@@ -3804,6 +3804,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     }\n     CNetMessage& msg(msgs.front());\n \n+    if (gArgs.IsArgSet(\"-logmessages\")) {\n+        LogMessage(*pfrom, msg.m_command, Span<const unsigned char>{(unsigned char*)msg.m_recv.data(), (size_t)msg.m_recv.size()}, /* incoming */ true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466248108",
      "id" : 466248108,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI0ODEwOA==",
      "original_commit_id" : "fac22eae7ce14cac4e7ab364325165ee8f7fa1ff",
      "original_line" : 3808,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 462312851,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466248108",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466255925"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466255925"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The \"command\" terminology should not be used anymore for network messages, we just call it \"message type\" now (see e.g. PRs https://github.com/bitcoin/bitcoin/pull/18533, https://github.com/bitcoin/bitcoin/pull/18610, https://github.com/bitcoin/bitcoin/pull/18937). Replacement suggestions: . s/COMMAND_SIZE/MSGTYPE_SIZE and s/command/msg_type (in the parsing code below).",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T09:05:50Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.messages import ser_uint256     # noqa: E402\n+from test_framework.mininode import MESSAGEMAP      # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466255925",
      "id" : 466255925,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI1NTkyNQ==",
      "original_commit_id" : "78959de4b410987e1b1ed07f08bb0adce52ea218",
      "original_line" : 22,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 462312851,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466255925",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466279593"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466279593"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "+1 on code deduplication. The included timestamps check (all timestamps are past genesis block) can be done on the result rather than directly in the parser.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T09:29:34Z",
      "diff_hunk" : "@@ -0,0 +1,70 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466279593",
      "id" : 466279593,
      "in_reply_to_id" : 465770624,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI3OTU5Mw==",
      "original_commit_id" : "0547b23754b193e45ba722e555f97f2dd60dd1b5",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 462312851,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466279593",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466284790"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466284790"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "For skipping unrecognized messages, I think a dummy read on `f_in` (`length` bytes) is missing here to advance the file pointer to the next message.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T09:33:52Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.messages import ser_uint256     # noqa: E402\n+from test_framework.mininode import MESSAGEMAP      # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+# The test framework classes stores hashes as large ints in many cases.\n+# There isn't a way to distinguish between a large int and a large int that is actually a blob of bytes.\n+# As such, they are itemized here\n+# (These can be easily found by looking for calls to deser_uint256, deser_uint256_vector, and uint256_from_str in messages.py)\n+HASH_INTS = [\n+    \"blockhash\",\n+    \"block_hash\",\n+    \"hash\",     # A few conflicts here\n+    \"hashMerkleRoot\",\n+    \"hashPrevBlock\",\n+    \"hashstop\",\n+    \"prev_header\",\n+    \"sha256\",\n+    \"stop_hash\",\n+]\n+\n+HASH_INT_VECTORS = [\n+    \"hashes\",\n+    \"headers\",  # One conflict here\n+    \"vHave\",\n+    \"vHash\",\n+]\n+\n+def to_jsonable(obj: Any) -> Any:\n+    if hasattr(obj, \"__dict__\"):\n+        return obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        ret = {}    # type: Any\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            if slot in HASH_INTS and isinstance(val, int):\n+                ret[slot] = ser_uint256(val).hex()\n+            elif slot in HASH_INT_VECTORS and isinstance(val[0], int):\n+                ret[slot] = [ser_uint256(a).hex() for a in val]\n+            else:\n+                ret[slot] = to_jsonable(val)\n+        return ret\n+    elif isinstance(obj, list):\n+        return [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        return obj.hex()\n+    else:\n+        return obj\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\")      # type: int\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]     # type: bytes\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\")  # type: int\n+            if command not in MESSAGEMAP:\n+                continue    # For now just skip unrecognized messages",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466284790",
      "id" : 466284790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI4NDc5MA==",
      "original_commit_id" : "78959de4b410987e1b1ed07f08bb0adce52ea218",
      "original_line" : 80,
      "original_position" : 80,
      "original_start_line" : 79,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 462312851,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466284790",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466302307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466302307"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's much better not to assume that the contrib directory is available. Functional tests can be run when the build directory is out of tree and the source directory is not available. It makes sense to me to have a limited parser in the test case rather than importing from somewhere else.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T09:58:11Z",
      "diff_hunk" : "@@ -0,0 +1,70 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466302307",
      "id" : 466302307,
      "in_reply_to_id" : 465770624,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMwMjMwNw==",
      "original_commit_id" : "0547b23754b193e45ba722e555f97f2dd60dd1b5",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 462377533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466302307",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466306326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466306326"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could check here after the deserialization if the `f_in` was advanced by the expected `length` (what is currently done in the functional test), e.g. something like:\r\n```\r\n            msg_start_pos = f_in.tell()\r\n            ...\r\n            msg.deserialize(f_in)\r\n            ...\r\n            msg_length = f_in.tell() - msg_start_pos\r\n            assert_equal(length, msg_length)\r\n```",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T10:05:24Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.messages import ser_uint256     # noqa: E402\n+from test_framework.mininode import MESSAGEMAP      # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+# The test framework classes stores hashes as large ints in many cases.\n+# There isn't a way to distinguish between a large int and a large int that is actually a blob of bytes.\n+# As such, they are itemized here\n+# (These can be easily found by looking for calls to deser_uint256, deser_uint256_vector, and uint256_from_str in messages.py)\n+HASH_INTS = [\n+    \"blockhash\",\n+    \"block_hash\",\n+    \"hash\",     # A few conflicts here\n+    \"hashMerkleRoot\",\n+    \"hashPrevBlock\",\n+    \"hashstop\",\n+    \"prev_header\",\n+    \"sha256\",\n+    \"stop_hash\",\n+]\n+\n+HASH_INT_VECTORS = [\n+    \"hashes\",\n+    \"headers\",  # One conflict here\n+    \"vHave\",\n+    \"vHash\",\n+]\n+\n+def to_jsonable(obj: Any) -> Any:\n+    if hasattr(obj, \"__dict__\"):\n+        return obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        ret = {}    # type: Any\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            if slot in HASH_INTS and isinstance(val, int):\n+                ret[slot] = ser_uint256(val).hex()\n+            elif slot in HASH_INT_VECTORS and isinstance(val[0], int):\n+                ret[slot] = [ser_uint256(a).hex() for a in val]\n+            else:\n+                ret[slot] = to_jsonable(val)\n+        return ret\n+    elif isinstance(obj, list):\n+        return [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        return obj.hex()\n+    else:\n+        return obj\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\")      # type: int\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]     # type: bytes\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\")  # type: int\n+            if command not in MESSAGEMAP:\n+                continue    # For now just skip unrecognized messages\n+            msg = MESSAGEMAP[command]()\n+            msg.deserialize(f_in)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466306326",
      "id" : 466306326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMwNjMyNg==",
      "original_commit_id" : "78959de4b410987e1b1ed07f08bb0adce52ea218",
      "original_line" : 82,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 462382512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466306326",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466318870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466318870"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree that the dependency on the contrib directory is a drawback, but then on the other hand we already have a test importing from contrib: `feature_loadblock.py` (uses `contrib/linearize` scripts). Is there really a need to run functional tests without the other sources available? They are all part of the same repository.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T10:30:26Z",
      "diff_hunk" : "@@ -0,0 +1,70 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466318870",
      "id" : 466318870,
      "in_reply_to_id" : 465770624,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMxODg3MA==",
      "original_commit_id" : "0547b23754b193e45ba722e555f97f2dd60dd1b5",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 462397981,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466318870",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466323684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466323684"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Is there really a need to run functional tests without the other sources available?\r\n\r\nYes, it's an explicit usage pattern to build out of tree and be able to run tests separately from the source directory.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T10:40:29Z",
      "diff_hunk" : "@@ -0,0 +1,70 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466323684",
      "id" : 466323684,
      "in_reply_to_id" : 465770624,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyMzY4NA==",
      "original_commit_id" : "0547b23754b193e45ba722e555f97f2dd60dd1b5",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 462404054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466323684",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466357165"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466357165"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hm, so the usage pattern in this case is \"copy the `test/functional` folder somewhere\" and executing from there, decoupled from the repository, should still work? Still not convinced why anyone should ever want/do that (maybe I'm missing something there).",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T11:51:25Z",
      "diff_hunk" : "@@ -0,0 +1,70 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466357165",
      "id" : 466357165,
      "in_reply_to_id" : 465770624,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM1NzE2NQ==",
      "original_commit_id" : "0547b23754b193e45ba722e555f97f2dd60dd1b5",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 462445547,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466357165",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466377977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466377977"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Search for \"out of tree builds\" in this repo. You'll see lots of issues/PRs for running tests out of tree.\r\n\r\n> I agree that the dependency on the contrib directory is a drawback, but then on the other hand we already have a test importing from contrib: feature_loadblock.py (uses contrib/linearize scripts).\r\n\r\nYes, and I think that's a terrible pattern that we shouldn't repeat. Importing code from contrib essentially makes those files part of the test framework.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T12:32:17Z",
      "diff_hunk" : "@@ -0,0 +1,70 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466377977",
      "id" : 466377977,
      "in_reply_to_id" : 465770624,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3Nzk3Nw==",
      "original_commit_id" : "0547b23754b193e45ba722e555f97f2dd60dd1b5",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 462472673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466377977",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466392607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466392607"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I imagine I did this because I had to, but you're right I see no reason for this cast (and clang++ agrees).  Thanks!",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T12:58:39Z",
      "diff_hunk" : "@@ -3804,6 +3804,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     }\n     CNetMessage& msg(msgs.front());\n \n+    if (gArgs.IsArgSet(\"-logmessages\")) {\n+        LogMessage(*pfrom, msg.m_command, Span<const unsigned char>{(unsigned char*)msg.m_recv.data(), (size_t)msg.m_recv.size()}, /* incoming */ true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466392607",
      "id" : 466392607,
      "in_reply_to_id" : 466248108,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM5MjYwNw==",
      "original_commit_id" : "fac22eae7ce14cac4e7ab364325165ee8f7fa1ff",
      "original_line" : 3808,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 462492350,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466392607",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466394744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466394744"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for catching this!  This \"command -> message type\" switch is a monumental effort that I'm happy to be a part of.\r\n\r\nI'm going to choose `msgtype` not `msg_type` for the same reasons you did in #18610 :)",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T13:02:08Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.messages import ser_uint256     # noqa: E402\n+from test_framework.mininode import MESSAGEMAP      # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466394744",
      "id" : 466394744,
      "in_reply_to_id" : 466255925,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM5NDc0NA==",
      "original_commit_id" : "78959de4b410987e1b1ed07f08bb0adce52ea218",
      "original_line" : 22,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 462495201,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466394744",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466397116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466397116"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It is, thanks!",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T13:05:52Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.messages import ser_uint256     # noqa: E402\n+from test_framework.mininode import MESSAGEMAP      # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+# The test framework classes stores hashes as large ints in many cases.\n+# There isn't a way to distinguish between a large int and a large int that is actually a blob of bytes.\n+# As such, they are itemized here\n+# (These can be easily found by looking for calls to deser_uint256, deser_uint256_vector, and uint256_from_str in messages.py)\n+HASH_INTS = [\n+    \"blockhash\",\n+    \"block_hash\",\n+    \"hash\",     # A few conflicts here\n+    \"hashMerkleRoot\",\n+    \"hashPrevBlock\",\n+    \"hashstop\",\n+    \"prev_header\",\n+    \"sha256\",\n+    \"stop_hash\",\n+]\n+\n+HASH_INT_VECTORS = [\n+    \"hashes\",\n+    \"headers\",  # One conflict here\n+    \"vHave\",\n+    \"vHash\",\n+]\n+\n+def to_jsonable(obj: Any) -> Any:\n+    if hasattr(obj, \"__dict__\"):\n+        return obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        ret = {}    # type: Any\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            if slot in HASH_INTS and isinstance(val, int):\n+                ret[slot] = ser_uint256(val).hex()\n+            elif slot in HASH_INT_VECTORS and isinstance(val[0], int):\n+                ret[slot] = [ser_uint256(a).hex() for a in val]\n+            else:\n+                ret[slot] = to_jsonable(val)\n+        return ret\n+    elif isinstance(obj, list):\n+        return [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        return obj.hex()\n+    else:\n+        return obj\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\")      # type: int\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]     # type: bytes\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\")  # type: int\n+            if command not in MESSAGEMAP:\n+                continue    # For now just skip unrecognized messages",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466397116",
      "id" : 466397116,
      "in_reply_to_id" : 466284790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM5NzExNg==",
      "original_commit_id" : "78959de4b410987e1b1ed07f08bb0adce52ea218",
      "original_line" : 80,
      "original_position" : 80,
      "original_start_line" : 79,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 462498374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466397116",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466407938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466407938"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I like this a lot, thanks",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T13:23:02Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Parse message log binary files.  To be used in conjunction with -logmessages.\"\"\"\n+\n+import argparse\n+import os\n+import sys\n+from io import BytesIO\n+import json\n+from pathlib import Path\n+from typing import Any, List\n+\n+sys.path.append(os.path.join(os.path.dirname(__file__), '../../test/functional'))\n+\n+from test_framework.messages import ser_uint256     # noqa: E402\n+from test_framework.mininode import MESSAGEMAP      # noqa: E402\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+# The test framework classes stores hashes as large ints in many cases.\n+# There isn't a way to distinguish between a large int and a large int that is actually a blob of bytes.\n+# As such, they are itemized here\n+# (These can be easily found by looking for calls to deser_uint256, deser_uint256_vector, and uint256_from_str in messages.py)\n+HASH_INTS = [\n+    \"blockhash\",\n+    \"block_hash\",\n+    \"hash\",     # A few conflicts here\n+    \"hashMerkleRoot\",\n+    \"hashPrevBlock\",\n+    \"hashstop\",\n+    \"prev_header\",\n+    \"sha256\",\n+    \"stop_hash\",\n+]\n+\n+HASH_INT_VECTORS = [\n+    \"hashes\",\n+    \"headers\",  # One conflict here\n+    \"vHave\",\n+    \"vHash\",\n+]\n+\n+def to_jsonable(obj: Any) -> Any:\n+    if hasattr(obj, \"__dict__\"):\n+        return obj.__dict__\n+    elif hasattr(obj, \"__slots__\"):\n+        ret = {}    # type: Any\n+        for slot in obj.__slots__:\n+            val = getattr(obj, slot, None)\n+            if slot in HASH_INTS and isinstance(val, int):\n+                ret[slot] = ser_uint256(val).hex()\n+            elif slot in HASH_INT_VECTORS and isinstance(val[0], int):\n+                ret[slot] = [ser_uint256(a).hex() for a in val]\n+            else:\n+                ret[slot] = to_jsonable(val)\n+        return ret\n+    elif isinstance(obj, list):\n+        return [to_jsonable(a) for a in obj]\n+    elif isinstance(obj, bytes):\n+        return obj.hex()\n+    else:\n+        return obj\n+\n+\n+def process_file(path: Path, messages: List[Any], recv: bool) -> None:\n+    with open(path, 'rb') as f_in:\n+        while True:\n+            tmp_header_raw = f_in.read(TIME_SIZE + LENGTH_SIZE + COMMAND_SIZE)\n+            if not tmp_header_raw:\n+                break\n+            tmp_header = BytesIO(tmp_header_raw)\n+            time = int.from_bytes(tmp_header.read(TIME_SIZE), \"little\")      # type: int\n+            command = tmp_header.read(COMMAND_SIZE).split(b'\\x00', 1)[0]     # type: bytes\n+            length = int.from_bytes(tmp_header.read(LENGTH_SIZE), \"little\")  # type: int\n+            if command not in MESSAGEMAP:\n+                continue    # For now just skip unrecognized messages\n+            msg = MESSAGEMAP[command]()\n+            msg.deserialize(f_in)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466407938",
      "id" : 466407938,
      "in_reply_to_id" : 466306326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwNzkzOA==",
      "original_commit_id" : "78959de4b410987e1b1ed07f08bb0adce52ea218",
      "original_line" : 82,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "contrib/peer-logging/peer-logging-parser.py",
      "position" : null,
      "pull_request_review_id" : 462512555,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466407938",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`git range-diff master 0547b23 4205c56`\r\n\r\n  * peer logging -> message logging\r\n  * command -> msgtype\r\n  * Removed unneeded `size_t` cast\r\n  * Parser now properly handles unrecognized messages\r\n  * Parser now verified payload length\r\n",
      "created_at" : "2020-08-06T13:58:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-669943836",
      "id" : 669943836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTk0MzgzNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T13:58:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669943836",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Regarding mini_parser in the functional test: discussion [here](https://github.com/bitcoin/bitcoin/pull/19509#discussion_r465770624).  The popular question is \"Why reimplement the parser here, as opposed to just calling `contrib/message-logging/message-logging-parser.py`?\"\r\n\r\nThe main reason, which I agree with, is brought up by @jnewbery.  \r\n\r\n> I think it's much better not to assume that the contrib directory is available. Functional tests can be run when the build directory is out of tree and the source directory is not available. It makes sense to me to have a limited parser in the test case rather than importing from somewhere else.\r\n\r\nAdditionally, I think that this separate mini_parser makes it clear, at a glance, what exactly is being tested.  As noted in the module docstring of `p2p_message_logging.py`, the message logging parser _isn't_ tested in this test.  This test is for LogMessage only.  I would hate to run into a Hubble Space Telescope-like problem where LogMessage is wrong but the message logging parser is wrong in the same way, so the errors go by unnoticed.\r\n",
      "created_at" : "2020-08-06T14:00:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-669945057",
      "id" : 669945057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTk0NTA1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T14:00:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669945057",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466528085"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466528085"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry that I didn't noticed on the earlier review today, but: if you rebase on master, this will unlock you the nice `MakeUCharSpan` (see commit e63dcc3a6752e7d406e7a650c2d6c2e95cd39aab, introduced with PR #19326 that was merged 3 days ago), not needing to cast anything anymore. :tada: ",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-06T16:15:27Z",
      "diff_hunk" : "@@ -3804,6 +3804,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     }\n     CNetMessage& msg(msgs.front());\n \n+    if (gArgs.IsArgSet(\"-logmessages\")) {\n+        LogMessage(*pfrom, msg.m_command, Span<const unsigned char>{(unsigned char*)msg.m_recv.data(), msg.m_recv.size()}, /* incoming */ true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466528085",
      "id" : 466528085,
      "line" : 3808,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUyODA4NQ==",
      "original_commit_id" : "6f0e88752d9dcfe551d618e7afb09fd2063fc050",
      "original_line" : 3808,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 462670289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T16:15:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466528085",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466988386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466988386"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "To my understanding the primary point of out of tree builds is separation between the _build artifacts_ (i.e. everything spit out by `make`, like binaries, manpages etc.) and the source folder. I guess our disagreement stems from the fact that in your view, `contrib` is part of the source folder, while in my view it isn't -- it only contains scripts and no compilation units, hence no ending up in an (out of tree) build folder. That could change in the future though, so I can see your point.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-07T11:43:51Z",
      "diff_hunk" : "@@ -0,0 +1,70 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466988386",
      "id" : 466988386,
      "in_reply_to_id" : 465770624,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk4ODM4Ng==",
      "original_commit_id" : "0547b23754b193e45ba722e555f97f2dd60dd1b5",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 463245822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-07T11:44:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466988386",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466989983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466989983"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The functional test scripts itself live in the *source* directory. The build directory has a symlink to it. As long as the script in contrib is also symlinked to the build dir, this should not affect out-of-tree builds at all. And all ci scripts use out-of-tree builds, so if this lead to issues, it would be noticed immediately.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-07T11:47:58Z",
      "diff_hunk" : "@@ -0,0 +1,70 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466989983",
      "id" : 466989983,
      "in_reply_to_id" : 465770624,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk4OTk4Mw==",
      "original_commit_id" : "0547b23754b193e45ba722e555f97f2dd60dd1b5",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 463247867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-07T11:47:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466989983",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r467258687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467258687"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I'll do this!  Another upcoming improvement is #19660, but I'll try and leave that for a follow-up as not to increase the scope too far here.",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-07T20:40:08Z",
      "diff_hunk" : "@@ -3804,6 +3804,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     }\n     CNetMessage& msg(msgs.front());\n \n+    if (gArgs.IsArgSet(\"-logmessages\")) {\n+        LogMessage(*pfrom, msg.m_command, Span<const unsigned char>{(unsigned char*)msg.m_recv.data(), msg.m_recv.size()}, /* incoming */ true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r467258687",
      "id" : 467258687,
      "in_reply_to_id" : 466528085,
      "line" : 3808,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1ODY4Nw==",
      "original_commit_id" : "6f0e88752d9dcfe551d618e7afb09fd2063fc050",
      "original_line" : 3808,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 463598152,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-07T20:40:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467258687",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r467259378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467259378"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've elaborated on why I did this [below](https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-669945057).  If anyone is still against this choice, please let me know!",
      "commit_id" : "4205c56d4e1a6b94adbd0ad8efa071f9f95eb9f1",
      "created_at" : "2020-08-07T20:41:54Z",
      "diff_hunk" : "@@ -0,0 +1,70 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node peer logging capability.\n+\n+Additionally, the output of contrib/peer-logging/peer-logging-parser.py should be verified manually.\n+\"\"\"\n+\n+import glob\n+from io import BytesIO\n+import os\n+\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+TIME_SIZE = 8\n+LENGTH_SIZE = 4\n+COMMAND_SIZE = 12\n+\n+def mini_parser(dat_file):\n+    \"\"\"Parse a data file created by LogMessage.\n+\n+    From the data file we'll only check the structure.\n+\n+    We won't care about things like:\n+    - Deserializing the payload of the message\n+        - This is managed by the deserialize methods in test_framework.messages\n+    - The order of the messages\n+        - There's no reason why we can't, say, change the order of the messages in the handshake\n+    - Message Type\n+        - We can add new message types\n+\n+    We're ignoring these because they're simply too brittle to test here.\n+    \"\"\"\n+    with open(dat_file, 'rb') as f_in:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#discussion_r467259378",
      "id" : 467259378,
      "in_reply_to_id" : 465770624,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1OTM3OA==",
      "original_commit_id" : "0547b23754b193e45ba722e555f97f2dd60dd1b5",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p_peer_logging.py",
      "position" : null,
      "pull_request_review_id" : 463599041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19509",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-07T20:41:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467259378",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`git range-diff 4205c56 555e48a`\r\n\r\n- Rebased (trivial)\r\n- Now uses `MakeUCharSpan` as suggested [here](https://github.com/bitcoin/bitcoin/pull/19509#discussion_r466528085)\r\n- Now accounts for the increase in file descriptor usage (by one)\r\n   - This will be improved in #18911",
      "created_at" : "2020-08-07T21:38:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19509#issuecomment-670723420",
      "id" : 670723420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19509",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDcyMzQyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T21:38:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670723420",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   }
]
