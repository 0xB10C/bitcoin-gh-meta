[
   {
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7bc8c2815147b6d205046ea4c437045c51626d79 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2014-02-16T17:41:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3681#issuecomment-35204486",
      "id" : 35204486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3681",
      "updated_at" : "2014-02-16T17:41:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/35204486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "body" : "Just some thoughts on this:\r\nIf the parent variant has already been spent the reissue fails. If we are in a chain of unconfirmed transactions (so the parent is not malleated, but the parent-parent)\r\nreissue also fails.\r\nNot sure if big merchants can set -spendzeroconfchange because they have to send a lot of transactions, the wallet could run out of funds too quickly, if set.\r\nI am just concerned that on busy wallets this version of reissue is useless because most reissues will fail. So if they still need to manually clean up the wallet (with zapwallettxes?) and do many reissue on their own, I doubt they are interested in using reissue in the first place.\r\nThere is a different implementation of reissuetransaction\r\nhttps://github.com/cozz/bitcoin/commit/daffee917a511f281dd76c1ad98c0dcd7b269fbe\r\nIt only allows reissue, if there is a confirmed parent conflict and all parent conflicts must be confirmed by 6 confirmations.\r\nIt provides mainly the advantage that a reissue can never fail, unless we are waiting for confirmations. It returns an error on normal unconfirmed transactions. It is designed\r\nso businesses can just blindly hammer reissuetransaction on all transactions, without reissuing anything twice, or even anything that is not conflicted and does not need a reissue.\r\n\r\nA further idea to this is to provide a rpc \"needreissue\". This would simply return an array of transaction ids, that need a reissue. So businesses just need to periodically call this and reissue the transactions. We could even provide a \"autoreissue\". This reissues all transactions where there is a parent conflict confirmed by 6 confirmations and that have not been reissued before of course.\r\n\r\nAnother further idea: in rpc we have introduced a new field \"walletconflicts\".\r\nI would like to rename this field to something like \"replacedby\".\r\nThis is because if a transaction has been reissued, it would also appear there.\r\nSo there is a general field \"replacedby\" showing the new transaction id.\r\nNow matter if it has been replaced because \"malleated\" or if it has been replaced\r\nbecause we manually reissued, replacing by our own.\r\n\r\n(Havent tested, but is there a check if the parent variant has been spent in the meantime in the current code? Not sure, but if not the current implementation could add another double spend to the wallet.)\r\n",
      "created_at" : "2014-02-17T10:58:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3681#issuecomment-35246953",
      "id" : 35246953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3681",
      "updated_at" : "2014-02-17T10:58:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/35246953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   },
   {
      "body" : "I'm afraid this is way too complicated. No way to test this or at least all corner cases.\r\n\r\nHadn't thought about it that it would be possible for the parent variant to already be spent. I thought this would be a relatively way to avoid having to mess with vfSpent and still make it possible to unstuck transactions. \r\n\r\nBut if it still amounts to thousands of lines of code, let's forget about it. -zapwallettxes and then manual re-issue is a much more thorough solution.\r\n",
      "created_at" : "2014-02-17T11:08:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/3681#issuecomment-35247540",
      "id" : 35247540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/3681",
      "updated_at" : "2014-02-17T11:15:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/35247540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
