[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21594#discussion_r607040383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21594"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607040383"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just out of curiosity: Is `ipv6` returned for both `NET_CJDNS` and `NET_IPV6`?\r\n\r\n",
      "commit_id" : "34d84f3dd70d83dd19db1ebd99aa1ed6b4cad03b",
      "created_at" : "2021-04-05T11:20:09Z",
      "diff_hunk" : "@@ -862,23 +863,20 @@ static RPCHelpMan getnodeaddresses()\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n     }\n \n-    int count = 1;\n-    if (!request.params[0].isNull()) {\n-        count = request.params[0].get_int();\n-        if (count < 0) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n-        }\n-    }\n+    const int count{request.params[0].isNull() ? 1 : request.params[0].get_int()};\n+    if (count < 0) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+\n     // returns a shuffled list of CAddress\n-    std::vector<CAddress> vAddr = node.connman->GetAddresses(count, /* max_pct */ 0);\n+    const std::vector<CAddress> vAddr{node.connman->GetAddresses(count, /* max_pct */ 0)};\n     UniValue ret(UniValue::VARR);\n \n     for (const CAddress& addr : vAddr) {\n         UniValue obj(UniValue::VOBJ);\n-        obj.pushKV(\"time\", (int)addr.nTime);\n-        obj.pushKV(\"services\", (uint64_t)addr.nServices);\n+        obj.pushKV(\"time\", static_cast<int>(addr.nTime));\n+        obj.pushKV(\"services\", static_cast<uint64_t>(addr.nServices));\n         obj.pushKV(\"address\", addr.ToStringIP());\n         obj.pushKV(\"port\", addr.GetPort());\n+        obj.pushKV(\"network\", GetNetworkName(addr.GetNetClass()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21594#discussion_r607040383",
      "id" : 607040383,
      "line" : 879,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzA0MDM4Mw==",
      "original_commit_id" : "34d84f3dd70d83dd19db1ebd99aa1ed6b4cad03b",
      "original_line" : 879,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : 51,
      "pull_request_review_id" : 627782459,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21594",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-05T11:20:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607040383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21594#discussion_r607048735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21594"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607048735"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It shouldn't. This essentially returns the stringified `CNetAddr::m_net`. See `CNetAddr::SetNetFromBIP155Network()` in `netaddress.cpp`. (We also don't yet support CJDNS.)",
      "commit_id" : "34d84f3dd70d83dd19db1ebd99aa1ed6b4cad03b",
      "created_at" : "2021-04-05T11:47:02Z",
      "diff_hunk" : "@@ -862,23 +863,20 @@ static RPCHelpMan getnodeaddresses()\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n     }\n \n-    int count = 1;\n-    if (!request.params[0].isNull()) {\n-        count = request.params[0].get_int();\n-        if (count < 0) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n-        }\n-    }\n+    const int count{request.params[0].isNull() ? 1 : request.params[0].get_int()};\n+    if (count < 0) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+\n     // returns a shuffled list of CAddress\n-    std::vector<CAddress> vAddr = node.connman->GetAddresses(count, /* max_pct */ 0);\n+    const std::vector<CAddress> vAddr{node.connman->GetAddresses(count, /* max_pct */ 0)};\n     UniValue ret(UniValue::VARR);\n \n     for (const CAddress& addr : vAddr) {\n         UniValue obj(UniValue::VOBJ);\n-        obj.pushKV(\"time\", (int)addr.nTime);\n-        obj.pushKV(\"services\", (uint64_t)addr.nServices);\n+        obj.pushKV(\"time\", static_cast<int>(addr.nTime));\n+        obj.pushKV(\"services\", static_cast<uint64_t>(addr.nServices));\n         obj.pushKV(\"address\", addr.ToStringIP());\n         obj.pushKV(\"port\", addr.GetPort());\n+        obj.pushKV(\"network\", GetNetworkName(addr.GetNetClass()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21594#discussion_r607048735",
      "id" : 607048735,
      "in_reply_to_id" : 607040383,
      "line" : 879,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzA0ODczNQ==",
      "original_commit_id" : "34d84f3dd70d83dd19db1ebd99aa1ed6b4cad03b",
      "original_line" : 879,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : 51,
      "pull_request_review_id" : 627793237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21594",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-05T11:48:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607048735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21594#discussion_r607050581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21594"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607050581"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah, so that's the reason it is not mentioned in the help in your OP. Thanks.\r\n\r\n> \"network\" : \"str\"     (string) The network (ipv4, ipv6, onion, i2p) the node connected through",
      "commit_id" : "34d84f3dd70d83dd19db1ebd99aa1ed6b4cad03b",
      "created_at" : "2021-04-05T11:52:55Z",
      "diff_hunk" : "@@ -862,23 +863,20 @@ static RPCHelpMan getnodeaddresses()\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n     }\n \n-    int count = 1;\n-    if (!request.params[0].isNull()) {\n-        count = request.params[0].get_int();\n-        if (count < 0) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n-        }\n-    }\n+    const int count{request.params[0].isNull() ? 1 : request.params[0].get_int()};\n+    if (count < 0) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+\n     // returns a shuffled list of CAddress\n-    std::vector<CAddress> vAddr = node.connman->GetAddresses(count, /* max_pct */ 0);\n+    const std::vector<CAddress> vAddr{node.connman->GetAddresses(count, /* max_pct */ 0)};\n     UniValue ret(UniValue::VARR);\n \n     for (const CAddress& addr : vAddr) {\n         UniValue obj(UniValue::VOBJ);\n-        obj.pushKV(\"time\", (int)addr.nTime);\n-        obj.pushKV(\"services\", (uint64_t)addr.nServices);\n+        obj.pushKV(\"time\", static_cast<int>(addr.nTime));\n+        obj.pushKV(\"services\", static_cast<uint64_t>(addr.nServices));\n         obj.pushKV(\"address\", addr.ToStringIP());\n         obj.pushKV(\"port\", addr.GetPort());\n+        obj.pushKV(\"network\", GetNetworkName(addr.GetNetClass()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21594#discussion_r607050581",
      "id" : 607050581,
      "in_reply_to_id" : 607040383,
      "line" : 879,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzA1MDU4MQ==",
      "original_commit_id" : "34d84f3dd70d83dd19db1ebd99aa1ed6b4cad03b",
      "original_line" : 879,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : 51,
      "pull_request_review_id" : 627795557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21594",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-05T11:53:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607050581",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21594#discussion_r607153314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21594"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607153314"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, `GetNetworkNames()` doesn't return `cjdns` because of this line:\r\n```cpp\r\nif (network == NET_UNROUTABLE || network == NET_CJDNS || network == NET_INTERNAL) continue;\r\n```\r\nWhen cjdns support is added, that line will need to be updated.",
      "commit_id" : "34d84f3dd70d83dd19db1ebd99aa1ed6b4cad03b",
      "created_at" : "2021-04-05T15:29:50Z",
      "diff_hunk" : "@@ -862,23 +863,20 @@ static RPCHelpMan getnodeaddresses()\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n     }\n \n-    int count = 1;\n-    if (!request.params[0].isNull()) {\n-        count = request.params[0].get_int();\n-        if (count < 0) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n-        }\n-    }\n+    const int count{request.params[0].isNull() ? 1 : request.params[0].get_int()};\n+    if (count < 0) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+\n     // returns a shuffled list of CAddress\n-    std::vector<CAddress> vAddr = node.connman->GetAddresses(count, /* max_pct */ 0);\n+    const std::vector<CAddress> vAddr{node.connman->GetAddresses(count, /* max_pct */ 0)};\n     UniValue ret(UniValue::VARR);\n \n     for (const CAddress& addr : vAddr) {\n         UniValue obj(UniValue::VOBJ);\n-        obj.pushKV(\"time\", (int)addr.nTime);\n-        obj.pushKV(\"services\", (uint64_t)addr.nServices);\n+        obj.pushKV(\"time\", static_cast<int>(addr.nTime));\n+        obj.pushKV(\"services\", static_cast<uint64_t>(addr.nServices));\n         obj.pushKV(\"address\", addr.ToStringIP());\n         obj.pushKV(\"port\", addr.GetPort());\n+        obj.pushKV(\"network\", GetNetworkName(addr.GetNetClass()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21594#discussion_r607153314",
      "id" : 607153314,
      "in_reply_to_id" : 607040383,
      "line" : 879,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzE1MzMxNA==",
      "original_commit_id" : "34d84f3dd70d83dd19db1ebd99aa1ed6b4cad03b",
      "original_line" : 879,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : 51,
      "pull_request_review_id" : 627928786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21594",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-05T15:29:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607153314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
