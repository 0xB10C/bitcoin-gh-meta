[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r599969335"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599969335"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8110da8b1b8bc83fa7fd2b76f9cc4688a7a02623\r\n\r\nnit `#include <memory>` for `std::unique_ptr`.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-23T21:34:00Z",
      "diff_hunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXRECONCILIATION_H\n+#define BITCOIN_TXRECONCILIATION_H\n+\n+#include <net.h>\n+#include <sync.h>\n+\n+#include <tuple>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r599969335",
      "id" : 599969335,
      "line" : 12,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTk2OTMzNQ==",
      "original_commit_id" : "8110da8b1b8bc83fa7fd2b76f9cc4688a7a02623",
      "original_line" : 12,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/txreconciliation.h",
      "position" : 12,
      "pull_request_review_id" : 619102655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599969335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r599974713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599974713"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8110da8b1b8bc83fa7fd2b76f9cc4688a7a02623\r\n\r\nMove to txreconciliation.cpp",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-23T21:39:09Z",
      "diff_hunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXRECONCILIATION_H\n+#define BITCOIN_TXRECONCILIATION_H\n+\n+#include <net.h>\n+#include <sync.h>\n+\n+#include <tuple>\n+#include <unordered_map>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r599974713",
      "id" : 599974713,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTk3NDcxMw==",
      "original_commit_id" : "8110da8b1b8bc83fa7fd2b76f9cc4688a7a02623",
      "original_line" : 12,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/txreconciliation.h",
      "position" : null,
      "pull_request_review_id" : 619102655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599974713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r599979335"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599979335"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8110da8b1b8bc83fa7fd2b76f9cc4688a7a02623\r\n\r\nLooks like insertion should always happen? If so you could assert `.second` of `emplace()` result. If not, then `GetRand()` could be avoided in case it exists, and below it should return the existing salt.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-23T21:47:10Z",
      "diff_hunk" : "@@ -0,0 +1,59 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <txreconciliation.h>\n+\n+namespace {\n+\n+/** Current protocol version */\n+constexpr uint32_t RECON_VERSION = 1;\n+\n+} // namespace\n+\n+/** Actual implementation for TxReconciliationTracker's data structure. */\n+class TxReconciliationTracker::Impl {\n+\n+    mutable Mutex m_mutex;\n+\n+    /**\n+     * Per-peer salt is used to compute transaction short IDs, which will be later used to\n+     * construct reconciliation sketches.\n+     * Salt is generated randomly per-peer to prevent:\n+     * - linking of network nodes belonging to the same physical node\n+     * - halting of relay of particular transactions due to short ID collisions (DoS)\n+     */\n+    std::unordered_map<NodeId, uint64_t> m_local_salts GUARDED_BY(m_mutex);\n+\n+    public:\n+\n+    std::tuple<bool, bool, uint32_t, uint64_t> SuggestReconciling(NodeId peer_id, bool inbound)\n+    {\n+        LogPrint(BCLog::NET, \"Prepare to announce reconciliation support to peer=%d\\n\", peer_id);\n+        bool we_initiate_recon, we_respond_recon;\n+        // Currently reconciliation roles are defined by the connection direction: only the inbound\n+        // peer initiate reconciliations and the outbound peer is supposed to only respond.\n+        if (inbound) {\n+            we_initiate_recon = false;\n+            we_respond_recon = true;\n+        } else {\n+            we_initiate_recon = true;\n+            we_respond_recon = false;\n+        }\n+\n+        uint64_t m_local_recon_salt(GetRand(UINT64_MAX));\n+        WITH_LOCK(m_mutex, m_local_salts.emplace(peer_id, m_local_recon_salt));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r599979335",
      "id" : 599979335,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTk3OTMzNQ==",
      "original_commit_id" : "8110da8b1b8bc83fa7fd2b76f9cc4688a7a02623",
      "original_line" : 45,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/txreconciliation.cpp",
      "position" : null,
      "pull_request_review_id" : 619102655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599979335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21160 (Net/Net processing: Move tx inventory into net_processing by jnewbery)\n* #21061 ([p2p] Introduce node rebroadcast module by amitiuttarwar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-03-24T09:59:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#issuecomment-805662879",
      "id" : 805662879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21515",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNTY2Mjg3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-24T09:59:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/805662879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r602929047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602929047"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3e4022a4a87c91b4b671ab4b71ccbd6d7136bade\r\n\r\nCould make this log conditional to whether `peer_id` was erased from `m_local_salts`.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-28T20:35:51Z",
      "diff_hunk" : "@@ -52,6 +52,14 @@ class TxReconciliationTracker::Impl {\n \n         return std::make_tuple(we_initiate_recon, we_respond_recon, RECON_VERSION, m_local_recon_salt);\n     }\n+\n+    void RemovePeer(NodeId peer_id)\n+    {\n+        LOCK(m_mutex);\n+        m_local_salts.erase(peer_id);\n+        LogPrint(BCLog::NET, \"Stop tracking reconciliation state for peer=%d.\\n\", peer_id);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r602929047",
      "id" : 602929047,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjkyOTA0Nw==",
      "original_commit_id" : "3e4022a4a87c91b4b671ab4b71ccbd6d7136bade",
      "original_line" : 60,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/txreconciliation.cpp",
      "position" : null,
      "pull_request_review_id" : 619157940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602929047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r602930818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602930818"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8cdaf385aee34a9a10406eef73d6dcae74b5a2c4\r\n\r\nShould be \"SuggestReconciling\"?",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-28T20:50:59Z",
      "diff_hunk" : "@@ -68,10 +111,48 @@ class TxReconciliationTracker::Impl {\n         return std::make_tuple(we_initiate_recon, we_respond_recon, RECON_VERSION, m_local_recon_salt);\n     }\n \n+    void EnableReconciliationSupport(NodeId peer_id, bool inbound,\n+        bool they_may_initiate, bool they_may_respond, uint32_t recon_version, uint64_t remote_salt)\n+    {\n+        // We do not support reconciliation salt/version updates, so receiving this message\n+        // for the second time should not happen\n+        LOCK(m_mutex);\n+        auto recon_state = m_states.find(peer_id);\n+        if (recon_state != m_states.end()) return;\n+\n+        recon_version = std::min(recon_version, RECON_VERSION);\n+        if (recon_version < 1) return;\n+\n+        // Must match SuggestReconciliation logic.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r602930818",
      "id" : 602930818,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjkzMDgxOA==",
      "original_commit_id" : "8cdaf385aee34a9a10406eef73d6dcae74b5a2c4",
      "original_line" : 126,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/txreconciliation.cpp",
      "position" : null,
      "pull_request_review_id" : 619157940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602930818",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r602941978"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602941978"
         }
      },
      "author_association" : "MEMBER",
      "body" : "49108e38941f7136fafdbfc64a989aba0f1cc99f\r\n\r\nnit, `->second`.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-28T22:26:29Z",
      "diff_hunk" : "@@ -161,6 +161,17 @@ class TxReconciliationTracker::Impl {\n         LOCK(m_mutex);\n         return m_states.find(peer_id) != m_states.end();\n     }\n+\n+    std::optional<bool> IsPeerChosenForFlooding(NodeId peer_id) const\n+    {\n+        LOCK(m_mutex);\n+        auto recon_state = m_states.find(peer_id);\n+        if (recon_state == m_states.end()) {\n+            return std::nullopt;\n+        }\n+        return (*recon_state).second.m_flood_to;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r602941978",
      "id" : 602941978,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjk0MTk3OA==",
      "original_commit_id" : "49108e38941f7136fafdbfc64a989aba0f1cc99f",
      "original_line" : 172,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/txreconciliation.cpp",
      "position" : null,
      "pull_request_review_id" : 619157940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602941978",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r602943795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602943795"
         }
      },
      "author_association" : "MEMBER",
      "body" : "99906e0c3399225ee361ce85291074971d2025e1\r\n\r\n`IsPeerRegistered` is not needed since `IsPeerChosenForFlooding` returns `nullopt`. Maybe:\r\n```cpp\r\nif (pfrom.MightSupportTransactionRelay()) {\r\n    we_may_flood_to = m_reconciliation.IsPeerChosenForFlooding(pfrom.GetId()).value_or(true);\r\n}\r\n```",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-28T22:39:57Z",
      "diff_hunk" : "@@ -2539,6 +2547,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                       pfrom.nVersion.load(), peer->m_starting_height,\n                       pfrom.GetId(), (fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToString()) : \"\"),\n                       pfrom.ConnectionTypeAsString());\n+\n+            // Keep track of the number of outbound flooding peers.\n+            bool we_may_flood_to = false;\n+            if (pfrom.MightSupportTransactionRelay()) {\n+                if (m_reconciliation.IsPeerRegistered(pfrom.GetId())) {\n+                    if (*m_reconciliation.IsPeerChosenForFlooding(pfrom.GetId())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r602943795",
      "id" : 602943795,
      "line" : 2651,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjk0Mzc5NQ==",
      "original_commit_id" : "99906e0c3399225ee361ce85291074971d2025e1",
      "original_line" : 2651,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 249,
      "pull_request_review_id" : 619157940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602943795",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603143723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603143723"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree this is way cleaner, but I think the current code is easier to understand, so I'm leaning towards my approach.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T09:27:57Z",
      "diff_hunk" : "@@ -2539,6 +2547,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                       pfrom.nVersion.load(), peer->m_starting_height,\n                       pfrom.GetId(), (fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToString()) : \"\"),\n                       pfrom.ConnectionTypeAsString());\n+\n+            // Keep track of the number of outbound flooding peers.\n+            bool we_may_flood_to = false;\n+            if (pfrom.MightSupportTransactionRelay()) {\n+                if (m_reconciliation.IsPeerRegistered(pfrom.GetId())) {\n+                    if (*m_reconciliation.IsPeerChosenForFlooding(pfrom.GetId())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603143723",
      "id" : 603143723,
      "in_reply_to_id" : 602943795,
      "line" : 2651,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzE0MzcyMw==",
      "original_commit_id" : "99906e0c3399225ee361ce85291074971d2025e1",
      "original_line" : 2651,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 249,
      "pull_request_review_id" : 623031306,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603143723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603144648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603144648"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The problem is that you can hit undefined behavior with the current code - assuming peer can be disconnected between `IsPeerRegistered` and  `IsPeerChosenForFlooding`.\r\n\r\nEdit: Looks like the above is not possible.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T09:29:16Z",
      "diff_hunk" : "@@ -2539,6 +2547,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                       pfrom.nVersion.load(), peer->m_starting_height,\n                       pfrom.GetId(), (fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToString()) : \"\"),\n                       pfrom.ConnectionTypeAsString());\n+\n+            // Keep track of the number of outbound flooding peers.\n+            bool we_may_flood_to = false;\n+            if (pfrom.MightSupportTransactionRelay()) {\n+                if (m_reconciliation.IsPeerRegistered(pfrom.GetId())) {\n+                    if (*m_reconciliation.IsPeerChosenForFlooding(pfrom.GetId())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603144648",
      "id" : 603144648,
      "in_reply_to_id" : 602943795,
      "line" : 2651,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzE0NDY0OA==",
      "original_commit_id" : "99906e0c3399225ee361ce85291074971d2025e1",
      "original_line" : 2651,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 249,
      "pull_request_review_id" : 623032451,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603144648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603200987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603200987"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3692db74f86186789c9dad4005f7b768721d5afe\r\n\r\nnit, could move to inner scope.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:01:03Z",
      "diff_hunk" : "@@ -4552,15 +4554,19 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n             }\n             peer->m_blocks_for_inv_relay.clear();\n \n+            const bool supports_recon = m_reconciliation.IsPeerRegistered(pto->GetId());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603200987",
      "id" : 603200987,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIwMDk4Nw==",
      "original_commit_id" : "3692db74f86186789c9dad4005f7b768721d5afe",
      "original_line" : 4557,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 623106592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603200987",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603202580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603202580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "83a08c5ea07f7f7e3e67501ac8666521427ae9d3\r\n\r\nnit, `assert(txs_to_reconcile.size() > 0)`",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:04:13Z",
      "diff_hunk" : "@@ -154,6 +178,19 @@ class TxReconciliationTracker::Impl {\n             full_salt.GetUint64(1), we_initiate, flood_to));\n     }\n \n+    void AddToReconSet(NodeId peer_id, const std::vector<uint256>& txs_to_reconcile)\n+    {\n+        LOCK(m_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603202580",
      "id" : 603202580,
      "line" : 668,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIwMjU4MA==",
      "original_commit_id" : "83a08c5ea07f7f7e3e67501ac8666521427ae9d3",
      "original_line" : 668,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/txreconciliation.cpp",
      "position" : 668,
      "pull_request_review_id" : 623106592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603202580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603203867"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603203867"
         }
      },
      "author_association" : "MEMBER",
      "body" : "83a08c5ea07f7f7e3e67501ac8666521427ae9d3\r\n\r\nCould `m_local_set already` have some of `txs_to_reconcile`? If so maybe we should count successful `.insert()` and log that?",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:06:33Z",
      "diff_hunk" : "@@ -154,6 +178,19 @@ class TxReconciliationTracker::Impl {\n             full_salt.GetUint64(1), we_initiate, flood_to));\n     }\n \n+    void AddToReconSet(NodeId peer_id, const std::vector<uint256>& txs_to_reconcile)\n+    {\n+        LOCK(m_mutex);\n+        auto recon_state = m_states.find(peer_id);\n+        assert(recon_state != m_states.end());\n+        for (auto& wtxid: txs_to_reconcile) {\n+            recon_state->second.m_local_set.m_wtxids.insert(wtxid);\n+        }\n+\n+        LogPrint(BCLog::NET, \"Added %i transactions to the reconciliation set for peer=%d.\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603203867",
      "id" : 603203867,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIwMzg2Nw==",
      "original_commit_id" : "83a08c5ea07f7f7e3e67501ac8666521427ae9d3",
      "original_line" : 190,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/txreconciliation.cpp",
      "position" : null,
      "pull_request_review_id" : 623106592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603203867",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603206903"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603206903"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3692db74f86186789c9dad4005f7b768721d5afe\r\n\r\nMove to inner scope, make const.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:12:08Z",
      "diff_hunk" : "@@ -4622,6 +4629,7 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         // Fetch the top element from the heap\n                         std::pop_heap(vInvTx.begin(), vInvTx.end(), compareInvMempoolOrder);\n                         uint256 hash = vInvTx.back();\n+                        bool flood_tx = pto->m_tx_relay->m_txs_to_announce.at(hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603206903",
      "id" : 603206903,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIwNjkwMw==",
      "original_commit_id" : "3692db74f86186789c9dad4005f7b768721d5afe",
      "original_line" : 4632,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 623106592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603206903",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603207731"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603207731"
         }
      },
      "author_association" : "MEMBER",
      "body" : "05ac9dc21e5697a1e0261909b64de4f7d6e21eb1\r\n\r\ntypo \"differene\"",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:13:40Z",
      "diff_hunk" : "@@ -120,6 +120,13 @@ class TxReconciliationTracker::Impl {\n      */\n     std::unordered_map<NodeId, ReconciliationState> m_states GUARDED_BY(m_mutex);\n \n+    /**\n+     * Maintains a queue of reconciliations we should initiate. To achieve higher bandwidth\n+     * conservation and avoid overflows, we should reconcile in the same order, because then itâs\n+     * easier to estimate set differene size.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603207731",
      "id" : 603207731,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIwNzczMQ==",
      "original_commit_id" : "05ac9dc21e5697a1e0261909b64de4f7d6e21eb1",
      "original_line" : 126,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/txreconciliation.cpp",
      "position" : null,
      "pull_request_review_id" : 623106592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603207731",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603210177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603210177"
         }
      },
      "author_association" : "MEMBER",
      "body" : "e854bcf5391d02a28690f7eedad8382cbb05f85b\r\n\r\nAdd TSAN annotation?",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:17:55Z",
      "diff_hunk" : "@@ -127,6 +135,16 @@ class TxReconciliationTracker::Impl {\n      */\n     std::deque<NodeId> m_queue GUARDED_BY(m_mutex);\n \n+    /**\n+     * Reconciliations are requested periodically:\n+     * every RECON_REQUEST_INTERVAL seconds we pick a peer from the queue.\n+     */\n+    std::chrono::microseconds m_next_recon_request{0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603210177",
      "id" : 603210177,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIxMDE3Nw==",
      "original_commit_id" : "e854bcf5391d02a28690f7eedad8382cbb05f85b",
      "original_line" : 142,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/txreconciliation.cpp",
      "position" : null,
      "pull_request_review_id" : 623106592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603210177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603210815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603210815"
         }
      },
      "author_association" : "MEMBER",
      "body" : "e854bcf5391d02a28690f7eedad8382cbb05f85b\r\n\r\nnit `assert(m_queue.size() > 0)`",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:19:03Z",
      "diff_hunk" : "@@ -127,6 +135,16 @@ class TxReconciliationTracker::Impl {\n      */\n     std::deque<NodeId> m_queue GUARDED_BY(m_mutex);\n \n+    /**\n+     * Reconciliations are requested periodically:\n+     * every RECON_REQUEST_INTERVAL seconds we pick a peer from the queue.\n+     */\n+    std::chrono::microseconds m_next_recon_request{0};\n+    void UpdateNextReconRequest(std::chrono::microseconds now) EXCLUSIVE_LOCKS_REQUIRED(m_mutex)\n+    {\n+        m_next_recon_request = now + RECON_REQUEST_INTERVAL / m_queue.size();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603210815",
      "id" : 603210815,
      "line" : 446,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIxMDgxNQ==",
      "original_commit_id" : "e854bcf5391d02a28690f7eedad8382cbb05f85b",
      "original_line" : 446,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/txreconciliation.cpp",
      "position" : 446,
      "pull_request_review_id" : 623106592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603210815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603214394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603214394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "476ced6df27c13fd8d1dae46d09b91549977cac1\r\n\r\nnit, enum class and use as `ReconciliationPhase::NONE`?",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:25:31Z",
      "diff_hunk" : "@@ -27,6 +34,14 @@ constexpr uint32_t MAX_OUTBOUND_FLOOD_TO = 8;\n  */\n constexpr std::chrono::microseconds RECON_REQUEST_INTERVAL{16s};\n \n+/**\n+ * Represents phase of the current reconciliation round with a peer.\n+ */\n+enum ReconciliationPhase {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603214394",
      "id" : 603214394,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIxNDM5NA==",
      "original_commit_id" : "476ced6df27c13fd8d1dae46d09b91549977cac1",
      "original_line" : 40,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/txreconciliation.cpp",
      "position" : null,
      "pull_request_review_id" : 623106592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603214394",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603219571"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603219571"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There's no need to update this public interface method. The only users of this method outside net_processing will _always_ call `RelayTransaction()` without a `from` parameter.\r\n\r\n(it's also unnecessary to wrap an optional parameter in a `std::optional` since the fact that it's an optional parameter already gives you a way to indicate no value)",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:34:44Z",
      "diff_hunk" : "@@ -47,8 +47,12 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n     /** Whether this node ignores txs received over p2p. */\n     virtual bool IgnoresIncomingTxs() = 0;\n \n-    /** Relay transaction to all peers. */\n-    virtual void RelayTransaction(const uint256& txid, const uint256& wtxid)\n+    /**\n+     * Relay transaction to every node.\n+     * The announcement protocol (flooding or reconciliation) will be chosen based on from which\n+     * peer the transaction came to us. For transactions originated locally, pass from=nullopt.\n+     */\n+    virtual void RelayTransaction(const uint256& txid, const uint256& wtxid, std::optional<NodeId> from=std::nullopt)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603219571",
      "id" : 603219571,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIxOTU3MQ==",
      "original_commit_id" : "272b3b2db9f941b5784024983b9152dfccc5aebe",
      "original_line" : 56,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 11,
      "pull_request_review_id" : 623130809,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603219571",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603221491"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603221491"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need to protect this with `cs_main`. You can just make it atomic.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:38:10Z",
      "diff_hunk" : "@@ -365,6 +372,9 @@ class PeerManagerImpl final : public PeerManager\n     /** Number of peers with wtxid relay. */\n     int m_wtxid_relay_peers GUARDED_BY(cs_main) = 0;\n \n+    /** Number of outbound peers we may flood transactions to. */\n+    int m_out_flood_to GUARDED_BY(cs_main) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603221491",
      "id" : 603221491,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIyMTQ5MQ==",
      "original_commit_id" : "272b3b2db9f941b5784024983b9152dfccc5aebe",
      "original_line" : 376,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 623133260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603221491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603221670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603221670"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Again, no need for this to be protected by main. I think it can easily live in `Peer`.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:38:34Z",
      "diff_hunk" : "@@ -597,6 +607,9 @@ struct CNodeState {\n     //! Whether this peer relays txs via wtxid\n     bool m_wtxid_relay{false};\n \n+    //! Whether this peer may be used by us for flooding txs.\n+    bool m_we_may_flood_to{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603221670",
      "id" : 603221670,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIyMTY3MA==",
      "original_commit_id" : "272b3b2db9f941b5784024983b9152dfccc5aebe",
      "original_line" : 611,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 623133260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603221670",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603223119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603223119"
         }
      },
      "author_association" : "MEMBER",
      "body" : "New `from` parameter is unused.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-03-29T11:41:12Z",
      "diff_hunk" : "@@ -2017,8 +2063,9 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n  *                                  orphan will be reconsidered on each call of this function. This set\n  *                                  may be added to if accepting an orphan causes its children to be\n  *                                  reconsidered.\n+ * @param           from            The peer for which we are processing the orphan set.\n  */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set, NodeId from)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r603223119",
      "id" : 603223119,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIyMzExOQ==",
      "original_commit_id" : "272b3b2db9f941b5784024983b9152dfccc5aebe",
      "original_line" : 2068,
      "original_position" : 171,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 623133260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603223119",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r606384776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606384776"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Making const. Can't move because it's erased in two lines after, so it won't be accessible in the inner scope.\r\nAnd I can't call `.second` on `.erase`, because it returns a number of erased elements.\r\n\r\nOne alternative could be to use `txid_to_ann_protocol` in `vInvTx` (instead of uint256). But then I won't be able to reuse `CompareInvMempoolOrder` in `AnnounceTxs`.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-02T19:26:16Z",
      "diff_hunk" : "@@ -4622,6 +4629,7 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         // Fetch the top element from the heap\n                         std::pop_heap(vInvTx.begin(), vInvTx.end(), compareInvMempoolOrder);\n                         uint256 hash = vInvTx.back();\n+                        bool flood_tx = pto->m_tx_relay->m_txs_to_announce.at(hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r606384776",
      "id" : 606384776,
      "in_reply_to_id" : 603206903,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM4NDc3Ng==",
      "original_commit_id" : "3692db74f86186789c9dad4005f7b768721d5afe",
      "original_line" : 4632,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 627222659,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606384776",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r606389480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606389480"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry I don't understand this comment, despite your elaborate explanation. Probably my lack of C++ expertise.\r\n\r\nIf I remove just this change in the `virtual void` line, I get a compilation error.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-02T19:39:35Z",
      "diff_hunk" : "@@ -47,8 +47,12 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n     /** Whether this node ignores txs received over p2p. */\n     virtual bool IgnoresIncomingTxs() = 0;\n \n-    /** Relay transaction to all peers. */\n-    virtual void RelayTransaction(const uint256& txid, const uint256& wtxid)\n+    /**\n+     * Relay transaction to every node.\n+     * The announcement protocol (flooding or reconciliation) will be chosen based on from which\n+     * peer the transaction came to us. For transactions originated locally, pass from=nullopt.\n+     */\n+    virtual void RelayTransaction(const uint256& txid, const uint256& wtxid, std::optional<NodeId> from=std::nullopt)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r606389480",
      "id" : 606389480,
      "in_reply_to_id" : 603219571,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM4OTQ4MA==",
      "original_commit_id" : "272b3b2db9f941b5784024983b9152dfccc5aebe",
      "original_line" : 56,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 11,
      "pull_request_review_id" : 627228209,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606389480",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r613595312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613595312"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for the clear write-up, may a suggest to insert a stable link to the paper ?",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-14T21:21:06Z",
      "diff_hunk" : "@@ -0,0 +1,163 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXRECONCILIATION_H\n+#define BITCOIN_TXRECONCILIATION_H\n+\n+#include <net.h>\n+#include <sync.h>\n+\n+#include <memory>\n+#include <tuple>\n+\n+/**\n+ * Transaction reconciliation is a way for nodes to efficiently announce transactions.\n+ * This object keeps track of all reconciliation-related communications with the peers.\n+ * The high-level protocol is:\n+ * 0. Reconciliation protocol handshake.\n+ * 1. Once we receive a new transaction, add it to the set instead of announcing immediately\n+ * 2. When the time comes, a reconciliation initiator requests a sketch from the peer, where a sketch\n+ *    is a compressed representation of their set\n+ * 3. Once the initiator received a sketch from the peer, the initiator computes a local sketch,\n+ *    and combines the two skethes to find the difference in *sets*.\n+ * 4. Now the initiator knows full symmetrical difference and can request what the initiator is\n+ *    missing and announce to the peer what the peer is missing. For the former, an extra round is\n+ *    required because the initiator knows only short IDs of those transactions.\n+ * 5. Sometimes reconciliation fails if the difference is larger than the parties estimated,\n+ *    then there is one sketch extension round, in which the initiator requests for extra data.\n+ * 6. If extension succeeds, go to step 4.\n+ * 7. If extension fails, the initiator notifies the peer\n+ */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r613595312",
      "id" : 613595312,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzU5NTMxMg==",
      "original_commit_id" : "baa461151d9f5377aaa5b40bf05290d3c320d38e",
      "original_line" : 31,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/txreconciliation.h",
      "position" : 31,
      "pull_request_review_id" : 636090761,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613595312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r613599268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613599268"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think one obvious extension of the test coverage would be to join basic fuzz coverage of `TxReconciliationTracker` interface to assert its robustness. Have a look on `src/test/fuzz/addrman.cpp` or `src/test/fuzz/banman.cpp`.\r\n\r\nFuzz coverage might test further sanity of `TxReconciliationTracker` after each call or in function of `m_we_initiate` or `m_flood_to`. Still thinking about concrete suggestions there.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-14T21:28:34Z",
      "diff_hunk" : "@@ -0,0 +1,163 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXRECONCILIATION_H\n+#define BITCOIN_TXRECONCILIATION_H\n+\n+#include <net.h>\n+#include <sync.h>\n+\n+#include <memory>\n+#include <tuple>\n+\n+/**\n+ * Transaction reconciliation is a way for nodes to efficiently announce transactions.\n+ * This object keeps track of all reconciliation-related communications with the peers.\n+ * The high-level protocol is:\n+ * 0. Reconciliation protocol handshake.\n+ * 1. Once we receive a new transaction, add it to the set instead of announcing immediately\n+ * 2. When the time comes, a reconciliation initiator requests a sketch from the peer, where a sketch\n+ *    is a compressed representation of their set\n+ * 3. Once the initiator received a sketch from the peer, the initiator computes a local sketch,\n+ *    and combines the two skethes to find the difference in *sets*.\n+ * 4. Now the initiator knows full symmetrical difference and can request what the initiator is\n+ *    missing and announce to the peer what the peer is missing. For the former, an extra round is\n+ *    required because the initiator knows only short IDs of those transactions.\n+ * 5. Sometimes reconciliation fails if the difference is larger than the parties estimated,\n+ *    then there is one sketch extension round, in which the initiator requests for extra data.\n+ * 6. If extension succeeds, go to step 4.\n+ * 7. If extension fails, the initiator notifies the peer\n+ */\n+class TxReconciliationTracker {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r613599268",
      "id" : 613599268,
      "line" : 32,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzU5OTI2OA==",
      "original_commit_id" : "baa461151d9f5377aaa5b40bf05290d3c320d38e",
      "original_line" : 32,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/txreconciliation.h",
      "position" : 32,
      "pull_request_review_id" : 636090761,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613599268",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r613926434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613926434"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, you'll need to change the function signature in `PeerManagerImpl()` as well. An `override` function must have the same signature as the function it's overriding.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-15T09:50:05Z",
      "diff_hunk" : "@@ -47,8 +47,12 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n     /** Whether this node ignores txs received over p2p. */\n     virtual bool IgnoresIncomingTxs() = 0;\n \n-    /** Relay transaction to all peers. */\n-    virtual void RelayTransaction(const uint256& txid, const uint256& wtxid)\n+    /**\n+     * Relay transaction to every node.\n+     * The announcement protocol (flooding or reconciliation) will be chosen based on from which\n+     * peer the transaction came to us. For transactions originated locally, pass from=nullopt.\n+     */\n+    virtual void RelayTransaction(const uint256& txid, const uint256& wtxid, std::optional<NodeId> from=std::nullopt)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r613926434",
      "id" : 613926434,
      "in_reply_to_id" : 603219571,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzkyNjQzNA==",
      "original_commit_id" : "272b3b2db9f941b5784024983b9152dfccc5aebe",
      "original_line" : 56,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 11,
      "pull_request_review_id" : 636493106,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613926434",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614166227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614166227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Surprised that modifying those 2 values doesn't lead to functional test changes. Apparently, they're not covered in p2p_tx_download.py. I can extend coverage there in another PR.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-15T15:21:39Z",
      "diff_hunk" : "@@ -123,16 +126,16 @@ static constexpr auto AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL = 24h;\n static constexpr auto AVG_ADDRESS_BROADCAST_INTERVAL = 30s;\n /** Average delay between trickled inventory transmissions for inbound peers.\n  *  Blocks and peers with noban permission bypass this. */\n-static constexpr auto INBOUND_INVENTORY_BROADCAST_INTERVAL = 5s;\n+static constexpr auto INBOUND_INVENTORY_BROADCAST_INTERVAL = 2s;\n /** Average delay between trickled inventory transmissions for outbound peers.\n  *  Use a smaller delay as there is less privacy concern for them.\n  *  Blocks and peers with noban permission bypass this. */\n-static constexpr auto OUTBOUND_INVENTORY_BROADCAST_INTERVAL = 2s;\n+static constexpr auto OUTBOUND_INVENTORY_BROADCAST_INTERVAL = 1s;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614166227",
      "id" : 614166227,
      "line" : 133,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2NjIyNw==",
      "original_commit_id" : "baa461151d9f5377aaa5b40bf05290d3c320d38e",
      "original_line" : 133,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 29,
      "pull_request_review_id" : 636820159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614166227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614211171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614211171"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do we have privacy leaks for the following cases not mentioned in this comment ?\r\n\r\nA non-reachable node reconciliate with reconciliation-supporting _flooding_ outbound peers ? As it would be a deviation from the expected announcement policy.\r\n\r\nA reachable node reconciliate with reconciliation-supporting _flooding_ inbound/outbound peers ? Likewise, it would be a deviation from the expected announcement policy on those links.\r\n\r\nI think those cases are handled well at tx-announcement in SendMessages. Though I believe this comment would be better if it said that reconciliation is _downgraded_ to flooding if this the announcement previously selected for the to-be-announced-to peer.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-15T16:18:39Z",
      "diff_hunk" : "@@ -1507,17 +1526,44 @@ void PeerManagerImpl::SendPings()\n     for(auto& it : m_peer_map) it.second->m_ping_queued = true;\n }\n \n-void PeerManagerImpl::RelayTransaction(const uint256& txid, const uint256& wtxid)\n+void PeerManagerImpl::RelayTransaction(const uint256& txid, const uint256& wtxid, std::optional<NodeId> from)\n {\n-    m_connman.ForEachNode([&txid, &wtxid](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+    bool flood;\n+    if (from) {\n+        // Flood those transactions which were received either from pre-reconciliation peers, or\n+        // inbound reconciliation but NOT via outbound reconciliation. Flooding then is mainly\n+        // used for initial propagation of new transactions across a network of reachable nodes\n+        // quickly, while most of the bandwidth is still conserved.\n+        if (m_reconciliation.IsPeerRegistered(*from)) {\n+            flood = !(*m_reconciliation.IsPeerResponder(*from));\n+        } else {\n+            flood = true;\n+        }\n+    }\n+    else {\n+        // Transactions originated locally should be always announced through reconciliation\n+        // for the privacy reasons.\n+        //\n+        // Consider a non-reachable node: the general policy is *flood transactions came from\n+        // inbounds* (see above), so non-reachable nodes would never flood any transactions.\n+        // Now, if they flood their local transactions, it will be obvious for their immediate peers\n+        // that those transactions belong to those non-reachable nodes.\n+        //\n+        // On the other hand, if non-reachable nodes reconcile those transactions, they would look\n+        // like any other transactions of non-reachable nodes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614211171",
      "id" : 614211171,
      "line" : 1553,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDIxMTE3MQ==",
      "original_commit_id" : "baa461151d9f5377aaa5b40bf05290d3c320d38e",
      "original_line" : 1553,
      "original_position" : 136,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 136,
      "pull_request_review_id" : 636820159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614211171",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614225402"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614225402"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In theory, peer's feefilter might have increased between transaction selection for announcement at INV sending and receiving a SKETCH or RECONCILDIFF messages. Though AVG_FEEFILTER_BROADCAST_INTERVAL is 10min so it should be really okay.\r\n\r\nIs this gap could be exploited by an off-path attacker to interfere with tx-relay ? I don't think so, or at least without costly manipulation of victim's mempools.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-15T16:37:59Z",
      "diff_hunk" : "@@ -2308,6 +2354,59 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n     m_connman.PushMessage(&peer, std::move(msg));\n }\n \n+namespace {\n+class CompareInvMempoolOrder\n+{\n+    CTxMemPool *mp;\n+    bool m_wtxid_relay;\n+public:\n+    explicit CompareInvMempoolOrder(CTxMemPool *_mempool, bool use_wtxid)\n+    {\n+        mp = _mempool;\n+        m_wtxid_relay = use_wtxid;\n+    }\n+\n+    bool operator()(const uint256& a, const uint256& b)\n+    {\n+        /* As std::make_heap produces a max-heap, we want the entries with the\n+         * fewest ancestors/highest fee to sort later. */\n+        return mp->CompareDepthAndScore(b, a, m_wtxid_relay);\n+    }\n+};\n+}\n+\n+void PeerManagerImpl::AnnounceTxs(std::vector<uint256> remote_missing_wtxids, CNode& pto)\n+{\n+    if (remote_missing_wtxids.size() == 0) return;\n+\n+    // Topologically and fee-rate sort the inventory we send for privacy and priority reasons.\n+    // A heap is used so that not all items need sorting if only a few are being sent.\n+    CompareInvMempoolOrder compareInvMempoolOrder(&m_mempool, true);\n+    std::make_heap(remote_missing_wtxids.begin(), remote_missing_wtxids.end(), compareInvMempoolOrder);\n+\n+    const CNetMsgMaker msgMaker(pto.GetCommonVersion());\n+    std::vector<CInv> remote_missing_invs;\n+    remote_missing_invs.reserve(std::min<size_t>(remote_missing_wtxids.size(), MAX_INV_SZ));\n+\n+    while (!remote_missing_wtxids.empty()) {\n+        // No need to add transactions to peer's filter or do checks\n+        // because it was already done when adding to the reconciliation set.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614225402",
      "id" : 614225402,
      "line" : 2393,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDIyNTQwMg==",
      "original_commit_id" : "baa461151d9f5377aaa5b40bf05290d3c320d38e",
      "original_line" : 2393,
      "original_position" : 204,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 204,
      "pull_request_review_id" : 636820159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614225402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614231349"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614231349"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is logically equivalent ? \r\n\r\n```\r\n@@ -2386,15 +2390,11 @@ void PeerManagerImpl::AnnounceTxs(std::vector<uint256> remote_missing_wtxids, CN\r\n         remote_missing_wtxids.pop_back();\r\n \r\n         remote_missing_invs.push_back(CInv(MSG_WTX, wtxid));\r\n-        if (remote_missing_invs.size() == MAX_INV_SZ) {\r\n+        if (remote_missing_invs.size() == MAX_INV_SZ || remote_missing_wtxids.empty()) {\r\n             m_connman.PushMessage(&pto, msgMaker.Make(NetMsgType::INV, remote_missing_invs));\r\n             remote_missing_invs.clear();\r\n         }\r\n     }\r\n-\r\n-    if (remote_missing_invs.size() != 0) {\r\n-        m_connman.PushMessage(&pto, msgMaker.Make(NetMsgType::INV, remote_missing_invs));\r\n-    }\r\n }\r\n ```",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-15T16:44:32Z",
      "diff_hunk" : "@@ -2308,6 +2354,59 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n     m_connman.PushMessage(&peer, std::move(msg));\n }\n \n+namespace {\n+class CompareInvMempoolOrder\n+{\n+    CTxMemPool *mp;\n+    bool m_wtxid_relay;\n+public:\n+    explicit CompareInvMempoolOrder(CTxMemPool *_mempool, bool use_wtxid)\n+    {\n+        mp = _mempool;\n+        m_wtxid_relay = use_wtxid;\n+    }\n+\n+    bool operator()(const uint256& a, const uint256& b)\n+    {\n+        /* As std::make_heap produces a max-heap, we want the entries with the\n+         * fewest ancestors/highest fee to sort later. */\n+        return mp->CompareDepthAndScore(b, a, m_wtxid_relay);\n+    }\n+};\n+}\n+\n+void PeerManagerImpl::AnnounceTxs(std::vector<uint256> remote_missing_wtxids, CNode& pto)\n+{\n+    if (remote_missing_wtxids.size() == 0) return;\n+\n+    // Topologically and fee-rate sort the inventory we send for privacy and priority reasons.\n+    // A heap is used so that not all items need sorting if only a few are being sent.\n+    CompareInvMempoolOrder compareInvMempoolOrder(&m_mempool, true);\n+    std::make_heap(remote_missing_wtxids.begin(), remote_missing_wtxids.end(), compareInvMempoolOrder);\n+\n+    const CNetMsgMaker msgMaker(pto.GetCommonVersion());\n+    std::vector<CInv> remote_missing_invs;\n+    remote_missing_invs.reserve(std::min<size_t>(remote_missing_wtxids.size(), MAX_INV_SZ));\n+\n+    while (!remote_missing_wtxids.empty()) {\n+        // No need to add transactions to peer's filter or do checks\n+        // because it was already done when adding to the reconciliation set.\n+        std::pop_heap(remote_missing_wtxids.begin(), remote_missing_wtxids.end(), compareInvMempoolOrder);\n+        uint256 wtxid = remote_missing_wtxids.back();\n+        remote_missing_wtxids.pop_back();\n+\n+        remote_missing_invs.push_back(CInv(MSG_WTX, wtxid));\n+        if (remote_missing_invs.size() == MAX_INV_SZ) {\n+            m_connman.PushMessage(&pto, msgMaker.Make(NetMsgType::INV, remote_missing_invs));\n+            remote_missing_invs.clear();\n+        }\n+    }\n+\n+    if (remote_missing_invs.size() != 0) {\n+        m_connman.PushMessage(&pto, msgMaker.Make(NetMsgType::INV, remote_missing_invs));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614231349",
      "id" : 614231349,
      "line" : 2406,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDIzMTM0OQ==",
      "original_commit_id" : "baa461151d9f5377aaa5b40bf05290d3c320d38e",
      "original_line" : 2406,
      "original_position" : 217,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 217,
      "pull_request_review_id" : 636820159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-15T18:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614231349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614934750"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614934750"
         }
      },
      "author_association" : "MEMBER",
      "body" : "[The linter](https://cirrus-ci.com/task/6704150097428480) is not happy with this comment style.",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-16T15:37:09Z",
      "diff_hunk" : "@@ -0,0 +1,503 @@\n+#!/usr/bin/env python3\n+# Copyhigh (c) 2016-2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test reconciliation-based transaction relay protocol.\"\"\"\n+\n+from io import BytesIO\n+from test_framework.siphash import siphash256\n+import random\n+import struct\n+import time\n+\n+from test_framework.key import TaggedHash\n+from test_framework.messages import (\n+    msg_inv, msg_getdata, msg_wtxidrelay,\n+    msg_verack, msg_sendrecon, msg_reqrecon,\n+    msg_sketch, msg_reqsketchext, msg_reconcildiff,\n+    MSG_WTX, CTransaction, CInv,\n+)\n+from test_framework.p2p import P2PDataStore, MIN_P2P_VERSION_SUPPORTED\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, hex_str_to_bytes\n+\n+# These parameters are specified in the BIP-0330.\n+Q_PRECISION = (2 << 14) - 1\n+FIELD_BITS = 32\n+FIELD_MODULUS = (1 << FIELD_BITS) + 0b10001101\n+\n+# These parameters are suggested by the Erlay paper based on analysis and simulations.\n+DEFAULT_Q = 0.02\n+RECON_REQUEST_INTERVAL = 16\n+INBOUND_PENALIZED_INVENTORY_BROADCAST_INTERVAL = 5\n+MAX_OUTBOUND_FLOOD_TO = 8\n+\n+BYTES_PER_SKETCH_CAPACITY = FIELD_BITS / 8\n+\n+#################################\n+######## General helpers ########",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614934750",
      "id" : 614934750,
      "line" : 38,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDkzNDc1MA==",
      "original_commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "original_line" : 38,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "test/functional/p2p_erlay.py",
      "position" : 38,
      "pull_request_review_id" : 637839318,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-16T15:37:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614934750",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614943424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614943424"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/substraction/subtraction/",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-16T15:45:48Z",
      "diff_hunk" : "@@ -2630,6 +2760,46 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Received from a peer demonstrating readiness to announce transactions via reconciliations.\n+    // This feature negotiation should happen:\n+    // - between VERSION and VERACK to avoid relay problems from switching annoyncement protocols\n+    //   after the connection is up\n+    // - after WTXID because we reconcile only with peers supporting wtxid-relay\n+    if (msg_type == NetMsgType::SENDRECON) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a SENDRECON message after VERACK.\n+            LogPrint(BCLog::NET, \"sendrecon received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+\n+        if (!pfrom.m_tx_relay) {\n+            // If we chose a peer to not send us transactions, disconnect if they want to reconcile.\n+            LogPrint(BCLog::NET, \"sendrecon received from non-tx-relay peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+\n+        LOCK(cs_main);\n+        if (!State(pfrom.GetId())->m_wtxid_relay) {\n+            // Disconnect peers that send a SENDRECON message before/without WTXIDRELAY.\n+            LogPrint(BCLog::NET, \"sendrecon received before wtxidrelay peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+\n+        bool they_initiator, they_responder;\n+        uint32_t recon_version;\n+        uint64_t remote_salt;\n+        vRecv >> they_initiator >> they_responder >> recon_version >> remote_salt;\n+\n+        // Since this is called before VERACK, m_out_flooding_peers doesn't include this peer\n+        // being considered for reconciliation support, so no need for substraction.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614943424",
      "id" : 614943424,
      "line" : 2797,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDk0MzQyNA==",
      "original_commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "original_line" : 2797,
      "original_position" : 307,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 307,
      "pull_request_review_id" : 637847119,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-16T15:45:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614943424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614944439"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614944439"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/loosing/losing/",
      "commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "created_at" : "2021-04-16T15:46:47Z",
      "diff_hunk" : "@@ -3806,6 +3976,68 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (msg_type == NetMsgType::REQRECON) {\n+        uint16_t peer_recon_set_size, peer_q;\n+        vRecv >> peer_recon_set_size >> peer_q;\n+        m_reconciliation.HandleReconciliationRequest(pfrom.GetId(), peer_recon_set_size, peer_q);\n+        return;\n+    }\n+\n+    if (msg_type == NetMsgType::SKETCH) {\n+        std::vector<uint8_t> skdata;\n+        vRecv >> skdata;\n+\n+        std::vector<uint32_t> txs_to_request;\n+        std::vector<uint256> txs_to_announce;\n+        std::optional<bool> recon_result;\n+        bool valid_sketch = m_reconciliation.HandleSketch(pfrom.GetId(), skdata, txs_to_request, txs_to_announce, recon_result);\n+\n+        if (valid_sketch) {\n+            if (recon_result) {\n+                // Handles both successful and failed reconciliation (but not the case per which\n+                // we want to request extension).\n+                m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::RECONCILDIFF,\n+                    *recon_result, txs_to_request));\n+            } else {\n+                // No final result means we should request sketch extension to make another\n+                // reconciliation attempt without loosing the initial data.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21515#discussion_r614944439",
      "id" : 614944439,
      "line" : 4003,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDk0NDQzOQ==",
      "original_commit_id" : "a9270714e545337aaf8a510094cc12ef97b92ce0",
      "original_line" : 4003,
      "original_position" : 362,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 362,
      "pull_request_review_id" : 637848006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-16T15:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/614944439",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   }
]
