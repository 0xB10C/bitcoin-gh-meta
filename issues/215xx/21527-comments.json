[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601192396"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601192396"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What do you think about removing this call? The comment above is incorrect (we only process one tx at most, not recursively), and we'll process the orphans in subsequent calls to `ProcessMessages()`. It seems strange that in this one case we can process up to two transactions in `ProcessMessage()` (the one that we just received, and up to one orphan child of it).",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T08:28:45Z",
      "diff_hunk" : "@@ -3059,7 +3060,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             // Recursively process any orphan transactions that depended on this one\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n+            ProcessOrphanTx(*peer);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601192396",
      "id" : 601192396,
      "line" : 3113,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTE5MjM5Ng==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 3113,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 189,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601192396",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601207659"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601207659"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How about moving this check up to immediately after the call to `ProcessOrphanTx()`? It's not possible to have both `more_orphans` be true _and_ have `m_getdata_requests` be non-empty:\r\n\r\n- `ProcessOrphanTx(*peer)` can only return true if there are elements in peer's orphan work set, which can only be true if the last network message processed was a `tx` (`m_peer_work_set` only gets added to when processing a `tx` or when processing an element of `m_peer_work_set`, and we won't process another network message until it's empty)\r\n- `m_getdata_requests` can only be non-empty if the last network message processed was a `getdata` (`m_getdata_requests` only gets added to when processing a `getdata`, and we won't process another message until it's empty)\r\n\r\nThat'd eliminate the need for a `more_orphans` variable, and make it immediately obvious that we're not going to process an orphan _and_ a getdata request on the same pass through `ProcessMessage()`.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T08:44:03Z",
      "diff_hunk" : "@@ -3871,8 +3871,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n     }\n \n     {\n-        LOCK(g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) return true;\n+        if (more_orphans) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601207659",
      "id" : 601207659,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIwNzY1OQ==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 3899,
      "original_position" : 185,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601207659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601210830"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601210830"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can be more concisely written as:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 02e2785c24..c90d73cb95 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -3854,11 +3854,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\r\n         }\r\n     }\r\n \r\n-    bool more_orphans = false;\r\n-    {\r\n-        LOCK(cs_main);\r\n-        more_orphans = ProcessOrphanTx(*peer);\r\n-    }\r\n+    const bool more_orphans{WITH_LOCK(cs_main, return ProcessOrphanTx(*peer);)};\r\n \r\n     if (pfrom->fDisconnect)\r\n         return false;\r\n",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T08:47:11Z",
      "diff_hunk" : "@@ -3853,11 +3854,10 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n         }\n     }\n \n+    bool more_orphans = false;\n     {\n-        LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n-        }\n+        LOCK(cs_main);\n+        more_orphans = ProcessOrphanTx(*peer);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601210830",
      "id" : 601210830,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIxMDgzMA==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 3885,
      "original_position" : 175,
      "original_start_line" : 3859,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601210830",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21845 (net processing: Don't require locking cs_main before calling RelayTransactions() by jnewbery)\n* #21186 (net/net processing: Move addr data into net_processing by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-03-25T08:57:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-806478833",
      "id" : 806478833,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNjQ3ODgzMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-04T01:57:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/806478833",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601221165"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601221165"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It'd be good to remove the `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` and only take the cs_main lock inside the while look (once we know that we have orphans to reprocess). In vast majority of cases we're taking and releasing cs_main for no reason because we have no orphans to process.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T08:57:13Z",
      "diff_hunk" : "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601221165",
      "id" : 601221165,
      "line" : 2086,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIyMTE2NQ==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 2086,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 110,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601221165",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601223122"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601223122"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well remembered to do this. Perhaps add a `TxOrphange::Empty()` function that returns whether there are any elements in any of the containers in the orphanage, and then assert `m_orphange.Empty()` in the `FinalizeNode()` logic when the last peer is deleted.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T08:58:51Z",
      "diff_hunk" : "@@ -87,24 +86,27 @@ int TxOrphanage::EraseTx(const uint256& txid)\n \n void TxOrphanage::EraseForPeer(NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    const int work_erased = m_peer_work_set.erase(peer);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601223122",
      "id" : 601223122,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIyMzEyMg==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 91,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : null,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601223122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601225798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601225798"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure that it's very interesting to log `work_erased`. It'll only ever be 0 (nothing in the work set) or 1 (items in the work set).",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T09:01:24Z",
      "diff_hunk" : "@@ -87,24 +86,27 @@ int TxOrphanage::EraseTx(const uint256& txid)\n \n void TxOrphanage::EraseForPeer(NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    const int work_erased = m_peer_work_set.erase(peer);\n \n     int nErased = 0;\n+\n     std::map<uint256, OrphanTx>::iterator iter = m_orphans.begin();\n     while (iter != m_orphans.end())\n     {\n         std::map<uint256, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n         if (maybeErase->second.fromPeer == peer)\n         {\n-            nErased += EraseTx(maybeErase->second.tx->GetHash());\n+            nErased += _EraseTx(maybeErase->second.tx->GetHash());\n         }\n     }\n-    if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx from peer=%d\\n\", nErased, peer);\n+    if (nErased > 0 || work_erased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx and %d from orphan work set for peer=%d\\n\", nErased, work_erased, peer);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601225798",
      "id" : 601225798,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIyNTc5OA==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 104,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : null,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601225798",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601236470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601236470"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this is a good idea. Anything that you guard with this mutex will never be accessible on other threads, which would prevent us from eg exposing it to RPC methods, or using it in validation interface callbacks. This seems like a way of reinventing thread local storage, which I don't think we want.\r\n\r\nIn addition, this mutex is exposed and used in both the net and net_processing layer, which adds to the coupling between those components. That's the opposite direction that I think we want to go in.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T09:11:32Z",
      "diff_hunk" : "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601236470",
      "id" : 601236470,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIzNjQ3MA==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 235,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601236470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601253387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601253387"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this possible? I think the logic in `GetTxToReconsider()` ensures that if true is returned, then porphanTx will not be null.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T09:26:41Z",
      "diff_hunk" : "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (porphanTx == nullptr) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601253387",
      "id" : 601253387,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI1MzM4Nw==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 2090,
      "original_position" : 103,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601253387",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601279266"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601279266"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a very strange interface. How about returning a `std::optional<std::pair<CTransactionRef, NodeId>>`, and then adding another public method `HasTxToReconsider()`. It's a bit less efficient, but we'll only ever call it after processing a transaction, so it seems negligible.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T09:49:02Z",
      "diff_hunk" : "@@ -21,65 +23,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const;\n \n-    /** Get an orphan transaction and its orginating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, and populates its arguments with tx,\n+     *  the originating peer, and whether there are more orphans for this\n+     *  peer to work on after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601279266",
      "id" : 601279266,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI3OTI2Ng==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 35,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : null,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601279266",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601280373"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601280373"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I guess this means you already tried using an optional in the return value of `GetTxToReconsider()`? ",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T09:49:56Z",
      "diff_hunk" : "@@ -10,8 +10,10 @@\n #include <primitives/transaction.h>\n #include <sync.h>\n \n-/** Guards orphan transactions and extra txs for compact blocks */\n-extern RecursiveMutex g_cs_orphans;\n+#include <map>\n+#include <optional>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601280373",
      "id" : 601280373,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI4MDM3Mw==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 14,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : null,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601280373",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601283910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601283910"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think you need this lock. It was previously here to enforce that cs_main was taken before g_cs_orphans.\r\n\r\nIt can also be removed from the process_message and process_messages fuzz tests.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T09:53:10Z",
      "diff_hunk" : "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601283910",
      "id" : 601283910,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI4MzkxMA==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 209,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601283910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601298826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601298826"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This comment is now incorrect. The multimap stores the node that provided the orphan tx.\r\n\r\nAlso, this data is redundant data with the `fromPeer` in the `OrphanTx` struct (this could easily be a set of txids to reconsider, and the originating peer is then looked up in the `OrphanTx` struct). We store it in the multimap for efficiency - the comment could be updated to indicate that.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T10:05:44Z",
      "diff_hunk" : "@@ -21,65 +23,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const;\n \n-    /** Get an orphan transaction and its orginating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, and populates its arguments with tx,\n+     *  the originating peer, and whether there are more orphans for this\n+     *  peer to work on after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!g_cs_orphans);\n+    void EraseForBlock(const CBlock& block);\n \n     /** Limit the orphanage to the given maximum */\n-    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    unsigned int LimitOrphans(unsigned int max_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Add any orphans that list a particular tx as a parent into the from peer's work set */\n+    void AddChildrenToWorkSet(const CTransaction& tx);\n \n protected:\n+    /** Guards data */\n+    mutable Mutex m_mutex;\n+\n+    /** Erase an orphan by txid (internal, lock must already be held) */\n+    int _EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n     struct OrphanTx {\n         CTransactionRef tx;\n         NodeId fromPeer;\n         int64_t nTimeExpire;\n         size_t list_pos;\n     };\n \n-    /** Map from txid to orphan transaction record. Limited by\n-     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n-    std::map<uint256, OrphanTx> m_orphans GUARDED_BY(g_cs_orphans);\n-\n-    using OrphanMap = decltype(m_orphans);\n+    using OrphanMap = std::map<uint256, OrphanTx>;\n \n     struct IteratorComparator\n     {\n-        template<typename I>\n-        bool operator()(const I& a, const I& b) const\n+        bool operator()(const OrphanMap::iterator& a, const OrphanMap::iterator& b) const\n         {\n             return &(*a) < &(*b);\n         }\n     };\n \n+    /** Map from txid to orphan transaction record. Limited by\n+     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n+    OrphanMap m_orphans GUARDED_BY(m_mutex);\n+\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601298826",
      "id" : 601298826,
      "line" : 80,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI5ODgyNg==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 80,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : 90,
      "pull_request_review_id" : 620835937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601298826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601391595"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601391595"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We could process 3 txs I think -- the last orphan already in the workset (in ProcessMessages), one from a just received TX message, and an additional orphan whose parent was the contents of that TX message. I don't think it's problematic that way, but 1-non-trivial-ATMP-call per ProcessMessages invocation could be reasonable.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T11:27:43Z",
      "diff_hunk" : "@@ -3059,7 +3060,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             // Recursively process any orphan transactions that depended on this one\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n+            ProcessOrphanTx(*peer);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601391595",
      "id" : 601391595,
      "in_reply_to_id" : 601192396,
      "line" : 3113,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTM5MTU5NQ==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 3113,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 189,
      "pull_request_review_id" : 620999343,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601391595",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601392702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601392702"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It crossed my mind that this might be another case where a multi index could be a win.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T11:28:46Z",
      "diff_hunk" : "@@ -87,24 +86,27 @@ int TxOrphanage::EraseTx(const uint256& txid)\n \n void TxOrphanage::EraseForPeer(NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    const int work_erased = m_peer_work_set.erase(peer);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601392702",
      "id" : 601392702,
      "in_reply_to_id" : 601223122,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTM5MjcwMg==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 91,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : null,
      "pull_request_review_id" : 621000254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601392702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601398665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601398665"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The reasoning isn't that this is particularly \"good\", it's that it's documenting the safety mechanisms we already have. It would have caught https://github.com/bitcoin/bitcoin/pull/21528#discussion_r601317221 for instance.\r\n\r\nnet_processing is fundamentally coupled with net -- it implements the NetEventsInterface defined and called from net. I mean I guess if you preferred, it could be `NetEventsInterface::m_mutex_message_handler`? (EDIT: actually, whether or not you prefer that, I think I do...)",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T11:34:23Z",
      "diff_hunk" : "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601398665",
      "id" : 601398665,
      "in_reply_to_id" : 601236470,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTM5ODY2NQ==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 235,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 621004986,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601398665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601401123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601401123"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`assert(porphanTx != nullptr)` seemed overkill and not having anything seemed like it might be annoying for static analysers",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T11:36:39Z",
      "diff_hunk" : "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (porphanTx == nullptr) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601401123",
      "id" : 601401123,
      "in_reply_to_id" : 601253387,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQwMTEyMw==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 2090,
      "original_position" : 103,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 621006771,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601401123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601414014"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414014"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I updated the comments which should still indicate why cs_main is needed there -- it needs to be locked before cs_vNodes, but cs_vNodes is locked first if you call StopThreads directly?",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T11:48:29Z",
      "diff_hunk" : "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601414014",
      "id" : 601414014,
      "in_reply_to_id" : 601283910,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQxNDAxNA==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 209,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 621016147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414014",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601414581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414581"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Very good point. I hadn't considered processing the orphan _before_ processing the net message.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T11:49:09Z",
      "diff_hunk" : "@@ -3059,7 +3060,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             // Recursively process any orphan transactions that depended on this one\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n+            ProcessOrphanTx(*peer);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601414581",
      "id" : 601414581,
      "in_reply_to_id" : 601192396,
      "line" : 3113,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQxNDU4MQ==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 3113,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 189,
      "pull_request_review_id" : 621016668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414581",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601416590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601416590"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How about: `if (!Assume(porphanTx)) break` ?",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T11:52:34Z",
      "diff_hunk" : "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (porphanTx == nullptr) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601416590",
      "id" : 601416590,
      "in_reply_to_id" : 601253387,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQxNjU5MA==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 2090,
      "original_position" : 103,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 621019338,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601416590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601422013"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601422013"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, very good point. And we can't take `cs_main` inside `StopNodes` because net isn't aware of `cs_main`.\r\n\r\nIt's outside the scope of this PR, but it'd be good to untangle this lock ordering dependency by eg making sure that cs_vNodes is not held when calling any PeerManager functions.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T12:00:57Z",
      "diff_hunk" : "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601422013",
      "id" : 601422013,
      "in_reply_to_id" : 601283910,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQyMjAxMw==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 209,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 621026235,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601422013",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601452522"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601452522"
         }
      },
      "author_association" : "MEMBER",
      "body" : "And if you're doing that then perhaps you can make it a `PeerManagerImpl::m_mutex_message_handler` and take it in `ProcessMessages()` and `SendMessages()`. Taking that lock once at the top of those functions would be very low cost (since there would never be any contention).",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-03-25T12:46:18Z",
      "diff_hunk" : "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601452522",
      "id" : 601452522,
      "in_reply_to_id" : 601236470,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQ1MjUyMg==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 235,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 621066590,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601452522",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616368502"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616368502"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've done this now -- the first three commits introduce `m_mutex_messages`, remove `cs_sendProcessing` and move extra txns to be protected by `m_mutex_messages` instead of `g_cs_orphans`. I think it would be good to cherry-pick those commits into #21186 so that the moved addr variables can actually be marked as guarded by something.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-20T06:04:30Z",
      "diff_hunk" : "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616368502",
      "id" : 616368502,
      "in_reply_to_id" : 601236470,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM2ODUwMg==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 235,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 639533523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616368502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616385405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616385405"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think:\r\n\r\n * just call AddChildrenToWorkSet when a new tx arrives, don't also immediately process them (ie don't also call ProcessOrphanTx)\r\n * when ProcessOrphanTx does work, don't continue on to also do a ProcessMessage, give another peer a chance to get some work done first\r\n * have ProcessOrphanTx take cs_main only when necessary\r\n * make the GetTxToReconsider signature simpler\r\n \r\nwould all fit together nicely and be a good idea, but it also feels like it's adding a bit much to this PR?\r\n ",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-20T06:39:32Z",
      "diff_hunk" : "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616385405",
      "id" : 616385405,
      "in_reply_to_id" : 601221165,
      "line" : 2086,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM4NTQwNQ==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 2086,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 110,
      "pull_request_review_id" : 639554968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616385405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616392400"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392400"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See #21563",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-20T06:52:36Z",
      "diff_hunk" : "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616392400",
      "id" : 616392400,
      "in_reply_to_id" : 601283910,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM5MjQwMA==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 209,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 639563941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased, some of the suggestions picked up, reworked the \"message handler\" mutex.",
      "created_at" : "2021-04-20T06:53:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-823022635",
      "id" : 823022635,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzAyMjYzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T06:53:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823022635",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616392887"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392887"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also see #21563",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-20T06:53:25Z",
      "diff_hunk" : "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616392887",
      "id" : 616392887,
      "in_reply_to_id" : 601236470,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM5Mjg4Nw==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 235,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 639564557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392887",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616546524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616546524"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it'd be cleaner for the `m_mutex_messages` lock to be taken by ProcessMessage**s**, rather than ProcessMessage. That would remove the need to define an inner `_ProcessMessage` to be called when the mutex is already locked. It's also consistent with the comment on the `m_mutex_messages` member, which says \"is acquired by ProcessMessages and SendMessages\"",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-20T10:14:46Z",
      "diff_hunk" : "@@ -253,9 +250,18 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_messages);\n \n private:\n+    /** Message processing is single-threaded\n+     * Anything only accessed by message parsing can be guarded by\n+     * this mutex, which is acquired by ProcessMessages and SendMessages\n+     */\n+    Mutex m_mutex_messages;\n+\n+    void _ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616546524",
      "id" : 616546524,
      "line" : 263,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjU0NjUyNA==",
      "original_commit_id" : "9cc2da27d3fed55cbe442ec13c87d157ef401822",
      "original_line" : 263,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 34,
      "pull_request_review_id" : 639768190,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616546524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616563414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616563414"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It is taken by `ProcessMessages()` (and also by `SendMessages()`), however `ProcessMessage()` is also called from the test suite, so cannot assume the lock has been taken. That's why the public interface, `ProcessMessage()`, is implemented as a wrapper that takes the lock, then calls the internal function.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-20T10:40:27Z",
      "diff_hunk" : "@@ -253,9 +250,18 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_messages);\n \n private:\n+    /** Message processing is single-threaded\n+     * Anything only accessed by message parsing can be guarded by\n+     * this mutex, which is acquired by ProcessMessages and SendMessages\n+     */\n+    Mutex m_mutex_messages;\n+\n+    void _ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616563414",
      "id" : 616563414,
      "in_reply_to_id" : 616546524,
      "line" : 263,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjU2MzQxNA==",
      "original_commit_id" : "9cc2da27d3fed55cbe442ec13c87d157ef401822",
      "original_line" : 263,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 34,
      "pull_request_review_id" : 639790506,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616563414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616661184"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616661184"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, sorry - misread.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-20T13:02:28Z",
      "diff_hunk" : "@@ -253,9 +250,18 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_messages);\n \n private:\n+    /** Message processing is single-threaded\n+     * Anything only accessed by message parsing can be guarded by\n+     * this mutex, which is acquired by ProcessMessages and SendMessages\n+     */\n+    Mutex m_mutex_messages;\n+\n+    void _ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616661184",
      "id" : 616661184,
      "in_reply_to_id" : 616546524,
      "line" : 263,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjY2MTE4NA==",
      "original_commit_id" : "9cc2da27d3fed55cbe442ec13c87d157ef401822",
      "original_line" : 263,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 34,
      "pull_request_review_id" : 639919003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616661184",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've re-reviewed the locking changes and they look reasonable. There are still a few review comments outstanding. I'm happy to review this PR again once those have been addressed.",
      "created_at" : "2021-04-20T13:08:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-823260165",
      "id" : 823260165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzI2MDE2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T13:08:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823260165",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616696972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616696972"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> This PR changes orphan processing from being done for the peer that provided the parent to the peer that provided the orphan. I think that's fine, but perhaps we should split the PR into one that does refactoring only and one that has behaviour changes.\r\n\r\nHmm, might make sense to put the changes above together with the last commit in a separate PR, so this is just refactoring and the behaviour changes (who processes orphans, and how many orphans are processed in a cycle) are collected together.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-20T13:44:22Z",
      "diff_hunk" : "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616696972",
      "id" : 616696972,
      "in_reply_to_id" : 601221165,
      "line" : 2086,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjY5Njk3Mg==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 2086,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 110,
      "pull_request_review_id" : 639968531,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616696972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616712448"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616712448"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, I agree that it's better to split the PR into two: one that refactors and one that changes behaviour.",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-20T14:00:59Z",
      "diff_hunk" : "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616712448",
      "id" : 616712448,
      "in_reply_to_id" : 601221165,
      "line" : 2086,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjcxMjQ0OA==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 2086,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 110,
      "pull_request_review_id" : 639989638,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616712448",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r618789454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618789454"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is drafted at https://github.com/ajtowns/bitcoin/commits/202104-whohandlesorphans",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-22T22:41:31Z",
      "diff_hunk" : "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r618789454",
      "id" : 618789454,
      "in_reply_to_id" : 601221165,
      "line" : 2086,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODc4OTQ1NA==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 2086,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 110,
      "pull_request_review_id" : 642749069,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618789454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this is now cleaned up, and ready for review. The behaviour changes that were in the last commit are now deferred to https://github.com/ajtowns/bitcoin/commits/202104-whohandlesorphans . ",
      "created_at" : "2021-04-22T22:43:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-825228907",
      "id" : 825228907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNTIyODkwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-22T22:43:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825228907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-04-25T09:20:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-826289705",
      "id" : 826289705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNjI4OTcwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-25T09:20:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826289705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r619829668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/619829668"
         }
      },
      "author_association" : "MEMBER",
      "body" : "21563 is merged",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-25T15:02:06Z",
      "diff_hunk" : "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r619829668",
      "id" : 619829668,
      "in_reply_to_id" : 601283910,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTgyOTY2OA==",
      "original_commit_id" : "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "original_line" : 209,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 644149974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T09:18:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/619829668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "When you rebase this, there are a few files that no longer need to include txorphanage.h:\r\n\r\n<details>\r\n<summary>Diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex bb5b144802..e7b5ed60e3 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -52,7 +52,6 @@\r\n #include <torcontrol.h>\r\n #include <txdb.h>\r\n #include <txmempool.h>\r\n-#include <txorphanage.h>\r\n #include <util/asmap.h>\r\n #include <util/check.h>\r\n #include <util/moneystr.h>\r\ndiff --git a/src/test/fuzz/process_message.cpp b/src/test/fuzz/process_message.cpp\r\nindex 7b99193ad0..5a71b25768 100644\r\n--- a/src/test/fuzz/process_message.cpp\r\n+++ b/src/test/fuzz/process_message.cpp\r\n@@ -18,7 +18,6 @@\r\n #include <test/util/net.h>\r\n #include <test/util/setup_common.h>\r\n #include <test/util/validation.h>\r\n-#include <txorphanage.h>\r\n #include <validationinterface.h>\r\n #include <version.h>\r\n \r\ndiff --git a/src/test/fuzz/process_messages.cpp b/src/test/fuzz/process_messages.cpp\r\nindex 11b236c9bd..f8b1c8fc90 100644\r\n--- a/src/test/fuzz/process_messages.cpp\r\n+++ b/src/test/fuzz/process_messages.cpp\r\n@@ -13,7 +13,6 @@\r\n #include <test/util/net.h>\r\n #include <test/util/setup_common.h>\r\n #include <test/util/validation.h>\r\n-#include <txorphanage.h>\r\n #include <validation.h>\r\n #include <validationinterface.h>\r\n```\r\n\r\n</details>\r\n\r\nThose files were only including txorphange.h to use the g_cs_orphans mutex.",
      "created_at" : "2021-04-25T15:38:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-826344035",
      "id" : 826344035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNjM0NDAzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-25T15:38:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826344035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased (and likewise the whohandlesorphans followup)",
      "created_at" : "2021-04-29T09:21:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-829077016",
      "id" : 829077016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyOTA3NzAxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-29T09:21:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/829077016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r622998740"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622998740"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    /** Get an orphan transaction for a peer to work on and erase it from the peer's workset.\r\n```",
      "commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "created_at" : "2021-04-29T12:20:48Z",
      "diff_hunk" : "@@ -21,65 +21,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r622998740",
      "id" : 622998740,
      "line" : 29,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjk5ODc0MA==",
      "original_commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "original_line" : 29,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : 24,
      "pull_request_review_id" : 648135263,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-29T12:40:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622998740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nðµï¸ @sipa has been requested to review this pull request as specified in the REVIEWERS file.",
      "created_at" : "2021-05-03T09:32:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-831142078",
      "id" : 831142078,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzMTE0MjA3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-03T09:32:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/831142078",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-05-07T03:16:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-834031899",
      "id" : 834031899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzNDAzMTg5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-07T03:16:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834031899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased past #21845. cc @MarcoFalke @promag for reviews :)",
      "created_at" : "2021-05-07T12:27:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-834330923",
      "id" : 834330923,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzNDMzMDkyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-07T12:27:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834330923",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 8b4f685ebef5eb14f049d04e2c4f4ce5b44878de\r\n\r\nDo you mind addressing https://github.com/bitcoin/bitcoin/pull/21527#discussion_r622998740 while there are no other ACKs on the branch?",
      "created_at" : "2021-05-07T13:00:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-834360334",
      "id" : 834360334,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzNDM2MDMzNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-07T13:00:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834360334",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628237298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628237298"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done-ish",
      "commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "created_at" : "2021-05-07T14:04:51Z",
      "diff_hunk" : "@@ -21,65 +21,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628237298",
      "id" : 628237298,
      "in_reply_to_id" : 622998740,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODIzNzI5OA==",
      "original_commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "original_line" : 29,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : null,
      "pull_request_review_id" : 654495227,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-07T14:04:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628237298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "created_at" : "2021-05-07T14:39:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-834466926",
      "id" : 834466926,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzNDQ2NjkyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-07T14:39:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834466926",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628263177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628263177"
         }
      },
      "author_association" : "MEMBER",
      "body" : "thank you!",
      "commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "created_at" : "2021-05-07T14:39:58Z",
      "diff_hunk" : "@@ -21,65 +21,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628263177",
      "id" : 628263177,
      "in_reply_to_id" : 622998740,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODI2MzE3Nw==",
      "original_commit_id" : "584043a0203332fe645529b1c27c086e4f14a61c",
      "original_line" : 29,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : null,
      "pull_request_review_id" : 654531888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-07T14:39:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628263177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628835510"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628835510"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit fec0ff16627c1cbf5545c9de8db19b749c90beee:\r\n\r\nThe lock order is m_mutex_message_handling -> cs_main -> g_cs_orphans, so it would be nice to also order the Asserts here in the same way.",
      "commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "created_at" : "2021-05-09T05:21:12Z",
      "diff_hunk" : "@@ -2093,6 +2095,7 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n {\n     AssertLockHeld(cs_main);\n+    AssertLockHeld(m_mutex_message_handling);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628835510",
      "id" : 628835510,
      "line" : 2097,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODgzNTUxMA==",
      "original_commit_id" : "fec0ff16627c1cbf5545c9de8db19b749c90beee",
      "original_line" : 2098,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 113,
      "pull_request_review_id" : 655041297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-09T06:05:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628835510",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628836372"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628836372"
         }
      },
      "author_association" : "MEMBER",
      "body" : "57900348db566105351b525ae18cc2830e9665b5:\r\n\r\nThis undocumented one-line-if might be a bit too minimal. Previously there was a nice comment as to why return early is needed here. Now the comment is gone, or at least can't be trivially attached to the return here.",
      "commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "created_at" : "2021-05-09T05:30:24Z",
      "diff_hunk" : "@@ -3895,9 +3902,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n \n     {\n         LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(*peer);\n-        }\n+        if (ProcessOrphanTx(*peer)) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628836372",
      "id" : 628836372,
      "line" : 3900,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODgzNjM3Mg==",
      "original_commit_id" : "57900348db566105351b525ae18cc2830e9665b5",
      "original_line" : 3905,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 230,
      "pull_request_review_id" : 655041297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-09T06:05:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628836372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628839074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628839074"
         }
      },
      "author_association" : "MEMBER",
      "body" : "67618f024690bc9b926aa48ead23a0f687f03fe4: I know there is a check to avoid duplicate insertion of the same txid, but is there a reason to pick this datastructure, which doesn't disallow duplicate entries like set? Also insertion is trivially more expensive (log(all peers' work sets) vs log(this peers' work set)). Finally handling is done in insertion order, not in sorted order.",
      "commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "created_at" : "2021-05-09T06:00:19Z",
      "diff_hunk" : "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628839074",
      "id" : 628839074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODgzOTA3NA==",
      "original_commit_id" : "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "original_line" : 47,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : null,
      "pull_request_review_id" : 655041297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-09T06:05:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628839074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628907747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628907747"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure what you mean by \"the comment is gone\" ? The \"maintains the order of responses and prevents ~vRecvGetData~ m_getdata_requests to grow unbounded\" is still there, but at least I thought that sensibly described the ~`!pfrom->vRecvGetData.empty()`~ `!peer->m_getdata_requests.empty()` check it remains attached to, and didn't really fit the \"more orphans to work on\" check. (EDIT: oops, was looking at 0.19 to see if there was any other comment)",
      "commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "created_at" : "2021-05-09T15:45:33Z",
      "diff_hunk" : "@@ -3895,9 +3902,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n \n     {\n         LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(*peer);\n-        }\n+        if (ProcessOrphanTx(*peer)) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628907747",
      "id" : 628907747,
      "in_reply_to_id" : 628836372,
      "line" : 3900,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODkwNzc0Nw==",
      "original_commit_id" : "57900348db566105351b525ae18cc2830e9665b5",
      "original_line" : 3905,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 230,
      "pull_request_review_id" : 655090428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-09T16:06:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628907747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r631826871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631826871"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> ... is there a reason to pick this datastructure, which doesn't disallow duplicate entries ...\r\n\r\nI think the reason could be to allow (nodeX, tx1), (nodeX, tx2)?",
      "commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "created_at" : "2021-05-13T13:53:19Z",
      "diff_hunk" : "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r631826871",
      "id" : 631826871,
      "in_reply_to_id" : 628839074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTgyNjg3MQ==",
      "original_commit_id" : "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "original_line" : 47,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : null,
      "pull_request_review_id" : 658925527,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-13T13:53:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631826871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r631895780"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631895780"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If it is single-threaded, then we don't need to guard anything with a mutex?\r\n\r\nIt looks to me that `PeerManagerImpl::m_mutex_message_handling` is useless because it is only being acquired from a single thread. No two threads are ever going to race to acquire it at the same time:\r\n\r\n```cpp\r\nThreadMessageHandler() // there is just one thread executing this\r\n   ProcessMessages()\r\n       ...\r\n       lock m_mutex_message_handling\r\n       ...\r\n   ...\r\n   SendMessages()\r\n       ...\r\n       lock m_mutex_message_handling\r\n       ...\r\n```\r\n\r\nI may be missing something but to me it looks like `m_mutex_message_handling` can be removed safely, which will reduce the complexity of the code.\r\n",
      "commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "created_at" : "2021-05-13T15:25:27Z",
      "diff_hunk" : "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r631895780",
      "id" : 631895780,
      "line" : 262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTg5NTc4MA==",
      "original_commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "original_line" : 262,
      "original_position" : 32,
      "original_start_line" : 257,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 658993554,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : 257,
      "start_side" : "RIGHT",
      "updated_at" : "2021-05-13T15:35:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631895780",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633205205"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205205"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Note that if you've got N peers each with K items in their work set, then a log search over everything is `log(N*K)`, and a log search for the peer followed by a log search or the work item is `log(N) + log(K)` which is the same. If there's one peer with K items and every other peer has 0, you instead get `log(K)` vs `log(N) + 1/N log(K)`; so a map of sets would be better than a set of pairs provided `N < K`, but probably isn't very interesting.\r\n\r\nI picked the data structure because I thought it was simpler than a set of pairs, but I don't think there's an adequate check to avoid duplicate insertion of the same txid (and to do that, you'd have to search through all the entries for a peer, which would be annoying).",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-17T03:49:59Z",
      "diff_hunk" : "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633205205",
      "id" : 633205205,
      "in_reply_to_id" : 628839074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzIwNTIwNQ==",
      "original_commit_id" : "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "original_line" : 47,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : null,
      "pull_request_review_id" : 660532615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T03:49:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205205",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633205889"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205889"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to `map<NodeId,set<uint256>>`",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-17T03:52:59Z",
      "diff_hunk" : "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633205889",
      "id" : 633205889,
      "in_reply_to_id" : 628839074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzIwNTg4OQ==",
      "original_commit_id" : "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "original_line" : 47,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : null,
      "pull_request_review_id" : 660533417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T03:52:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633206688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633206688"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You don't need the mutex at runtime, but having the `GUARDED_BY(m_mutex_message_handling)` at compile time makes it easy to verify nobody's accidentally accessing the object from some other thread (either currently, or as a result of some future change, eg adding an RPC call that wants to expose some of the information stored in those objects). The cost of also having the mutex at runtime is trivial since there's never any contention on it.",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-17T03:56:19Z",
      "diff_hunk" : "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633206688",
      "id" : 633206688,
      "in_reply_to_id" : 631895780,
      "line" : 262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzIwNjY4OA==",
      "original_commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "original_line" : 262,
      "original_position" : 32,
      "original_start_line" : 257,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 660534298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : 257,
      "start_side" : "RIGHT",
      "updated_at" : "2021-05-17T03:56:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633206688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633287175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633287175"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    // Look up this peer's work set, ensuring it exists.\r\n```",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-17T07:31:35Z",
      "diff_hunk" : "@@ -132,15 +134,19 @@ unsigned int TxOrphanage::LimitOrphans(unsigned int max_orphans)\n     {\n         // Evict a random orphan:\n         size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n+        _EraseTx(m_orphan_list[randompos]->first);\n         ++nEvicted;\n     }\n     return nEvicted;\n }\n \n-void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const\n+void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    // lookup this peer's work set, ensuring it exists",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633287175",
      "id" : 633287175,
      "line" : 147,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzI4NzE3NQ==",
      "original_commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "original_line" : 147,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : 84,
      "pull_request_review_id" : 660637741,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T07:31:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633287175",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633293884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633293884"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit bdd227493602437d4b6ee2d366ca0a83189f071c:\r\n\r\nThe new value for `it` is unused. No need to set it here:\r\n\r\n```suggestion\r\n        orphan_work_set.erase(it);\r\n```",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-17T07:42:41Z",
      "diff_hunk" : "@@ -2100,11 +2097,15 @@ bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n     AssertLockHeld(cs_main);\n     AssertLockHeld(g_cs_orphans);\n \n-    if (peer.m_orphan_work_set.empty()) return false;\n+    auto work_set_it = m_orphanage.m_peer_work_set.find(peer.m_id);\n+    if (work_set_it == m_orphanage.m_peer_work_set.end()) return false;\n+\n+    std::set<uint256>& orphan_work_set = work_set_it->second;\n \n-    while (!peer.m_orphan_work_set.empty()) {\n-        const uint256 orphanHash = *peer.m_orphan_work_set.begin();\n-        peer.m_orphan_work_set.erase(peer.m_orphan_work_set.begin());\n+    while (!orphan_work_set.empty()) {\n+        auto it = orphan_work_set.begin();\n+        const uint256 orphanHash = *it;\n+        it = orphan_work_set.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633293884",
      "id" : 633293884,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzI5Mzg4NA==",
      "original_commit_id" : "bdd227493602437d4b6ee2d366ca0a83189f071c",
      "original_line" : 2108,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 660646816,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T08:02:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633293884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633446322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633446322"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I left a comment about this interface further up that seems to have been lost without being resolved. I think the interface is needlessly complex and doing too much. From my comment above:\r\n\r\n> How about returning a `std::optional<std::pair<CTransactionRef, NodeId>>`, and then adding another public method `HasTxToReconsider()`. It's a bit less efficient, but we'll only ever call it after processing a transaction, so it seems negligible.",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-17T11:22:06Z",
      "diff_hunk" : "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633446322",
      "id" : 633446322,
      "line" : 36,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzQ0NjMyMg==",
      "original_commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "original_line" : 36,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : 33,
      "pull_request_review_id" : 660851825,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T11:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633446322",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633447335"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633447335"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(if you're keeping `more`), the following is equivalent, and maybe more direct/clear:\r\n\r\n```suggestion\r\n                more = !(work_set.empty());\r\n```",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-17T11:23:53Z",
      "diff_hunk" : "@@ -153,26 +159,43 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>\n \n bool TxOrphanage::HaveTx(const GenTxid& gtxid) const\n {\n-    LOCK(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n     if (gtxid.IsWtxid()) {\n         return m_wtxid_to_orphan_it.count(gtxid.GetHash());\n     } else {\n         return m_orphans.count(gtxid.GetHash());\n     }\n }\n \n-std::pair<CTransactionRef, NodeId> TxOrphanage::GetTx(const uint256& txid) const\n+bool TxOrphanage::GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more)\n {\n-    AssertLockHeld(g_cs_orphans);\n-\n-    const auto it = m_orphans.find(txid);\n-    if (it == m_orphans.end()) return {nullptr, -1};\n-    return {it->second.tx, it->second.fromPeer};\n+    LOCK(m_mutex);\n+\n+    auto work_set_it = m_peer_work_set.find(peer);\n+    if (work_set_it != m_peer_work_set.end()) {\n+        auto& work_set = work_set_it->second;\n+        auto it = work_set.begin();\n+        while (it != work_set.end()) {\n+            uint256 txid = *it;\n+            it = work_set.erase(it);\n+\n+            const auto orphan_it = m_orphans.find(txid);\n+            if (orphan_it != m_orphans.end()) {\n+                more = (it != work_set.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633447335",
      "id" : 633447335,
      "line" : 185,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzQ0NzMzNQ==",
      "original_commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "original_line" : 185,
      "original_position" : 124,
      "original_start_line" : null,
      "path" : "src/txorphanage.cpp",
      "position" : 124,
      "pull_request_review_id" : 660851825,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T11:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633447335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633456971"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633456971"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601221165",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-17T11:40:48Z",
      "diff_hunk" : "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633456971",
      "id" : 633456971,
      "in_reply_to_id" : 633446322,
      "line" : 36,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzQ1Njk3MQ==",
      "original_commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "original_line" : 36,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/txorphanage.h",
      "position" : 33,
      "pull_request_review_id" : 660865808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T11:40:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633456971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633669006"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633669006"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK the addition of `m_mutex_message_handling`.\r\n\r\nFollowing the logic of\r\n\r\n> GUARDED_BY() makes it easy to verify nobody's accidentally accessing...\r\n\r\nshould we add a dummy mutex for **every** variable?\r\n\r\nIMO mutexes should be used only where concurrent access is possible.",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-17T16:11:21Z",
      "diff_hunk" : "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633669006",
      "id" : 633669006,
      "in_reply_to_id" : 631895780,
      "line" : 262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzY2OTAwNg==",
      "original_commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "original_line" : 262,
      "original_position" : 32,
      "original_start_line" : 257,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 661155372,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : 257,
      "start_side" : "RIGHT",
      "updated_at" : "2021-05-17T16:11:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633669006",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633692263"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633692263"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@vasild can you take a look at the commits that build on top of this branch in https://github.com/jnewbery/bitcoin/commits/2021-05-use-mutex-message-handling. Currently, a lot of the data in net_processing is guarded by cs_main, which is also used in validation. One way to loosen that coupling between validation and net_processing is to introduce an internal mutex inside net_processing (`m_mutex_message_handling`) that guards its own members.",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-17T16:43:31Z",
      "diff_hunk" : "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633692263",
      "id" : 633692263,
      "in_reply_to_id" : 631895780,
      "line" : 262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzY5MjI2Mw==",
      "original_commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "original_line" : 262,
      "original_position" : 32,
      "original_start_line" : 257,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 661186513,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : 257,
      "start_side" : "RIGHT",
      "updated_at" : "2021-05-17T16:43:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633692263",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r634375833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634375833"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that https://github.com/jnewbery/bitcoin/commits/2021-05-use-mutex-message-handling can be simplified and the common `m_mutex_message_handling` avoided by changing some of the variables to atomics and using a dedicated mutex for e.g. `m_txrequest`.\r\n\r\nBtw, it does not compile.\r\n<details>\r\n<summary>minor fixups</summary>\r\n\r\n```diff\r\ndiff --git i/src/net_processing.cpp w/src/net_processing.cpp\r\nindex c56863e5ef..cc04679683 100644\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -401,13 +401,13 @@ private:\r\n      * Set mapBlockSource[hash].second to false if the node should not be\r\n      * punished if the block is invalid.\r\n      */\r\n     std::map<uint256, std::pair<NodeId, bool>> mapBlockSource GUARDED_BY(cs_main);\r\n \r\n     /** Number of peers with wtxid relay. */\r\n-    int m_wtxid_relay_peers GUARDED_BY(m_mutex_message_handing) {0};\r\n+    int m_wtxid_relay_peers GUARDED_BY(m_mutex_message_handling) {0};\r\n \r\n     /** Number of outbound peers with m_chain_sync.m_protect. */\r\n     int m_outbound_peers_with_protect_from_disconnect GUARDED_BY(cs_main) = 0;\r\n \r\n     bool AlreadyHaveTx(const GenTxid& gtxid) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n@@ -1000,20 +1000,15 @@ void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds)\r\n     CNodeState *state = State(node);\r\n     if (state) state->m_last_block_announcement = time_in_seconds;\r\n }\r\n \r\n void PeerManagerImpl::InitializeNode(CNode *pnode)\r\n {\r\n-    LOCK(m_mutex_message_handling);\r\n-\r\n     NodeId nodeid = pnode->GetId();\r\n-    {\r\n-        LOCK(cs_main);\r\n-        mapNodeState.emplace_hint(mapNodeState.end(), std::piecewise_construct, std::forward_as_tuple(nodeid), std::forward_as_tuple(pnode->IsInboundConn()));\r\n-        assert(m_txrequest.Count(nodeid) == 0);\r\n-    }\r\n+    WITH_LOCK(cs_main, mapNodeState.emplace_hint(mapNodeState.end(), std::piecewise_construct, std::forward_as_tuple(nodeid), std::forward_as_tuple(pnode->IsInboundConn())));\r\n+    WITH_LOCK(m_mutex_message_handling, assert(m_txrequest.Count(nodeid) == 0));\r\n     {\r\n         PeerRef peer = std::make_shared<Peer>(nodeid, m_mutex_message_handling);\r\n         LOCK(m_peer_mutex);\r\n         m_peer_map.emplace_hint(m_peer_map.end(), nodeid, std::move(peer));\r\n     }\r\n     if (!pnode->IsInboundConn()) {\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>compilation errors</summary>\r\n\r\n```sh\r\n(clang 13)\r\n\r\nnet_processing.cpp:986:33: error: reading variable 'fPreferredDownload' requires holding mutex 'peer.m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n    const bool preferred = peer.fPreferredDownload;\r\n                                ^\r\nnet_processing.cpp:1033:13: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            _RelayTransaction(txid, tx->GetWitnessHash());\r\n            ^\r\nnet_processing.cpp:1062:41: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            nPreferredDownload -= peer->fPreferredDownload;\r\n                                        ^\r\nnet_processing.cpp:1063:42: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            m_wtxid_relay_peers -= peer->m_wtxid_relay;\r\n                                         ^\r\nnet_processing.cpp:1537:41: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n    WITH_LOCK(m_mutex_message_handling, _RelayTransaction(txid, wtxid););\r\n                                        ^\r\nnet_processing.cpp:1550:43: error: reading variable 'm_wtxid_relay' requires holding mutex 'it->second->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        node->PushTxInventory(it->second->m_wtxid_relay ? wtxid : txid);\r\n                                          ^\r\nnet_processing.cpp:2485:15: error: writing variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' exclusively [-Werror,-Wthread-safety-analysis]\r\n        peer->fPreferredDownload = (!pfrom.IsInboundConn() || pfrom.HasPermission(PF_NOBAN)) && !pfrom.IsAddrFetchConn() && !pfrom.fClient;\r\n              ^\r\nnet_processing.cpp:2486:37: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        nPreferredDownload -= peer->fPreferredDownload;\r\n                                    ^\r\nnet_processing.cpp:2653:24: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            if (!peer->m_wtxid_relay) {\r\n                       ^\r\nnet_processing.cpp:2654:23: error: writing variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' exclusively [-Werror,-Wthread-safety-analysis]\r\n                peer->m_wtxid_relay = true;\r\n                      ^\r\nnet_processing.cpp:2777:23: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            if (peer->m_wtxid_relay) {\r\n                      ^\r\nnet_processing.cpp:3049:37: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        const uint256& hash = peer->m_wtxid_relay ? wtxid : txid;\r\n                                    ^\r\nnet_processing.cpp:3051:19: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        if (peer->m_wtxid_relay && txid != wtxid) {\r\n                  ^\r\nnet_processing.cpp:3075:13: error: calling function 'AlreadyHaveTx' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n        if (AlreadyHaveTx(GenTxid(/* is_wtxid=*/true, wtxid))) {\r\n            ^\r\nnet_processing.cpp:3084:21: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n                    _RelayTransaction(tx.GetHash(), tx.GetWitnessHash());\r\n                    ^\r\nnet_processing.cpp:3090:44: error: calling function 'AcceptToMemoryPool' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n        const MempoolAcceptResult result = AcceptToMemoryPool(m_chainman.ActiveChainstate(), m_mempool, ptx, false /* bypass_limits */);\r\n                                           ^\r\nnet_processing.cpp:3094:23: error: calling function 'check' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            m_mempool.check(m_chainman.ActiveChainstate());\r\n                      ^\r\nnet_processing.cpp:3099:13: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            _RelayTransaction(tx.GetHash(), tx.GetWitnessHash());\r\n            ^\r\nnet_processing.cpp:3114:13: error: calling function 'ProcessOrphanTx' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            ProcessOrphanTx(*peer);\r\n            ^\r\nnet_processing.cpp:3131:21: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                if (recentRejects->contains(parent_txid)) {\r\n                    ^\r\nnet_processing.cpp:3147:26: error: calling function 'AlreadyHaveTx' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n                    if (!AlreadyHaveTx(gtxid)) AddTxAnnouncement(pfrom, *peer, gtxid, current_time);\r\n                         ^\r\nnet_processing.cpp:3172:17: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                recentRejects->insert(tx.GetHash());\r\n                ^\r\nnet_processing.cpp:3173:17: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                recentRejects->insert(tx.GetWitnessHash());\r\n                ^\r\nnet_processing.cpp:3192:24: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                assert(recentRejects);\r\n                       ^\r\nnet_processing.cpp:3193:17: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                recentRejects->insert(tx.GetWitnessHash());\r\n                ^\r\nnet_processing.cpp:3204:21: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                    recentRejects->insert(tx.GetHash());\r\n                    ^\r\nnet_processing.cpp:4291:29: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        bool fFetch = peer->fPreferredDownload || (nPreferredDownload == 0 && !pto->fClient && !pto->IsAddrFetchConn()); // Download if this is a nice peer, or we have no nice peers and this one might do.\r\n                            ^\r\nnet_processing.cpp:4504:53: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                        const uint256& hash = peer->m_wtxid_relay ? txinfo.tx->GetWitnessHash() : txinfo.tx->GetHash();\r\n                                                    ^\r\nnet_processing.cpp:4505:40: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\r\n                                       ^\r\nnet_processing.cpp:4536:85: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                    CompareInvMempoolOrder compareInvMempoolOrder(&m_mempool, peer->m_wtxid_relay);\r\n                                                                                    ^\r\nnet_processing.cpp:4548:40: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\r\n                                       ^\r\nnet_processing.cpp:4636:117: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                if (current_time > state.m_headers_sync_timeout && nSyncStarted == 1 && (nPreferredDownload - peer->fPreferredDownload >= 1)) {\r\n                                                                                                                    ^\r\n32 errors generated.\r\n```\r\n</details>\r\n",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-18T13:26:04Z",
      "diff_hunk" : "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r634375833",
      "id" : 634375833,
      "in_reply_to_id" : 631895780,
      "line" : 262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDM3NTgzMw==",
      "original_commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "original_line" : 262,
      "original_position" : 32,
      "original_start_line" : 257,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 662077356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : 257,
      "start_side" : "RIGHT",
      "updated_at" : "2021-05-18T13:26:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634375833",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r634534643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634534643"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"Should we add a dummy mutex for every variable\" -- we should have a GUARDED_BY for every object that's reachable by multiple threads, yes. The mutex is not a dummy, it's a real mutex.\r\n\r\nFor this specific case, here's an example of a patch that adds an access from another thread: https://github.com/ajtowns/bitcoin/commits/202105-whyhaveaguard . With the `GUARDED_BY(m_mutex_message_handling)` this is caught at compile time; without the guard (removed in the second commit), it compiles fine but introduces a race condition.",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-18T16:10:19Z",
      "diff_hunk" : "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r634534643",
      "id" : 634534643,
      "in_reply_to_id" : 631895780,
      "line" : 262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDUzNDY0Mw==",
      "original_commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "original_line" : 262,
      "original_position" : 32,
      "original_start_line" : 257,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 662301412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : 257,
      "start_side" : "RIGHT",
      "updated_at" : "2021-05-18T16:10:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634534643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r635119808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635119808"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> we should have a GUARDED_BY for every object that's reachable by multiple threads\r\n\r\nI assume here you mean -- even if the current code accesses it from a single thread.\r\n\r\nIf yes, then I think that is an overkill - it means having a mutex attached to every non-const global or class member variable, including private ones (coz in the future somebody may access it from another thread).\r\n\r\n> For this specific case, here's an example...\r\n\r\nYeah, but one can do such an example for any other variable. IMO annotating everything with `GUARDED_BY()`, just in case, would have a net-adverse effect on the code base.\r\n\r\n<details>\r\n<summary>Similar example for two other, randomly picked variables</summary>\r\n\r\n```diff\r\ndiff --git i/src/net.h w/src/net.h\r\nindex 6b9a7ef136..18d57a7d8e 100644\r\n--- i/src/net.h\r\n+++ w/src/net.h\r\n@@ -1256,12 +1256,18 @@ private:\r\n      * an address and port that are designated for incoming Tor connections.\r\n      */\r\n     std::vector<CService> m_onion_binds;\r\n \r\n     friend struct CConnmanTest;\r\n     friend struct ConnmanTestMsg;\r\n+\r\n+public:\r\n+    size_t ResponseCachesSize() const\r\n+    {\r\n+        return m_addr_response_caches.size();\r\n+    }\r\n };\r\n \r\n /** Return a timestamp in the future (in microseconds) for exponentially distributed events. */\r\n std::chrono::microseconds PoissonNextSend(std::chrono::microseconds now, std::chrono::seconds average_interval);\r\n \r\n /** Dump binary message to file, with timestamp */\r\ndiff --git i/src/rpc/net.cpp w/src/rpc/net.cpp\r\nindex 1f6b6e8d7e..cfab1ebafc 100644\r\n--- i/src/rpc/net.cpp\r\n+++ w/src/rpc/net.cpp\r\n@@ -631,12 +631,14 @@ static RPCHelpMan getnetworkinfo()\r\n     NodeContext& node = EnsureAnyNodeContext(request.context);\r\n     if (node.connman) {\r\n         ServiceFlags services = node.connman->GetLocalServices();\r\n         obj.pushKV(\"localservices\", strprintf(\"%016x\", services));\r\n         obj.pushKV(\"localservicesnames\", GetServicesNames(services));\r\n     }\r\n+    obj.pushKV(\"bug1\", node.connman->ResponseCachesSize());\r\n+    obj.pushKV(\"bug2\", node.addrman->m_asmap.size());\r\n     if (node.peerman) {\r\n         obj.pushKV(\"localrelay\", !node.peerman->IgnoresIncomingTxs());\r\n     }\r\n     obj.pushKV(\"timeoffset\",    GetTimeOffset());\r\n     if (node.connman) {\r\n         obj.pushKV(\"networkactive\", node.connman->GetNetworkActive());\r\n```\r\n</details>\r\n",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-19T10:41:11Z",
      "diff_hunk" : "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r635119808",
      "id" : 635119808,
      "in_reply_to_id" : 631895780,
      "line" : 262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTExOTgwOA==",
      "original_commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "original_line" : 262,
      "original_position" : 32,
      "original_start_line" : 257,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 663035458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : 257,
      "start_side" : "RIGHT",
      "updated_at" : "2021-05-19T10:41:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635119808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r636167047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/636167047"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> `diff --git i/src/net.h w/src/net.h`\r\n\r\nYes, net.cpp/net.h is terrible for having globally accessible variables that aren't annotated for thread safety. Being able to introduce races that the compiler doesn't catch is a bad thing... txmempool's a better example, though it's also missing some guards (cf #22003).\r\n\r\n> IMO annotating everything with `GUARDED_BY()`, just in case, would have a net-adverse effect on the code base.\r\n\r\n`GUARDED_BY` is always a \"just in case\" thing -- any time the code compiles correctly with `GUARDED_BY` it will also compile correctly without it -- the benefit is \"just in case\" someone forgets while modifying the code later. With a guard, the compiler will catch the mistake; without it, you have to hope someone reviewing the code remembers, or wait for some obscure bug to be noticed and reported.\r\n\r\nNot consistently guarding variables has an easily observable adverse affect on the code bas as a whole: it makes it hard to change code, because you're not sure when things might be safe to reuse in a different context. eg see https://github.com/bitcoin/bitcoin/pull/21061#discussion_r602283867\r\n\r\n>  it means having a mutex attached to every non-const global or class member variable, including private ones\r\n\r\nYes and no -- no, in that most classes don't need to manually manage locks, but should rather rely on whatever instantiates them to ensure the entire object is accessed safely; but for the ones that do, yes: every non-const, non-atomic member should be guarded (as should every class's non-const, non-atomic static members, since they're effectively globals themselves).",
      "commit_id" : "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "created_at" : "2021-05-20T14:37:12Z",
      "diff_hunk" : "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r636167047",
      "id" : 636167047,
      "in_reply_to_id" : 631895780,
      "line" : 262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNjE2NzA0Nw==",
      "original_commit_id" : "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "original_line" : 262,
      "original_position" : 32,
      "original_start_line" : 257,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 664469678,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
      "side" : "RIGHT",
      "start_line" : 257,
      "start_side" : "RIGHT",
      "updated_at" : "2021-05-20T14:37:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/636167047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
