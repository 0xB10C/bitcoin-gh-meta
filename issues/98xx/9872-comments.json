[
   {
      "body" : "I think it would be better to have the new code in `MultiChainBitcoinTestFramework` replace the existing code in `BitcoinTestFramework` instead of selectively overriding it, given that it seems to be backwards compatible. All you would have to do is add a new optional named argument to `split_network` and `setup_network` and interpret it in the backwards compatible way when it is not specified. I guess I don't see a reason to add code duplication and complexity with a new `MultiChainBitcoinTestFramework` class (even temporarily with the \"ultimate intention\" of merging it later).\r\n\r\nAlso I think I would prefer a more flexible and predictable mechanism for splitting the network than the `chains` argument provides. What about a `splits` argument that takes a list of indices into self.nodes where splits should be inserted into the network? E.g. if you specify `num_nodes=6` and `splits=[1,3]` then node 0 would be standalone, nodes 1-2 would be connected, and nodes 3-5 would be connected. Other advantages of this scheme beyond more flexibility is that I think it would be more explicit and simpler to understand and implement since it wouldn't involve floating point calculations to figure out what the splits look like.",
      "created_at" : "2017-02-27T17:22:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-282787952",
      "id" : 282787952,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
      "updated_at" : "2017-02-27T17:22:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282787952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "I tend to think that this is unnecessary (and is just adding complication to the qa codebase).  I find the existing `is_chain_split` stuff already confusing and relatively unused, basically because having to stop/restart nodes in order to change network topology is pretty clunky.\r\n\r\nMoreover I think your listsinceblock.py test in this PR is not actually testing what you want; after you reconnect the network there's no guarantee that node0 will actually download all 3 chains -- it might only download the longest chain.\r\n\r\nI think there are much easier and more robust ways to write the kind of listsinceblock test that you're going for; I've coded one up here using invalidateblock: https://github.com/sdaftuar/bitcoin/commit/0a10605b782c1b7997833e1a3644cb02a6c437da\r\n\r\nMy suggestion would be to just PR something like my proposed commit, and drop this MultiChain-test framework stuff.",
      "created_at" : "2017-02-27T19:35:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-282827275",
      "id" : 282827275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
      "updated_at" : "2017-02-27T19:35:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282827275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "@ryanofsky It's not backwards compatible with everything, which is why I wanted to temporarily put it aside, instead of fixing everything. I may be overlooking something but if you do the change you suggest, you'll see that fundraw does some funky stuff which I'm not sure how to interpret using the new method. I'll dig though. I like your suggestions about where to split the chain though. Will change to do that for sure.\r\n\r\n@sdaftuar The reason this PR exists is because I was asked to test 3+ chains in #9622 but realized I can't do this easily. The old set up is clunky, as you say, and even without using the 3+ chain functionality, this change would remove the dependency on 4 nodes.",
      "created_at" : "2017-02-27T20:56:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-282850673",
      "id" : 282850673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
      "updated_at" : "2017-02-27T21:08:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282850673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "@ryanofsky I ended up finding the cause for why `fundrawtransaction.py` failed, and removed the old framework, leaving only the new one in place. I still intend to change out the splitting part to use your suggested method.\r\n\r\nUnsquashed branch (pardon sloppy commit messages): https://github.com/kallewoof/bitcoin/commits/qa-multi-chain-support-unsquashed",
      "created_at" : "2017-02-28T01:52:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-282917011",
      "id" : 282917011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
      "updated_at" : "2017-02-28T01:52:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282917011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "@ryanofsky Switched to using splits array.",
      "created_at" : "2017-02-28T06:24:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-282953694",
      "id" : 282953694,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
      "updated_at" : "2017-02-28T06:24:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282953694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "> @sdaftuar The reason this PR exists is because I was asked to test 3+ chains in #9622 but realized I can't do this easily. The old set up is clunky, as you say, and even without using the 3+ chain functionality, this change would remove the dependency on 4 nodes.\r\n\r\nDid you look at the patch I proposed for implementing that 3-chain test?  I believe it is correct (unlike the test provided in this PR) and easier to understand.  As I mentioned before, there is no guarantee in your test that node0 will download all 3 chains, which defeats the point of the test!\r\n\r\nIn general I think using network topology to try to simulate the effect of a node receiving multiple chain forks is at best confusing to reason about, as it requires understanding nuances of block download logic in order to determine what blocks each node would actually download.\r\n\r\nAbsent any compelling use cases for this test framework change, I tend to NACK.",
      "created_at" : "2017-02-28T14:14:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283049542",
      "id" : 283049542,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
      "updated_at" : "2017-02-28T14:14:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283049542",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Yes, you guys should look at each others patches if you have not already. @sdaftuar, not sure if you have seen the newest changes to test_framework.py from @kallewoof:\r\n\r\nhttps://github.com/kallewoof/bitcoin/compare/6206252e5073c1cde2e313f2e5a3ca17582c5823...02647ff75b8ac1d46a9c9048176bccaebc90e9bc#diff-6a670fff9d11003cce8baa0518efd7a9\r\n\r\nI think this could be tidied up a little more, but that it makes nice and backwards compatible cleanup to the setup_network / split_network / sync_all code. I think it is good to move in the direction of making these methods actually useful, so more tests can call them instead of overriding and reimplementing them.",
      "created_at" : "2017-02-28T14:54:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283060427",
      "id" : 283060427,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
      "updated_at" : "2017-02-28T14:54:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283060427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
