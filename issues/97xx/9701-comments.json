[
   {
      "body" : "utACK 145b702",
      "created_at" : "2017-02-23T19:45:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9701#issuecomment-282099386",
      "id" : 282099386,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9701",
      "updated_at" : "2017-02-23T19:45:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282099386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r105198091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105198091"
         }
      },
      "body" : "I know this pre-dates your PR, but since you're changing the line, can you change this to not use input as a variable name. input is a built-in Python function. Perhaps `txin` is better?",
      "commit_id" : "45b060ef9d00f17e639c0e5d76500e5587bcc6d0",
      "created_at" : "2017-03-09T15:57:15Z",
      "diff_hunk" : "@@ -259,51 +249,31 @@ def test_unconfirmed_not_spendable(rbf_node, rbf_node_address):\n \n \n def test_bumpfee_metadata(rbf_node, dest_address):\n-    rbfid = rbf_node.sendtoaddress(dest_address, 0.00090000, \"comment value\", \"to value\")\n+    rbfid = rbf_node.sendtoaddress(dest_address, Decimal(\"0.00100000\"), \"comment value\", \"to value\")\n     bumped_tx = rbf_node.bumpfee(rbfid)\n     bumped_wtx = rbf_node.gettransaction(bumped_tx[\"txid\"])\n     assert_equal(bumped_wtx[\"comment\"], \"comment value\")\n     assert_equal(bumped_wtx[\"to\"], \"to value\")\n \n \n def test_locked_wallet_fails(rbf_node, dest_address):\n-    rbfid = create_fund_sign_send(rbf_node, {dest_address: 0.00090000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     rbf_node.walletlock()\n     assert_raises_message(JSONRPCException, \"Please enter the wallet passphrase with walletpassphrase first.\",\n                           rbf_node.bumpfee, rbfid)\n \n \n-def create_fund_sign_send(node, outputs):\n-    rawtx = node.createrawtransaction([], outputs)\n-    fundtx = node.fundrawtransaction(rawtx)\n-    signedtx = node.signrawtransaction(fundtx[\"hex\"])\n-    txid = node.sendrawtransaction(signedtx[\"hex\"])\n-    return txid\n-\n-\n-def spend_one_input(node, input_amount, outputs):\n-    input = dict(sequence=BIP125_SEQUENCE_NUMBER, **next(u for u in node.listunspent() if u[\"amount\"] == input_amount))\n-    rawtx = node.createrawtransaction([input], outputs)\n+def spend_one_input(node, dest_address):\n+    input = dict(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r105198091",
      "id" : 105198091,
      "original_commit_id" : "145b702e5a2e2f6cf8766e070e25ee9a24ee931d",
      "original_position" : 170,
      "path" : "qa/rpc-tests/bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 26065944,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701",
      "updated_at" : "2017-03-16T14:56:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105198091",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r105210760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105210760"
         }
      },
      "body" : "I see that you've tried to clarify what this assert is doing, but it's still pretty obscure to me. Why should the difference between the desired feerate and the actual feerate be at least 1000 satoshis/byte? Can you add a comment explaining?\r\n\r\nI also think that this inequality is more clearly expressed as actual_feerate >= desired_feerate + 1000 (ie the thing we're asserting is on the left side of the inequality).",
      "commit_id" : "45b060ef9d00f17e639c0e5d76500e5587bcc6d0",
      "created_at" : "2017-03-09T16:41:59Z",
      "diff_hunk" : "@@ -165,66 +165,56 @@ def test_bumpfee_with_descendant_fails(rbf_node, rbf_node_address, dest_address)\n \n def test_small_output_fails(rbf_node, dest_address):\n     # cannot bump fee with a too-small output\n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n-    rbf_node.bumpfee(rbfid, {\"totalFee\": 20000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    rbf_node.bumpfee(rbfid, {\"totalFee\": 50000})\n \n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n-    assert_raises_message(JSONRPCException, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 20001})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    assert_raises_message(JSONRPCException, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n \n def test_dust_to_fee(rbf_node, dest_address):\n     # check that if output is reduced to dust, it will be converted to fee\n-    # the bumped tx sets fee=9900, but it converts to 10,000\n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n+    # the bumped tx sets fee=49,900, but it converts to 50,000\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     fulltx = rbf_node.getrawtransaction(rbfid, 1)\n-    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 19900})\n+    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 49900})\n     full_bumped_tx = rbf_node.getrawtransaction(bumped_tx[\"txid\"], 1)\n-    assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00020000\"))\n+    assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00050000\"))\n     assert_equal(len(fulltx[\"vout\"]), 2)\n     assert_equal(len(full_bumped_tx[\"vout\"]), 1)  #change output is eliminated\n \n \n def test_settxfee(rbf_node, dest_address):\n     # check that bumpfee reacts correctly to the use of settxfee (paytxfee)\n-    # increase feerate by 2.5x, test that fee increased at least 2x\n-    rbf_node.settxfee(Decimal(\"0.00001000\"))\n-    rbfid = create_fund_sign_send(rbf_node, {dest_address: 0.00090000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     rbftx = rbf_node.gettransaction(rbfid)\n-    rbf_node.settxfee(Decimal(\"0.00002500\"))\n+    feerate = Decimal(\"0.00025000\")\n+    rbf_node.settxfee(feerate)\n     bumped_tx = rbf_node.bumpfee(rbfid)\n-    assert bumped_tx[\"fee\"] > 2 * abs(rbftx[\"fee\"])\n+    bumped_len = len(rbf_node.getrawtransaction(bumped_tx[\"txid\"])) // 2\n+    assert_greater_than(Decimal(\"0.00001000\"), abs(feerate - bumped_tx[\"fee\"] * 1000 / bumped_len))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r105210760",
      "id" : 105210760,
      "original_commit_id" : "145b702e5a2e2f6cf8766e070e25ee9a24ee931d",
      "original_position" : 105,
      "path" : "qa/rpc-tests/bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 26065944,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701",
      "updated_at" : "2017-03-16T14:56:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105210760",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r105211629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105211629"
         }
      },
      "body" : "I think this is more clearly expressed as:\r\n\r\n`bumped_len = rbf_node.getrawtransaction(bumped_tx[\"txid\"], True)[\"size\"]` (ie not relying on size being the length of the serialized string // 2)",
      "commit_id" : "45b060ef9d00f17e639c0e5d76500e5587bcc6d0",
      "created_at" : "2017-03-09T16:45:03Z",
      "diff_hunk" : "@@ -165,66 +165,56 @@ def test_bumpfee_with_descendant_fails(rbf_node, rbf_node_address, dest_address)\n \n def test_small_output_fails(rbf_node, dest_address):\n     # cannot bump fee with a too-small output\n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n-    rbf_node.bumpfee(rbfid, {\"totalFee\": 20000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    rbf_node.bumpfee(rbfid, {\"totalFee\": 50000})\n \n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n-    assert_raises_message(JSONRPCException, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 20001})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    assert_raises_message(JSONRPCException, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n \n def test_dust_to_fee(rbf_node, dest_address):\n     # check that if output is reduced to dust, it will be converted to fee\n-    # the bumped tx sets fee=9900, but it converts to 10,000\n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n+    # the bumped tx sets fee=49,900, but it converts to 50,000\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     fulltx = rbf_node.getrawtransaction(rbfid, 1)\n-    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 19900})\n+    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 49900})\n     full_bumped_tx = rbf_node.getrawtransaction(bumped_tx[\"txid\"], 1)\n-    assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00020000\"))\n+    assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00050000\"))\n     assert_equal(len(fulltx[\"vout\"]), 2)\n     assert_equal(len(full_bumped_tx[\"vout\"]), 1)  #change output is eliminated\n \n \n def test_settxfee(rbf_node, dest_address):\n     # check that bumpfee reacts correctly to the use of settxfee (paytxfee)\n-    # increase feerate by 2.5x, test that fee increased at least 2x\n-    rbf_node.settxfee(Decimal(\"0.00001000\"))\n-    rbfid = create_fund_sign_send(rbf_node, {dest_address: 0.00090000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     rbftx = rbf_node.gettransaction(rbfid)\n-    rbf_node.settxfee(Decimal(\"0.00002500\"))\n+    feerate = Decimal(\"0.00025000\")\n+    rbf_node.settxfee(feerate)\n     bumped_tx = rbf_node.bumpfee(rbfid)\n-    assert bumped_tx[\"fee\"] > 2 * abs(rbftx[\"fee\"])\n+    bumped_len = len(rbf_node.getrawtransaction(bumped_tx[\"txid\"])) // 2",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r105211629",
      "id" : 105211629,
      "original_commit_id" : "145b702e5a2e2f6cf8766e070e25ee9a24ee931d",
      "original_position" : 104,
      "path" : "qa/rpc-tests/bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 26065944,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701",
      "updated_at" : "2017-03-16T14:56:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105211629",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "utACK 145b702. Needs rebase.",
      "created_at" : "2017-03-12T12:05:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9701#issuecomment-285940248",
      "id" : 285940248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9701",
      "updated_at" : "2017-03-12T12:05:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/285940248",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r105555908"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105555908"
         }
      },
      "body" : "There is a `count_bytes` helper function in util, that also checks that the bytes are hex encoded.",
      "commit_id" : "45b060ef9d00f17e639c0e5d76500e5587bcc6d0",
      "created_at" : "2017-03-12T12:10:36Z",
      "diff_hunk" : "@@ -165,66 +165,56 @@ def test_bumpfee_with_descendant_fails(rbf_node, rbf_node_address, dest_address)\n \n def test_small_output_fails(rbf_node, dest_address):\n     # cannot bump fee with a too-small output\n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n-    rbf_node.bumpfee(rbfid, {\"totalFee\": 20000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    rbf_node.bumpfee(rbfid, {\"totalFee\": 50000})\n \n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n-    assert_raises_message(JSONRPCException, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 20001})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    assert_raises_message(JSONRPCException, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n \n def test_dust_to_fee(rbf_node, dest_address):\n     # check that if output is reduced to dust, it will be converted to fee\n-    # the bumped tx sets fee=9900, but it converts to 10,000\n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n+    # the bumped tx sets fee=49,900, but it converts to 50,000\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     fulltx = rbf_node.getrawtransaction(rbfid, 1)\n-    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 19900})\n+    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 49900})\n     full_bumped_tx = rbf_node.getrawtransaction(bumped_tx[\"txid\"], 1)\n-    assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00020000\"))\n+    assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00050000\"))\n     assert_equal(len(fulltx[\"vout\"]), 2)\n     assert_equal(len(full_bumped_tx[\"vout\"]), 1)  #change output is eliminated\n \n \n def test_settxfee(rbf_node, dest_address):\n     # check that bumpfee reacts correctly to the use of settxfee (paytxfee)\n-    # increase feerate by 2.5x, test that fee increased at least 2x\n-    rbf_node.settxfee(Decimal(\"0.00001000\"))\n-    rbfid = create_fund_sign_send(rbf_node, {dest_address: 0.00090000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     rbftx = rbf_node.gettransaction(rbfid)\n-    rbf_node.settxfee(Decimal(\"0.00002500\"))\n+    feerate = Decimal(\"0.00025000\")\n+    rbf_node.settxfee(feerate)\n     bumped_tx = rbf_node.bumpfee(rbfid)\n-    assert bumped_tx[\"fee\"] > 2 * abs(rbftx[\"fee\"])\n+    bumped_len = len(rbf_node.getrawtransaction(bumped_tx[\"txid\"])) // 2",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r105555908",
      "id" : 105555908,
      "original_commit_id" : "145b702e5a2e2f6cf8766e070e25ee9a24ee931d",
      "original_position" : 104,
      "path" : "qa/rpc-tests/bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 26443532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701",
      "updated_at" : "2017-03-16T14:56:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105555908",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "utACK, needs rebase.",
      "created_at" : "2017-03-14T11:09:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9701#issuecomment-286390225",
      "id" : 286390225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9701",
      "updated_at" : "2017-03-14T11:09:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/286390225",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r106429031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106429031"
         }
      },
      "body" : "Thanks, switched to count_bytes in 779ea9c214c1cf508efea59b8ebaaec424fdac44.",
      "commit_id" : "45b060ef9d00f17e639c0e5d76500e5587bcc6d0",
      "created_at" : "2017-03-16T14:22:07Z",
      "diff_hunk" : "@@ -165,66 +165,56 @@ def test_bumpfee_with_descendant_fails(rbf_node, rbf_node_address, dest_address)\n \n def test_small_output_fails(rbf_node, dest_address):\n     # cannot bump fee with a too-small output\n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n-    rbf_node.bumpfee(rbfid, {\"totalFee\": 20000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    rbf_node.bumpfee(rbfid, {\"totalFee\": 50000})\n \n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n-    assert_raises_message(JSONRPCException, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 20001})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    assert_raises_message(JSONRPCException, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n \n def test_dust_to_fee(rbf_node, dest_address):\n     # check that if output is reduced to dust, it will be converted to fee\n-    # the bumped tx sets fee=9900, but it converts to 10,000\n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n+    # the bumped tx sets fee=49,900, but it converts to 50,000\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     fulltx = rbf_node.getrawtransaction(rbfid, 1)\n-    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 19900})\n+    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 49900})\n     full_bumped_tx = rbf_node.getrawtransaction(bumped_tx[\"txid\"], 1)\n-    assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00020000\"))\n+    assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00050000\"))\n     assert_equal(len(fulltx[\"vout\"]), 2)\n     assert_equal(len(full_bumped_tx[\"vout\"]), 1)  #change output is eliminated\n \n \n def test_settxfee(rbf_node, dest_address):\n     # check that bumpfee reacts correctly to the use of settxfee (paytxfee)\n-    # increase feerate by 2.5x, test that fee increased at least 2x\n-    rbf_node.settxfee(Decimal(\"0.00001000\"))\n-    rbfid = create_fund_sign_send(rbf_node, {dest_address: 0.00090000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     rbftx = rbf_node.gettransaction(rbfid)\n-    rbf_node.settxfee(Decimal(\"0.00002500\"))\n+    feerate = Decimal(\"0.00025000\")\n+    rbf_node.settxfee(feerate)\n     bumped_tx = rbf_node.bumpfee(rbfid)\n-    assert bumped_tx[\"fee\"] > 2 * abs(rbftx[\"fee\"])\n+    bumped_len = len(rbf_node.getrawtransaction(bumped_tx[\"txid\"])) // 2",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r106429031",
      "id" : 106429031,
      "original_commit_id" : "145b702e5a2e2f6cf8766e070e25ee9a24ee931d",
      "original_position" : 104,
      "path" : "qa/rpc-tests/bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 27350052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701",
      "updated_at" : "2017-03-16T15:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106429031",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r106429060"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106429060"
         }
      },
      "body" : "It's checking that difference between requested and actual feerate is less than 1000, not greater than 1000. Replaced 1000 with `epsilon` variable to maybe make comparison clearer in 779ea9c214c1cf508efea59b8ebaaec424fdac44.",
      "commit_id" : "45b060ef9d00f17e639c0e5d76500e5587bcc6d0",
      "created_at" : "2017-03-16T14:22:12Z",
      "diff_hunk" : "@@ -165,66 +165,56 @@ def test_bumpfee_with_descendant_fails(rbf_node, rbf_node_address, dest_address)\n \n def test_small_output_fails(rbf_node, dest_address):\n     # cannot bump fee with a too-small output\n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n-    rbf_node.bumpfee(rbfid, {\"totalFee\": 20000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    rbf_node.bumpfee(rbfid, {\"totalFee\": 50000})\n \n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n-    assert_raises_message(JSONRPCException, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 20001})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    assert_raises_message(JSONRPCException, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n \n def test_dust_to_fee(rbf_node, dest_address):\n     # check that if output is reduced to dust, it will be converted to fee\n-    # the bumped tx sets fee=9900, but it converts to 10,000\n-    rbfid = spend_one_input(rbf_node,\n-                            Decimal(\"0.00100000\"),\n-                            {dest_address: 0.00080000,\n-                             get_change_address(rbf_node): Decimal(\"0.00010000\")})\n+    # the bumped tx sets fee=49,900, but it converts to 50,000\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     fulltx = rbf_node.getrawtransaction(rbfid, 1)\n-    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 19900})\n+    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 49900})\n     full_bumped_tx = rbf_node.getrawtransaction(bumped_tx[\"txid\"], 1)\n-    assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00020000\"))\n+    assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00050000\"))\n     assert_equal(len(fulltx[\"vout\"]), 2)\n     assert_equal(len(full_bumped_tx[\"vout\"]), 1)  #change output is eliminated\n \n \n def test_settxfee(rbf_node, dest_address):\n     # check that bumpfee reacts correctly to the use of settxfee (paytxfee)\n-    # increase feerate by 2.5x, test that fee increased at least 2x\n-    rbf_node.settxfee(Decimal(\"0.00001000\"))\n-    rbfid = create_fund_sign_send(rbf_node, {dest_address: 0.00090000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     rbftx = rbf_node.gettransaction(rbfid)\n-    rbf_node.settxfee(Decimal(\"0.00002500\"))\n+    feerate = Decimal(\"0.00025000\")\n+    rbf_node.settxfee(feerate)\n     bumped_tx = rbf_node.bumpfee(rbfid)\n-    assert bumped_tx[\"fee\"] > 2 * abs(rbftx[\"fee\"])\n+    bumped_len = len(rbf_node.getrawtransaction(bumped_tx[\"txid\"])) // 2\n+    assert_greater_than(Decimal(\"0.00001000\"), abs(feerate - bumped_tx[\"fee\"] * 1000 / bumped_len))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r106429060",
      "id" : 106429060,
      "original_commit_id" : "145b702e5a2e2f6cf8766e070e25ee9a24ee931d",
      "original_position" : 105,
      "path" : "qa/rpc-tests/bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 27350052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701",
      "updated_at" : "2017-03-16T15:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106429060",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r106429083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106429083"
         }
      },
      "body" : "Renamed input->tx_input in 8ecec5f75a8b527194275835cbc0177a6ae99b3a.",
      "commit_id" : "45b060ef9d00f17e639c0e5d76500e5587bcc6d0",
      "created_at" : "2017-03-16T14:22:18Z",
      "diff_hunk" : "@@ -259,51 +249,31 @@ def test_unconfirmed_not_spendable(rbf_node, rbf_node_address):\n \n \n def test_bumpfee_metadata(rbf_node, dest_address):\n-    rbfid = rbf_node.sendtoaddress(dest_address, 0.00090000, \"comment value\", \"to value\")\n+    rbfid = rbf_node.sendtoaddress(dest_address, Decimal(\"0.00100000\"), \"comment value\", \"to value\")\n     bumped_tx = rbf_node.bumpfee(rbfid)\n     bumped_wtx = rbf_node.gettransaction(bumped_tx[\"txid\"])\n     assert_equal(bumped_wtx[\"comment\"], \"comment value\")\n     assert_equal(bumped_wtx[\"to\"], \"to value\")\n \n \n def test_locked_wallet_fails(rbf_node, dest_address):\n-    rbfid = create_fund_sign_send(rbf_node, {dest_address: 0.00090000})\n+    rbfid = spend_one_input(rbf_node, dest_address)\n     rbf_node.walletlock()\n     assert_raises_message(JSONRPCException, \"Please enter the wallet passphrase with walletpassphrase first.\",\n                           rbf_node.bumpfee, rbfid)\n \n \n-def create_fund_sign_send(node, outputs):\n-    rawtx = node.createrawtransaction([], outputs)\n-    fundtx = node.fundrawtransaction(rawtx)\n-    signedtx = node.signrawtransaction(fundtx[\"hex\"])\n-    txid = node.sendrawtransaction(signedtx[\"hex\"])\n-    return txid\n-\n-\n-def spend_one_input(node, input_amount, outputs):\n-    input = dict(sequence=BIP125_SEQUENCE_NUMBER, **next(u for u in node.listunspent() if u[\"amount\"] == input_amount))\n-    rawtx = node.createrawtransaction([input], outputs)\n+def spend_one_input(node, dest_address):\n+    input = dict(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9701#discussion_r106429083",
      "id" : 106429083,
      "original_commit_id" : "145b702e5a2e2f6cf8766e070e25ee9a24ee931d",
      "original_position" : 170,
      "path" : "qa/rpc-tests/bumpfee.py",
      "position" : null,
      "pull_request_review_id" : 27350052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9701",
      "updated_at" : "2017-03-16T15:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106429083",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
