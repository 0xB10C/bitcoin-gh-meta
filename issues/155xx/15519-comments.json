[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15649](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15649.html) (Add ChaCha20Poly1305@Bitcoin AEAD by jonasschnelli)\n* [#14047](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14047.html) (Add HKDF_HMAC256_L32 and method to negate a private key by jonasschnelli)\n* [#14032](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14032.html) (Add p2p layer encryption with ECDH/ChaCha20Poly1305 by jonasschnelli)\n* [#10102](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10102.html) ([experimental] Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-03-03T22:44:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15519#issuecomment-469072967",
      "id" : 469072967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15519",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTA3Mjk2Nw==",
      "updated_at" : "2019-03-24T22:47:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469072967",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Intentional unsigned wraparound is triggered in `crypto/poly1305.cpp` (on at least L122 and L124). That is fine but should be documented in `test/sanitizer_suppressions/ubsan` to make the `-fsanitize=integer` Travis job happy :-)",
      "created_at" : "2019-03-04T21:20:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15519#issuecomment-469426052",
      "id" : 469426052,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15519",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTQyNjA1Mg==",
      "updated_at" : "2019-03-04T21:21:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469426052",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Benchmark done on a aarch64 (`RK3328 Quad-Core ARM Cortex A53 64-Bit`)\r\n\r\n```\r\nCHACHA20_1MB, 5, 340, 13.3704, 0.00772624, 0.00806671, 0.00775259\r\nCHACHA20_256BYTES, 5, 250000, 2.41802, 1.92206e-06, 1.95887e-06, 1.92964e-06\r\nCHACHA20_64BYTES, 5, 500000, 1.28993, 5.07247e-07, 5.26875e-07, 5.14802e-07\r\nHASH_1MB, 5, 340, 22.5945, 0.0128931, 0.0135617, 0.0132931\r\nHASH_256BYTES, 5, 250000, 6.84513, 5.43544e-06, 5.54961e-06, 5.45136e-06\r\nHASH_64BYTES, 5, 500000, 7.47419, 2.94502e-06, 3.04259e-06, 2.99531e-06\r\nPOLY1305_1MB, 5, 340, 10.2145, 0.00591661, 0.00609435, 0.00601109\r\nPOLY1305_256BYTES, 5, 250000, 1.88446, 1.48188e-06, 1.52889e-06, 1.52119e-06\r\nPOLY1305_64BYTES, 5, 500000, 1.08101, 4.25452e-07, 4.43012e-07, 4.29685e-07\r\n```\r\n\r\nThis may be interpreted as a possible performance increase in processing packets with ChaCha2Poly1305 versus Hash256 as checksum (especially small messages).",
      "created_at" : "2019-03-05T14:43:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15519#issuecomment-469705289",
      "id" : 469705289,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15519",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTcwNTI4OQ==",
      "updated_at" : "2019-03-05T14:43:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469705289",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Benchmark on a Intel i7 with SSE4  i7-8700 CPU @ 3.20GHz)\r\n\r\n```\r\nCHACHA20_1MB, 5, 340, 2.42871, 0.00142497, 0.0014349, 0.00142748\r\nCHACHA20_256BYTES, 5, 250000, 0.443971, 3.53501e-07, 3.56836e-07, 3.54826e-07\r\nCHACHA20_64BYTES, 5, 500000, 0.235031, 9.37462e-08, 9.42958e-08, 9.39654e-08\r\nHASH_1MB, 5, 340, 3.98642, 0.00233798, 0.00234913, 0.00234636\r\nHASH_256BYTES, 5, 250000, 1.12901, 8.97008e-07, 9.10387e-07, 9.03194e-07\r\nHASH_64BYTES, 5, 500000, 1.18437, 4.70553e-07, 4.77644e-07, 4.72031e-07\r\nPOLY1305_1MB, 5, 340, 0.974462, 0.000562465, 0.000591879, 0.000565398\r\nPOLY1305_256BYTES, 5, 250000, 0.187587, 1.48138e-07, 1.51869e-07, 1.49319e-07\r\nPOLY1305_64BYTES, 5, 500000, 0.117305, 4.6148e-08, 4.74575e-08, 4.69618e-08\r\n```",
      "created_at" : "2019-03-05T14:44:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15519#issuecomment-469705687",
      "id" : 469705687,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15519",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTcwNTY4Nw==",
      "updated_at" : "2019-03-05T14:44:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469705687",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Intentional unsigned wraparound is triggered in crypto/poly1305.cpp\r\n\r\nRightÃ¢ÂÂsince when is unsigned integer wraparound a problem? I thought there was only undefined behavior in signed wraparound.",
      "created_at" : "2019-03-07T18:15:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15519#issuecomment-470635936",
      "id" : 470635936,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15519",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MDYzNTkzNg==",
      "updated_at" : "2019-03-07T18:15:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470635936",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, unsigned overflow is well-defined. Is -fsanitize=undefined enabling that by default? I don't see anything in our configuration turning it on specifically.",
      "created_at" : "2019-03-07T18:31:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15519#issuecomment-470641588",
      "id" : 470641588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15519",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MDY0MTU4OA==",
      "updated_at" : "2019-03-07T18:31:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470641588",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Unsigned integer wraparound is perfectly well-defined. Intentional unsigned integer wraparound is not problematic at all. Is anyone claiming otherwise? :-)",
      "created_at" : "2019-03-07T20:10:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15519#issuecomment-470675667",
      "id" : 470675667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15519",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MDY3NTY2Nw==",
      "updated_at" : "2019-03-07T20:10:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470675667",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift Do you have any idea why the sanitizer catches it in that case?",
      "created_at" : "2019-03-07T20:12:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15519#issuecomment-470676362",
      "id" : 470676362,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15519",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MDY3NjM2Mg==",
      "updated_at" : "2019-03-07T20:12:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470676362",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa Yes, it is `-fsanitize=integer` catching it (or more specifically `-fsanitize=unsigned-integer-overflow` which is enabled as part of `-fsanitize=integer`):\r\n\r\n> `-fsanitize=unsigned-integer-overflow`: Unsigned integer overflow, where the result of an unsigned integer computation cannot be represented in its type. Unlike signed integer overflow, this is not undefined behavior, but it is often unintentional. \r\n\r\nAn argument to keep it enabled in Travis it that it makes people aware of *unintentional*  unsigned integer wraparound (a common source of bugs, but obviously _not_ UB).\r\n\r\n*Intentional* unsigned integer wraparounds (such as in hashing code) can simply be documented as such by adding a line to `test/sanitizer_suppressions/ubsan`.",
      "created_at" : "2019-03-07T20:22:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15519#issuecomment-470679392",
      "id" : 470679392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15519",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MDY3OTM5Mg==",
      "updated_at" : "2019-03-07T20:25:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470679392",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
