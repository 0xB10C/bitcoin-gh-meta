[
   {
      "author_association" : "MEMBER",
      "body" : "Could you please add a benchmark to `./src/bench/checkblock.cpp`, so it is easier to see how much this improves?",
      "created_at" : "2018-05-02T12:34:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#issuecomment-385962450",
      "id" : 385962450,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13151",
      "updated_at" : "2018-05-02T12:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385962450",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Sure, though I'm not sure how to do that; none of the benches actually uses `ReadBlockFromDisk`, I would have to set up a fake block index or such.\r\n\r\n(I also don't think it will work on `block413567` as-is because it has no magic/size header, and is not a file on disk, though it's easy enough to write a temporary file of course). [When doing this from memory there's effectively nothing to benchmark, too.]",
      "created_at" : "2018-05-02T12:38:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#issuecomment-385963284",
      "id" : 385963284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13151",
      "updated_at" : "2018-05-02T12:53:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385963284",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185505648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185505648"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just to throw out the idea, `mmap` wouldn't pay off right?",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T14:00:40Z",
      "diff_hunk" : "@@ -1125,6 +1125,47 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n     return true;\n }\n \n+bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& messageStart)\n+{\n+    // Open history file to read\n+    CDiskBlockPos hpos = pos;\n+    hpos.nPos -= 8; // Seek back 8 bytes to validate header\n+    CAutoFile filein(OpenBlockFile(hpos, true), SER_DISK, CLIENT_VERSION);\n+    if (filein.IsNull()) {\n+        return error(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());\n+    }\n+\n+    CMessageHeader::MessageStartChars msg_start_in;\n+    unsigned int nSize;\n+    filein >> msg_start_in >> nSize;\n+\n+    if (memcmp(msg_start_in, messageStart, CMessageHeader::MESSAGE_START_SIZE)) {\n+        return error(\"%s: Block magic mismatch for %s: %s versus expected %s\", __func__, pos.ToString(),\n+                HexStr(msg_start_in, msg_start_in + CMessageHeader::MESSAGE_START_SIZE),\n+                HexStr(messageStart, messageStart + CMessageHeader::MESSAGE_START_SIZE));\n+    }\n+\n+    try {\n+        block.resize(nSize);\n+        filein.read((char*)block.data(), nSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185505648",
      "id" : 185505648,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 26,
      "path" : "src/validation.cpp",
      "position" : 26,
      "pull_request_review_id" : 116907566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T14:03:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185505648",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185507798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185507798"
         }
      },
      "author_association" : "OWNER",
      "body" : "I don't think that's a win here, as the entire block is read consecutively - could even be slower as it'd have to create and destroy the mapping. Also it's not portable.",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T14:07:09Z",
      "diff_hunk" : "@@ -1125,6 +1125,47 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n     return true;\n }\n \n+bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& messageStart)\n+{\n+    // Open history file to read\n+    CDiskBlockPos hpos = pos;\n+    hpos.nPos -= 8; // Seek back 8 bytes to validate header\n+    CAutoFile filein(OpenBlockFile(hpos, true), SER_DISK, CLIENT_VERSION);\n+    if (filein.IsNull()) {\n+        return error(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());\n+    }\n+\n+    CMessageHeader::MessageStartChars msg_start_in;\n+    unsigned int nSize;\n+    filein >> msg_start_in >> nSize;\n+\n+    if (memcmp(msg_start_in, messageStart, CMessageHeader::MESSAGE_START_SIZE)) {\n+        return error(\"%s: Block magic mismatch for %s: %s versus expected %s\", __func__, pos.ToString(),\n+                HexStr(msg_start_in, msg_start_in + CMessageHeader::MESSAGE_START_SIZE),\n+                HexStr(messageStart, messageStart + CMessageHeader::MESSAGE_START_SIZE));\n+    }\n+\n+    try {\n+        block.resize(nSize);\n+        filein.read((char*)block.data(), nSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185507798",
      "id" : 185507798,
      "in_reply_to_id" : 185505648,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 26,
      "path" : "src/validation.cpp",
      "position" : 26,
      "pull_request_review_id" : 116910324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T14:13:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185507798",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185513478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185513478"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't this compare against the serialization flags of the block on disk? Currently you are assuming that all blocks are serialized as witness blocks on disk, but this is not true for all \"early\" blocks. ",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T14:23:43Z",
      "diff_hunk" : "@@ -1142,60 +1143,71 @@ void static ProcessGetBlockData(CNode* pfrom, const Consensus::Params& consensus\n         std::shared_ptr<const CBlock> pblock;\n         if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n             pblock = a_recent_block;\n+        } else if (inv.type == MSG_WITNESS_BLOCK) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185513478",
      "id" : 185513478,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 19,
      "path" : "src/net_processing.cpp",
      "position" : 19,
      "pull_request_review_id" : 116917399,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T14:36:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185513478",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Would be nice to see how much the additional savings are on top of #13098.",
      "created_at" : "2018-05-02T14:24:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#issuecomment-385995721",
      "id" : 385995721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13151",
      "updated_at" : "2018-05-02T14:24:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385995721",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> Concept ACK. Would be nice to see how much the additional savings are on top of #13098.\r\n\r\nAt least it's a lot simpler.",
      "created_at" : "2018-05-02T14:28:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#issuecomment-385997120",
      "id" : 385997120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13151",
      "updated_at" : "2018-05-02T14:28:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385997120",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185516723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185516723"
         }
      },
      "author_association" : "OWNER",
      "body" : "Yes I'm not convinced this logic is correct. It seems to work, though, even for the initial blocks.\r\n\r\nEdit: What is the operation to convert from a non-witness block to witness block with no witnesses? I suppose this could still be done without a full round-trip?",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T14:32:02Z",
      "diff_hunk" : "@@ -1142,60 +1143,71 @@ void static ProcessGetBlockData(CNode* pfrom, const Consensus::Params& consensus\n         std::shared_ptr<const CBlock> pblock;\n         if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n             pblock = a_recent_block;\n+        } else if (inv.type == MSG_WITNESS_BLOCK) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185516723",
      "id" : 185516723,
      "in_reply_to_id" : 185513478,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 19,
      "path" : "src/net_processing.cpp",
      "position" : 19,
      "pull_request_review_id" : 116921330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T14:36:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185516723",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185531193"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185531193"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I guess the only thing required would be to squeeze in the 0x0001 (\"marker\"+\"flag\"). This is identical to the serialization when calculating the hash (see https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#transaction-id)",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T15:08:50Z",
      "diff_hunk" : "@@ -1142,60 +1143,71 @@ void static ProcessGetBlockData(CNode* pfrom, const Consensus::Params& consensus\n         std::shared_ptr<const CBlock> pblock;\n         if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n             pblock = a_recent_block;\n+        } else if (inv.type == MSG_WITNESS_BLOCK) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185531193",
      "id" : 185531193,
      "in_reply_to_id" : 185513478,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 19,
      "path" : "src/net_processing.cpp",
      "position" : 19,
      "pull_request_review_id" : 116938686,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T15:08:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185531193",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185553215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185553215"
         }
      },
      "author_association" : "OWNER",
      "body" : "@laanwj It's always correct to give the raw blocks we store to peers that ask for witnesses (even if the block does not have a witness).\n\nConverting extended format to basic format is a lot more complicated. You could have a special CTransaction which skips the witness fields instead of reading/deserializing them, but I don't see how to do it without going through some form of serialization code. ",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T16:12:15Z",
      "diff_hunk" : "@@ -1142,60 +1143,71 @@ void static ProcessGetBlockData(CNode* pfrom, const Consensus::Params& consensus\n         std::shared_ptr<const CBlock> pblock;\n         if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n             pblock = a_recent_block;\n+        } else if (inv.type == MSG_WITNESS_BLOCK) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185553215",
      "id" : 185553215,
      "in_reply_to_id" : 185513478,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 19,
      "path" : "src/net_processing.cpp",
      "position" : 19,
      "pull_request_review_id" : 116965809,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T16:12:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185553215",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185556438"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185556438"
         }
      },
      "author_association" : "OWNER",
      "body" : "@sipa Thanks.\r\n\r\n> Converting extended format to basic format is a lot more complicated. You could have a special CTransaction which skips the witness fields instead of reading/deserializing them, but I don't see how to do it without going through some form of serialization code.\r\n\r\nRight, that case should fall back to deserialization->serialization right now. I don't think we can do much better there. Not sure it's even worth optimizing, there won't be many new clients being synced with pre-segwit versions.",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T16:22:47Z",
      "diff_hunk" : "@@ -1142,60 +1143,71 @@ void static ProcessGetBlockData(CNode* pfrom, const Consensus::Params& consensus\n         std::shared_ptr<const CBlock> pblock;\n         if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n             pblock = a_recent_block;\n+        } else if (inv.type == MSG_WITNESS_BLOCK) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185556438",
      "id" : 185556438,
      "in_reply_to_id" : 185513478,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 19,
      "path" : "src/net_processing.cpp",
      "position" : 19,
      "pull_request_review_id" : 116969819,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T16:22:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185556438",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> Couldn't we serve corrupted blocks?\r\n\r\nYes, that's a possibility, though only if the underlying storage is corrupted. I've posited the idea to add a CRC32C to the on-disk blocks at some point (which is quick to verify, especially with specialized instructions, and should protect against accidental corruptions), but that's quite an invasive change. It's something that could be done later.\r\n\r\nThe only option to verify with the current information would be to do a Merkle tree check - which could be done without deserialization but it's not pretty... (and a serious overhead SHA256-hashing)",
      "created_at" : "2018-05-02T16:25:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#issuecomment-386037456",
      "id" : 386037456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13151",
      "updated_at" : "2018-05-02T16:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386037456",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The only option to verify with the current information would be to do a Merkle tree check\r\n\r\nI don't see that we currently do this, so it wouldn't make anything worse here.",
      "created_at" : "2018-05-02T16:46:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#issuecomment-386043952",
      "id" : 386043952,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13151",
      "updated_at" : "2018-05-02T16:46:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386043952",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think serving a corrupted block if our state is corrupted is fine, the peer will just disconnect us and go get the block from someone else, seems pretty harmless!\r\n\r\nThis is a much smaller change than I was expecting-- in particular I forgot there was a size, light review ACK. ",
      "created_at" : "2018-05-02T17:53:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#issuecomment-386064649",
      "id" : 386064649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13151",
      "updated_at" : "2018-05-02T17:53:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386064649",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185618019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185618019"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Probably want to check the size is sane before we do this.",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T19:49:45Z",
      "diff_hunk" : "@@ -1125,6 +1125,47 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n     return true;\n }\n \n+bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& messageStart)\n+{\n+    // Open history file to read\n+    CDiskBlockPos hpos = pos;\n+    hpos.nPos -= 8; // Seek back 8 bytes to validate header\n+    CAutoFile filein(OpenBlockFile(hpos, true), SER_DISK, CLIENT_VERSION);\n+    if (filein.IsNull()) {\n+        return error(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());\n+    }\n+\n+    CMessageHeader::MessageStartChars msg_start_in;\n+    unsigned int nSize;\n+    filein >> msg_start_in >> nSize;\n+\n+    if (memcmp(msg_start_in, messageStart, CMessageHeader::MESSAGE_START_SIZE)) {\n+        return error(\"%s: Block magic mismatch for %s: %s versus expected %s\", __func__, pos.ToString(),\n+                HexStr(msg_start_in, msg_start_in + CMessageHeader::MESSAGE_START_SIZE),\n+                HexStr(messageStart, messageStart + CMessageHeader::MESSAGE_START_SIZE));\n+    }\n+\n+    try {\n+        block.resize(nSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185618019",
      "id" : 185618019,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 25,
      "path" : "src/validation.cpp",
      "position" : 25,
      "pull_request_review_id" : 117043685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T19:49:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185618019",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185626068"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185626068"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should probably remove this debug logging",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T20:20:13Z",
      "diff_hunk" : "@@ -1142,60 +1143,71 @@ void static ProcessGetBlockData(CNode* pfrom, const Consensus::Params& consensus\n         std::shared_ptr<const CBlock> pblock;\n         if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n             pblock = a_recent_block;\n+        } else if (inv.type == MSG_WITNESS_BLOCK) {\n+            // Fast-path: in this case it is possible to serve the block directly from disk,\n+            // as the network format matches the format on disk\n+            LogPrintf(\"debug: Serving raw block directly from disk: %s\\n\", pindex->ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185626068",
      "id" : 185626068,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 22,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 117053821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T20:25:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185626068",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185627336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185627336"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Leaving out the less common edge case (non-witness peers) seems fine for now.",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T20:24:19Z",
      "diff_hunk" : "@@ -1142,60 +1143,71 @@ void static ProcessGetBlockData(CNode* pfrom, const Consensus::Params& consensus\n         std::shared_ptr<const CBlock> pblock;\n         if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n             pblock = a_recent_block;\n+        } else if (inv.type == MSG_WITNESS_BLOCK) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185627336",
      "id" : 185627336,
      "in_reply_to_id" : 185513478,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 19,
      "path" : "src/net_processing.cpp",
      "position" : 19,
      "pull_request_review_id" : 117053821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T20:25:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185627336",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185700387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185700387"
         }
      },
      "author_association" : "OWNER",
      "body" : "Yes, definitely. I added it while WIP so that people testing this can be sure that the code actually triggers and they're testing the right thing.",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-03T05:41:25Z",
      "diff_hunk" : "@@ -1142,60 +1143,71 @@ void static ProcessGetBlockData(CNode* pfrom, const Consensus::Params& consensus\n         std::shared_ptr<const CBlock> pblock;\n         if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n             pblock = a_recent_block;\n+        } else if (inv.type == MSG_WITNESS_BLOCK) {\n+            // Fast-path: in this case it is possible to serve the block directly from disk,\n+            // as the network format matches the format on disk\n+            LogPrintf(\"debug: Serving raw block directly from disk: %s\\n\", pindex->ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185700387",
      "id" : 185700387,
      "in_reply_to_id" : 185626068,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 22,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 117140984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-03T05:41:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185700387",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185700508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185700508"
         }
      },
      "author_association" : "OWNER",
      "body" : "Good point. What constant would be appropriate here?",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-03T05:42:59Z",
      "diff_hunk" : "@@ -1125,6 +1125,47 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n     return true;\n }\n \n+bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& messageStart)\n+{\n+    // Open history file to read\n+    CDiskBlockPos hpos = pos;\n+    hpos.nPos -= 8; // Seek back 8 bytes to validate header\n+    CAutoFile filein(OpenBlockFile(hpos, true), SER_DISK, CLIENT_VERSION);\n+    if (filein.IsNull()) {\n+        return error(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());\n+    }\n+\n+    CMessageHeader::MessageStartChars msg_start_in;\n+    unsigned int nSize;\n+    filein >> msg_start_in >> nSize;\n+\n+    if (memcmp(msg_start_in, messageStart, CMessageHeader::MESSAGE_START_SIZE)) {\n+        return error(\"%s: Block magic mismatch for %s: %s versus expected %s\", __func__, pos.ToString(),\n+                HexStr(msg_start_in, msg_start_in + CMessageHeader::MESSAGE_START_SIZE),\n+                HexStr(messageStart, messageStart + CMessageHeader::MESSAGE_START_SIZE));\n+    }\n+\n+    try {\n+        block.resize(nSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185700508",
      "id" : 185700508,
      "in_reply_to_id" : 185618019,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 25,
      "path" : "src/validation.cpp",
      "position" : 25,
      "pull_request_review_id" : 117141119,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-03T05:42:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185700508",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185700927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185700927"
         }
      },
      "author_association" : "OWNER",
      "body" : "Another thing I wondered here: what is the C++11 proper way to allocate a vector (or a RAII memory area) without zeroing it? I think that's unnecessary here.",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-03T05:47:37Z",
      "diff_hunk" : "@@ -1125,6 +1125,47 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n     return true;\n }\n \n+bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& messageStart)\n+{\n+    // Open history file to read\n+    CDiskBlockPos hpos = pos;\n+    hpos.nPos -= 8; // Seek back 8 bytes to validate header\n+    CAutoFile filein(OpenBlockFile(hpos, true), SER_DISK, CLIENT_VERSION);\n+    if (filein.IsNull()) {\n+        return error(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());\n+    }\n+\n+    CMessageHeader::MessageStartChars msg_start_in;\n+    unsigned int nSize;\n+    filein >> msg_start_in >> nSize;\n+\n+    if (memcmp(msg_start_in, messageStart, CMessageHeader::MESSAGE_START_SIZE)) {\n+        return error(\"%s: Block magic mismatch for %s: %s versus expected %s\", __func__, pos.ToString(),\n+                HexStr(msg_start_in, msg_start_in + CMessageHeader::MESSAGE_START_SIZE),\n+                HexStr(messageStart, messageStart + CMessageHeader::MESSAGE_START_SIZE));\n+    }\n+\n+    try {\n+        block.resize(nSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185700927",
      "id" : 185700927,
      "in_reply_to_id" : 185618019,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 25,
      "path" : "src/validation.cpp",
      "position" : 25,
      "pull_request_review_id" : 117141587,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-03T05:48:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185700927",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
