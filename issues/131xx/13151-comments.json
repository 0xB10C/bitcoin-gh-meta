[
   {
      "author_association" : "MEMBER",
      "body" : "Could you please add a benchmark to `./src/bench/checkblock.cpp`, so it is easier to see how much this improves?",
      "created_at" : "2018-05-02T12:34:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#issuecomment-385962450",
      "id" : 385962450,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13151",
      "updated_at" : "2018-05-02T12:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385962450",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Sure, though I'm not sure how to do that; none of the benches actually uses `ReadBlockFromDisk`, I would have to set up a fake block index or such.\r\n\r\n(I also don't think it will work on `block413567` as-is because it has no magic/size header, and is not a file on disk, though it's easy enough to write a temporary file of course). [When doing this from memory there's effectively nothing to benchmark, too.]",
      "created_at" : "2018-05-02T12:38:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#issuecomment-385963284",
      "id" : 385963284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13151",
      "updated_at" : "2018-05-02T12:53:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/385963284",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185505648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185505648"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just to throw out the idea, `mmap` wouldn't pay off right?",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T14:00:40Z",
      "diff_hunk" : "@@ -1125,6 +1125,47 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n     return true;\n }\n \n+bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& messageStart)\n+{\n+    // Open history file to read\n+    CDiskBlockPos hpos = pos;\n+    hpos.nPos -= 8; // Seek back 8 bytes to validate header\n+    CAutoFile filein(OpenBlockFile(hpos, true), SER_DISK, CLIENT_VERSION);\n+    if (filein.IsNull()) {\n+        return error(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());\n+    }\n+\n+    CMessageHeader::MessageStartChars msg_start_in;\n+    unsigned int nSize;\n+    filein >> msg_start_in >> nSize;\n+\n+    if (memcmp(msg_start_in, messageStart, CMessageHeader::MESSAGE_START_SIZE)) {\n+        return error(\"%s: Block magic mismatch for %s: %s versus expected %s\", __func__, pos.ToString(),\n+                HexStr(msg_start_in, msg_start_in + CMessageHeader::MESSAGE_START_SIZE),\n+                HexStr(messageStart, messageStart + CMessageHeader::MESSAGE_START_SIZE));\n+    }\n+\n+    try {\n+        block.resize(nSize);\n+        filein.read((char*)block.data(), nSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185505648",
      "id" : 185505648,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 26,
      "path" : "src/validation.cpp",
      "position" : 26,
      "pull_request_review_id" : 116907566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T14:03:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185505648",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185507798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185507798"
         }
      },
      "author_association" : "OWNER",
      "body" : "I don't think that's a win here, as the entire block is read consecutively - could even be slower as it'd have to create and destroy the mapping. Also it's not portable.",
      "commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "created_at" : "2018-05-02T14:07:09Z",
      "diff_hunk" : "@@ -1125,6 +1125,47 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n     return true;\n }\n \n+bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& messageStart)\n+{\n+    // Open history file to read\n+    CDiskBlockPos hpos = pos;\n+    hpos.nPos -= 8; // Seek back 8 bytes to validate header\n+    CAutoFile filein(OpenBlockFile(hpos, true), SER_DISK, CLIENT_VERSION);\n+    if (filein.IsNull()) {\n+        return error(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());\n+    }\n+\n+    CMessageHeader::MessageStartChars msg_start_in;\n+    unsigned int nSize;\n+    filein >> msg_start_in >> nSize;\n+\n+    if (memcmp(msg_start_in, messageStart, CMessageHeader::MESSAGE_START_SIZE)) {\n+        return error(\"%s: Block magic mismatch for %s: %s versus expected %s\", __func__, pos.ToString(),\n+                HexStr(msg_start_in, msg_start_in + CMessageHeader::MESSAGE_START_SIZE),\n+                HexStr(messageStart, messageStart + CMessageHeader::MESSAGE_START_SIZE));\n+    }\n+\n+    try {\n+        block.resize(nSize);\n+        filein.read((char*)block.data(), nSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13151#discussion_r185507798",
      "id" : 185507798,
      "in_reply_to_id" : 185505648,
      "original_commit_id" : "4c790dff7481d1464a906ad6b17a3179a7da3431",
      "original_position" : 26,
      "path" : "src/validation.cpp",
      "position" : 26,
      "pull_request_review_id" : 116910324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13151",
      "updated_at" : "2018-05-02T14:13:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185507798",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
