[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186222792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186222792"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do we want to use thread local even on mingw (where you had problems earlier?)",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-04T21:11:33Z",
      "diff_hunk" : "@@ -0,0 +1,146 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <threadval.h>\n+\n+/*  TODO: using thread_local changes the abi in ways that may not play nice\n+    when the c++ stdlib is linked dynamically. Disable it until thorough\n+    testing has been done. */\n+#undef HAVE_THREAD_LOCAL\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+#include <atomic>\n+#include <thread>\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <atomic>\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <thread>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"unnamed\"};\n+};\n+\n+#if defined(HAVE_THREAD_LOCAL)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186222792",
      "id" : 186222792,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjIyMjc5Mg==",
      "original_commit_id" : "01e0925b875ec15aadaf1476a80e2167f59bd05d",
      "original_position" : 39,
      "path" : "src/threadval.cpp",
      "position" : null,
      "pull_request_review_id" : 117769212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186222792",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186223904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186223904"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(in this function and the next) `g_key` is uninitialized if called before `set_internal_name` is invoked. Perhaps you need to add the `pthread_once` call here as well?\r\n\r\nIf not, document that it's illegal to invoke these functions without knowing if `set_internal_name` has been called.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-04T21:16:55Z",
      "diff_hunk" : "@@ -0,0 +1,146 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <threadval.h>\n+\n+/*  TODO: using thread_local changes the abi in ways that may not play nice\n+    when the c++ stdlib is linked dynamically. Disable it until thorough\n+    testing has been done. */\n+#undef HAVE_THREAD_LOCAL\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+#include <atomic>\n+#include <thread>\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <atomic>\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <thread>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"unnamed\"};\n+};\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_data::get_internal_name()\n+{\n+    return g_thread_data.m_name;\n+}\n+\n+long thread_data::get_internal_id()\n+{\n+    return g_thread_data.m_id;\n+}\n+\n+bool thread_data::set_internal_name(std::string name)\n+{\n+    static std::atomic<long> internal_id{0};\n+    g_thread_data = {internal_id++, std::move(name)};\n+    return true;\n+}\n+\n+#elif defined(HAVE_PTHREAD)\n+\n+static pthread_key_t g_key;\n+static void destruct_data(void* data)\n+{\n+    delete static_cast<thread_data_type*>(data);\n+}\n+\n+static void make_key()\n+{\n+    pthread_key_create(&g_key, destruct_data);\n+}\n+\n+std::string thread_data::get_internal_name()\n+{\n+    void* data = pthread_getspecific(g_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186223904",
      "id" : 186223904,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjIyMzkwNA==",
      "original_commit_id" : "01e0925b875ec15aadaf1476a80e2167f59bd05d",
      "original_position" : 74,
      "path" : "src/threadval.cpp",
      "position" : null,
      "pull_request_review_id" : 117769212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186223904",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186224307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186224307"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The `internal_id` has different semantics here than in the thread_local case (here it's only incremented the first time a thread is given a name; in the above case it's incremented every time the name changes). Is that an issue?",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-04T21:19:10Z",
      "diff_hunk" : "@@ -0,0 +1,146 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <threadval.h>\n+\n+/*  TODO: using thread_local changes the abi in ways that may not play nice\n+    when the c++ stdlib is linked dynamically. Disable it until thorough\n+    testing has been done. */\n+#undef HAVE_THREAD_LOCAL\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+#include <atomic>\n+#include <thread>\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <atomic>\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <thread>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"unnamed\"};\n+};\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_data::get_internal_name()\n+{\n+    return g_thread_data.m_name;\n+}\n+\n+long thread_data::get_internal_id()\n+{\n+    return g_thread_data.m_id;\n+}\n+\n+bool thread_data::set_internal_name(std::string name)\n+{\n+    static std::atomic<long> internal_id{0};\n+    g_thread_data = {internal_id++, std::move(name)};\n+    return true;\n+}\n+\n+#elif defined(HAVE_PTHREAD)\n+\n+static pthread_key_t g_key;\n+static void destruct_data(void* data)\n+{\n+    delete static_cast<thread_data_type*>(data);\n+}\n+\n+static void make_key()\n+{\n+    pthread_key_create(&g_key, destruct_data);\n+}\n+\n+std::string thread_data::get_internal_name()\n+{\n+    void* data = pthread_getspecific(g_key);\n+    if (data) {\n+        return static_cast<thread_data_type*>(data)->m_name;\n+    }\n+    return \"unnamed\";\n+}\n+long thread_data::get_internal_id()\n+{\n+    void* data = pthread_getspecific(g_key);\n+    if (data) {\n+        return static_cast<thread_data_type*>(data)->m_id;\n+    }\n+    return -1;\n+}\n+bool thread_data::set_internal_name(std::string name)\n+{\n+    static std::atomic<long> internal_id{0};\n+    static pthread_once_t key_once = PTHREAD_ONCE_INIT;\n+    if (pthread_once(&key_once, make_key)) {\n+        return false;\n+    }\n+    void* data = pthread_getspecific(g_key);\n+    if (data) {\n+        static_cast<thread_data_type*>(data)->m_name = std::move(name);\n+        return true;\n+    }\n+    data = new thread_data_type{internal_id++, std::move(name)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186224307",
      "id" : 186224307,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjIyNDMwNw==",
      "original_commit_id" : "01e0925b875ec15aadaf1476a80e2167f59bd05d",
      "original_position" : 100,
      "path" : "src/threadval.cpp",
      "position" : null,
      "pull_request_review_id" : 117769212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186224307",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186226655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186226655"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/pull/13168/files#diff-defae1c29982e5afaf477729b6c7d9b4R11 :)",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-04T21:31:41Z",
      "diff_hunk" : "@@ -0,0 +1,146 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <threadval.h>\n+\n+/*  TODO: using thread_local changes the abi in ways that may not play nice\n+    when the c++ stdlib is linked dynamically. Disable it until thorough\n+    testing has been done. */\n+#undef HAVE_THREAD_LOCAL\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+#include <atomic>\n+#include <thread>\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <atomic>\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <thread>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"unnamed\"};\n+};\n+\n+#if defined(HAVE_THREAD_LOCAL)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186226655",
      "id" : 186226655,
      "in_reply_to_id" : 186222792,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjIyNjY1NQ==",
      "original_commit_id" : "01e0925b875ec15aadaf1476a80e2167f59bd05d",
      "original_position" : 39,
      "path" : "src/threadval.cpp",
      "position" : null,
      "pull_request_review_id" : 117773985,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186226655",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I figure \"threadutil\" might be a better name going forward because I anticipate as we continue to split stuff out of `util`, this unit might be a good home for things like `TraceThread`. If you or @theuni thinks we should stick with \"threadval\" I'm happy to revert, otherwise I'll split out the rename into a separate commit.",
      "created_at" : "2018-05-04T21:37:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-386741763",
      "id" : 386741763,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-04T21:37:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386741763",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@jamesob I have no opinion about the name. I'm only complaining about a rename in the middle of a PR in a commit that also introduces other changes.",
      "created_at" : "2018-05-04T21:38:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-386742031",
      "id" : 386742031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-04T21:38:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386742031",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186228314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186228314"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep, good catch.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-04T21:40:46Z",
      "diff_hunk" : "@@ -0,0 +1,146 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <threadval.h>\n+\n+/*  TODO: using thread_local changes the abi in ways that may not play nice\n+    when the c++ stdlib is linked dynamically. Disable it until thorough\n+    testing has been done. */\n+#undef HAVE_THREAD_LOCAL\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+#include <atomic>\n+#include <thread>\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <atomic>\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <thread>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"unnamed\"};\n+};\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_data::get_internal_name()\n+{\n+    return g_thread_data.m_name;\n+}\n+\n+long thread_data::get_internal_id()\n+{\n+    return g_thread_data.m_id;\n+}\n+\n+bool thread_data::set_internal_name(std::string name)\n+{\n+    static std::atomic<long> internal_id{0};\n+    g_thread_data = {internal_id++, std::move(name)};\n+    return true;\n+}\n+\n+#elif defined(HAVE_PTHREAD)\n+\n+static pthread_key_t g_key;\n+static void destruct_data(void* data)\n+{\n+    delete static_cast<thread_data_type*>(data);\n+}\n+\n+static void make_key()\n+{\n+    pthread_key_create(&g_key, destruct_data);\n+}\n+\n+std::string thread_data::get_internal_name()\n+{\n+    void* data = pthread_getspecific(g_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186228314",
      "id" : 186228314,
      "in_reply_to_id" : 186223904,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjIyODMxNA==",
      "original_commit_id" : "01e0925b875ec15aadaf1476a80e2167f59bd05d",
      "original_position" : 74,
      "path" : "src/threadval.cpp",
      "position" : null,
      "pull_request_review_id" : 117775981,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186228314",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186229119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186229119"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep. The thread_local impl is incorrect. We only want to increment if unset, so thread id's don't bounce around across renames.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-04T21:45:35Z",
      "diff_hunk" : "@@ -0,0 +1,146 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <threadval.h>\n+\n+/*  TODO: using thread_local changes the abi in ways that may not play nice\n+    when the c++ stdlib is linked dynamically. Disable it until thorough\n+    testing has been done. */\n+#undef HAVE_THREAD_LOCAL\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+#include <atomic>\n+#include <thread>\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <atomic>\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <thread>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"unnamed\"};\n+};\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_data::get_internal_name()\n+{\n+    return g_thread_data.m_name;\n+}\n+\n+long thread_data::get_internal_id()\n+{\n+    return g_thread_data.m_id;\n+}\n+\n+bool thread_data::set_internal_name(std::string name)\n+{\n+    static std::atomic<long> internal_id{0};\n+    g_thread_data = {internal_id++, std::move(name)};\n+    return true;\n+}\n+\n+#elif defined(HAVE_PTHREAD)\n+\n+static pthread_key_t g_key;\n+static void destruct_data(void* data)\n+{\n+    delete static_cast<thread_data_type*>(data);\n+}\n+\n+static void make_key()\n+{\n+    pthread_key_create(&g_key, destruct_data);\n+}\n+\n+std::string thread_data::get_internal_name()\n+{\n+    void* data = pthread_getspecific(g_key);\n+    if (data) {\n+        return static_cast<thread_data_type*>(data)->m_name;\n+    }\n+    return \"unnamed\";\n+}\n+long thread_data::get_internal_id()\n+{\n+    void* data = pthread_getspecific(g_key);\n+    if (data) {\n+        return static_cast<thread_data_type*>(data)->m_id;\n+    }\n+    return -1;\n+}\n+bool thread_data::set_internal_name(std::string name)\n+{\n+    static std::atomic<long> internal_id{0};\n+    static pthread_once_t key_once = PTHREAD_ONCE_INIT;\n+    if (pthread_once(&key_once, make_key)) {\n+        return false;\n+    }\n+    void* data = pthread_getspecific(g_key);\n+    if (data) {\n+        static_cast<thread_data_type*>(data)->m_name = std::move(name);\n+        return true;\n+    }\n+    data = new thread_data_type{internal_id++, std::move(name)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186229119",
      "id" : 186229119,
      "in_reply_to_id" : 186224307,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjIyOTExOQ==",
      "original_commit_id" : "01e0925b875ec15aadaf1476a80e2167f59bd05d",
      "original_position" : 100,
      "path" : "src/threadval.cpp",
      "position" : null,
      "pull_request_review_id" : 117776960,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186229119",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186230413"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186230413"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why the fallback?",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-04T21:53:44Z",
      "diff_hunk" : "@@ -0,0 +1,237 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <threadutil.h>\n+\n+/*  TODO: using thread_local changes the abi in ways that may not play nice\n+    when the c++ stdlib is linked dynamically. Disable it until thorough\n+    testing has been done. */\n+#undef HAVE_THREAD_LOCAL\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+#if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+#include <pthread_np.h>\n+#endif\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+#include <atomic>\n+#include <thread>\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <atomic>\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <thread>\n+#include <unordered_map>\n+#endif\n+\n+const std::string UNNAMED_THREAD = \"<unnamed>\";\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+void thread_util::set_process_name(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::get_process_name()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+    char* pthreadname_buff = (char*)(&threadname_buff);\n+\n+#if defined(PR_GET_NAME)\n+    ::prctl(PR_GET_NAME, pthreadname_buff);\n+#elif defined(MAC_OSX)\n+    pthread_getname_np(pthread_self(), pthreadname_buff, sizeof(threadname_buff));\n+#endif\n+    return std::string(pthreadname_buff);\n+}\n+\n+static std::string try_set_internal_name_from_process()\n+{\n+    std::string procname = thread_util::get_process_name();\n+    if (procname.size()) thread_util::set_internal_name(procname);\n+    return procname;\n+}\n+\n+\n+bool thread_util::rename(std::string name)\n+{\n+    set_process_name(name.c_str());\n+    set_internal_name(name);\n+}\n+\n+\n+/*\n+ * What follows are three separate platform-dependent implementations of\n+ * *name and *id parts of the thread_utils interface.\n+ *\n+ * If we have thread_local, just keep thread ID and name in a thread_local\n+ * global.\n+ */\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_util::get_internal_name()\n+{\n+    auto name = g_thread_data.m_name;\n+\n+    if (g_thread_data.m_name.empty()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186230413",
      "id" : 186230413,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjIzMDQxMw==",
      "original_commit_id" : "ffa1b4f8735080bc3481e7c47f87348fde5708d3",
      "original_position" : 110,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 117778533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186230413",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jamesob You can just take the threadval files, don't worry about the commit attribution.\r\n\r\nAgree with @sipa about the name change, it complicates the review a pretty good bit. Also no preference on naming. I originally named it \"threadval\" with the intention of making it a generic low-level interface for thread_local, but that's not worth the trouble.",
      "created_at" : "2018-05-04T22:04:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-386746957",
      "id" : 386746957,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-04T22:04:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386746957",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186266594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186266594"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There were lots of `\"<unnamed>\"` occurrences in the logs and so I figured it made sense to fall back to the process name if we hadn't explicitly named the thread (e.g. `bitcoind`, `bitcoin-qt`). Do you think it makes more sense to just explicitly call `rename` on those main threads?",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-05T16:40:22Z",
      "diff_hunk" : "@@ -0,0 +1,237 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <threadutil.h>\n+\n+/*  TODO: using thread_local changes the abi in ways that may not play nice\n+    when the c++ stdlib is linked dynamically. Disable it until thorough\n+    testing has been done. */\n+#undef HAVE_THREAD_LOCAL\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+#if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+#include <pthread_np.h>\n+#endif\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+#include <atomic>\n+#include <thread>\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <atomic>\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <thread>\n+#include <unordered_map>\n+#endif\n+\n+const std::string UNNAMED_THREAD = \"<unnamed>\";\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+void thread_util::set_process_name(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::get_process_name()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+    char* pthreadname_buff = (char*)(&threadname_buff);\n+\n+#if defined(PR_GET_NAME)\n+    ::prctl(PR_GET_NAME, pthreadname_buff);\n+#elif defined(MAC_OSX)\n+    pthread_getname_np(pthread_self(), pthreadname_buff, sizeof(threadname_buff));\n+#endif\n+    return std::string(pthreadname_buff);\n+}\n+\n+static std::string try_set_internal_name_from_process()\n+{\n+    std::string procname = thread_util::get_process_name();\n+    if (procname.size()) thread_util::set_internal_name(procname);\n+    return procname;\n+}\n+\n+\n+bool thread_util::rename(std::string name)\n+{\n+    set_process_name(name.c_str());\n+    set_internal_name(name);\n+}\n+\n+\n+/*\n+ * What follows are three separate platform-dependent implementations of\n+ * *name and *id parts of the thread_utils interface.\n+ *\n+ * If we have thread_local, just keep thread ID and name in a thread_local\n+ * global.\n+ */\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_util::get_internal_name()\n+{\n+    auto name = g_thread_data.m_name;\n+\n+    if (g_thread_data.m_name.empty()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186266594",
      "id" : 186266594,
      "in_reply_to_id" : 186230413,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI2NjU5NA==",
      "original_commit_id" : "ffa1b4f8735080bc3481e7c47f87348fde5708d3",
      "original_position" : 110,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 117819138,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186266594",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186266784"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186266784"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I can see concerns with `get_internal_name` being a misnomer. Maybe we should introduce a `GetName` that first tries the internal name and then falls back to the process name?",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-05T16:49:25Z",
      "diff_hunk" : "@@ -0,0 +1,237 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <threadutil.h>\n+\n+/*  TODO: using thread_local changes the abi in ways that may not play nice\n+    when the c++ stdlib is linked dynamically. Disable it until thorough\n+    testing has been done. */\n+#undef HAVE_THREAD_LOCAL\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+#if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+#include <pthread_np.h>\n+#endif\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+#include <atomic>\n+#include <thread>\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <atomic>\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <thread>\n+#include <unordered_map>\n+#endif\n+\n+const std::string UNNAMED_THREAD = \"<unnamed>\";\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+void thread_util::set_process_name(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::get_process_name()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+    char* pthreadname_buff = (char*)(&threadname_buff);\n+\n+#if defined(PR_GET_NAME)\n+    ::prctl(PR_GET_NAME, pthreadname_buff);\n+#elif defined(MAC_OSX)\n+    pthread_getname_np(pthread_self(), pthreadname_buff, sizeof(threadname_buff));\n+#endif\n+    return std::string(pthreadname_buff);\n+}\n+\n+static std::string try_set_internal_name_from_process()\n+{\n+    std::string procname = thread_util::get_process_name();\n+    if (procname.size()) thread_util::set_internal_name(procname);\n+    return procname;\n+}\n+\n+\n+bool thread_util::rename(std::string name)\n+{\n+    set_process_name(name.c_str());\n+    set_internal_name(name);\n+}\n+\n+\n+/*\n+ * What follows are three separate platform-dependent implementations of\n+ * *name and *id parts of the thread_utils interface.\n+ *\n+ * If we have thread_local, just keep thread ID and name in a thread_local\n+ * global.\n+ */\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_util::get_internal_name()\n+{\n+    auto name = g_thread_data.m_name;\n+\n+    if (g_thread_data.m_name.empty()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186266784",
      "id" : 186266784,
      "in_reply_to_id" : 186230413,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI2Njc4NA==",
      "original_commit_id" : "ffa1b4f8735080bc3481e7c47f87348fde5708d3",
      "original_position" : 110,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 117819370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186266784",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa @theuni Thanks for the quick look and comments. I've pushed a reworked version of this branch which\r\n- rewrites the commit history to be more easily reviewable (I hope),\r\n- fixes naming conventions,\r\n- fixes the uninitialized use of `g_key`,\r\n- ensures each implementation of the thread_local behavior only bumps the internal ID accumulator on the first `SetInternalName` per thread,\r\n- removes the unused `GetInternalID` function,\r\n- removes fallback inference from process name when thread name is unset, and explicitly names main threads (`bitcoind`, `bitcoin-qt`), and\r\n- fixes `/* Continued */` logline behavior by introducing *Continued macros which don't prefix log message with thread name. ",
      "created_at" : "2018-05-05T20:17:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-386832009",
      "id" : 386832009,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-05T20:17:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386832009",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pushed a small fix for a mysterious segfault which was happening on 2 x86_64 linux Travis jobs. Core dump and brief writeup in gist below. Build is now passing.\r\n\r\n[threadnames2.2 -> threadnames2.3](https://gist.github.com/jamesob/a7b05acc4330317f4cf06f505e575eaa)",
      "created_at" : "2018-05-06T20:21:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-386910323",
      "id" : 386910323,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-06T20:21:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386910323",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "What platforms still don't have thread_local? Can we just ifdef everything and upgrade our release build OSX SDK and get it in every release platform?\n\nOn May 4, 2018 9:01:28 PM UTC, jamesob <notifications@github.com> wrote:\n>Replaces #13099.\n>\n>The goal here is the same as the previous PR, but this approach uses\n>@theuni's gracefully degrading thread-local caching strategy to avoid\n>(when possible) map lookup and mutex overhead during thread name\n>lookup.\n>\n>Instead of using a mutex-protected map to generate numeric suffixes\n>(e.g. `httpworker.2`) we explicitly pass in suffixes during thread\n>creation.\n>\n>The logging format is also slightly different:\n>```\n>[bitcoind     ] 2018-05-04T20:58:13Z nBestHeight = 1296342\n>[torcontrol   ] 2018-05-04T20:58:13Z torcontrol thread start\n>[bitcoind     ] 2018-05-04T20:58:13Z Bound to [::]:18333\n>[bitcoind     ] 2018-05-04T20:58:13Z Bound to 0.0.0.0:18333\n>[bitcoind     ] 2018-05-04T20:58:13Z init message: Loading P2P\n>addresses...\n>[loadblk      ] 2018-05-04T20:58:13Z Leaving InitialBlockDownload\n>(latching to false)\n>[loadblk      ] 2018-05-04T20:58:13Z Imported mempool transactions from\n>disk: 3 succeeded, 0 failed, 0 expired, 0 already there\n>[bitcoind     ] 2018-05-04T20:58:13Z Loaded 19762 addresses from\n>peers.dat  102ms\n>[bitcoind     ] 2018-05-04T20:58:13Z init message: Loading banlist...\n>[bitcoind     ] 2018-05-04T20:58:13Z init message: Starting network\n>threads...\n>[net          ] 2018-05-04T20:58:13Z net thread start\n>[addcon       ] 2018-05-04T20:58:13Z addcon thread start\n>[dnsseed      ] 2018-05-04T20:58:13Z dnsseed thread start\n>[msghand      ] 2018-05-04T20:58:13Z msghand thread start\n>[bitcoind     ] 2018-05-04T20:58:13Z init message: Done loading\n>```\n>You can view, comment on, or merge this pull request online at:\n>\n>  https://github.com/bitcoin/bitcoin/pull/13168\n>\n>-- Commit Summary --\n>\n>  * threads: add threadval files\n>  * threads: hook up threadval for logging\n>  * threads: add numeric suffixes to threads with the same name\n>  * tests: add threadutil naming tests\n>  * threads: add thread names to deadlock debugging tools\n>\n>-- File Changes --\n>\n>    M src/Makefile.am (2)\n>    M src/Makefile.test.include (1)\n>    M src/httpserver.cpp (11)\n>    M src/init.cpp (7)\n>    M src/logging.cpp (11)\n>    M src/sync.cpp (14)\n>    M src/test/test_bitcoin.cpp (2)\n>    A src/test/threadutil_tests.cpp (90)\n>    A src/threadutil.cpp (237)\n>    A src/threadutil.h (62)\n>    M src/util.cpp (21)\n>    M src/util.h (6)\n>    M src/validation.cpp (5)\n>    M src/validation.h (8)\n>\n>-- Patch Links --\n>\n>https://github.com/bitcoin/bitcoin/pull/13168.patch\n>https://github.com/bitcoin/bitcoin/pull/13168.diff\n>\n>-- \n>You are receiving this because you are subscribed to this thread.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/13168\n",
      "created_at" : "2018-05-06T20:25:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-386910543",
      "id" : 386910543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-06T20:25:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386910543",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "General comment: never @mention someone directly in a commit (just attribute them by name). They'll be spammed by every fork on github when those commits are merged by them.",
      "created_at" : "2018-05-06T21:35:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-386917148",
      "id" : 386917148,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-06T21:35:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386917148",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186303737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186303737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This can be `SetInternalName(std::move(name))`.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-06T21:37:53Z",
      "diff_hunk" : "@@ -0,0 +1,213 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+/*\n+ * TODO: using thread_local changes the abi in ways that may not play nice\n+ * when the c++ stdlib is linked dynamically. Disable it until thorough\n+ * testing has been done.\n+ *\n+ * mingw32's implementation of thread_local has also been shown to behave\n+ * erroneously under concurrent usage; see:\n+ *\n+ *   https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+ */\n+#undef HAVE_THREAD_LOCAL\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+#if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+#include <pthread_np.h>\n+#endif\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+void thread_util::SetProcessName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::GetProcessName()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+    char* pthreadname_buff = (char*)(&threadname_buff);\n+\n+#if defined(PR_GET_NAME)\n+    ::prctl(PR_GET_NAME, pthreadname_buff);\n+#elif defined(MAC_OSX)\n+    pthread_getname_np(pthread_self(), pthreadname_buff, sizeof(threadname_buff));\n+#endif\n+    return std::string(pthreadname_buff);\n+}\n+\n+void thread_util::Rename(std::string name)\n+{\n+    SetProcessName(name.c_str());\n+    SetInternalName(name);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186303737",
      "id" : 186303737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjMwMzczNw==",
      "original_commit_id" : "7db4e45b9d2eecaee72104226ff5c302b0773ce3",
      "original_position" : 88,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 117856242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186303737",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186303792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186303792"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This increments id every time the name is set (regardless of whether it had a name already).",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-06T21:40:09Z",
      "diff_hunk" : "@@ -0,0 +1,213 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+/*\n+ * TODO: using thread_local changes the abi in ways that may not play nice\n+ * when the c++ stdlib is linked dynamically. Disable it until thorough\n+ * testing has been done.\n+ *\n+ * mingw32's implementation of thread_local has also been shown to behave\n+ * erroneously under concurrent usage; see:\n+ *\n+ *   https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+ */\n+#undef HAVE_THREAD_LOCAL\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+#if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+#include <pthread_np.h>\n+#endif\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+void thread_util::SetProcessName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::GetProcessName()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+    char* pthreadname_buff = (char*)(&threadname_buff);\n+\n+#if defined(PR_GET_NAME)\n+    ::prctl(PR_GET_NAME, pthreadname_buff);\n+#elif defined(MAC_OSX)\n+    pthread_getname_np(pthread_self(), pthreadname_buff, sizeof(threadname_buff));\n+#endif\n+    return std::string(pthreadname_buff);\n+}\n+\n+void thread_util::Rename(std::string name)\n+{\n+    SetProcessName(name.c_str());\n+    SetInternalName(name);\n+}\n+\n+/*\n+ * What follows are three separate platform-dependent implementations of\n+ * *name and *id parts of the thread_utils interface. Each implementation\n+ * emulates thread_local storage.\n+ *\n+ * If we have thread_local, just keep thread ID and name in a thread_local\n+ * global.\n+ */\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_util::GetInternalName()\n+{\n+    return g_thread_data.m_name;\n+}\n+\n+bool thread_util::SetInternalName(std::string name)\n+{\n+    static std::atomic<long> id_accumulator{0};\n+    static thread_local thread_id{id_accumulator++};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186303792",
      "id" : 186303792,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjMwMzc5Mg==",
      "original_commit_id" : "7db4e45b9d2eecaee72104226ff5c302b0773ce3",
      "original_position" : 110,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 117856242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186303792",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186303836"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186303836"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can be written as `!pthread_once(&key_once, make_key);`.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-06T21:42:13Z",
      "diff_hunk" : "@@ -0,0 +1,213 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+/*\n+ * TODO: using thread_local changes the abi in ways that may not play nice\n+ * when the c++ stdlib is linked dynamically. Disable it until thorough\n+ * testing has been done.\n+ *\n+ * mingw32's implementation of thread_local has also been shown to behave\n+ * erroneously under concurrent usage; see:\n+ *\n+ *   https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+ */\n+#undef HAVE_THREAD_LOCAL\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+#if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+#include <pthread_np.h>\n+#endif\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+void thread_util::SetProcessName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::GetProcessName()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+    char* pthreadname_buff = (char*)(&threadname_buff);\n+\n+#if defined(PR_GET_NAME)\n+    ::prctl(PR_GET_NAME, pthreadname_buff);\n+#elif defined(MAC_OSX)\n+    pthread_getname_np(pthread_self(), pthreadname_buff, sizeof(threadname_buff));\n+#endif\n+    return std::string(pthreadname_buff);\n+}\n+\n+void thread_util::Rename(std::string name)\n+{\n+    SetProcessName(name.c_str());\n+    SetInternalName(name);\n+}\n+\n+/*\n+ * What follows are three separate platform-dependent implementations of\n+ * *name and *id parts of the thread_utils interface. Each implementation\n+ * emulates thread_local storage.\n+ *\n+ * If we have thread_local, just keep thread ID and name in a thread_local\n+ * global.\n+ */\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_util::GetInternalName()\n+{\n+    return g_thread_data.m_name;\n+}\n+\n+bool thread_util::SetInternalName(std::string name)\n+{\n+    static std::atomic<long> id_accumulator{0};\n+    static thread_local thread_id{id_accumulator++};\n+    g_thread_data = {thread_id, std::move(name)};\n+    return true;\n+}\n+\n+/*\n+ * Otherwise if we don't have use of thread_local, use the pthreads interface\n+ * to stash thread data in thread-specific key using getspecific/setspecific.\n+ */\n+#elif defined(HAVE_PTHREAD)\n+\n+static pthread_key_t g_key;\n+static void destruct_data(void* data)\n+{\n+    delete static_cast<thread_data_type*>(data);\n+}\n+\n+static void make_key()\n+{\n+    pthread_key_create(&g_key, destruct_data);\n+}\n+\n+static bool EnsureKeyCreated()\n+{\n+    static pthread_once_t key_once = PTHREAD_ONCE_INIT;\n+    return pthread_once(&key_once, make_key) ? false : true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186303836",
      "id" : 186303836,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjMwMzgzNg==",
      "original_commit_id" : "7db4e45b9d2eecaee72104226ff5c302b0773ce3",
      "original_position" : 135,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 117856242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186303836",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186304251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186304251"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This can be written as `thread_name = std::move(thread_name_)` to avoid a copy.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-06T21:54:01Z",
      "diff_hunk" : "@@ -35,23 +39,27 @@ void PrintLockContention(const char* pszName, const char* pszFile, int nLine)\n //\n \n struct CLockLocation {\n-    CLockLocation(const char* pszName, const char* pszFile, int nLine, bool fTryIn)\n+    CLockLocation(const char* pszName, const char* pszFile, int nLine, bool fTryIn, std::string thread_name_)\n     {\n         mutexName = pszName;\n         sourceFile = pszFile;\n         sourceLine = nLine;\n         fTry = fTryIn;\n+        thread_name = thread_name_;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186304251",
      "id" : 186304251,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjMwNDI1MQ==",
      "original_commit_id" : "e7a091d8a8aaaca114de0fbfda13dcecb9d409ef",
      "original_position" : 25,
      "path" : "src/sync.cpp",
      "position" : null,
      "pull_request_review_id" : 117856242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186304251",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186322006"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186322006"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Doesn't the `static thread_local` attribute prevent that?",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-07T03:52:14Z",
      "diff_hunk" : "@@ -0,0 +1,213 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+/*\n+ * TODO: using thread_local changes the abi in ways that may not play nice\n+ * when the c++ stdlib is linked dynamically. Disable it until thorough\n+ * testing has been done.\n+ *\n+ * mingw32's implementation of thread_local has also been shown to behave\n+ * erroneously under concurrent usage; see:\n+ *\n+ *   https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+ */\n+#undef HAVE_THREAD_LOCAL\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+#if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+#include <pthread_np.h>\n+#endif\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+void thread_util::SetProcessName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::GetProcessName()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+    char* pthreadname_buff = (char*)(&threadname_buff);\n+\n+#if defined(PR_GET_NAME)\n+    ::prctl(PR_GET_NAME, pthreadname_buff);\n+#elif defined(MAC_OSX)\n+    pthread_getname_np(pthread_self(), pthreadname_buff, sizeof(threadname_buff));\n+#endif\n+    return std::string(pthreadname_buff);\n+}\n+\n+void thread_util::Rename(std::string name)\n+{\n+    SetProcessName(name.c_str());\n+    SetInternalName(name);\n+}\n+\n+/*\n+ * What follows are three separate platform-dependent implementations of\n+ * *name and *id parts of the thread_utils interface. Each implementation\n+ * emulates thread_local storage.\n+ *\n+ * If we have thread_local, just keep thread ID and name in a thread_local\n+ * global.\n+ */\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_util::GetInternalName()\n+{\n+    return g_thread_data.m_name;\n+}\n+\n+bool thread_util::SetInternalName(std::string name)\n+{\n+    static std::atomic<long> id_accumulator{0};\n+    static thread_local thread_id{id_accumulator++};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186322006",
      "id" : 186322006,
      "in_reply_to_id" : 186303792,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjMyMjAwNg==",
      "original_commit_id" : "7db4e45b9d2eecaee72104226ff5c302b0773ce3",
      "original_position" : 110,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 117876766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186322006",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "We need `LogPrint*Continued` to prevent prefixing a line continuation with a thread name. Thanks for the look, will incorporate the feedback tomorrow.",
      "created_at" : "2018-05-07T03:54:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-386950733",
      "id" : 386950733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-07T03:54:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386950733",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186324579"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186324579"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, yes indeed. Ignore me\n",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-07T04:29:16Z",
      "diff_hunk" : "@@ -0,0 +1,213 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+/*\n+ * TODO: using thread_local changes the abi in ways that may not play nice\n+ * when the c++ stdlib is linked dynamically. Disable it until thorough\n+ * testing has been done.\n+ *\n+ * mingw32's implementation of thread_local has also been shown to behave\n+ * erroneously under concurrent usage; see:\n+ *\n+ *   https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+ */\n+#undef HAVE_THREAD_LOCAL\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+#if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+#include <pthread_np.h>\n+#endif\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+void thread_util::SetProcessName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::GetProcessName()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+    char* pthreadname_buff = (char*)(&threadname_buff);\n+\n+#if defined(PR_GET_NAME)\n+    ::prctl(PR_GET_NAME, pthreadname_buff);\n+#elif defined(MAC_OSX)\n+    pthread_getname_np(pthread_self(), pthreadname_buff, sizeof(threadname_buff));\n+#endif\n+    return std::string(pthreadname_buff);\n+}\n+\n+void thread_util::Rename(std::string name)\n+{\n+    SetProcessName(name.c_str());\n+    SetInternalName(name);\n+}\n+\n+/*\n+ * What follows are three separate platform-dependent implementations of\n+ * *name and *id parts of the thread_utils interface. Each implementation\n+ * emulates thread_local storage.\n+ *\n+ * If we have thread_local, just keep thread ID and name in a thread_local\n+ * global.\n+ */\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_util::GetInternalName()\n+{\n+    return g_thread_data.m_name;\n+}\n+\n+bool thread_util::SetInternalName(std::string name)\n+{\n+    static std::atomic<long> id_accumulator{0};\n+    static thread_local thread_id{id_accumulator++};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186324579",
      "id" : 186324579,
      "in_reply_to_id" : 186303792,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjMyNDU3OQ==",
      "original_commit_id" : "7db4e45b9d2eecaee72104226ff5c302b0773ce3",
      "original_position" : 110,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 117879914,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186324579",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa ah, sorry: I missed your point about the LogPrint macros. I see now that we can just move thread name attachment to reuse the existing `m_started_new_line` stuff, thanks. I've removed the last commit and worked in your other feedback.\r\n\r\n[`jamesob/threadnames2.3 -> jamesob/threadnames2.4`](https://gist.github.com/jamesob/2aebc372f6421e6888ff2e5c29ac71b0)",
      "created_at" : "2018-05-07T14:08:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-387076303",
      "id" : 387076303,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-07T14:08:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387076303",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt honestly I'm not sure about the thread_local stuff; all I know is that mingw32 wasn't behaving well with its use (as noted [in the comment](https://github.com/bitcoin/bitcoin/pull/13168/files#diff-defae1c29982e5afaf477729b6c7d9b4R13)) - @theuni is the authority there.",
      "created_at" : "2018-05-07T14:12:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-387077686",
      "id" : 387077686,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-07T14:12:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387077686",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186459657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186459657"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this line may be unintentional.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-07T15:31:29Z",
      "diff_hunk" : "@@ -0,0 +1,213 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+/*\n+ * TODO: using thread_local changes the abi in ways that may not play nice\n+ * when the c++ stdlib is linked dynamically. Disable it until thorough\n+ * testing has been done.\n+ *\n+ * mingw32's implementation of thread_local has also been shown to behave\n+ * erroneously under concurrent usage; see:\n+ *\n+ *   https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+ */\n+#undef HAVE_THREAD_LOCAL",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186459657",
      "id" : 186459657,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjQ1OTY1Nw==",
      "original_commit_id" : "b891a44af4cd9d593f702d74d28656e383245b15",
      "original_position" : 24,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 118041104,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186459657",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186460270"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186460270"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think you need this variable; using `threadname_buff` will automatically decay to `(char *)`.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-07T15:33:46Z",
      "diff_hunk" : "@@ -0,0 +1,213 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+/*\n+ * TODO: using thread_local changes the abi in ways that may not play nice\n+ * when the c++ stdlib is linked dynamically. Disable it until thorough\n+ * testing has been done.\n+ *\n+ * mingw32's implementation of thread_local has also been shown to behave\n+ * erroneously under concurrent usage; see:\n+ *\n+ *   https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+ */\n+#undef HAVE_THREAD_LOCAL\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+#if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+#include <pthread_np.h>\n+#endif\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+void thread_util::SetProcessName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::GetProcessName()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+    char* pthreadname_buff = (char*)(&threadname_buff);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186460270",
      "id" : 186460270,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjQ2MDI3MA==",
      "original_commit_id" : "b891a44af4cd9d593f702d74d28656e383245b15",
      "original_position" : 75,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 118041104,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186460270",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186462663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186462663"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think so - see the comment above; sounds like @theuni wants to do more testing with dynamic linking before we use `thread_local` outside the context of debug code.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-07T15:42:29Z",
      "diff_hunk" : "@@ -0,0 +1,213 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+/*\n+ * TODO: using thread_local changes the abi in ways that may not play nice\n+ * when the c++ stdlib is linked dynamically. Disable it until thorough\n+ * testing has been done.\n+ *\n+ * mingw32's implementation of thread_local has also been shown to behave\n+ * erroneously under concurrent usage; see:\n+ *\n+ *   https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+ */\n+#undef HAVE_THREAD_LOCAL",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186462663",
      "id" : 186462663,
      "in_reply_to_id" : 186459657,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjQ2MjY2Mw==",
      "original_commit_id" : "b891a44af4cd9d593f702d74d28656e383245b15",
      "original_position" : 24,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 118044756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186462663",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Changed with more feedback from @sipa. \r\n\r\n[`jamesob/threadnames2.4` -> `.5`](https://gist.github.com/jamesob/5604eb4586f8eb3401659566e17632f8)",
      "created_at" : "2018-05-07T17:05:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-387133425",
      "id" : 387133425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-07T17:05:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387133425",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186511474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186511474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Unsure if we should have the code in in that case, as it's untestable (it also doesn't compile currently).",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-07T18:43:14Z",
      "diff_hunk" : "@@ -0,0 +1,213 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+/*\n+ * TODO: using thread_local changes the abi in ways that may not play nice\n+ * when the c++ stdlib is linked dynamically. Disable it until thorough\n+ * testing has been done.\n+ *\n+ * mingw32's implementation of thread_local has also been shown to behave\n+ * erroneously under concurrent usage; see:\n+ *\n+ *   https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+ */\n+#undef HAVE_THREAD_LOCAL",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186511474",
      "id" : 186511474,
      "in_reply_to_id" : 186459657,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjUxMTQ3NA==",
      "original_commit_id" : "b891a44af4cd9d593f702d74d28656e383245b15",
      "original_position" : 24,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 118104543,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186511474",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt unfortunately it's not the SDK, it's Apple's clang itself that had thread_local patched out until xcode 9.0, released in June 2017. And to make it worse, they held off on supporting it because they \"didn't want to commit to an inefficient abi\". It's that reasoning that makes me believe that a build with an upstream clang may have compatibility issues with end-users' libc/libstdc++. A few tests might shed some light, but even then, I'd worry about one-off version issues.\r\n\r\nSo, options are:\r\n- Move forward with thread_local, require mac builders to upgrade to xcode 9, hope for no abi issues\r\n- Wait for xcode 9 to be a reasonable minimum, same as above\r\n- \\#ifndef \\_\\_APPLE\\_\\_ ...\r\n- No thread_local for now\r\n\r\nThose options ignore mingw, with which @jamesob has also reported some thread_local issues, but I haven't investigated those.\r\n\r\n@sipa I left the thread_local code but undef'd the variable in case we want to go for \\#3. Otherwise, I begrudgingly agree that it probably shouldn't be present until it's usable.",
      "created_at" : "2018-05-07T19:46:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-387181155",
      "id" : 387181155,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-07T19:46:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387181155",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186740293"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186740293"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This declaration misses a type (when you uncomment the `#undef HAVE_THREAD_LOCAL`).",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-08T14:09:28Z",
      "diff_hunk" : "@@ -0,0 +1,212 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+/*\n+ * TODO: using thread_local changes the abi in ways that may not play nice\n+ * when the c++ stdlib is linked dynamically. Disable it until thorough\n+ * testing has been done.\n+ *\n+ * mingw32's implementation of thread_local has also been shown to behave\n+ * erroneously under concurrent usage; see:\n+ *\n+ *   https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+ */\n+#undef HAVE_THREAD_LOCAL\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+#if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+#include <pthread_np.h>\n+#endif\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+void thread_util::SetProcessName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::GetProcessName()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+\n+#if defined(PR_GET_NAME)\n+    ::prctl(PR_GET_NAME, threadname_buff);\n+#elif defined(MAC_OSX)\n+    pthread_getname_np(pthread_self(), threadname_buff, sizeof(threadname_buff));\n+#endif\n+    return std::string(threadname_buff);\n+}\n+\n+void thread_util::Rename(std::string name)\n+{\n+    SetProcessName(name.c_str());\n+    SetInternalName(std::move(name));\n+}\n+\n+/*\n+ * What follows are three separate platform-dependent implementations of\n+ * *name and *id parts of the thread_utils interface. Each implementation\n+ * emulates thread_local storage.\n+ *\n+ * If we have thread_local, just keep thread ID and name in a thread_local\n+ * global.\n+ */\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_util::GetInternalName()\n+{\n+    return g_thread_data.m_name;\n+}\n+\n+bool thread_util::SetInternalName(std::string name)\n+{\n+    static std::atomic<long> id_accumulator{0};\n+    static thread_local thread_id{id_accumulator++};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186740293",
      "id" : 186740293,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njc0MDI5Mw==",
      "original_commit_id" : "2d36119493dee83cd16d14314ae884e7123c748d",
      "original_position" : 109,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 118377896,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186740293",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186761614"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186761614"
         }
      },
      "author_association" : "MEMBER",
      "body" : "More evidence that we should remove this code until we need it. I'll strip it out.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-05-08T15:06:52Z",
      "diff_hunk" : "@@ -0,0 +1,212 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+/*\n+ * TODO: using thread_local changes the abi in ways that may not play nice\n+ * when the c++ stdlib is linked dynamically. Disable it until thorough\n+ * testing has been done.\n+ *\n+ * mingw32's implementation of thread_local has also been shown to behave\n+ * erroneously under concurrent usage; see:\n+ *\n+ *   https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+ */\n+#undef HAVE_THREAD_LOCAL\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+#if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+#include <pthread_np.h>\n+#endif\n+\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+#elif defined(HAVE_PTHREAD)\n+#include <pthread.h>\n+\n+#else\n+#include <mutex>\n+#include <unordered_map>\n+#endif\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+void thread_util::SetProcessName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::GetProcessName()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+\n+#if defined(PR_GET_NAME)\n+    ::prctl(PR_GET_NAME, threadname_buff);\n+#elif defined(MAC_OSX)\n+    pthread_getname_np(pthread_self(), threadname_buff, sizeof(threadname_buff));\n+#endif\n+    return std::string(threadname_buff);\n+}\n+\n+void thread_util::Rename(std::string name)\n+{\n+    SetProcessName(name.c_str());\n+    SetInternalName(std::move(name));\n+}\n+\n+/*\n+ * What follows are three separate platform-dependent implementations of\n+ * *name and *id parts of the thread_utils interface. Each implementation\n+ * emulates thread_local storage.\n+ *\n+ * If we have thread_local, just keep thread ID and name in a thread_local\n+ * global.\n+ */\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_util::GetInternalName()\n+{\n+    return g_thread_data.m_name;\n+}\n+\n+bool thread_util::SetInternalName(std::string name)\n+{\n+    static std::atomic<long> id_accumulator{0};\n+    static thread_local thread_id{id_accumulator++};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r186761614",
      "id" : 186761614,
      "in_reply_to_id" : 186740293,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njc2MTYxNA==",
      "original_commit_id" : "2d36119493dee83cd16d14314ae884e7123c748d",
      "original_position" : 109,
      "path" : "src/threadutil.cpp",
      "position" : null,
      "pull_request_review_id" : 118404466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-05T17:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186761614",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've pushed changes removing the unused `thread_local` implementation.\r\n\r\n[`jamesob/threadnames2.5 -> .6`](https://gist.github.com/jamesob/7759579c2ece06e9fa7db43652a47600)\r\n\r\n",
      "created_at" : "2018-05-08T17:05:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-387472891",
      "id" : 387472891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-08T17:05:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387472891",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase due to mege of #13236\r\n",
      "created_at" : "2018-05-17T16:30:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-389928466",
      "id" : 389928466,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-17T16:30:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389928466",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt and @ryanofsky gave feedback offline that we should only include a (very simple) thread_local implementation for this change, undef `HAVE_THREAD_LOCAL` on problematic platforms (e.g. Apple, Windows), and only include threadnames on supported platforms.  Does anyone disagree with this? If not, I'll implement that sometime in the next few days.",
      "created_at" : "2018-05-17T18:07:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-389957916",
      "id" : 389957916,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-17T18:07:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389957916",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @TheBlueMatt and @ryanofsky gave feedback offline that we should only include a (very simple) thread_local implementation for this change\r\n\r\nI'm happy with either approach. I just wanted to suggest that not logging thread names on platforms that don't support thread_local could be ok and simplify things.",
      "created_at" : "2018-05-17T18:19:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-389961411",
      "id" : 389961411,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-17T18:19:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389961411",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've pushed a simplified rework of this branch which removes all non-`thread_local` implementations of the threadutil stuff; we just won't support threadnames if the platform in question doesn't support thread_local. I've also added a flag to disable threadname prefixes (`-logthreadnames`) a la `-logtimestamps`, and have added related release notes.\r\n\r\nThis should be ready for review. One outstanding question I have is where we should be doing the conditional `#undef HAVE_THREAD_LOCAL` -- `threadutil.cpp` doesn't seem like the right place.",
      "created_at" : "2018-05-21T16:36:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-390709422",
      "id" : 390709422,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-21T16:36:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390709422",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "concept ACK (I'm already finding this useful) - a quick note that this breaks combine logs.py (but trivial fix - just need to update the regexp that identifies timestamps)",
      "created_at" : "2018-05-24T16:59:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-391787374",
      "id" : 391787374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-24T16:59:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/391787374",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase due to merge of #13341\r\n",
      "created_at" : "2018-05-30T13:58:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-393172412",
      "id" : 393172412,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "updated_at" : "2018-05-30T13:58:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/393172412",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the heads-up, @MarcoFalke. I've rebased and pushed a fix to combine_logs.py (thanks @skeees). This is ready for review-for-merge.",
      "created_at" : "2018-06-05T18:45:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-394818420",
      "id" : 394818420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13168",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDgxODQyMA==",
      "updated_at" : "2018-06-05T18:45:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394818420",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193494673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193494673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "this include necessary?",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-06T17:30:02Z",
      "diff_hunk" : "@@ -9,6 +9,7 @@\n #include <random.h>\n #include <serialize.h>\n #include <utilstrencodings.h>\n+#include <threadutil.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193494673",
      "id" : 193494673,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzQ5NDY3Mw==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 4,
      "path" : "src/util.cpp",
      "position" : 4,
      "pull_request_review_id" : 126477730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-06T18:24:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193494673",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "node_id" : "MDQ6VXNlcjE5NTc2OQ==",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193496034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193496034"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "really feels like you should just lift this out into threadutil",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-06T17:34:43Z",
      "diff_hunk" : "@@ -309,15 +310,12 @@ std::string HelpMessageOpt(const std::string& option, const std::string& message\n  */\n int GetNumCores();\n \n-void RenameThread(const char* name);\n-\n /**\n  * .. and a wrapper that just calls func once\n  */\n template <typename Callable> void TraceThread(const char* name,  Callable func)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193496034",
      "id" : 193496034,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzQ5NjAzNA==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 17,
      "path" : "src/util.h",
      "position" : 17,
      "pull_request_review_id" : 126477730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-06T18:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193496034",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "node_id" : "MDQ6VXNlcjE5NTc2OQ==",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193497650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193497650"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "if you are that concerned about sane behavior for thread_local, does it make more sense to take a whitelist approach?",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-06T17:39:50Z",
      "diff_hunk" : "@@ -759,8 +759,21 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   }\n   ])],\n   [\n-    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n-    AC_MSG_RESULT(yes)\n+   case $host in\n+     *mingw*)\n+        # mingw32's implementation of thread_local has also been shown to behave\n+        # erroneously under concurrent usage; see:\n+        # https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+        AC_MSG_RESULT(no)\n+        ;;\n+      *darwin*)\n+        AC_MSG_RESULT(no)\n+        ;;\n+      *)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193497650",
      "id" : 193497650,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzQ5NzY1MA==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 16,
      "path" : "configure.ac",
      "position" : 16,
      "pull_request_review_id" : 126477730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-06T18:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193497650",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "node_id" : "MDQ6VXNlcjE5NTc2OQ==",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193499740"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193499740"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "if this is the only setting function thats currently used outside of this translation unit, maybe make Set{Internal,Process}Name static so they arent exposed until theres a reason to have separate internal and internal names?",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-06T17:45:58Z",
      "diff_hunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_THREADUTIL_H\n+#define BITCOIN_THREADUTIL_H\n+\n+#include <string>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For PR_GET_NAME\n+#endif\n+\n+#if (defined(PR_GET_NAME) || defined(MAC_OSX))\n+#define CAN_READ_PROCESS_NAME\n+#endif\n+\n+namespace thread_util\n+{\n+    /**\n+     * Rename a thread both in terms of an internal (in-memory) name as well\n+     * as its system process name.\n+     *\n+     * @return whether or not the rename succeeded.\n+     */\n+    void Rename(std::string);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193499740",
      "id" : 193499740,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzQ5OTc0MA==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 30,
      "path" : "src/threadutil.h",
      "position" : 30,
      "pull_request_review_id" : 126477730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-06T18:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193499740",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "node_id" : "MDQ6VXNlcjE5NTc2OQ==",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193499843"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193499843"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think you can add some consts to the functions declared here",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-06T17:46:21Z",
      "diff_hunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_THREADUTIL_H\n+#define BITCOIN_THREADUTIL_H\n+\n+#include <string>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For PR_GET_NAME\n+#endif\n+\n+#if (defined(PR_GET_NAME) || defined(MAC_OSX))\n+#define CAN_READ_PROCESS_NAME\n+#endif\n+\n+namespace thread_util",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193499843",
      "id" : 193499843,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzQ5OTg0Mw==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 22,
      "path" : "src/threadutil.h",
      "position" : 22,
      "pull_request_review_id" : 126477730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-06T18:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193499843",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "node_id" : "MDQ6VXNlcjE5NTc2OQ==",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193510566"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193510566"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "it feels weird that i can set it, but then cannot read it back. also this function isn't used anywhere except tests so maybe just remove GetProcessName",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-06T18:17:56Z",
      "diff_hunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+void thread_util::SetProcessName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::GetProcessName()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193510566",
      "id" : 193510566,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzUxMDU2Ng==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 36,
      "path" : "src/threadutil.cpp",
      "position" : 36,
      "pull_request_review_id" : 126477730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-06T18:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193510566",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "node_id" : "MDQ6VXNlcjE5NTc2OQ==",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193511000"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193511000"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thread_id is never used for anything",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-06T18:19:13Z",
      "diff_hunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+void thread_util::SetProcessName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+std::string thread_util::GetProcessName()\n+{\n+#if !defined(CAN_READ_PROCESS_NAME)\n+    return \"\";\n+#endif\n+\n+    char threadname_buff[16];\n+\n+#if defined(PR_GET_NAME)\n+    ::prctl(PR_GET_NAME, threadname_buff);\n+#elif defined(MAC_OSX)\n+    pthread_getname_np(pthread_self(), threadname_buff, sizeof(threadname_buff));\n+#endif\n+    return std::string(threadname_buff);\n+}\n+\n+void thread_util::Rename(std::string name)\n+{\n+    SetProcessName(name.c_str());\n+    SetInternalName(std::move(name));\n+}\n+\n+/*\n+ * If we have thread_local, just keep thread ID and name in a thread_local\n+ * global.\n+ */\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+struct thread_data_type\n+{\n+    constexpr thread_data_type() = default;\n+    thread_data_type(long id, std::string name) : m_id(id), m_name(std::move(name)){}\n+\n+    long m_id{0};\n+    std::string m_name{\"\"};\n+};\n+\n+static thread_local thread_data_type g_thread_data;\n+std::string thread_util::GetInternalName()\n+{\n+    return g_thread_data.m_name;\n+}\n+\n+bool thread_util::SetInternalName(std::string name)\n+{\n+    static std::atomic<long> id_accumulator{0};\n+    static thread_local long thread_id{id_accumulator++};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193511000",
      "id" : 193511000,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzUxMTAwMA==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 79,
      "path" : "src/threadutil.cpp",
      "position" : 79,
      "pull_request_review_id" : 126477730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-06T18:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193511000",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "node_id" : "MDQ6VXNlcjE5NTc2OQ==",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193511474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193511474"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "what happens if you name something longer? truncate? worth amending comment to specify",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-06T18:20:33Z",
      "diff_hunk" : "@@ -190,29 +197,37 @@ std::string BCLog::Logger::LogTimestampStr(const std::string &str)\n     } else\n         strStamped = str;\n \n-    if (!str.empty() && str[str.size()-1] == '\\n')\n-        m_started_new_line = true;\n-    else\n-        m_started_new_line = false;\n-\n     return strStamped;\n }\n \n+std::string BCLog::Logger::LogThreadnameStr(const std::string &str)\n+{\n+    if (!m_log_threadnames || !m_started_new_line) {\n+        return str;\n+    }\n+    std::string thread_name = thread_util::GetInternalName();\n+    // The longest thread name (with numeric suffix) we have at the moment is 13 characters.\n+    thread_name.resize(13, ' ');",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193511474",
      "id" : 193511474,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzUxMTQ3NA==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 40,
      "path" : "src/logging.cpp",
      "position" : 40,
      "pull_request_review_id" : 126477730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-06T18:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193511474",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "node_id" : "MDQ6VXNlcjE5NTc2OQ==",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193512219"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193512219"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "you do a move here but a copy into the function you probably want an rvalue ref and a forward - performance is probably reasonable to worry about here because i think this is called every time a lock is acquired? \r\nif you make thread_util::GetName() return a const then even better because all of this should get reused",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-06T18:22:47Z",
      "diff_hunk" : "@@ -37,23 +39,27 @@ void PrintLockContention(const char* pszName, const char* pszFile, int nLine)\n //\n \n struct CLockLocation {\n-    CLockLocation(const char* pszName, const char* pszFile, int nLine, bool fTryIn)\n+    CLockLocation(const char* pszName, const char* pszFile, int nLine, bool fTryIn, std::string thread_name_)\n     {\n         mutexName = pszName;\n         sourceFile = pszFile;\n         sourceLine = nLine;\n         fTry = fTryIn;\n+        thread_name = std::move(thread_name_);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193512219",
      "id" : 193512219,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzUxMjIxOQ==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 22,
      "path" : "src/sync.cpp",
      "position" : 22,
      "pull_request_review_id" : 126477730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-06T18:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193512219",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "node_id" : "MDQ6VXNlcjE5NTc2OQ==",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193568494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193568494"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It seems more natural to me to have the thread name after the timestamp.\r\n\r\nThis way round breaks combine_logs without a fix. I imagine other log parsers expect the timestamp at the start of the line as well.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-06T21:42:28Z",
      "diff_hunk" : "@@ -190,29 +197,37 @@ std::string BCLog::Logger::LogTimestampStr(const std::string &str)\n     } else\n         strStamped = str;\n \n-    if (!str.empty() && str[str.size()-1] == '\\n')\n-        m_started_new_line = true;\n-    else\n-        m_started_new_line = false;\n-\n     return strStamped;\n }\n \n+std::string BCLog::Logger::LogThreadnameStr(const std::string &str)\n+{\n+    if (!m_log_threadnames || !m_started_new_line) {\n+        return str;\n+    }\n+    std::string thread_name = thread_util::GetInternalName();\n+    // The longest thread name (with numeric suffix) we have at the moment is 13 characters.\n+    thread_name.resize(13, ' ');\n+    return \"[\" + std::move(thread_name) + \"] \" + str;\n+}\n+\n void BCLog::Logger::LogPrintStr(const std::string &str)\n {\n-    std::string strTimestamped = LogTimestampStr(str);\n+    std::string strPrefixed = LogThreadnameStr(LogTimestampStr(str));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193568494",
      "id" : 193568494,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzU2ODQ5NA==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 47,
      "path" : "src/logging.cpp",
      "position" : 47,
      "pull_request_review_id" : 126566604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-06T21:42:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193568494",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193830438"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193830438"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Comment is incorrect. Should be `Get the thread's ...`, or `@return the thread's...`",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-07T17:33:16Z",
      "diff_hunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_THREADUTIL_H\n+#define BITCOIN_THREADUTIL_H\n+\n+#include <string>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For PR_GET_NAME\n+#endif\n+\n+#if (defined(PR_GET_NAME) || defined(MAC_OSX))\n+#define CAN_READ_PROCESS_NAME\n+#endif\n+\n+namespace thread_util\n+{\n+    /**\n+     * Rename a thread both in terms of an internal (in-memory) name as well\n+     * as its system process name.\n+     *\n+     * @return whether or not the rename succeeded.\n+     */\n+    void Rename(std::string);\n+\n+    /**\n+     * Set the thread's internal (in-memory) name; used e.g. for identification in",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193830438",
      "id" : 193830438,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgzMDQzOA==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 33,
      "path" : "src/threadutil.h",
      "position" : 33,
      "pull_request_review_id" : 126883538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-07T17:40:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193830438",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193832295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193832295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The pattern doesn't work for the `[httpworker.n ]` thread logs:\r\n\r\n```\r\n/tmp/user/1000/testb2liucdnnode0 [http         ] 2018-06-07T17:33:43.612724Z Received a POST request for / from 127.0.0.1:34830\r\n\r\n[httpworker.2 ] 2018-06-07T17:33:43.612865Z ThreadRPCServer method=getblockcount user=__cookie__ \r\n node0 [http         ] 2018-06-07T17:33:43.613814Z Received a POST request for / from 127.0.0.1:34830\r\n\r\n[httpworker.0 ] 2018-06-07T17:33:43.613905Z ThreadRPCServer method=listwallets user=__cookie__ \r\n node0 [http         ] 2018-06-07T17:33:43.614514Z Received a POST request for / from 127.0.0.1:34830\r\n```\r\n\r\nThis problem goes away if you leave the timestamp at the start of the log string.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-07T17:40:11Z",
      "diff_hunk" : "@@ -12,8 +12,8 @@\n import re\n import sys\n \n-# Matches on the date format at the start of the log event\n-TIMESTAMP_PATTERN = re.compile(r\"^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{6}Z\")\n+# Matches on the date format or threadname prefix at the start of the log event\n+PREFIX_PATTERN = re.compile(r\"^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{6}Z|\\[\\w+\\s*\\] )\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r193832295",
      "id" : 193832295,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgzMjI5NQ==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 7,
      "path" : "test/functional/combine_logs.py",
      "position" : 7,
      "pull_request_review_id" : 126883538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-07T17:40:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193832295",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r194154011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194154011"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think so: `thread_util::Rename` is used on [line 318](https://github.com/jamesob/bitcoin/blob/e6454374033760d93a33619bea1451573718dd3d/src/util.h#L318). ",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-08T19:05:17Z",
      "diff_hunk" : "@@ -9,6 +9,7 @@\n #include <random.h>\n #include <serialize.h>\n #include <utilstrencodings.h>\n+#include <threadutil.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r194154011",
      "id" : 194154011,
      "in_reply_to_id" : 193494673,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDE1NDAxMQ==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 4,
      "path" : "src/util.cpp",
      "position" : 4,
      "pull_request_review_id" : 127280723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-08T19:05:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194154011",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r194155079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194155079"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Only problem is that'd create a circular dep with `logging` and `threadutil` due to use of `LogPrintf` here. I agree that in concept that's where it should live, but it doesn't look trivial to avoid that circular dep.",
      "commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "created_at" : "2018-06-08T19:09:58Z",
      "diff_hunk" : "@@ -309,15 +310,12 @@ std::string HelpMessageOpt(const std::string& option, const std::string& message\n  */\n int GetNumCores();\n \n-void RenameThread(const char* name);\n-\n /**\n  * .. and a wrapper that just calls func once\n  */\n template <typename Callable> void TraceThread(const char* name,  Callable func)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13168#discussion_r194155079",
      "id" : 194155079,
      "in_reply_to_id" : 193496034,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDE1NTA3OQ==",
      "original_commit_id" : "e6454374033760d93a33619bea1451573718dd3d",
      "original_position" : 17,
      "path" : "src/util.h",
      "position" : 17,
      "pull_request_review_id" : 127282047,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13168",
      "updated_at" : "2018-06-08T19:09:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194155079",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   }
]
