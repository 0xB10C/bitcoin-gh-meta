[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187007787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187007787"
         }
      },
      "author_association" : "OWNER",
      "body" : "Nice to get rid of these fake opcodes here.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-09T11:18:42Z",
      "diff_hunk" : "@@ -181,13 +181,6 @@ enum opcodetype\n     OP_NOP9 = 0xb8,\n     OP_NOP10 = 0xb9,\n \n-\n-    // template matching params\n-    OP_SMALLINTEGER = 0xfa,\n-    OP_PUBKEYS = 0xfb,\n-    OP_PUBKEYHASH = 0xfd,\n-    OP_PUBKEY = 0xfe,\n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187007787",
      "id" : 187007787,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 10,
      "path" : "src/script/script.h",
      "position" : 10,
      "pull_request_review_id" : 118698664,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187007787",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187057045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187057045"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Souldn't this return false if it's op_0 too? or are 0 required sigs multisigs valid?",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-09T14:22:46Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187057045",
      "id" : 187057045,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 44,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118759073,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187057045",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187058162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187058162"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here, shouldn't OP_0 be invalid here too?\r\nIf 0 is allowed, why not just ```opcode < OP_0 || opcode > OP_16```?",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-09T14:26:06Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187058162",
      "id" : 187058162,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 49,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118759073,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187058162",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076163"
         }
      },
      "author_association" : "MEMBER",
      "body" : "key count can be 0, I think. The only checks in the interpreter I see are for negative numbers.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-09T15:17:38Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076163",
      "id" : 187076163,
      "in_reply_to_id" : 187057045,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 44,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118782864,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076163",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076481"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076481"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Redundant check here? We know the size.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-09T15:18:36Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076481",
      "id" : 187076481,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 15,
      "path" : "src/script/standard.cpp",
      "position" : 15,
      "pull_request_review_id" : 118783270,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076481",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076517"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076517"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Redundant check here? We know the size.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-09T15:18:41Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076517",
      "id" : 187076517,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 19,
      "path" : "src/script/standard.cpp",
      "position" : 19,
      "pull_request_review_id" : 118783304,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076517",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076751"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We could just use proper constants in the lines above for more belt and suspenders.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-09T15:19:18Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076751",
      "id" : 187076751,
      "in_reply_to_id" : 187076517,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 19,
      "path" : "src/script/standard.cpp",
      "position" : 19,
      "pull_request_review_id" : 118783541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076751",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187081361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187081361"
         }
      },
      "author_association" : "OWNER",
      "body" : "OP_0 is 0, OP_1 is 81. They aren't continuous.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-09T15:31:48Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187081361",
      "id" : 187081361,
      "in_reply_to_id" : 187058162,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 49,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118789057,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187081361",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187081525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187081525"
         }
      },
      "author_association" : "OWNER",
      "body" : "`CpubKey::ValidSize` checks the data-dependent size (depending on what the first byte is).",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-09T15:32:15Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187081525",
      "id" : 187081525,
      "in_reply_to_id" : 187076481,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 15,
      "path" : "src/script/standard.cpp",
      "position" : 15,
      "pull_request_review_id" : 118789267,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187081525",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@jtimon Hybrid public keys (the 0x06 and 0x07 ones) are stupid, but were supported by OpenSSL, and because of that they're supported in Bitcoin. Nothing we can do about that.",
      "created_at" : "2018-05-09T15:33:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-387780085",
      "id" : 387780085,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-09T15:33:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387780085",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187082915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187082915"
         }
      },
      "author_association" : "OWNER",
      "body" : "I'm trying to stick to the original logic as close as possible; optimizations / other tweaks can happen later.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-09T15:36:30Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187082915",
      "id" : 187082915,
      "in_reply_to_id" : 187057045,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 44,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118791032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187082915",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "light tACK",
      "created_at" : "2018-05-09T15:46:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-387784444",
      "id" : 387784444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-09T15:46:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387784444",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187304823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187304823"
         }
      },
      "author_association" : "OWNER",
      "body" : "Agree with @sipa here. One step at a time is easier to review.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-10T11:25:22Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187304823",
      "id" : 187304823,
      "in_reply_to_id" : 187057045,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 44,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 119055993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187304823",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187318313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187318313"
         }
      },
      "author_association" : "OWNER",
      "body" : "Shouldn't it check the opcodes here?\r\nOh I guess not, all the push opcodes valid here will return non-empty data, and `CPubKey::ValidSize` rejects empty data.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-10T12:42:42Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187318313",
      "id" : 187318313,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 46,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 119072391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187318313",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187319600"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187319600"
         }
      },
      "author_association" : "OWNER",
      "body" : "An isOP_N(opcode) helper function would make this (and the expression above) slightly better readable.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-10T12:48:38Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187319600",
      "id" : 187319600,
      "in_reply_to_id" : 187058162,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 49,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 119073939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187319600",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187782539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782539"
         }
      },
      "author_association" : "OWNER",
      "body" : "Indeed (that's also what the old code does).",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-12T20:31:47Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187782539",
      "id" : 187782539,
      "in_reply_to_id" : 187318313,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 46,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 119636223,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:31:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782539",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187782556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782556"
         }
      },
      "author_association" : "OWNER",
      "body" : "I added an `IsSmallInteger` function for this (which would be distinct from `IsOP_N` by not accepting `OP_1NEGATE`).",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-12T20:32:25Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187782556",
      "id" : 187782556,
      "in_reply_to_id" : 187058162,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 49,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 119636235,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-12T20:32:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782556",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188485616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188485616"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "CPubKey::PUBLIC_KEY_SIZE == 65, would add clarity",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-16T02:06:18Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188485616",
      "id" : 188485616,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 17,
      "path" : "src/script/standard.cpp",
      "position" : 17,
      "pull_request_review_id" : 120472901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-16T02:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188485616",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188485673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188485673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "CPubKey::COMPRESSED_PUBLIC_KEY_SIZE == 33, would add clarity",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-16T02:06:45Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188485673",
      "id" : 188485673,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 13,
      "path" : "src/script/standard.cpp",
      "position" : 13,
      "pull_request_review_id" : 120472963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-16T02:06:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188485673",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188486083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188486083"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Incidentally, I have #12461 to make these references more succinct.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-16T02:10:46Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188486083",
      "id" : 188486083,
      "in_reply_to_id" : 188485673,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 13,
      "path" : "src/script/standard.cpp",
      "position" : 13,
      "pull_request_review_id" : 120473501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-16T02:10:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188486083",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188489076"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188489076"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See also `IsToKeyID` in compressor.cpp, which looks equivalent.\r\n\r\nCould split this up as `CScript::IsPayToPubkeyHash`, and do the unpacking in `Solver`, ala `IsPayToScriptHash`. Would make the case handling more consistent in Solver.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-16T02:36:58Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n+\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188489076",
      "id" : 188489076,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 24,
      "path" : "src/script/standard.cpp",
      "position" : 24,
      "pull_request_review_id" : 120476804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-16T02:36:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188489076",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188489132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188489132"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See also `IsToPubKey` in compressor, which looks equivalent.",
      "commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-16T02:37:31Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188489132",
      "id" : 188489132,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 5,
      "path" : "src/script/standard.cpp",
      "position" : 5,
      "pull_request_review_id" : 120476867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-16T02:37:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188489132",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK! Much simpler way to handle these 3 cases.",
      "created_at" : "2018-05-16T02:42:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-389377003",
      "id" : 389377003,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-16T02:42:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389377003",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   }
]
