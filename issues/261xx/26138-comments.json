[
   {
      "author_association" : "MEMBER",
      "body" : "`get_connected_peers_info` would only work with Bitcoin Core peers, not mininode peers, so I'd prefer not to make it public",
      "created_at" : "2022-09-21T08:08:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26138#issuecomment-1253353436",
      "id" : 1253353436,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26138",
      "node_id" : "IC_kwDOABII585KtKfc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1253353436/reactions"
      },
      "updated_at" : "2022-09-21T08:08:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1253353436",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I would expect it to break again in the future.\r\n\r\nThe only way I can see it would \"break\" is when you attempt to connect to the same peer twice. In which case the failure is probably wanted. I am not sure if your approach silently dismisses that failure.",
      "created_at" : "2022-09-21T08:10:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26138#issuecomment-1253356285",
      "id" : 1253356285,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26138",
      "node_id" : "IC_kwDOABII585KtLL9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1253356285/reactions"
      },
      "updated_at" : "2022-09-21T08:10:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1253356285",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> get_connected_peers_info would only work with Bitcoin Core peers, not mininode peers, so I'd prefer not to make it public\r\n\r\nGood point, I did not consider that. I've updated the diff (below) to keep it private. Also reduces the diff quite a bit. _(Note: `get_peer_ids()` would benefit from the same list comprehension imo, but not a required change for this to work)_\r\n\r\n> The only way I can see it would \"break\" is when you attempt to connect to the same peer twice. In which case the failure is probably wanted. I am not sure if your approach silently dismisses that failure.\r\n\r\nUpdated to only return `True` if we have exactly 1 connection to `b`, which I think addresses your concern. I don't have any specific ideas of how it would break otherwise, but since `connect_nodes()` doesn't own the nodes, I think it's not unreasonable to assume that the node _may_ update its peers in the background? If without additional complexity we can check that `a` is now connected to `b` and not just to any new node, that seems like a strict improvement to me?\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/test/functional/test_framework/test_framework.py b/test/functional/test_framework/test_framework.py\r\nindex b1164b98f..fa3ddebe3 100755\r\n--- a/test/functional/test_framework/test_framework.py\r\n+++ b/test/functional/test_framework/test_framework.py\r\n@@ -581,8 +581,6 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\r\n     def connect_nodes(self, a, b):\r\n         from_connection = self.nodes[a]\r\n         to_connection = self.nodes[b]\r\n-        from_num_peers = 1 + len(from_connection.getpeerinfo())\r\n-        to_num_peers = 1 + len(to_connection.getpeerinfo())\r\n         ip_port = \"127.0.0.1:\" + str(p2p_port(b))\r\n         from_connection.addnode(ip_port, \"onetry\")\r\n         # poll until version handshake complete to avoid race conditions\r\n@@ -590,10 +588,14 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\r\n         # See comments in net_processing:\r\n         # * Must have a version message before anything else\r\n         # * Must have a verack message before anything else\r\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in from_connection.getpeerinfo()) == from_num_peers)\r\n-        self.wait_until(lambda: sum(peer['version'] != 0 for peer in to_connection.getpeerinfo()) == to_num_peers)\r\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()) == from_num_peers)\r\n-        self.wait_until(lambda: sum(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in to_connection.getpeerinfo()) == to_num_peers)\r\n+        def is_connection_established(from_node: TestNode, to_node: TestNode) -> bool:\r\n+            connected = [peer for peer in from_connection.getpeerinfo() if f\"testnode{b}\" in peer[\"subver\"]]\r\n+            veracked = [peer for peer in connected if peer[\"bytesrecv_per_msg\"].pop('verack', 0) == 24]\r\n+            return len(veracked) == 1\r\n+\r\n+        self.wait_until(lambda: is_connection_established(from_connection, to_connection))\r\n+        self.wait_until(lambda: is_connection_established(to_connection, from_connection))\r\n+\r\n \r\n     def disconnect_nodes(self, a, b):\r\n         def disconnect_nodes_helper(node_a, node_b):\r\n\r\n```\r\n\r\n</details\r\n\r\n",
      "created_at" : "2022-09-22T10:41:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26138#issuecomment-1254847266",
      "id" : 1254847266,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26138",
      "node_id" : "IC_kwDOABII585Ky3Mi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1254847266/reactions"
      },
      "updated_at" : "2022-09-22T10:41:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1254847266",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16545](https://github.com/bitcoin/bitcoin/pull/16545) (refactor: Implement missing error checking for ArgsManager flags by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-09-23T03:19:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26138#issuecomment-1255760944",
      "id" : 1255760944,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26138",
      "node_id" : "IC_kwDOABII585K2WQw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1255760944/reactions"
      },
      "updated_at" : "2022-09-23T03:19:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1255760944",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
