[
   {
      "body" : "As defined in the [bitcoin.org developer documentation](https://bitcoin.org/en/developer-reference#version) a ```verack``` should not be <s>sent</s> processed (at all) before a mutual exchange of ```version``` messages.\r\n\r\nI'm not sure if the linked developer documentation superceeds actual reference client behavior, but it only seems good and proper that all clients must observe this handshake behavior.\r\n\r\nRather than move functionality to where it will activate (because of protocol breach), or queue a ```verack``` message until its *probably* associated ```version``` message arrives, it seems best that client code enforces the correct order? I assume (but have not established for a fact) that this is already the case for Core. \r\n\r\n> Ok, I realize all these examples are the same node, ...\r\n\r\nYour logs show ~~four~~ one peer is misbehaving and reconnecting as <peer> 2, 8, 11 and 4. Do you mean that you have only observed these premature ```verack``` messages on the node whose logs you quote above, or only from that IP address?",
      "created_at" : "2016-08-25T05:09:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8569#issuecomment-242282351",
      "id" : 242282351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8569",
      "updated_at" : "2016-08-26T07:21:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242282351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6916056?v=3",
         "events_url" : "https://api.github.com/users/venzen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/venzen/followers",
         "following_url" : "https://api.github.com/users/venzen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/venzen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/venzen",
         "id" : 6916056,
         "login" : "venzen",
         "organizations_url" : "https://api.github.com/users/venzen/orgs",
         "received_events_url" : "https://api.github.com/users/venzen/received_events",
         "repos_url" : "https://api.github.com/users/venzen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/venzen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/venzen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/venzen"
      }
   },
   {
      "body" : "To simplify my query: What should a node do if a verack (after sending version) is not received during a defined period of time? If nothing, then I think code that runs as a result of a verack should only be code that deals with the verack (which currently, is no code, and so the response to a verack should be the same as the current response to a NOTFOUND message - i.e. nothing).",
      "created_at" : "2016-08-26T06:04:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8569#issuecomment-242637984",
      "id" : 242637984,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8569",
      "updated_at" : "2016-08-26T06:05:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242637984",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "Doesn't the normal receive timeout kick in in that case?\n",
      "created_at" : "2016-08-26T07:17:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8569#issuecomment-242648947",
      "id" : 242648947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8569",
      "updated_at" : "2016-08-26T07:17:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242648947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
