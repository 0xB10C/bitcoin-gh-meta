[
   {
      "body" : "Nice! Concept and utACK. Not tested much, but I don't think behavior should differ at all.\r\n\r\nI wanted to see how compatible this would be to working with the std::filesystem spec, so I tried it out. It's pretty close. The changes needed are here: https://github.com/theuni/bitcoin/commits/filesystem (I didn't attempt to build qt, though). The one outlier is boost::filesystem::path::imbue(). I'm not sure what to do about that, so I left it alone.\r\n\r\nWhen we do our own implementation, it'd be really nice if we could be strictly compatible with std::filesystem, not because we're necessarily moving to it any time soon, but because it gives us a strict api to follow.",
      "created_at" : "2017-03-02T20:05:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9902#issuecomment-283764371",
      "id" : 283764371,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9902",
      "updated_at" : "2017-03-02T20:05:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283764371",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "> The one outlier is boost::filesystem::path::imbue(). I'm not sure what to do about that, so I left it alone.\r\n\r\nFor boost that imbue hack is necessary to get paths with international characters working (on Windows, I believe). Hopefully std will have some other (possibly saner!) way to achieve the same. \r\n\r\n> When we do our own implementation, it'd be really nice if we could be strictly compatible with std::filesystem, not because we're necessarily moving to it any time soon, but because it gives us a strict api to follow.\r\n\r\nYes, `std::filesytem` makes a more sensible target for that than `boost::filesystem`. Although I'm not sure it makes much sense to do our own (general, cross-platform) implementation if it's going to be in the standard library in a few years. Specific implementations for specific sandboxing environments would ofcourse make sense.",
      "created_at" : "2017-03-02T20:39:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9902#issuecomment-283773336",
      "id" : 283773336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9902",
      "updated_at" : "2017-03-03T13:58:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283773336",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Concept ACK. Added to the Boost migration project.",
      "created_at" : "2017-03-03T20:14:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9902#issuecomment-284058899",
      "id" : 284058899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9902",
      "updated_at" : "2017-03-03T20:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/284058899",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/863730?v=3",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
