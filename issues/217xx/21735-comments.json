[
   {
      "author_association" : "MEMBER",
      "body" : "agree that this is aesthetically misleading. to brainstorm,\r\n\r\nwhat do you think about this for when the conditionals are short enough:\r\n```\r\nif (IsThisTrue() || IsThatTrue()) {\r\n        DoThis;\r\n        DoThat;\r\n    }\r\n```\r\n\r\nand this for when they are longer:\r\n```\r\nif (IsThisTrue() \r\n || IsThatTrue()) {\r\n        DoThis;\r\n        DoThat;\r\n    }\r\n\r\n```\r\n",
      "created_at" : "2021-04-20T17:55:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-823483247",
      "id" : 823483247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzQ4MzI0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T17:55:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823483247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yeah, I think single-line if-conditions are already fine. And for multi-line conditions I am looking for something that works with clang-format, ideally. Right now I manually put the opening `{` on a new line, which will be undone the next time I call clang-format.\r\n\r\nOne hack would be to use double `(())` around the condition.\r\n\r\n\r\n```cpp\r\n    if ((nStartTime == Consensus::BIP9Deployment::ALWAYS_ACTIVE ||\r\n         nStartTime == Consensus::BIP9Deployment::NEVER_ACTIVE)) {\r\n        BOOST_CHECK_EQUAL(min_activation_height, 0);\r\n        return;\r\n    }\r\n",
      "created_at" : "2021-04-20T18:50:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-823520331",
      "id" : 823520331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzUyMDMzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T18:50:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823520331",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "For multi-line if conditions I personally prefer this way, where I add newline after first `(` and before last `)`, so that it's better division between last line of condition and first line of code in if block.\r\n```C++\r\n    if (\r\n        nStartTime == Consensus::BIP9Deployment::ALWAYS_ACTIVE ||\r\n        nStartTime == Consensus::BIP9Deployment::NEVER_ACTIVE\r\n    ) {\r\n        BOOST_CHECK_EQUAL(min_activation_height, 0);\r\n        return;\r\n    }\r\n```\r\n\r\nBut have no idea how that works with clang-format.",
      "created_at" : "2021-04-20T19:02:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-823527645",
      "id" : 823527645,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzUyNzY0NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T19:02:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823527645",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "How about placing the boolean operator at the start of the new line:\r\n\r\n```\r\n    if (IsThisTrue()\r\n        || IsThatTrue()) {\r\n        DoThis;\r\n        DoThat;\r\n    }\r\n```\r\n\r\nThis is recommended by the GNU coding standards (https://www.gnu.org/prep/standards/html_node/Formatting.html):\r\n\r\n> When you split an expression into multiple lines, split it before an operator, not after one. Here is the right way:\r\n>\r\n> ```\r\n> if (foo_this_is_long && bar > win (x, y, z)\r\n>     && remaining_condition)\r\n> ```\r\n>\r\n> Try to avoid having two operators of different precedence at the same level of indentation. For example, donât write this:\r\n>\r\n> ```\r\n> mode = (inmode[j] == VOIDmode\r\n>         || GET_MODE_SIZE (outmode[j]) > GET_MODE_SIZE (inmode[j])\r\n>         ? outmode[j] : inmode[j]);\r\n> ```\r\n>\r\n> Instead, use extra parentheses so that the indentation shows the nesting:\r\n>\r\n> ```\r\n> mode = ((inmode[j] == VOIDmode\r\n>          || (GET_MODE_SIZE (outmode[j]) > GET_MODE_SIZE (inmode[j])))\r\n>         ? outmode[j] : inmode[j]);\r\n> ```\r\n>\r\n> [...]\r\n\r\nGoogle C++ standards just say \"When you have a boolean expression that is longer than the standard line length, be consistent in how you break up the lines.\" (https://google.github.io/styleguide/cppguide.html#Boolean_Expressions)\r\n\r\nA bit more discussion here: https://news.ycombinator.com/item?id=7975386",
      "created_at" : "2021-04-26T10:20:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-826712189",
      "id" : 826712189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNjcxMjE4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-26T10:20:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826712189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "That could be set via `BreakBeforeBinaryOperators` in clang-format",
      "created_at" : "2021-04-26T10:35:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-826722697",
      "id" : 826722697,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNjcyMjY5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-26T10:35:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826722697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This is recommended by the GNU coding standards (https://www.gnu.org/prep/standards/html_node/Formatting.html):\r\n\r\nAgree (after first attempting to write things in a way that avoids the need for multi-line conditionals). ",
      "created_at" : "2021-04-26T10:56:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-826737793",
      "id" : 826737793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNjczNzc5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-26T10:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826737793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Has open-brace-on-new-line already been ruled out for multi-line conditions?\r\n\r\n```c++\r\nif (short_condition) trivial_action();\r\n\r\nif (short_condition) {\r\n    complex();\r\n    action();\r\n}\r\n\r\nif (one_complicated_condition\r\n    && another_complicated_condition)\r\n{\r\n    trivial_or_complex_action();\r\n}\r\n```\r\n\r\nSpecifying `BraceWrapping: AfterControlStatement: MultiLine` stops clang-format from undoing that style, I think -- but we'd need to set `ColumnLimit:` to something for it to actually stop you from putting an open brace at the end of a multiline if.",
      "created_at" : "2021-05-13T10:25:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21735#issuecomment-840467432",
      "id" : 840467432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21735",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MDQ2NzQzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-13T10:25:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840467432",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
