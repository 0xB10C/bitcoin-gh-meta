[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r617291541"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617291541"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: Consider doing the filtering (`grep`, `cut`) in Python instead to make the script easier to read and maintain. In the Python code a comment could be added that `:1:` is used to make sure only shebangs on the first line are considered.",
      "commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "created_at" : "2021-04-21T08:01:38Z",
      "diff_hunk" : "@@ -0,0 +1,141 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+This checks that all files in the repository have correct filenames and permissions\n+\"\"\"\n+\n+import os\n+import re\n+import sys\n+from subprocess import check_output\n+\n+CMD_ALL_FILES = \"git ls-files --full-name\"\n+CMD_SOURCE_FILES = 'git ls-files --full-name -- \"*.[cC][pP][pP]\" \"*.[hH]\" \"*.[pP][yY]\" \"*.[sS][hH]\"'\n+CMD_SHEBANG_FILES = \"\"\"git grep --full-name --line-number -I '^#!' | grep :1: | cut -d \":\" -f 1\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r617291541",
      "id" : 617291541,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzI5MTU0MQ==",
      "original_commit_id" : "d0016b1be5b173e3fc70df37d027e5b40f718270",
      "original_line" : 17,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/lint/lint-filenames-permissions.py",
      "position" : null,
      "pull_request_review_id" : 640741290,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-22T02:59:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617291541",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r617292317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617292317"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: `file` is a Python builtin. Consider using `filename/filenames` instead of `file/files` :)",
      "commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "created_at" : "2021-04-21T08:02:51Z",
      "diff_hunk" : "@@ -0,0 +1,141 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+This checks that all files in the repository have correct filenames and permissions\n+\"\"\"\n+\n+import os\n+import re\n+import sys\n+from subprocess import check_output\n+\n+CMD_ALL_FILES = \"git ls-files --full-name\"\n+CMD_SOURCE_FILES = 'git ls-files --full-name -- \"*.[cC][pP][pP]\" \"*.[hH]\" \"*.[pP][yY]\" \"*.[sS][hH]\"'\n+CMD_SHEBANG_FILES = \"\"\"git grep --full-name --line-number -I '^#!' | grep :1: | cut -d \":\" -f 1\"\"\"\n+ALLOWED_FILENAME_REGEXP = \"^[a-zA-Z0-9/_.@][a-zA-Z0-9/_.@-]*$\"\n+ALLOWED_SOURCE_FILENAME_REGEXP = \"^[a-z0-9_./-]+$\"\n+ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP = (\n+    \"^src/(secp256k1/|univalue/|test/fuzz/FuzzedDataProvider.h)\"\n+)\n+ALLOWED_PERMISSION_NON_EXECUTABLES = 644\n+ALLOWED_PERMISSION_EXECUTABLES = 755\n+ALLOWED_EXECUTABLE_SHEBANG = {\n+    \"py\": [b\"#!/usr/bin/env python3\"],\n+    \"sh\": [b\"#!/usr/bin/env bash\", b\"#!/bin/sh\"],\n+}\n+\n+\n+def check_all_filenames():\n+    \"\"\"\n+    Checks every file in the repository against an allowed regexp to make sure only lowercase or uppercase\n+    alphanumerics (a-zA-Z0-9), underscores (_), hyphens (-), at (@) and dots (.) are used in repository filenames.\n+    \"\"\"\n+    files = check_output(CMD_ALL_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    filename_regex = re.compile(ALLOWED_FILENAME_REGEXP)\n+    exit_code = 0\n+    for file in files:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r617292317",
      "id" : 617292317,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzI5MjMxNw==",
      "original_commit_id" : "d0016b1be5b173e3fc70df37d027e5b40f718270",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/lint/lint-filenames-permissions.py",
      "position" : null,
      "pull_request_review_id" : 640741290,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-22T02:59:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617292317",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r617297965"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617297965"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This requirement holds for shebang files that expected to be executed directly.\r\n\r\nTo avoid this requirement for files that are not expected to be excluded directly but still have shebangs consider adding exclusions for:\r\n* `*.py` files that do not contain `if __name__ == '__main__':` or `if __name__ == \"__main__\":`: these are typically modules that are not expected to be executed directly.\r\n* `*.bash` files: these are typically expected to be sourced and not executed directly.\r\n\r\nIt could be argued that shebangs should be removed from these types of files, but I think shebangs could still be useful to allow for language/dialect auto-detection in editors, `shellcheck`, etc.",
      "commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "created_at" : "2021-04-21T08:10:48Z",
      "diff_hunk" : "@@ -0,0 +1,141 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+This checks that all files in the repository have correct filenames and permissions\n+\"\"\"\n+\n+import os\n+import re\n+import sys\n+from subprocess import check_output\n+\n+CMD_ALL_FILES = \"git ls-files --full-name\"\n+CMD_SOURCE_FILES = 'git ls-files --full-name -- \"*.[cC][pP][pP]\" \"*.[hH]\" \"*.[pP][yY]\" \"*.[sS][hH]\"'\n+CMD_SHEBANG_FILES = \"\"\"git grep --full-name --line-number -I '^#!' | grep :1: | cut -d \":\" -f 1\"\"\"\n+ALLOWED_FILENAME_REGEXP = \"^[a-zA-Z0-9/_.@][a-zA-Z0-9/_.@-]*$\"\n+ALLOWED_SOURCE_FILENAME_REGEXP = \"^[a-z0-9_./-]+$\"\n+ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP = (\n+    \"^src/(secp256k1/|univalue/|test/fuzz/FuzzedDataProvider.h)\"\n+)\n+ALLOWED_PERMISSION_NON_EXECUTABLES = 644\n+ALLOWED_PERMISSION_EXECUTABLES = 755\n+ALLOWED_EXECUTABLE_SHEBANG = {\n+    \"py\": [b\"#!/usr/bin/env python3\"],\n+    \"sh\": [b\"#!/usr/bin/env bash\", b\"#!/bin/sh\"],\n+}\n+\n+\n+def check_all_filenames():\n+    \"\"\"\n+    Checks every file in the repository against an allowed regexp to make sure only lowercase or uppercase\n+    alphanumerics (a-zA-Z0-9), underscores (_), hyphens (-), at (@) and dots (.) are used in repository filenames.\n+    \"\"\"\n+    files = check_output(CMD_ALL_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    filename_regex = re.compile(ALLOWED_FILENAME_REGEXP)\n+    exit_code = 0\n+    for file in files:\n+        if not filename_regex.match(file):\n+            print(\n+                f\"\"\"File \"{file}\" does not not match the allowed filename regexp ('{ALLOWED_FILENAME_REGEXP}').\"\"\"\n+            )\n+            exit_code = 1\n+    return exit_code\n+\n+\n+def check_source_filenames():\n+    \"\"\"\n+    Checks only source files (*.cpp, *.h, *.py, *.sh) against a stricter allowed regexp to make sure only lowercase\n+    alphanumerics (a-z0-9), underscores (_), hyphens (-) and dots (.) are used in source code filenames.\n+\n+    Additionally there is an exception regexp for directories or files which are excepted from matching this regexp.\n+    \"\"\"\n+    files = check_output(CMD_SOURCE_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    filename_regex = re.compile(ALLOWED_SOURCE_FILENAME_REGEXP)\n+    filename_exception_regex = re.compile(ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP)\n+    exit_code = 0\n+    for file in files:\n+        if not filename_regex.match(file) and not filename_exception_regex.match(file):\n+            print(\n+                f\"\"\"File \"{file}\" does not not match the allowed source filename regexp ('{ALLOWED_SOURCE_FILENAME_REGEXP}'), or the exception regexp ({ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP}).\"\"\"\n+            )\n+            exit_code = 1\n+    return exit_code\n+\n+\n+def check_all_file_permissions():\n+    \"\"\"\n+    Checks all files in the repository match an allowed executable or non-executable file permission octal.\n+\n+    Additionally checks that for executable files, the file contains a shebang line\n+    \"\"\"\n+    files = check_output(CMD_ALL_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    exit_code = 0\n+    for file in files:\n+        file_extension = os.path.splitext(file)[1].strip(\".\")\n+        file_perms = int(oct(os.stat(file).st_mode)[-3:])\n+\n+        if file_perms == ALLOWED_PERMISSION_EXECUTABLES:\n+            shebang = open(file, \"rb\").readline().strip()\n+\n+            # For any file with executable permissions the first line must contain a shebang\n+            if shebang[:2] != b\"#!\":\n+                print(\n+                    f\"\"\"File \"{file}\" has permission {ALLOWED_PERMISSION_EXECUTABLES} (executable) and is thus expected to contain a shebang '#!'. Add shebang or do \"chmod {ALLOWED_PERMISSION_NON_EXECUTABLES} {file}\" to make it non-executable.\"\"\"\n+                )\n+                exit_code = 1\n+\n+            # For certain file extensions that have been defined, we also check that the shebang conforms to a specific\n+            # allowable set of shebangs\n+            if file_extension in ALLOWED_EXECUTABLE_SHEBANG.keys():\n+                if shebang not in ALLOWED_EXECUTABLE_SHEBANG[file_extension]:\n+                    print(\n+                        f\"\"\"File \"{file}\" is missing expected shebang \"\"\"\n+                        + \" or \".join(\n+                            [x.decode(\"utf-8\") for x in ALLOWED_EXECUTABLE_SHEBANG[file_extension]]\n+                        )\n+                    )\n+\n+        elif file_perms == ALLOWED_PERMISSION_NON_EXECUTABLES:\n+            continue\n+        else:\n+            print(\n+                f\"\"\"File '{file}' has unexpected permission {file_perms}. Do \"chmod {ALLOWED_PERMISSION_NON_EXECUTABLES} {file}\" (if non-executable) or \"chmod {ALLOWED_PERMISSION_EXECUTABLES} {file}\" (if executable).\"\"\"\n+            )\n+            exit_code = 1\n+\n+    return exit_code\n+\n+\n+def check_shebang_file_permissions():\n+    \"\"\"\n+    Checks every file that contains a shebang line to ensure it has an executable permission\n+    \"\"\"\n+    files = check_output(CMD_SHEBANG_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    exit_code = 0\n+    for file in files:\n+        file_perms = int(oct(os.stat(file).st_mode)[-3:])\n+        if file_perms != ALLOWED_PERMISSION_EXECUTABLES:\n+            print(\n+                f\"\"\"File \"{file}\" contains a shebang line, but has the file permission {file_perms} instead of the expected executable permission {ALLOWED_PERMISSION_EXECUTABLES}. Do \"chmod {ALLOWED_PERMISSION_EXECUTABLES} {file}\" (or remove the shebang line).\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r617297965",
      "id" : 617297965,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzI5Nzk2NQ==",
      "original_commit_id" : "d0016b1be5b173e3fc70df37d027e5b40f718270",
      "original_line" : 122,
      "original_position" : 122,
      "original_start_line" : null,
      "path" : "test/lint/lint-filenames-permissions.py",
      "position" : null,
      "pull_request_review_id" : 640741290,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-22T02:59:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617297965",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21515 (Erlay: bandwidth-efficient transaction relay protocol by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-04-21T17:33:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-824235661",
      "id" : 824235661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNDIzNTY2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-21T17:33:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/824235661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618047414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618047414"
         }
      },
      "author_association" : "NONE",
      "body" : "updated to move the filtering into python :)",
      "commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "created_at" : "2021-04-22T03:03:05Z",
      "diff_hunk" : "@@ -0,0 +1,141 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+This checks that all files in the repository have correct filenames and permissions\n+\"\"\"\n+\n+import os\n+import re\n+import sys\n+from subprocess import check_output\n+\n+CMD_ALL_FILES = \"git ls-files --full-name\"\n+CMD_SOURCE_FILES = 'git ls-files --full-name -- \"*.[cC][pP][pP]\" \"*.[hH]\" \"*.[pP][yY]\" \"*.[sS][hH]\"'\n+CMD_SHEBANG_FILES = \"\"\"git grep --full-name --line-number -I '^#!' | grep :1: | cut -d \":\" -f 1\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618047414",
      "id" : 618047414,
      "in_reply_to_id" : 617291541,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODA0NzQxNA==",
      "original_commit_id" : "d0016b1be5b173e3fc70df37d027e5b40f718270",
      "original_line" : 17,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/lint/lint-filenames-permissions.py",
      "position" : null,
      "pull_request_review_id" : 641739593,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-22T03:03:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618047414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8359865?v=4",
         "events_url" : "https://api.github.com/users/windsok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/windsok/followers",
         "following_url" : "https://api.github.com/users/windsok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/windsok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/windsok",
         "id" : 8359865,
         "login" : "windsok",
         "node_id" : "MDQ6VXNlcjgzNTk4NjU=",
         "organizations_url" : "https://api.github.com/users/windsok/orgs",
         "received_events_url" : "https://api.github.com/users/windsok/received_events",
         "repos_url" : "https://api.github.com/users/windsok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/windsok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/windsok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/windsok"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618047440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618047440"
         }
      },
      "author_association" : "NONE",
      "body" : "good call, updated",
      "commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "created_at" : "2021-04-22T03:03:12Z",
      "diff_hunk" : "@@ -0,0 +1,141 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+This checks that all files in the repository have correct filenames and permissions\n+\"\"\"\n+\n+import os\n+import re\n+import sys\n+from subprocess import check_output\n+\n+CMD_ALL_FILES = \"git ls-files --full-name\"\n+CMD_SOURCE_FILES = 'git ls-files --full-name -- \"*.[cC][pP][pP]\" \"*.[hH]\" \"*.[pP][yY]\" \"*.[sS][hH]\"'\n+CMD_SHEBANG_FILES = \"\"\"git grep --full-name --line-number -I '^#!' | grep :1: | cut -d \":\" -f 1\"\"\"\n+ALLOWED_FILENAME_REGEXP = \"^[a-zA-Z0-9/_.@][a-zA-Z0-9/_.@-]*$\"\n+ALLOWED_SOURCE_FILENAME_REGEXP = \"^[a-z0-9_./-]+$\"\n+ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP = (\n+    \"^src/(secp256k1/|univalue/|test/fuzz/FuzzedDataProvider.h)\"\n+)\n+ALLOWED_PERMISSION_NON_EXECUTABLES = 644\n+ALLOWED_PERMISSION_EXECUTABLES = 755\n+ALLOWED_EXECUTABLE_SHEBANG = {\n+    \"py\": [b\"#!/usr/bin/env python3\"],\n+    \"sh\": [b\"#!/usr/bin/env bash\", b\"#!/bin/sh\"],\n+}\n+\n+\n+def check_all_filenames():\n+    \"\"\"\n+    Checks every file in the repository against an allowed regexp to make sure only lowercase or uppercase\n+    alphanumerics (a-zA-Z0-9), underscores (_), hyphens (-), at (@) and dots (.) are used in repository filenames.\n+    \"\"\"\n+    files = check_output(CMD_ALL_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    filename_regex = re.compile(ALLOWED_FILENAME_REGEXP)\n+    exit_code = 0\n+    for file in files:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618047440",
      "id" : 618047440,
      "in_reply_to_id" : 617292317,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODA0NzQ0MA==",
      "original_commit_id" : "d0016b1be5b173e3fc70df37d027e5b40f718270",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/lint/lint-filenames-permissions.py",
      "position" : null,
      "pull_request_review_id" : 641739621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-22T03:03:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618047440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8359865?v=4",
         "events_url" : "https://api.github.com/users/windsok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/windsok/followers",
         "following_url" : "https://api.github.com/users/windsok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/windsok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/windsok",
         "id" : 8359865,
         "login" : "windsok",
         "node_id" : "MDQ6VXNlcjgzNTk4NjU=",
         "organizations_url" : "https://api.github.com/users/windsok/orgs",
         "received_events_url" : "https://api.github.com/users/windsok/received_events",
         "repos_url" : "https://api.github.com/users/windsok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/windsok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/windsok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/windsok"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618048302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618048302"
         }
      },
      "author_association" : "NONE",
      "body" : "Updated. I wonder if some other file types should also be skipped along with `*bash`? I notice the test is failing for some files like `contrib/init/bitcoind.init`, `contrib/init/bitcoind.openrc`, `contrib/devtools/split-debug.sh.in` and I'm thinking they might fit into the same category of files which are sourced but not executed?\r\n\r\nThere is also quite a few `.sh` files in `ci/test/` like `ci/test/00_setup_env_android.sh` which fail the test, but I'm not sure if those really should be forced to be executable or not?\r\n\r\nThanks very much for the initial review and feedback :) ",
      "commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "created_at" : "2021-04-22T03:06:12Z",
      "diff_hunk" : "@@ -0,0 +1,141 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+This checks that all files in the repository have correct filenames and permissions\n+\"\"\"\n+\n+import os\n+import re\n+import sys\n+from subprocess import check_output\n+\n+CMD_ALL_FILES = \"git ls-files --full-name\"\n+CMD_SOURCE_FILES = 'git ls-files --full-name -- \"*.[cC][pP][pP]\" \"*.[hH]\" \"*.[pP][yY]\" \"*.[sS][hH]\"'\n+CMD_SHEBANG_FILES = \"\"\"git grep --full-name --line-number -I '^#!' | grep :1: | cut -d \":\" -f 1\"\"\"\n+ALLOWED_FILENAME_REGEXP = \"^[a-zA-Z0-9/_.@][a-zA-Z0-9/_.@-]*$\"\n+ALLOWED_SOURCE_FILENAME_REGEXP = \"^[a-z0-9_./-]+$\"\n+ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP = (\n+    \"^src/(secp256k1/|univalue/|test/fuzz/FuzzedDataProvider.h)\"\n+)\n+ALLOWED_PERMISSION_NON_EXECUTABLES = 644\n+ALLOWED_PERMISSION_EXECUTABLES = 755\n+ALLOWED_EXECUTABLE_SHEBANG = {\n+    \"py\": [b\"#!/usr/bin/env python3\"],\n+    \"sh\": [b\"#!/usr/bin/env bash\", b\"#!/bin/sh\"],\n+}\n+\n+\n+def check_all_filenames():\n+    \"\"\"\n+    Checks every file in the repository against an allowed regexp to make sure only lowercase or uppercase\n+    alphanumerics (a-zA-Z0-9), underscores (_), hyphens (-), at (@) and dots (.) are used in repository filenames.\n+    \"\"\"\n+    files = check_output(CMD_ALL_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    filename_regex = re.compile(ALLOWED_FILENAME_REGEXP)\n+    exit_code = 0\n+    for file in files:\n+        if not filename_regex.match(file):\n+            print(\n+                f\"\"\"File \"{file}\" does not not match the allowed filename regexp ('{ALLOWED_FILENAME_REGEXP}').\"\"\"\n+            )\n+            exit_code = 1\n+    return exit_code\n+\n+\n+def check_source_filenames():\n+    \"\"\"\n+    Checks only source files (*.cpp, *.h, *.py, *.sh) against a stricter allowed regexp to make sure only lowercase\n+    alphanumerics (a-z0-9), underscores (_), hyphens (-) and dots (.) are used in source code filenames.\n+\n+    Additionally there is an exception regexp for directories or files which are excepted from matching this regexp.\n+    \"\"\"\n+    files = check_output(CMD_SOURCE_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    filename_regex = re.compile(ALLOWED_SOURCE_FILENAME_REGEXP)\n+    filename_exception_regex = re.compile(ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP)\n+    exit_code = 0\n+    for file in files:\n+        if not filename_regex.match(file) and not filename_exception_regex.match(file):\n+            print(\n+                f\"\"\"File \"{file}\" does not not match the allowed source filename regexp ('{ALLOWED_SOURCE_FILENAME_REGEXP}'), or the exception regexp ({ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP}).\"\"\"\n+            )\n+            exit_code = 1\n+    return exit_code\n+\n+\n+def check_all_file_permissions():\n+    \"\"\"\n+    Checks all files in the repository match an allowed executable or non-executable file permission octal.\n+\n+    Additionally checks that for executable files, the file contains a shebang line\n+    \"\"\"\n+    files = check_output(CMD_ALL_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    exit_code = 0\n+    for file in files:\n+        file_extension = os.path.splitext(file)[1].strip(\".\")\n+        file_perms = int(oct(os.stat(file).st_mode)[-3:])\n+\n+        if file_perms == ALLOWED_PERMISSION_EXECUTABLES:\n+            shebang = open(file, \"rb\").readline().strip()\n+\n+            # For any file with executable permissions the first line must contain a shebang\n+            if shebang[:2] != b\"#!\":\n+                print(\n+                    f\"\"\"File \"{file}\" has permission {ALLOWED_PERMISSION_EXECUTABLES} (executable) and is thus expected to contain a shebang '#!'. Add shebang or do \"chmod {ALLOWED_PERMISSION_NON_EXECUTABLES} {file}\" to make it non-executable.\"\"\"\n+                )\n+                exit_code = 1\n+\n+            # For certain file extensions that have been defined, we also check that the shebang conforms to a specific\n+            # allowable set of shebangs\n+            if file_extension in ALLOWED_EXECUTABLE_SHEBANG.keys():\n+                if shebang not in ALLOWED_EXECUTABLE_SHEBANG[file_extension]:\n+                    print(\n+                        f\"\"\"File \"{file}\" is missing expected shebang \"\"\"\n+                        + \" or \".join(\n+                            [x.decode(\"utf-8\") for x in ALLOWED_EXECUTABLE_SHEBANG[file_extension]]\n+                        )\n+                    )\n+\n+        elif file_perms == ALLOWED_PERMISSION_NON_EXECUTABLES:\n+            continue\n+        else:\n+            print(\n+                f\"\"\"File '{file}' has unexpected permission {file_perms}. Do \"chmod {ALLOWED_PERMISSION_NON_EXECUTABLES} {file}\" (if non-executable) or \"chmod {ALLOWED_PERMISSION_EXECUTABLES} {file}\" (if executable).\"\"\"\n+            )\n+            exit_code = 1\n+\n+    return exit_code\n+\n+\n+def check_shebang_file_permissions():\n+    \"\"\"\n+    Checks every file that contains a shebang line to ensure it has an executable permission\n+    \"\"\"\n+    files = check_output(CMD_SHEBANG_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    exit_code = 0\n+    for file in files:\n+        file_perms = int(oct(os.stat(file).st_mode)[-3:])\n+        if file_perms != ALLOWED_PERMISSION_EXECUTABLES:\n+            print(\n+                f\"\"\"File \"{file}\" contains a shebang line, but has the file permission {file_perms} instead of the expected executable permission {ALLOWED_PERMISSION_EXECUTABLES}. Do \"chmod {ALLOWED_PERMISSION_EXECUTABLES} {file}\" (or remove the shebang line).\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618048302",
      "id" : 618048302,
      "in_reply_to_id" : 617297965,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODA0ODMwMg==",
      "original_commit_id" : "d0016b1be5b173e3fc70df37d027e5b40f718270",
      "original_line" : 122,
      "original_position" : 122,
      "original_start_line" : null,
      "path" : "test/lint/lint-filenames-permissions.py",
      "position" : null,
      "pull_request_review_id" : 641740601,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-22T03:06:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618048302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8359865?v=4",
         "events_url" : "https://api.github.com/users/windsok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/windsok/followers",
         "following_url" : "https://api.github.com/users/windsok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/windsok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/windsok",
         "id" : 8359865,
         "login" : "windsok",
         "node_id" : "MDQ6VXNlcjgzNTk4NjU=",
         "organizations_url" : "https://api.github.com/users/windsok/orgs",
         "received_events_url" : "https://api.github.com/users/windsok/received_events",
         "repos_url" : "https://api.github.com/users/windsok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/windsok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/windsok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/windsok"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618483138"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618483138"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I wonder is `\"\"\"` required here or would `\"` suffice?",
      "commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "created_at" : "2021-04-22T15:00:47Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+This checks that all files in the repository have correct filenames and permissions\n+\"\"\"\n+\n+import os\n+import re\n+import sys\n+from subprocess import check_output\n+\n+CMD_ALL_FILES = \"git ls-files --full-name\"\n+CMD_SOURCE_FILES = 'git ls-files --full-name -- \"*.[cC][pP][pP]\" \"*.[hH]\" \"*.[pP][yY]\" \"*.[sS][hH]\"'\n+CMD_SHEBANG_FILES = \"\"\"git grep --full-name --line-number -I '^#!'\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618483138",
      "id" : 618483138,
      "line" : 17,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODQ4MzEzOA==",
      "original_commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "original_line" : 17,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/lint/lint-filenames-permissions.py",
      "position" : 17,
      "pull_request_review_id" : 642314272,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-22T15:00:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618483138",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618511312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618511312"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Out of curiosity: Would it make sense to replace `strip()` with `rstrip()` (https://docs.python.org/3/library/stdtypes.html?highlight=rstrip#str.rstrip)?\r\n\r\nJust for fun: There is still one very specific case where this does not work (I hope I'm not missing something): You can add a file like this `git add test/util/zzz.py  ` (note the trailing whitespace) and `strip()` will make sure that `test/util/zzz.py` will be processed and not `test/util/zzz.py  `. I think your code is fine but if it can be improved wrt robustness I'm all in (possibly split first and remove trailing empty entries?)",
      "commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "created_at" : "2021-04-22T15:34:14Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+This checks that all files in the repository have correct filenames and permissions\n+\"\"\"\n+\n+import os\n+import re\n+import sys\n+from subprocess import check_output\n+\n+CMD_ALL_FILES = \"git ls-files --full-name\"\n+CMD_SOURCE_FILES = 'git ls-files --full-name -- \"*.[cC][pP][pP]\" \"*.[hH]\" \"*.[pP][yY]\" \"*.[sS][hH]\"'\n+CMD_SHEBANG_FILES = \"\"\"git grep --full-name --line-number -I '^#!'\"\"\"\n+ALLOWED_FILENAME_REGEXP = \"^[a-zA-Z0-9/_.@][a-zA-Z0-9/_.@-]*$\"\n+ALLOWED_SOURCE_FILENAME_REGEXP = \"^[a-z0-9_./-]+$\"\n+ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP = (\n+    \"^src/(secp256k1/|univalue/|test/fuzz/FuzzedDataProvider.h)\"\n+)\n+ALLOWED_PERMISSION_NON_EXECUTABLES = 644\n+ALLOWED_PERMISSION_EXECUTABLES = 755\n+ALLOWED_EXECUTABLE_SHEBANG = {\n+    \"py\": [b\"#!/usr/bin/env python3\"],\n+    \"sh\": [b\"#!/usr/bin/env bash\", b\"#!/bin/sh\"],\n+}\n+\n+\n+def check_all_filenames():\n+    \"\"\"\n+    Checks every file in the repository against an allowed regexp to make sure only lowercase or uppercase\n+    alphanumerics (a-zA-Z0-9), underscores (_), hyphens (-), at (@) and dots (.) are used in repository filenames.\n+    \"\"\"\n+    filenames = check_output(CMD_ALL_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    filename_regex = re.compile(ALLOWED_FILENAME_REGEXP)\n+    exit_code = 0\n+    for filename in filenames:\n+        if not filename_regex.match(filename):\n+            print(\n+                f\"\"\"File \"{filename}\" does not not match the allowed filename regexp ('{ALLOWED_FILENAME_REGEXP}').\"\"\"\n+            )\n+            exit_code = 1\n+    return exit_code\n+\n+\n+def check_source_filenames():\n+    \"\"\"\n+    Checks only source files (*.cpp, *.h, *.py, *.sh) against a stricter allowed regexp to make sure only lowercase\n+    alphanumerics (a-z0-9), underscores (_), hyphens (-) and dots (.) are used in source code filenames.\n+\n+    Additionally there is an exception regexp for directories or files which are excepted from matching this regexp.\n+    \"\"\"\n+    filenames = check_output(CMD_SOURCE_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618511312",
      "id" : 618511312,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODUxMTMxMg==",
      "original_commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "original_line" : 55,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "test/lint/lint-filenames-permissions.py",
      "position" : 55,
      "pull_request_review_id" : 642353320,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-22T15:34:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618511312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618527730"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618527730"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I believe the `strip()` here is not correct. I don't think that you can put whitespace before shebang. \r\n\r\nIt's a question whether one should allow whitespace after shebank AFAIK it's allowed but ... It may be for the best simply remove `.strip()`.\r\n\r\nJust for fun: https://unix.stackexchange.com/questions/276751/is-space-allowed-between-and-bin-bash-in-shebang",
      "commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "created_at" : "2021-04-22T15:54:09Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+This checks that all files in the repository have correct filenames and permissions\n+\"\"\"\n+\n+import os\n+import re\n+import sys\n+from subprocess import check_output\n+\n+CMD_ALL_FILES = \"git ls-files --full-name\"\n+CMD_SOURCE_FILES = 'git ls-files --full-name -- \"*.[cC][pP][pP]\" \"*.[hH]\" \"*.[pP][yY]\" \"*.[sS][hH]\"'\n+CMD_SHEBANG_FILES = \"\"\"git grep --full-name --line-number -I '^#!'\"\"\"\n+ALLOWED_FILENAME_REGEXP = \"^[a-zA-Z0-9/_.@][a-zA-Z0-9/_.@-]*$\"\n+ALLOWED_SOURCE_FILENAME_REGEXP = \"^[a-z0-9_./-]+$\"\n+ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP = (\n+    \"^src/(secp256k1/|univalue/|test/fuzz/FuzzedDataProvider.h)\"\n+)\n+ALLOWED_PERMISSION_NON_EXECUTABLES = 644\n+ALLOWED_PERMISSION_EXECUTABLES = 755\n+ALLOWED_EXECUTABLE_SHEBANG = {\n+    \"py\": [b\"#!/usr/bin/env python3\"],\n+    \"sh\": [b\"#!/usr/bin/env bash\", b\"#!/bin/sh\"],\n+}\n+\n+\n+def check_all_filenames():\n+    \"\"\"\n+    Checks every file in the repository against an allowed regexp to make sure only lowercase or uppercase\n+    alphanumerics (a-zA-Z0-9), underscores (_), hyphens (-), at (@) and dots (.) are used in repository filenames.\n+    \"\"\"\n+    filenames = check_output(CMD_ALL_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    filename_regex = re.compile(ALLOWED_FILENAME_REGEXP)\n+    exit_code = 0\n+    for filename in filenames:\n+        if not filename_regex.match(filename):\n+            print(\n+                f\"\"\"File \"{filename}\" does not not match the allowed filename regexp ('{ALLOWED_FILENAME_REGEXP}').\"\"\"\n+            )\n+            exit_code = 1\n+    return exit_code\n+\n+\n+def check_source_filenames():\n+    \"\"\"\n+    Checks only source files (*.cpp, *.h, *.py, *.sh) against a stricter allowed regexp to make sure only lowercase\n+    alphanumerics (a-z0-9), underscores (_), hyphens (-) and dots (.) are used in source code filenames.\n+\n+    Additionally there is an exception regexp for directories or files which are excepted from matching this regexp.\n+    \"\"\"\n+    filenames = check_output(CMD_SOURCE_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    filename_regex = re.compile(ALLOWED_SOURCE_FILENAME_REGEXP)\n+    filename_exception_regex = re.compile(ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP)\n+    exit_code = 0\n+    for filename in filenames:\n+        if not filename_regex.match(filename) and not filename_exception_regex.match(filename):\n+            print(\n+                f\"\"\"File \"{filename}\" does not not match the allowed source filename regexp ('{ALLOWED_SOURCE_FILENAME_REGEXP}'), or the exception regexp ({ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP}).\"\"\"\n+            )\n+            exit_code = 1\n+    return exit_code\n+\n+\n+def check_all_file_permissions():\n+    \"\"\"\n+    Checks all files in the repository match an allowed executable or non-executable file permission octal.\n+\n+    Additionally checks that for executable files, the file contains a shebang line\n+    \"\"\"\n+    filenames = check_output(CMD_ALL_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    exit_code = 0\n+    for filename in filenames:\n+        file_extension = os.path.splitext(filename)[1].strip(\".\")\n+        file_perms = int(oct(os.stat(filename).st_mode)[-3:])\n+\n+        if file_perms == ALLOWED_PERMISSION_EXECUTABLES:\n+            shebang = open(filename, \"rb\").readline().strip()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618527730",
      "id" : 618527730,
      "line" : 81,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODUyNzczMA==",
      "original_commit_id" : "886315ff36730db6da1cf97b0af0fc66b11e0585",
      "original_line" : 81,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "test/lint/lint-filenames-permissions.py",
      "position" : 81,
      "pull_request_review_id" : 642375513,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21740",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-22T15:54:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618527730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   }
]
