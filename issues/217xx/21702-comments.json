[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19438 (Introduce deploymentstatus by ajtowns)\n* #13533 ([tests] Reduced number of validations in tx_validationcache_tests by lucash-dev)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-04-15T19:24:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21702#issuecomment-820676054",
      "id" : 820676054,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMDY3NjA1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-19T04:02:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820676054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "concept ACK.",
      "created_at" : "2021-04-19T15:54:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21702#issuecomment-822579606",
      "id" : 822579606,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21702",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMjU3OTYwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-19T15:54:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822579606",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13668451?v=4",
         "events_url" : "https://api.github.com/users/rn-g/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rn-g/followers",
         "following_url" : "https://api.github.com/users/rn-g/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rn-g/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rn-g",
         "id" : 13668451,
         "login" : "rn-g",
         "node_id" : "MDQ6VXNlcjEzNjY4NDUx",
         "organizations_url" : "https://api.github.com/users/rn-g/orgs",
         "received_events_url" : "https://api.github.com/users/rn-g/received_events",
         "repos_url" : "https://api.github.com/users/rn-g/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rn-g/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rn-g/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rn-g"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616625177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616625177"
         }
      },
      "author_association" : "NONE",
      "body" : "As the TODO says, should be improved",
      "commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "created_at" : "2021-04-20T12:15:07Z",
      "diff_hunk" : "@@ -1433,6 +1513,9 @@ void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut>&& spent\n     // Determine which precomputation-impacting features this transaction uses.\n     bool uses_bip143_segwit = false;\n     bool uses_bip341_taproot = false;\n+    // TODO: Improve this heuristic\n+    bool uses_bip119_ctv = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616625177",
      "id" : 616625177,
      "line" : 1517,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjYyNTE3Nw==",
      "original_commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "original_line" : 1517,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 111,
      "pull_request_review_id" : 639871313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-20T12:15:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616625177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9665963?v=4",
         "events_url" : "https://api.github.com/users/pyskell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pyskell/followers",
         "following_url" : "https://api.github.com/users/pyskell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pyskell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pyskell",
         "id" : 9665963,
         "login" : "pyskell",
         "node_id" : "MDQ6VXNlcjk2NjU5NjM=",
         "organizations_url" : "https://api.github.com/users/pyskell/orgs",
         "received_events_url" : "https://api.github.com/users/pyskell/received_events",
         "repos_url" : "https://api.github.com/users/pyskell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pyskell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pyskell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pyskell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616625350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616625350"
         }
      },
      "author_association" : "NONE",
      "body" : "Can this assert just be moved to the start of the function?",
      "commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "created_at" : "2021-04-20T12:15:19Z",
      "diff_hunk" : "@@ -1804,6 +1905,30 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n     return true;\n }\n \n+template <class T>\n+bool GenericTransactionSignatureChecker<T>::CheckStandardTemplateHash(const std::vector<unsigned char>& hash) const\n+{\n+    // Should already be checked before calling...\n+    assert(hash.size() == 32);\n+    if (txdata && txdata->m_bip119_ctv_ready) {\n+        // if nIn == 0, then we've already cached this and can directly check\n+        if (nIn == 0) {\n+            return std::equal(txdata->m_standard_template_single_hash.begin(), txdata->m_standard_template_single_hash.end(), hash.data());\n+        } else {\n+            // otherwise we still have *most* of the hash cached,\n+            // so just re-compute the correct one and compare\n+            assert(txTo != nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616625350",
      "id" : 616625350,
      "line" : 1920,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjYyNTM1MA==",
      "original_commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "original_line" : 1920,
      "original_position" : 179,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 179,
      "pull_request_review_id" : 639871498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-20T12:15:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616625350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9665963?v=4",
         "events_url" : "https://api.github.com/users/pyskell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pyskell/followers",
         "following_url" : "https://api.github.com/users/pyskell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pyskell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pyskell",
         "id" : 9665963,
         "login" : "pyskell",
         "node_id" : "MDQ6VXNlcjk2NjU5NjM=",
         "organizations_url" : "https://api.github.com/users/pyskell/orgs",
         "received_events_url" : "https://api.github.com/users/pyskell/received_events",
         "repos_url" : "https://api.github.com/users/pyskell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pyskell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pyskell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pyskell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616627150"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616627150"
         }
      },
      "author_association" : "NONE",
      "body" : "Minor bike shedding but \"Basic Standard\" and \"Standard Template\" are somewhat confusing terms. Are there non-standard templates?",
      "commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "created_at" : "2021-04-20T12:17:36Z",
      "diff_hunk" : "@@ -198,6 +198,13 @@ unsigned int CScript::GetSigOpCount(const CScript& scriptSig) const\n     return subscript.GetSigOpCount(true);\n }\n \n+bool CScript::IsPayToBasicStandardTemplate() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616627150",
      "id" : 616627150,
      "line" : 201,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjYyNzE1MA==",
      "original_commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "original_line" : 201,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/script.cpp",
      "position" : 4,
      "pull_request_review_id" : 639873700,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-20T12:17:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616627150",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9665963?v=4",
         "events_url" : "https://api.github.com/users/pyskell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pyskell/followers",
         "following_url" : "https://api.github.com/users/pyskell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pyskell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pyskell",
         "id" : 9665963,
         "login" : "pyskell",
         "node_id" : "MDQ6VXNlcjk2NjU5NjM=",
         "organizations_url" : "https://api.github.com/users/pyskell/orgs",
         "received_events_url" : "https://api.github.com/users/pyskell/received_events",
         "repos_url" : "https://api.github.com/users/pyskell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pyskell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pyskell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pyskell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616853690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616853690"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yes; this became a TODO post taproot because we started doing much more aggressive/expensive heuristics, scanning to see if it's a taproot spend. We used to just IIRC always compute all caches.\r\n\r\n\r\nIt's not clear to me the performance benefit of scanning v.s. always computing the hashes @sipa. 50% of transactions are SegWit these days (https://charts.woobull.com/bitcoin-segwit-adoption/), and CTV only does extra non O(1) hashing in the event that it's a transaction that uses non segwit inputs.\r\n\r\nIt'd be also possible to just *never* cache CTV, if the extra work seems not worth it. Or to only cache for single input txns, only cache for txns with a bare script standard CTV, only cache for segwit or has bare CTV, etc. It's kinda hard to say what the optimal caching policy is and it's bikesheddable + non consensus, so I chose to just leave it for now as the extra work is not terrible, and more advanced policies open up the potential for quadratic hashing bugs (e.g., txn has a scriptSig on every input except the CTV one and the CTV one is <H> CTV CTV... and we don't cache).",
      "commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "created_at" : "2021-04-20T16:34:06Z",
      "diff_hunk" : "@@ -1433,6 +1513,9 @@ void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut>&& spent\n     // Determine which precomputation-impacting features this transaction uses.\n     bool uses_bip143_segwit = false;\n     bool uses_bip341_taproot = false;\n+    // TODO: Improve this heuristic\n+    bool uses_bip119_ctv = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616853690",
      "id" : 616853690,
      "in_reply_to_id" : 616625177,
      "line" : 1517,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjg1MzY5MA==",
      "original_commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "original_line" : 1517,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 111,
      "pull_request_review_id" : 640183576,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-20T16:34:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616853690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616858194"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616858194"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "These asserts can technically just be deleted looking at the surrounded code, txTo will already be able to deref nullptr from many other functions.\r\n\r\nI put them close to where the deref's actually occur as I think that's best practice, but yes they could go at the start.\r\n\r\nI'd actually be more excited about changing the representation internally to a reference as follow up work so we get rid of all these unchecked derefs...",
      "commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "created_at" : "2021-04-20T16:40:07Z",
      "diff_hunk" : "@@ -1804,6 +1905,30 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n     return true;\n }\n \n+template <class T>\n+bool GenericTransactionSignatureChecker<T>::CheckStandardTemplateHash(const std::vector<unsigned char>& hash) const\n+{\n+    // Should already be checked before calling...\n+    assert(hash.size() == 32);\n+    if (txdata && txdata->m_bip119_ctv_ready) {\n+        // if nIn == 0, then we've already cached this and can directly check\n+        if (nIn == 0) {\n+            return std::equal(txdata->m_standard_template_single_hash.begin(), txdata->m_standard_template_single_hash.end(), hash.data());\n+        } else {\n+            // otherwise we still have *most* of the hash cached,\n+            // so just re-compute the correct one and compare\n+            assert(txTo != nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616858194",
      "id" : 616858194,
      "in_reply_to_id" : 616625350,
      "line" : 1920,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjg1ODE5NA==",
      "original_commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "original_line" : 1920,
      "original_position" : 179,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 179,
      "pull_request_review_id" : 640192946,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-20T16:40:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616858194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616863828"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616863828"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes... Perhaps \"standard\" and \"basic\" should be flipped terminology wise, but as is:\r\n\r\n- Standard is the 32 byte argument form interpreted as the StandardTemplateHash defined in this PR\r\n- Basic is the ScriptType that is just a script with a single <h:32> CTV. \r\n\r\nCTV as a NOP is extensible in the future to support different templates via having a different length arg + whatever rules around that you want.\r\n\r\nBasicStandardTemplate is just for enabling relaying of a single special cased barescript type (for congestion control uses). TBH it *could* be dropped from this PR and handled separately, although it makes testing more painful.",
      "commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "created_at" : "2021-04-20T16:45:13Z",
      "diff_hunk" : "@@ -198,6 +198,13 @@ unsigned int CScript::GetSigOpCount(const CScript& scriptSig) const\n     return subscript.GetSigOpCount(true);\n }\n \n+bool CScript::IsPayToBasicStandardTemplate() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r616863828",
      "id" : 616863828,
      "in_reply_to_id" : 616627150,
      "line" : 201,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjg2MzgyOA==",
      "original_commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "original_line" : 201,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/script.cpp",
      "position" : 4,
      "pull_request_review_id" : 640201332,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-20T16:45:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616863828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r617174074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617174074"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "One last thing on caching: CTV was designed so that if you're expecting to operate the same CTV at diff input indexes, you can cache the sha256 midstate because index is the final field. However, I think that it's relatively rare you'd want CTV scripts at indexes other than 0.",
      "commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "created_at" : "2021-04-21T03:24:15Z",
      "diff_hunk" : "@@ -1433,6 +1513,9 @@ void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut>&& spent\n     // Determine which precomputation-impacting features this transaction uses.\n     bool uses_bip143_segwit = false;\n     bool uses_bip341_taproot = false;\n+    // TODO: Improve this heuristic\n+    bool uses_bip119_ctv = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21702#discussion_r617174074",
      "id" : 617174074,
      "in_reply_to_id" : 616625177,
      "line" : 1517,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzE3NDA3NA==",
      "original_commit_id" : "3b07e2ff83e40692f10aa59a02b2f07e3e154cd2",
      "original_line" : 1517,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 111,
      "pull_request_review_id" : 640596808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-21T03:24:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/617174074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   }
]
