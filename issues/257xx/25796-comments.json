[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n* [#21283](https://github.com/bitcoin/bitcoin/pull/21283) (Implement BIP 370 PSBTv2 by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-08-07T09:35:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25796#issuecomment-1207368407",
      "id" : 1207368407,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25796",
      "node_id" : "IC_kwDOABII585H9vrX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207368407/reactions"
      },
      "updated_at" : "2022-08-07T09:35:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207368407",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This PR implements the last suggestion in #14739 (with a slightly modified name)",
      "created_at" : "2022-08-07T14:40:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25796#issuecomment-1207423061",
      "id" : 1207423061,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25796",
      "node_id" : "IC_kwDOABII585H99BV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207423061/reactions"
      },
      "updated_at" : "2022-08-07T14:40:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207423061",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25796#discussion_r939680058"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25796"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/939680058"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This changes the behavior of `utxoupdatepsbt` since previously it didn't throw an error if an input has already been spent or doesn't exist. I'm not sure if the lack of an error here when `utxoupdatepsbt` was initially implemented was intentional. If it was intentional, then I will remove this. ",
      "commit_id" : "0061b6d8bf42b13e8d2990f9c72ec6c98fe99f9e",
      "created_at" : "2022-08-07T14:52:05Z",
      "diff_hunk" : "@@ -162,6 +162,76 @@ static std::vector<RPCArg> CreateTxDoc()\n     };\n }\n \n+// Update PSBT with information from the mempool, the UTXO set, and the provided descriptors.\n+// Optionally sign the inputs which we can using information from the descriptors.\n+PartiallySignedTransaction ProcessPSBT(const JSONRPCRequest& request, const HidingSigningProvider provider, int sighash_type = 1, bool finalize = false)\n+{\n+    // Unserialize the transactions\n+    PartiallySignedTransaction psbtx;\n+    std::string error;\n+    if (!DecodeBase64PSBT(psbtx, request.params[0].get_str(), error)) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed %s\", error));\n+    }\n+\n+    // Fetch previous transactions (inputs):\n+    CCoinsView viewDummy;\n+    CCoinsViewCache view(&viewDummy);\n+    {\n+        NodeContext& node = EnsureAnyNodeContext(request.context);\n+        const CTxMemPool& mempool = EnsureMemPool(node);\n+        ChainstateManager& chainman = EnsureChainman(node);\n+        LOCK2(cs_main, mempool.cs);\n+        CCoinsViewCache &viewChain = chainman.ActiveChainstate().CoinsTip();\n+        CCoinsViewMemPool viewMempool(&viewChain, mempool);\n+        view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view\n+\n+        for (const CTxIn& txin : psbtx.tx->vin) {\n+            view.AccessCoin(txin.prevout); // Load entries from viewChain into view; can fail.\n+        }\n+\n+        view.SetBackend(viewDummy); // switch back to avoid locking mempool for too long\n+    }\n+\n+    // Fill the inputs\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInput& input = psbtx.inputs.at(i);\n+\n+        if (input.non_witness_utxo || !input.witness_utxo.IsNull()) {\n+            continue;\n+        }\n+\n+        const Coin& coin = view.AccessCoin(psbtx.tx->vin[i].prevout);\n+\n+        if (coin.IsSpent()) {\n+            throw JSONRPCError(RPC_VERIFY_ERROR, \"Input not found or already spent\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25796#discussion_r939680058",
      "id" : 939680058,
      "line" : 206,
      "node_id" : "PRRC_kwDOABII5844AmE6",
      "original_commit_id" : "0061b6d8bf42b13e8d2990f9c72ec6c98fe99f9e",
      "original_line" : 206,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 45,
      "pull_request_review_id" : 1064434861,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25796",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/939680058/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-07T14:52:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/939680058",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\n<details><summary>A few suggestions for your consideration</summary><p>\r\n\r\n```diff\r\ndiff --git a/src/rpc/rawtransaction.cpp b/src/rpc/rawtransaction.cpp\r\nindex b6715f7f20..1ccc267ec1 100644\r\n--- a/src/rpc/rawtransaction.cpp\r\n+++ b/src/rpc/rawtransaction.cpp\r\n@@ -164,7 +164,7 @@ static std::vector<RPCArg> CreateTxDoc()\r\n \r\n // Update PSBT with information from the mempool, the UTXO set, and the provided descriptors.\r\n // Optionally sign the inputs which we can using information from the descriptors.\r\n-PartiallySignedTransaction ProcessPSBT(const JSONRPCRequest& request, const HidingSigningProvider provider, int sighash_type = 1, bool finalize = false)\r\n+PartiallySignedTransaction ProcessPSBT(const JSONRPCRequest& request, const HidingSigningProvider& provider, int sighash_type, bool finalize)\r\n {\r\n     // Unserialize the transactions\r\n     PartiallySignedTransaction psbtx;\r\n@@ -179,11 +179,9 @@ PartiallySignedTransaction ProcessPSBT(const JSONRPCRequest& request, const Hidi\r\n     {\r\n-        NodeContext& node = EnsureAnyNodeContext(request.context);\r\n+        const NodeContext& node = EnsureAnyNodeContext(request.context);\r\n         const CTxMemPool& mempool = EnsureMemPool(node);\r\n-        ChainstateManager& chainman = EnsureChainman(node);\r\n-        LOCK2(cs_main, mempool.cs);\r\n-        CCoinsViewCache &viewChain = chainman.ActiveChainstate().CoinsTip();\r\n-        CCoinsViewMemPool viewMempool(&viewChain, mempool);\r\n-        view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view\r\n+        LOCK2(::cs_main, mempool.cs);\r\n+        CCoinsViewMemPool view_mempool{&EnsureChainman(node).ActiveChainstate().CoinsTip(), mempool};\r\n+        view.SetBackend(view_mempool); // temporarily switch cache backend to db+mempool view\r\n \r\n         for (const CTxIn& txin : psbtx.tx->vin) {\r\n             view.AccessCoin(txin.prevout); // Load entries from viewChain into view; can fail.\r\n@@ -211,7 +209,7 @@ PartiallySignedTransaction ProcessPSBT(const JSONRPCRequest& request, const Hidi\r\n         }\r\n     }\r\n \r\n-    const PrecomputedTransactionData txdata = PrecomputePSBTData(psbtx);\r\n+    const PrecomputedTransactionData& txdata = PrecomputePSBTData(psbtx);\r\n \r\n     for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\r\n         if (PSBTInputSigned(psbtx.inputs.at(i))) {\r\n@@ -220,9 +218,9 @@ PartiallySignedTransaction ProcessPSBT(const JSONRPCRequest& request, const Hidi\r\n \r\n         // Update script/keypath information using descriptor data.\r\n         // Note that SignPSBTInput does a lot more than just constructing ECDSA signatures.\r\n-        // We only actually care about those if our signing provider doesn't hide private \r\n+        // We only actually care about those if our signing provider doesn't hide private\r\n         // information, as is the case with `descriptorprocesspsbt`\r\n-        SignPSBTInput(provider, psbtx, i, &txdata, sighash_type, nullptr, finalize);\r\n+        SignPSBTInput(provider, psbtx, /*index=*/i, &txdata, sighash_type, /*out_sigdata=*/nullptr, finalize);\r\n     }\r\n \r\n     // Update script/keypath information using descriptor data.\r\n@@ -1649,7 +1647,11 @@ static RPCHelpMan utxoupdatepsbt()\r\n     }\r\n \r\n     // We don't actually need private keys further on; hide them as a precaution.\r\n-    PartiallySignedTransaction psbtx = ProcessPSBT(request, HidingSigningProvider(&provider, /*hide_secret=*/true, /*hide_origin=*/false));\r\n+    const PartiallySignedTransaction& psbtx = ProcessPSBT(\r\n+        request,\r\n+        HidingSigningProvider(&provider, /*hide_secret=*/true, /*hide_origin=*/false),\r\n+        /*sighash_type=*/1,\r\n+        /*finalize=*/false);\r\n \r\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\r\n     ssTx << psbtx;\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex d5693dc555..86311adfed 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -1087,7 +1087,7 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\r\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys: '%s'\", desc_str));\r\n         }\r\n         if (expand_priv) {\r\n-            desc->ExpandPrivate(i, provider, provider);\r\n+            desc->ExpandPrivate(/*pos=*/i, provider, /*out=*/provider);\r\n         }\r\n         std::move(scripts.begin(), scripts.end(), std::back_inserter(ret));\r\n     }\r\ndiff --git a/test/functional/rpc_psbt.py b/test/functional/rpc_psbt.py\r\nindex d6db6fbfc6..b7a2a4628f 100755\r\n--- a/test/functional/rpc_psbt.py\r\n+++ b/test/functional/rpc_psbt.py\r\n@@ -581,7 +581,7 @@ class PSBTTest(BitcoinTestFramework):\r\n                 break\r\n         assert shuffled\r\n \r\n-        # Test that we can update and sign a psbt with descriptors\r\n+        self.log.info(\"Test descriptorprocesspsbt updates and signs a psbt with descriptors\")\r\n         key_info = get_generate_key()\r\n         key1 = key_info[0]\r\n         wpkh_addr = key_info[5]\r\n```\r\n</p></details>\r\n",
      "created_at" : "2022-08-07T16:36:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25796#issuecomment-1207443331",
      "id" : 1207443331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25796",
      "node_id" : "IC_kwDOABII585H-B-D",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207443331/reactions"
      },
      "updated_at" : "2022-08-07T17:06:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207443331",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the review @jonatack, I've implemented you're suggestions",
      "created_at" : "2022-08-07T23:39:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25796#issuecomment-1207509242",
      "id" : 1207509242,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25796",
      "node_id" : "IC_kwDOABII585H-SD6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207509242/reactions"
      },
      "updated_at" : "2022-08-07T23:39:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207509242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25796#discussion_r940230739"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25796"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940230739"
         }
      },
      "author_association" : "MEMBER",
      "body" : "b7c6179db597d00b465b4e83047af56292e372a6  Not sure what the original intention was, @achow101? Perhaps it's useful to be able to process a PSBT on a node that's behind (knows about its own cold storage UTXO, but not about others)?\r\n\r\nIn any case it should probably be its own commit (along with the test you added in the next commit)",
      "commit_id" : "4d1f46cc50aca561a141d1fe3ea292acc0338160",
      "created_at" : "2022-08-08T13:21:05Z",
      "diff_hunk" : "@@ -162,6 +162,76 @@ static std::vector<RPCArg> CreateTxDoc()\n     };\n }\n \n+// Update PSBT with information from the mempool, the UTXO set, and the provided descriptors.\n+// Optionally sign the inputs which we can using information from the descriptors.\n+PartiallySignedTransaction ProcessPSBT(const JSONRPCRequest& request, const HidingSigningProvider provider, int sighash_type = 1, bool finalize = false)\n+{\n+    // Unserialize the transactions\n+    PartiallySignedTransaction psbtx;\n+    std::string error;\n+    if (!DecodeBase64PSBT(psbtx, request.params[0].get_str(), error)) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed %s\", error));\n+    }\n+\n+    // Fetch previous transactions (inputs):\n+    CCoinsView viewDummy;\n+    CCoinsViewCache view(&viewDummy);\n+    {\n+        NodeContext& node = EnsureAnyNodeContext(request.context);\n+        const CTxMemPool& mempool = EnsureMemPool(node);\n+        ChainstateManager& chainman = EnsureChainman(node);\n+        LOCK2(cs_main, mempool.cs);\n+        CCoinsViewCache &viewChain = chainman.ActiveChainstate().CoinsTip();\n+        CCoinsViewMemPool viewMempool(&viewChain, mempool);\n+        view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view\n+\n+        for (const CTxIn& txin : psbtx.tx->vin) {\n+            view.AccessCoin(txin.prevout); // Load entries from viewChain into view; can fail.\n+        }\n+\n+        view.SetBackend(viewDummy); // switch back to avoid locking mempool for too long\n+    }\n+\n+    // Fill the inputs\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        PSBTInput& input = psbtx.inputs.at(i);\n+\n+        if (input.non_witness_utxo || !input.witness_utxo.IsNull()) {\n+            continue;\n+        }\n+\n+        const Coin& coin = view.AccessCoin(psbtx.tx->vin[i].prevout);\n+\n+        if (coin.IsSpent()) {\n+            throw JSONRPCError(RPC_VERIFY_ERROR, \"Input not found or already spent\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25796#discussion_r940230739",
      "id" : 940230739,
      "in_reply_to_id" : 939680058,
      "line" : 204,
      "node_id" : "PRRC_kwDOABII5844CshT",
      "original_commit_id" : "0061b6d8bf42b13e8d2990f9c72ec6c98fe99f9e",
      "original_line" : 204,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 43,
      "pull_request_review_id" : 1065169942,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25796",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940230739/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-08T13:36:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940230739",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
