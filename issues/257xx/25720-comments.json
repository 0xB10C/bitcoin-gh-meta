[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r933304616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/933304616"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n        assert_equal(count, 1)\r\n```\r\n\r\nBecause of #23119",
      "commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "created_at" : "2022-07-29T14:00:25Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test initial headers download\n+\n+Test that we only try to initially sync headers from one peer (until our chain\n+is close to caught up), and that block announcements result in only one\n+additional peer receiving a getheaders message.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.messages import (\n+    CInv,\n+    MSG_BLOCK,\n+    msg_headers,\n+    msg_inv,\n+)\n+from test_framework.p2p import (\n+    p2p_lock,\n+    P2PInterface,\n+)\n+import time\n+import random\n+\n+class HeadersSyncTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def announce_random_block(self, peers):\n+        new_block_announcement = msg_inv(inv=[CInv(MSG_BLOCK, random.randint(0, 1<<256 - 1))])\n+        [ p.send_message(new_block_announcement) for p in peers ]\n+\n+    def run_test(self):\n+        self.log.info(\"Adding a peer to node0\")\n+        peer1 = self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        # Wait for peer1 to receive a getheaders\n+        peer1.wait_until(lambda: \"getheaders\" in peer1.last_message, timeout=30)\n+        # Give an empty reply\n+        peer1.send_message(msg_headers())\n+\n+        self.log.info(\"Connecting two more peers to node0\")\n+        # Connect 2 more peers; they should not receive a getheaders yet\n+        peer2 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peer3 = self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        all_peers = [peer1, peer2, peer3]\n+\n+        self.log.info(\"Verify that peer2 and peer3 don't receive a getheaders after connecting\")\n+        time.sleep(5)\n+        [ p.sync_with_ping() for p in all_peers ]\n+        with p2p_lock:\n+            assert \"getheaders\" not in peer2.last_message\n+            assert \"getheaders\" not in peer3.last_message\n+\n+        with p2p_lock:\n+            peer1.last_message.pop(\"getheaders\", None)\n+\n+        self.log.info(\"Have all peers announce a new block\")\n+        self.announce_random_block(all_peers)\n+\n+        self.log.info(\"Check that peer1 receives a getheaders in response\")\n+        peer1.wait_until(lambda: \"getheaders\" in peer1.last_message, timeout=30)\n+        peer1.send_message(msg_headers()) # Send empty response\n+        peer1.last_message.pop(\"getheaders\", None)\n+\n+        self.log.info(\"Check that exactly 1 of {peer2, peer3} received a getheaders in response\")\n+        time.sleep(5)\n+        count = 0\n+        peer_receiving_headers = None\n+        for p in [peer2, peer3]:\n+            with p2p_lock:\n+                if \"getheaders\" in p.last_message:\n+                    count += 1\n+                    peer_receiving_headers = p\n+                    p.last_message.pop(\"getheaders\", None)\n+                    p.send_message(msg_headers()) # Send empty response\n+\n+        assert count == 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r933304616",
      "id" : 933304616,
      "line" : 81,
      "node_id" : "PRRC_kwDOABII5843oRko",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 81,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "test/functional/p2p_initial_headers_sync.py",
      "position" : 81,
      "pull_request_review_id" : 1055615149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/933304616/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-29T14:00:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/933304616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935709971"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935709971"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Looks like, either:\r\n\r\n* GUARDED_BY is not needed, as this is only accessed by a single thread (and if another thread is added in the future, it is unclear whether this should use cs_main or a different mutex)\r\n* If it is needed, it might be best to use a mutex different from the validation mutex cs_main to avoid further bundling net_processing with chainstatemanager logic and fields.",
      "commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "created_at" : "2022-08-02T15:03:22Z",
      "diff_hunk" : "@@ -681,6 +684,9 @@ class PeerManagerImpl final : public PeerManager\n     /** Number of nodes with fSyncStarted. */\n     int nSyncStarted GUARDED_BY(cs_main) = 0;\n \n+    /** Hash of the last block we received via INV */\n+    uint256 m_last_block_inv_triggering_headers_sync GUARDED_BY(cs_main) {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935709971",
      "id" : 935709971,
      "line" : 688,
      "node_id" : "PRRC_kwDOABII5843xc0T",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 688,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 1058937454,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935709971/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-02T15:35:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935709971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935722925"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935722925"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems a corner case that blocks are announced to us via inv, no? So I am wondering why such a new block is a good signal to add the peer as a initial headers sync peer, as opposed to, let's say, a random timer.",
      "commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "created_at" : "2022-08-02T15:14:56Z",
      "diff_hunk" : "@@ -3265,10 +3271,32 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (best_block != nullptr) {\n-            if (MaybeSendGetHeaders(pfrom, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), *peer)) {\n-                LogPrint(BCLog::NET, \"getheaders (%d) %s to peer=%d\\n\",\n-                        m_chainman.m_best_header->nHeight, best_block->ToString(),\n-                        pfrom.GetId());\n+            // If we haven't started initial headers-sync with this peer, then\n+            // consider sending a getheaders now. On initial startup, there's a\n+            // reliability vs bandwidth tradeoff, where we only trying doing\n+            // initial headers sync with one peer at a time, with a long\n+            // timeout (at which point, if the sync hasn't completed, we will\n+            // disconnect the peer and then choose another).  In the meantime,\n+            // as new blocks are found, we are willing to add one new peer per",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935722925",
      "id" : 935722925,
      "line" : 3280,
      "node_id" : "PRRC_kwDOABII5843xf-t",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 3280,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 34,
      "pull_request_review_id" : 1058937454,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935722925/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-02T15:35:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935722925",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935725314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935725314"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we assume that the initial headers sync logic is robust, why add the additional complexity here? Wouldn't it be better to just skip the getheaders message? Or if the logic isn't assumed to be robust, lower the timeout or add a new peer on a random timeout?",
      "commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "created_at" : "2022-08-02T15:17:01Z",
      "diff_hunk" : "@@ -3265,10 +3271,32 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (best_block != nullptr) {\n-            if (MaybeSendGetHeaders(pfrom, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), *peer)) {\n-                LogPrint(BCLog::NET, \"getheaders (%d) %s to peer=%d\\n\",\n-                        m_chainman.m_best_header->nHeight, best_block->ToString(),\n-                        pfrom.GetId());\n+            // If we haven't started initial headers-sync with this peer, then\n+            // consider sending a getheaders now. On initial startup, there's a\n+            // reliability vs bandwidth tradeoff, where we only trying doing\n+            // initial headers sync with one peer at a time, with a long\n+            // timeout (at which point, if the sync hasn't completed, we will\n+            // disconnect the peer and then choose another).  In the meantime,\n+            // as new blocks are found, we are willing to add one new peer per\n+            // block to sync with as well, to sync quicker in the case where\n+            // our initial peer is unresponsive (but less bandwidth than we'd\n+            // use if we turned on sync with all peers).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935725314",
      "id" : 935725314,
      "line" : 3283,
      "node_id" : "PRRC_kwDOABII5843xgkC",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 3283,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 37,
      "pull_request_review_id" : 1058937454,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935725314/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-02T15:35:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935725314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935725923"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935725923"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n            CNodeState& state{*Assert(State(pfrom.GetId()));\r\n```\r\n\r\nnit: Can be written in one line",
      "commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "created_at" : "2022-08-02T15:17:34Z",
      "diff_hunk" : "@@ -3265,10 +3271,32 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (best_block != nullptr) {\n-            if (MaybeSendGetHeaders(pfrom, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), *peer)) {\n-                LogPrint(BCLog::NET, \"getheaders (%d) %s to peer=%d\\n\",\n-                        m_chainman.m_best_header->nHeight, best_block->ToString(),\n-                        pfrom.GetId());\n+            // If we haven't started initial headers-sync with this peer, then\n+            // consider sending a getheaders now. On initial startup, there's a\n+            // reliability vs bandwidth tradeoff, where we only trying doing\n+            // initial headers sync with one peer at a time, with a long\n+            // timeout (at which point, if the sync hasn't completed, we will\n+            // disconnect the peer and then choose another).  In the meantime,\n+            // as new blocks are found, we are willing to add one new peer per\n+            // block to sync with as well, to sync quicker in the case where\n+            // our initial peer is unresponsive (but less bandwidth than we'd\n+            // use if we turned on sync with all peers).\n+            CNodeState *state = State(pfrom.GetId());\n+            assert(state != nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935725923",
      "id" : 935725923,
      "line" : 3285,
      "node_id" : "PRRC_kwDOABII5843xgtj",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 3285,
      "original_position" : 39,
      "original_start_line" : 3284,
      "path" : "src/net_processing.cpp",
      "position" : 39,
      "pull_request_review_id" : 1058937454,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935725923/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 3284,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-02T15:35:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935725923",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935756421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935756421"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "While syncing headers, I found this to actually be the typical case. I think it's because we only use announcement via headers if we know that the peer has the previous header (which is not the case if it's a new peer currently syncing headers) and otherwise revert to INV-mode. [(code)](https://github.com/bitcoin/bitcoin/blob/0043ec4e1310e860150e5789064789377e5a6273/src/net_processing.cpp#L4974-L4978)",
      "commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "created_at" : "2022-08-02T15:46:14Z",
      "diff_hunk" : "@@ -3265,10 +3271,32 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (best_block != nullptr) {\n-            if (MaybeSendGetHeaders(pfrom, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), *peer)) {\n-                LogPrint(BCLog::NET, \"getheaders (%d) %s to peer=%d\\n\",\n-                        m_chainman.m_best_header->nHeight, best_block->ToString(),\n-                        pfrom.GetId());\n+            // If we haven't started initial headers-sync with this peer, then\n+            // consider sending a getheaders now. On initial startup, there's a\n+            // reliability vs bandwidth tradeoff, where we only trying doing\n+            // initial headers sync with one peer at a time, with a long\n+            // timeout (at which point, if the sync hasn't completed, we will\n+            // disconnect the peer and then choose another).  In the meantime,\n+            // as new blocks are found, we are willing to add one new peer per",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935756421",
      "id" : 935756421,
      "in_reply_to_id" : 935722925,
      "line" : 3280,
      "node_id" : "PRRC_kwDOABII5843xoKF",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 3280,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 34,
      "pull_request_review_id" : 1059005316,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935756421/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-02T15:49:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935756421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935793639"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935793639"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In that case, could make sense to correct the doc, which says \"If a node fell back to sending blocks by inv,\r\n                    // it's probably for a re-org.\"",
      "commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "created_at" : "2022-08-02T16:23:49Z",
      "diff_hunk" : "@@ -3265,10 +3271,32 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (best_block != nullptr) {\n-            if (MaybeSendGetHeaders(pfrom, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), *peer)) {\n-                LogPrint(BCLog::NET, \"getheaders (%d) %s to peer=%d\\n\",\n-                        m_chainman.m_best_header->nHeight, best_block->ToString(),\n-                        pfrom.GetId());\n+            // If we haven't started initial headers-sync with this peer, then\n+            // consider sending a getheaders now. On initial startup, there's a\n+            // reliability vs bandwidth tradeoff, where we only trying doing\n+            // initial headers sync with one peer at a time, with a long\n+            // timeout (at which point, if the sync hasn't completed, we will\n+            // disconnect the peer and then choose another).  In the meantime,\n+            // as new blocks are found, we are willing to add one new peer per",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r935793639",
      "id" : 935793639,
      "in_reply_to_id" : 935722925,
      "line" : 3280,
      "node_id" : "PRRC_kwDOABII5843xxPn",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 3280,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 34,
      "pull_request_review_id" : 1059058573,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935793639/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-02T16:23:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935793639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r936663024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936663024"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok, will drop the mutex.",
      "commit_id" : "17f2822c0da197ce7b96767da94da1cb8af3002b",
      "created_at" : "2022-08-03T13:27:47Z",
      "diff_hunk" : "@@ -681,6 +684,9 @@ class PeerManagerImpl final : public PeerManager\n     /** Number of nodes with fSyncStarted. */\n     int nSyncStarted GUARDED_BY(cs_main) = 0;\n \n+    /** Hash of the last block we received via INV */\n+    uint256 m_last_block_inv_triggering_headers_sync GUARDED_BY(cs_main) {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r936663024",
      "id" : 936663024,
      "in_reply_to_id" : 935709971,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58431Ffw",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 688,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1060301657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936663024/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-03T13:48:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936663024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r936665467"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936665467"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I guess words like \"probably\" are confusing in comments, as there is context that is missing.  I'll update both comments.",
      "commit_id" : "17f2822c0da197ce7b96767da94da1cb8af3002b",
      "created_at" : "2022-08-03T13:29:57Z",
      "diff_hunk" : "@@ -3265,10 +3271,32 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (best_block != nullptr) {\n-            if (MaybeSendGetHeaders(pfrom, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), *peer)) {\n-                LogPrint(BCLog::NET, \"getheaders (%d) %s to peer=%d\\n\",\n-                        m_chainman.m_best_header->nHeight, best_block->ToString(),\n-                        pfrom.GetId());\n+            // If we haven't started initial headers-sync with this peer, then\n+            // consider sending a getheaders now. On initial startup, there's a\n+            // reliability vs bandwidth tradeoff, where we only trying doing\n+            // initial headers sync with one peer at a time, with a long\n+            // timeout (at which point, if the sync hasn't completed, we will\n+            // disconnect the peer and then choose another).  In the meantime,\n+            // as new blocks are found, we are willing to add one new peer per",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r936665467",
      "id" : 936665467,
      "in_reply_to_id" : 935722925,
      "line" : 3281,
      "node_id" : "PRRC_kwDOABII58431GF7",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 3281,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 46,
      "pull_request_review_id" : 1060301657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936665467/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-03T13:48:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936665467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r936687632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936687632"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "17f2822c0da197ce7b96767da94da1cb8af3002b",
      "created_at" : "2022-08-03T13:48:33Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test initial headers download\n+\n+Test that we only try to initially sync headers from one peer (until our chain\n+is close to caught up), and that block announcements result in only one\n+additional peer receiving a getheaders message.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.messages import (\n+    CInv,\n+    MSG_BLOCK,\n+    msg_headers,\n+    msg_inv,\n+)\n+from test_framework.p2p import (\n+    p2p_lock,\n+    P2PInterface,\n+)\n+import time\n+import random\n+\n+class HeadersSyncTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def announce_random_block(self, peers):\n+        new_block_announcement = msg_inv(inv=[CInv(MSG_BLOCK, random.randint(0, 1<<256 - 1))])\n+        [ p.send_message(new_block_announcement) for p in peers ]\n+\n+    def run_test(self):\n+        self.log.info(\"Adding a peer to node0\")\n+        peer1 = self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        # Wait for peer1 to receive a getheaders\n+        peer1.wait_until(lambda: \"getheaders\" in peer1.last_message, timeout=30)\n+        # Give an empty reply\n+        peer1.send_message(msg_headers())\n+\n+        self.log.info(\"Connecting two more peers to node0\")\n+        # Connect 2 more peers; they should not receive a getheaders yet\n+        peer2 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peer3 = self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        all_peers = [peer1, peer2, peer3]\n+\n+        self.log.info(\"Verify that peer2 and peer3 don't receive a getheaders after connecting\")\n+        time.sleep(5)\n+        [ p.sync_with_ping() for p in all_peers ]\n+        with p2p_lock:\n+            assert \"getheaders\" not in peer2.last_message\n+            assert \"getheaders\" not in peer3.last_message\n+\n+        with p2p_lock:\n+            peer1.last_message.pop(\"getheaders\", None)\n+\n+        self.log.info(\"Have all peers announce a new block\")\n+        self.announce_random_block(all_peers)\n+\n+        self.log.info(\"Check that peer1 receives a getheaders in response\")\n+        peer1.wait_until(lambda: \"getheaders\" in peer1.last_message, timeout=30)\n+        peer1.send_message(msg_headers()) # Send empty response\n+        peer1.last_message.pop(\"getheaders\", None)\n+\n+        self.log.info(\"Check that exactly 1 of {peer2, peer3} received a getheaders in response\")\n+        time.sleep(5)\n+        count = 0\n+        peer_receiving_headers = None\n+        for p in [peer2, peer3]:\n+            with p2p_lock:\n+                if \"getheaders\" in p.last_message:\n+                    count += 1\n+                    peer_receiving_headers = p\n+                    p.last_message.pop(\"getheaders\", None)\n+                    p.send_message(msg_headers()) # Send empty response\n+\n+        assert count == 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r936687632",
      "id" : 936687632,
      "in_reply_to_id" : 933304616,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58431LgQ",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 81,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "test/functional/p2p_initial_headers_sync.py",
      "position" : null,
      "pull_request_review_id" : 1060301657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936687632/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-03T13:48:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936687632",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r936687806"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936687806"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed.",
      "commit_id" : "17f2822c0da197ce7b96767da94da1cb8af3002b",
      "created_at" : "2022-08-03T13:48:41Z",
      "diff_hunk" : "@@ -681,6 +684,9 @@ class PeerManagerImpl final : public PeerManager\n     /** Number of nodes with fSyncStarted. */\n     int nSyncStarted GUARDED_BY(cs_main) = 0;\n \n+    /** Hash of the last block we received via INV */\n+    uint256 m_last_block_inv_triggering_headers_sync GUARDED_BY(cs_main) {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r936687806",
      "id" : 936687806,
      "in_reply_to_id" : 935709971,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58431Li-",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 688,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1060340218,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936687806/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-03T13:48:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936687806",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r936688283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936688283"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Improved the comments and removed the \"probably for a re-org\" language.",
      "commit_id" : "17f2822c0da197ce7b96767da94da1cb8af3002b",
      "created_at" : "2022-08-03T13:49:05Z",
      "diff_hunk" : "@@ -3265,10 +3271,32 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (best_block != nullptr) {\n-            if (MaybeSendGetHeaders(pfrom, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), *peer)) {\n-                LogPrint(BCLog::NET, \"getheaders (%d) %s to peer=%d\\n\",\n-                        m_chainman.m_best_header->nHeight, best_block->ToString(),\n-                        pfrom.GetId());\n+            // If we haven't started initial headers-sync with this peer, then\n+            // consider sending a getheaders now. On initial startup, there's a\n+            // reliability vs bandwidth tradeoff, where we only trying doing\n+            // initial headers sync with one peer at a time, with a long\n+            // timeout (at which point, if the sync hasn't completed, we will\n+            // disconnect the peer and then choose another).  In the meantime,\n+            // as new blocks are found, we are willing to add one new peer per",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25720#discussion_r936688283",
      "id" : 936688283,
      "in_reply_to_id" : 935722925,
      "line" : 3281,
      "node_id" : "PRRC_kwDOABII58431Lqb",
      "original_commit_id" : "4a3376376c774cb95dc633624ad92a2002378178",
      "original_line" : 3281,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 46,
      "pull_request_review_id" : 1060340906,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25720",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936688283/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-03T13:49:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936688283",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
