[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->Reviewers, this pull request conflicts with the following ones:\n\n* #14565 (Overhaul importmulti logic by sipa)\n* #14558 (rpc: Require solvability in importmulti if importing more than the scriptPubKey by achow101)\n* #14459 (More RPC help description fixes by ch4ot1c)\n* #14454 (Add SegWit support to importmulti by MeshCollider)\n* #14075 (Import watch only pubkeys to the keypool if private keys are disabled by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-08-22T05:45:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-414918503",
      "id" : 414918503,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNDkxODUwMw==",
      "updated_at" : "2018-10-25T06:08:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/414918503",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice! strong concept ACK",
      "created_at" : "2018-08-22T13:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-415028681",
      "id" : 415028681,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNTAyODY4MQ==",
      "updated_at" : "2018-08-22T13:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415028681",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed a bug where the keymetadata wasn't being written to the wallet file. Also added a test for that case.",
      "created_at" : "2018-08-25T15:56:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-415978714",
      "id" : 415978714,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNTk3ODcxNA==",
      "updated_at" : "2018-08-25T15:56:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415978714",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and also changed the keymeta stuff to add the hd master key id at key generation and when the wallet is first loaded.",
      "created_at" : "2018-08-28T21:48:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-416752152",
      "id" : 416752152,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNjc1MjE1Mg==",
      "updated_at" : "2018-08-28T21:48:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416752152",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r213773700"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213773700"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why?",
      "commit_id" : "09995963827b7be1163a50d894490daf182b7a78",
      "created_at" : "2018-08-29T17:48:14Z",
      "diff_hunk" : "@@ -560,6 +560,14 @@ bool ParseHDKeypath(const std::string& keypath_str, std::vector<uint32_t>& keypa\n         // Finds whether it is hardened\n         uint32_t path = 0;\n         size_t pos = item.find(\"'\");\n+        if (pos == std::string::npos) {\n+            // Look for h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r213773700",
      "id" : 213773700,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc3MzcwMA==",
      "original_commit_id" : "8065a31ad807adf7f03e50034ef28c8bc4f1f396",
      "original_position" : 5,
      "path" : "src/utilstrencodings.cpp",
      "position" : null,
      "pull_request_review_id" : 150679873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021",
      "updated_at" : "2018-11-06T15:32:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213773700",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r213784592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213784592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "why not? This is quite standard.",
      "commit_id" : "09995963827b7be1163a50d894490daf182b7a78",
      "created_at" : "2018-08-29T18:20:46Z",
      "diff_hunk" : "@@ -560,6 +560,14 @@ bool ParseHDKeypath(const std::string& keypath_str, std::vector<uint32_t>& keypa\n         // Finds whether it is hardened\n         uint32_t path = 0;\n         size_t pos = item.find(\"'\");\n+        if (pos == std::string::npos) {\n+            // Look for h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r213784592",
      "id" : 213784592,
      "in_reply_to_id" : 213773700,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc4NDU5Mg==",
      "original_commit_id" : "8065a31ad807adf7f03e50034ef28c8bc4f1f396",
      "original_position" : 5,
      "path" : "src/utilstrencodings.cpp",
      "position" : null,
      "pull_request_review_id" : 150693201,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021",
      "updated_at" : "2018-11-06T15:32:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213784592",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r213824850"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213824850"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's fairly standard to use `h` or `H` as the indicator, not just `'`. In fact, the BIP uses `H`, but as a subscript. `'` is not actually used as the indicator for hardened in the BIP even though that is what everyone uses.\r\n\r\nThe main reason for allowing this is so that you don't have to do any annoying escaping stuff for the `'` when entering the keypaths on the command line.",
      "commit_id" : "09995963827b7be1163a50d894490daf182b7a78",
      "created_at" : "2018-08-29T20:34:54Z",
      "diff_hunk" : "@@ -560,6 +560,14 @@ bool ParseHDKeypath(const std::string& keypath_str, std::vector<uint32_t>& keypa\n         // Finds whether it is hardened\n         uint32_t path = 0;\n         size_t pos = item.find(\"'\");\n+        if (pos == std::string::npos) {\n+            // Look for h",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r213824850",
      "id" : 213824850,
      "in_reply_to_id" : 213773700,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzgyNDg1MA==",
      "original_commit_id" : "8065a31ad807adf7f03e50034ef28c8bc4f1f396",
      "original_position" : 5,
      "path" : "src/utilstrencodings.cpp",
      "position" : null,
      "pull_request_review_id" : 150743360,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021",
      "updated_at" : "2018-11-06T15:32:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213824850",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2018-09-04T13:08:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-418360569",
      "id" : 418360569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxODM2MDU2OQ==",
      "updated_at" : "2018-09-04T13:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418360569",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, thanks for working on this",
      "created_at" : "2018-09-13T14:54:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-421036433",
      "id" : 421036433,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTAzNjQzMw==",
      "updated_at" : "2018-09-13T14:54:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421036433",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I will rework this to not require #14019 as soon as I have time (in a few days)",
      "created_at" : "2018-10-15T21:07:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-430013400",
      "id" : 430013400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMDAxMzQwMA==",
      "updated_at" : "2018-10-15T21:07:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430013400",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing for now due to the big changes to importmulti from #14454 and #14565. Perhaps it would be better to put more effort into supporting this through output descriptors rather than adding more data to importmulti.",
      "created_at" : "2018-10-30T04:27:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-434167968",
      "id" : 434167968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNDE2Nzk2OA==",
      "updated_at" : "2018-10-30T04:27:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/434167968",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "+1 for only supporting this with descriptors. Suggest rebasing on #14491, as that currently doesn't save origin info into the wallet.",
      "created_at" : "2018-11-05T18:40:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-435986356",
      "id" : 435986356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNTk4NjM1Ng==",
      "updated_at" : "2018-11-05T18:40:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/435986356",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased onto #14491 ",
      "created_at" : "2018-11-06T05:51:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-436138880",
      "id" : 436138880,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjEzODg4MA==",
      "updated_at" : "2018-11-06T05:51:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436138880",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@achow101 can you do a `git commit -a --amend --date \"$(date)\"` on your own commits so that they appear _after_ the unmerged upstream stuff? It's a bit hard to tell now which commits to review.",
      "created_at" : "2018-11-06T08:45:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-436174156",
      "id" : 436174156,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjE3NDE1Ng==",
      "updated_at" : "2018-11-06T08:45:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436174156",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Seeing some warnings (might be upstream):\r\n<img width=\"1155\" alt=\"schermafbeelding 2018-11-06 om 10 33 51\" src=\"https://user-images.githubusercontent.com/10217/48055268-7b5cb600-e1af-11e8-85f3-90d2c15bce87.png\">\r\n\r\nKey origin info from `importmulti` now nicely shows up now in `getaddressinfo`. However, like the upstream PR, it generate invalid psbt's. I tried with a watch-only wallet, manually providing a change address (which isn't used): \r\n\r\n```\r\nsrc/bitcoin-cli -rpcwallet=... walletcreatefundedpsbt '[{\"txid\": \"...\", \"vout\": 0}]' '[{\"...\": 0.1}]' 0 '{\"includeWatching\":  true, \"subtractFeeFromOutputs\": [0], \"changeAddress\": \"...\"}' true\r\n\r\n{\r\n  \"psbt\": \"...\",\r\n  \"fee\": 0.00002200,\r\n  \"changepos\": -1\r\n}\r\n\r\nsrc/bitcoin-cli -rpcwallet=... decodepsbt \"...\"\r\nerror code: -22\r\nerror message:\r\nTX decode failed Size of key was not the expected size for the type BIP32 keypath: unspecified iostream_category error\r\n```",
      "created_at" : "2018-11-06T09:51:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-436193667",
      "id" : 436193667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjE5MzY2Nw==",
      "updated_at" : "2018-11-06T09:51:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436193667",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If we narrow this PR to `WALLET_FLAG_DISABLE_PRIVATE_KEYS` wallets, would that allow you to just reuse `hdseedid` rather than undeprecating and repurposing `hdmasterkeyid `?\r\n\r\nAnd/or if we set `hdseedid` during `importmulti`, would that save you from having to upgrade the wallet version? I.e. get rid of  b0c7bbd4c460fdeb5a91d34f75e96eb115e37598?",
      "created_at" : "2018-11-06T10:04:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-436197671",
      "id" : 436197671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjE5NzY3MQ==",
      "updated_at" : "2018-11-06T10:04:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436197671",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If we narrow this PR to WALLET_FLAG_DISABLE_PRIVATE_KEYS wallets, would that allow you to just reuse hdseedid rather than undeprecating and repurposing hdmasterkeyid ?\r\n\r\nYes, but I don't really like that. It would mean that hdseedid has two meanings, depending on whether private keys are disabled. It's definition would not be consistent.",
      "created_at" : "2018-11-06T14:21:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-436268852",
      "id" : 436268852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjI2ODg1Mg==",
      "updated_at" : "2018-11-06T14:21:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436268852",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors I've updated the dates on my commits and fixed the lock issue I believe. I am unable to replicate the creation of invalid PSBTs though. The PSBTs I have created for testing are correct.",
      "created_at" : "2018-11-06T14:41:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-436275588",
      "id" : 436275588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjI3NTU4OA==",
      "updated_at" : "2018-11-06T14:41:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436275588",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Isn't the only difference between `hdseedid` and `hdmasterkeyid` that the key with `hdseedid` MAY be present in the wallet (for `!WALLET_FLAG_DISABLE_PRIVATE_KEYS`)? It MAY also be absent for keys generated before `encryptwallet` (which replaces the wallet seed). They both refer to a master key that generated a set of keys in the wallet.\r\n\r\nIf we migrate to a descriptor based wallet, there would be no difference in treatment between keys with `hdseedid` and keys `hdmasterkeyid` . Or am I missing something? cc @sipa",
      "created_at" : "2018-11-06T15:47:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-436300283",
      "id" : 436300283,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjMwMDI4Mw==",
      "updated_at" : "2018-11-06T15:47:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436300283",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "`hdseedid` is the ID of the seed. To get the master key id, the seed needs to be used to generate the master private key, and then the `masterkeyid` generated from that. There's one extra step of abstraction. The hd seed is not the same as the master private key.",
      "created_at" : "2018-11-06T16:01:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-436306115",
      "id" : 436306115,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjMwNjExNQ==",
      "updated_at" : "2018-11-06T16:01:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436306115",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@achow101 ah, I didn't know about the extra step from seed to master key. That makes sense then.",
      "created_at" : "2018-11-07T10:28:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-436578136",
      "id" : 436578136,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjU3ODEzNg==",
      "updated_at" : "2018-11-07T10:28:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436578136",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14679](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14679.html) (importmulti: Don't add internal addresses to address book by instagibbs)\n* [#14565](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14565.html) (Overhaul importmulti logic by sipa)\n* [#14530](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14530.html) (Use RPCHelpMan to generate RPC doc strings by MarcoFalke)\n* [#14491](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14491.html) (Allow descriptor imports with importmulti by MeshCollider)\n* [#14459](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14459.html) (More RPC help description fixes by ch4ot1c)\n* [#14411](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14411.html) ([wallet] Restore ability to list incoming transactions by label by ryanofsky)\n* [#14075](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14075.html) (Import watch only pubkeys to the keypool if private keys are disabled by achow101)\n* [#10973](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10973.html) (Refactor: separate wallet from node by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-11-08T21:59:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-437171488",
      "id" : 437171488,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzE3MTQ4OA==",
      "updated_at" : "2018-11-08T21:59:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437171488",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14679](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14679.html) (importmulti: Don't add internal addresses to address book by instagibbs)\n* [#14565](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14565.html) (Overhaul importmulti logic by sipa)\n* [#14530](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14530.html) (Use RPCHelpMan to generate RPC doc strings by MarcoFalke)\n* [#14491](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14491.html) (Allow descriptor imports with importmulti by MeshCollider)\n* [#14459](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14459.html) (More RPC help description fixes by ch4ot1c)\n* [#14411](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14411.html) ([wallet] Restore ability to list incoming transactions by label by ryanofsky)\n* [#14075](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14075.html) (Import watch only pubkeys to the keypool if private keys are disabled by achow101)\n* [#10973](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10973.html) (Refactor: separate wallet from node by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-11-09T02:50:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-437232361",
      "id" : 437232361,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzIzMjM2MQ==",
      "updated_at" : "2018-11-09T02:50:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437232361",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14679](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14679.html) (importmulti: Don't add internal addresses to address book by instagibbs)\n* [#14565](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14565.html) (Overhaul importmulti logic by sipa)\n* [#14530](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14530.html) (Use RPCHelpMan to generate RPC doc strings by MarcoFalke)\n* [#14491](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14491.html) (Allow descriptor imports with importmulti by MeshCollider)\n* [#14459](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14459.html) (More RPC help description fixes by ch4ot1c)\n* [#14411](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14411.html) ([wallet] Restore ability to list incoming transactions by label by ryanofsky)\n* [#14075](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14075.html) (Import watch only pubkeys to the keypool if private keys are disabled by achow101)\n* [#10973](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10973.html) (Refactor: separate wallet from node by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-11-09T06:09:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-437260776",
      "id" : 437260776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzI2MDc3Ng==",
      "updated_at" : "2018-11-09T06:09:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437260776",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r232174140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232174140"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be const reference?",
      "commit_id" : "09995963827b7be1163a50d894490daf182b7a78",
      "created_at" : "2018-11-09T08:34:53Z",
      "diff_hunk" : "@@ -202,6 +202,10 @@ bool ConvertBits(const O& outfn, I it, I end) {\n /** Parse an HD keypaths like \"m/7/0'/2000\". */\n bool ParseHDKeypath(const std::string& keypath_str, std::vector<uint32_t>& keypath);\n \n+/** Write HD keypaths as strings */\n+std::string WriteHdKeypath(const std::vector<uint32_t> keypath);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r232174140",
      "id" : 232174140,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjE3NDE0MA==",
      "original_commit_id" : "09995963827b7be1163a50d894490daf182b7a78",
      "original_position" : 5,
      "path" : "src/util/strencodings.h",
      "position" : 5,
      "pull_request_review_id" : 173313233,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021",
      "updated_at" : "2018-11-09T08:34:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232174140",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r232174240"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232174240"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be const reference?",
      "commit_id" : "09995963827b7be1163a50d894490daf182b7a78",
      "created_at" : "2018-11-09T08:35:20Z",
      "diff_hunk" : "@@ -587,6 +587,21 @@ bool ParseHDKeypath(const std::string& keypath_str, std::vector<uint32_t>& keypa\n     return true;\n }\n \n+std::string FormatKeyPath(const std::vector<uint32_t>& path)\n+{\n+    std::string ret;\n+    for (auto i : path) {\n+        ret += strprintf(\"/%i\", (i << 1) >> 1);\n+        if (i >> 31) ret += '\\'';\n+    }\n+    return ret;\n+}\n+\n+std::string WriteHdKeypath(const std::vector<uint32_t> keypath)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r232174240",
      "id" : 232174240,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjE3NDI0MA==",
      "original_commit_id" : "09995963827b7be1163a50d894490daf182b7a78",
      "original_position" : 14,
      "path" : "src/util/strencodings.cpp",
      "position" : 14,
      "pull_request_review_id" : 173313362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021",
      "updated_at" : "2018-11-09T08:35:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232174240",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r232174409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232174409"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could use `std::any_of`? :-)",
      "commit_id" : "09995963827b7be1163a50d894490daf182b7a78",
      "created_at" : "2018-11-09T08:36:04Z",
      "diff_hunk" : "@@ -804,233 +805,354 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     return reply;\n }\n \n-\n-static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n+struct ImportData\n {\n-    try {\n-        // First ensure scriptPubKey has either a script or JSON with \"address\" string\n-        const UniValue& scriptPubKey = data[\"scriptPubKey\"];\n-        bool isScript = scriptPubKey.getType() == UniValue::VSTR;\n-        if (!isScript && !(scriptPubKey.getType() == UniValue::VOBJ && scriptPubKey.exists(\"address\"))) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"scriptPubKey must be string with script or JSON with address string\");\n+    // Input data\n+    std::unique_ptr<CScript> redeemscript; //! Provided redeemScript; will be mvoed to `import_scripts` if relevant.\n+    std::unique_ptr<CScript> witnessscript; //! Provided witnessScript; will be moved to `import_scripts` if relevant.\n+    std::map<CKeyID, CPubKey> pubkeys;\n+    std::map<CKeyID, CKey> privkeys;\n+\n+    // Output data\n+    std::set<CScript> script_pub_keys;\n+    std::set<CScript> import_scripts;\n+    std::set<CKeyID> used_keys; // Import these private keys if available\n+    std::set<CKeyID> require_keys; // Fail if these public keys are not available\n+    std::map<CKeyID, KeyOriginInfo> key_origins;\n+};\n+\n+enum class ScriptContext\n+{\n+    TOP, //! Top-level scriptPubKey\n+    P2SH, //! P2SH redeemScript\n+    WITNESS_V0, //! P2WSH witnessScript\n+};\n+\n+// Analyse the provided script, process the import data accordinging, and recurse into subscripts if necessary.\n+// Returns an error string, or the empty string for success.\n+static std::string RecurseImportData(const CScript& script, ImportData& data, ScriptContext ctx)\n+{\n+    // Use Solver to obtain script type and parsed pubkeys or hashes:\n+    std::vector<std::vector<unsigned char>> solverdata;\n+    txnouttype script_type = Solver(script, solverdata);\n+\n+    switch (script_type) {\n+    case TX_PUBKEY: {\n+        CPubKey pubkey(solverdata[0].begin(), solverdata[0].end());\n+        data.used_keys.emplace(pubkey.GetID());\n+        break;\n+    }\n+    case TX_PUBKEYHASH: {\n+        CKeyID id = CKeyID(uint160(solverdata[0]));\n+        data.require_keys.emplace(id);\n+        data.used_keys.emplace(id);\n+        break;\n+    }\n+    case TX_SCRIPTHASH: {\n+        if (ctx == ScriptContext::P2SH) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Trying to nest P2SH inside another P2SH\");\n+        if (ctx == ScriptContext::WITNESS_V0) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Trying to nest P2SH inside a P2WSH\");\n+        CScriptID id = CScriptID(uint160(solverdata[0]));\n+        auto subscript = std::move(data.redeemscript);\n+        if (!subscript) return \"missing redeemscript\";\n+        if (CScriptID(*subscript) != id) return \"redeemScript does not match the scriptPubKey\";\n+        data.import_scripts.emplace(*subscript);\n+        RecurseImportData(*subscript, data, ScriptContext::P2SH);\n+        break;\n+    }\n+    case TX_MULTISIG: {\n+        for (size_t i = 1; i + 1< solverdata.size(); ++i) {\n+            CPubKey pubkey(solverdata[i].begin(), solverdata[i].end());\n+            data.used_keys.emplace(pubkey.GetID());\n         }\n-        const std::string& output = isScript ? scriptPubKey.get_str() : scriptPubKey[\"address\"].get_str();\n-\n-        // Optional fields.\n-        const std::string& strRedeemScript = data.exists(\"redeemscript\") ? data[\"redeemscript\"].get_str() : \"\";\n-        const std::string& witness_script_hex = data.exists(\"witnessscript\") ? data[\"witnessscript\"].get_str() : \"\";\n-        const UniValue& pubKeys = data.exists(\"pubkeys\") ? data[\"pubkeys\"].get_array() : UniValue();\n-        const UniValue& keys = data.exists(\"keys\") ? data[\"keys\"].get_array() : UniValue();\n-        const bool internal = data.exists(\"internal\") ? data[\"internal\"].get_bool() : false;\n-        const bool watchOnly = data.exists(\"watchonly\") ? data[\"watchonly\"].get_bool() : false;\n-        const std::string& label = data.exists(\"label\") ? data[\"label\"].get_str() : \"\";\n-\n-        // Generate the script and destination for the scriptPubKey provided\n-        CScript script;\n-        CTxDestination dest;\n-\n-        if (!isScript) {\n-            dest = DecodeDestination(output);\n-            if (!IsValidDestination(dest)) {\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");\n-            }\n-            script = GetScriptForDestination(dest);\n-        } else {\n-            if (!IsHex(output)) {\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid scriptPubKey\");\n-            }\n+        break;\n+    }\n+    case TX_WITNESS_V0_SCRIPTHASH: {\n+        if (ctx == ScriptContext::WITNESS_V0) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Trying to nest P2WSH inside another P2WSH\");\n+        uint256 fullid(solverdata[0]);\n+        CScriptID id;\n+        CRIPEMD160().Write(fullid.begin(), fullid.size()).Finalize(id.begin());\n+        auto subscript = std::move(data.witnessscript);\n+        if (!subscript) return \"missing witnessscript\";\n+        if (CScriptID(*subscript) != id) return \"witnessScript does not match the scriptPubKey or redeemScript\";\n+        data.import_scripts.emplace(script); // Special rule for IsMine: native P2WSH requires the full script imported\n+        data.import_scripts.emplace(*subscript);\n+        RecurseImportData(*subscript, data, ScriptContext::WITNESS_V0);\n+        break;\n+    }\n+    case TX_WITNESS_V0_KEYHASH: {\n+        if (ctx == ScriptContext::WITNESS_V0) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Trying to nest P2WPKH inside P2WSH\");\n+        CKeyID id = CKeyID(uint160(solverdata[0]));\n+        data.require_keys.emplace(id);\n+        data.used_keys.emplace(id);\n+        data.import_scripts.emplace(script); // Special rule for IsMine: native P2WPKH requires the full script imported\n+        break;\n+    }\n+    default:\n+        return \"nonstandard script\";\n+    }\n+    return \"\";\n+}\n \n-            std::vector<unsigned char> vData(ParseHex(output));\n-            script = CScript(vData.begin(), vData.end());\n-            if (!ExtractDestination(script, dest) && !internal) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Internal must be set to true for nonstandard scriptPubKey imports.\");\n-            }\n+static UniValue ProcessImportLegacy(ImportData& import_data, const UniValue& data, bool& watch_only)\n+{\n+    // First ensure scriptPubKey has either a script or JSON with \"address\" string\n+    const UniValue& scriptPubKey = data[\"scriptPubKey\"];\n+    bool isScript = scriptPubKey.getType() == UniValue::VSTR;\n+    if (!isScript && !(scriptPubKey.getType() == UniValue::VOBJ && scriptPubKey.exists(\"address\"))) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"scriptPubKey must be string with script or JSON with address string\");\n+    }\n+    const std::string& output = isScript ? scriptPubKey.get_str() : scriptPubKey[\"address\"].get_str();\n+\n+    // Optional fields.\n+    const std::string& strRedeemScript = data.exists(\"redeemscript\") ? data[\"redeemscript\"].get_str() : \"\";\n+    const std::string& witness_script_hex = data.exists(\"witnessscript\") ? data[\"witnessscript\"].get_str() : \"\";\n+    const UniValue& pubKeys = data.exists(\"pubkeys\") ? data[\"pubkeys\"].get_array() : UniValue();\n+    const UniValue& keys = data.exists(\"keys\") ? data[\"keys\"].get_array() : UniValue();\n+    const bool internal = data.exists(\"internal\") ? data[\"internal\"].get_bool() : false;\n+\n+    // Generate the script and destination for the scriptPubKey provided\n+    CScript script;\n+    CTxDestination dest;\n+    if (!isScript) {\n+        dest = DecodeDestination(output);\n+        if (!IsValidDestination(dest)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");\n         }\n-\n-        // Watchonly and private keys\n-        if (watchOnly && keys.size()) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Watch-only addresses should not include private keys\");\n+        script = GetScriptForDestination(dest);\n+    } else {\n+        if (!IsHex(output)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid scriptPubKey\");\n         }\n-\n-        // Internal addresses should not have a label\n-        if (internal && data.exists(\"label\")) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Internal addresses should not have a label\");\n+        std::vector<unsigned char> vData(ParseHex(output));\n+        script = CScript(vData.begin(), vData.end());\n+        if (!ExtractDestination(script, dest) && !internal) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Internal must be set to true for nonstandard scriptPubKey imports.\");\n         }\n+    }\n+    import_data.script_pub_keys.emplace(script);\n \n-        // Force users to provide the witness script in its field rather than redeemscript\n-        if (!strRedeemScript.empty() && script.IsPayToWitnessScriptHash()) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"P2WSH addresses have an empty redeemscript. Please provide the witnessscript instead.\");\n+    // Parse all arguments\n+    if (strRedeemScript.size()) {\n+        if (!IsHex(strRedeemScript)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid redeem script: must be hex string\");\n         }\n-\n-        CScript scriptpubkey_script = script;\n-        CTxDestination scriptpubkey_dest = dest;\n-        bool allow_p2wpkh = true;\n-\n-        // P2SH\n-        if (!strRedeemScript.empty() && script.IsPayToScriptHash()) {\n-            // Check the redeemScript is valid\n-            if (!IsHex(strRedeemScript)) {\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid redeem script: must be hex string\");\n-            }\n-\n-            // Import redeem script.\n-            std::vector<unsigned char> vData(ParseHex(strRedeemScript));\n-            CScript redeemScript = CScript(vData.begin(), vData.end());\n-            CScriptID redeem_id(redeemScript);\n-\n-            // Check that the redeemScript and scriptPubKey match\n-            if (GetScriptForDestination(redeem_id) != script) {\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"The redeemScript does not match the scriptPubKey\");\n-            }\n-\n-            pwallet->MarkDirty();\n-\n-            if (!pwallet->AddWatchOnly(redeemScript, timestamp)) {\n-                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n-            }\n-\n-            if (!pwallet->HaveCScript(redeem_id) && !pwallet->AddCScript(redeemScript)) {\n-                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding p2sh redeemScript to wallet\");\n-            }\n-\n-            // Now set script to the redeemScript so we parse the inner script as P2WSH or P2WPKH below\n-            script = redeemScript;\n-            ExtractDestination(script, dest);\n+        auto parsed_redeemscript = ParseHex(strRedeemScript);\n+        import_data.redeemscript = MakeUnique<CScript>(parsed_redeemscript.begin(), parsed_redeemscript.end());\n+    }\n+    if (witness_script_hex.size()) {\n+        if (!IsHex(witness_script_hex)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid witness script: must be hex string\");\n         }\n+        auto parsed_witnessscript = ParseHex(witness_script_hex);\n+        import_data.witnessscript = MakeUnique<CScript>(parsed_witnessscript.begin(), parsed_witnessscript.end());\n+    }\n+    for (size_t i = 0; i < pubKeys.size(); ++i) {\n+        const auto& str = pubKeys[i].get_str();\n+        if (!IsHex(str)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey must be a hex string\");\n+        }\n+        auto parsed_pubkey = ParseHex(str);\n+        CPubKey pubkey(parsed_pubkey.begin(), parsed_pubkey.end());\n+        if (!pubkey.IsFullyValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey is not a valid public key\");\n+        }\n+        import_data.pubkeys.emplace(pubkey.GetID(), pubkey);\n+    }\n+    for (size_t i = 0; i < keys.size(); ++i) {\n+        const auto& str = keys[i].get_str();\n+        CKey key = DecodeSecret(str);\n+        if (!key.IsValid()) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        }\n+        CPubKey pubkey = key.GetPubKey();\n+        CKeyID id = pubkey.GetID();\n+        if (import_data.pubkeys.count(id)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Both public and private key specified for \" + HexStr(pubkey.begin(), pubkey.end()));\n+        }\n+        import_data.privkeys.emplace(id, key);\n+    }\n \n-        // (P2SH-)P2WSH\n-        if (!witness_script_hex.empty() && script.IsPayToWitnessScriptHash()) {\n-            if (!IsHex(witness_script_hex)) {\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid witness script: must be hex string\");\n-            }\n-\n-            // Generate the scripts\n-            std::vector<unsigned char> witness_script_parsed(ParseHex(witness_script_hex));\n-            CScript witness_script = CScript(witness_script_parsed.begin(), witness_script_parsed.end());\n-            CScriptID witness_id(witness_script);\n+    // Warn about inconsistencies between watch_only and provided keys/scripts\n+    UniValue warnings(UniValue::VARR);\n+    bool have_solving_data = import_data.redeemscript || import_data.witnessscript || import_data.pubkeys.size() || import_data.privkeys.size();\n+    if (watch_only && have_solving_data) {\n+        warnings.push_back(\"redeemscript, witnessscript, keys, and pubkeys are ignored when watchonly is set.\");\n+    }\n+    if (!watch_only && !have_solving_data) {\n+        warnings.push_back(\"Assuming watchonly as no redeemscript, witnessscript, keys, or pubkeys are provided.\");\n+        watch_only = true;\n+    }\n \n-            // Check that the witnessScript and scriptPubKey match\n-            if (GetScriptForDestination(WitnessV0ScriptHash(witness_script)) != script) {\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"The witnessScript does not match the scriptPubKey or redeemScript\");\n-            }\n+    // Force users to provide the witness script in its field rather than redeemscript\n+    if (!strRedeemScript.empty() && script.IsPayToWitnessScriptHash()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"P2WSH addresses have an empty redeemscript. Please provide the witnessscript instead.\");\n+    }\n \n-            // Add the witness script as watch only only if it is not for P2SH-P2WSH\n-            if (!scriptpubkey_script.IsPayToScriptHash() && !pwallet->AddWatchOnly(witness_script, timestamp)) {\n-                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n-            }\n+    // Verify and process input data\n+    if (!watch_only) {\n+        // Match up data in import_data with the scriptPubKey in script.\n+        auto error = RecurseImportData(script, import_data, ScriptContext::TOP);\n \n-            if (!pwallet->HaveCScript(witness_id) && !pwallet->AddCScript(witness_script)) {\n-                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding p2wsh witnessScript to wallet\");\n+        // Check that all required keys for solvability are provided.\n+        if (error.empty()) {\n+            for (const auto& require_key : import_data.require_keys) {\n+                if (import_data.pubkeys.count(require_key) == 0 && import_data.privkeys.count(require_key) == 0) {\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Key does not match address destination\");\n+                }\n             }\n-\n-            // Now set script to the witnessScript so we parse the inner script as P2PK or P2PKH below\n-            script = witness_script;\n-            ExtractDestination(script, dest);\n-            allow_p2wpkh = false; // P2WPKH cannot be embedded in P2WSH\n         }\n \n-        // (P2SH-)P2PK/P2PKH/P2WPKH\n-        if (dest.type() == typeid(CKeyID) || dest.type() == typeid(WitnessV0KeyHash)) {\n-            if (!allow_p2wpkh && dest.type() == typeid(WitnessV0KeyHash)) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"P2WPKH cannot be embedded in P2WSH\");\n-            }\n-            if (keys.size() > 1 || pubKeys.size() > 1) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"More than one key given for one single-key address\");\n-            }\n-            CPubKey pubkey;\n-            if (keys.size()) {\n-                pubkey = DecodeSecret(keys[0].get_str()).GetPubKey();\n-            }\n-            if (pubKeys.size()) {\n-                const std::string& strPubKey = pubKeys[0].get_str();\n-                if (!IsHex(strPubKey)) {\n-                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey must be a hex string\");\n-                }\n-                std::vector<unsigned char> vData(ParseHex(pubKeys[0].get_str()));\n-                CPubKey pubkey_temp(vData.begin(), vData.end());\n-                if (pubkey.size() && pubkey_temp != pubkey) {\n-                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key does not match public key for address\");\n+        if (!error.empty()) {\n+            warnings.push_back(\"Ignoring information in keys, pubkeys, redeemscript, and witnessscript:: \" + error);\n+            import_data = ImportData();\n+        } else {\n+            // RecurseImportData() removes any relevant redeemscript/witnessscript from import_data, so we can use that to discover if a superfluous one was provided.\n+            if (import_data.redeemscript) warnings.push_back(\"Ignoring redeemscript \" + strRedeemScript + \" as this is not a P2SH script.\");\n+            if (import_data.witnessscript) warnings.push_back(\"Ignoring witnessscript \" + witness_script_hex + \" as this is not a P2WSH script.\");\n+            for (const auto& privkey : import_data.privkeys) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#discussion_r232174409",
      "id" : 232174409,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjE3NDQwOQ==",
      "original_commit_id" : "09995963827b7be1163a50d894490daf182b7a78",
      "original_position" : 346,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 346,
      "pull_request_review_id" : 173313573,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14021",
      "updated_at" : "2018-11-09T08:36:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232174409",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14679](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14679.html) (importmulti: Don't add internal addresses to address book by instagibbs)\n* [#14565](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14565.html) (Overhaul importmulti logic by sipa)\n* [#14530](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14530.html) (Use RPCHelpMan to generate RPC doc strings by MarcoFalke)\n* [#14491](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14491.html) (Allow descriptor imports with importmulti by MeshCollider)\n* [#14459](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14459.html) (More RPC help description fixes by ch4ot1c)\n* [#14411](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14411.html) ([wallet] Restore ability to list incoming transactions by label by ryanofsky)\n* [#14075](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14075.html) (Import watch only pubkeys to the keypool if private keys are disabled by achow101)\n* [#10973](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10973.html) (Refactor: separate wallet from node by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-11-09T09:36:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14021#issuecomment-437303767",
      "id" : 437303767,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14021",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzMwMzc2Nw==",
      "updated_at" : "2018-11-09T09:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437303767",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
