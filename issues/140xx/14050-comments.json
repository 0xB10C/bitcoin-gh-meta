[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #14047 (Add HKDF_HMAC256_L32 and method to negate a private key by jonasschnelli)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-08-24T15:49:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-415800611",
      "id" : 415800611,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNTgwMDYxMQ==",
      "updated_at" : "2018-09-05T20:32:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415800611",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Why not [reuse the existing ChaCha20](https://github.com/bitcoin/bitcoin/compare/master...DesWurstes:master)?",
      "created_at" : "2018-08-25T07:09:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-415947069",
      "id" : 415947069,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNTk0NzA2OQ==",
      "updated_at" : "2018-08-25T07:09:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415947069",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/23437045?v=4",
         "events_url" : "https://api.github.com/users/DesWurstes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DesWurstes/followers",
         "following_url" : "https://api.github.com/users/DesWurstes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DesWurstes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DesWurstes",
         "id" : 23437045,
         "login" : "DesWurstes",
         "node_id" : "MDQ6VXNlcjIzNDM3MDQ1",
         "organizations_url" : "https://api.github.com/users/DesWurstes/orgs",
         "received_events_url" : "https://api.github.com/users/DesWurstes/received_events",
         "repos_url" : "https://api.github.com/users/DesWurstes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DesWurstes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DesWurstes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DesWurstes"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@DesWurstes: see PR description (out of scope).",
      "created_at" : "2018-08-27T11:59:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-416203421",
      "id" : 416203421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNjIwMzQyMQ==",
      "updated_at" : "2018-08-27T11:59:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416203421",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added benchmark for the AEAD (and for direct comparison also added the dbl-SHA (HASH) benchmark).\r\nBenchmarking 1MB data as well as 256bytes.\r\n\r\nMy system reports (!we compare SSE4 SHA256 vs non-optimized chacha20):\r\n```\r\n# Benchmark, evals, iterations, total, min, max, median\r\nCHACHA20POLY1305AEAD_BIG, 5, 340, 3.68279, 0.00215035, 0.00219169, 0.00216025\r\nCHACHA20POLY1305AEAD_SMALL, 5, 250000, 1.08673, 8.51516e-07, 8.93585e-07, 8.61119e-07\r\nHASH256_BIG, 5, 340, 3.81384, 0.00222589, 0.00226436, 0.00224086\r\nHASH256_SMALL, 5, 250000, 1.1305, 8.96669e-07, 9.15482e-07, 9.03866e-07\r\n```",
      "created_at" : "2018-08-27T19:37:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-416342883",
      "id" : 416342883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNjM0Mjg4Mw==",
      "updated_at" : "2018-08-27T19:37:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416342883",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r213763831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213763831"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems this should include windows.h",
      "commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "created_at" : "2018-08-29T17:17:56Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+void _memory_cleanse(void *ptr, size_t len)\n+{\n+    memset(ptr, 0, len);\n+\n+    /* As best as we can tell, this is sufficient to break any optimisations that\n+       might try to eliminate \"superfluous\" memsets. If there's an easy way to\n+       detect memset_s, it would be better to use that. */\n+#if defined(_MSC_VER)\n+    SecureZeroMemory(ptr, len);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r213763831",
      "id" : 213763831,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc2MzgzMQ==",
      "original_commit_id" : "90702f472e5c9e3370db2b51c8c5942e570ff83a",
      "original_position" : 30,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : null,
      "pull_request_review_id" : 150667667,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-09-02T08:02:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213763831",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214523031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523031"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Typo found by `codespell`: endiannes",
      "commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "created_at" : "2018-09-01T21:05:50Z",
      "diff_hunk" : "@@ -0,0 +1,22 @@\n+#ifndef BITCOIN_CRYPTO_CHACHAPOLY_AEAD_H\n+#define BITCOIN_CRYPTO_CHACHAPOLY_AEAD_H\n+\n+#include <crypto/chacha.h>\n+\n+#define CHACHA_KEYLEN 32 /* 2 x 256 bit keys */\n+\n+struct chachapolyaead_ctx {\n+  struct chacha_ctx main_ctx, header_ctx;\n+};\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *cpctx, const uint8_t *key,\n+                          int keylen);\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt);\n+\n+// extracts the LE 24bit (3byte) length from the AAD and puts it into a uint32_t (host endiannes)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214523031",
      "id" : 214523031,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUyMzAzMQ==",
      "original_commit_id" : "ac477bcf8bf37d0a49692161ed058fe3db884e50",
      "original_position" : 18,
      "path" : "src/crypto/chachapoly_aead.h",
      "position" : null,
      "pull_request_review_id" : 151603370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-09-02T08:02:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523031",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214533236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214533236"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "created_at" : "2018-09-02T08:47:05Z",
      "diff_hunk" : "@@ -0,0 +1,22 @@\n+#ifndef BITCOIN_CRYPTO_CHACHAPOLY_AEAD_H\n+#define BITCOIN_CRYPTO_CHACHAPOLY_AEAD_H\n+\n+#include <crypto/chacha.h>\n+\n+#define CHACHA_KEYLEN 32 /* 2 x 256 bit keys */\n+\n+struct chachapolyaead_ctx {\n+  struct chacha_ctx main_ctx, header_ctx;\n+};\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *cpctx, const uint8_t *key,\n+                          int keylen);\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt);\n+\n+// extracts the LE 24bit (3byte) length from the AAD and puts it into a uint32_t (host endiannes)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214533236",
      "id" : 214533236,
      "in_reply_to_id" : 214523031,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzMzIzNg==",
      "original_commit_id" : "ac477bcf8bf37d0a49692161ed058fe3db884e50",
      "original_position" : 18,
      "path" : "src/crypto/chachapoly_aead.h",
      "position" : null,
      "pull_request_review_id" : 151613678,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-09-02T08:47:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214533236",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214535827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214535827"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This would be much easier to verify against the RFC document if you parse a hex string. ",
      "commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "created_at" : "2018-09-02T10:33:08Z",
      "diff_hunk" : "@@ -562,4 +564,198 @@ BOOST_AUTO_TEST_CASE(sha256d64)\n     }\n }\n \n+\n+BOOST_AUTO_TEST_CASE(chacha20poly1305_openssh)\n+{\n+    struct chacha20_testvector {\n+        uint8_t key[32];\n+        uint8_t nonce[8];\n+        uint8_t resulting_keystream[512];\n+        int keystream_check_size;\n+    };\n+\n+    struct poly1305_testvector {\n+        uint8_t input[64];\n+        int inputlen;\n+        uint8_t key[64];\n+        uint8_t resulting_tag[16];\n+    };\n+\n+    /*\n+       Testvectors have been taken from the draft RFC\n+       https://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-04#section-7\n+    */\n+\n+    static const struct chacha20_testvector chacha20_testvectors[] = {\n+        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214535827",
      "id" : 214535827,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNTgyNw==",
      "original_commit_id" : "995c41af1b11116db32fb64325308276e6c9615c",
      "original_position" : 46,
      "path" : "src/test/crypto_tests.cpp",
      "position" : 46,
      "pull_request_review_id" : 151616192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-09-02T10:53:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214535827",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536074"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why did you remove the [poly1305_init](https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna-32.h), [poly1305_update](https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna.c#L27), [poly1305_finish](https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna-32.h#L134) separation?",
      "commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "created_at" : "2018-09-02T10:44:38Z",
      "diff_hunk" : "@@ -0,0 +1,198 @@\n+/*\n+ * Public Domain poly1305 from Andrew Moon\n+ * poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n+ */\n+\n+/* $OpenBSD: poly1305.c,v 1.3 2013/12/19 22:57:13 djm Exp $ */\n+\n+#include <crypto/poly1305.h>\n+\n+#define mul32x32_64(a, b) ((uint64_t)(a) * (b))\n+\n+#define U8TO32_LE(p)                                                           \\\n+  (((uint32_t)((p)[0])) | ((uint32_t)((p)[1]) << 8) |                          \\\n+   ((uint32_t)((p)[2]) << 16) | ((uint32_t)((p)[3]) << 24))\n+\n+#define U32TO8_LE(p, v)                                                        \\\n+  do {                                                                         \\\n+    (p)[0] = (uint8_t)((v));                                                   \\\n+    (p)[1] = (uint8_t)((v) >> 8);                                              \\\n+    (p)[2] = (uint8_t)((v) >> 16);                                             \\\n+    (p)[3] = (uint8_t)((v) >> 24);                                             \\\n+  } while (0)\n+\n+void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536074",
      "id" : 214536074,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNjA3NA==",
      "original_commit_id" : "09ec49ba31867187cecd631593d37bcc5f3ca72f",
      "original_position" : 24,
      "path" : "src/crypto/poly1305.cpp",
      "position" : 24,
      "pull_request_review_id" : 151616192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-09-02T10:53:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536074",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536163"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I can confirm this function in 09ec49ba31867187cecd631593d37bcc5f3ca72f is identical to the original at de624c626ea081929df000b09932dbc804eda51d, modulo some whitespace.",
      "commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "created_at" : "2018-09-02T10:48:24Z",
      "diff_hunk" : "@@ -0,0 +1,215 @@\n+/*\n+chacha-merged.c version 20080118\n+D. J. Bernstein\n+Public domain.\n+*/\n+\n+#include <crypto/chacha.h>\n+\n+/* $OpenBSD: chacha.c,v 1.1 2013/11/21 00:45:44 djm Exp $ */\n+\n+typedef unsigned char u8;\n+typedef unsigned int u32;\n+\n+typedef struct chacha_ctx chacha_ctx;\n+\n+#define U8C(v) (v##U)\n+#define U32C(v) (v##U)\n+\n+#define U8V(v) ((u8)(v)&U8C(0xFF))\n+#define U32V(v) ((u32)(v)&U32C(0xFFFFFFFF))\n+\n+#define ROTL32(v, n) (U32V((v) << (n)) | ((v) >> (32 - (n))))\n+\n+#define U8TO32_LITTLE(p)                                                       \\\n+  (((u32)((p)[0])) | ((u32)((p)[1]) << 8) | ((u32)((p)[2]) << 16) |            \\\n+   ((u32)((p)[3]) << 24))\n+\n+#define U32TO8_LITTLE(p, v)                                                    \\\n+  do {                                                                         \\\n+    (p)[0] = U8V((v));                                                         \\\n+    (p)[1] = U8V((v) >> 8);                                                    \\\n+    (p)[2] = U8V((v) >> 16);                                                   \\\n+    (p)[3] = U8V((v) >> 24);                                                   \\\n+  } while (0)\n+\n+#define ROTATE(v, c) (ROTL32(v, c))\n+#define XOR(v, w) ((v) ^ (w))\n+#define PLUS(v, w) (U32V((v) + (w)))\n+#define PLUSONE(v) (PLUS((v), 1))\n+\n+#define QUARTERROUND(a, b, c, d)                                               \\\n+  a = PLUS(a, b);                                                              \\\n+  d = ROTATE(XOR(d, a), 16);                                                   \\\n+  c = PLUS(c, d);                                                              \\\n+  b = ROTATE(XOR(b, c), 12);                                                   \\\n+  a = PLUS(a, b);                                                              \\\n+  d = ROTATE(XOR(d, a), 8);                                                    \\\n+  c = PLUS(c, d);                                                              \\\n+  b = ROTATE(XOR(b, c), 7);\n+\n+static const char sigma[] = \"expand 32-byte k\";\n+static const char tau[] = \"expand 16-byte k\";\n+\n+void chacha_keysetup(chacha_ctx *x, const u8 *k, u32 kbits) {\n+  const char *constants;\n+\n+  x->input[4] = U8TO32_LITTLE(k + 0);\n+  x->input[5] = U8TO32_LITTLE(k + 4);\n+  x->input[6] = U8TO32_LITTLE(k + 8);\n+  x->input[7] = U8TO32_LITTLE(k + 12);\n+  if (kbits == 256) { /* recommended */\n+    k += 16;\n+    constants = sigma;\n+  } else { /* kbits == 128 */\n+    constants = tau;\n+  }\n+  x->input[8] = U8TO32_LITTLE(k + 0);\n+  x->input[9] = U8TO32_LITTLE(k + 4);\n+  x->input[10] = U8TO32_LITTLE(k + 8);\n+  x->input[11] = U8TO32_LITTLE(k + 12);\n+  x->input[0] = U8TO32_LITTLE(constants + 0);\n+  x->input[1] = U8TO32_LITTLE(constants + 4);\n+  x->input[2] = U8TO32_LITTLE(constants + 8);\n+  x->input[3] = U8TO32_LITTLE(constants + 12);\n+}\n+\n+void chacha_ivsetup(chacha_ctx *x, const u8 *iv, const u8 *counter) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536163",
      "id" : 214536163,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNjE2Mw==",
      "original_commit_id" : "09ec49ba31867187cecd631593d37bcc5f3ca72f",
      "original_position" : 77,
      "path" : "src/crypto/chacha.cpp",
      "position" : 77,
      "pull_request_review_id" : 151616192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-09-02T10:54:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536163",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Which separation? I took Andrew Moons implementation found at https://github.com/openssh/openssh-portable/blob/90e51d672711c19a36573be1785caf35019ae7a8/poly1305.c",
      "commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "created_at" : "2018-09-02T10:58:55Z",
      "diff_hunk" : "@@ -0,0 +1,198 @@\n+/*\n+ * Public Domain poly1305 from Andrew Moon\n+ * poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n+ */\n+\n+/* $OpenBSD: poly1305.c,v 1.3 2013/12/19 22:57:13 djm Exp $ */\n+\n+#include <crypto/poly1305.h>\n+\n+#define mul32x32_64(a, b) ((uint64_t)(a) * (b))\n+\n+#define U8TO32_LE(p)                                                           \\\n+  (((uint32_t)((p)[0])) | ((uint32_t)((p)[1]) << 8) |                          \\\n+   ((uint32_t)((p)[2]) << 16) | ((uint32_t)((p)[3]) << 24))\n+\n+#define U32TO8_LE(p, v)                                                        \\\n+  do {                                                                         \\\n+    (p)[0] = (uint8_t)((v));                                                   \\\n+    (p)[1] = (uint8_t)((v) >> 8);                                              \\\n+    (p)[2] = (uint8_t)((v) >> 16);                                             \\\n+    (p)[3] = (uint8_t)((v) >> 24);                                             \\\n+  } while (0)\n+\n+void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536423",
      "id" : 214536423,
      "in_reply_to_id" : 214536074,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNjQyMw==",
      "original_commit_id" : "09ec49ba31867187cecd631593d37bcc5f3ca72f",
      "original_position" : 24,
      "path" : "src/crypto/poly1305.cpp",
      "position" : 24,
      "pull_request_review_id" : 151616778,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-09-02T10:58:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536423",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors The existing ChaCha20 implementation doesn't do the XORing and can therefore only be used for the RNG.",
      "created_at" : "2018-09-02T10:59:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-417921804",
      "id" : 417921804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzkyMTgwNA==",
      "updated_at" : "2018-09-02T10:59:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417921804",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536689"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, I see, in that case the source code URL at the top of the file is confusing; probably should add a link to Moons' implementation instead / in addition.",
      "commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "created_at" : "2018-09-02T11:09:49Z",
      "diff_hunk" : "@@ -0,0 +1,198 @@\n+/*\n+ * Public Domain poly1305 from Andrew Moon\n+ * poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n+ */\n+\n+/* $OpenBSD: poly1305.c,v 1.3 2013/12/19 22:57:13 djm Exp $ */\n+\n+#include <crypto/poly1305.h>\n+\n+#define mul32x32_64(a, b) ((uint64_t)(a) * (b))\n+\n+#define U8TO32_LE(p)                                                           \\\n+  (((uint32_t)((p)[0])) | ((uint32_t)((p)[1]) << 8) |                          \\\n+   ((uint32_t)((p)[2]) << 16) | ((uint32_t)((p)[3]) << 24))\n+\n+#define U32TO8_LE(p, v)                                                        \\\n+  do {                                                                         \\\n+    (p)[0] = (uint8_t)((v));                                                   \\\n+    (p)[1] = (uint8_t)((v) >> 8);                                              \\\n+    (p)[2] = (uint8_t)((v) >> 16);                                             \\\n+    (p)[3] = (uint8_t)((v) >> 24);                                             \\\n+  } while (0)\n+\n+void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536689",
      "id" : 214536689,
      "in_reply_to_id" : 214536074,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNjY4OQ==",
      "original_commit_id" : "09ec49ba31867187cecd631593d37bcc5f3ca72f",
      "original_position" : 24,
      "path" : "src/crypto/poly1305.cpp",
      "position" : 24,
      "pull_request_review_id" : 151617053,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-09-02T11:10:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536689",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Instead of those U8TOU32_LE macros you can use our own function (ReadLE32,\nWriteLE32).\n\n>\n",
      "created_at" : "2018-09-02T11:34:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-417924355",
      "id" : 417924355,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzkyNDM1NQ==",
      "updated_at" : "2018-09-02T11:34:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417924355",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa: agree. Though as written in the PR description. I'd like to keep the code (extracted from openSSH) as identical as possible. I think (or hope) we can do refactoring after this has been merged.",
      "created_at" : "2018-09-02T11:44:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-417924839",
      "id" : 417924839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzkyNDgzOQ==",
      "updated_at" : "2018-09-02T11:44:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417924839",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r216966077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216966077"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems like a mistake? `*len24_out` is assigned twice? `*len24_out = 0;` should be removed? :-)",
      "commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "created_at" : "2018-09-12T09:49:35Z",
      "diff_hunk" : "@@ -0,0 +1,90 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+#include <support/cleanse.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *ctx, const uint8_t *key,\n+                          int keylen) {\n+  if (keylen != (32 + 32)) /* 2 x 256 bit keys */\n+    return -1;\n+  chacha_keysetup(&ctx->main_ctx, key, 256);\n+  chacha_keysetup(&ctx->header_ctx, key + 32, 256);\n+  return 0;\n+}\n+\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt) {\n+  const uint8_t one[8] = {1, 0, 0, 0, 0, 0, 0, 0}; /* NB little-endian */\n+  uint8_t expected_tag[POLY1305_TAGLEN], poly_key[POLY1305_KEYLEN];\n+  int r = -1;\n+\n+  uint64_t seqnr64 = seqnr;\n+  uint64_t chacha_iv = htole64(seqnr64);\n+  memset(poly_key, 0, sizeof(poly_key));\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, NULL);\n+  chacha_encrypt_bytes(&ctx->main_ctx, poly_key, poly_key, sizeof(poly_key));\n+\n+  if (!is_encrypt) {\n+    const uint8_t *tag = src + aadlen + len;\n+\n+    poly1305_auth(expected_tag, src, aadlen + len, poly_key);\n+    if (timingsafe_bcmp(expected_tag, tag, POLY1305_TAGLEN) != 0) {\n+      r = -1;\n+      goto out;\n+    }\n+  }\n+\n+  if (aadlen) {\n+    chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&chacha_iv, NULL);\n+    chacha_encrypt_bytes(&ctx->header_ctx, src, dest, aadlen);\n+  }\n+\n+  /* Set Chacha's block counter to 1 */\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, one);\n+  chacha_encrypt_bytes(&ctx->main_ctx, src + aadlen, dest + aadlen, len);\n+\n+  /* If encrypting, calculate and append tag */\n+  if (is_encrypt) {\n+    poly1305_auth(dest + aadlen + len, dest, aadlen + len, poly_key);\n+  }\n+  r = 0;\n+out:\n+  memory_cleanse(expected_tag, sizeof(expected_tag));\n+  memory_cleanse(&chacha_iv, sizeof(chacha_iv));\n+  memory_cleanse(poly_key, sizeof(poly_key));\n+  return r;\n+}\n+\n+int chacha20poly1305_get_length24(struct chachapolyaead_ctx *ctx,\n+                                uint32_t *len24_out, uint32_t seqnr,\n+                                const uint8_t *ciphertext) {\n+  uint8_t buf[3];\n+\n+  uint64_t seqnr64 = htole64(seqnr); //use LE for the nonce\n+  chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&seqnr64, NULL);\n+  chacha_encrypt_bytes(&ctx->header_ctx, ciphertext, buf, 3);\n+  *len24_out = 0;\n+  *len24_out = buf[0] | (buf[1] << 8) | (buf[2] << 16);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r216966077",
      "id" : 216966077,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjk2NjA3Nw==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 85,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : 85,
      "pull_request_review_id" : 154567852,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-09-12T09:49:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216966077",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r216966884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216966884"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just to double check: This bit shifting takes place on a 32-bit value which is then expanded to a 64-bit type. That is the intention? Applies to `h1 << 26`, `h2 << 20`, `h3 << 14` and `h4 << 8`.",
      "commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "created_at" : "2018-09-12T09:52:14Z",
      "diff_hunk" : "@@ -0,0 +1,198 @@\n+/*\n+ * Public Domain poly1305 from Andrew Moon\n+ * poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n+ */\n+\n+/* $OpenBSD: poly1305.c,v 1.3 2013/12/19 22:57:13 djm Exp $ */\n+\n+#include <crypto/poly1305.h>\n+\n+#define mul32x32_64(a, b) ((uint64_t)(a) * (b))\n+\n+#define U8TO32_LE(p)                                                           \\\n+  (((uint32_t)((p)[0])) | ((uint32_t)((p)[1]) << 8) |                          \\\n+   ((uint32_t)((p)[2]) << 16) | ((uint32_t)((p)[3]) << 24))\n+\n+#define U32TO8_LE(p, v)                                                        \\\n+  do {                                                                         \\\n+    (p)[0] = (uint8_t)((v));                                                   \\\n+    (p)[1] = (uint8_t)((v) >> 8);                                              \\\n+    (p)[2] = (uint8_t)((v) >> 16);                                             \\\n+    (p)[3] = (uint8_t)((v) >> 24);                                             \\\n+  } while (0)\n+\n+void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m,\n+                   size_t inlen, const unsigned char key[POLY1305_KEYLEN]) {\n+  uint32_t t0, t1, t2, t3;\n+  uint32_t h0, h1, h2, h3, h4;\n+  uint32_t r0, r1, r2, r3, r4;\n+  uint32_t s1, s2, s3, s4;\n+  uint32_t b, nb;\n+  size_t j;\n+  uint64_t t[5];\n+  uint64_t f0, f1, f2, f3;\n+  uint32_t g0, g1, g2, g3, g4;\n+  uint64_t c;\n+  unsigned char mp[16];\n+\n+  /* clamp key */\n+  t0 = U8TO32_LE(key + 0);\n+  t1 = U8TO32_LE(key + 4);\n+  t2 = U8TO32_LE(key + 8);\n+  t3 = U8TO32_LE(key + 12);\n+\n+  /* precompute multipliers */\n+  r0 = t0 & 0x3ffffff;\n+  t0 >>= 26;\n+  t0 |= t1 << 6;\n+  r1 = t0 & 0x3ffff03;\n+  t1 >>= 20;\n+  t1 |= t2 << 12;\n+  r2 = t1 & 0x3ffc0ff;\n+  t2 >>= 14;\n+  t2 |= t3 << 18;\n+  r3 = t2 & 0x3f03fff;\n+  t3 >>= 8;\n+  r4 = t3 & 0x00fffff;\n+\n+  s1 = r1 * 5;\n+  s2 = r2 * 5;\n+  s3 = r3 * 5;\n+  s4 = r4 * 5;\n+\n+  /* init state */\n+  h0 = 0;\n+  h1 = 0;\n+  h2 = 0;\n+  h3 = 0;\n+  h4 = 0;\n+\n+  /* full blocks */\n+  if (inlen < 16)\n+    goto poly1305_donna_atmost15bytes;\n+poly1305_donna_16bytes:\n+  m += 16;\n+  inlen -= 16;\n+\n+  t0 = U8TO32_LE(m - 16);\n+  t1 = U8TO32_LE(m - 12);\n+  t2 = U8TO32_LE(m - 8);\n+  t3 = U8TO32_LE(m - 4);\n+\n+  h0 += t0 & 0x3ffffff;\n+  h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n+  h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n+  h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n+  h4 += (t3 >> 8) | (1 << 24);\n+\n+poly1305_donna_mul:\n+  t[0] = mul32x32_64(h0, r0) + mul32x32_64(h1, s4) + mul32x32_64(h2, s3) +\n+         mul32x32_64(h3, s2) + mul32x32_64(h4, s1);\n+  t[1] = mul32x32_64(h0, r1) + mul32x32_64(h1, r0) + mul32x32_64(h2, s4) +\n+         mul32x32_64(h3, s3) + mul32x32_64(h4, s2);\n+  t[2] = mul32x32_64(h0, r2) + mul32x32_64(h1, r1) + mul32x32_64(h2, r0) +\n+         mul32x32_64(h3, s4) + mul32x32_64(h4, s3);\n+  t[3] = mul32x32_64(h0, r3) + mul32x32_64(h1, r2) + mul32x32_64(h2, r1) +\n+         mul32x32_64(h3, r0) + mul32x32_64(h4, s4);\n+  t[4] = mul32x32_64(h0, r4) + mul32x32_64(h1, r3) + mul32x32_64(h2, r2) +\n+         mul32x32_64(h3, r1) + mul32x32_64(h4, r0);\n+\n+  h0 = (uint32_t)t[0] & 0x3ffffff;\n+  c = (t[0] >> 26);\n+  t[1] += c;\n+  h1 = (uint32_t)t[1] & 0x3ffffff;\n+  b = (uint32_t)(t[1] >> 26);\n+  t[2] += b;\n+  h2 = (uint32_t)t[2] & 0x3ffffff;\n+  b = (uint32_t)(t[2] >> 26);\n+  t[3] += b;\n+  h3 = (uint32_t)t[3] & 0x3ffffff;\n+  b = (uint32_t)(t[3] >> 26);\n+  t[4] += b;\n+  h4 = (uint32_t)t[4] & 0x3ffffff;\n+  b = (uint32_t)(t[4] >> 26);\n+  h0 += b * 5;\n+\n+  if (inlen >= 16)\n+    goto poly1305_donna_16bytes;\n+\n+/* final bytes */\n+poly1305_donna_atmost15bytes:\n+  if (!inlen)\n+    goto poly1305_donna_finish;\n+\n+  for (j = 0; j < inlen; j++)\n+    mp[j] = m[j];\n+  mp[j++] = 1;\n+  for (; j < 16; j++)\n+    mp[j] = 0;\n+  inlen = 0;\n+\n+  t0 = U8TO32_LE(mp + 0);\n+  t1 = U8TO32_LE(mp + 4);\n+  t2 = U8TO32_LE(mp + 8);\n+  t3 = U8TO32_LE(mp + 12);\n+\n+  h0 += t0 & 0x3ffffff;\n+  h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n+  h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n+  h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n+  h4 += (t3 >> 8);\n+\n+  goto poly1305_donna_mul;\n+\n+poly1305_donna_finish:\n+  b = h0 >> 26;\n+  h0 = h0 & 0x3ffffff;\n+  h1 += b;\n+  b = h1 >> 26;\n+  h1 = h1 & 0x3ffffff;\n+  h2 += b;\n+  b = h2 >> 26;\n+  h2 = h2 & 0x3ffffff;\n+  h3 += b;\n+  b = h3 >> 26;\n+  h3 = h3 & 0x3ffffff;\n+  h4 += b;\n+  b = h4 >> 26;\n+  h4 = h4 & 0x3ffffff;\n+  h0 += b * 5;\n+  b = h0 >> 26;\n+  h0 = h0 & 0x3ffffff;\n+  h1 += b;\n+\n+  g0 = h0 + 5;\n+  b = g0 >> 26;\n+  g0 &= 0x3ffffff;\n+  g1 = h1 + b;\n+  b = g1 >> 26;\n+  g1 &= 0x3ffffff;\n+  g2 = h2 + b;\n+  b = g2 >> 26;\n+  g2 &= 0x3ffffff;\n+  g3 = h3 + b;\n+  b = g3 >> 26;\n+  g3 &= 0x3ffffff;\n+  g4 = h4 + b - (1 << 26);\n+\n+  b = (g4 >> 31) - 1;\n+  nb = ~b;\n+  h0 = (h0 & nb) | (g0 & b);\n+  h1 = (h1 & nb) | (g1 & b);\n+  h2 = (h2 & nb) | (g2 & b);\n+  h3 = (h3 & nb) | (g3 & b);\n+  h4 = (h4 & nb) | (g4 & b);\n+\n+  f0 = ((h0) | (h1 << 26)) + (uint64_t)U8TO32_LE(&key[16]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r216966884",
      "id" : 216966884,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjk2Njg4NA==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 186,
      "path" : "src/crypto/poly1305.cpp",
      "position" : 186,
      "pull_request_review_id" : 154568860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-09-12T09:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216966884",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
