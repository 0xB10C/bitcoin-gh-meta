[
   {
      "author_association" : "MEMBER",
      "body" : "What would you want to do in this case? Terminate the program? Log a warning?\r\n\r\n(it's only used as additional entropy source, so maybe even \"return 0 and ignore otherwise\")",
      "created_at" : "2019-10-30T10:20:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17313#issuecomment-547831854",
      "id" : 547831854,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17313",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzgzMTg1NA==",
      "updated_at" : "2019-10-30T10:21:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547831854",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj \r\n\r\nWe could change the signature to `bool GetRdRand(uint64_t& out)` and make it so that callers only do the `hasher.Write(â¦ data assumed to be from RdRand â¦)` call if `GetRdRand` succeeds. In other words: act like we would have done if `!g_rdseed_supported` in case of `GetRdRand` failure.\r\n\r\nAlternatively:  as long as we keep on using it only as an _additional_ entropy source I guess `uint64_t r1 = 0;` on L145 would be enough. (Obvious theoretical downside: if someone thinks `GetRdRand()` can be used as the _only_ entropy source :))\r\n",
      "created_at" : "2019-10-30T10:52:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17313#issuecomment-547843468",
      "id" : 547843468,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17313",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzg0MzQ2OA==",
      "updated_at" : "2019-10-30T10:55:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547843468",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
