[
   {
      "author_association" : "MEMBER",
      "body" : "Wow! That was quick! :)\r\n\r\nStrong Concept ACK\r\n\r\nThanks for taking the time to get rid of those once and for all :)",
      "created_at" : "2019-11-05T20:58:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550016801",
      "id" : 550016801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDAxNjgwMQ==",
      "updated_at" : "2019-11-05T20:58:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550016801",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Test failure in `util_tests/util_ChainMerge` explained:\r\n- This test passes `-notestnet=1` and `-noregtest=1` to the argument parser.\r\n- Somehow, this ends up as `InterpretBool(\"1testnet=1\")`\r\n- `atoi` returns `1` in this case (evaluating to `true`) because it stops parsing at the first non-digit, our `ParseInt64` fails however and returns `false`.\r\nThis causes the test to exit with a different hash.\r\n\r\n**Do we really support `-notestnet=1` and `-noregtest=1`?** I've never seen this syntax.\r\n",
      "created_at" : "2019-11-05T21:39:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550033222",
      "id" : 550033222,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDAzMzIyMg==",
      "updated_at" : "2019-11-05T21:46:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550033222",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> **Do we really support `-notestnet=1` and `-noregtest=1`?** I've never seen this syntax.\r\n\r\nI'll take a look at this. We could make `-notestnet` and `testnet=0` style options into errors, though this PR is probably not the best place to do it, and maybe there is some use case if you have a configuration file that normally sets testnet, but you want to override it on the command line and use the settings on regtest instead or something.\r\n\r\nAny case, will first debug and see what causes reported `1testnet=1`",
      "created_at" : "2019-11-05T21:51:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550037985",
      "id" : 550037985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDAzNzk4NQ==",
      "updated_at" : "2019-11-05T21:51:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550037985",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "We ideally need a way to signal parse errors from `GetArg` functions, there's a similar situation in `ArgsManager::GetArg(int64)`. Maybe they could return Optional. Out of scope for this PR anyhow, it only needs to do the sane thing here.\r\n\r\n> some use case if you have a configuration file that normally sets testnet, but you want to override it on the command line and use the settings on regtest instead or something.\r\n\r\nIn that case couldn't you simply do `-testnet=0` or `-regtest=0`? I don't see the point of `-noX` with a value.\r\n\r\n> though this PR is probably not the best place to do it\r\n\r\nI agree, I'm tempted to just drop that commit, though it means `atoi(string)` sticks around.",
      "created_at" : "2019-11-05T21:54:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550039255",
      "id" : 550039255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDAzOTI1NQ==",
      "updated_at" : "2019-11-05T21:57:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550039255",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK https://github.com/bitcoin/bitcoin/pull/17385/commits/88e83075406493304c3e33c9c1b6a451322ce634",
      "created_at" : "2019-11-05T22:35:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550054169",
      "id" : 550054169,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDA1NDE2OQ==",
      "updated_at" : "2019-11-06T01:26:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550054169",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Discussion seems somewhat offtopic here, maybe discuss argument parsing behavior more in #16545.\r\n\r\n> We ideally need a way to signal parse errors from `GetArg` functions, there's a similar situation in `ArgsManager::GetArg(int64)`. Maybe they could return Optional. Out of scope for this PR anyhow, it only needs to do the sane thing here.\r\n\r\nI could be wrong but I think it would actually be less work, and friendlier to both users and developers to validate settings on initialization rather than use. #16545 is intended to move in this direction.\r\n\r\n> > some use case if you have a configuration file that normally sets testnet, but you want to override it on the command line and use the settings on regtest instead or something.\r\n> \r\n> In that case couldn't you simply do `-testnet=0` or `-regtest=0`? I don't see the point of `-noX` with a value.\r\n\r\nFor int and bool arguments, I think it's generally reasonable to treat `-noarg` and `-noarg=1` the same as `-arg=0`.\r\n\r\n> I agree, I'm tempted to just drop that commit, though it means `atoi(string)` sticks around.\r\n\r\nI think it would be best to save both d78e7be42300c4a313ad94aae998b04c25881cba and afb58090ba4f834aa40730512f2485c09f33f32e for another PR and not include them here. These are user facing changes which could use release notes and better test coverage.",
      "created_at" : "2019-11-05T22:44:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550057323",
      "id" : 550057323,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDA1NzMyMw==",
      "updated_at" : "2019-11-05T22:44:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550057323",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think it would be best to save both d78e7be and afb5809 for another PR and not include them here. \r\n\r\nI'm fine with adding a release not if you think this is a significant user-facing change, and add a test for these two little functions, but I'd really prefer not to keep either the current behavior or code.",
      "created_at" : "2019-11-05T22:56:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550060888",
      "id" : 550060888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDA2MDg4OA==",
      "updated_at" : "2019-11-05T23:05:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550060888",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17050](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17050.html) (tests: Add fuzzing harnesses for functions parsing scripts, numbers, JSON and HD keypaths (bip32) by practicalswift)\n* [#15934](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15934.html) (Merge settings one place instead of five places by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-11-05T23:19:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550067918",
      "id" : 550067918,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDA2NzkxOA==",
      "updated_at" : "2019-11-05T23:19:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550067918",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm fine with adding a release not if you think this is a significant user-facing change, but I'd really prefer not to keep either the current behavior or code.\r\n\r\nMy thinking is that there probably shouldn't be user-facing changes in a PR that's supposed to be a refactor, and that this PR is substantial enough with 17 commits, that pulling out 2 of them to a dedicated PR wouldn't make it worse off.\r\n\r\nBut the user-facing changes are maybe more minor than I would have thought. With your two commits arguments such as `\"5 \"` or `\" 5\"` or `\"5.\"` which are currently parsed as `5`/`true` will now be parsed as `0`/`false`. This applies to numeric arguments with leading whitespace or trailing characters.",
      "created_at" : "2019-11-06T00:22:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550084451",
      "id" : 550084451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDA4NDQ1MQ==",
      "updated_at" : "2019-11-06T00:22:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550084451",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> My thinking is that there probably shouldn't be user-facing changes in a PR that's supposed to be a refactor, and that this PR is substantial enough with 17 commits, that pulling out 2 of them to a dedicated PR wouldn't make it worse off.\r\n\r\nMany of the changes in this PR make a subtle difference in the case of invalid input, due to adding strict parse error checking (I mention this in the OP). Maybe I shouldn't call it a refactor. But it's not really a bugfix or feature either.\r\n\r\n> and that this PR is substantial enough with 17 commits, that pulling out 2 of them to a dedicated PR wouldn't make it worse off.\r\n\r\nSure. But remove any and the cleanup in `util.cpp`/`util.h` isn't possible. Which was one of my motivations to do this in the first place.",
      "created_at" : "2019-11-06T00:33:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550087031",
      "id" : 550087031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDA4NzAzMQ==",
      "updated_at" : "2019-11-06T00:33:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550087031",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'll review this tomorrow. I think all the commits here that remove uses of C functions to parse strings which are supposed to have a rigid format (numbers in filenames, test strings, descriptors, database properties) are great, and it's great to clean up this code and avoid misusing these C functions.\r\n\r\nBut while I'll need to review the PR more carefully to be sure, I think the few changes here that can actually affect users should probably be done more carefully. For example, instead of taking a strangely formatted boolean value that was previously interpreted as `true` and now silently interpreting it as `false`, actually add proper error handling and make it an error to specify a badly formatted value. Or if this is too much work, at least log a warning about badly formatted values. And if there has to be a visible change in behavior, document what the change is in release notes. And if the change is too niche to document in release notes, at least say what the change of behavior is in the commit message.\r\n\r\nAlternately, it it's possible to drop a few commits in this PR to make it a boring plain refactoring, that would be great, because we'd still be eliminating the majority of misused C function calls, and just adding one or two items to your \"known violations\" list that could be addressed in followups.",
      "created_at" : "2019-11-06T04:41:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17385#issuecomment-550140652",
      "id" : 550140652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17385",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDE0MDY1Mg==",
      "updated_at" : "2019-11-06T04:41:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550140652",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
