[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706015262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706015262"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wasn't `path.string()` already explicit enough? Also, when should `u8string` be used instead? Finally, `strprintf(\"%s\", path)` without any helpers still compiles? When should/shouldn't that be used?",
      "commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "created_at" : "2021-09-10T08:56:02Z",
      "diff_hunk" : "@@ -114,16 +114,16 @@ bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        LogPrintf(\"Missing or invalid file %s\\n\", fs::PathToString(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706015262",
      "id" : 706015262,
      "line" : 117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjAxNTI2Mg==",
      "original_commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "original_line" : 117,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : 23,
      "pull_request_review_id" : 751195114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T08:56:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706015262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22762](https://github.com/bitcoin/bitcoin/pull/22762) (Raise InitError when peers.dat is invalid or corrupted by MarcoFalke)\n* [#22663](https://github.com/bitcoin/bitcoin/pull/22663) (dbwrapper: wrap options in unique_ptr and use DeleteOptions by Crypt-iQ)\n* [#22350](https://github.com/bitcoin/bitcoin/pull/22350) (Rotate debug.log file by LarryRuane)\n* [#20974](https://github.com/bitcoin/bitcoin/pull/20974) (test: add test for corrupt wallet bdb logs by ryanofsky)\n* [#20744](https://github.com/bitcoin/bitcoin/pull/20744) (Use std::filesystem. Remove Boost Filesystem & System by fanquake)\n* [#20435](https://github.com/bitcoin/bitcoin/pull/20435) (util: use stronger-guarantee rename method by vasild)\n* [#20331](https://github.com/bitcoin/bitcoin/pull/20331) (allow -loadblock blocks to be unsorted by LarryRuane)\n* [#10443](https://github.com/bitcoin/bitcoin/pull/10443) (Add fee_est tool for debugging fee estimation code by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-09-10T09:40:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916773723",
      "id" : 916773723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pNtb",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T09:40:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916773723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-09-10T10:03:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916786722",
      "id" : 916786722,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pQ4i",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T10:03:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916786722",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706070518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706070518"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Wasn't `path.string()` already explicit enough?\r\n\r\nThe problem with `path.string()` isn't the explicitness, it's the unsafe behavior with the new path class on windows, where it returns a string in an arbitrary encoding based on the local code page. In preparation for this, this PR is disabling the `path.string()` now so it isn't misused later, and adding `PathToString` as a replacement which preserves the behavior we need and is complementary to `PathFromStrong`.\r\n\r\n> Also, when should `u8string` be used instead?\r\n\r\n`u8string/u8path` functions should be used for converting strings/paths where the strings must be valid UTF-8 strings. `PathToString/PathFromString` functions should be used otherwise.\r\n\r\nU8 functions are the right functions to call in JSON-RPC code and Qt string code because Qt strings and JSON requests/responses require valid UTF-8. But otherwise `PathToString/PathFromString` functions which pass along strings verbatim and avoid making encoding assumptions are more appropriate. `PathToString/PathFromString` functions are the right functions to call for parsing argv paths, parsing environment variable paths, parsing config paths, writing to log files, and calling POSIX APIs that expect and return native 8-bit path strings. In all these places UTF-8 encoding is typical and nice to have, but not something that should be enforced or required. If someone has their home directory set to a non-utf8 path, `PathToString/PathFromString` won't mangle the string or care about the encoding.\r\n\r\nEverything above is actually documented in the followup commit 3e88c9f6b4e84ab5da78f4862266b5ff13bb8fc0 ([tag](https://github.com/ryanofsky/bitcoin/commits/review.20744.8-edit.1)) posted https://github.com/bitcoin/bitcoin/pull/20744#issuecomment-916627496, but I threw together the documentation really quickly while trying to converge on a solution, so it could use some cleanup and reshuffling, either in this PR or the std::filesystem PR later when these functions stop being identical stubs.\r\n\r\n> Finally, `strprintf(\"%s\", path)` without any helpers still compiles? When should/shouldn't that be used?\r\n\r\nI can look into that because I'm not too familiar with tinyformat, but I would suspect that this always compiled and never worked at runtime maybe? I'm not sure how it could have worked unless tinyformat knew about boost types.",
      "commit_id" : "ddbfc51002d3ef3238bc796b1aec159f361828b9",
      "created_at" : "2021-09-10T10:21:51Z",
      "diff_hunk" : "@@ -114,16 +114,16 @@ bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        LogPrintf(\"Missing or invalid file %s\\n\", fs::PathToString(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706070518",
      "id" : 706070518,
      "in_reply_to_id" : 706015262,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjA3MDUxOA==",
      "original_commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "original_line" : 117,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : null,
      "pull_request_review_id" : 751266886,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T10:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706070518",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706072473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706072473"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think tinyformat just \"emulates\" our `::ToString(path)`, which should also compile (didn't try)",
      "commit_id" : "ddbfc51002d3ef3238bc796b1aec159f361828b9",
      "created_at" : "2021-09-10T10:25:23Z",
      "diff_hunk" : "@@ -114,16 +114,16 @@ bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        LogPrintf(\"Missing or invalid file %s\\n\", fs::PathToString(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706072473",
      "id" : 706072473,
      "in_reply_to_id" : 706015262,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjA3MjQ3Mw==",
      "original_commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "original_line" : 117,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : null,
      "pull_request_review_id" : 751269463,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T10:25:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706072473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706086559"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706086559"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think tinyformat just \"emulates\" our `::ToString(path)`, which should also compile (didn't try)\r\n\r\nApparently tinyformat is using operator<<, which boost path and std path both provide. I found I could disable it with\r\n\r\n```c++\r\ntemplate<class CharT, class Traits>\r\nstd::basic_ostream<CharT,Traits>& operator<<(std::basic_ostream<CharT,Traits>& os, const path& p)\r\n{\r\n    static_assert(sizeof(CharT) == -1, \"Implicit path to string conversion is error-prone and not supported, please use explicit PathToString call\");\r\n    return os;\r\n}\r\n```\r\n\r\nBut I found that this also broke some boost tests, and also I'm a little reluctant to make this change anyway since formatting support seems convenient for debugging. I'm leaving this alone for now but happy to do whatever people prefer here.\r\n",
      "commit_id" : "ddbfc51002d3ef3238bc796b1aec159f361828b9",
      "created_at" : "2021-09-10T10:51:05Z",
      "diff_hunk" : "@@ -114,16 +114,16 @@ bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        LogPrintf(\"Missing or invalid file %s\\n\", fs::PathToString(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706086559",
      "id" : 706086559,
      "in_reply_to_id" : 706015262,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjA4NjU1OQ==",
      "original_commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "original_line" : 117,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : null,
      "pull_request_review_id" : 751287335,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T10:57:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706086559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "mingw complains:\r\n```\r\nwallet/rpcdump.cpp: In lambda function:\r\nwallet/rpcdump.cpp:553:76: error: use of deleted function âfs::path::path(const string&)â\r\n  553 |         file.open(request.params[0].get_str(), std::ios::in | std::ios::ate);\r\n      |                                                                            ^\r\nIn file included from ./flatfile.h:11,\r\n                 from ./chain.h:11,\r\n                 from wallet/rpcdump.cpp:5:\r\n./fs.h:40:5: note: declared here\r\n   40 |     path(const std::string& string) = delete;\r\n      |     ^~~~\r\nmake[2]: *** [Makefile:10361: wallet/libbitcoin_wallet_a-rpcdump.o] Error 1\r\n```",
      "created_at" : "2021-09-10T10:54:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916814941",
      "id" : 916814941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pXxd",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T10:54:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916814941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706099389"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706099389"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> PathToString/PathFromString functions should be used otherwise\r\n> U8 functions are the right functions to call in JSON-RPC code and Qt string code ...\r\n\r\n\r\nI am not sure how this can be achieved, without something like bilingual_str.\r\n\r\nFor example, `InitError`s are passed to Qt, as well as stderr, as well as the debug log. If Qt requires `u8string` and the others require `PathToString`, then with the current approach here this is impossible to achieve, no?",
      "commit_id" : "ddbfc51002d3ef3238bc796b1aec159f361828b9",
      "created_at" : "2021-09-10T11:15:19Z",
      "diff_hunk" : "@@ -114,16 +114,16 @@ bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n+        LogPrintf(\"Missing or invalid file %s\\n\", fs::PathToString(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706099389",
      "id" : 706099389,
      "in_reply_to_id" : 706015262,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjA5OTM4OQ==",
      "original_commit_id" : "1e071392799def86e1cb6d93e83b985df025f0f8",
      "original_line" : 117,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : null,
      "pull_request_review_id" : 751303632,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T11:15:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706099389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916814941\r\n\r\n> mingw complains:\r\n\r\nThanks for headsup, and this should be addressed in the last push",
      "created_at" : "2021-09-10T11:15:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916826194",
      "id" : 916826194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pahS",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T11:15:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916826194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This PR is basically ready but I still am looking for feedback about about whether best solution to `path.string()` method and `path(string)` constructor brokenness on windows is to make these methods uncallable and replace with them with `PathToString` `PathFromString` functions like this PR is doing. Or to just override these methods to keep current boost path behavior, and actually do what we want, but not follow the standard path class behavior. Or to take an alternate approach like using the new (since mid-2019) windows build option to force a UTF-8 code page, and not worry about older windows versions.\r\n\r\n---\r\n\r\nOther remaining todos here: improve fs.h documentation and split commit into two parts so fs.h functions are added in the first commit, and code is switched over to call the new functions in a second commit.\r\n",
      "created_at" : "2021-09-10T11:19:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916828329",
      "id" : 916828329,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pbCp",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T11:19:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916828329",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Or to take an alternate approach like using the new (since mid-2019) windows build option to force a UTF-8 code page\r\n\r\nIf this fixes all our issues and avoids developer headaches when writing code (which conversion function to use), that seems most preferable.",
      "created_at" : "2021-09-10T11:35:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916836553",
      "id" : 916836553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pdDJ",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T11:35:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916836553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > Or to take an alternate approach like using the new (since mid-2019) windows build option to force a UTF-8 code page\r\n> \r\n> If this fixes all our issues and avoids developer headaches when writing code (which conversion function to use), that seems most preferable.\r\n\r\nSorry, I thought I had posted more details/drawbacks about this alternate approach previously, but I don't think I ever did. Details can be found at https://docs.microsoft.com/en-us/windows/apps/design/globalizing/use-utf8-code-page#set-a-process-code-page-to-utf-8\r\n\r\nThe only impact I believe this alternate approach would have for future developers (as opposed to current reviewers) compared to the current approach is that future developers will be able to write `p.string()` instead of `PathToString(p)` and write `fs::path(s)` instead of `fs::PathFromString(s)`. And I think this difference is actually a drawback, not a benefit of that approach, because the `fs::path` constructor is not explicit, and the implicit conversions can lead to unintended bugs that are less likely to be cause by reviewer. Also I think it is better to have our own `PathToString` and `PathFromString` functions because these give a way to document more obviously which functions should be used for our project, instead of leaving developers looking at abstract cppreference pages that do not give concrete information about what the functions actually do on different platforms, or give any guidance on whether it is appropriate to chose `.string()` or `.u8string()` or `.native()` conversion methods in the context of writing bitcoin application code.\r\n\r\nAnother drawback of the UTF-8 windows code page build option is that is silently ignored by older versions of windows.\r\n\r\nAnother drawback of the UTF-8 windows code page build option is that it is not yet unimplemented, and will require someone with more knowledge than me of both the MSVC and Mingw builds to implement, while this PR is a straightforward code change that is basically ready to go.\r\n\r\n---\r\n\r\nUpdated ddbfc51002d3ef3238bc796b1aec159f361828b9 -> d312e529ce904c0dc8244f29424b8cba9c7da9cd ([`pr/u8path.2`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.2) -> [`pr/u8path.3`](https://github.com/ryanofsky/bitcoin/commits/pr/u8path.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/u8path.2..pr/u8path.3)) to fix https://cirrus-ci.com/task/6285153786920960",
      "created_at" : "2021-09-10T12:06:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916852960",
      "id" : 916852960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842phDg",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T12:32:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916852960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Out of curiosity, what is the leveldb approach to handle paths on Windows?",
      "created_at" : "2021-09-10T12:51:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916880346",
      "id" : 916880346,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842pnva",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T12:51:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916880346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "friendly ping @sipsorcery ",
      "created_at" : "2021-09-10T13:26:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916903617",
      "id" : 916903617,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842ptbB",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T13:26:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916903617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> friendly ping @sipsorcery\r\n\r\n:facepalm: To be clear I think that the build hack would be inferior to this PR in every way! I think think the build hack is not worth implementing or even discussing seriously. The only reason I brought it up was for completeness and to illustrate how fragile and unpredictable the [`std::filesystem::path(std::string)` implicit constructor](https://en.cppreference.com/w/cpp/filesystem/path/path) and [`std::filesystem::path::string()` method](https://en.cppreference.com/w/cpp/filesystem/path/string) are, and why I think we should forbid them in favor of explicit `PathFromString/PathToString` functions that we can call straightforwardly and explain straightforwardly, to preserve correct behavior of `boost::filesystem::path`, and avoid a small pitfall in `std::filesystem::path`!\r\n\r\n> Out of curiosity, what is the leveldb approach to handle paths on Windows?\r\n\r\nleveldb just uses string paths, not `boost::filessystem::path` or `std::filesystem::path`. Handling windows paths is really not that complicated. All you have to do is avoid older code page APIs and use newer APIs that ignore the windows code page. In the new `std::filesystem` there are two methods that are using the windows code page, instead of ignoring it like we want, and like the `boost::filesystem` equivalents did. So this PR is just switching code to avoid these two particular methods, and prevent them from being called in the future.",
      "created_at" : "2021-09-10T16:19:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917032695",
      "id" : 917032695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qM73",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T16:19:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917032695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on adding own explicit path <-> string conversion functions.\r\n\r\n> To be clear I think that the build hack would be inferior to this PR in every way! I think think the build hack is not worth implementing or even discussing seriously.\r\n\r\nSorry Russ, but I don't follow what \"the build hack\" do you mean.\r\n\r\n> > Out of curiosity, what is the leveldb approach to handle paths on Windows?\r\n> \r\n> leveldb just uses string paths, not `boost::filessystem::path` or `std::filesystem::path`. Handling windows paths is really not that complicated. All you have to do is avoid older code page APIs and use newer APIs that ignore the windows code page. In the new `std::filesystem` there are two methods that are using the windows code page, instead of ignoring it like we want, and like the `boost::filesystem` equivalents did. So this PR is just switching code to avoid these two particular methods, and prevent them from being called in the future.\r\n\r\nThanks for explanation!",
      "created_at" : "2021-09-10T17:43:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917091206",
      "id" : 917091206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qbOG",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T17:43:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917091206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Sorry Russ, but I don't follow what \"the build hack\" do you mean.\r\n\r\nSorry, my fault for making this thread really confusing, but I wasn't sure the reason you were pinging windows build guru sipsorcery and I thought the reason was that you wanted sipsorcery to implement the \"build option\" discussed here https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-916836553 which I do not think is a good idea, and I'm sorry I brought up!",
      "created_at" : "2021-09-10T18:00:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917101941",
      "id" : 917101941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qd11",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T18:00:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917101941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Do I understand correctly that _all_ changes (except for `fs.h` and `fs.cpp`) are \"forced\" by a compiler due to https://github.com/bitcoin/bitcoin/blob/d312e529ce904c0dc8244f29424b8cba9c7da9cd/src/fs.h#L40-L42?",
      "created_at" : "2021-09-10T18:14:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917111119",
      "id" : 917111119,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qgFP",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T18:15:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917111119",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Do I understand correctly that _all_ changes (except for `fs.h` and `fs.cpp`) are \"forced\" by a compiler\r\n\r\nYes that is exactly right. I'm working on splitting up the PR into commits and rewriting the description and documentation now that various test bugs have been fixed, but this PR is just forbidding calls to `fs::path` methods that work ok on unix, but are confusing, badly documented, and can mangle strings on windows. It is replacing those method calls with `PathToString/PathFromString` calls and `u8string/u8path` calls which all do the same thing in the `boost::filesystem` implemenation, but will avoid complexity and bugs after the`std::filesystem` switch.",
      "created_at" : "2021-09-10T18:29:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917120632",
      "id" : 917120632,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qiZ4",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T18:29:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917120632",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@hebasto this stuff is a bit above my pay grade I'm afraid. I'm ok with the Win32 API's, such as `CreateFileA` for ANSI, `CreateFileW` for Unicode (UTF-16) etc. but when it comes to the file paths in the standard library `std::filesystem` and `boost` I'm out of my depth.\r\n\r\nIt's a pity @ken2812221 isn't still around, he seemed to have a good grip on this stuff. I've always wondered where he got to?\r\n\r\nhttps://github.com/bitcoin/bitcoin/pulls?q=is%3Apr+author%3Aken2812221+unicode ",
      "created_at" : "2021-09-10T18:39:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917126876",
      "id" : 917126876,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842qj7c",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T18:39:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917126876",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/197660?v=4",
         "events_url" : "https://api.github.com/users/sipsorcery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipsorcery/followers",
         "following_url" : "https://api.github.com/users/sipsorcery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipsorcery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipsorcery",
         "id" : 197660,
         "login" : "sipsorcery",
         "node_id" : "MDQ6VXNlcjE5NzY2MA==",
         "organizations_url" : "https://api.github.com/users/sipsorcery/orgs",
         "received_events_url" : "https://api.github.com/users/sipsorcery/received_events",
         "repos_url" : "https://api.github.com/users/sipsorcery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipsorcery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipsorcery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm working on improving documentation so this will be easier to understand, but the idea is just that we need to call functions that convert strings predictably and ignore the current windows \"code page\". We need to avoid calling functions that convert strings unpredictably and use the the windows code page.\r\n\r\nThe `fs::path` class happens to have two methods which we are calling which ignore the windows code page currently in the `boost::filesystem` implementation but unfortunately will start using the windows code page after #20744 which switches to the `std::filesystem` implementation.\r\n\r\nSo this PR is just forbidding calls to those two methods and replacing them with other calls.",
      "created_at" : "2021-09-10T18:53:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#issuecomment-917135109",
      "id" : 917135109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22937",
      "node_id" : "IC_kwDOABII5842ql8F",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T18:54:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917135109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706413370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706413370"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we should also add\r\n```suggestion\r\n    path& operator=(std::string&) = delete;\r\n    path& operator/=(const std::string&) = delete;\r\n    path& append(const std::string&) = delete;\r\n```",
      "commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "created_at" : "2021-09-10T19:14:40Z",
      "diff_hunk" : "@@ -15,7 +15,55 @@\n #include <boost/filesystem/fstream.hpp>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs {\n+\n+using namespace boost::filesystem;\n+\n+/**\n+ * Path class wrapper to prepare application code for transition from\n+ * boost::filesystem::path to std::filesystem::path.\n+ *\n+ * The new std::filesystem::path class lacks imbue functionality boost provided\n+ * to make implicit path/string functionality work safely on windows, so this\n+ * class hides the unsafe methods, and provides explicit PathToString /\n+ * PathFromString functions which be needed after the transition from boost to\n+ * convert to native path strings, and explicit u8string / u8path functions to\n+ * convert to UTF-8 strings. See\n+ * https://github.com/bitcoin/bitcoin/pull/20744#issuecomment-916627496 for more\n+ * information about the boost path transition and windows encoding ambiguities.\n+ */\n+class path : public boost::filesystem::path\n+{\n+public:\n+    using boost::filesystem::path::path;\n+    path(boost::filesystem::path path) : boost::filesystem::path::path(std::move(path)) {}\n+    path(const std::string& string) = delete;\n+    path& operator=(std::string&) = delete;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22937#discussion_r706413370",
      "id" : 706413370,
      "line" : 41,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjQxMzM3MA==",
      "original_commit_id" : "d312e529ce904c0dc8244f29424b8cba9c7da9cd",
      "original_line" : 41,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/fs.h",
      "position" : 28,
      "pull_request_review_id" : 751721216,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22937",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-10T19:14:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706413370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
