[
   {
      "author_association" : "NONE",
      "body" : "Doesn't make any difference in rounding down or up the fee. Paying one satoshi more or less doesn't even matter at all since a satoshi is basically worthless. \r\n\r\n> It is unlikely that a user can trigger this as it requires a very specific set of rounding errors to occur as well as the transaction not needing any change and being right on the lower bound of the exact match window. However I was able to trigger the assertion while running coin selection simulations, albeit after thousands of transactions and with some weird feerates.\r\n\r\nThis pr shouldn't be merged. Even op acknowledged that the end user is unlikely to face any issue like he did in his simulations.\r\n",
      "created_at" : "2021-09-11T11:26:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-917390481",
      "id" : 917390481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
      "node_id" : "IC_kwDOABII5842rkSR",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-11T11:26:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917390481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/90217294?v=4",
         "events_url" : "https://api.github.com/users/bitcoin-public-domain/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bitcoin-public-domain/followers",
         "following_url" : "https://api.github.com/users/bitcoin-public-domain/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bitcoin-public-domain/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bitcoin-public-domain",
         "id" : 90217294,
         "login" : "bitcoin-public-domain",
         "node_id" : "MDQ6VXNlcjkwMjE3Mjk0",
         "organizations_url" : "https://api.github.com/users/bitcoin-public-domain/orgs",
         "received_events_url" : "https://api.github.com/users/bitcoin-public-domain/received_events",
         "repos_url" : "https://api.github.com/users/bitcoin-public-domain/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bitcoin-public-domain/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bitcoin-public-domain/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bitcoin-public-domain"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It seems odd to me that the wallet and policy should have different fee calculation results for the same transaction.\r\n\r\nIn terms of pre-signed transactions, what security implications do you imagine? I don't think it is possible for this to cause a transaction's feerate to fall below the default minimum relay fee because the result of the fee calculation at the minimum relay fee is always an integer since the minimum relay fee is an integer. I believe the same is true for the incremental relay fee and how that calculation works.",
      "created_at" : "2021-09-12T00:01:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-917506157",
      "id" : 917506157,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
      "node_id" : "IC_kwDOABII5842sAht",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-12T00:01:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917506157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  I believe the same is true for the incremental relay fee and how that calculation works.\r\n\r\nI don't think it's true in all cases. Take clawback tx A with fee such as it would be rounded up after this PR, not before. The application wants to replace it with clawback tx B with fee equal to `A's fee + incremental relay fee` such as it would not be rounded up.\r\nBefore this PR tx B would be accepted, after it would be refused.\r\n\r\nOf course it'd be reckless for such an application to not take some leeway in addition to the incremental fee here, but still this PR would be a behaviour change for this edge case.",
      "created_at" : "2021-09-12T14:12:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-917644192",
      "id" : 917644192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
      "node_id" : "IC_kwDOABII5842siOg",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-12T14:12:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917644192",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't think it's true in all cases. Take clawback tx A with fee such as it would be rounded up after this PR, not before. The application wants to replace it with clawback tx B with fee equal to `A's fee + incremental relay fee` such as it would not be rounded up.\r\n> Before this PR tx B would be accepted, after it would be refused.\r\n\r\nHow so? Can you provide a example? I can't think of how that would happen. `CFeeRate::GetFee` is never called on the original feerate in validation, and the calculation of a feerate for a transaction is not changed by this PR.\r\n\r\nConsider the example I give in the test: tx A is a 1-in-1-out 110 vbyte tx that pays a feerate of 1.85 sat/vbyte for an absolute fee if 203.5 sats. With rounding down, A will pay 203 sats. We replace this with tx B where the only thing different is the output, but it is of the same type so the size remains the same. Paying the incremental relay fee should be enough for B to replace A. The incremental feerate is 1 sat/vbyte, so regardless of rounding, it is always 110 sats. So B pays 313 sats.\r\n\r\nWhen validating whether B is allowed to replace A, it needs to pass two fee related checks: [`PaysMoreThanConflicts`](https://github.com/bitcoin/bitcoin/blob/master/src/policy/rbf.cpp#L124) (called [here](https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L785)) and [`PaysForRBF`](https://github.com/bitcoin/bitcoin/blob/master/src/policy/rbf.cpp#L150) (called [here](https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L806)). `PaysMoreThanConflicts` computes the feerates for A and B and just checks that B's feerate is greater than A's. The rounding of computing the feerate given the fee paid and size **did not change**, so both before and after this PR, the calculation for A is `203 * 1000 / 110 = 1845`. The calculation for B is `313 * 1000 / 110 = 2845`. B's feerate is greater than A's, so this check passes, both before and after this PR. `PaysForRBF` checks that the fees for B is greater than A. Then it checks that the difference is not less than the incremental relay fee. Because the incremental relay fee is an integer, the calculation before and after this PR is the same - 110 sats.\r\n\r\nAt no point in this checking process is the original feerate of 1.85 sats/vbyte used because validation does not know that was the original targeted feerate. The only times where validation calls `CFeeRate::GetFee` is to calculate the fee at the minimum relay feerate and the incremental relay feerate, both of which have integers as their default, so their calculations do not change. So I don't see how this change would have any effect on whether transactions are accepted.",
      "created_at" : "2021-09-12T16:45:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-917669901",
      "id" : 917669901,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
      "node_id" : "IC_kwDOABII5842sogN",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-12T16:45:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917669901",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "You are right. I also can't think of how this change would be a policy rule tightening.",
      "created_at" : "2021-09-15T07:36:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-919774957",
      "id" : 919774957,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
      "node_id" : "IC_kwDOABII58420qbt",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-15T07:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/919774957",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r710958422"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710958422"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ee9a74d a couple of ideas\r\n\r\n- make the double-to-long conversion explicit\r\n```suggestion\r\n    // Be explicit that we're converting from double to long (CAmount) here.\r\n    // We've previously had bugs creep in from silent double->int conversion.\r\n    CAmount nFee{static_cast<CAmount>(std::ceil(nSatoshisPerK * nSize / 1000.0))};\r\n```\r\n-----\r\n\r\n- bypass this calculation in the frequent `GetFeePerK()` case\r\n\r\n```cpp\r\n    CAmount nFee{static_cast<CAmount>(\r\n            nSize == 1000 ? nSatoshisPerK : std::ceil(nSatoshisPerK * nSize / 1000.0))};\r\n```\r\n",
      "commit_id" : "053ec2b901bee174de3243302c113b4a91733241",
      "created_at" : "2021-09-17T10:58:00Z",
      "diff_hunk" : "@@ -22,7 +24,7 @@ CAmount CFeeRate::GetFee(uint32_t num_bytes) const\n {\n     const int64_t nSize{num_bytes};\n \n-    CAmount nFee = nSatoshisPerK * nSize / 1000;\n+    CAmount nFee = std::ceil(nSatoshisPerK * nSize / 1000.0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r710958422",
      "id" : 710958422,
      "line" : 27,
      "node_id" : "PRRC_kwDOABII584qYF1W",
      "original_commit_id" : "053ec2b901bee174de3243302c113b4a91733241",
      "original_line" : 27,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : 14,
      "pull_request_review_id" : 757331938,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-17T11:55:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710958422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r710959094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710959094"
         }
      },
      "author_association" : "MEMBER",
      "body" : "053ec2b nit\r\n```suggestion\r\n        rawtx = w.createrawtransaction(inputs=[], outputs=[{self.nodes[0].getnewaddress(address_type=\"bech32\"): 1 - 0.00000201}])\r\n```",
      "commit_id" : "053ec2b901bee174de3243302c113b4a91733241",
      "created_at" : "2021-09-17T10:59:11Z",
      "diff_hunk" : "@@ -1026,6 +1027,33 @@ def do_fund_send(target):\n         do_fund_send(upper_bound)\n \n         self.restart_node(0)\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+        self.connect_nodes(0, 3)\n+\n+    def test_feerate_rounding(self):\n+        self.log.info(\"Test that rounding of GetFee does not result in an assertion\")\n+\n+        self.nodes[1].createwallet(\"roundtest\")\n+        w = self.nodes[1].get_wallet_rpc(\"roundtest\")\n+\n+        addr = w.getnewaddress(address_type=\"bech32\")\n+        self.nodes[0].sendtoaddress(addr, 1)\n+        self.generate(self.nodes[0], 1)\n+        self.sync_all()\n+\n+        # A P2WPKH input costs 68 vbytes; With a single P2WPKH output, the rest of the tx is 42 vbytes for a total of 110 vbytes.\n+        # At a feerate of 1.85 sat/vb, the input will need a fee of 125.8 sats and the rest 77.7 sats\n+        # The entire tx fee should be 203.5 sats.\n+        # Coin selection rounds the fee individually instead of at the end (due to how CFeeRate::GetFee works).\n+        # If rounding down (which is the incorrect behavior), then the calculated fee will be 125 + 77 = 202.\n+        # If rounding up, then the calculated fee will be 126 + 78 = 204.\n+        # In the former case, the calculated needed fee is higher than the actual fee being paid, so an assertion is reached\n+        # To test this does not happen, we subtract 202 sats from the input value. If working correctly, this should\n+        # fail with insufficient funds rather than bitcoind asserting.\n+        rawtx = w.createrawtransaction([], [{self.nodes[0].getnewaddress(address_type=\"bech32\"): 1 - 0.00000202}])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r710959094",
      "id" : 710959094,
      "line" : 1054,
      "node_id" : "PRRC_kwDOABII584qYF_2",
      "original_commit_id" : "053ec2b901bee174de3243302c113b4a91733241",
      "original_line" : 1054,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "test/functional/rpc_fundrawtransaction.py",
      "position" : 36,
      "pull_request_review_id" : 757331938,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-17T11:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710959094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r712194074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712194074"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wouldn't it make sense to rename this from `GetFee` to `RoundFee` to clarify that this is not a getter, but a calculation?\r\n\r\nAt the very least the doxygen should be updated.",
      "commit_id" : "053ec2b901bee174de3243302c113b4a91733241",
      "created_at" : "2021-09-20T13:58:30Z",
      "diff_hunk" : "@@ -22,7 +24,7 @@ CAmount CFeeRate::GetFee(uint32_t num_bytes) const\n {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r712194074",
      "id" : 712194074,
      "line" : 24,
      "node_id" : "PRRC_kwDOABII584qczga",
      "original_commit_id" : "053ec2b901bee174de3243302c113b4a91733241",
      "original_line" : 24,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : 10,
      "pull_request_review_id" : 758669173,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-20T13:59:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712194074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
