[
   {
      "author_association" : "MEMBER",
      "body" : "I don't think there will be any/many similar changes. Though, I don't see how #10102 is an argument against this change. There is also no serialize method for many other classes, like `CAmount` or `WitnessUnknown`. #10102 doesn't solve this by adding the serialize methods, but by defining a capnp struct to use internally. Defining the capnp struct (internally to multiprocess) seems preferable to me than to mark the public serialize method \"internal\" in some way.\r\n\r\n> This isn't hard, but you can see why these \"remove serialization\" commits are not my favorite.\r\n\r\nThe only other example I could find was https://github.com/bitcoin/bitcoin/pull/10102#discussion_r690922929, where I mentioned that the serialize method could be kept (if simplified).\r\n\r\nI understand that this may mean more work for you, but I don't think we should use effort as an excuse to keep stinky code.",
      "created_at" : "2021-09-13T13:17:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22962#issuecomment-918181425",
      "id" : 918181425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22962",
      "node_id" : "IC_kwDOABII5842ulYx",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-13T13:17:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/918181425",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Though, I don't see how #10102 is an argument against this change.\r\n\r\nI reviewed and acked this PR. I'm definitely not saying #10102 is an argument against this change. All I'm saying is if there will be more PRs like this, it would be good to know what exactly the goal is and make sure #10102 will not get in the way of that goal.\r\n\r\n> There is also no serialize method for many other classes, like `CAmount` or `WitnessUnknown`. #10102 doesn't solve this by adding the serialize methods, but by defining a capnp struct to use internally. Defining the capnp struct (internally to multiprocess) seems preferable to me than to mark the public serialize method \"internal\" in some way.\r\n\r\nThis preference is strange to me. These are just two different methods of \"internal\" serialization. I have been trying to get #10102 reviewed for years now, so my preference is to have less code in #10102 not more code. My preference is to keep existing code instead deleting it, rewriting it, and adding it back again. My preference is to use standard serialization code instead of using new serialization methods.\r\n\r\n> > This isn't hard, but you can see why these \"remove serialization\" commits are not my favorite.\r\n> \r\n> The only other example I could find was [#10102 (comment)](https://github.com/bitcoin/bitcoin/pull/10102#discussion_r690922929), where I mentioned that the serialize method could be kept (if simplified).\r\n\r\nRight. And in that case, the existing serialization seemed broken so it did seem better remove. The serialization here seems perfectly simple and not broken, so I'm ask whether this serialization would be better not to remove. I am asking what problem removing serialization solves and whether different solution, like marking it internal and deprioritizing fuzzing that would solve the problem. I don't know the answer to this question. And again, I don't think this PR is a big deal. You can ignore these questions unless you think there will be 5 more PRs like this one.\r\n\r\n> I understand that this may mean more work for you\r\n\r\nThe work for me is trivial and not the issue. The issue is how much more custom serialization code has to be added #10102 making it more work to review. If there is one \"remove serialization\" PR. I don't care. If there will be 5 more PR's, let's figure out what problem they solve and solve it some way that doesn't blow up #10102.\r\n\r\n> but I don't think we should use effort as an excuse to keep stinky code.\r\n\r\nI'm literally just adding back the same serialization code in #10102 with less fuzz coverage, so I think I am missing something here.",
      "created_at" : "2021-09-13T13:50:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22962#issuecomment-918211341",
      "id" : 918211341,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22962",
      "node_id" : "IC_kwDOABII5842ussN",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-13T13:50:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/918211341",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
