[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10284#discussion_r113625216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113625216"
         }
      },
      "body" : "Would logging the fee estimation details during bumpfee (all call to `GetMinimumFee`) be possible?",
      "commit_id" : "6c99d77d203e101dc31ac81eba3955b7537b819f",
      "created_at" : "2017-04-27T06:46:57Z",
      "diff_hunk" : "@@ -160,7 +160,7 @@ CFeeBumper::CFeeBumper(const CWallet *pWallet, const uint256 txidIn, int newConf\n     } else {\n         // if user specified a confirm target then don't consider any global payTxFee\n         if (specifiedConfirmTarget) {\n-            nNewFee = CWallet::GetMinimumFee(maxNewTxSize, newConfirmTarget, mempool, ::feeEstimator, true);\n+            nNewFee = CWallet::GetMinimumFee(maxNewTxSize, newConfirmTarget, mempool, ::feeEstimator, nullptr, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10284#discussion_r113625216",
      "id" : 113625216,
      "original_commit_id" : "6c99d77d203e101dc31ac81eba3955b7537b819f",
      "original_position" : 5,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 35028423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10284",
      "updated_at" : "2017-04-27T06:46:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113625216",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10284#discussion_r113625284"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113625284"
         }
      },
      "body" : "supernit: use brackets `if (feeCalc) { feeCalc->reason = FeeReason::FALLBACK; }`",
      "commit_id" : "6c99d77d203e101dc31ac81eba3955b7537b819f",
      "created_at" : "2017-04-27T06:47:21Z",
      "diff_hunk" : "@@ -2777,23 +2787,32 @@ CAmount CWallet::GetRequiredFee(unsigned int nTxBytes)\n     return std::max(minTxFee.GetFee(nTxBytes), ::minRelayTxFee.GetFee(nTxBytes));\n }\n \n-CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool, const CBlockPolicyEstimator& estimator, bool ignoreUserSetFee)\n+CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool, const CBlockPolicyEstimator& estimator, FeeCalculation *feeCalc, bool ignoreUserSetFee)\n {\n     // payTxFee is the user-set global for desired feerate\n     CAmount nFeeNeeded = payTxFee.GetFee(nTxBytes);\n     // User didn't set: use -txconfirmtarget to estimate...\n     if (nFeeNeeded == 0 || ignoreUserSetFee) {\n-        int estimateFoundTarget = nConfirmTarget;\n-        nFeeNeeded = estimator.estimateSmartFee(nConfirmTarget, &estimateFoundTarget, pool).GetFee(nTxBytes);\n+        nFeeNeeded = estimator.estimateSmartFee(nConfirmTarget, feeCalc, pool, true).GetFee(nTxBytes);\n         // ... unless we don't have enough mempool data for estimatefee, then use fallbackFee\n-        if (nFeeNeeded == 0)\n+        if (nFeeNeeded == 0) {\n             nFeeNeeded = fallbackFee.GetFee(nTxBytes);\n+            if (feeCalc) feeCalc->reason = FeeReason::FALLBACK;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10284#discussion_r113625284",
      "id" : 113625284,
      "original_commit_id" : "6c99d77d203e101dc31ac81eba3955b7537b819f",
      "original_position" : 62,
      "path" : "src/wallet/wallet.cpp",
      "position" : 69,
      "pull_request_review_id" : 35028497,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10284",
      "updated_at" : "2017-04-27T06:47:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113625284",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10284#discussion_r113673714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113673714"
         }
      },
      "body" : "No. From https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md:\r\n> If an if only has a single-statement then-clause, it can appear on the same line as the if, without braces. In every other case, braces are required, and the then and else clauses must appear correctly indented on a new line.\r\n\r\n",
      "commit_id" : "6c99d77d203e101dc31ac81eba3955b7537b819f",
      "created_at" : "2017-04-27T11:31:46Z",
      "diff_hunk" : "@@ -2777,23 +2787,32 @@ CAmount CWallet::GetRequiredFee(unsigned int nTxBytes)\n     return std::max(minTxFee.GetFee(nTxBytes), ::minRelayTxFee.GetFee(nTxBytes));\n }\n \n-CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool, const CBlockPolicyEstimator& estimator, bool ignoreUserSetFee)\n+CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool, const CBlockPolicyEstimator& estimator, FeeCalculation *feeCalc, bool ignoreUserSetFee)\n {\n     // payTxFee is the user-set global for desired feerate\n     CAmount nFeeNeeded = payTxFee.GetFee(nTxBytes);\n     // User didn't set: use -txconfirmtarget to estimate...\n     if (nFeeNeeded == 0 || ignoreUserSetFee) {\n-        int estimateFoundTarget = nConfirmTarget;\n-        nFeeNeeded = estimator.estimateSmartFee(nConfirmTarget, &estimateFoundTarget, pool).GetFee(nTxBytes);\n+        nFeeNeeded = estimator.estimateSmartFee(nConfirmTarget, feeCalc, pool, true).GetFee(nTxBytes);\n         // ... unless we don't have enough mempool data for estimatefee, then use fallbackFee\n-        if (nFeeNeeded == 0)\n+        if (nFeeNeeded == 0) {\n             nFeeNeeded = fallbackFee.GetFee(nTxBytes);\n+            if (feeCalc) feeCalc->reason = FeeReason::FALLBACK;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10284#discussion_r113673714",
      "id" : 113673714,
      "original_commit_id" : "6c99d77d203e101dc31ac81eba3955b7537b819f",
      "original_position" : 62,
      "path" : "src/wallet/wallet.cpp",
      "position" : 69,
      "pull_request_review_id" : 35081485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10284",
      "updated_at" : "2017-04-27T11:32:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113673714",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10284#discussion_r113674320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113674320"
         }
      },
      "body" : "Okay. Fair point.",
      "commit_id" : "6c99d77d203e101dc31ac81eba3955b7537b819f",
      "created_at" : "2017-04-27T11:35:18Z",
      "diff_hunk" : "@@ -2777,23 +2787,32 @@ CAmount CWallet::GetRequiredFee(unsigned int nTxBytes)\n     return std::max(minTxFee.GetFee(nTxBytes), ::minRelayTxFee.GetFee(nTxBytes));\n }\n \n-CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool, const CBlockPolicyEstimator& estimator, bool ignoreUserSetFee)\n+CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool, const CBlockPolicyEstimator& estimator, FeeCalculation *feeCalc, bool ignoreUserSetFee)\n {\n     // payTxFee is the user-set global for desired feerate\n     CAmount nFeeNeeded = payTxFee.GetFee(nTxBytes);\n     // User didn't set: use -txconfirmtarget to estimate...\n     if (nFeeNeeded == 0 || ignoreUserSetFee) {\n-        int estimateFoundTarget = nConfirmTarget;\n-        nFeeNeeded = estimator.estimateSmartFee(nConfirmTarget, &estimateFoundTarget, pool).GetFee(nTxBytes);\n+        nFeeNeeded = estimator.estimateSmartFee(nConfirmTarget, feeCalc, pool, true).GetFee(nTxBytes);\n         // ... unless we don't have enough mempool data for estimatefee, then use fallbackFee\n-        if (nFeeNeeded == 0)\n+        if (nFeeNeeded == 0) {\n             nFeeNeeded = fallbackFee.GetFee(nTxBytes);\n+            if (feeCalc) feeCalc->reason = FeeReason::FALLBACK;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10284#discussion_r113674320",
      "id" : 113674320,
      "original_commit_id" : "6c99d77d203e101dc31ac81eba3955b7537b819f",
      "original_position" : 62,
      "path" : "src/wallet/wallet.cpp",
      "position" : 69,
      "pull_request_review_id" : 35082090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10284",
      "updated_at" : "2017-04-27T11:35:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113674320",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   }
]
