[
   {
      "body" : "I think the major inefficiency is in BDB itself.\r\nNot sure if we can improve this much further.\r\n\r\nIMO the most promising solution to this is switching the database type. @sipa's logdb was IMO the best alternative (https://github.com/bitcoin/bitcoin/pull/5686). Though, append only maybe no longer be always efficient (since `abandontransaction` we do update single-property wtx state).\r\n\r\nOthers have discussed about switching to sqlite, which IMO is reasonable for the transactions and maybe the pubkey cache.\r\n\r\nFor HD wallets, we could probably store the 256bit seed material as Bech32 together with the used-keypath-scheme in a single file that only gets written once. Then maybe use a form of @sipa's logdb as wtx/pubkey storage.\r\n\r\nThe path to that would be to abstract the database interface first (in order to allow BerkleyDB and LogDb the same time [to allow smooth migrations]).\r\n\r\nWe already made some baby-steps (#9256, #9143, #9142), next one would be #9951.",
      "created_at" : "2017-04-20T11:43:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-295700452",
      "id" : 295700452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2017-04-20T11:43:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295700452",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> For HD wallets, we could probably store the 256bit seed material as Bech32\r\n\r\nBech32 is designed to protect against human transcription errors, not faulty hardware or software. If you want to protect against hardware errors, your best approach is just writing the whole thing multiple times. Even something like an RS code only corrects individual bytes/words, while disk errors are more likely to lose entire sectors.",
      "created_at" : "2017-04-20T11:52:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-295703814",
      "id" : 295703814,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2017-04-20T11:52:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295703814",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> Bech32 is designed to protect against human transcription errors, not faulty hardware or software. If you want to protect against hardware errors, your best approach is just writing the whole thing multiple times. Even something like an RS code only corrects individual bytes/words, while disk errors are more likely to lose entire sectors.\r\n\r\nFair point.",
      "created_at" : "2017-04-20T11:53:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/10236#issuecomment-295704165",
      "id" : 295704165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10236",
      "updated_at" : "2017-04-20T11:53:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295704165",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   }
]
