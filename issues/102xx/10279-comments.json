[
   {
      "body" : "Obviously the end goal here is to take revenge for #771 :)",
      "created_at" : "2017-04-26T01:53:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#issuecomment-297214943",
      "id" : 297214943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10279",
      "updated_at" : "2017-04-26T01:53:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297214943",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113708480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113708480"
         }
      },
      "body" : "The CChainParams are still needed (or at least Consensus::Params) see https://github.com/bitcoin/bitcoin/pull/9176",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:23:18Z",
      "diff_hunk" : "@@ -3511,9 +3538,9 @@ CBlockIndex * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n-bool static LoadBlockIndexDB(const CChainParams& chainparams)\n+bool CChainState::Load(CBlockTreeDB& blocktree)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113708480",
      "id" : 113708480,
      "original_commit_id" : "20aa3811df65e39d60572876ab2850eea6194429",
      "original_position" : 121,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35120146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113708480",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113709236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113709236"
         }
      },
      "body" : "If this is the only use of chainparams, perhaps it is better to just pass chainparams.MessageStart() directly instead.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:26:16Z",
      "diff_hunk" : "@@ -3160,6 +3160,24 @@ bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& headers, CValidatio\n     return true;\n }\n \n+static CDiskBlockPos WriteBlockToDisk(const CBlock& block, int nHeight, const CChainParams& chainparams, const CDiskBlockPos* dbp) {\n+    unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n+    CDiskBlockPos blockPos;\n+    if (dbp != NULL)\n+        blockPos = *dbp;\n+    if (!FindBlockPos(blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != NULL)) {\n+        error(\"AcceptBlock(): FindBlockPos failed\");\n+        return CDiskBlockPos();\n+    }\n+    if (dbp == NULL) {\n+        if (!WriteBlockToDisk(block, blockPos, chainparams.MessageStart())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113709236",
      "id" : 113709236,
      "original_commit_id" : "33aad08c6e7b0a9e291163c39538bee00be7e953",
      "original_position" : 32,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35120955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113709236",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113712885"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113712885"
         }
      },
      "body" : "I think UndoReadFromDisk can be static.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:40:03Z",
      "diff_hunk" : "@@ -1446,8 +1446,12 @@ bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint\n     return true;\n }\n \n-bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uint256& hashBlock)\n+bool UndoReadFromDisk(CBlockUndo& blockundo, const CBlockIndex *pindex)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113712885",
      "id" : 113712885,
      "original_commit_id" : "e32dc53af14aa28d936da9c9b5a80b5fe522ad18",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : 210,
      "pull_request_review_id" : 35125101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113712885",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113713105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713105"
         }
      },
      "body" : "just noting: previously the following two lines are hit even if this conditional isn't true(and `pindex->GetUndoPos().IsNull()` is). No idea if this is a behavior change",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:40:47Z",
      "diff_hunk" : "@@ -1898,28 +1928,16 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n     if (fJustCheck)\n         return true;\n \n-    // Write undo information to disk\n-    if (pindex->GetUndoPos().IsNull() || !pindex->IsValid(BLOCK_VALID_SCRIPTS))\n-    {\n-        if (pindex->GetUndoPos().IsNull()) {\n-            CDiskBlockPos _pos;\n-            if (!FindUndoPos(state, pindex->nFile, _pos, ::GetSerializeSize(blockundo, SER_DISK, CLIENT_VERSION) + 40))\n-                return error(\"ConnectBlock(): FindUndoPos failed\");\n-            if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n-                return AbortNode(state, \"Failed to write undo data\");\n-\n-            // update nUndoPos in block index\n-            pindex->nUndoPos = _pos.nPos;\n-            pindex->nStatus |= BLOCK_HAVE_UNDO;\n-        }\n+    if (!WriteUndoDataForBlock(blockundo, state, pindex, chainparams))\n+        return false;\n \n+    if (!pindex->IsValid(BLOCK_VALID_SCRIPTS)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113713105",
      "id" : 113713105,
      "original_commit_id" : "f2e9d9a5d8d57b277634c5f822134aab7fc05b7b",
      "original_position" : 84,
      "path" : "src/validation.cpp",
      "position" : 362,
      "pull_request_review_id" : 35125339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713105",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113713158"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713158"
         }
      },
      "body" : "Again, If this is the only use of chainparams, perhaps it is better to just pass chainparams.MessageStart() directly instead.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:40:59Z",
      "diff_hunk" : "@@ -1624,6 +1624,42 @@ void static FlushBlockFile(bool fFinalize = false)\n \n bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigned int nAddSize);\n \n+static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, CValidationState& state, CBlockIndex* pindex, const CChainParams& chainparams)\n+{\n+    // Write undo information to disk\n+    if (pindex->GetUndoPos().IsNull()) {\n+        CDiskBlockPos _pos;\n+        if (!FindUndoPos(state, pindex->nFile, _pos, ::GetSerializeSize(blockundo, SER_DISK, CLIENT_VERSION) + 40))\n+            return error(\"ConnectBlock(): FindUndoPos failed\");\n+        if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113713158",
      "id" : 113713158,
      "original_commit_id" : "f2e9d9a5d8d57b277634c5f822134aab7fc05b7b",
      "original_position" : 11,
      "path" : "src/validation.cpp",
      "position" : 275,
      "pull_request_review_id" : 35125101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113713158",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113715158"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113715158"
         }
      },
      "body" : "Why do any of this if `fTxIndex` is false?",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:45:57Z",
      "diff_hunk" : "@@ -1624,6 +1624,42 @@ void static FlushBlockFile(bool fFinalize = false)\n \n bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigned int nAddSize);\n \n+static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, CValidationState& state, CBlockIndex* pindex, const CChainParams& chainparams)\n+{\n+    // Write undo information to disk\n+    if (pindex->GetUndoPos().IsNull()) {\n+        CDiskBlockPos _pos;\n+        if (!FindUndoPos(state, pindex->nFile, _pos, ::GetSerializeSize(blockundo, SER_DISK, CLIENT_VERSION) + 40))\n+            return error(\"ConnectBlock(): FindUndoPos failed\");\n+        if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n+            return AbortNode(state, \"Failed to write undo data\");\n+\n+        // update nUndoPos in block index\n+        pindex->nUndoPos = _pos.nPos;\n+        pindex->nStatus |= BLOCK_HAVE_UNDO;\n+    }\n+\n+    return true;\n+}\n+\n+static bool WriteTxIndexDataForBlock(const CBlock& block, CValidationState& state, CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint256, CDiskTxPos> > vPos;\n+    vPos.reserve(block.vtx.size());\n+    for (const CTransactionRef& tx : block.vtx)\n+    {\n+        vPos.push_back(std::make_pair(tx->GetHash(), pos));\n+        pos.nTxOffset += ::GetSerializeSize(*tx, SER_DISK, CLIENT_VERSION);\n+    }\n+\n+    if (fTxIndex)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113715158",
      "id" : 113715158,
      "original_commit_id" : "f2e9d9a5d8d57b277634c5f822134aab7fc05b7b",
      "original_position" : 33,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35125339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113715158",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113715268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113715268"
         }
      },
      "body" : "There was a PR uniforming comments for ending namespaces. Also, according to our style, we don't indent on namespaces: https://github.com/bitcoin/bitcoin/blob/master/src/.clang-format#L32",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:46:14Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+    struct CBlockIndexWorkComparator\n+    {\n+        bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+            // First sort by most total work, ...\n+            if (pa->nChainWork > pb->nChainWork) return false;\n+            if (pa->nChainWork < pb->nChainWork) return true;\n+\n+            // ... then by earliest time received, ...\n+            if (pa->nSequenceId < pb->nSequenceId) return false;\n+            if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+            // Use pointer address as tie breaker (should only happen with blocks\n+            // loaded from disk, as those all have id 0).\n+            if (pa < pb) return false;\n+            if (pa > pb) return true;\n+\n+            // Identical blocks.\n+            return false;\n+        }\n+    };\n+};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113715268",
      "id" : 113715268,
      "original_commit_id" : "20aa3811df65e39d60572876ab2850eea6194429",
      "original_position" : 25,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35127668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113715268",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113715447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113715447"
         }
      },
      "body" : "Probably better to move the CheckProofOfWord check into CChainParams::InsertBlockIndex (or the lambda). As eventually CChainParams should be a local variable inside CChainState, any objections to leaving this for later?",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:46:39Z",
      "diff_hunk" : "@@ -3511,9 +3538,9 @@ CBlockIndex * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n-bool static LoadBlockIndexDB(const CChainParams& chainparams)\n+bool CChainState::Load(CBlockTreeDB& blocktree)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113715447",
      "id" : 113715447,
      "original_commit_id" : "20aa3811df65e39d60572876ab2850eea6194429",
      "original_position" : 121,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35127854,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113715447",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113716280"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113716280"
         }
      },
      "body" : "Seems somewhat strange for CChainState to care at all about the existance of MessageStart(), no?",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:48:34Z",
      "diff_hunk" : "@@ -3160,6 +3160,24 @@ bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& headers, CValidatio\n     return true;\n }\n \n+static CDiskBlockPos WriteBlockToDisk(const CBlock& block, int nHeight, const CChainParams& chainparams, const CDiskBlockPos* dbp) {\n+    unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n+    CDiskBlockPos blockPos;\n+    if (dbp != NULL)\n+        blockPos = *dbp;\n+    if (!FindBlockPos(blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != NULL)) {\n+        error(\"AcceptBlock(): FindBlockPos failed\");\n+        return CDiskBlockPos();\n+    }\n+    if (dbp == NULL) {\n+        if (!WriteBlockToDisk(block, blockPos, chainparams.MessageStart())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113716280",
      "id" : 113716280,
      "original_commit_id" : "33aad08c6e7b0a9e291163c39538bee00be7e953",
      "original_position" : 32,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35128719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113716280",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113716676"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113716676"
         }
      },
      "body" : "It is already in an anonymous namespace, which I believe is equivalent.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:49:27Z",
      "diff_hunk" : "@@ -1446,8 +1446,12 @@ bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint\n     return true;\n }\n \n-bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uint256& hashBlock)\n+bool UndoReadFromDisk(CBlockUndo& blockundo, const CBlockIndex *pindex)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113716676",
      "id" : 113716676,
      "original_commit_id" : "e32dc53af14aa28d936da9c9b5a80b5fe522ad18",
      "original_position" : 5,
      "path" : "src/validation.cpp",
      "position" : 210,
      "pull_request_review_id" : 35129126,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113716676",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113717313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113717313"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:50:53Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+    struct CBlockIndexWorkComparator\n+    {\n+        bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+            // First sort by most total work, ...\n+            if (pa->nChainWork > pb->nChainWork) return false;\n+            if (pa->nChainWork < pb->nChainWork) return true;\n+\n+            // ... then by earliest time received, ...\n+            if (pa->nSequenceId < pb->nSequenceId) return false;\n+            if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+            // Use pointer address as tie breaker (should only happen with blocks\n+            // loaded from disk, as those all have id 0).\n+            if (pa < pb) return false;\n+            if (pa > pb) return true;\n+\n+            // Identical blocks.\n+            return false;\n+        }\n+    };\n+};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113717313",
      "id" : 113717313,
      "original_commit_id" : "20aa3811df65e39d60572876ab2850eea6194429",
      "original_position" : 25,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35129755,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113717313",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113718994"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113718994"
         }
      },
      "body" : "```strprintf(\"%s: Failed to find position to write new block to disk\", __func__)```",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:56:18Z",
      "diff_hunk" : "@@ -3215,19 +3233,13 @@ static bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidation\n     if (!IsInitialBlockDownload() && chainActive.Tip() == pindex->pprev)\n         GetMainSignals().NewPoWValidBlock(pindex, pblock);\n \n-    int nHeight = pindex->nHeight;\n-\n     // Write block to history file\n     try {\n-        unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n-        CDiskBlockPos blockPos;\n-        if (dbp != NULL)\n-            blockPos = *dbp;\n-        if (!FindBlockPos(state, blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != NULL))\n-            return error(\"AcceptBlock(): FindBlockPos failed\");\n-        if (dbp == NULL)\n-            if (!WriteBlockToDisk(block, blockPos, chainparams.MessageStart()))\n-                AbortNode(state, \"Failed to write block\");\n+        CDiskBlockPos blockPos = WriteBlockToDisk(block, pindex->nHeight, chainparams, dbp);\n+        if (blockPos.IsNull()) {\n+            state.Error(\"AcceptBlock(): Failed to find position to write new block to disk\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113718994",
      "id" : 113718994,
      "original_commit_id" : "33aad08c6e7b0a9e291163c39538bee00be7e953",
      "original_position" : 62,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35131603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113718994",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113719134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113719134"
         }
      },
      "body" : "```strprintf(\"%s: FindBlockPos failed\", __func__)```",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T14:56:51Z",
      "diff_hunk" : "@@ -3160,6 +3160,24 @@ bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& headers, CValidatio\n     return true;\n }\n \n+static CDiskBlockPos WriteBlockToDisk(const CBlock& block, int nHeight, const CChainParams& chainparams, const CDiskBlockPos* dbp) {\n+    unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n+    CDiskBlockPos blockPos;\n+    if (dbp != NULL)\n+        blockPos = *dbp;\n+    if (!FindBlockPos(blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != NULL)) {\n+        error(\"AcceptBlock(): FindBlockPos failed\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113719134",
      "id" : 113719134,
      "original_commit_id" : "33aad08c6e7b0a9e291163c39538bee00be7e953",
      "original_position" : 28,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35131751,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113719134",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113720238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113720238"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T15:00:43Z",
      "diff_hunk" : "@@ -3215,19 +3233,13 @@ static bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidation\n     if (!IsInitialBlockDownload() && chainActive.Tip() == pindex->pprev)\n         GetMainSignals().NewPoWValidBlock(pindex, pblock);\n \n-    int nHeight = pindex->nHeight;\n-\n     // Write block to history file\n     try {\n-        unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n-        CDiskBlockPos blockPos;\n-        if (dbp != NULL)\n-            blockPos = *dbp;\n-        if (!FindBlockPos(state, blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != NULL))\n-            return error(\"AcceptBlock(): FindBlockPos failed\");\n-        if (dbp == NULL)\n-            if (!WriteBlockToDisk(block, blockPos, chainparams.MessageStart()))\n-                AbortNode(state, \"Failed to write block\");\n+        CDiskBlockPos blockPos = WriteBlockToDisk(block, pindex->nHeight, chainparams, dbp);\n+        if (blockPos.IsNull()) {\n+            state.Error(\"AcceptBlock(): Failed to find position to write new block to disk\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113720238",
      "id" : 113720238,
      "original_commit_id" : "33aad08c6e7b0a9e291163c39538bee00be7e953",
      "original_position" : 62,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35132988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113720238",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113720248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113720248"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T15:00:46Z",
      "diff_hunk" : "@@ -3160,6 +3160,24 @@ bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& headers, CValidatio\n     return true;\n }\n \n+static CDiskBlockPos WriteBlockToDisk(const CBlock& block, int nHeight, const CChainParams& chainparams, const CDiskBlockPos* dbp) {\n+    unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n+    CDiskBlockPos blockPos;\n+    if (dbp != NULL)\n+        blockPos = *dbp;\n+    if (!FindBlockPos(blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != NULL)) {\n+        error(\"AcceptBlock(): FindBlockPos failed\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113720248",
      "id" : 113720248,
      "original_commit_id" : "33aad08c6e7b0a9e291163c39538bee00be7e953",
      "original_position" : 28,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35132997,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113720248",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "utACK (beyond nits, most of them not very important):\r\n- Make DisconnectBlock unaware of where undo data resides on disk e32dc53af14aa28d936da9c9b5a80b5fe522ad18 \r\n- Create initial CChainState to hold chain state information 20aa3811df65e39d60572876ab2850eea6194429\r\n- Move block writing out of AcceptBlock 33aad08c6e7b0a9e291163c39538bee00be7e953\r\n- Move some additional variables into CChainState private 0acb237f752c0cf7fd783e8c09c0cb55203a6a83\r\n\r\nStill trying to understand: Make ConnectBlock unaware of txindex/undo data disk locations f2e9d9a5d8d57b277634c5f822134aab7fc05b7b\r\n",
      "created_at" : "2017-04-27T15:04:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#issuecomment-297741469",
      "id" : 297741469,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10279",
      "updated_at" : "2017-04-27T15:04:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297741469",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113728255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113728255"
         }
      },
      "body" : "Because it used to be? Anyway, fixed in new commit.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T15:30:08Z",
      "diff_hunk" : "@@ -1624,6 +1624,42 @@ void static FlushBlockFile(bool fFinalize = false)\n \n bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigned int nAddSize);\n \n+static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, CValidationState& state, CBlockIndex* pindex, const CChainParams& chainparams)\n+{\n+    // Write undo information to disk\n+    if (pindex->GetUndoPos().IsNull()) {\n+        CDiskBlockPos _pos;\n+        if (!FindUndoPos(state, pindex->nFile, _pos, ::GetSerializeSize(blockundo, SER_DISK, CLIENT_VERSION) + 40))\n+            return error(\"ConnectBlock(): FindUndoPos failed\");\n+        if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n+            return AbortNode(state, \"Failed to write undo data\");\n+\n+        // update nUndoPos in block index\n+        pindex->nUndoPos = _pos.nPos;\n+        pindex->nStatus |= BLOCK_HAVE_UNDO;\n+    }\n+\n+    return true;\n+}\n+\n+static bool WriteTxIndexDataForBlock(const CBlock& block, CValidationState& state, CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint256, CDiskTxPos> > vPos;\n+    vPos.reserve(block.vtx.size());\n+    for (const CTransactionRef& tx : block.vtx)\n+    {\n+        vPos.push_back(std::make_pair(tx->GetHash(), pos));\n+        pos.nTxOffset += ::GetSerializeSize(*tx, SER_DISK, CLIENT_VERSION);\n+    }\n+\n+    if (fTxIndex)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113728255",
      "id" : 113728255,
      "original_commit_id" : "f2e9d9a5d8d57b277634c5f822134aab7fc05b7b",
      "original_position" : 33,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35142010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113728255",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113730369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113730369"
         }
      },
      "body" : "Hmm, it may be, though not sure you could ever tickle it. I went ahead and duplicated the setDirtyBlockIndex.insert() call inside of WriteUndoDataForBlock.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T15:37:39Z",
      "diff_hunk" : "@@ -1898,28 +1928,16 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n     if (fJustCheck)\n         return true;\n \n-    // Write undo information to disk\n-    if (pindex->GetUndoPos().IsNull() || !pindex->IsValid(BLOCK_VALID_SCRIPTS))\n-    {\n-        if (pindex->GetUndoPos().IsNull()) {\n-            CDiskBlockPos _pos;\n-            if (!FindUndoPos(state, pindex->nFile, _pos, ::GetSerializeSize(blockundo, SER_DISK, CLIENT_VERSION) + 40))\n-                return error(\"ConnectBlock(): FindUndoPos failed\");\n-            if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n-                return AbortNode(state, \"Failed to write undo data\");\n-\n-            // update nUndoPos in block index\n-            pindex->nUndoPos = _pos.nPos;\n-            pindex->nStatus |= BLOCK_HAVE_UNDO;\n-        }\n+    if (!WriteUndoDataForBlock(blockundo, state, pindex, chainparams))\n+        return false;\n \n+    if (!pindex->IsValid(BLOCK_VALID_SCRIPTS)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113730369",
      "id" : 113730369,
      "original_commit_id" : "f2e9d9a5d8d57b277634c5f822134aab7fc05b7b",
      "original_position" : 84,
      "path" : "src/validation.cpp",
      "position" : 362,
      "pull_request_review_id" : 35142010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113730369",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113731298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113731298"
         }
      },
      "body" : "Strange or not, it does care about ut. It seems more strange for this new function to take the whole CChainParams class only for one getter, no?",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T15:41:36Z",
      "diff_hunk" : "@@ -3160,6 +3160,24 @@ bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& headers, CValidatio\n     return true;\n }\n \n+static CDiskBlockPos WriteBlockToDisk(const CBlock& block, int nHeight, const CChainParams& chainparams, const CDiskBlockPos* dbp) {\n+    unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n+    CDiskBlockPos blockPos;\n+    if (dbp != NULL)\n+        blockPos = *dbp;\n+    if (!FindBlockPos(blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != NULL)) {\n+        error(\"AcceptBlock(): FindBlockPos failed\");\n+        return CDiskBlockPos();\n+    }\n+    if (dbp == NULL) {\n+        if (!WriteBlockToDisk(block, blockPos, chainparams.MessageStart())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113731298",
      "id" : 113731298,
      "original_commit_id" : "33aad08c6e7b0a9e291163c39538bee00be7e953",
      "original_position" : 32,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35145342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113731298",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113732571"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113732571"
         }
      },
      "body" : "What lambda?\r\nAnyway, if we plan not to do #9176 and moving the check instead, then there's no point in passing Consensus::Params to CChainState::Load if it's going to be only temporary.\r\n",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T15:46:49Z",
      "diff_hunk" : "@@ -3511,9 +3538,9 @@ CBlockIndex * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n-bool static LoadBlockIndexDB(const CChainParams& chainparams)\n+bool CChainState::Load(CBlockTreeDB& blocktree)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113732571",
      "id" : 113732571,
      "original_commit_id" : "20aa3811df65e39d60572876ab2850eea6194429",
      "original_position" : 121,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35146747,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113732571",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113736111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113736111"
         }
      },
      "body" : "Well CChainState doesn't care about MessageStart(), it only cares that the write function figures out what it needs to do, if that means using Messagestart() thats between the write function and chainparams, not CChainState's business. Eventually the write function should be a virtual function inside an interface class and that class can hold the chainparams locally with CChainState only having a Consensus::Params.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T15:59:53Z",
      "diff_hunk" : "@@ -3160,6 +3160,24 @@ bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& headers, CValidatio\n     return true;\n }\n \n+static CDiskBlockPos WriteBlockToDisk(const CBlock& block, int nHeight, const CChainParams& chainparams, const CDiskBlockPos* dbp) {\n+    unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n+    CDiskBlockPos blockPos;\n+    if (dbp != NULL)\n+        blockPos = *dbp;\n+    if (!FindBlockPos(blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != NULL)) {\n+        error(\"AcceptBlock(): FindBlockPos failed\");\n+        return CDiskBlockPos();\n+    }\n+    if (dbp == NULL) {\n+        if (!WriteBlockToDisk(block, blockPos, chainparams.MessageStart())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113736111",
      "id" : 113736111,
      "original_commit_id" : "33aad08c6e7b0a9e291163c39538bee00be7e953",
      "original_position" : 32,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35150546,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113736111",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113736813"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113736813"
         }
      },
      "body" : "eg the CheckProofOfWork call that is currently in LoadBlockIndexGuts can just go in the insertBlockIndex lambda function and the call to that should be a fully-filled CBlockIndex instead of that getting filled by LoadBlockIndexGuts.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T16:02:38Z",
      "diff_hunk" : "@@ -3511,9 +3538,9 @@ CBlockIndex * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n-bool static LoadBlockIndexDB(const CChainParams& chainparams)\n+bool CChainState::Load(CBlockTreeDB& blocktree)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113736813",
      "id" : 113736813,
      "original_commit_id" : "20aa3811df65e39d60572876ab2850eea6194429",
      "original_position" : 121,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35151298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113736813",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113741574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113741574"
         }
      },
      "body" : "CChainState::Load definitely cares about MessageStart(). But we disagree on next steps, I won't insist further.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-04-27T16:22:14Z",
      "diff_hunk" : "@@ -3160,6 +3160,24 @@ bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& headers, CValidatio\n     return true;\n }\n \n+static CDiskBlockPos WriteBlockToDisk(const CBlock& block, int nHeight, const CChainParams& chainparams, const CDiskBlockPos* dbp) {\n+    unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n+    CDiskBlockPos blockPos;\n+    if (dbp != NULL)\n+        blockPos = *dbp;\n+    if (!FindBlockPos(blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != NULL)) {\n+        error(\"AcceptBlock(): FindBlockPos failed\");\n+        return CDiskBlockPos();\n+    }\n+    if (dbp == NULL) {\n+        if (!WriteBlockToDisk(block, blockPos, chainparams.MessageStart())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r113741574",
      "id" : 113741574,
      "original_commit_id" : "33aad08c6e7b0a9e291163c39538bee00be7e953",
      "original_position" : 32,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35156565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113741574",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Removed InsertBlockIndex from validation.h since it was moved into CChainState (there were no external callers already).",
      "created_at" : "2017-04-30T18:51:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#issuecomment-298249683",
      "id" : 298249683,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10279",
      "updated_at" : "2017-04-30T18:51:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298249683",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114376205"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114376205"
         }
      },
      "body" : "In commit \"Make DisconnectBlock unaware of where undo data resides on disk\"\r\n\r\nNote slight change in behavior here. \"no undo data available\" is now \"Undo data not available\"",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T17:28:48Z",
      "diff_hunk" : "@@ -1446,8 +1446,12 @@ bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint\n     return true;\n }\n \n-bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uint256& hashBlock)\n+bool UndoReadFromDisk(CBlockUndo& blockundo, const CBlockIndex *pindex)\n {\n+    CDiskBlockPos pos = pindex->GetUndoPos();\n+    if (pos.IsNull())\n+        return error(\"%s: Undo data not available\", __func__);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114376205",
      "id" : 114376205,
      "original_commit_id" : "e32dc53af14aa28d936da9c9b5a80b5fe522ad18",
      "original_position" : 9,
      "path" : "src/validation.cpp",
      "position" : 214,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114376205",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114378475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114378475"
         }
      },
      "body" : "In commit \"Make ConnectBlock unaware of txindex/undo data disk locations\"\r\n\r\n`MaybeWriteUndoDataForBlock` might be a more descriptive name.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T17:38:25Z",
      "diff_hunk" : "@@ -1624,6 +1624,43 @@ void static FlushBlockFile(bool fFinalize = false)\n \n bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigned int nAddSize);\n \n+static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, CValidationState& state, CBlockIndex* pindex, const CChainParams& chainparams)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114378475",
      "id" : 114378475,
      "original_commit_id" : "41fef26554096f04dcf55c8a3dea6c17369d0da3",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114378475",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114380423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114380423"
         }
      },
      "body" : "In commit \"Make ConnectBlock unaware of txindex/undo data disk locations\":\r\n\r\nThis is just moved code, but could get rid of make_pair using emplace_back here. Could also get rid of pos variable using vPos.back().",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T17:46:56Z",
      "diff_hunk" : "@@ -1624,6 +1624,43 @@ void static FlushBlockFile(bool fFinalize = false)\n \n bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigned int nAddSize);\n \n+static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, CValidationState& state, CBlockIndex* pindex, const CChainParams& chainparams)\n+{\n+    // Write undo information to disk\n+    if (pindex->GetUndoPos().IsNull()) {\n+        CDiskBlockPos _pos;\n+        if (!FindUndoPos(state, pindex->nFile, _pos, ::GetSerializeSize(blockundo, SER_DISK, CLIENT_VERSION) + 40))\n+            return error(\"ConnectBlock(): FindUndoPos failed\");\n+        if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n+            return AbortNode(state, \"Failed to write undo data\");\n+\n+        // update nUndoPos in block index\n+        pindex->nUndoPos = _pos.nPos;\n+        pindex->nStatus |= BLOCK_HAVE_UNDO;\n+        setDirtyBlockIndex.insert(pindex);\n+    }\n+\n+    return true;\n+}\n+\n+static bool WriteTxIndexDataForBlock(const CBlock& block, CValidationState& state, CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint256, CDiskTxPos> > vPos;\n+    vPos.reserve(block.vtx.size());\n+    for (const CTransactionRef& tx : block.vtx)\n+    {\n+        vPos.push_back(std::make_pair(tx->GetHash(), pos));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114380423",
      "id" : 114380423,
      "original_commit_id" : "41fef26554096f04dcf55c8a3dea6c17369d0da3",
      "original_position" : 30,
      "path" : "src/validation.cpp",
      "position" : 296,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114380423",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114386766"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114386766"
         }
      },
      "body" : "Should squash the two \"Create initial CChainState to hold chain state information\" commits.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T18:13:10Z",
      "diff_hunk" : "@@ -98,6 +98,7 @@ class CChainState {\n     bool Load(CBlockTreeDB& blocktree);\n \n private:\n+    /** Create a new block index entry for a given block hash */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114386766",
      "id" : 114386766,
      "original_commit_id" : "48e4cb59718223a56e4bd3dea579ff8768450296",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114386766",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114387276"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114387276"
         }
      },
      "body" : "In commit \"Create initial CChainState to hold chain state information\"\r\n\r\nSpelling \"necessary\"",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T18:15:13Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain\n+ *\n+ * It generally provides access to the current chain tree, as well as functions\n+ * to provide it new data, which it will appropriately validate and incorporate\n+ * in its state as neccessary.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114387276",
      "id" : 114387276,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 32,
      "path" : "src/validation.cpp",
      "position" : 41,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114387276",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114387564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114387564"
         }
      },
      "body" : "In commit \"Create initial CChainState to hold chain state information\"\r\n\r\nStores what? May be some words missing.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T18:16:31Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114387564",
      "id" : 114387564,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 28,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114387564",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114388186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114388186"
         }
      },
      "body" : "In commit \"Create initial CChainState to hold chain state information\"\r\n\r\nWhat's an external function? Would be helpful to say something about which functions are and aren't external.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T18:19:18Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain\n+ *\n+ * It generally provides access to the current chain tree, as well as functions\n+ * to provide it new data, which it will appropriately validate and incorporate\n+ * in its state as neccessary.\n+ *\n+ * Eventually, the API here is targeted at being exposed externally as a\n+ * consumable libconsensus library, so any functions added must only call\n+ * external functions via callbacks, or to read/write data from disk.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114388186",
      "id" : 114388186,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 36,
      "path" : "src/validation.cpp",
      "position" : 45,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114388186",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114388901"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114388901"
         }
      },
      "body" : "In commit \"Create initial CChainState to hold chain state information\"\r\n\r\nShould add `= nullptr;`",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T18:22:32Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain\n+ *\n+ * It generally provides access to the current chain tree, as well as functions\n+ * to provide it new data, which it will appropriately validate and incorporate\n+ * in its state as neccessary.\n+ *\n+ * Eventually, the API here is targeted at being exposed externally as a\n+ * consumable libconsensus library, so any functions added must only call\n+ * external functions via callbacks, or to read/write data from disk.\n+ */\n+class CChainState {\n+public:\n+    CChain chainActive;\n+    BlockMap mapBlockIndex;\n+    std::multimap<CBlockIndex*, CBlockIndex*> mapBlocksUnlinked;\n+    std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n+    CBlockIndex *pindexBestInvalid;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114388901",
      "id" : 114388901,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114388901",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114389918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114389918"
         }
      },
      "body" : "In commit \"Create initial CChainState to hold chain state information\"\r\n\r\nProbably should pass hash by const reference.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T18:26:48Z",
      "diff_hunk" : "@@ -3512,9 +3539,9 @@ CBlockIndex * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n-bool static LoadBlockIndexDB(const CChainParams& chainparams)\n+bool CChainState::Load(CBlockTreeDB& blocktree)\n {\n-    if (!pblocktree->LoadBlockIndexGuts(InsertBlockIndex))\n+    if (!blocktree.LoadBlockIndexGuts([this](uint256 hash){ return this->InsertBlockIndex(hash); }))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114389918",
      "id" : 114389918,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 124,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114389918",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114390883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114390883"
         }
      },
      "body" : "In commit \"Create initial CChainState to hold chain state information\"\r\n\r\nMaybe `Load` and `InsertBlockIndex` should be static while they aren't (yet?) accessing any class members.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T18:30:38Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain\n+ *\n+ * It generally provides access to the current chain tree, as well as functions\n+ * to provide it new data, which it will appropriately validate and incorporate\n+ * in its state as neccessary.\n+ *\n+ * Eventually, the API here is targeted at being exposed externally as a\n+ * consumable libconsensus library, so any functions added must only call\n+ * external functions via callbacks, or to read/write data from disk.\n+ */\n+class CChainState {\n+public:\n+    CChain chainActive;\n+    BlockMap mapBlockIndex;\n+    std::multimap<CBlockIndex*, CBlockIndex*> mapBlocksUnlinked;\n+    std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n+    CBlockIndex *pindexBestInvalid;\n+\n+    bool Load(CBlockTreeDB& blocktree);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114390883",
      "id" : 114390883,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 46,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114390883",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114396882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114396882"
         }
      },
      "body" : "In commit \"Move a bunch of chainstate-manipulation functions into CChainState\"\r\n\r\nCheckBlockIndex call added accidentally here? Behavior change should probably go in a separate commit.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T18:55:41Z",
      "diff_hunk" : "@@ -3278,6 +3324,8 @@ static bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidation\n     if (fCheckForPruning)\n         FlushStateToDisk(state, FLUSH_STATE_NONE); // we just allocated more disk space for block files\n \n+    CheckBlockIndex(chainparams.GetConsensus());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114396882",
      "id" : 114396882,
      "original_commit_id" : "a49f6add324a4a765ec75bd9a20cef06e0e230d1",
      "original_position" : 280,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114396882",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114399620"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114399620"
         }
      },
      "body" : "In commit \"Move a bunch of chainstate-manipulation functions into CChainState\":\r\n\r\nLoadBlockIndex should be ReceiveGenesisBlock or \\_\\_func__ now.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T19:08:09Z",
      "diff_hunk" : "@@ -3881,6 +3942,17 @@ bool LoadBlockIndex(const CChainParams& chainparams)\n     return true;\n }\n \n+\n+bool CChainState::ReceiveGenesisBlock(const CBlock &block, const CDiskBlockPos& blockPos, const Consensus::Params& consensusParams) {\n+    CBlockIndex *pindex = AddToBlockIndex(block);\n+    CValidationState state;\n+    if (!ReceivedBlockTransactions(block, state, pindex, blockPos, consensusParams)) {\n+        return error(\"LoadBlockIndex(): genesis block not accepted\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114399620",
      "id" : 114399620,
      "original_commit_id" : "a49f6add324a4a765ec75bd9a20cef06e0e230d1",
      "original_position" : 402,
      "path" : "src/validation.cpp",
      "position" : 796,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114399620",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114401375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114401375"
         }
      },
      "body" : "In commit \"Move a bunch of chainstate-manipulation functions into CChainState\"\r\n\r\nMaybe this method should just be called `Unload` to be consistent with the `Load` method (which was previously `LoadBlockIndexDB`)",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-02T19:16:36Z",
      "diff_hunk" : "@@ -88,18 +90,59 @@ struct CBlockIndexWorkComparator\n  * external functions via callbacks, or to read/write data from disk.\n  */\n class CChainState {\n+private:\n+    /**\n+     * The set of all CBlockIndex entries with BLOCK_VALID_TRANSACTIONS (for itself and all ancestors) and\n+     * as good as our current tip or better. Entries may be failed, though, and pruning nodes may be\n+     * missing the data for the block.\n+     */\n+    std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n public:\n     CChain chainActive;\n     BlockMap mapBlockIndex;\n     std::multimap<CBlockIndex*, CBlockIndex*> mapBlocksUnlinked;\n-    std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n     CBlockIndex *pindexBestInvalid;\n \n     bool Load(CBlockTreeDB& blocktree);\n \n+    bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock);\n+\n+    bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex);\n+    bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex, bool fRequested, const CDiskBlockPos* dbp, bool* fNewBlock);\n+\n+    // Block (dis)connection on a given view:\n+    bool DisconnectBlock(const CBlock& block, CValidationState& state, const CBlockIndex* pindex, CCoinsViewCache& view, bool* pfClean = NULL);\n+    bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pindex,\n+                    CCoinsViewCache& view, const CChainParams& chainparams, bool fJustCheck = false);\n+\n+    // Block disconnection on our pcoinsTip:\n+    bool DisconnectTip(CValidationState& state, const CChainParams& chainparams, bool fBare = false);\n+\n+    // Manual block validity manipulation:\n+    bool PreciousBlock(CValidationState& state, const CChainParams& params, CBlockIndex *pindex);\n+    bool InvalidateBlock(CValidationState& state, const CChainParams& chainparams, CBlockIndex *pindex);\n+    bool ResetBlockFailureFlags(CBlockIndex *pindex);\n+\n+    bool RewindBlockIndex(const CChainParams& params);\n+\n+    void PruneBlockIndexCandidates();\n+\n+    bool ReceiveGenesisBlock(const CBlock &block, const CDiskBlockPos& blockPos, const Consensus::Params& consensusParams);\n+\n+    void UnloadBlockIndex();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114401375",
      "id" : 114401375,
      "original_commit_id" : "a49f6add324a4a765ec75bd9a20cef06e0e230d1",
      "original_position" : 53,
      "path" : "src/validation.cpp",
      "position" : 99,
      "pull_request_review_id" : 35836989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114401375",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114452539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114452539"
         }
      },
      "body" : "Oh, no idea how that came about, thanks.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:00:07Z",
      "diff_hunk" : "@@ -98,6 +98,7 @@ class CChainState {\n     bool Load(CBlockTreeDB& blocktree);\n \n private:\n+    /** Create a new block index entry for a given block hash */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114452539",
      "id" : 114452539,
      "original_commit_id" : "48e4cb59718223a56e4bd3dea579ff8768450296",
      "original_position" : 4,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35919600,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114452539",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114452597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114452597"
         }
      },
      "body" : "I'll clarify. It pretty much means mapBlockIndex/chainActive.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:00:38Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114452597",
      "id" : 114452597,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 28,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35919663,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114452597",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114453010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114453010"
         }
      },
      "body" : "Clarified in the commit message instead, thanks for pointing this out (the intent is to not do the actual reading from disk calls inside of CChainState). Will leave other cleanups for later PRs.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:04:22Z",
      "diff_hunk" : "@@ -1624,6 +1624,43 @@ void static FlushBlockFile(bool fFinalize = false)\n \n bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigned int nAddSize);\n \n+static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, CValidationState& state, CBlockIndex* pindex, const CChainParams& chainparams)\n+{\n+    // Write undo information to disk\n+    if (pindex->GetUndoPos().IsNull()) {\n+        CDiskBlockPos _pos;\n+        if (!FindUndoPos(state, pindex->nFile, _pos, ::GetSerializeSize(blockundo, SER_DISK, CLIENT_VERSION) + 40))\n+            return error(\"ConnectBlock(): FindUndoPos failed\");\n+        if (!UndoWriteToDisk(blockundo, _pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n+            return AbortNode(state, \"Failed to write undo data\");\n+\n+        // update nUndoPos in block index\n+        pindex->nUndoPos = _pos.nPos;\n+        pindex->nStatus |= BLOCK_HAVE_UNDO;\n+        setDirtyBlockIndex.insert(pindex);\n+    }\n+\n+    return true;\n+}\n+\n+static bool WriteTxIndexDataForBlock(const CBlock& block, CValidationState& state, CBlockIndex* pindex)\n+{\n+    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    std::vector<std::pair<uint256, CDiskTxPos> > vPos;\n+    vPos.reserve(block.vtx.size());\n+    for (const CTransactionRef& tx : block.vtx)\n+    {\n+        vPos.push_back(std::make_pair(tx->GetHash(), pos));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114453010",
      "id" : 114453010,
      "original_commit_id" : "41fef26554096f04dcf55c8a3dea6c17369d0da3",
      "original_position" : 30,
      "path" : "src/validation.cpp",
      "position" : 296,
      "pull_request_review_id" : 35920115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114453010",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114453026"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114453026"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:04:26Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain\n+ *\n+ * It generally provides access to the current chain tree, as well as functions\n+ * to provide it new data, which it will appropriately validate and incorporate\n+ * in its state as neccessary.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114453026",
      "id" : 114453026,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 32,
      "path" : "src/validation.cpp",
      "position" : 41,
      "pull_request_review_id" : 35920125,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114453026",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114453212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114453212"
         }
      },
      "body" : "Fixed.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:06:10Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain\n+ *\n+ * It generally provides access to the current chain tree, as well as functions\n+ * to provide it new data, which it will appropriately validate and incorporate\n+ * in its state as neccessary.\n+ *\n+ * Eventually, the API here is targeted at being exposed externally as a\n+ * consumable libconsensus library, so any functions added must only call\n+ * external functions via callbacks, or to read/write data from disk.\n+ */\n+class CChainState {\n+public:\n+    CChain chainActive;\n+    BlockMap mapBlockIndex;\n+    std::multimap<CBlockIndex*, CBlockIndex*> mapBlocksUnlinked;\n+    std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n+    CBlockIndex *pindexBestInvalid;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114453212",
      "id" : 114453212,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 44,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35920322,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114453212",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454782"
         }
      },
      "body" : "Reverted the string change.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:20:03Z",
      "diff_hunk" : "@@ -1446,8 +1446,12 @@ bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint\n     return true;\n }\n \n-bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uint256& hashBlock)\n+bool UndoReadFromDisk(CBlockUndo& blockundo, const CBlockIndex *pindex)\n {\n+    CDiskBlockPos pos = pindex->GetUndoPos();\n+    if (pos.IsNull())\n+        return error(\"%s: Undo data not available\", __func__);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454782",
      "id" : 114454782,
      "original_commit_id" : "e32dc53af14aa28d936da9c9b5a80b5fe522ad18",
      "original_position" : 9,
      "path" : "src/validation.cpp",
      "position" : 214,
      "pull_request_review_id" : 35921921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454782",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454789"
         }
      },
      "body" : "Clarified a bunch.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:20:05Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain\n+ *\n+ * It generally provides access to the current chain tree, as well as functions\n+ * to provide it new data, which it will appropriately validate and incorporate\n+ * in its state as neccessary.\n+ *\n+ * Eventually, the API here is targeted at being exposed externally as a\n+ * consumable libconsensus library, so any functions added must only call\n+ * external functions via callbacks, or to read/write data from disk.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454789",
      "id" : 114454789,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 36,
      "path" : "src/validation.cpp",
      "position" : 45,
      "pull_request_review_id" : 35921926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454789",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454794"
         }
      },
      "body" : "Load adds to mapBlocksUnlinked and InsertBlockIndex into mapBlockIndex. In the next PR mapBlockIndex and chainActive will be const when accessed via the global references, so would prefer to leave it.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:20:08Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain\n+ *\n+ * It generally provides access to the current chain tree, as well as functions\n+ * to provide it new data, which it will appropriately validate and incorporate\n+ * in its state as neccessary.\n+ *\n+ * Eventually, the API here is targeted at being exposed externally as a\n+ * consumable libconsensus library, so any functions added must only call\n+ * external functions via callbacks, or to read/write data from disk.\n+ */\n+class CChainState {\n+public:\n+    CChain chainActive;\n+    BlockMap mapBlockIndex;\n+    std::multimap<CBlockIndex*, CBlockIndex*> mapBlocksUnlinked;\n+    std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n+    CBlockIndex *pindexBestInvalid;\n+\n+    bool Load(CBlockTreeDB& blocktree);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454794",
      "id" : 114454794,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 46,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35921933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454794",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454795"
         }
      },
      "body" : "Changed Load to LoadBlockIndex instead.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:20:10Z",
      "diff_hunk" : "@@ -88,18 +90,59 @@ struct CBlockIndexWorkComparator\n  * external functions via callbacks, or to read/write data from disk.\n  */\n class CChainState {\n+private:\n+    /**\n+     * The set of all CBlockIndex entries with BLOCK_VALID_TRANSACTIONS (for itself and all ancestors) and\n+     * as good as our current tip or better. Entries may be failed, though, and pruning nodes may be\n+     * missing the data for the block.\n+     */\n+    std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n public:\n     CChain chainActive;\n     BlockMap mapBlockIndex;\n     std::multimap<CBlockIndex*, CBlockIndex*> mapBlocksUnlinked;\n-    std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n     CBlockIndex *pindexBestInvalid;\n \n     bool Load(CBlockTreeDB& blocktree);\n \n+    bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock);\n+\n+    bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex);\n+    bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex, bool fRequested, const CDiskBlockPos* dbp, bool* fNewBlock);\n+\n+    // Block (dis)connection on a given view:\n+    bool DisconnectBlock(const CBlock& block, CValidationState& state, const CBlockIndex* pindex, CCoinsViewCache& view, bool* pfClean = NULL);\n+    bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pindex,\n+                    CCoinsViewCache& view, const CChainParams& chainparams, bool fJustCheck = false);\n+\n+    // Block disconnection on our pcoinsTip:\n+    bool DisconnectTip(CValidationState& state, const CChainParams& chainparams, bool fBare = false);\n+\n+    // Manual block validity manipulation:\n+    bool PreciousBlock(CValidationState& state, const CChainParams& params, CBlockIndex *pindex);\n+    bool InvalidateBlock(CValidationState& state, const CChainParams& chainparams, CBlockIndex *pindex);\n+    bool ResetBlockFailureFlags(CBlockIndex *pindex);\n+\n+    bool RewindBlockIndex(const CChainParams& params);\n+\n+    void PruneBlockIndexCandidates();\n+\n+    bool ReceiveGenesisBlock(const CBlock &block, const CDiskBlockPos& blockPos, const Consensus::Params& consensusParams);\n+\n+    void UnloadBlockIndex();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454795",
      "id" : 114454795,
      "original_commit_id" : "a49f6add324a4a765ec75bd9a20cef06e0e230d1",
      "original_position" : 53,
      "path" : "src/validation.cpp",
      "position" : 99,
      "pull_request_review_id" : 35921935,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454795",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454798"
         }
      },
      "body" : "Indeed, not actually 100% sure why that compiled...",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:20:11Z",
      "diff_hunk" : "@@ -3512,9 +3539,9 @@ CBlockIndex * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n-bool static LoadBlockIndexDB(const CChainParams& chainparams)\n+bool CChainState::Load(CBlockTreeDB& blocktree)\n {\n-    if (!pblocktree->LoadBlockIndexGuts(InsertBlockIndex))\n+    if (!blocktree.LoadBlockIndexGuts([this](uint256 hash){ return this->InsertBlockIndex(hash); }))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454798",
      "id" : 114454798,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 124,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35921939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454798",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454800"
         }
      },
      "body" : "This was to replace the one removed from ProcessNewBlock. Should be +/- equivalent to the old version, I believe?",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:20:13Z",
      "diff_hunk" : "@@ -3278,6 +3324,8 @@ static bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidation\n     if (fCheckForPruning)\n         FlushStateToDisk(state, FLUSH_STATE_NONE); // we just allocated more disk space for block files\n \n+    CheckBlockIndex(chainparams.GetConsensus());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454800",
      "id" : 114454800,
      "original_commit_id" : "a49f6add324a4a765ec75bd9a20cef06e0e230d1",
      "original_position" : 280,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 35921940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454800",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454804"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454804"
         }
      },
      "body" : "Fixed",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-05-03T00:20:14Z",
      "diff_hunk" : "@@ -3881,6 +3942,17 @@ bool LoadBlockIndex(const CChainParams& chainparams)\n     return true;\n }\n \n+\n+bool CChainState::ReceiveGenesisBlock(const CBlock &block, const CDiskBlockPos& blockPos, const Consensus::Params& consensusParams) {\n+    CBlockIndex *pindex = AddToBlockIndex(block);\n+    CValidationState state;\n+    if (!ReceivedBlockTransactions(block, state, pindex, blockPos, consensusParams)) {\n+        return error(\"LoadBlockIndex(): genesis block not accepted\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114454804",
      "id" : 114454804,
      "original_commit_id" : "a49f6add324a4a765ec75bd9a20cef06e0e230d1",
      "original_position" : 402,
      "path" : "src/validation.cpp",
      "position" : 796,
      "pull_request_review_id" : 35921943,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114454804",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "As for removing the global references to member parts of CChainState...that's probably a ways out. First step is to clarify the internal stuff within validation.cpp and make external accesses to it const, then I'll expose the class itself (unless you feel particularly inclined to build the scripted diff before I get to it - need #10189 first, probably.",
      "created_at" : "2017-05-03T00:21:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#issuecomment-298796875",
      "id" : 298796875,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10279",
      "updated_at" : "2017-05-03T00:21:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298796875",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "utACK 120743a83f26923cd9ef4db068fd6c9b8b8ea4dd",
      "created_at" : "2017-05-03T13:48:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#issuecomment-298915852",
      "id" : 298915852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10279",
      "updated_at" : "2017-05-03T13:48:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298915852",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2017-06-06T01:34:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#issuecomment-306356477",
      "id" : 306356477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10279",
      "updated_at" : "2017-06-06T01:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/306356477",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r120986424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120986424"
         }
      },
      "body" : "In commit \"Make DisconnectBlock unaware of where undo data resides on disk\"\r\n\r\nString changed back again. Did you maybe rebase an older version of this PR? It seems like some of the changes you made between https://github.com/bitcoin/bitcoin/commits/c431484b612c68d4faf7f8d6af858729f2b9a56d and https://github.com/bitcoin/bitcoin/commits/120743a83f26923cd9ef4db068fd6c9b8b8ea4dd got reverted.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-06-08T20:09:40Z",
      "diff_hunk" : "@@ -1446,8 +1446,12 @@ bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint\n     return true;\n }\n \n-bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uint256& hashBlock)\n+bool UndoReadFromDisk(CBlockUndo& blockundo, const CBlockIndex *pindex)\n {\n+    CDiskBlockPos pos = pindex->GetUndoPos();\n+    if (pos.IsNull())\n+        return error(\"%s: Undo data not available\", __func__);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r120986424",
      "id" : 120986424,
      "original_commit_id" : "e32dc53af14aa28d936da9c9b5a80b5fe522ad18",
      "original_position" : 9,
      "path" : "src/validation.cpp",
      "position" : 214,
      "pull_request_review_id" : 42999643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120986424",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r120987698"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120987698"
         }
      },
      "body" : "In commit \"Create initial CChainState to hold chain state information\"\r\n\r\nCChainState comment updates made previously seem to be lost, pindexBestInvalid initialization is gone, LoadBlockIndex() got changed back to Load(), and InsertBlockIndex() documentation is gone.",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-06-08T20:14:15Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain\n+ *\n+ * It generally provides access to the current chain tree, as well as functions\n+ * to provide it new data, which it will appropriately validate and incorporate\n+ * in its state as neccessary.\n+ *\n+ * Eventually, the API here is targeted at being exposed externally as a\n+ * consumable libconsensus library, so any functions added must only call\n+ * external functions via callbacks, or to read/write data from disk.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r120987698",
      "id" : 120987698,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 36,
      "path" : "src/validation.cpp",
      "position" : 45,
      "pull_request_review_id" : 42999643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-06-28T15:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120987698",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Indeed, rebased the copy that was on my workstation and not my laptop, re-rebased.",
      "created_at" : "2017-06-09T17:26:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#issuecomment-307449855",
      "id" : 307449855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10279",
      "updated_at" : "2017-06-09T17:26:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/307449855",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Nice, concept ACK",
      "created_at" : "2017-06-13T00:00:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#issuecomment-307968048",
      "id" : 307968048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10279",
      "updated_at" : "2017-06-13T00:00:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/307968048",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r129372775"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129372775"
         }
      },
      "body" : "Thread https://github.com/bitcoin/bitcoin/pull/10279#discussion_r114388186\r\n\r\nNewer comment got reverted somehow. It was:\r\n\r\n```\r\n/**\r\n * CChainState stores and provides an API to update our local knowledge of the\r\n * current best chain and header tree.\r\n *\r\n * It generally provides access to the current block tree, as well as functions\r\n * to provide new data, which it will appropriately validate and incorporate in\r\n * its state as necessary.\r\n *\r\n * Eventually, the API here is targeted at being exposed externally as a\r\n * consumable libconsensus library, so any functions added must only call\r\n * other class member functions, pure functions in other parts of the consensus\r\n * library, callbacks, or read/write-to-disk functions (eventually this will\r\n * also be via callbacks).\r\n */\r\n```",
      "commit_id" : "1e0bef609076bafb12176039dc39bdaea0e35d60",
      "created_at" : "2017-07-25T17:33:28Z",
      "diff_hunk" : "@@ -53,11 +53,60 @@\n /**\n  * Global state\n  */\n+namespace {\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(CBlockIndex *pa, CBlockIndex *pb) const {\n+        // First sort by most total work, ...\n+        if (pa->nChainWork > pb->nChainWork) return false;\n+        if (pa->nChainWork < pb->nChainWork) return true;\n+\n+        // ... then by earliest time received, ...\n+        if (pa->nSequenceId < pb->nSequenceId) return false;\n+        if (pa->nSequenceId > pb->nSequenceId) return true;\n+\n+        // Use pointer address as tie breaker (should only happen with blocks\n+        // loaded from disk, as those all have id 0).\n+        if (pa < pb) return false;\n+        if (pa > pb) return true;\n+\n+        // Identical blocks.\n+        return false;\n+    }\n+};\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local copy of the chain\n+ *\n+ * It generally provides access to the current chain tree, as well as functions\n+ * to provide it new data, which it will appropriately validate and incorporate\n+ * in its state as neccessary.\n+ *\n+ * Eventually, the API here is targeted at being exposed externally as a\n+ * consumable libconsensus library, so any functions added must only call\n+ * external functions via callbacks, or to read/write data from disk.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#discussion_r129372775",
      "id" : 129372775,
      "original_commit_id" : "b8f6d69812b4d8e16f242c26c2a000b65de134d2",
      "original_position" : 36,
      "path" : "src/validation.cpp",
      "position" : 45,
      "pull_request_review_id" : 52139201,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10279",
      "updated_at" : "2017-07-25T17:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129372775",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Rebased properly this time, with the various 0.15 changes.",
      "created_at" : "2017-08-15T21:13:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10279#issuecomment-322591032",
      "id" : 322591032,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10279",
      "updated_at" : "2017-08-15T21:13:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322591032",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]
