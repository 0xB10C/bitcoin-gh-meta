[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r113172602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113172602"
         }
      },
      "body" : "This functionality could come in useful.\r\n\r\nAs for the API I prefer to not do any string combining/parsing here, this makes the API less clean to work with at least in my experience. I'd prefer to add an optional (can be null or missing) `fromBlock` argument.",
      "commit_id" : "221e725814b9bba82c3f0f37ba3c4efea06038ea",
      "created_at" : "2017-04-25T11:47:12Z",
      "diff_hunk" : "@@ -192,11 +195,34 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"myblockhash:mytxid\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"myblockhash:mytxid\\\", true\")\n         );\n \n     LOCK(cs_main);\n \n-    uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    uint256 hash;\n+    int64_t blockHeight = -1;\n+    bool inMainChain = true;\n+    auto p = request.params[0].get_str().find(':');",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10275#discussion_r113172602",
      "id" : 113172602,
      "original_commit_id" : "221e725814b9bba82c3f0f37ba3c4efea06038ea",
      "original_position" : 42,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 42,
      "pull_request_review_id" : 34538670,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10275",
      "updated_at" : "2017-04-25T11:47:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113172602",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Nice feature!\r\nI agree with @laanwj about the string parsing. The `<block>:<txid>` schematics looks good at first sight, but we are using JSON and should stay with JSON and don't add another form or key/value encoding.",
      "created_at" : "2017-04-25T19:37:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-297141513",
      "id" : 297141513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
      "updated_at" : "2017-04-25T19:37:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297141513",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Fair enough, I'll add a blockhash argument instead. I was kind of toying with the idea of a new standard for referencing transactions which included the block height (not hash) so everyone could always find a tx presuming they had the block in question, and that thought sort of seeped in here.",
      "created_at" : "2017-04-26T04:24:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-297234272",
      "id" : 297234272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
      "updated_at" : "2017-04-26T04:24:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297234272",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "@gmaxwell \r\n> Allowing it work on orphan blocks is an interesting idea. I'm a little less sure about that-- I think it could allow it to return transactions that have never been validated, which would be somewhat surprising.\r\n\r\nI just realized my logic was flawed on this. I am passing the block height only to the GetTransaction method, which means it will always pick the active chain at the given height. Either I throw when the block is not in the main chain (i.e. no support for orphaned blocks) or I move the height determine logic over to validation.cpp. I am leaning towards the latter, but feedback welcome.\r\n\r\nEdit: passing  CBlockIndex to GetTransaction seems like a great way to do this. Going with that.",
      "created_at" : "2017-04-26T05:12:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-297239855",
      "id" : 297239855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
      "updated_at" : "2017-04-26T06:14:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297239855",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "The code now works as advertised (see updated OP).\r\n\r\n[History](https://github.com/kallewoof/bitcoin/commits/gettx-with-blockhash-unsquashed):\r\n* 2017-04-25: [1 (block hash support in getrawtx)](https://github.com/kallewoof/bitcoin/commit/221e725814b9bba82c3f0f37ba3c4efea06038ea)\r\n* 2017-04-26: Ã¢ÂÂ [2Ã¢ÂÂ±1 (bh:txid to 2 params)](https://github.com/kallewoof/bitcoin/commit/9bd521c16a2bcdf58551bcca71809bedc2cbb553) Ã¢ÂÂ [3 (fix fVerbose parsing)](https://github.com/kallewoof/bitcoin/commit/7d891d534a3d1a5860889ec1f5f048a5b82371bd) Ã¢ÂÂ [4Ã¢ÂÂ±1 (switch to block index in GetTx)](https://github.com/kallewoof/bitcoin/commit/f069e1a94a9e7541b9c919e9c44295bbacc32978)",
      "created_at" : "2017-04-26T05:44:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10275#issuecomment-297243978",
      "id" : 297243978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10275",
      "updated_at" : "2017-04-26T05:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297243978",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   }
]
