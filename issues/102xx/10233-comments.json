[
   {
      "body" : "This seems entirely unrelated to #10065 or address reuse...",
      "created_at" : "2017-04-19T16:54:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295342918",
      "id" : 295342918,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T16:54:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295342918",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "Not sure if this is the right direction... \r\nI agree with @luke-jr, blocking \"addresses\" from coin selection seems to be a different thing the \"address reuse\".\r\n\r\n@jet0: can you explain what kind of a use case your PR does allow/solve?",
      "created_at" : "2017-04-19T17:07:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295347969",
      "id" : 295347969,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T17:07:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295347969",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "doing something like automatically freezing addresses once used would be interesting; but we'd need to have an extra 'frozen balance' displayed everywhere.",
      "created_at" : "2017-04-19T17:20:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295353146",
      "id" : 295353146,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T17:20:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295353146",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@jonasschnelli , all - perhaps the title of this commit is wrong (it does not prevent reuse globally) - I was trying to solve the issue in #10065 and would like to get @RHavar 's opinion on this approach, since his use case was:\r\nPeople send tiny amounts to well known addresses in his wallet.\r\nThe coin selection mechanism continually spends those outputs, tainting most outgoing transactions.\r\nHe was looking for a (persistent) way to exclude certain well known addresses from the coin selection algorithm.\r\n(RPC calls to display amounts/addresses TBD if the overall idea works).\r\n> An advanced wallet feature should be the ability to disable all address reuse. The attack this is designed to stop is if I know that the address 1BPmZt3kjnFffANNs6MCBBBKRYwRGGrXQZ is part of Alice's wallet, it shouldn't be possible to continually pepper it with dust and learn more about her as her wallet automatically keeps spend-linking it with her other outgoing transactions.",
      "created_at" : "2017-04-19T18:25:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295378501",
      "id" : 295378501,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T18:25:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295378501",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/27317396?v=3",
         "events_url" : "https://api.github.com/users/jet0/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jet0/followers",
         "following_url" : "https://api.github.com/users/jet0/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jet0/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jet0",
         "id" : 27317396,
         "login" : "jet0",
         "organizations_url" : "https://api.github.com/users/jet0/orgs",
         "received_events_url" : "https://api.github.com/users/jet0/received_events",
         "repos_url" : "https://api.github.com/users/jet0/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jet0/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jet0/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jet0"
      }
   },
   {
      "body" : "@jet0  I'm not sure if this right granularity to disable address reuse. For instance, let's say I request someone sends me money to address X and they do so.\r\n\r\nI can't immediately use `freezeaddress` because doing so would stop me spending the coins. I'd have to wait until the coins left address X and then freeze it. But that's rather annoying to do, and leaves open the reuse problem until I've spent all the money.\r\n\r\nAlso I don't think using the configuration is appropriate for a list of frozen addresses. It's highly dynamic and often huge (I personally have half a million addresses I'd like to freeze).\r\n\r\n---\r\n\r\nI think a better way of solving the problem would be to extend the locked outputs. I think making them persistent would be a good first step (it's rather annoying that locked outputs aren't already persistent). And then the configuration option to disable address reuse could automatically lock any outputs you got, if the associated address has already been used.\r\n\r\n\r\n\r\n",
      "created_at" : "2017-04-19T18:58:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295391631",
      "id" : 295391631,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T18:58:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295391631",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/9326759?v=3",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "body" : "> ... tainting most outgoing transaction`\r\n\r\nYes. This is a problem.\r\n\r\nBut is blacklisting addresses from coin-selection a valid solution? I would prefer if I could block certain UTXOs by txid/vout. Wouldn't blocking addresses lead to the problem that I cannot distinguish between taint-inputs and a real inputs (both could be sent to the same address)?\r\n\r\nBoth is already solvable:\r\n-> lockunspent (just lock the taint utxo)\r\n-> Qt coin controll\r\n\r\nBut your approach may be useful. But I'd recommend to add it as RPC command rather then a startup argument (otherwise you need to restart Core in order to get this thing working).",
      "created_at" : "2017-04-19T19:02:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295393015",
      "id" : 295393015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T19:02:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295393015",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> Wouldn't blocking addresses lead to the problem that I cannot distinguish between taint-inputs and a real inputs\r\n\r\nI believe the only time one needs to worry about taint inputs is after a spend from that address happens, so long as the spends make sure to spend all (non-dust) coins paid to that address so far.  \r\n\r\nWhat we should prefer doing is when we spend any coin connected to an address we should spend all (or all non-dust) coins for that address.  Then any new(/remaining) coins should be considered tainted, and ideally spent via coinjoins or given away as donations.",
      "created_at" : "2017-04-19T19:16:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295398692",
      "id" : 295398692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T19:16:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295398692",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "> I believe the only time one needs to worry about taint inputs is after a spend from that address happens, so long as the spends make sure to spend all (non-dust) coins paid to that address so far.\r\n\r\nThat's a good point, but from a pragmatic point of view I think it's not worth it. It comes at a terrible cost to coin selection (instead of picking from a set of outputs, it's going to have to pick from a set of sets). And coin selection in core is already one of the weakest parts, I don't favor making it any harder to deal with.\r\n\r\nAnd keep in mind that if we're trying to prevent someone dusting the wallet that dust (even when it's standard) is a *lot* more expensive to spend than it contains.  (As dust is based on the tiny relayfee, but the wallet typically uses a feerate of >100x more than that when creating transactions).\r\n\r\nSo I think for simplicity, it makes a lot more sense to just lock the output immediately instead of delaying it at the cost of putting fancy logic in the coin selection as well.\r\n\r\n\r\n",
      "created_at" : "2017-04-19T19:29:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295403437",
      "id" : 295403437,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T19:33:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295403437",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/9326759?v=3",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "body" : "> And then the configuration option to disable address reuse could automatically lock any outputs you got, if the associated address has already been used.\r\n\r\n@RHavar - to clarify - \"associated address has already been used\" - do you mean to automatically lock all (new or existing) outputs for an address that matches any in the already locked set?",
      "created_at" : "2017-04-19T19:53:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295412658",
      "id" : 295412658,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T19:58:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295412658",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/27317396?v=3",
         "events_url" : "https://api.github.com/users/jet0/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jet0/followers",
         "following_url" : "https://api.github.com/users/jet0/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jet0/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jet0",
         "id" : 27317396,
         "login" : "jet0",
         "organizations_url" : "https://api.github.com/users/jet0/orgs",
         "received_events_url" : "https://api.github.com/users/jet0/received_events",
         "repos_url" : "https://api.github.com/users/jet0/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jet0/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jet0/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jet0"
      }
   },
   {
      "body" : "@jonasschnelli what would you recommend the feature looks like?\r\n> But your approach may be useful. But I'd recommend to add it as RPC command rather then a startup argument (otherwise you need to restart Core in order to get this thing working).\r\n\r\nA set of RPC commands to freeze/unfreeze a wallet address from being used in coin selection (similar to the IsFrozenCoin() I have)?",
      "created_at" : "2017-04-19T19:56:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295413631",
      "id" : 295413631,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T19:57:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295413631",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/27317396?v=3",
         "events_url" : "https://api.github.com/users/jet0/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jet0/followers",
         "following_url" : "https://api.github.com/users/jet0/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jet0/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jet0",
         "id" : 27317396,
         "login" : "jet0",
         "organizations_url" : "https://api.github.com/users/jet0/orgs",
         "received_events_url" : "https://api.github.com/users/jet0/received_events",
         "repos_url" : "https://api.github.com/users/jet0/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jet0/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jet0/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jet0"
      }
   },
   {
      "body" : "> @RHavar - to clarify - \"associated address has already been used\" - do you mean to automatically lock all (new or existing) outputs for an address that matches any in the already locked set?\r\n\r\nI mean if you're running with `-dont-allow-address-reuse` when the wallet sees a new inbound output, it checks to see if that address has already previously been used. If it's been used, it locks the output (so it's not spendable).\r\n\r\nMaybe other people will disagree with that approach, but it seems the simplest to implement. ",
      "created_at" : "2017-04-19T20:01:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295416078",
      "id" : 295416078,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T20:01:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295416078",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/9326759?v=3",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "body" : "> it checks to see if that address has already previously been used\r\n\r\nHow do you define \"previously been used\"? I don't understand its relationship with \"lockunspent\" feature in your comments.\r\n(1) funds were received to it, or (2) its funds were spent, or (3) that some or all of its txouts are locked via lockunspent RPC or (4) something else?\r\nOn the other hand - if we are working with persistent lockunspent outputs -- it sounds simple to automatically lock all other outputs with the associated address (via a config option).",
      "created_at" : "2017-04-19T20:24:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295425495",
      "id" : 295425495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T20:24:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295425495",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/27317396?v=3",
         "events_url" : "https://api.github.com/users/jet0/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jet0/followers",
         "following_url" : "https://api.github.com/users/jet0/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jet0/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jet0",
         "id" : 27317396,
         "login" : "jet0",
         "organizations_url" : "https://api.github.com/users/jet0/orgs",
         "received_events_url" : "https://api.github.com/users/jet0/received_events",
         "repos_url" : "https://api.github.com/users/jet0/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jet0/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jet0/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jet0"
      }
   },
   {
      "body" : "> How do you define \"previously been used\"? I don't understand its relationship with \"lockunspent\" feature in your comments.\r\n(1) funds were received to it, or (2) its funds were spent, or (3) that some or all of its txouts are locked via lockunspent RPC or (4) something else?\r\n\r\nI mean (1). If you're getting money to a previously used address (i.e. You've previously received money to this address before) it would just lock it, so it doesn't get automatically spent.\r\n",
      "created_at" : "2017-04-19T20:27:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295426426",
      "id" : 295426426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T20:29:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295426426",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/9326759?v=3",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "body" : "@RHavar I think I understand now - in your original request you were not intending to execute a bunch of \"lockunspent\" calls or \"freezeaddress\" with specific txouts or addresses in mind, but wanted a system-wide switch to 'spend once from each address'. I.e. no manual txout or address selection, correct?",
      "created_at" : "2017-04-19T21:02:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295440933",
      "id" : 295440933,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T21:02:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295440933",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/27317396?v=3",
         "events_url" : "https://api.github.com/users/jet0/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jet0/followers",
         "following_url" : "https://api.github.com/users/jet0/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jet0/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jet0",
         "id" : 27317396,
         "login" : "jet0",
         "organizations_url" : "https://api.github.com/users/jet0/orgs",
         "received_events_url" : "https://api.github.com/users/jet0/received_events",
         "repos_url" : "https://api.github.com/users/jet0/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jet0/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jet0/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jet0"
      }
   },
   {
      "body" : "@jet0 yeah, ideally it would just be an option that I enable and the wallet does all the hard work for me =)\r\n\r\nI mean, if there was an rpcinterface  `freezeaddress` I'd happily use it.  But it's more of a pain in the ass than I'd like (especially if I had to first make sure there was no money left in it). ",
      "created_at" : "2017-04-19T21:28:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295450998",
      "id" : 295450998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10233",
      "updated_at" : "2017-04-19T21:35:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/295450998",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/9326759?v=3",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   }
]
