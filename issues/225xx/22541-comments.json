[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677137717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677137717"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n```",
      "commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "created_at" : "2021-07-27T05:50:51Z",
      "diff_hunk" : "@@ -2696,6 +2696,107 @@ static RPCHelpMan setwalletflag()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+    ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677137717",
      "id" : 677137717,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NzEzNzcxNw==",
      "original_commit_id" : "b1b6a4f8e53d544ae8024442baa070aae7d5478b",
      "original_line" : 2726,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 715510843,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-27T06:01:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677137717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677137884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677137884"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n```",
      "commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "created_at" : "2021-07-27T05:51:13Z",
      "diff_hunk" : "@@ -2696,6 +2696,107 @@ static RPCHelpMan setwalletflag()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+    \n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+    ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677137884",
      "id" : 677137884,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NzEzNzg4NA==",
      "original_commit_id" : "b1b6a4f8e53d544ae8024442baa070aae7d5478b",
      "original_line" : 2737,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 715510843,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-27T06:01:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677137884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677138096"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677138096"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n```",
      "commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "created_at" : "2021-07-27T05:51:40Z",
      "diff_hunk" : "@@ -2696,6 +2696,107 @@ static RPCHelpMan setwalletflag()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+    \n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+    \n+    if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n+          (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n+          (path_type == fs::regular_file && fs::path(wallet_name).filename() == wallet_name))) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, Untranslated(strprintf(\n+              \"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"\n+              \"database/log.?????????? files can be stored, a location where such a directory could be created, \"\n+              \"or (for backwards compatibility) the name of an existing data file in -walletdir (%s)\",\n+              wallet_name, GetWalletDir())).original);\n+    }\n+\n+    if (!TryCreateDirectories(wallet_path)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Failed to create database path '%s'. Database already exists.\", wallet_path.string()));\n+    }\n+\n+    auto wallet_file = wallet_path / \"wallet.dat\";\n+\n+    std::ifstream  src(backup_file, std::ios::binary);\n+    std::ofstream  dst(wallet_file.string(), std::ios::binary);\n+\n+    dst << src.rdbuf();\n+\n+    dst.flush();\n+    dst.close();\n+\n+    DatabaseOptions options;\n+    options.require_existing = true;\n+    DatabaseStatus status;\n+    bilingual_str error;\n+\n+    std::vector<bilingual_str> warnings;\n+\n+    std::optional<bool> load_on_start = request.params[2].isNull() ? std::nullopt : std::optional<bool>(request.params[2].get_bool());\n+    std::shared_ptr<CWallet> const wallet = LoadWallet(*context.chain, wallet_name, load_on_start, options, status, error, warnings);\n+    ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677138096",
      "id" : 677138096,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NzEzODA5Ng==",
      "original_commit_id" : "b1b6a4f8e53d544ae8024442baa070aae7d5478b",
      "original_line" : 2771,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 715510843,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-27T06:01:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677138096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK!",
      "created_at" : "2021-07-27T19:57:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-887793693",
      "id" : 887793693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
      "node_id" : "IC_kwDOABII58406qgd",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-27T19:57:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/887793693",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I think this is more of an `importwallet` than `restorewallet` in the sense that an external wallet file is being imported into the data directory, which is slightly more general. But no strong opinion on RPC naming (ofc, `importwallet` already exists and does something else,).\r\n\r\n> The only way to do this is to replace the wallet.dat of a newly created wallet with the backup file, which is hardly an intuitive way.\r\n\r\nI don't think the replacement part is necessary (or desirable). As I understand, you can place it in the `wallets` directory then do `loadwallet`.\r\n\r\nNeeds a RPC test.",
      "created_at" : "2021-07-28T14:45:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-888369974",
      "id" : 888369974,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
      "node_id" : "IC_kwDOABII584083M2",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-28T14:51:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888369974",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r678377307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678377307"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`fs::copy_file`?",
      "commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "created_at" : "2021-07-28T14:49:49Z",
      "diff_hunk" : "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+\n+    if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n+          (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n+          (path_type == fs::regular_file && fs::path(wallet_name).filename() == wallet_name))) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, Untranslated(strprintf(\n+              \"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"\n+              \"database/log.?????????? files can be stored, a location where such a directory could be created, \"\n+              \"or (for backwards compatibility) the name of an existing data file in -walletdir (%s)\",\n+              wallet_name, GetWalletDir())).original);\n+    }\n+\n+    if (!TryCreateDirectories(wallet_path)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Failed to create database path '%s'. Database already exists.\", wallet_path.string()));\n+    }\n+\n+    auto wallet_file = wallet_path / \"wallet.dat\";\n+\n+    std::ifstream  src(backup_file, std::ios::binary);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r678377307",
      "id" : 678377307,
      "line" : 2850,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODM3NzMwNw==",
      "original_commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "original_line" : 2850,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 59,
      "pull_request_review_id" : 717105583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-28T14:49:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678377307",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> As I understand, you can place it in the wallets directory then do loadwallet\r\n\r\nThis gives error:\r\n\r\n```\r\n$ bitcoin-cli loadwallet \"B1.dat\"\r\n\r\nerror code: -4\r\nerror message:\r\nBerkeleyDatabase: Can't open database B1.dat (duplicates fileid b6050000000024007aceafe40000000000000000 from wallet.dat)\r\n```",
      "created_at" : "2021-07-29T01:24:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-888728006",
      "id" : 888728006,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
      "node_id" : "IC_kwDOABII5840-OnG",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-29T01:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888728006",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@prayank23 the error says that you are trying to load *a copy* of already existing wallet. Try the same with the wallet created on another node",
      "created_at" : "2021-07-29T06:56:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-888853365",
      "id" : 888853365,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
      "node_id" : "IC_kwDOABII5840-tN1",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-29T06:56:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888853365",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> the error says that you are trying to load a copy of already existing wallet. Try the same with the wallet created on another node\r\n\r\nRight. Wallet will be different when users restore from backup. Because if there is already a wallet, there is no need to restore.\r\n\r\nOr it can be same in few cases?",
      "created_at" : "2021-07-29T12:14:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-889066564",
      "id" : 889066564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
      "node_id" : "IC_kwDOABII5840_hRE",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-29T12:14:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/889066564",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679338084"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679338084"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I would really prefer a shorter command name. I think calling it just `restorewallet` is good enough.",
      "commit_id" : "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
      "created_at" : "2021-07-29T17:11:16Z",
      "diff_hunk" : "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679338084",
      "id" : 679338084,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTMzODA4NA==",
      "original_commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "original_line" : 2795,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 718341521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T18:23:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679338084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679374353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679374353"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Inexistent is not a word.\r\n\r\n```suggestion\r\n        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Backup file does not exist\");\r\n```",
      "commit_id" : "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
      "created_at" : "2021-07-29T18:03:38Z",
      "diff_hunk" : "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679374353",
      "id" : 679374353,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTM3NDM1Mw==",
      "original_commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "original_line" : 2826,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 718341521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T18:23:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679374353",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679381753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679381753"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This `if` block is entirely unnecessary. It is largely copied from `MakeWalletDatabase`. However this is incorrect since `MakeWalletDatabase` is used for both creating new wallets, and opening existing ones. In a restore RPC, we do not want the restored wallet to be copied over an existing one. So allowing existing directories and files are not correct.\r\n\r\nThis should only check to see if a something exists in the wallet dir with the name that we want. If something does, that is an error and we should fail. But it is unnecessary to implement this check by ourselves, `TryCreateDirectories` below will do that for us and return false if something does exist. So this entire `if` block is not doing anything useful, and is potentially dangerous.",
      "commit_id" : "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
      "created_at" : "2021-07-29T18:15:01Z",
      "diff_hunk" : "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+\n+    if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n+          (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n+          (path_type == fs::regular_file && fs::path(wallet_name).filename() == wallet_name))) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, Untranslated(strprintf(\n+              \"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"\n+              \"database/log.?????????? files can be stored, a location where such a directory could be created, \"\n+              \"or (for backwards compatibility) the name of an existing data file in -walletdir (%s)\",\n+              wallet_name, GetWalletDir())).original);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679381753",
      "id" : 679381753,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTM4MTc1Mw==",
      "original_commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "original_line" : 2842,
      "original_position" : 51,
      "original_start_line" : 2834,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 718341521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-29T18:23:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679381753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679384329"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679384329"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The wallet will not be restored at an arbitrary path as below we are combining this with `GetWalletDir()`. I don't think we should mention paths at all for the help for `wallet_name`\r\n\r\n```suggestion\r\n            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name that will be applied to the restored wallet\"},\r\n```",
      "commit_id" : "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
      "created_at" : "2021-07-29T18:18:53Z",
      "diff_hunk" : "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679384329",
      "id" : 679384329,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTM4NDMyOQ==",
      "original_commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "original_line" : 2801,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 718341521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T18:23:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679384329",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679476700"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679476700"
         }
      },
      "author_association" : "NONE",
      "body" : "Done.",
      "commit_id" : "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
      "created_at" : "2021-07-29T20:49:31Z",
      "diff_hunk" : "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+\n+    if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n+          (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n+          (path_type == fs::regular_file && fs::path(wallet_name).filename() == wallet_name))) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, Untranslated(strprintf(\n+              \"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"\n+              \"database/log.?????????? files can be stored, a location where such a directory could be created, \"\n+              \"or (for backwards compatibility) the name of an existing data file in -walletdir (%s)\",\n+              wallet_name, GetWalletDir())).original);\n+    }\n+\n+    if (!TryCreateDirectories(wallet_path)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Failed to create database path '%s'. Database already exists.\", wallet_path.string()));\n+    }\n+\n+    auto wallet_file = wallet_path / \"wallet.dat\";\n+\n+    std::ifstream  src(backup_file, std::ios::binary);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679476700",
      "id" : 679476700,
      "in_reply_to_id" : 678377307,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQ3NjcwMA==",
      "original_commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "original_line" : 2850,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 718521404,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T20:49:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679476700",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84432093?v=4",
         "events_url" : "https://api.github.com/users/lsilva01/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lsilva01/followers",
         "following_url" : "https://api.github.com/users/lsilva01/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lsilva01/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lsilva01",
         "id" : 84432093,
         "login" : "lsilva01",
         "node_id" : "MDQ6VXNlcjg0NDMyMDkz",
         "organizations_url" : "https://api.github.com/users/lsilva01/orgs",
         "received_events_url" : "https://api.github.com/users/lsilva01/received_events",
         "repos_url" : "https://api.github.com/users/lsilva01/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lsilva01/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lsilva01"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679476916"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679476916"
         }
      },
      "author_association" : "NONE",
      "body" : "Changed to `restorewallet`.",
      "commit_id" : "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
      "created_at" : "2021-07-29T20:49:54Z",
      "diff_hunk" : "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679476916",
      "id" : 679476916,
      "in_reply_to_id" : 679338084,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQ3NjkxNg==",
      "original_commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "original_line" : 2795,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 718521674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T20:49:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679476916",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84432093?v=4",
         "events_url" : "https://api.github.com/users/lsilva01/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lsilva01/followers",
         "following_url" : "https://api.github.com/users/lsilva01/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lsilva01/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lsilva01",
         "id" : 84432093,
         "login" : "lsilva01",
         "node_id" : "MDQ6VXNlcjg0NDMyMDkz",
         "organizations_url" : "https://api.github.com/users/lsilva01/orgs",
         "received_events_url" : "https://api.github.com/users/lsilva01/received_events",
         "repos_url" : "https://api.github.com/users/lsilva01/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lsilva01/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lsilva01"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679477013"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679477013"
         }
      },
      "author_association" : "NONE",
      "body" : "Fixed.",
      "commit_id" : "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
      "created_at" : "2021-07-29T20:50:07Z",
      "diff_hunk" : "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679477013",
      "id" : 679477013,
      "in_reply_to_id" : 679374353,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQ3NzAxMw==",
      "original_commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "original_line" : 2826,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 718521826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T20:50:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679477013",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84432093?v=4",
         "events_url" : "https://api.github.com/users/lsilva01/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lsilva01/followers",
         "following_url" : "https://api.github.com/users/lsilva01/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lsilva01/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lsilva01",
         "id" : 84432093,
         "login" : "lsilva01",
         "node_id" : "MDQ6VXNlcjg0NDMyMDkz",
         "organizations_url" : "https://api.github.com/users/lsilva01/orgs",
         "received_events_url" : "https://api.github.com/users/lsilva01/received_events",
         "repos_url" : "https://api.github.com/users/lsilva01/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lsilva01/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lsilva01"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679477520"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679477520"
         }
      },
      "author_association" : "NONE",
      "body" : "`if` block removed.",
      "commit_id" : "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
      "created_at" : "2021-07-29T20:50:57Z",
      "diff_hunk" : "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+\n+    if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n+          (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n+          (path_type == fs::regular_file && fs::path(wallet_name).filename() == wallet_name))) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, Untranslated(strprintf(\n+              \"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"\n+              \"database/log.?????????? files can be stored, a location where such a directory could be created, \"\n+              \"or (for backwards compatibility) the name of an existing data file in -walletdir (%s)\",\n+              wallet_name, GetWalletDir())).original);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679477520",
      "id" : 679477520,
      "in_reply_to_id" : 679381753,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQ3NzUyMA==",
      "original_commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "original_line" : 2842,
      "original_position" : 51,
      "original_start_line" : 2834,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 718522515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-29T20:51:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679477520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84432093?v=4",
         "events_url" : "https://api.github.com/users/lsilva01/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lsilva01/followers",
         "following_url" : "https://api.github.com/users/lsilva01/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lsilva01/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lsilva01",
         "id" : 84432093,
         "login" : "lsilva01",
         "node_id" : "MDQ6VXNlcjg0NDMyMDkz",
         "organizations_url" : "https://api.github.com/users/lsilva01/orgs",
         "received_events_url" : "https://api.github.com/users/lsilva01/received_events",
         "repos_url" : "https://api.github.com/users/lsilva01/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lsilva01/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lsilva01"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679478182"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679478182"
         }
      },
      "author_association" : "NONE",
      "body" : "Changed to `wallet_name` only.",
      "commit_id" : "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
      "created_at" : "2021-07-29T20:52:07Z",
      "diff_hunk" : "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679478182",
      "id" : 679478182,
      "in_reply_to_id" : 679384329,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQ3ODE4Mg==",
      "original_commit_id" : "7b1b40a05586d76ffa4723d1619dd72747a41d73",
      "original_line" : 2801,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 718523398,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T20:52:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679478182",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84432093?v=4",
         "events_url" : "https://api.github.com/users/lsilva01/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lsilva01/followers",
         "following_url" : "https://api.github.com/users/lsilva01/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lsilva01/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lsilva01",
         "id" : 84432093,
         "login" : "lsilva01",
         "node_id" : "MDQ6VXNlcjg0NDMyMDkz",
         "organizations_url" : "https://api.github.com/users/lsilva01/orgs",
         "received_events_url" : "https://api.github.com/users/lsilva01/received_events",
         "repos_url" : "https://api.github.com/users/lsilva01/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lsilva01/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lsilva01"
      }
   }
]
