[
   {
      "body" : "Another option, which just solves my immediate problem, would be to override this check for whitelisted peers.",
      "created_at" : "2015-11-09T09:42:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6971#issuecomment-155011166",
      "id" : 155011166,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6971",
      "updated_at" : "2015-11-09T09:42:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155011166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "The motivation for this restriction was to avoid responding to a getheaders when your chain might deviate from the checkpointed chain, because your peers that have the checkpointed chain will disconnect you.  (After changing the download logic to call getheaders on inbound peers, I wanted to avoid a situation where a newly syncing node could be partitioned from the network by a malicious peer that served it a bogus headers chain.)\r\n\r\nThis check is more restrictive than is needed for that -- I think I did it this way because I didn't want to introduce yet another function for determining \"synced-ness\" (or a new place in the code that uses  checkpoints).  Also, I think block relay only happens if you're out of InitialBlockDownload, so it didn't seem unreasonable to use it here as well, but we could loosen things up if we wanted to.\r\n\r\nI assume the use case you're going for is to have two nodes be able to sync even if disconnected from the rest of the network?  If so the whitelisting approach seems reasonable to me.  As a minor nit, I think the whitelisting test gets the property backwards -- really what you'd want is to eliminate the restriction if your peer has whitelisted you, rather than the other way around, since then you could respond without fear of being disconnected -- but since it's likely both nodes are under common control anyway, it seems a minor issue.\r\n\r\nWill review the PR.",
      "created_at" : "2015-11-09T14:34:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6971#issuecomment-155079929",
      "id" : 155079929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6971",
      "updated_at" : "2015-11-09T14:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155079929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "> I assume the use case you're going for is to have two nodes be able to sync even if disconnected from the rest of the network?\r\n\r\nRight. I have a node A that isn't catched up fully, and node B that I want to sync from node A. B only connects to A. A is currently not connected to the internet, to make sure B gets all available I/O bandwidth.\r\n",
      "created_at" : "2015-11-09T14:51:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6971#issuecomment-155084614",
      "id" : 155084614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6971",
      "updated_at" : "2015-11-09T14:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/155084614",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
