[
   {
      "body" : "I'm not sure the use of this is in practice, besides testing,but you can effectively already achieve this with `invalidateblock` and `reconsiderblock`. Invalidate the forks that you don't want to be on - and switch back by validating the blocks again.\r\n",
      "created_at" : "2015-11-12T09:27:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6995#issuecomment-156045402",
      "id" : 156045402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6995",
      "updated_at" : "2015-11-12T09:27:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156045402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Yep, indeed those 2 commands do have a method for doing what I've suggested.\r\nHeh, they've only been around for a ... year ... guess I should look closer at the code changes :)\r\n\r\nI'd guess that a switch from a 'valid' fork would be done by invalidating then revalidating a block in the 'other' fork, and an 'offending' fork switch (for a fork that was a network issue like the v3 fork and you wouldn't want to ever continue) would simply be to invalidate a block in the 'offending' fork.",
      "created_at" : "2015-11-12T09:45:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6995#issuecomment-156051307",
      "id" : 156051307,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6995",
      "updated_at" : "2015-11-12T09:45:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156051307",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=3",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   },
   {
      "body" : "@laanwj thats a pretty dangerous suggestion (and the risk of miners doing that was a reason we considered leaving out out those RPCs in the first place)... because in the common case that the fork you heard first was the actual longer one if your software screws up and you fail to revalidate it, you'll continue on forking the network.\r\n\r\nThe normal reason for asks like this is because of a high-ish hashpower miner who found a tying block moments after they had already accepted a first longer block from the network (due to hardware and submission delays); and rather than accept their defeat gracefully they'd like to attempt a momentary majority hashpower attack and try to get lucky excluding the other block.   If you simulate this behavior of selfishly mining on your own later blocks, for many hashrate distributions and latency choices it gives _massively_ worse convergence times for the network. (I think for a toy example of two 50% miners and a 30 second submission latency it increased the frequency of 6+ deep reorgs 100 fold or something insane like that)\r\n\r\nPerhaps it would be better to focus more on cutting down on the submission latency side of it, since asking miners to not behave in a way thats adversarial towards the network may not be sustainable-- but historically many hardware vendors have not cared too much about eliminating these latencies. ",
      "created_at" : "2015-11-12T09:46:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6995#issuecomment-156051325",
      "id" : 156051325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6995",
      "updated_at" : "2015-11-12T09:46:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156051325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Based on this thread I think we need to either remove these debugging RPCs in further releases or provide an additional RPC that twiddles the time ordering without invalidating.  Having miners deploy half tested software to prefer their own blocks using invalidateblock would be a disaster waiting to happen which we should have nothing to do with.",
      "created_at" : "2015-11-12T09:48:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6995#issuecomment-156051853",
      "id" : 156051853,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6995",
      "updated_at" : "2015-11-12T09:49:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156051853",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "ACK. I would love to remove those RPCs, but I don't think we can, so a time-order-twiddling RPC (that only allows twiddling by 5 seconds or something similar) might be better than the alternative :(\n\nOn November 12, 2015 1:48:54 AM PST, Gregory Maxwell <notifications@github.com> wrote:\n>Based on this thread I think we need to either remove these debugging\n>RPCs in further releases or provide an additional RPC that twiddles the\n>time ordering without invalidating.  Having miners deploy half tested\n>software to prefer their own blocks using invalidate block would be a\n>disaster waiting to happen which we should have nothing to do with.\n>\n>---\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/issues/6995#issuecomment-156051853\n",
      "created_at" : "2015-11-12T09:54:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6995#issuecomment-156053161",
      "id" : 156053161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6995",
      "updated_at" : "2015-11-12T09:54:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156053161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Ah, so suddenly we have the implication that the person who allowed these RPC calls into bitcoin should not have? Interesting.\r\n\r\nYet I've stated a clear use case that is advantageous to the bitcoin network\r\n\r\nI've no specific idea how bitmain and f2pool did resolve their v2/v3 bitcoin states in the biggest fork recently, but when I contacted bitmain and asked them to switch away from their v2 fork, it did indeed take a while for them to do that.\r\nI wonder if they too (like me) didn't realise these commands existed and thus the problem lasted longer than if they had known about these ...",
      "created_at" : "2015-11-12T10:01:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6995#issuecomment-156055368",
      "id" : 156055368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6995",
      "updated_at" : "2015-11-12T10:01:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/156055368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1059166?v=3",
         "events_url" : "https://api.github.com/users/kanoi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanoi/followers",
         "following_url" : "https://api.github.com/users/kanoi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanoi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanoi",
         "id" : 1059166,
         "login" : "kanoi",
         "organizations_url" : "https://api.github.com/users/kanoi/orgs",
         "received_events_url" : "https://api.github.com/users/kanoi/received_events",
         "repos_url" : "https://api.github.com/users/kanoi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanoi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanoi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanoi"
      }
   }
]
