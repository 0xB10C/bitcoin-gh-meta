[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81602325"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81602325"
         }
      },
      "body" : "nit: don't make_pair with emplace, just use the components directly.",
      "commit_id" : "a9aec5c24d8c4efe9e1ede54e8b8039b4b3f0835",
      "created_at" : "2016-10-03T17:47:58Z",
      "diff_hunk" : "@@ -4684,6 +4658,62 @@ std::string GetWarnings(const std::string& strFor)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n+// blockchain -> download logic notification\n+//\n+\n+class PeerLogicValidation : public CValidationInterface {\n+private:\n+    CConnman* connman;\n+\n+public:\n+    PeerLogicValidation(CConnman* connmanIn) : connman(connmanIn) {}\n+\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+        const int nNewHeight = pindexNew->nHeight;\n+\n+        if (!fInitialDownload) {\n+            // Find the hashes of all blocks that weren't previously in the best chain.\n+            std::vector<uint256> vHashes;\n+            const CBlockIndex *pindexToAnnounce = pindexNew;\n+            while (pindexToAnnounce != pindexFork) {\n+                vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+                pindexToAnnounce = pindexToAnnounce->pprev;\n+                if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+                    // Limit announcements in case of a huge reorganization.\n+                    // Rely on the peer's synchronization mechanism in that case.\n+                    break;\n+                }\n+            }\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+                if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n+                    BOOST_REVERSE_FOREACH(const uint256& hash, vHashes) {\n+                        pnode->PushBlockHash(hash);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+};\n+std::map<CConnman*, std::unique_ptr<PeerLogicValidation> > mapPeerLogics;\n+\n+void InitPeerLogic(CConnman& connman) {\n+    if (mapPeerLogics.count(&connman))\n+        return;\n+    mapPeerLogics.emplace(std::make_pair(&connman, std::unique_ptr<PeerLogicValidation>(new PeerLogicValidation(&connman))));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81602325",
      "id" : 81602325,
      "original_commit_id" : "e8c5e11b6114ada4554ffb8a787c55ea73426331",
      "original_position" : 93,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2570286,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-04T17:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81602325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81602663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81602663"
         }
      },
      "body" : "Using a ptr for the index feels kinda icky. Since a reference is passed and stored anyway, let's add an Id to CConnman instead. It'll be helpful in other places too.",
      "commit_id" : "a9aec5c24d8c4efe9e1ede54e8b8039b4b3f0835",
      "created_at" : "2016-10-03T17:49:36Z",
      "diff_hunk" : "@@ -4684,6 +4658,62 @@ std::string GetWarnings(const std::string& strFor)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n+// blockchain -> download logic notification\n+//\n+\n+class PeerLogicValidation : public CValidationInterface {\n+private:\n+    CConnman* connman;\n+\n+public:\n+    PeerLogicValidation(CConnman* connmanIn) : connman(connmanIn) {}\n+\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+        const int nNewHeight = pindexNew->nHeight;\n+\n+        if (!fInitialDownload) {\n+            // Find the hashes of all blocks that weren't previously in the best chain.\n+            std::vector<uint256> vHashes;\n+            const CBlockIndex *pindexToAnnounce = pindexNew;\n+            while (pindexToAnnounce != pindexFork) {\n+                vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+                pindexToAnnounce = pindexToAnnounce->pprev;\n+                if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+                    // Limit announcements in case of a huge reorganization.\n+                    // Rely on the peer's synchronization mechanism in that case.\n+                    break;\n+                }\n+            }\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+                if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n+                    BOOST_REVERSE_FOREACH(const uint256& hash, vHashes) {\n+                        pnode->PushBlockHash(hash);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+};\n+std::map<CConnman*, std::unique_ptr<PeerLogicValidation> > mapPeerLogics;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81602663",
      "id" : 81602663,
      "original_commit_id" : "e8c5e11b6114ada4554ffb8a787c55ea73426331",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2570604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-04T17:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81602663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81641546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81641546"
         }
      },
      "body" : "Hmm, I feel like that is a layer violation? If CConnman is a low-level network socket/connection manager, it should have little knowledge of the fact that there is something hooked up above it to listen to validation callbacks and do things with them?",
      "commit_id" : "a9aec5c24d8c4efe9e1ede54e8b8039b4b3f0835",
      "created_at" : "2016-10-03T21:14:25Z",
      "diff_hunk" : "@@ -4684,6 +4658,62 @@ std::string GetWarnings(const std::string& strFor)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n+// blockchain -> download logic notification\n+//\n+\n+class PeerLogicValidation : public CValidationInterface {\n+private:\n+    CConnman* connman;\n+\n+public:\n+    PeerLogicValidation(CConnman* connmanIn) : connman(connmanIn) {}\n+\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+        const int nNewHeight = pindexNew->nHeight;\n+\n+        if (!fInitialDownload) {\n+            // Find the hashes of all blocks that weren't previously in the best chain.\n+            std::vector<uint256> vHashes;\n+            const CBlockIndex *pindexToAnnounce = pindexNew;\n+            while (pindexToAnnounce != pindexFork) {\n+                vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+                pindexToAnnounce = pindexToAnnounce->pprev;\n+                if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+                    // Limit announcements in case of a huge reorganization.\n+                    // Rely on the peer's synchronization mechanism in that case.\n+                    break;\n+                }\n+            }\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+                if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n+                    BOOST_REVERSE_FOREACH(const uint256& hash, vHashes) {\n+                        pnode->PushBlockHash(hash);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+};\n+std::map<CConnman*, std::unique_ptr<PeerLogicValidation> > mapPeerLogics;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81641546",
      "id" : 81641546,
      "original_commit_id" : "e8c5e11b6114ada4554ffb8a787c55ea73426331",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2607017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-04T17:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81641546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81652021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81652021"
         }
      },
      "body" : "Sorry, I meant: add a GetID() to CConnman, which would return a const value set during construction. That would allow maps to be created which refer to specific connman instances without tying them to a pointer.",
      "commit_id" : "a9aec5c24d8c4efe9e1ede54e8b8039b4b3f0835",
      "created_at" : "2016-10-03T22:17:42Z",
      "diff_hunk" : "@@ -4684,6 +4658,62 @@ std::string GetWarnings(const std::string& strFor)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n+// blockchain -> download logic notification\n+//\n+\n+class PeerLogicValidation : public CValidationInterface {\n+private:\n+    CConnman* connman;\n+\n+public:\n+    PeerLogicValidation(CConnman* connmanIn) : connman(connmanIn) {}\n+\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+        const int nNewHeight = pindexNew->nHeight;\n+\n+        if (!fInitialDownload) {\n+            // Find the hashes of all blocks that weren't previously in the best chain.\n+            std::vector<uint256> vHashes;\n+            const CBlockIndex *pindexToAnnounce = pindexNew;\n+            while (pindexToAnnounce != pindexFork) {\n+                vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+                pindexToAnnounce = pindexToAnnounce->pprev;\n+                if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+                    // Limit announcements in case of a huge reorganization.\n+                    // Rely on the peer's synchronization mechanism in that case.\n+                    break;\n+                }\n+            }\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+                if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n+                    BOOST_REVERSE_FOREACH(const uint256& hash, vHashes) {\n+                        pnode->PushBlockHash(hash);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+};\n+std::map<CConnman*, std::unique_ptr<PeerLogicValidation> > mapPeerLogics;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81652021",
      "id" : 81652021,
      "original_commit_id" : "e8c5e11b6114ada4554ffb8a787c55ea73426331",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2616977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-04T17:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81652021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81652347"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81652347"
         }
      },
      "body" : "I think we're overengineering? Are we ever really gonna have more than one CConnman? Maybe something without even a map is simpler?",
      "commit_id" : "a9aec5c24d8c4efe9e1ede54e8b8039b4b3f0835",
      "created_at" : "2016-10-03T22:20:05Z",
      "diff_hunk" : "@@ -4684,6 +4658,62 @@ std::string GetWarnings(const std::string& strFor)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n+// blockchain -> download logic notification\n+//\n+\n+class PeerLogicValidation : public CValidationInterface {\n+private:\n+    CConnman* connman;\n+\n+public:\n+    PeerLogicValidation(CConnman* connmanIn) : connman(connmanIn) {}\n+\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+        const int nNewHeight = pindexNew->nHeight;\n+\n+        if (!fInitialDownload) {\n+            // Find the hashes of all blocks that weren't previously in the best chain.\n+            std::vector<uint256> vHashes;\n+            const CBlockIndex *pindexToAnnounce = pindexNew;\n+            while (pindexToAnnounce != pindexFork) {\n+                vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+                pindexToAnnounce = pindexToAnnounce->pprev;\n+                if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+                    // Limit announcements in case of a huge reorganization.\n+                    // Rely on the peer's synchronization mechanism in that case.\n+                    break;\n+                }\n+            }\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+                if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n+                    BOOST_REVERSE_FOREACH(const uint256& hash, vHashes) {\n+                        pnode->PushBlockHash(hash);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+};\n+std::map<CConnman*, std::unique_ptr<PeerLogicValidation> > mapPeerLogics;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81652347",
      "id" : 81652347,
      "original_commit_id" : "e8c5e11b6114ada4554ffb8a787c55ea73426331",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2617286,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-04T17:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81652347",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81662860"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81662860"
         }
      },
      "body" : "I'm hoping to be able to hook up 2 CConnmans to eachother in the future for testing against eachother, yes. I've gone to significant efforts to remove the \"stuff a static global somewhere\" practice from much of the net code, please don't start reintroducing.\r\n\r\nA pointer is fine here if you'd prefer to keep it simple, we can adapt later if needed.",
      "commit_id" : "a9aec5c24d8c4efe9e1ede54e8b8039b4b3f0835",
      "created_at" : "2016-10-03T23:37:08Z",
      "diff_hunk" : "@@ -4684,6 +4658,62 @@ std::string GetWarnings(const std::string& strFor)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n+// blockchain -> download logic notification\n+//\n+\n+class PeerLogicValidation : public CValidationInterface {\n+private:\n+    CConnman* connman;\n+\n+public:\n+    PeerLogicValidation(CConnman* connmanIn) : connman(connmanIn) {}\n+\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+        const int nNewHeight = pindexNew->nHeight;\n+\n+        if (!fInitialDownload) {\n+            // Find the hashes of all blocks that weren't previously in the best chain.\n+            std::vector<uint256> vHashes;\n+            const CBlockIndex *pindexToAnnounce = pindexNew;\n+            while (pindexToAnnounce != pindexFork) {\n+                vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+                pindexToAnnounce = pindexToAnnounce->pprev;\n+                if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+                    // Limit announcements in case of a huge reorganization.\n+                    // Rely on the peer's synchronization mechanism in that case.\n+                    break;\n+                }\n+            }\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+                if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n+                    BOOST_REVERSE_FOREACH(const uint256& hash, vHashes) {\n+                        pnode->PushBlockHash(hash);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+};\n+std::map<CConnman*, std::unique_ptr<PeerLogicValidation> > mapPeerLogics;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81662860",
      "id" : 81662860,
      "original_commit_id" : "e8c5e11b6114ada4554ffb8a787c55ea73426331",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2626693,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-04T17:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81662860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81668063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81668063"
         }
      },
      "body" : "Hmm, were these not erased before in the invalid case?",
      "commit_id" : "a9aec5c24d8c4efe9e1ede54e8b8039b4b3f0835",
      "created_at" : "2016-10-04T00:26:45Z",
      "diff_hunk" : "@@ -4693,6 +4681,26 @@ class PeerLogicValidation : public CValidationInterface {\n             });\n         }\n     }\n+\n+    virtual void BlockChecked(const CBlock& block, const CValidationState& state) {\n+        LOCK(cs_main);\n+\n+        const uint256 hash(block.GetHash());\n+        std::map<uint256, NodeId>::iterator it = mapBlockSource.find(hash);\n+\n+        int nDoS = 0;\n+        if (state.IsInvalid(nDoS)) {\n+            if (it != mapBlockSource.end() && State(it->second)) {\n+                assert (state.GetRejectCode() < REJECT_INTERNAL); // Blocks are never rejected with internal reject codes\n+                CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\n+                State(it->second)->rejects.push_back(reject);\n+                if (nDoS > 0)\n+                    Misbehaving(it->second, nDoS);\n+            }\n+        }\n+        if (it != mapBlockSource.end())\n+            mapBlockSource.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81668063",
      "id" : 81668063,
      "original_commit_id" : "780528adc65ccbcf2de9b267e8c05e04b6ee064e",
      "original_position" : 48,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2631559,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-04T17:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81668063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Concept ACK and quick code-review ACK other than the nits. I'd like to spend some time testing, though.",
      "created_at" : "2016-10-04T00:29:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#issuecomment-251265292",
      "id" : 251265292,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8865",
      "updated_at" : "2016-10-04T00:29:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251265292",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "No? I think after this patch set the only place mapBlockSource is erased from is this line.\n\nOn October 3, 2016 8:26:53 PM EDT, Cory Fields <notifications@github.com> wrote:\n>theuni commented on this pull request.\n>\n>\n>\n>> +\n>+        const uint256 hash(block.GetHash());\n>+        std::map<uint256, NodeId>::iterator it =\n>mapBlockSource.find(hash);\n>+\n>+        int nDoS = 0;\n>+        if (state.IsInvalid(nDoS)) {\n>+            if (it != mapBlockSource.end() && State(it->second)) {\n>+                assert (state.GetRejectCode() < REJECT_INTERNAL); //\n>Blocks are never rejected with internal reject codes\n>+                CBlockReject reject = {(unsigned\n>char)state.GetRejectCode(), state.GetRejectReason().substr(0,\n>MAX_REJECT_MESSAGE_LENGTH), hash};\n>+                State(it->second)->rejects.push_back(reject);\n>+                if (nDoS > 0)\n>+                    Misbehaving(it->second, nDoS);\n>+            }\n>+        }\n>+        if (it != mapBlockSource.end())\n>+            mapBlockSource.erase(it);\n>\n>Hmm, were these not erased before in the invalid case?\n>\n>-- \n>You are receiving this because you authored the thread.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/8865#pullrequestreview-2631559\n",
      "created_at" : "2016-10-04T02:41:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#issuecomment-251281504",
      "id" : 251281504,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8865",
      "updated_at" : "2016-10-04T02:41:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251281504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "I was just pointing out that this looks to be a memleak bugfix :)",
      "created_at" : "2016-10-04T05:33:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#issuecomment-251299990",
      "id" : 251299990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8865",
      "updated_at" : "2016-10-04T05:33:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251299990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "I dont believe it is actually any (much?) different than it used to be. Maybe it will be deleted more often on reorgs now, I didnt investigate fully. In any case, its pretty hard to DoS since you only add to the map after AcceptBlock succeeds (ie the block is syntactically valid/connects/has valid PoW)",
      "created_at" : "2016-10-04T13:18:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#issuecomment-251385087",
      "id" : 251385087,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8865",
      "updated_at" : "2016-10-04T13:18:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251385087",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Switched g_connman to be a shared_ptr instead of a unique_ptr, which I think should neatly address all the outstanding nits.",
      "created_at" : "2016-10-04T13:46:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#issuecomment-251392182",
      "id" : 251392182,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8865",
      "updated_at" : "2016-10-04T13:46:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251392182",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Backed out the shared_ptr change, I misunderstood @theuni's comments, just fixed the make_pair nit and left everything else as-is: it should be easier to clean up things like class design once everything is split out.",
      "created_at" : "2016-10-04T16:50:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#issuecomment-251445444",
      "id" : 251445444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8865",
      "updated_at" : "2016-10-04T16:50:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251445444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Restructured the code after discussion on IRC with @theuni...now the CValidationInterface subclass is defined in main.h (requires an extra include, but we can drop that when we move all the stuff to another file) and init.cpp itself does the object initialization and keeps the CValidationInterface around.",
      "created_at" : "2016-10-04T17:56:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#issuecomment-251463559",
      "id" : 251463559,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8865",
      "updated_at" : "2016-10-04T17:56:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251463559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]
