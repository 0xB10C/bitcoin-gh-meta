[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81602325"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81602325"
         }
      },
      "body" : "nit: don't make_pair with emplace, just use the components directly.",
      "commit_id" : "780528adc65ccbcf2de9b267e8c05e04b6ee064e",
      "created_at" : "2016-10-03T17:47:58Z",
      "diff_hunk" : "@@ -4684,6 +4658,62 @@ std::string GetWarnings(const std::string& strFor)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n+// blockchain -> download logic notification\n+//\n+\n+class PeerLogicValidation : public CValidationInterface {\n+private:\n+    CConnman* connman;\n+\n+public:\n+    PeerLogicValidation(CConnman* connmanIn) : connman(connmanIn) {}\n+\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+        const int nNewHeight = pindexNew->nHeight;\n+\n+        if (!fInitialDownload) {\n+            // Find the hashes of all blocks that weren't previously in the best chain.\n+            std::vector<uint256> vHashes;\n+            const CBlockIndex *pindexToAnnounce = pindexNew;\n+            while (pindexToAnnounce != pindexFork) {\n+                vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+                pindexToAnnounce = pindexToAnnounce->pprev;\n+                if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+                    // Limit announcements in case of a huge reorganization.\n+                    // Rely on the peer's synchronization mechanism in that case.\n+                    break;\n+                }\n+            }\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+                if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n+                    BOOST_REVERSE_FOREACH(const uint256& hash, vHashes) {\n+                        pnode->PushBlockHash(hash);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+};\n+std::map<CConnman*, std::unique_ptr<PeerLogicValidation> > mapPeerLogics;\n+\n+void InitPeerLogic(CConnman& connman) {\n+    if (mapPeerLogics.count(&connman))\n+        return;\n+    mapPeerLogics.emplace(std::make_pair(&connman, std::unique_ptr<PeerLogicValidation>(new PeerLogicValidation(&connman))));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81602325",
      "id" : 81602325,
      "original_commit_id" : "e8c5e11b6114ada4554ffb8a787c55ea73426331",
      "original_position" : 93,
      "path" : "src/main.cpp",
      "position" : 211,
      "pull_request_review_id" : 2570286,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-03T17:47:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81602325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81602663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81602663"
         }
      },
      "body" : "Using a ptr for the index feels kinda icky. Since a reference is passed and stored anyway, let's add an Id to CConnman instead. It'll be helpful in other places too.",
      "commit_id" : "780528adc65ccbcf2de9b267e8c05e04b6ee064e",
      "created_at" : "2016-10-03T17:49:36Z",
      "diff_hunk" : "@@ -4684,6 +4658,62 @@ std::string GetWarnings(const std::string& strFor)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n+// blockchain -> download logic notification\n+//\n+\n+class PeerLogicValidation : public CValidationInterface {\n+private:\n+    CConnman* connman;\n+\n+public:\n+    PeerLogicValidation(CConnman* connmanIn) : connman(connmanIn) {}\n+\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+        const int nNewHeight = pindexNew->nHeight;\n+\n+        if (!fInitialDownload) {\n+            // Find the hashes of all blocks that weren't previously in the best chain.\n+            std::vector<uint256> vHashes;\n+            const CBlockIndex *pindexToAnnounce = pindexNew;\n+            while (pindexToAnnounce != pindexFork) {\n+                vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+                pindexToAnnounce = pindexToAnnounce->pprev;\n+                if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+                    // Limit announcements in case of a huge reorganization.\n+                    // Rely on the peer's synchronization mechanism in that case.\n+                    break;\n+                }\n+            }\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+                if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n+                    BOOST_REVERSE_FOREACH(const uint256& hash, vHashes) {\n+                        pnode->PushBlockHash(hash);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+};\n+std::map<CConnman*, std::unique_ptr<PeerLogicValidation> > mapPeerLogics;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81602663",
      "id" : 81602663,
      "original_commit_id" : "e8c5e11b6114ada4554ffb8a787c55ea73426331",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2570604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-03T17:49:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81602663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81641546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81641546"
         }
      },
      "body" : "Hmm, I feel like that is a layer violation? If CConnman is a low-level network socket/connection manager, it should have little knowledge of the fact that there is something hooked up above it to listen to validation callbacks and do things with them?",
      "commit_id" : "780528adc65ccbcf2de9b267e8c05e04b6ee064e",
      "created_at" : "2016-10-03T21:14:25Z",
      "diff_hunk" : "@@ -4684,6 +4658,62 @@ std::string GetWarnings(const std::string& strFor)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n+// blockchain -> download logic notification\n+//\n+\n+class PeerLogicValidation : public CValidationInterface {\n+private:\n+    CConnman* connman;\n+\n+public:\n+    PeerLogicValidation(CConnman* connmanIn) : connman(connmanIn) {}\n+\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+        const int nNewHeight = pindexNew->nHeight;\n+\n+        if (!fInitialDownload) {\n+            // Find the hashes of all blocks that weren't previously in the best chain.\n+            std::vector<uint256> vHashes;\n+            const CBlockIndex *pindexToAnnounce = pindexNew;\n+            while (pindexToAnnounce != pindexFork) {\n+                vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+                pindexToAnnounce = pindexToAnnounce->pprev;\n+                if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+                    // Limit announcements in case of a huge reorganization.\n+                    // Rely on the peer's synchronization mechanism in that case.\n+                    break;\n+                }\n+            }\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+                if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n+                    BOOST_REVERSE_FOREACH(const uint256& hash, vHashes) {\n+                        pnode->PushBlockHash(hash);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+};\n+std::map<CConnman*, std::unique_ptr<PeerLogicValidation> > mapPeerLogics;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81641546",
      "id" : 81641546,
      "original_commit_id" : "e8c5e11b6114ada4554ffb8a787c55ea73426331",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2607017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-03T21:14:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81641546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81652021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81652021"
         }
      },
      "body" : "Sorry, I meant: add a GetID() to CConnman, which would return a const value set during construction. That would allow maps to be created which refer to specific connman instances without tying them to a pointer.",
      "commit_id" : "780528adc65ccbcf2de9b267e8c05e04b6ee064e",
      "created_at" : "2016-10-03T22:17:42Z",
      "diff_hunk" : "@@ -4684,6 +4658,62 @@ std::string GetWarnings(const std::string& strFor)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n+// blockchain -> download logic notification\n+//\n+\n+class PeerLogicValidation : public CValidationInterface {\n+private:\n+    CConnman* connman;\n+\n+public:\n+    PeerLogicValidation(CConnman* connmanIn) : connman(connmanIn) {}\n+\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+        const int nNewHeight = pindexNew->nHeight;\n+\n+        if (!fInitialDownload) {\n+            // Find the hashes of all blocks that weren't previously in the best chain.\n+            std::vector<uint256> vHashes;\n+            const CBlockIndex *pindexToAnnounce = pindexNew;\n+            while (pindexToAnnounce != pindexFork) {\n+                vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+                pindexToAnnounce = pindexToAnnounce->pprev;\n+                if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+                    // Limit announcements in case of a huge reorganization.\n+                    // Rely on the peer's synchronization mechanism in that case.\n+                    break;\n+                }\n+            }\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+                if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n+                    BOOST_REVERSE_FOREACH(const uint256& hash, vHashes) {\n+                        pnode->PushBlockHash(hash);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+};\n+std::map<CConnman*, std::unique_ptr<PeerLogicValidation> > mapPeerLogics;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81652021",
      "id" : 81652021,
      "original_commit_id" : "e8c5e11b6114ada4554ffb8a787c55ea73426331",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2616977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-03T22:17:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81652021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81652347"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81652347"
         }
      },
      "body" : "I think we're overengineering? Are we ever really gonna have more than one CConnman? Maybe something without even a map is simpler?",
      "commit_id" : "780528adc65ccbcf2de9b267e8c05e04b6ee064e",
      "created_at" : "2016-10-03T22:20:05Z",
      "diff_hunk" : "@@ -4684,6 +4658,62 @@ std::string GetWarnings(const std::string& strFor)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n+// blockchain -> download logic notification\n+//\n+\n+class PeerLogicValidation : public CValidationInterface {\n+private:\n+    CConnman* connman;\n+\n+public:\n+    PeerLogicValidation(CConnman* connmanIn) : connman(connmanIn) {}\n+\n+    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+        const int nNewHeight = pindexNew->nHeight;\n+\n+        if (!fInitialDownload) {\n+            // Find the hashes of all blocks that weren't previously in the best chain.\n+            std::vector<uint256> vHashes;\n+            const CBlockIndex *pindexToAnnounce = pindexNew;\n+            while (pindexToAnnounce != pindexFork) {\n+                vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+                pindexToAnnounce = pindexToAnnounce->pprev;\n+                if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+                    // Limit announcements in case of a huge reorganization.\n+                    // Rely on the peer's synchronization mechanism in that case.\n+                    break;\n+                }\n+            }\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            connman->ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+                if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n+                    BOOST_REVERSE_FOREACH(const uint256& hash, vHashes) {\n+                        pnode->PushBlockHash(hash);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+};\n+std::map<CConnman*, std::unique_ptr<PeerLogicValidation> > mapPeerLogics;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8865#discussion_r81652347",
      "id" : 81652347,
      "original_commit_id" : "e8c5e11b6114ada4554ffb8a787c55ea73426331",
      "original_position" : 88,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : 2617286,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8865",
      "updated_at" : "2016-10-03T22:20:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81652347",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]
