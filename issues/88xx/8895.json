{
   "assignee" : null,
   "assignees" : [],
   "body" : "# Summary\r\nThis PR replaces the boost::unordered_set in sigcache with CuckooCache::cache.\r\n\r\n# Benefits\r\n\r\n- Better memory utilization (no pointers/linked lists/stored hashes)\r\n- Lock Free concurrent reads and erases\r\n- Lazy Deletion of entries (potentially beneficial in case of re-orgs)\r\n- Low cache thrashing -- a standard lookup and erase should only require ~3 cache lines (Hash A, Hash B, and erase flag)\r\n- Allocation free design\r\n\r\n# Design\r\n\r\nThe CuckooCache uses a design similar to a [Cuckoo Hash Table](https://en.wikipedia.org/wiki/Cuckoo_hashing). Each key inserted has a hash function 0 and a hash function 1 (h0, h1).\r\n\r\n- Lookup(k) is a matter of examining location h0(k) and h1(k).\r\n- Insert(k) first sees if h0(k) or h1(k) is empty, and insets to one if so. If not, insert swaps k with the key at h0(k) and attempts to insert the swapped out key at it's other location, repeating (up to a limit) if necessary. edit: *At that limit, the last entry is dropped*\r\n- Delete(k) first does a Lookup(k), then marks the corresponding bit in an std::atomic<uint8_t> as set as a relaxed atomic operation.\r\n\r\nMore information about the synchronization specification is in the code documentation.\r\n\r\n# Simulation\r\n\r\nThis can overall be seen as a 40% improvement on validation times over master on a 16 core machine simulated over a month. The simulation methodology sends relayed transactions and blocks to the node in the order they were received historically. On 4 and 1 core simulations, the improvement is not significant (but no worse). Our tests didn't really hit hard saturation on the cache, which suggests that the megabytes allocated to the cache could be reduced.\r\n\r\n# Testing\r\n\r\nThe PR includes a test suite which checks a few key properties:\r\n\r\n1. Check that values not inserted are never readable\r\n1. Check that a reasonable hit rate is achieved\r\n1. Check that erased elements are inserted on reasonably well rather than replacing fresh contents\r\n1. Test that (3) holds when erases are in parallel.\r\n\r\n# Future Work\r\n\r\nThere are future optimizations which may be able to bring some of the advantages seen with 16 cores to 4 and 1 cores, but this PR is focused on a minimal complexity patch with a demonstrable improvement over main as a base for future work in this direction.\r\n\r\nThere are also a few cleanup related items (such as cache initialization) which are not done in this patch to make it a minimal code change. These can be fixed in a later PR if this is accepted.\r\n\r\n# Acknowledgements\r\n\r\nThanks to @morcos, @sdaftuar, and @TheBlueMatt for their assistance and review on this patch.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8895/comments",
   "created_at" : "2016-10-05T21:51:18Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8895/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/8895",
   "id" : 181275275,
   "labels" : [
      {
         "color" : "981023",
         "name" : "Resource usage",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage"
      },
      {
         "color" : "6060aa",
         "name" : "Validation",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8895/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 8895,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/8895.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8895",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/8895.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8895"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Better SigCache Implementation",
   "updated_at" : "2016-10-09T10:40:35Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8895",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
      "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
      "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/JeremyRubin",
      "id" : 886523,
      "login" : "JeremyRubin",
      "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
      "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
      "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/JeremyRubin"
   }
}
