{
   "assignee" : null,
   "assignees" : [],
   "body" : "Bonus: This also permits Params() to return a const reference.\n\n2 global variables are currently enough for basechainparams and CChainParams, but we're\nusing 2 \\* N globals instead. Although N is likely to remain 3 for the\nforeseeable future (and not many people seemed interested in turning N\ninto infinite in #6382) I believe segwit was an example on how starting a new testchain can be very useful and anything that makes that easier is potentially valuable.\n\nTraceability: Replaces #6907. \nChanges from final non-merged #6907:\n- [X] Of course, there were new uses of CChainParams& Params(std::string)\n- [X] post-segwit: UpdateRegtestBIP9Parameters is replaced with\n  UpdateBIP9Parameters since we don't have a separate global for\n  regtest anymore. An additional assert/error could be added if we\n  wanted to restrict its usage beyond regtest, bit I don't think the\n  restriction makes sense. Remember that Params() now returns a const ref and init.cpp was the only context was the only context where UpdateRegtestBIP9Parameters was called from.\n- [X] post-C++11: s/boost::scoped_ptr/std::unique_ptr/ as in #8629\n- [X] Return a std::unique_ptr<CChainParams> directly instead of a CChainParams*\n- [X] testChainParams could be confused as meaning params from testnet (changed to chainParams)\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 3,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8855/comments",
   "created_at" : "2016-10-01T02:03:06Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8855/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/8855",
   "id" : 180432180,
   "labels" : [
      {
         "color" : "E6F6D6",
         "default" : false,
         "id" : 135961,
         "name" : "Refactoring",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8855/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "number" : 8855,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/8855.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8855",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/8855.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8855"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Use a proper factory for creating chainparams",
   "updated_at" : "2016-11-03T21:58:52Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8855",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
      "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jtimon/followers",
      "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jtimon",
      "id" : 1008458,
      "login" : "jtimon",
      "organizations_url" : "https://api.github.com/users/jtimon/orgs",
      "received_events_url" : "https://api.github.com/users/jtimon/received_events",
      "repos_url" : "https://api.github.com/users/jtimon/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jtimon"
   }
}
