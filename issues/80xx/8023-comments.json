[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/8023#discussion_r62432475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/62432475"
         }
      },
      "body" : "nit: I don't see this being shared anywhere. Is there any reason it isn't a `unique_ptr`?\r\n\r\n[[ If it is a `unique_ptr`, the instances of `noexcept(true)` above need to be replaced with the equivalent plain `noexcept` to compile in clang3.7 due to a compiler bug - looks related to clang/23383. ]]",
      "commit_id" : "33dd6c85b92e1d09048329c31e70141fb0eef42c",
      "created_at" : "2016-05-08T14:11:08Z",
      "diff_hunk" : "@@ -0,0 +1,63 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERRUPTIBLE_THREAD_H\n+#define BITCOIN_INTERRUPTIBLE_THREAD_H\n+\n+#include \"interruptible/this_thread.h\"\n+\n+#include <thread>\n+#include <memory>\n+\n+namespace interruptible\n+{\n+namespace detail\n+{\n+class thread_data;\n+}\n+\n+class thread\n+{\n+public:\n+    typedef std::thread thread_type;\n+    typedef thread_type::native_handle_type native_handle_type;\n+    typedef thread_type::id id;\n+\n+    thread() noexcept = default;\n+\n+    template <typename T, typename... Args>\n+    explicit thread(T&& func, Args&&... args)\n+    {\n+        start_thread(std::bind(std::forward<T>(func), std::forward<Args>(args)...));\n+    }\n+\n+    thread(const thread&) = delete;\n+    thread(thread&& t) noexcept(true) = default;\n+\n+    thread& operator=(const thread&) = delete;\n+    thread& operator=(thread&& t) noexcept(true) = default;\n+\n+    void join();\n+    void swap(thread& rhs) noexcept;\n+    bool joinable() const noexcept;\n+    void detach();\n+    id get_id() const noexcept;\n+    native_handle_type native_handle();\n+    static unsigned hardware_concurrency() noexcept;\n+\n+    // interruptible additions\n+    void interrupt();\n+    bool interruption_requested() const;\n+\n+private:\n+    std::shared_ptr<detail::thread_data> m_data;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/8023#discussion_r62432475",
      "id" : 62432475,
      "original_commit_id" : "33dd6c85b92e1d09048329c31e70141fb0eef42c",
      "original_position" : 54,
      "path" : "src/interruptible/thread.h",
      "position" : 54,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/8023",
      "updated_at" : "2016-05-08T14:11:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/62432475",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1047859?v=3",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   }
]
