[
   {
      "author_association" : "MEMBER",
      "body" : "cc @vasild :)",
      "created_at" : "2020-06-10T15:41:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#issuecomment-642092803",
      "id" : 642092803,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjA5MjgwMw==",
      "updated_at" : "2020-06-10T15:41:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642092803",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19031 (Implement ADDRv2 support (part of BIP155) by vasild)\n* #18722 (addrman: improve performance by using more suitable containers by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-06-10T16:50:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#issuecomment-642132912",
      "id" : 642132912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjEzMjkxMg==",
      "updated_at" : "2020-06-10T16:50:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642132912",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I think the reason that `LOCKS_EXCLUDED` isn't widely used in the code base is that it doesn't propagate up the call stack, so has a rather limited use case. Though, the new syntax claims to do that.",
      "created_at" : "2020-06-10T16:51:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#issuecomment-642133165",
      "id" : 642133165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjEzMzE2NQ==",
      "updated_at" : "2020-06-10T16:51:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642133165",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "oh wait you are not adding the annotations. Any reason for that?",
      "created_at" : "2020-06-10T16:53:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#issuecomment-642134036",
      "id" : 642134036,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjEzNDAzNg==",
      "updated_at" : "2020-06-10T16:53:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642134036",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n> oh wait you are not adding the annotations. Any reason for that?\r\n\r\nAdded :)",
      "created_at" : "2020-06-10T17:01:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#issuecomment-642138551",
      "id" : 642138551,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjEzODU1MQ==",
      "updated_at" : "2020-06-10T17:01:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642138551",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke probably a1071f8b9ae12bbb6f0fddae40655b3860c785f0 deserves its own PR as it blocks the similar changes in other parts of the code, right?",
      "created_at" : "2020-06-10T17:04:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#issuecomment-642139964",
      "id" : 642139964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjEzOTk2NA==",
      "updated_at" : "2020-06-10T17:04:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642139964",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r438717497"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438717497"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It would be nice to implement that TODO comment because it would make it possible to avoid any mutex requirements from `size()`.\r\n\r\nI did so in https://github.com/vasild/bitcoin/commit/f25d8a7c6de0e45b037f91138e1b4a72e7a1653f. If you like it you can replace the commit `refactor: Prevent double lock in CAddrMan::size()` with that one. In this branch https://github.com/vasild/bitcoin/tree/200610-addrman-mx that is done and also the subsequent commits are adjusted.\r\n\r\nOr, if you don't like the caching, then maybe just delete the TODO comment.",
      "commit_id" : "9cd0ed858c96b1052580e2044069c5cb9434628e",
      "created_at" : "2020-06-11T11:27:31Z",
      "diff_hunk" : "@@ -534,137 +553,133 @@ friend class CAddrManTest;\n     }\n \n     //! Return the number of (unique) addresses in all tables.\n-    size_t size() const\n+    size_t size() const EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs); // TODO: Cache this in an atomic to avoid this overhead\n-        return vRandom.size();\n+        LOCK(m_addrman_mutex); // TODO: Cache this in an atomic to avoid this overhead\n+        return sizeNonLockerHelper();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r438717497",
      "id" : 438717497,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxNzQ5Nw==",
      "original_commit_id" : "d9572933f1fb0201b259d9cb7b40873bdbad7b6f",
      "original_line" : 566,
      "original_position" : 234,
      "original_start_line" : 539,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 428821020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2020-06-17T11:21:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438717497",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r438722555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438722555"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here and in `StdMutex` - I find this very confusing because it would end up with `m` being the same as `!m`. It is a huge hack imposed by clang. I would suggest to add some comment to explain what is that. Something like `Required by the clang thread safety instrumentation so that we can declare that a mutex should not be held when a function is called - EXCLUSIVE_LOCKS_REQUIRED(!m) (aka \"negative capabilities\")`.\r\n\r\nThe example in https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#mutex-h also has some comment.\r\n\r\nPS I wonder what would `EXCLUSIVE_LOCKS_REQUIRED(!!m)` do. :eyes:",
      "commit_id" : "9cd0ed858c96b1052580e2044069c5cb9434628e",
      "created_at" : "2020-06-11T11:39:37Z",
      "diff_hunk" : "@@ -103,6 +103,9 @@ class LOCKABLE AnnotatedMixin : public PARENT\n     }\n \n     using UniqueLock = std::unique_lock<PARENT>;\n+#ifdef __clang__\n+    const AnnotatedMixin& operator!() const { return *this; }\n+#endif // __clang__",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r438722555",
      "id" : 438722555,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyMjU1NQ==",
      "original_commit_id" : "d9572933f1fb0201b259d9cb7b40873bdbad7b6f",
      "original_line" : 111,
      "original_position" : 6,
      "original_start_line" : 106,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 428821020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-17T11:21:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438722555",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r438796565"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438796565"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The commit you [suggested](https://github.com/vasild/bitcoin/commit/f25d8a7c6de0e45b037f91138e1b4a72e7a1653f) does change `CAddrMan::size()` behavior. So I'd prefer to keep this PR as clean refactoring with no behavior changes.",
      "commit_id" : "9cd0ed858c96b1052580e2044069c5cb9434628e",
      "created_at" : "2020-06-11T13:46:34Z",
      "diff_hunk" : "@@ -534,137 +553,133 @@ friend class CAddrManTest;\n     }\n \n     //! Return the number of (unique) addresses in all tables.\n-    size_t size() const\n+    size_t size() const EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs); // TODO: Cache this in an atomic to avoid this overhead\n-        return vRandom.size();\n+        LOCK(m_addrman_mutex); // TODO: Cache this in an atomic to avoid this overhead\n+        return sizeNonLockerHelper();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r438796565",
      "id" : 438796565,
      "in_reply_to_id" : 438717497,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5NjU2NQ==",
      "original_commit_id" : "d9572933f1fb0201b259d9cb7b40873bdbad7b6f",
      "original_line" : 566,
      "original_position" : 234,
      "original_start_line" : 539,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 428929366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2020-06-17T11:21:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438796565",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated d9572933f1fb0201b259d9cb7b40873bdbad7b6f -> b6712ece8ada3b1c9230f1264da81cbf11fe4595 ([pr19238.02](https://github.com/hebasto/bitcoin/commits/pr19238.02) -> [pr19238.04](https://github.com/hebasto/bitcoin/commits/pr19238.04)):\r\n\r\n- the commit \"Add means to handle negative capabilities in thread safety annotations\" has been separated into #19249, and this PR has been rebased on the latter one\r\n- negative mutex requirements added to each commit opportunistically",
      "created_at" : "2020-06-11T14:20:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#issuecomment-642690312",
      "id" : 642690312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjY5MDMxMg==",
      "updated_at" : "2020-06-11T14:20:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642690312",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r438823196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438823196"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in #19249.",
      "commit_id" : "9cd0ed858c96b1052580e2044069c5cb9434628e",
      "created_at" : "2020-06-11T14:21:17Z",
      "diff_hunk" : "@@ -103,6 +103,9 @@ class LOCKABLE AnnotatedMixin : public PARENT\n     }\n \n     using UniqueLock = std::unique_lock<PARENT>;\n+#ifdef __clang__\n+    const AnnotatedMixin& operator!() const { return *this; }\n+#endif // __clang__",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r438823196",
      "id" : 438823196,
      "in_reply_to_id" : 438722555,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyMzE5Ng==",
      "original_commit_id" : "d9572933f1fb0201b259d9cb7b40873bdbad7b6f",
      "original_line" : 111,
      "original_position" : 6,
      "original_start_line" : 106,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 428961910,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-17T11:21:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438823196",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r438843755"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438843755"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ok",
      "commit_id" : "9cd0ed858c96b1052580e2044069c5cb9434628e",
      "created_at" : "2020-06-11T14:50:31Z",
      "diff_hunk" : "@@ -534,137 +553,133 @@ friend class CAddrManTest;\n     }\n \n     //! Return the number of (unique) addresses in all tables.\n-    size_t size() const\n+    size_t size() const EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs); // TODO: Cache this in an atomic to avoid this overhead\n-        return vRandom.size();\n+        LOCK(m_addrman_mutex); // TODO: Cache this in an atomic to avoid this overhead\n+        return sizeNonLockerHelper();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r438843755",
      "id" : 438843755,
      "in_reply_to_id" : 438717497,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0Mzc1NQ==",
      "original_commit_id" : "d9572933f1fb0201b259d9cb7b40873bdbad7b6f",
      "original_line" : 566,
      "original_position" : 234,
      "original_start_line" : 539,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 428989548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2020-06-17T11:21:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438843755",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated b6712ece8ada3b1c9230f1264da81cbf11fe4595 -> 9cd0ed858c96b1052580e2044069c5cb9434628e ([pr19238.04](https://github.com/hebasto/bitcoin/commits/pr19238.04) -> [pr19238.05](https://github.com/hebasto/bitcoin/commits/pr19238.05)):\r\n\r\n- rebased due to the merging of #19249\r\n- all of the related code branches are covered by appropriate lock assertions to insure that the locking policy has not been changed by accident",
      "created_at" : "2020-06-17T11:29:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#issuecomment-645317642",
      "id" : 645317642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTMxNzY0Mg==",
      "updated_at" : "2020-06-17T11:29:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645317642",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The OP has been updated.",
      "created_at" : "2020-06-17T11:33:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#issuecomment-645319647",
      "id" : 645319647,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTMxOTY0Nw==",
      "updated_at" : "2020-06-17T11:33:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645319647",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r441763265"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441763265"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The pattern `AssertLockNotHeld(m); LOCK(m);` seems too verbose. Following that, should we add `AssertLockNotHeld()` before every `LOCK()` in the source code?\r\n\r\nWhat about adding `AssertLockNotHeld()` inside `LOCK()`?\r\n\r\nWhat happens if we try to lock a mutex which we already own?\r\nhttps://en.cppreference.com/w/cpp/thread/mutex/lock says:\r\n> If lock is called by a thread that already owns the mutex, the behavior is undefined\r\n\r\nThe following test case\r\n\r\n```cpp\r\nvoid f(Mutex& m)\r\n{\r\n    LOCK(m);\r\n}\r\n\r\nBOOST_AUTO_TEST_CASE(double_lock)\r\n{\r\n    Mutex m;\r\n    LOCK(m);\r\n    f(m);\r\n}\r\n```\r\n\r\nthrows an exception `std::__1::system_error: mutex lock failed: Resource deadlock avoided` by the OS itself (from inside `std::mutex::lock()`). So, we don't have a protection in our code and we need one because want to avoid the undefined behavior (can't rely on the OS to always throw an exception).\r\n\r\nThe following succeeds (why not also exception?):\r\n\r\n```\r\nvoid f(std::mutex& m) {\r\n    std::unique_lock<std::mutex> lock(m);\r\n}\r\n\r\nint main(int, char**) {\r\n    std::mutex m;\r\n    std::unique_lock<std::mutex> lock(m);\r\n    f(m);\r\n    return 0;\r\n}\r\n```",
      "commit_id" : "9cd0ed858c96b1052580e2044069c5cb9434628e",
      "created_at" : "2020-06-17T18:55:00Z",
      "diff_hunk" : "@@ -534,137 +559,145 @@ friend class CAddrManTest;\n     }\n \n     //! Return the number of (unique) addresses in all tables.\n-    size_t size() const\n+    size_t size() const EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs); // TODO: Cache this in an atomic to avoid this overhead\n-        return vRandom.size();\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);\n+        return sizeNonLockerHelper();\n     }\n \n     //! Consistency check\n-    void Check()\n+    void Check() EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n+        AssertLockNotHeld(m_addrman_mutex);\n #ifdef DEBUG_ADDRMAN\n-        {\n-            LOCK(cs);\n-            int err;\n-            if ((err=Check_()))\n-                LogPrintf(\"ADDRMAN CONSISTENCY CHECK FAILED!!! err=%i\\n\", err);\n-        }\n-#endif\n+        LOCK(m_addrman_mutex);\n+        CheckNonLockHelper();\n+#endif // DEBUG_ADDRMAN\n     }\n \n     //! Add a single address.\n-    bool Add(const CAddress &addr, const CNetAddr& source, int64_t nTimePenalty = 0)\n+    bool Add(const CAddress &addr, const CNetAddr& source, int64_t nTimePenalty = 0) EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs);\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);\n         bool fRet = false;\n-        Check();\n+        CheckNonLockHelper();\n         fRet |= Add_(addr, source, nTimePenalty);\n-        Check();\n+        CheckNonLockHelper();\n         if (fRet) {\n             LogPrint(BCLog::ADDRMAN, \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort(), source.ToString(), nTried, nNew);\n         }\n         return fRet;\n     }\n \n     //! Add multiple addresses.\n-    bool Add(const std::vector<CAddress> &vAddr, const CNetAddr& source, int64_t nTimePenalty = 0)\n+    bool Add(const std::vector<CAddress> &vAddr, const CNetAddr& source, int64_t nTimePenalty = 0) EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs);\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);\n         int nAdd = 0;\n-        Check();\n+        CheckNonLockHelper();\n         for (std::vector<CAddress>::const_iterator it = vAddr.begin(); it != vAddr.end(); it++)\n             nAdd += Add_(*it, source, nTimePenalty) ? 1 : 0;\n-        Check();\n+        CheckNonLockHelper();\n         if (nAdd) {\n             LogPrint(BCLog::ADDRMAN, \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString(), nTried, nNew);\n         }\n         return nAdd > 0;\n     }\n \n     //! Mark an entry as accessible.\n-    void Good(const CService &addr, bool test_before_evict = true, int64_t nTime = GetAdjustedTime())\n+    void Good(const CService &addr, bool test_before_evict = true, int64_t nTime = GetAdjustedTime()) EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs);\n-        Check();\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);\n+        CheckNonLockHelper();\n         Good_(addr, test_before_evict, nTime);\n-        Check();\n+        CheckNonLockHelper();\n     }\n \n     //! Mark an entry as connection attempted to.\n-    void Attempt(const CService &addr, bool fCountFailure, int64_t nTime = GetAdjustedTime())\n+    void Attempt(const CService &addr, bool fCountFailure, int64_t nTime = GetAdjustedTime()) EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs);\n-        Check();\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);\n+        CheckNonLockHelper();\n         Attempt_(addr, fCountFailure, nTime);\n-        Check();\n+        CheckNonLockHelper();\n     }\n \n     //! See if any to-be-evicted tried table entries have been tested and if so resolve the collisions.\n-    void ResolveCollisions()\n+    void ResolveCollisions() EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs);\n-        Check();\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r441763265",
      "id" : 441763265,
      "line" : 634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc2MzI2NQ==",
      "original_commit_id" : "9cd0ed858c96b1052580e2044069c5cb9434628e",
      "original_line" : 634,
      "original_position" : 336,
      "original_start_line" : 633,
      "path" : "src/addrman.h",
      "position" : 336,
      "pull_request_review_id" : 432686696,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238",
      "side" : "RIGHT",
      "start_line" : 633,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-17T19:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441763265",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r441793261"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441793261"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Following that, should we add `AssertLockNotHeld()` before every `LOCK()` in the source code?\r\n\r\nOnly for `Mutex` instances, not for `RecursiveMutex` ones.\r\n\r\n> What about adding `AssertLockNotHeld()` inside `LOCK()`?\r\n\r\nNot now because the `RecursiveMutex` instance could be an argument of `LOCK()`.",
      "commit_id" : "9cd0ed858c96b1052580e2044069c5cb9434628e",
      "created_at" : "2020-06-17T19:48:16Z",
      "diff_hunk" : "@@ -534,137 +559,145 @@ friend class CAddrManTest;\n     }\n \n     //! Return the number of (unique) addresses in all tables.\n-    size_t size() const\n+    size_t size() const EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs); // TODO: Cache this in an atomic to avoid this overhead\n-        return vRandom.size();\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);\n+        return sizeNonLockerHelper();\n     }\n \n     //! Consistency check\n-    void Check()\n+    void Check() EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n+        AssertLockNotHeld(m_addrman_mutex);\n #ifdef DEBUG_ADDRMAN\n-        {\n-            LOCK(cs);\n-            int err;\n-            if ((err=Check_()))\n-                LogPrintf(\"ADDRMAN CONSISTENCY CHECK FAILED!!! err=%i\\n\", err);\n-        }\n-#endif\n+        LOCK(m_addrman_mutex);\n+        CheckNonLockHelper();\n+#endif // DEBUG_ADDRMAN\n     }\n \n     //! Add a single address.\n-    bool Add(const CAddress &addr, const CNetAddr& source, int64_t nTimePenalty = 0)\n+    bool Add(const CAddress &addr, const CNetAddr& source, int64_t nTimePenalty = 0) EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs);\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);\n         bool fRet = false;\n-        Check();\n+        CheckNonLockHelper();\n         fRet |= Add_(addr, source, nTimePenalty);\n-        Check();\n+        CheckNonLockHelper();\n         if (fRet) {\n             LogPrint(BCLog::ADDRMAN, \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort(), source.ToString(), nTried, nNew);\n         }\n         return fRet;\n     }\n \n     //! Add multiple addresses.\n-    bool Add(const std::vector<CAddress> &vAddr, const CNetAddr& source, int64_t nTimePenalty = 0)\n+    bool Add(const std::vector<CAddress> &vAddr, const CNetAddr& source, int64_t nTimePenalty = 0) EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs);\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);\n         int nAdd = 0;\n-        Check();\n+        CheckNonLockHelper();\n         for (std::vector<CAddress>::const_iterator it = vAddr.begin(); it != vAddr.end(); it++)\n             nAdd += Add_(*it, source, nTimePenalty) ? 1 : 0;\n-        Check();\n+        CheckNonLockHelper();\n         if (nAdd) {\n             LogPrint(BCLog::ADDRMAN, \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString(), nTried, nNew);\n         }\n         return nAdd > 0;\n     }\n \n     //! Mark an entry as accessible.\n-    void Good(const CService &addr, bool test_before_evict = true, int64_t nTime = GetAdjustedTime())\n+    void Good(const CService &addr, bool test_before_evict = true, int64_t nTime = GetAdjustedTime()) EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs);\n-        Check();\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);\n+        CheckNonLockHelper();\n         Good_(addr, test_before_evict, nTime);\n-        Check();\n+        CheckNonLockHelper();\n     }\n \n     //! Mark an entry as connection attempted to.\n-    void Attempt(const CService &addr, bool fCountFailure, int64_t nTime = GetAdjustedTime())\n+    void Attempt(const CService &addr, bool fCountFailure, int64_t nTime = GetAdjustedTime()) EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs);\n-        Check();\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);\n+        CheckNonLockHelper();\n         Attempt_(addr, fCountFailure, nTime);\n-        Check();\n+        CheckNonLockHelper();\n     }\n \n     //! See if any to-be-evicted tried table entries have been tested and if so resolve the collisions.\n-    void ResolveCollisions()\n+    void ResolveCollisions() EXCLUSIVE_LOCKS_REQUIRED(!m_addrman_mutex)\n     {\n-        LOCK(cs);\n-        Check();\n+        AssertLockNotHeld(m_addrman_mutex);\n+        LOCK(m_addrman_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19238#discussion_r441793261",
      "id" : 441793261,
      "in_reply_to_id" : 441763265,
      "line" : 634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc5MzI2MQ==",
      "original_commit_id" : "9cd0ed858c96b1052580e2044069c5cb9434628e",
      "original_line" : 634,
      "original_position" : 336,
      "original_start_line" : 633,
      "path" : "src/addrman.h",
      "position" : 336,
      "pull_request_review_id" : 432722652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19238",
      "side" : "RIGHT",
      "start_line" : 633,
      "start_side" : "RIGHT",
      "updated_at" : "2020-06-17T19:48:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441793261",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
