[
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for addressing this @elichai! :)\r\n\r\nConcept ACK\r\n\r\nRegarding the implementation: if `ReadCompactSize(s)` returns zero won't `vch[0]` be read uninitialized in `size()` \r\n(`unsigned int size() const { return GetLen(vch[0]); }`) before the call to `Invalidate()` takes place?\r\n\r\nAlso, what about adding a test case for the fixed issue that would fail under MemorySanitizer or Valgrind? Something exercising these code paths (plus assertions):\r\n\r\n```c++\r\nconst std::vector<uint8_t> serialized_pub_key{4, 4, 0, 0, 0};\r\nCDataStream data_stream{serialized_pub_key, SER_NETWORK, INIT_PROTO_VERSION};\r\nCPubKey pub_key;\r\ndata_stream >> pub_key;\r\n(void)pub_key.IsFullyValid();\r\n```\r\n\r\nAnd perhaps also a test case where `ReadCompactSize(s)` returns zero to cover that case too :)",
      "created_at" : "2020-06-10T15:37:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19237#issuecomment-642090154",
      "id" : 642090154,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19237",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjA5MDE1NA==",
      "updated_at" : "2020-06-10T15:39:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642090154",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Regarding the implementation: if `ReadCompactSize(s)` returns zero won't `vch[0]` be read uninitialized in `size()`\r\n\r\nI thought so at first, but no the constructor invalidates it (which writes 0xFF into `vch[0]`)\r\nhttps://github.com/bitcoin/bitcoin/blob/6762a627ecb89ba8d4ed81a049a5d802e6dd75c2/src/pubkey.h#L79-L82\r\n\r\n> ```c++\r\n> const std::vector<uint8_t> serialized_pub_key{4, 4, 0, 0, 0};\r\n> CDataStream data_stream{serialized_pub_key, SER_NETWORK, INIT_PROTO_VERSION};\r\n> CPubKey pub_key;\r\n> data_stream >> pub_key;\r\n> (void)pub_key.IsFullyValid();\r\n> ```\r\n\r\nI'll add a few tests.",
      "created_at" : "2020-06-10T15:40:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19237#issuecomment-642092155",
      "id" : 642092155,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19237",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjA5MjE1NQ==",
      "updated_at" : "2020-06-10T15:44:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642092155",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   }
]
