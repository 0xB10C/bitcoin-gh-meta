[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Big thanks to @JeremyRubin for [giving me this idea](https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-638553680).",
      "created_at" : "2020-06-14T01:40:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643705576",
      "id" : 643705576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzcwNTU3Ng==",
      "updated_at" : "2020-06-14T01:40:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643705576",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK and lite CR-ACK, the approach seems to make sense.\r\n\r\nVery nice work! Did this help with the variance from before?\r\n\r\nI don't want to go overkill but I wonder if there's a nicer way to communicate the start warming/stop warming instructions (e.g. not just tweaking flags so there's some sort of interface). I also wonder if it makes sense to just always completely finish warming the cache or not? Aborting warming early still means the work has to happen in serial (at some point) with the main thread. Is there ever a circumstance where the warmer gets the cache full that it evicts its own warmed entries? Can we detect this and just stop then?\r\n\r\n",
      "created_at" : "2020-06-14T02:20:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643708078",
      "id" : 643708078,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzcwODA3OA==",
      "updated_at" : "2020-06-14T02:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643708078",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18731 (refactor: Make CCheckQueue RAII-styled by hebasto)\n* #17601 (Validation: Move CheckBlock() mutation guard to AcceptBlock() by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-06-14T04:15:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643716037",
      "id" : 643716037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzcxNjAzNw==",
      "updated_at" : "2020-06-14T04:15:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643716037",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\nI think speeding up connecting blocks is always a good idea.\r\n\r\nI see you introducing a new thread. That might be an issue. Last time I tried that it didn't work out well: see discussion [here](https://github.com/bitcoin/bitcoin/pull/18421) and an issue I created [here](https://github.com/bitcoin/bitcoin/issues/18488).\r\nMaybe you want to express your opinion there or during the IRC meeting, as it's likely that you'll face the same issue with this PR",
      "created_at" : "2020-06-14T08:23:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643735060",
      "id" : 643735060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzczNTA2MA==",
      "updated_at" : "2020-06-14T08:23:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643735060",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19271#discussion_r439827394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19271"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439827394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    const CCoinsViewCache& cache = *WITH_LOCK(cs_main, return &CoinsTip());\r\n```",
      "commit_id" : "548e17302b907cc255b1b3413dcd9e9058ec6729",
      "created_at" : "2020-06-14T12:56:02Z",
      "diff_hunk" : "@@ -3847,6 +3850,82 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n     return true;\n }\n \n+void CChainState::ThreadWarmCoinsCache()\n+{\n+    util::ThreadRename(\"warmcoins\");\n+    ScheduleBatchPriority();\n+\n+    CCoinsViewCache* cache;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#discussion_r439827394",
      "id" : 439827394,
      "line" : 3858,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgyNzM5NA==",
      "original_commit_id" : "548e17302b907cc255b1b3413dcd9e9058ec6729",
      "original_line" : 3858,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 72,
      "pull_request_review_id" : 430217098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19271",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-14T14:03:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439827394",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">Did this help with the variance from before?\r\n\r\n@JeremyRubin my personal benchmarking bandwidth is rather limited. I'm trying to get another machine set up to do more extensive benchmarking on this. My numbers were done on a 12 virtual core CPU with internal SSD. I think this might have a wide variance of performance increase depending on CPU and disk types. However, the results I had were very promising so I submitted this for concept approval. I will come back with some more numbers soon(ish).\r\n\r\n>I don't want to go overkill but I wonder if there's a nicer way to communicate the start warming/stop warming instructions (e.g. not just tweaking flags so there's some sort of interface).\r\n\r\nI thought I had done a pretty good job of this by wrapping it in `WarmBlock`/`CancelWarmingBlock` methods. I'll think some more on this. I'm open to suggestions.\r\n\r\n>I also wonder if it makes sense to just always completely finish warming the cache or not? Aborting warming early still means the work has to happen in serial (at some point) with the main thread.\r\n\r\nMy benchmarks showed this to have consistently negative performance. I also tried locking/unlocking inside `ConnectBlock` only where the coins were actually accessed, but it was also less performant and would have also made this diff a lot more complex.\r\n\r\n>Is there ever a circumstance where the warmer gets the cache full that it evicts its own warmed entries? Can we detect this and just stop then?\r\n\r\nI don't think this can occur. The cache is flushed only after `ConnectBlock` in `ConnectTip`, so the effect will be the same when warming coins in `ConnectBlock` or right before.",
      "created_at" : "2020-06-14T13:43:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643768536",
      "id" : 643768536,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Mzc2ODUzNg==",
      "updated_at" : "2020-06-14T13:43:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643768536",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@naumenkogs I don't think your issue applies here. The work this thread needs to do is on the order of milliseconds, but it also needs to be immediately available for there to be any benefit. If it had to wait some milliseconds for scheduling it would be useless.",
      "created_at" : "2020-06-14T13:46:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643768821",
      "id" : 643768821,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Mzc2ODgyMQ==",
      "updated_at" : "2020-06-14T13:46:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643768821",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19271#discussion_r439849665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19271"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439849665"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Are we always guaranteed to have checked the pow by this point? I *think* so, because of AcceptBlockHeader?\r\n\r\nWorth documenting that this is expected or putting the WarmBlock call inside CheckBlock after the PoW check.",
      "commit_id" : "548e17302b907cc255b1b3413dcd9e9058ec6729",
      "created_at" : "2020-06-14T17:11:00Z",
      "diff_hunk" : "@@ -3860,6 +3939,9 @@ bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const s\n         // Therefore, the following critical section must include the CheckBlock() call as well.\n         LOCK(cs_main);\n \n+        // Before doing any checks, begin warming the cache to process this block\n+        ::ChainstateActive().WarmBlock(pblock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#discussion_r439849665",
      "id" : 439849665,
      "line" : 3943,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0OTY2NQ==",
      "original_commit_id" : "548e17302b907cc255b1b3413dcd9e9058ec6729",
      "original_line" : 3943,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 151,
      "pull_request_review_id" : 430236123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19271",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-14T17:15:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439849665",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-06-14T23:40:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643838365",
      "id" : 643838365,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzgzODM2NQ==",
      "updated_at" : "2020-06-14T23:40:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643838365",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   }
]
