{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "Found by @practicalswift, closes #19235\r\nCurrently all the public API(except the pointer-like API) in CPubKey that sets/constructs a pubkey goes through `CPubKey::Set` which checks if that the length and size match and if not invalidates the key.\r\n\r\nThis adds the same check to `CPubKey::Unserialize`, sadly I don't see an easy way to just push this to the existing checks in `CPubKey::Set` but it's only a simple condition.\r\n\r\nThe problem with not invalidating is that if you write a pubkey like: `{0x02,0x00}` it will think the actual length is 33(because of `size()`) and will access uninitialized memory if you call any of the functions on CPubKey.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19237/comments",
   "created_at" : "2020-06-10T14:39:53Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19237/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/19237",
   "id" : 636304668,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19237/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDMyNTAzMTM2",
   "number" : 19237,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/19237.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19237",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/19237.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19237"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Check size after unserializing a pubkey",
   "updated_at" : "2020-06-10T15:44:53Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19237",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
      "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
      "followers_url" : "https://api.github.com/users/elichai/followers",
      "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/elichai",
      "id" : 2167860,
      "login" : "elichai",
      "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
      "organizations_url" : "https://api.github.com/users/elichai/orgs",
      "received_events_url" : "https://api.github.com/users/elichai/received_events",
      "repos_url" : "https://api.github.com/users/elichai/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/elichai"
   }
}
