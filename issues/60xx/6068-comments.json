[
   {
      "body" : "Sorry for this little change, but...\r\n\r\n@thuni was concerned about introducing globals in policy.h\r\nfIsBareMultisigStd can be easily turned into an attribute later as shown in https://github.com/jtimon/bitcoin/compare/policy_new...jtimon:policy_moveonly (in fact it could be done more easily not moving AreInputsStandard at the same time as IsStandardTx)\r\nBut minRelayTxFee is in many more places, and after proposing some changes to #5159, I am no longer convinced that I want to move things like IsDust to policy directly. One possibility would be to put all the fee policy stuff in the estimator. Then an interface of the estimator can be returned by CPolicy, for example, making a CPolicy::GetFeePolicy() analogous to CChainParams::GetConsensus().\r\nThe minimum fee can still be configured from the constructor of CStandardPolicy but it can pass it directly to the estimator without storing it redundantly.\r\nIn that case some files could be dependent on policy/fees but not in policy/policy (just like some functions depend on Consensus::Params but not on CChainParams), then some of the 5 includes I just removed would have to be changed for policy/fees later.\r\n\r\nFor all these reasons I'm keeping minRelayTxFee in main for now.\r\n\r\nMoving minRelayTxFee to policy/policy could still prevent it from depending on main temporarily when IsStandardTx is moveonly, but it doesn't seem to be worth it.\r\n",
      "created_at" : "2015-04-27T22:55:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-96843767",
      "id" : 96843767,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-04-27T22:55:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/96843767",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Nodes can do random things, but why encourage them to adopt diverse relay policies, create custom policies, and define custom parameters for others to create more custom relay policies?  \r\n\r\nShouldn't there just be baked-in policy parameters that have predictable effects when deployed with different values, like resource constraints and settings that influence the strength of preference for higher fees?\r\n\r\nI'm not concerned about miner policies, but something more like CokePolicy and PepsiPolicy disrupting the network with divergent relay rules.  What is the argument in favor?",
      "created_at" : "2015-05-01T15:50:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98163070",
      "id" : 98163070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-01T15:50:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98163070",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4284124?v=3",
         "events_url" : "https://api.github.com/users/dgenr8/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dgenr8/followers",
         "following_url" : "https://api.github.com/users/dgenr8/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dgenr8/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dgenr8",
         "id" : 4284124,
         "login" : "dgenr8",
         "organizations_url" : "https://api.github.com/users/dgenr8/orgs",
         "received_events_url" : "https://api.github.com/users/dgenr8/received_events",
         "repos_url" : "https://api.github.com/users/dgenr8/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dgenr8/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dgenr8"
      }
   },
   {
      "body" : "@dgenr8 Non-centralisation. Authority to decide policy lies with the node operators and miners, and it's not a responsibility/power developers should have. Too much policy monoculture also creates incentives to use bad practices (trusting unconfirmed transactions) and make trouble for the outliers. Also, since the current policy monoculture is mostly *reference* policy, it also causes spam problems since there are no effective reference-suitable spam filters; and this is in partly out of necessity due to policy being intimately mixed in with the reference codebase.",
      "created_at" : "2015-05-01T17:06:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98178713",
      "id" : 98178713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-01T17:06:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98178713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "I think there are different issues here.\r\n\r\nOne is that this is a step towards separating out policy code from consensus code. This PR is part of that. Eventually, we should end up with a situation where consensus is clearly separated in the source code (so we know when to be extremely careful in review and tests when someone wants to change it), and likewise have policy separated out (so people changing/forking the code know what can be safely changed).\r\n\r\nAnd yes, I think that the ability to change policy is essential, for the reasons that @luke-jr brings up. For one, relay (and other) policy is constantly changing anyway (pretty much every Bitcoin Core release has changed what is being relayed). You should not rely on it being uniform on the network.\r\n\r\nOf course, I think that we, as maintainers of a particular piece of Bitcoin network software, have a responsibility to make the code do what we think is best for the network - and possibly expose only part of the involved parameters to users. But that doesn't mean that others can't disagree. And separating out policy code makes it explicit exactly which part of the code is a choice.",
      "created_at" : "2015-05-01T18:06:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6068#issuecomment-98189841",
      "id" : 98189841,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6068",
      "updated_at" : "2015-05-01T18:06:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98189841",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
