[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23036](https://github.com/bitcoin/bitcoin/pull/23036) (test: use test_framework.p2p `P2P_SERVICES` constant in functional tests by jonatack)\n* [#22950](https://github.com/bitcoin/bitcoin/pull/22950) ([p2p] Pimpl AddrMan to abstract implementation details by amitiuttarwar)\n* [#22087](https://github.com/bitcoin/bitcoin/pull/22087) (Validate port numbers by amadeuszpawlik)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-09-19T15:22:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-922491047",
      "id" : 922491047,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5842_Bin",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-19T15:22:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922491047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, approach NACK. I don't think it makes sense to add this addrman-specific data into the `CAddress` class, which is used by many different components.\r\n\r\n> Two ways to expose them are (1) move them from CAddrInfo to CAddress or (2) use CAddrInfo instead of CAddress for the GetAddr_(), GetAddr() and GetAddresses() functions and callers.\r\n\r\nI don't think we want to do (2) either. In general, we're trying to encapsulate addrman more. `CAddrInfo` is an addrman implementation-specific class, so ideally it wouldn't be exposed at all in the header. That's done in #22950, which introduces a very clear compilation firewall between implementation and public interface.\r\n\r\nI think the best way to do this is update `CAddrMan::GetAddr()` to return a vector of tuples, `std::vector<std::tuple<CAddress, /* tried */ bool, /* refcount*/ int>>`, similar to how `Select()` is updated to return a `std::pair<>` in https://github.com/bitcoin/bitcoin/pull/22950/files#diff-164bd9e2e30f54d0a79eb7cc372309e2f2155edc6c3f051290ab078f03f6a771R89. That means that the public method is returning only what the caller needs, minimizing the coupling between implementation and client code.",
      "created_at" : "2021-09-19T15:56:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-922495928",
      "id" : 922495928,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5842_Cu4",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-19T15:56:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922495928",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @jnewbery. I agree the two approaches aren't ideal. Will have a look at your suggested approach.",
      "created_at" : "2021-09-19T16:01:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-922496560",
      "id" : 922496560,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5842_C4w",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-19T16:01:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922496560",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think the best way to do this is update `CAddrMan::GetAddr()` to return a vector of tuples, `std::vector<std::tuple<CAddress, /* tried */ bool, /* refcount*/ int>>`\r\n\r\nA vector of `std::pair` might be sufficient, because `nRefCount==0` means it's in Tried.",
      "created_at" : "2021-09-20T11:24:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-922841444",
      "id" : 922841444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843AXFk",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-20T11:24:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922841444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> A vector of `std::pair` might be sufficient, because `nRefCount==0` means it's in Tried.\r\n\r\nGood point, though I'm not sure we want to depend on that coupling.\r\n\r\n(Ideally I'll try to use a struct as it's nicer to work with.)",
      "created_at" : "2021-09-20T11:37:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-922849038",
      "id" : 922849038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843AY8O",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-20T11:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922849038",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
