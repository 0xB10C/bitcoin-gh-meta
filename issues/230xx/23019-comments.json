[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#19602](https://github.com/bitcoin/bitcoin/pull/19602) (wallet: Migrate legacy wallets to descriptor wallets by achow101)\n* [#14707](https://github.com/bitcoin/bitcoin/pull/14707) ([RPC] Include coinbase transactions in receivedby RPCs by andrewtoth)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-09-18T01:47:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23019#issuecomment-922158351",
      "id" : 922158351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23019",
      "node_id" : "IC_kwDOABII58429wUP",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-26T16:10:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922158351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23019#discussion_r712367521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23019"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712367521"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Addresses don't hold funds. They only receive, never send.\r\n\r\nInstead, it should just tally the total received ever.",
      "commit_id" : "fdc4031e857491750b3bbbe6fe7eb2eeb51c4a80",
      "created_at" : "2021-09-20T17:21:41Z",
      "diff_hunk" : "@@ -236,6 +236,128 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n     }\n }\n \n+static RPCHelpMan listaddresses()\n+{\n+    return RPCHelpMan{\"listaddresses\",\n+                \"\\nLists wallet addresses\\n\",\n+                {\n+                    {\"start_index\", RPCArg::Type::NUM, RPCArg::Default{0}, \"Address list starting index.\"},\n+                    {\"end_index\", RPCArg::Type::NUM, RPCArg::Default{10}, \"Address list ending index.\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",{\n+                    {\n+                        RPCResult::Type::ARR, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"\", {\n+                                {RPCResult::Type::NUM, \"index\", \"The address position\"},\n+                                {RPCResult::Type::STR, \"address\", \"The bitcoin address\"},\n+                                {RPCResult::Type::STR, \"hdkeypath\", \"The BIP 32 HD path of the address\"},\n+                                {RPCResult::Type::STR, \"descriptor\", \"The address descriptor\"},\n+                                {RPCResult::Type::BOOL, \"internal\", \"The address is internal (change) or external (receive)\"},\n+                                {RPCResult::Type::NUM, \"amount\", \"Available amount at address\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23019#discussion_r712367521",
      "id" : 712367521,
      "line" : 258,
      "node_id" : "PRRC_kwDOABII584qdd2h",
      "original_commit_id" : "fdc4031e857491750b3bbbe6fe7eb2eeb51c4a80",
      "original_line" : 258,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 23,
      "pull_request_review_id" : 758904743,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23019",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-20T17:22:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712367521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23019#discussion_r713488076"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23019"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713488076"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The code to count the total received is already available in the function. It can be done.\r\n\r\nBut address explorers in most software wallets, such as Electrum and Specter Desktop, only show the funds available to be spent at each address. I think the idea is to see how the UTXO values are distributed across the addresses (if there is any significant gap, for example).",
      "commit_id" : "fdc4031e857491750b3bbbe6fe7eb2eeb51c4a80",
      "created_at" : "2021-09-21T23:33:07Z",
      "diff_hunk" : "@@ -236,6 +236,128 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n     }\n }\n \n+static RPCHelpMan listaddresses()\n+{\n+    return RPCHelpMan{\"listaddresses\",\n+                \"\\nLists wallet addresses\\n\",\n+                {\n+                    {\"start_index\", RPCArg::Type::NUM, RPCArg::Default{0}, \"Address list starting index.\"},\n+                    {\"end_index\", RPCArg::Type::NUM, RPCArg::Default{10}, \"Address list ending index.\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",{\n+                    {\n+                        RPCResult::Type::ARR, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"\", {\n+                                {RPCResult::Type::NUM, \"index\", \"The address position\"},\n+                                {RPCResult::Type::STR, \"address\", \"The bitcoin address\"},\n+                                {RPCResult::Type::STR, \"hdkeypath\", \"The BIP 32 HD path of the address\"},\n+                                {RPCResult::Type::STR, \"descriptor\", \"The address descriptor\"},\n+                                {RPCResult::Type::BOOL, \"internal\", \"The address is internal (change) or external (receive)\"},\n+                                {RPCResult::Type::NUM, \"amount\", \"Available amount at address\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23019#discussion_r713488076",
      "id" : 713488076,
      "in_reply_to_id" : 712367521,
      "line" : 258,
      "node_id" : "PRRC_kwDOABII584qhvbM",
      "original_commit_id" : "fdc4031e857491750b3bbbe6fe7eb2eeb51c4a80",
      "original_line" : 258,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 23,
      "pull_request_review_id" : 760336795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23019",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-21T23:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713488076",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84432093?v=4",
         "events_url" : "https://api.github.com/users/lsilva01/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lsilva01/followers",
         "following_url" : "https://api.github.com/users/lsilva01/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lsilva01/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lsilva01",
         "id" : 84432093,
         "login" : "lsilva01",
         "node_id" : "MDQ6VXNlcjg0NDMyMDkz",
         "organizations_url" : "https://api.github.com/users/lsilva01/orgs",
         "received_events_url" : "https://api.github.com/users/lsilva01/received_events",
         "repos_url" : "https://api.github.com/users/lsilva01/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lsilva01/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lsilva01"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Approach NACK\r\n\r\nI started reviewing, but I have some fundamental issues with the approach taken. I like the general idea, but this specific implementation has issues.\r\n\r\nFirst of all, why does this even need to take parameters? I don't see why a \"starting index\" or \"ending index\" need to be provided. We shouldn't need to derive addresses on the fly because they should already be in the wallet in some way. This really should use the address book, the keypool, and key metadata rather than re-deriving. Index just doesn't really make sense for what this RPC purports to do. This also ends up making assumptions about what addresses are receiving and change, depending on how they are derived. But that is not reliable, especially for wallets prior to the HD chain split. In fact, using this with such a wallet will result in an assertion failure, and that is just not acceptable. The correct thing is to use the wallet's built in change determining function(s) so that those that are listed as change actually correspond with the things that the wallet will see as change.\r\n\r\nLikewise, why is this limited to just the default address type? A wallet will typically have addresses of address types that are not the default. These should be output as well.\r\n\r\nFurthermore, this RPC appears to only work on HD wallets, which severely limits is usability. Many people do use non-HD wallets still, and I would expect something that just lists out the wallet's addresses is not limited to just HD wallets.",
      "created_at" : "2021-09-24T19:03:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23019#issuecomment-926856642",
      "id" : 926856642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23019",
      "node_id" : "IC_kwDOABII5843PrXC",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-24T19:03:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926856642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@achow101 thanks for detailed review.\r\n\r\nMy original implementation used the keypool (for legacy wallets), m_wallet_descriptor (for descriptor wallets) and key metadata.\r\nOriginally, the `ScriptPubKeyMan::ListAddresses()` methods also didn't call `TopUp()`. \r\n\r\nBut the problem is the following case: if the user wants to know some address whose index is greater than the keypool total (such as 2395th), an error would be generated. Deriving addresses solved this issue. The listaddresses RPC would work regardless of keypool size.\r\n\r\nSince the problem was in the approach, not in concept, I changed the code of this PR to the original version, that uses the keypool, m_wallet_descriptor and key metadata.\r\nSo the way I've found to resolve the keypool limitation is the following code, but I'm not sure this is a good user experience.\r\n\r\n```c++\r\nif ((size_t) end_index >= setKeyPool->size()) {\r\n    auto s_end_index = strprintf(\"%u\", end_index);\r\n    auto s_set_keypool_size = strprintf(\"%u\", setKeyPool->size() - 1);\r\n    auto error_message = \"Error: end_index (\" + s_end_index + \") is greater than last keypool item (\" + s_set_keypool_size + \").\";\r\n    error = _(error_message.c_str());\r\n    return false;\r\n}\r\n```\r\n\r\nI didn't understand the reason to remove `start_index` and `end_index`. They work more like pagination. Without them, the command would return 2000 items (the default keypool size * 2). \r\nRemoving them, what would be the other way to have a good visualization of the result?\r\n\r\nI also added address type as parameter.",
      "created_at" : "2021-09-27T06:41:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23019#issuecomment-927576568",
      "id" : 927576568,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23019",
      "node_id" : "IC_kwDOABII5843SbH4",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-27T06:45:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927576568",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84432093?v=4",
         "events_url" : "https://api.github.com/users/lsilva01/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lsilva01/followers",
         "following_url" : "https://api.github.com/users/lsilva01/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lsilva01/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lsilva01",
         "id" : 84432093,
         "login" : "lsilva01",
         "node_id" : "MDQ6VXNlcjg0NDMyMDkz",
         "organizations_url" : "https://api.github.com/users/lsilva01/orgs",
         "received_events_url" : "https://api.github.com/users/lsilva01/received_events",
         "repos_url" : "https://api.github.com/users/lsilva01/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lsilva01/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lsilva01"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> But the problem is the following case: if the user wants to know some address whose index is greater than the keypool total (such as 2395th), an error would be generated. Deriving addresses solved this issue. The listaddresses RPC would work regardless of keypool size.\r\n\r\nI don't think that is a situation we should support. It would mean that users could get addresses that are not currently being watched by the wallet. I think that there would be the expectation that the wallet is watching such an address and so any funds sent to them would appear in the wallet. But that would not be the case.\r\n\r\n> I didn't understand the reason to remove `start_index` and `end_index`. They work more like pagination. Without them, the command would return 2000 items (the default keypool size * 2).\r\n\r\nI think that it is completely reasonable to return such a large result. There could be options for verbosity, e.g. a non-verbose output is just the addresses, then verbose is with all of the additional information that this PR currently includes.\r\n\r\nWe have many RPCs that will output a ton of data from the wallet, e.g. `listunspent` or `listtransactions`.",
      "created_at" : "2021-09-27T16:25:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23019#issuecomment-928047795",
      "id" : 928047795,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23019",
      "node_id" : "IC_kwDOABII5843UOKz",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-27T16:26:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928047795",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]
