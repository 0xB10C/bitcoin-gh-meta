[
   {
      "author_association" : "MEMBER",
      "body" : "Travis failures:\r\n```\r\nIn file included from /usr/include/qt4/QtGui/QLineEdit:1:0,\r\n                 from qt/test/apptests.cpp:20:\r\n/usr/include/qt4/QtGui/qlineedit.h: In function Ã¢ÂÂvoid {anonymous}::TestRpcCommand(RPCConsole*)Ã¢ÂÂ:\r\n/usr/include/qt4/QtGui/qlineedit.h:198:10: error: Ã¢ÂÂvoid QLineEdit::returnPressed()Ã¢ÂÂ is protected\r\n     void returnPressed();\r\n          ^\r\nqt/test/apptests.cpp:34:29: error: within this context\r\n     lineEdit->returnPressed();\r\n                             ^\r\nmake[2]: *** [qt/test/qt_test_test_bitcoin_qt-apptests.o] Error 1\r\n```\r\n```\r\nFAIL: qt/test/test_bitcoin-qt\r\n=============================\r\n********* Start testing of AppTests *********\r\nConfig: Using QtTest library 5.7.1, Qt 5.7.1 (x86_64-little_endian-lp64 static release build; by GCC 4.8.4)\r\nPASS   : AppTests::initTestCase()\r\nQWARN  : AppTests::appTests() Backing up GUI settings to \"/tmp/test_bitcoin-qt_1510018491_71945/regtest/guisettings.ini.bak\"\r\nQWARN  : AppTests::appTests() QFont::setPointSizeF: Point size <= 0 (-1.000000), must be greater than 0\r\nQWARN  : AppTests::appTests() QFont::setPointSizeF: Point size <= 0 (-1.000000), must be greater than 0\r\nQWARN  : AppTests::appTests() QFont::setPointSizeF: Point size <= 0 (-1.000000), must be greater than 0\r\nQWARN  : AppTests::appTests() QFont::setPointSizeF: Point size <= 0 (-1.000000), must be greater than 0\r\nQWARN  : AppTests::appTests() QFont::setPointSizeF: Point size <= 0 (-1.000000), must be greater than 0\r\nQWARN  : AppTests::appTests() QFont::setPointSizeF: Point size <= 0 (-1.000000), must be greater than 0\r\nQWARN  : AppTests::appTests() QFont::setPointSizeF: Point size <= 0 (-1.000000), must be greater than 0\r\nQWARN  : AppTests::appTests() QFont::setPointSizeF: Point size <= 0 (-1.000000), must be greater than 0\r\nQDEBUG : AppTests::appTests() requestInitialize : Requesting initialize\r\nQDEBUG : AppTests::appTests() initialize : Running initialization in thread\r\nQDEBUG : AppTests::appTests() initializeResult : Initialization result:  true\r\nQWARN  : AppTests::appTests() Platform customization: \"other\"\r\n========= Received signal, dumping stack ==============\r\n========= End of stack trace ==============\r\nQFATAL : AppTests::appTests() Received signal 11\r\n         Function time: 267ms Total time: 272ms\r\nFAIL!  : AppTests::appTests() Received a fatal error.\r\n   Loc: [Unknown file(0)]\r\nTotals: 1 passed, 1 failed, 0 skipped, 0 blacklisted, 284ms\r\n********* Finished testing of AppTests *********\r\n```",
      "created_at" : "2017-11-07T01:49:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#issuecomment-342349306",
      "id" : 342349306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11625",
      "updated_at" : "2017-11-07T01:49:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/342349306",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Cool, will review.",
      "created_at" : "2017-11-07T13:46:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#issuecomment-342486574",
      "id" : 342486574,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11625",
      "updated_at" : "2017-11-07T13:46:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/342486574",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149379211"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149379211"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```cpp\r\nbitdb.Close();\r\nbitdb.Reset();\r\n```",
      "commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "created_at" : "2017-11-07T14:19:15Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#include \"apptests.h\"\n+\n+#include \"chainparams.h\"\n+#include \"init.h\"\n+#include \"qt/bitcoin.h\"\n+#include \"qt/bitcoingui.h\"\n+#include \"qt/networkstyle.h\"\n+#include \"qt/rpcconsole.h\"\n+#include \"validation.h\"\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+#ifdef ENABLE_WALLET\n+#include \"wallet/db.h\"\n+#endif\n+\n+#include <QAction>\n+#include <QEventLoop>\n+#include <QLineEdit>\n+#include <QScopedPointer>\n+#include <QTest>\n+#include <QTextEdit>\n+#include <new>\n+#include <string>\n+#include <univalue.h>\n+\n+namespace {\n+//! Call getblockchaininfo RPC and check first field of JSON output.\n+void TestRpcCommand(RPCConsole* console)\n+{\n+    QLineEdit* lineEdit = console->findChild<QLineEdit*>(\"lineEdit\");\n+    lineEdit->setText(\"getblockchaininfo\");\n+    lineEdit->returnPressed();\n+    QEventLoop loop;\n+    QTextEdit* messagesWidget = console->findChild<QTextEdit*>(\"messagesWidget\");\n+    QObject::connect(messagesWidget, SIGNAL(textChanged()), &loop, SLOT(quit()));\n+    loop.exec();\n+    QString output = messagesWidget->toPlainText();\n+    UniValue value;\n+    value.read(output.right(output.size() - output.lastIndexOf(u8\"\\uFFFC\") - 1).toStdString());\n+    QCOMPARE(value[\"chain\"].get_str(), std::string(\"regtest\"));\n+}\n+}\n+\n+//! Entry point for BitcoinApplication tests.\n+void AppTests::appTests()\n+{\n+    m_app.parameterSetup();\n+    m_app.createOptionsModel(true /* reset settings */);\n+    QScopedPointer<const NetworkStyle> style(\n+        NetworkStyle::instantiate(QString::fromStdString(Params().NetworkIDString())));\n+    m_app.createWindow(style.data());\n+    BitcoinCore::baseInitialize();\n+    expectCallback(); // windowShown\n+    connect(&m_app, SIGNAL(windowShown(BitcoinGUI*)), this, SLOT(guiTests(BitcoinGUI*)));\n+    m_app.requestInitialize();\n+    m_app.exec();\n+\n+    // Reset some global state to avoid interfering with later tests.\n+    ResetShutdownRequested();\n+#ifdef ENABLE_WALLET\n+    ::bitdb.~CDBEnv();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149379211",
      "id" : 149379211,
      "original_commit_id" : "5be833cf92cddedd4c52c3e101ec8bc7dbcdafa6",
      "original_position" : 63,
      "path" : "src/qt/test/apptests.cpp",
      "position" : null,
      "pull_request_review_id" : 74761614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625",
      "updated_at" : "2017-11-08T18:33:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149379211",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149392737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149392737"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "How about storing the name? Is this supposed to be stack like?",
      "commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "created_at" : "2017-11-07T14:59:16Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#include \"apptests.h\"\n+\n+#include \"chainparams.h\"\n+#include \"init.h\"\n+#include \"qt/bitcoin.h\"\n+#include \"qt/bitcoingui.h\"\n+#include \"qt/networkstyle.h\"\n+#include \"qt/rpcconsole.h\"\n+#include \"validation.h\"\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+#ifdef ENABLE_WALLET\n+#include \"wallet/db.h\"\n+#endif\n+\n+#include <QAction>\n+#include <QEventLoop>\n+#include <QLineEdit>\n+#include <QScopedPointer>\n+#include <QTest>\n+#include <QTextEdit>\n+#include <new>\n+#include <string>\n+#include <univalue.h>\n+\n+namespace {\n+//! Call getblockchaininfo RPC and check first field of JSON output.\n+void TestRpcCommand(RPCConsole* console)\n+{\n+    QLineEdit* lineEdit = console->findChild<QLineEdit*>(\"lineEdit\");\n+    lineEdit->setText(\"getblockchaininfo\");\n+    lineEdit->returnPressed();\n+    QEventLoop loop;\n+    QTextEdit* messagesWidget = console->findChild<QTextEdit*>(\"messagesWidget\");\n+    QObject::connect(messagesWidget, SIGNAL(textChanged()), &loop, SLOT(quit()));\n+    loop.exec();\n+    QString output = messagesWidget->toPlainText();\n+    UniValue value;\n+    value.read(output.right(output.size() - output.lastIndexOf(u8\"\\uFFFC\") - 1).toStdString());\n+    QCOMPARE(value[\"chain\"].get_str(), std::string(\"regtest\"));\n+}\n+}\n+\n+//! Entry point for BitcoinApplication tests.\n+void AppTests::appTests()\n+{\n+    m_app.parameterSetup();\n+    m_app.createOptionsModel(true /* reset settings */);\n+    QScopedPointer<const NetworkStyle> style(\n+        NetworkStyle::instantiate(QString::fromStdString(Params().NetworkIDString())));\n+    m_app.createWindow(style.data());\n+    BitcoinCore::baseInitialize();\n+    expectCallback(); // windowShown\n+    connect(&m_app, SIGNAL(windowShown(BitcoinGUI*)), this, SLOT(guiTests(BitcoinGUI*)));\n+    m_app.requestInitialize();\n+    m_app.exec();\n+\n+    // Reset some global state to avoid interfering with later tests.\n+    ResetShutdownRequested();\n+#ifdef ENABLE_WALLET\n+    ::bitdb.~CDBEnv();\n+    new (&::bitdb) CDBEnv;\n+#endif\n+    UnloadBlockIndex();\n+}\n+\n+//! Entry point for BitcoinGUI tests.\n+void AppTests::guiTests(BitcoinGUI* window)\n+{\n+    HandleCallback windowShown{*this};\n+    expectCallback(); // consoleShown",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149392737",
      "id" : 149392737,
      "original_commit_id" : "5be833cf92cddedd4c52c3e101ec8bc7dbcdafa6",
      "original_position" : 73,
      "path" : "src/qt/test/apptests.cpp",
      "position" : null,
      "pull_request_review_id" : 74761614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625",
      "updated_at" : "2017-11-08T18:33:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149392737",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149393582"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149393582"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`QStack<QString> m_callbacks;`. See above.",
      "commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "created_at" : "2017-11-07T15:01:11Z",
      "diff_hunk" : "@@ -0,0 +1,39 @@\n+#ifndef BITCOIN_QT_TEST_APPTESTS_H\n+#define BITCOIN_QT_TEST_APPTESTS_H\n+\n+#include <QObject>\n+\n+class BitcoinApplication;\n+class BitcoinGUI;\n+class RPCConsole;\n+\n+class AppTests : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    AppTests(BitcoinApplication& app) : m_app(app) {}\n+\n+private Q_SLOTS:\n+    void appTests();\n+    void guiTests(BitcoinGUI* window);\n+    void consoleTests(RPCConsole* console);\n+\n+private:\n+    //! Increment number of pending callbacks.\n+    void expectCallback() { ++m_callbacks; }\n+\n+    //! RAII helper to decrement number of pending callbacks.\n+    struct HandleCallback\n+    {\n+        AppTests& m_app_tests;\n+        ~HandleCallback();\n+    };\n+\n+    //! Bitcoin application.\n+    BitcoinApplication& m_app;\n+\n+    //! Number of expected callbacks pending.\n+    int m_callbacks = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149393582",
      "id" : 149393582,
      "original_commit_id" : "5be833cf92cddedd4c52c3e101ec8bc7dbcdafa6",
      "original_position" : 36,
      "path" : "src/qt/test/apptests.h",
      "position" : null,
      "pull_request_review_id" : 74761614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625",
      "updated_at" : "2017-11-08T18:33:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149393582",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149531077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149531077"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> How about storing the name? Is this supposed to be stack like?\r\n\r\nKind of, but it's a pool, not a stack. The idea is just for AppTests to just create a bunch of windows and let appropriate tests run as the windows are created, without having to worry about the order events happen. To track names instead of using a counter, `int m_callbacks` could be replaced with `std::multiset<std::string> m_callbacks`, and `++` `--` replaced by `insert` and `erase`. It seems like this might just be more verbose and error prone without being more readable than current comments, but I could change it if you think it would be better.",
      "commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "created_at" : "2017-11-07T23:01:55Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#include \"apptests.h\"\n+\n+#include \"chainparams.h\"\n+#include \"init.h\"\n+#include \"qt/bitcoin.h\"\n+#include \"qt/bitcoingui.h\"\n+#include \"qt/networkstyle.h\"\n+#include \"qt/rpcconsole.h\"\n+#include \"validation.h\"\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+#ifdef ENABLE_WALLET\n+#include \"wallet/db.h\"\n+#endif\n+\n+#include <QAction>\n+#include <QEventLoop>\n+#include <QLineEdit>\n+#include <QScopedPointer>\n+#include <QTest>\n+#include <QTextEdit>\n+#include <new>\n+#include <string>\n+#include <univalue.h>\n+\n+namespace {\n+//! Call getblockchaininfo RPC and check first field of JSON output.\n+void TestRpcCommand(RPCConsole* console)\n+{\n+    QLineEdit* lineEdit = console->findChild<QLineEdit*>(\"lineEdit\");\n+    lineEdit->setText(\"getblockchaininfo\");\n+    lineEdit->returnPressed();\n+    QEventLoop loop;\n+    QTextEdit* messagesWidget = console->findChild<QTextEdit*>(\"messagesWidget\");\n+    QObject::connect(messagesWidget, SIGNAL(textChanged()), &loop, SLOT(quit()));\n+    loop.exec();\n+    QString output = messagesWidget->toPlainText();\n+    UniValue value;\n+    value.read(output.right(output.size() - output.lastIndexOf(u8\"\\uFFFC\") - 1).toStdString());\n+    QCOMPARE(value[\"chain\"].get_str(), std::string(\"regtest\"));\n+}\n+}\n+\n+//! Entry point for BitcoinApplication tests.\n+void AppTests::appTests()\n+{\n+    m_app.parameterSetup();\n+    m_app.createOptionsModel(true /* reset settings */);\n+    QScopedPointer<const NetworkStyle> style(\n+        NetworkStyle::instantiate(QString::fromStdString(Params().NetworkIDString())));\n+    m_app.createWindow(style.data());\n+    BitcoinCore::baseInitialize();\n+    expectCallback(); // windowShown\n+    connect(&m_app, SIGNAL(windowShown(BitcoinGUI*)), this, SLOT(guiTests(BitcoinGUI*)));\n+    m_app.requestInitialize();\n+    m_app.exec();\n+\n+    // Reset some global state to avoid interfering with later tests.\n+    ResetShutdownRequested();\n+#ifdef ENABLE_WALLET\n+    ::bitdb.~CDBEnv();\n+    new (&::bitdb) CDBEnv;\n+#endif\n+    UnloadBlockIndex();\n+}\n+\n+//! Entry point for BitcoinGUI tests.\n+void AppTests::guiTests(BitcoinGUI* window)\n+{\n+    HandleCallback windowShown{*this};\n+    expectCallback(); // consoleShown",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149531077",
      "id" : 149531077,
      "in_reply_to_id" : 149392737,
      "original_commit_id" : "5be833cf92cddedd4c52c3e101ec8bc7dbcdafa6",
      "original_position" : 73,
      "path" : "src/qt/test/apptests.cpp",
      "position" : null,
      "pull_request_review_id" : 74940332,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625",
      "updated_at" : "2017-11-08T18:33:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149531077",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149531095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149531095"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Responded above, would have to be a multiset instead of a stack.",
      "commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "created_at" : "2017-11-07T23:02:00Z",
      "diff_hunk" : "@@ -0,0 +1,39 @@\n+#ifndef BITCOIN_QT_TEST_APPTESTS_H\n+#define BITCOIN_QT_TEST_APPTESTS_H\n+\n+#include <QObject>\n+\n+class BitcoinApplication;\n+class BitcoinGUI;\n+class RPCConsole;\n+\n+class AppTests : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    AppTests(BitcoinApplication& app) : m_app(app) {}\n+\n+private Q_SLOTS:\n+    void appTests();\n+    void guiTests(BitcoinGUI* window);\n+    void consoleTests(RPCConsole* console);\n+\n+private:\n+    //! Increment number of pending callbacks.\n+    void expectCallback() { ++m_callbacks; }\n+\n+    //! RAII helper to decrement number of pending callbacks.\n+    struct HandleCallback\n+    {\n+        AppTests& m_app_tests;\n+        ~HandleCallback();\n+    };\n+\n+    //! Bitcoin application.\n+    BitcoinApplication& m_app;\n+\n+    //! Number of expected callbacks pending.\n+    int m_callbacks = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149531095",
      "id" : 149531095,
      "in_reply_to_id" : 149393582,
      "original_commit_id" : "5be833cf92cddedd4c52c3e101ec8bc7dbcdafa6",
      "original_position" : 36,
      "path" : "src/qt/test/apptests.h",
      "position" : null,
      "pull_request_review_id" : 74940332,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625",
      "updated_at" : "2017-11-08T18:33:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149531095",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149531172"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149531172"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, switched.",
      "commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "created_at" : "2017-11-07T23:02:24Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#include \"apptests.h\"\n+\n+#include \"chainparams.h\"\n+#include \"init.h\"\n+#include \"qt/bitcoin.h\"\n+#include \"qt/bitcoingui.h\"\n+#include \"qt/networkstyle.h\"\n+#include \"qt/rpcconsole.h\"\n+#include \"validation.h\"\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+#ifdef ENABLE_WALLET\n+#include \"wallet/db.h\"\n+#endif\n+\n+#include <QAction>\n+#include <QEventLoop>\n+#include <QLineEdit>\n+#include <QScopedPointer>\n+#include <QTest>\n+#include <QTextEdit>\n+#include <new>\n+#include <string>\n+#include <univalue.h>\n+\n+namespace {\n+//! Call getblockchaininfo RPC and check first field of JSON output.\n+void TestRpcCommand(RPCConsole* console)\n+{\n+    QLineEdit* lineEdit = console->findChild<QLineEdit*>(\"lineEdit\");\n+    lineEdit->setText(\"getblockchaininfo\");\n+    lineEdit->returnPressed();\n+    QEventLoop loop;\n+    QTextEdit* messagesWidget = console->findChild<QTextEdit*>(\"messagesWidget\");\n+    QObject::connect(messagesWidget, SIGNAL(textChanged()), &loop, SLOT(quit()));\n+    loop.exec();\n+    QString output = messagesWidget->toPlainText();\n+    UniValue value;\n+    value.read(output.right(output.size() - output.lastIndexOf(u8\"\\uFFFC\") - 1).toStdString());\n+    QCOMPARE(value[\"chain\"].get_str(), std::string(\"regtest\"));\n+}\n+}\n+\n+//! Entry point for BitcoinApplication tests.\n+void AppTests::appTests()\n+{\n+    m_app.parameterSetup();\n+    m_app.createOptionsModel(true /* reset settings */);\n+    QScopedPointer<const NetworkStyle> style(\n+        NetworkStyle::instantiate(QString::fromStdString(Params().NetworkIDString())));\n+    m_app.createWindow(style.data());\n+    BitcoinCore::baseInitialize();\n+    expectCallback(); // windowShown\n+    connect(&m_app, SIGNAL(windowShown(BitcoinGUI*)), this, SLOT(guiTests(BitcoinGUI*)));\n+    m_app.requestInitialize();\n+    m_app.exec();\n+\n+    // Reset some global state to avoid interfering with later tests.\n+    ResetShutdownRequested();\n+#ifdef ENABLE_WALLET\n+    ::bitdb.~CDBEnv();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149531172",
      "id" : 149531172,
      "in_reply_to_id" : 149379211,
      "original_commit_id" : "5be833cf92cddedd4c52c3e101ec8bc7dbcdafa6",
      "original_position" : 63,
      "path" : "src/qt/test/apptests.cpp",
      "position" : null,
      "pull_request_review_id" : 74940332,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625",
      "updated_at" : "2017-11-08T18:33:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149531172",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149538105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149538105"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see 2 advantages over counting:\r\n - the comment is optional but the argument is not;\r\n - better hint if the set is not empty at the end.\r\n\r\nBTW, have you thought using QSignalSpy?",
      "commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "created_at" : "2017-11-07T23:39:21Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#include \"apptests.h\"\n+\n+#include \"chainparams.h\"\n+#include \"init.h\"\n+#include \"qt/bitcoin.h\"\n+#include \"qt/bitcoingui.h\"\n+#include \"qt/networkstyle.h\"\n+#include \"qt/rpcconsole.h\"\n+#include \"validation.h\"\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+#ifdef ENABLE_WALLET\n+#include \"wallet/db.h\"\n+#endif\n+\n+#include <QAction>\n+#include <QEventLoop>\n+#include <QLineEdit>\n+#include <QScopedPointer>\n+#include <QTest>\n+#include <QTextEdit>\n+#include <new>\n+#include <string>\n+#include <univalue.h>\n+\n+namespace {\n+//! Call getblockchaininfo RPC and check first field of JSON output.\n+void TestRpcCommand(RPCConsole* console)\n+{\n+    QLineEdit* lineEdit = console->findChild<QLineEdit*>(\"lineEdit\");\n+    lineEdit->setText(\"getblockchaininfo\");\n+    lineEdit->returnPressed();\n+    QEventLoop loop;\n+    QTextEdit* messagesWidget = console->findChild<QTextEdit*>(\"messagesWidget\");\n+    QObject::connect(messagesWidget, SIGNAL(textChanged()), &loop, SLOT(quit()));\n+    loop.exec();\n+    QString output = messagesWidget->toPlainText();\n+    UniValue value;\n+    value.read(output.right(output.size() - output.lastIndexOf(u8\"\\uFFFC\") - 1).toStdString());\n+    QCOMPARE(value[\"chain\"].get_str(), std::string(\"regtest\"));\n+}\n+}\n+\n+//! Entry point for BitcoinApplication tests.\n+void AppTests::appTests()\n+{\n+    m_app.parameterSetup();\n+    m_app.createOptionsModel(true /* reset settings */);\n+    QScopedPointer<const NetworkStyle> style(\n+        NetworkStyle::instantiate(QString::fromStdString(Params().NetworkIDString())));\n+    m_app.createWindow(style.data());\n+    BitcoinCore::baseInitialize();\n+    expectCallback(); // windowShown\n+    connect(&m_app, SIGNAL(windowShown(BitcoinGUI*)), this, SLOT(guiTests(BitcoinGUI*)));\n+    m_app.requestInitialize();\n+    m_app.exec();\n+\n+    // Reset some global state to avoid interfering with later tests.\n+    ResetShutdownRequested();\n+#ifdef ENABLE_WALLET\n+    ::bitdb.~CDBEnv();\n+    new (&::bitdb) CDBEnv;\n+#endif\n+    UnloadBlockIndex();\n+}\n+\n+//! Entry point for BitcoinGUI tests.\n+void AppTests::guiTests(BitcoinGUI* window)\n+{\n+    HandleCallback windowShown{*this};\n+    expectCallback(); // consoleShown",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149538105",
      "id" : 149538105,
      "in_reply_to_id" : 149392737,
      "original_commit_id" : "5be833cf92cddedd4c52c3e101ec8bc7dbcdafa6",
      "original_position" : 73,
      "path" : "src/qt/test/apptests.cpp",
      "position" : null,
      "pull_request_review_id" : 74948265,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625",
      "updated_at" : "2017-11-08T18:33:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149538105",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149757196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149757196"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I see 2 advantages over counting:\r\n>\r\n> * the comment is optional but the argument is not;\r\n> * better hint if the set is not empty at the end.\r\n>\r\n> BTW, have you thought using QSignalSpy?\r\n\r\nOk, switched from an int to a set. I didn't know about signal spy, but it doesn't seem quite right for this because it can track signals but not run handlers. Here I am tracking signals (to trigger shutdown after last one) but only in the course of handling them. Signal spy does have a wait method which looks like it would be nice to replace the temporary loop in TestRpcCommand, but unfortunately it is in qt5 but not qt4.",
      "commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "created_at" : "2017-11-08T18:32:48Z",
      "diff_hunk" : "@@ -0,0 +1,92 @@\n+#include \"apptests.h\"\n+\n+#include \"chainparams.h\"\n+#include \"init.h\"\n+#include \"qt/bitcoin.h\"\n+#include \"qt/bitcoingui.h\"\n+#include \"qt/networkstyle.h\"\n+#include \"qt/rpcconsole.h\"\n+#include \"validation.h\"\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+#ifdef ENABLE_WALLET\n+#include \"wallet/db.h\"\n+#endif\n+\n+#include <QAction>\n+#include <QEventLoop>\n+#include <QLineEdit>\n+#include <QScopedPointer>\n+#include <QTest>\n+#include <QTextEdit>\n+#include <new>\n+#include <string>\n+#include <univalue.h>\n+\n+namespace {\n+//! Call getblockchaininfo RPC and check first field of JSON output.\n+void TestRpcCommand(RPCConsole* console)\n+{\n+    QLineEdit* lineEdit = console->findChild<QLineEdit*>(\"lineEdit\");\n+    lineEdit->setText(\"getblockchaininfo\");\n+    lineEdit->returnPressed();\n+    QEventLoop loop;\n+    QTextEdit* messagesWidget = console->findChild<QTextEdit*>(\"messagesWidget\");\n+    QObject::connect(messagesWidget, SIGNAL(textChanged()), &loop, SLOT(quit()));\n+    loop.exec();\n+    QString output = messagesWidget->toPlainText();\n+    UniValue value;\n+    value.read(output.right(output.size() - output.lastIndexOf(u8\"\\uFFFC\") - 1).toStdString());\n+    QCOMPARE(value[\"chain\"].get_str(), std::string(\"regtest\"));\n+}\n+}\n+\n+//! Entry point for BitcoinApplication tests.\n+void AppTests::appTests()\n+{\n+    m_app.parameterSetup();\n+    m_app.createOptionsModel(true /* reset settings */);\n+    QScopedPointer<const NetworkStyle> style(\n+        NetworkStyle::instantiate(QString::fromStdString(Params().NetworkIDString())));\n+    m_app.createWindow(style.data());\n+    BitcoinCore::baseInitialize();\n+    expectCallback(); // windowShown\n+    connect(&m_app, SIGNAL(windowShown(BitcoinGUI*)), this, SLOT(guiTests(BitcoinGUI*)));\n+    m_app.requestInitialize();\n+    m_app.exec();\n+\n+    // Reset some global state to avoid interfering with later tests.\n+    ResetShutdownRequested();\n+#ifdef ENABLE_WALLET\n+    ::bitdb.~CDBEnv();\n+    new (&::bitdb) CDBEnv;\n+#endif\n+    UnloadBlockIndex();\n+}\n+\n+//! Entry point for BitcoinGUI tests.\n+void AppTests::guiTests(BitcoinGUI* window)\n+{\n+    HandleCallback windowShown{*this};\n+    expectCallback(); // consoleShown",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149757196",
      "id" : 149757196,
      "in_reply_to_id" : 149392737,
      "original_commit_id" : "5be833cf92cddedd4c52c3e101ec8bc7dbcdafa6",
      "original_position" : 73,
      "path" : "src/qt/test/apptests.cpp",
      "position" : null,
      "pull_request_review_id" : 75202369,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625",
      "updated_at" : "2017-11-08T18:36:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149757196",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149814290"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149814290"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Different commit?",
      "commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "created_at" : "2017-11-08T22:19:27Z",
      "diff_hunk" : "@@ -578,11 +580,13 @@ void BitcoinGUI::setWalletActionsEnabled(bool enabled)\n void BitcoinGUI::createTrayIcon(const NetworkStyle *networkStyle)\n {\n #ifndef Q_OS_MAC\n-    trayIcon = new QSystemTrayIcon(this);\n-    QString toolTip = tr(\"%1 client\").arg(tr(PACKAGE_NAME)) + \" \" + networkStyle->getTitleAddText();\n-    trayIcon->setToolTip(toolTip);\n-    trayIcon->setIcon(networkStyle->getTrayAndWindowIcon());\n-    trayIcon->hide();\n+    if (QSystemTrayIcon::isSystemTrayAvailable()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149814290",
      "id" : 149814290,
      "original_commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "original_position" : 25,
      "path" : "src/qt/bitcoingui.cpp",
      "position" : 25,
      "pull_request_review_id" : 75270282,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625",
      "updated_at" : "2017-11-08T22:39:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149814290",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149814564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149814564"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove?",
      "commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "created_at" : "2017-11-08T22:20:46Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+#include \"apptests.h\"\n+\n+#include \"chainparams.h\"\n+#include \"init.h\"\n+#include \"qt/bitcoin.h\"\n+#include \"qt/bitcoingui.h\"\n+#include \"qt/networkstyle.h\"\n+#include \"qt/rpcconsole.h\"\n+#include \"validation.h\"\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+#ifdef ENABLE_WALLET\n+#include \"wallet/db.h\"\n+#endif\n+\n+#include <QAction>\n+#include <QEventLoop>\n+#include <QLineEdit>\n+#include <QScopedPointer>\n+#include <QTest>\n+#include <QTextEdit>\n+#include <QtGlobal>\n+#if QT_VERSION >= 0x050000\n+#include <QtTest/QtTestWidgets>\n+#endif\n+#include <QtTest/QtTestGui>\n+#include <new>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149814564",
      "id" : 149814564,
      "original_commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "original_position" : 29,
      "path" : "src/qt/test/apptests.cpp",
      "position" : 29,
      "pull_request_review_id" : 75270282,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625",
      "updated_at" : "2017-11-08T22:39:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149814564",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149817317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149817317"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, sort includes.",
      "commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "created_at" : "2017-11-08T22:33:24Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+#include \"apptests.h\"\n+\n+#include \"chainparams.h\"\n+#include \"init.h\"\n+#include \"qt/bitcoin.h\"\n+#include \"qt/bitcoingui.h\"\n+#include \"qt/networkstyle.h\"\n+#include \"qt/rpcconsole.h\"\n+#include \"validation.h\"\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+#ifdef ENABLE_WALLET\n+#include \"wallet/db.h\"\n+#endif\n+\n+#include <QAction>\n+#include <QEventLoop>\n+#include <QLineEdit>\n+#include <QScopedPointer>\n+#include <QTest>\n+#include <QTextEdit>\n+#include <QtGlobal>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#discussion_r149817317",
      "id" : 149817317,
      "original_commit_id" : "e94e344d3c46ef084e0666955a7a1ebd69824406",
      "original_position" : 24,
      "path" : "src/qt/test/apptests.cpp",
      "position" : 24,
      "pull_request_review_id" : 75270282,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11625",
      "updated_at" : "2017-11-08T22:39:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149817317",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Any hint?\r\n```sh\r\nmake clean && make\r\n\r\n...\r\n\r\n  CXXLD    qt/test/test_bitcoin-qt\r\nUndefined symbols for architecture x86_64:\r\n  \"MacNotificationHandler::instance()\", referenced from:\r\n      Notificator::Notificator(QString const&, QSystemTrayIcon*, QWidget*) in libbitcoinqt.a(qt_libbitcoinqt_a-notificator.o)\r\n      Notificator::notify(Notificator::Class, QString const&, QString const&, QIcon const&, int) in libbitcoinqt.a(qt_libbitcoinqt_a-notificator.o)\r\n  \"MacNotificationHandler::hasUserNotificationCenterSupport()\", referenced from:\r\n      Notificator::Notificator(QString const&, QSystemTrayIcon*, QWidget*) in libbitcoinqt.a(qt_libbitcoinqt_a-notificator.o)\r\n  \"MacNotificationHandler::showNotification(QString const&, QString const&)\", referenced from:\r\n      Notificator::notify(Notificator::Class, QString const&, QString const&, QIcon const&, int) in libbitcoinqt.a(qt_libbitcoinqt_a-notificator.o)\r\n  \"MacDockIconHandler::cleanup()\", referenced from:\r\n      BitcoinGUI::~BitcoinGUI() in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\n  \"MacDockIconHandler::setMainWindow(QMainWindow*)\", referenced from:\r\n      BitcoinGUI::createTrayIconMenu() in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\n  \"MacDockIconHandler::dockMenu()\", referenced from:\r\n      BitcoinGUI::createTrayIconMenu() in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\n  \"MacDockIconHandler::instance()\", referenced from:\r\n      BitcoinGUI::BitcoinGUI(PlatformStyle const*, NetworkStyle const*, QWidget*) in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\n      BitcoinGUI::createTrayIconMenu() in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\n  \"MacDockIconHandler::setIcon(QIcon const&)\", referenced from:\r\n      BitcoinGUI::BitcoinGUI(PlatformStyle const*, NetworkStyle const*, QWidget*) in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nmake[2]: *** [qt/test/test_bitcoin-qt] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[1]: *** [all-recursive] Error 1\r\nmake: *** [all-recursive] Error 1\r\n```",
      "created_at" : "2017-11-09T01:16:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#issuecomment-343015756",
      "id" : 343015756,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11625",
      "updated_at" : "2017-11-09T01:16:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343015756",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Have the same compile issue (clang):\r\n```\r\nUndefined symbols for architecture x86_64:\r\n  \"MacNotificationHandler::instance()\", referenced from:\r\n      Notificator::Notificator(QString const&, QSystemTrayIcon*, QWidget*) in libbitcoinqt.a(qt_libbitcoinqt_a-notificator.o)\r\n      Notificator::notifyMacUserNotificationCenter(Notificator::Class, QString const&, QString const&, QIcon const&) in libbitcoinqt.a(qt_libbitcoinqt_a-notificator.o)\r\n  \"MacNotificationHandler::hasUserNotificationCenterSupport()\", referenced from:\r\n      Notificator::Notificator(QString const&, QSystemTrayIcon*, QWidget*) in libbitcoinqt.a(qt_libbitcoinqt_a-notificator.o)\r\n  \"MacNotificationHandler::showNotification(QString const&, QString const&)\", referenced from:\r\n      Notificator::notifyMacUserNotificationCenter(Notificator::Class, QString const&, QString const&, QIcon const&) in libbitcoinqt.a(qt_libbitcoinqt_a-notificator.o)\r\n  \"MacDockIconHandler::cleanup()\", referenced from:\r\n      BitcoinGUI::~BitcoinGUI() in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\n  \"MacDockIconHandler::setMainWindow(QMainWindow*)\", referenced from:\r\n      BitcoinGUI::createTrayIconMenu() in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\n  \"MacDockIconHandler::dockMenu()\", referenced from:\r\n      BitcoinGUI::createTrayIconMenu() in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\n  \"MacDockIconHandler::instance()\", referenced from:\r\n      BitcoinGUI::BitcoinGUI(PlatformStyle const*, NetworkStyle const*, QWidget*) in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\n      BitcoinGUI::createTrayIconMenu() in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\n  \"MacDockIconHandler::setIcon(QIcon const&)\", referenced from:\r\n      BitcoinGUI::BitcoinGUI(PlatformStyle const*, NetworkStyle const*, QWidget*) in libbitcoinqt.a(qt_libbitcoinqt_a-bitcoingui.o)\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nmake[2]: *** [qt/test/test_bitcoin-qt] Error 1\r\nmake[1]: *** [all-recursive] Error 1\r\n```\r\n\r\nLooks like an OSX issue.",
      "created_at" : "2017-11-29T23:40:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#issuecomment-348034015",
      "id" : 348034015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11625",
      "updated_at" : "2017-11-29T23:40:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348034015",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Looking into the link error, but @jonasschnelli do you have an idea why the build might be failing for you even though the apple target succeeds on travis?",
      "created_at" : "2017-11-30T20:53:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#issuecomment-348317424",
      "id" : 348317424,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11625",
      "updated_at" : "2017-11-30T20:55:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348317424",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Looking into the link error, but @jonasschnelli do you have an idea why the build might be failing for you even though the apple target succeeds on travis?\r\n\r\nSeems like the reason is that travis doesn't build tests for the apple target (it is just running `make deploy`).\r\n\r\nI also think I see the reason for the error. `BITCOIN_MM` files seem to get directly linked into the `qt/bitcoin-qt` executable instead of being part of `qt/libbitcoinqt.a`. I will try to move them there.",
      "created_at" : "2017-11-30T21:08:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#issuecomment-348321229",
      "id" : 348321229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11625",
      "updated_at" : "2017-11-30T21:08:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348321229",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I can dig a little to see if I can find a fix.",
      "created_at" : "2017-11-30T21:55:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#issuecomment-348333506",
      "id" : 348333506,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11625",
      "updated_at" : "2017-11-30T21:56:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348333506",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Travis was passing, but I just re-triggered it (to test it on top of master), now https://travis-ci.org/bitcoin/bitcoin/jobs/309721182 :(\r\n\r\nStrange:\r\n```\r\n0.01s$ if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/lint-all.sh; fi\r\ncontrib/devtools/lint-python.sh: 10: contrib/devtools/lint-python.sh: flake8: not found\r\n^---- failure generated from contrib/devtools/lint-python.sh\r\n```",
      "created_at" : "2018-01-30T10:29:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#issuecomment-361550451",
      "id" : 361550451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11625",
      "updated_at" : "2018-01-30T10:31:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/361550451",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj It is a travis bug :( They use the source code from master (merged with this pull) but the .travis.yml of only the pull...\r\n\r\nNeeds rebase",
      "created_at" : "2018-01-30T12:51:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#issuecomment-361583994",
      "id" : 361583994,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11625",
      "updated_at" : "2018-01-30T12:51:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/361583994",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Just ran this locally (on top of master) and got the error blow (while master passes):\r\n```\r\n********* Start testing of AppTests *********\r\nConfig: Using QtTest library 5.10.0, Qt 5.10.0 (x86_64-little_endian-lp64 shared (dynamic) release build; by Clang 9.0.0 (clang-900.0.39.2) (Apple))\r\nPASS   : AppTests::initTestCase()\r\nQWARN  : AppTests::appTests() Backing up GUI settings to \"/var/folders/ct/m1t1vdnj16b578f6f50jct3m0000gn/T/test_bitcoin-qt_1518433105_69222/regtest/guisettings.ini.bak\"\r\n\r\n========= Received signal, dumping stack ==============\r\n(lldb) process attach --pid 19198\r\nProcess 19198 stopped\r\n* thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP\r\n    frame #0: 0x00007fffe7487406 libsystem_kernel.dylib`__wait4_nocancel + 10\r\nlibsystem_kernel.dylib`__wait4_nocancel:\r\n->  0x7fffe7487406 <+10>: jae    0x7fffe7487410            ; <+20>\r\n    0x7fffe7487408 <+12>: movq   %rax, %rdi\r\n    0x7fffe748740b <+15>: jmp    0x7fffe747fcaf            ; cerror_nocancel\r\n    0x7fffe7487410 <+20>: retq   \r\nTarget 0: (test_bitcoin-qt) stopped.\r\n\r\nExecutable module set to \"/Users/jonasschnelli/Documents/bitcoin/bitcoin/./src/qt/test/test_bitcoin-qt\".\r\nArchitecture set to: x86_64h-apple-macosx.\r\n(lldb) bt all\r\n* thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP\r\n  * frame #0: 0x00007fffe7487406 libsystem_kernel.dylib`__wait4_nocancel + 10\r\n    frame #1: 0x00007fffe740de3d libsystem_c.dylib`system + 463\r\n    frame #2: 0x0000000107da0f42 QtTest`___lldb_unnamed_symbol20$$QtTest + 162\r\n    frame #3: 0x0000000107da0e4d QtTest`___lldb_unnamed_symbol19$$QtTest + 205\r\n    frame #4: 0x00007fffe7567b3a libsystem_platform.dylib`_sigtramp + 26\r\n    frame #5: 0x000000010812202a QtWidgets`QMenu::setAsDockMenu() + 42\r\n    frame #6: 0x000000010546de81 test_bitcoin-qt`MacDockIconHandler::MacDockIconHandler(this=0x00007f9578f0fee0) at macdockiconhandler.mm:60\r\n    frame #7: 0x000000010546df25 test_bitcoin-qt`MacDockIconHandler::MacDockIconHandler(this=0x00007f9578f0fee0) at macdockiconhandler.mm:50\r\n    frame #8: 0x000000010546e508 test_bitcoin-qt`MacDockIconHandler::instance() at macdockiconhandler.mm:116\r\n    frame #9: 0x00000001052e40a9 test_bitcoin-qt`BitcoinGUI::BitcoinGUI(this=0x00007f9578f0e6b0, _platformStyle=0x00007f9578deb140, networkStyle=0x00007f9578c03db0, parent=0x0000000000000000) at bitcoingui.cpp:143\r\n    frame #10: 0x00000001052ea17b test_bitcoin-qt`BitcoinGUI::BitcoinGUI(this=0x00007f9578f0e6b0, _platformStyle=0x00007f9578deb140, networkStyle=0x00007f9578c03db0, parent=0x0000000000000000) at bitcoingui.cpp:121\r\n    frame #11: 0x00000001052de9f9 test_bitcoin-qt`BitcoinApplication::createWindow(this=0x00007fff5a9d18b8, networkStyle=0x00007f9578c03db0) at bitcoin.cpp:297\r\n    frame #12: 0x0000000105236c9a test_bitcoin-qt`AppTests::appTests(this=0x00007fff5a9d1880) at apptests.cpp:58\r\n    frame #13: 0x00000001052d6b1a test_bitcoin-qt`AppTests::qt_static_metacall(_o=0x00007fff5a9d1880, _c=InvokeMetaMethod, _id=0, _a=0x00007fff5a9d0d50) at moc_apptests.cpp:81\r\n    frame #14: 0x00000001079fb19c QtCore`QMetaMethod::invoke(QObject*, Qt::ConnectionType, QGenericReturnArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) const + 1308\r\n    frame #15: 0x0000000107d9ee01 QtTest`___lldb_unnamed_symbol11$$QtTest + 1169\r\n    frame #16: 0x0000000107d9fac9 QtTest`___lldb_unnamed_symbol13$$QtTest + 777\r\n    frame #17: 0x0000000107da09d7 QtTest`___lldb_unnamed_symbol17$$QtTest + 1031\r\n    frame #18: 0x0000000107da1557 QtTest`QTest::qRun() + 247\r\n    frame #19: 0x0000000107da11b0 QtTest`QTest::qExec(QObject*, int, char**) + 16\r\n    frame #20: 0x000000010524fb66 test_bitcoin-qt`main(argc=1, argv=0x00007fff5a9d19d8) at test_main.cpp:82\r\n    frame #21: 0x00007fffe7358235 libdyld.dylib`start + 1\r\n    frame #22: 0x00007fffe7358235 libdyld.dylib`start + 1\r\n  thread #2\r\n    frame #0: 0x00007fffe748744e libsystem_kernel.dylib`__workq_kernreturn + 10\r\n    frame #1: 0x00007fffe7571621 libsystem_pthread.dylib`_pthread_wqthread + 1426\r\n    frame #2: 0x00007fffe757107d libsystem_pthread.dylib`start_wqthread + 13\r\n  thread #3\r\n    frame #0: 0x00007fffe748744e libsystem_kernel.dylib`__workq_kernreturn + 10\r\n    frame #1: 0x00007fffe7571621 libsystem_pthread.dylib`_pthread_wqthread + 1426\r\n    frame #2: 0x00007fffe757107d libsystem_pthread.dylib`start_wqthread + 13\r\n  thread #4\r\n    frame #0: 0x00007fffe748744e libsystem_kernel.dylib`__workq_kernreturn + 10\r\n    frame #1: 0x00007fffe757148e libsystem_pthread.dylib`_pthread_wqthread + 1023\r\n    frame #2: 0x00007fffe757107d libsystem_pthread.dylib`start_wqthread + 13\r\n  thread #5, name = 'QThread'\r\n    frame #0: 0x00007fffe7486bf2 libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fffe75727fa libsystem_pthread.dylib`_pthread_cond_wait + 712\r\n    frame #2: 0x0000000107831c06 QtCore`___lldb_unnamed_symbol320$$QtCore + 294\r\n    frame #3: 0x000000010783195b QtCore`___lldb_unnamed_symbol319$$QtCore + 43\r\n    frame #4: 0x000000010783190c QtCore`QWaitCondition::wait(QMutex*, unsigned long) + 156\r\n    frame #5: 0x0000000107da6566 QtTest`___lldb_unnamed_symbol34$$QtTest + 70\r\n    frame #6: 0x00000001078303cc QtCore`___lldb_unnamed_symbol310$$QtCore + 364\r\n    frame #7: 0x00007fffe757193b libsystem_pthread.dylib`_pthread_body + 180\r\n    frame #8: 0x00007fffe7571887 libsystem_pthread.dylib`_pthread_start + 286\r\n    frame #9: 0x00007fffe757108d libsystem_pthread.dylib`thread_start + 13\r\n  thread #6\r\n    frame #0: 0x00007fffe748744e libsystem_kernel.dylib`__workq_kernreturn + 10\r\n    frame #1: 0x00007fffe7571621 libsystem_pthread.dylib`_pthread_wqthread + 1426\r\n    frame #2: 0x00007fffe757107d libsystem_pthread.dylib`start_wqthread + 13\r\n  thread #7\r\n    frame #0: 0x00007fffe748744e libsystem_kernel.dylib`__workq_kernreturn + 10\r\n    frame #1: 0x00007fffe7571621 libsystem_pthread.dylib`_pthread_wqthread + 1426\r\n    frame #2: 0x00007fffe757107d libsystem_pthread.dylib`start_wqthread + 13\r\n(lldb) quit\r\n========= End of stack trace ==============\r\nQFATAL : AppTests::appTests() Received signal 11\r\n         Function time: 143ms Total time: 144ms\r\nFAIL!  : AppTests::appTests() Received a fatal error.\r\n   Loc: [Unknown file(0)]\r\nTotals: 1 passed, 1 failed, 0 skipped, 0 blacklisted, 4580ms\r\n********* Finished testing of AppTests *********\r\nAbort trap: 6\r\n```",
      "created_at" : "2018-02-12T10:58:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11625#issuecomment-364889944",
      "id" : 364889944,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11625",
      "updated_at" : "2018-02-12T10:58:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/364889944",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   }
]
