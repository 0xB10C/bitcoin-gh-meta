[
   {
      "author_association" : "MEMBER",
      "body" : "Haven't looked at the code to deep. Using name based arguments rather then arguments by index would increase readability a lot (and we have the position already in the RPCTable).\r\nConcept ACK.",
      "created_at" : "2017-11-13T20:54:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#issuecomment-344054638",
      "id" : 344054638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11660",
      "updated_at" : "2017-11-13T20:54:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344054638",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky Ã°ÂÂÂ ",
      "created_at" : "2017-11-14T15:48:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#issuecomment-344301279",
      "id" : 344301279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11660",
      "updated_at" : "2017-11-14T15:48:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344301279",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150874001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150874001"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```cpp\r\nif (want_named_args == in.params.isObject()) {\r\n    return in;\r\n}\r\n\r\nif (want_named_args) {\r\n    return transformPositionalArguments(...);\r\n}\r\n\r\nreturn transformNamedArguments(...);\r\n```",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-14T15:51:12Z",
      "diff_hunk" : "@@ -471,6 +487,69 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     return out;\n }\n \n+/**\n+ * Process positional arguments into an Object of named arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformPositionalArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    if (in.params.size() > argNames.size()) {\n+        // Too many params, so just trigger help\n+        out.fHelp = true;\n+        return out;\n+    }\n+    out.params = UniValue(UniValue::VOBJ);\n+    out.params.pushKV(ARGS_WERE_POSITIONAL, true);\n+    for (size_t i = 0; i < in.params.size(); ++i) {\n+        const UniValue &val = in.params[i];\n+        const std::string &argNamePattern = argNames[i];\n+        if (argNamePattern == \"options\") {\n+            // Flatten options object\n+            if (!val.isObject()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"options parameter must be an Object\");\n+            }\n+            out.params.pushKVs(val);\n+        } else {\n+            std::vector<std::string> vargNames;\n+            boost::algorithm::split(vargNames, argNamePattern, boost::algorithm::is_any_of(\"|\"));\n+            for (const std::string & argName : vargNames) {\n+                out.params.pushKV(argName, val);\n+            }\n+        }\n+    }\n+    // Return request with positional arguments transformed to named arguments\n+    return out;\n+}\n+\n+static inline JSONRPCRequest transformArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames, const bool want_named_args)\n+{\n+    if (!want_named_args && !in.params.isObject()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150874001",
      "id" : 150874001,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 116,
      "path" : "src/rpc/server.cpp",
      "position" : 116,
      "pull_request_review_id" : 76489044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-14T16:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150874001",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150874652"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150874652"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`arg_names`.",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-14T15:53:09Z",
      "diff_hunk" : "@@ -471,6 +487,69 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     return out;\n }\n \n+/**\n+ * Process positional arguments into an Object of named arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformPositionalArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    if (in.params.size() > argNames.size()) {\n+        // Too many params, so just trigger help\n+        out.fHelp = true;\n+        return out;\n+    }\n+    out.params = UniValue(UniValue::VOBJ);\n+    out.params.pushKV(ARGS_WERE_POSITIONAL, true);\n+    for (size_t i = 0; i < in.params.size(); ++i) {\n+        const UniValue &val = in.params[i];\n+        const std::string &argNamePattern = argNames[i];\n+        if (argNamePattern == \"options\") {\n+            // Flatten options object\n+            if (!val.isObject()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"options parameter must be an Object\");\n+            }\n+            out.params.pushKVs(val);\n+        } else {\n+            std::vector<std::string> vargNames;\n+            boost::algorithm::split(vargNames, argNamePattern, boost::algorithm::is_any_of(\"|\"));\n+            for (const std::string & argName : vargNames) {\n+                out.params.pushKV(argName, val);\n+            }\n+        }\n+    }\n+    // Return request with positional arguments transformed to named arguments\n+    return out;\n+}\n+\n+static inline JSONRPCRequest transformArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames, const bool want_named_args)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150874652",
      "id" : 150874652,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 114,
      "path" : "src/rpc/server.cpp",
      "position" : 114,
      "pull_request_review_id" : 76489044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-14T16:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150874652",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150875214"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150875214"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "How about leaving options for other PR?",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-14T15:54:48Z",
      "diff_hunk" : "@@ -471,6 +487,69 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     return out;\n }\n \n+/**\n+ * Process positional arguments into an Object of named arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformPositionalArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    if (in.params.size() > argNames.size()) {\n+        // Too many params, so just trigger help\n+        out.fHelp = true;\n+        return out;\n+    }\n+    out.params = UniValue(UniValue::VOBJ);\n+    out.params.pushKV(ARGS_WERE_POSITIONAL, true);\n+    for (size_t i = 0; i < in.params.size(); ++i) {\n+        const UniValue &val = in.params[i];\n+        const std::string &argNamePattern = argNames[i];\n+        if (argNamePattern == \"options\") {\n+            // Flatten options object\n+            if (!val.isObject()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"options parameter must be an Object\");\n+            }\n+            out.params.pushKVs(val);\n+        } else {\n+            std::vector<std::string> vargNames;\n+            boost::algorithm::split(vargNames, argNamePattern, boost::algorithm::is_any_of(\"|\"));\n+            for (const std::string & argName : vargNames) {\n+                out.params.pushKV(argName, val);\n+            }\n+        }\n+    }\n+    // Return request with positional arguments transformed to named arguments\n+    return out;\n+}\n+\n+static inline JSONRPCRequest transformArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames, const bool want_named_args)\n+{\n+    if (!want_named_args && !in.params.isObject()) {\n+        // Already in desired form; no changes needed\n+        return in;\n+    }\n+    if (want_named_args) {\n+        if (in.params.isObject()) {\n+            const UniValue& options_val = in.params[\"options\"];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150875214",
      "id" : 150875214,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 122,
      "path" : "src/rpc/server.cpp",
      "position" : 122,
      "pull_request_review_id" : 76489044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-14T16:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150875214",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150875255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150875255"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove?",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-14T15:54:58Z",
      "diff_hunk" : "@@ -19,6 +20,8 @@\n \n static const unsigned int DEFAULT_RPC_SERIALIZE_VERSION = 1;\n \n+static const std::string ARGS_WERE_POSITIONAL = \"_positional\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150875255",
      "id" : 150875255,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 12,
      "path" : "src/rpc/server.h",
      "position" : 12,
      "pull_request_review_id" : 76489044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-14T16:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150875255",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150875317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150875317"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove or add usage?",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-14T15:55:08Z",
      "diff_hunk" : "@@ -471,6 +487,69 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     return out;\n }\n \n+/**\n+ * Process positional arguments into an Object of named arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformPositionalArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    if (in.params.size() > argNames.size()) {\n+        // Too many params, so just trigger help\n+        out.fHelp = true;\n+        return out;\n+    }\n+    out.params = UniValue(UniValue::VOBJ);\n+    out.params.pushKV(ARGS_WERE_POSITIONAL, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150875317",
      "id" : 150875317,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 92,
      "path" : "src/rpc/server.cpp",
      "position" : 92,
      "pull_request_review_id" : 76489044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-14T16:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150875317",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150880371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150880371"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "IMO `RPCTypeCheckObj` is not very elegant. Here argument type is checked, and below it is parsed (which can fail) and sometimes  it is validated (for instance out of bounds). Not to mention the \"argument is not required and can be null\" cases.\r\n\r\nSomething would be cleaner (don't mind the API):\r\n```cpp\r\nuint256 hash = RequestParamUint256(request, \"txid\");\r\n```\r\nAnd if it has a default argument then it is not required:\r\n```cpp\r\nbool replaceable = RequestParamBool(request, \"options.replaceable\", true);\r\n```\r\nSo the idea is that these `RequestParam*` calls check, parse and validate the argument.\r\n\r\nThis is obviously work for other PR, but if you drop the options *magic transformation* and `UniValueType` changes then there is no change here too.",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-14T16:09:59Z",
      "diff_hunk" : "@@ -3082,24 +3082,22 @@ UniValue bumpfee(const JSONRPCRequest& request)\n             HelpExampleCli(\"bumpfee\", \"<txid>\"));\n     }\n \n-    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VOBJ});\n+    RPCTypeCheckObj(request.params, {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150880371",
      "id" : 150880371,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 76489044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-14T16:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150880371",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150881800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150881800"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just `if (request.fHelp)`?",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-14T16:14:32Z",
      "diff_hunk" : "@@ -3035,7 +3035,7 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n         return NullUniValue;\n \n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+    if (request.fHelp || request.params[\"txid\"].isNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150881800",
      "id" : 150881800,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 5,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 76489044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-14T16:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150881800",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150883316"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150883316"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Unnecessary `()`.",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-14T16:19:15Z",
      "diff_hunk" : "@@ -83,21 +83,31 @@ void RPCTypeCheckObj(const UniValue& o,\n {\n     for (const auto& t : typesExpected) {\n         const UniValue& v = find_value(o, t.first);\n-        if (!fAllowNull && v.isNull())\n+        if (t.second.IsAllowed(v.type()) || (fAllowNull && v.isNull())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150883316",
      "id" : 150883316,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 5,
      "path" : "src/rpc/server.cpp",
      "position" : 5,
      "pull_request_review_id" : 76489044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-14T16:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150883316",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150883514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150883514"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove const from `want_named_args`.",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-14T16:19:51Z",
      "diff_hunk" : "@@ -471,6 +487,69 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     return out;\n }\n \n+/**\n+ * Process positional arguments into an Object of named arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformPositionalArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    if (in.params.size() > argNames.size()) {\n+        // Too many params, so just trigger help\n+        out.fHelp = true;\n+        return out;\n+    }\n+    out.params = UniValue(UniValue::VOBJ);\n+    out.params.pushKV(ARGS_WERE_POSITIONAL, true);\n+    for (size_t i = 0; i < in.params.size(); ++i) {\n+        const UniValue &val = in.params[i];\n+        const std::string &argNamePattern = argNames[i];\n+        if (argNamePattern == \"options\") {\n+            // Flatten options object\n+            if (!val.isObject()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"options parameter must be an Object\");\n+            }\n+            out.params.pushKVs(val);\n+        } else {\n+            std::vector<std::string> vargNames;\n+            boost::algorithm::split(vargNames, argNamePattern, boost::algorithm::is_any_of(\"|\"));\n+            for (const std::string & argName : vargNames) {\n+                out.params.pushKV(argName, val);\n+            }\n+        }\n+    }\n+    // Return request with positional arguments transformed to named arguments\n+    return out;\n+}\n+\n+static inline JSONRPCRequest transformArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames, const bool want_named_args)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r150883514",
      "id" : 150883514,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 114,
      "path" : "src/rpc/server.cpp",
      "position" : 114,
      "pull_request_review_id" : 76489044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-14T16:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150883514",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151183775"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151183775"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Necessary for readable clarity...?",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-15T16:45:10Z",
      "diff_hunk" : "@@ -83,21 +83,31 @@ void RPCTypeCheckObj(const UniValue& o,\n {\n     for (const auto& t : typesExpected) {\n         const UniValue& v = find_value(o, t.first);\n-        if (!fAllowNull && v.isNull())\n+        if (t.second.IsAllowed(v.type()) || (fAllowNull && v.isNull())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151183775",
      "id" : 151183775,
      "in_reply_to_id" : 150883316,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 5,
      "path" : "src/rpc/server.cpp",
      "position" : 5,
      "pull_request_review_id" : 76850892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-15T16:45:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151183775",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151184570"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151184570"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's intended for #11413",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-15T16:47:43Z",
      "diff_hunk" : "@@ -471,6 +487,69 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     return out;\n }\n \n+/**\n+ * Process positional arguments into an Object of named arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformPositionalArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    if (in.params.size() > argNames.size()) {\n+        // Too many params, so just trigger help\n+        out.fHelp = true;\n+        return out;\n+    }\n+    out.params = UniValue(UniValue::VOBJ);\n+    out.params.pushKV(ARGS_WERE_POSITIONAL, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151184570",
      "id" : 151184570,
      "in_reply_to_id" : 150875317,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 92,
      "path" : "src/rpc/server.cpp",
      "position" : 92,
      "pull_request_review_id" : 76851765,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-15T16:47:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151184570",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151184652"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151184652"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why?",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-15T16:47:59Z",
      "diff_hunk" : "@@ -471,6 +487,69 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     return out;\n }\n \n+/**\n+ * Process positional arguments into an Object of named arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformPositionalArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    if (in.params.size() > argNames.size()) {\n+        // Too many params, so just trigger help\n+        out.fHelp = true;\n+        return out;\n+    }\n+    out.params = UniValue(UniValue::VOBJ);\n+    out.params.pushKV(ARGS_WERE_POSITIONAL, true);\n+    for (size_t i = 0; i < in.params.size(); ++i) {\n+        const UniValue &val = in.params[i];\n+        const std::string &argNamePattern = argNames[i];\n+        if (argNamePattern == \"options\") {\n+            // Flatten options object\n+            if (!val.isObject()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"options parameter must be an Object\");\n+            }\n+            out.params.pushKVs(val);\n+        } else {\n+            std::vector<std::string> vargNames;\n+            boost::algorithm::split(vargNames, argNamePattern, boost::algorithm::is_any_of(\"|\"));\n+            for (const std::string & argName : vargNames) {\n+                out.params.pushKV(argName, val);\n+            }\n+        }\n+    }\n+    // Return request with positional arguments transformed to named arguments\n+    return out;\n+}\n+\n+static inline JSONRPCRequest transformArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames, const bool want_named_args)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151184652",
      "id" : 151184652,
      "in_reply_to_id" : 150883514,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 114,
      "path" : "src/rpc/server.cpp",
      "position" : 114,
      "pull_request_review_id" : 76851858,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-15T16:47:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151184652",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151184839"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151184839"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That will fail to flatten `options`",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-15T16:48:38Z",
      "diff_hunk" : "@@ -471,6 +487,69 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     return out;\n }\n \n+/**\n+ * Process positional arguments into an Object of named arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformPositionalArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    if (in.params.size() > argNames.size()) {\n+        // Too many params, so just trigger help\n+        out.fHelp = true;\n+        return out;\n+    }\n+    out.params = UniValue(UniValue::VOBJ);\n+    out.params.pushKV(ARGS_WERE_POSITIONAL, true);\n+    for (size_t i = 0; i < in.params.size(); ++i) {\n+        const UniValue &val = in.params[i];\n+        const std::string &argNamePattern = argNames[i];\n+        if (argNamePattern == \"options\") {\n+            // Flatten options object\n+            if (!val.isObject()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"options parameter must be an Object\");\n+            }\n+            out.params.pushKVs(val);\n+        } else {\n+            std::vector<std::string> vargNames;\n+            boost::algorithm::split(vargNames, argNamePattern, boost::algorithm::is_any_of(\"|\"));\n+            for (const std::string & argName : vargNames) {\n+                out.params.pushKV(argName, val);\n+            }\n+        }\n+    }\n+    // Return request with positional arguments transformed to named arguments\n+    return out;\n+}\n+\n+static inline JSONRPCRequest transformArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames, const bool want_named_args)\n+{\n+    if (!want_named_args && !in.params.isObject()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151184839",
      "id" : 151184839,
      "in_reply_to_id" : 150874001,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 116,
      "path" : "src/rpc/server.cpp",
      "position" : 116,
      "pull_request_review_id" : 76852072,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-15T16:48:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151184839",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151184981"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151184981"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's needed for options-using RPCs...",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-15T16:49:04Z",
      "diff_hunk" : "@@ -471,6 +487,69 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     return out;\n }\n \n+/**\n+ * Process positional arguments into an Object of named arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformPositionalArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    if (in.params.size() > argNames.size()) {\n+        // Too many params, so just trigger help\n+        out.fHelp = true;\n+        return out;\n+    }\n+    out.params = UniValue(UniValue::VOBJ);\n+    out.params.pushKV(ARGS_WERE_POSITIONAL, true);\n+    for (size_t i = 0; i < in.params.size(); ++i) {\n+        const UniValue &val = in.params[i];\n+        const std::string &argNamePattern = argNames[i];\n+        if (argNamePattern == \"options\") {\n+            // Flatten options object\n+            if (!val.isObject()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"options parameter must be an Object\");\n+            }\n+            out.params.pushKVs(val);\n+        } else {\n+            std::vector<std::string> vargNames;\n+            boost::algorithm::split(vargNames, argNamePattern, boost::algorithm::is_any_of(\"|\"));\n+            for (const std::string & argName : vargNames) {\n+                out.params.pushKV(argName, val);\n+            }\n+        }\n+    }\n+    // Return request with positional arguments transformed to named arguments\n+    return out;\n+}\n+\n+static inline JSONRPCRequest transformArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames, const bool want_named_args)\n+{\n+    if (!want_named_args && !in.params.isObject()) {\n+        // Already in desired form; no changes needed\n+        return in;\n+    }\n+    if (want_named_args) {\n+        if (in.params.isObject()) {\n+            const UniValue& options_val = in.params[\"options\"];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151184981",
      "id" : 151184981,
      "in_reply_to_id" : 150875214,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 122,
      "path" : "src/rpc/server.cpp",
      "position" : 122,
      "pull_request_review_id" : 76852236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-15T16:49:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151184981",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151185128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151185128"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That would change behaviour.",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-15T16:49:25Z",
      "diff_hunk" : "@@ -3035,7 +3035,7 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n         return NullUniValue;\n \n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+    if (request.fHelp || request.params[\"txid\"].isNull()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151185128",
      "id" : 151185128,
      "in_reply_to_id" : 150881800,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 5,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 76852401,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-15T16:49:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151185128",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151185443"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151185443"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How would we detect unexpected params?",
      "commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "created_at" : "2017-11-15T16:50:29Z",
      "diff_hunk" : "@@ -3082,24 +3082,22 @@ UniValue bumpfee(const JSONRPCRequest& request)\n             HelpExampleCli(\"bumpfee\", \"<txid>\"));\n     }\n \n-    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VOBJ});\n+    RPCTypeCheckObj(request.params, {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#discussion_r151185443",
      "id" : 151185443,
      "in_reply_to_id" : 150880371,
      "original_commit_id" : "2ca71c09a977a14d240ea558accbe3d1dc38ec3a",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 76852757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11660",
      "updated_at" : "2017-11-15T16:50:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151185443",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've had a quick skim and this looks like a good, clean change that maintains backwards-compatibility. @luke-jr, just so I understand the reasoning here, can you explain what the longer-term plan is:\r\n\r\n- as it stands, this PR maintains backward-compatible support for positional arguments, I assume any future PRs would do the same?\r\n- is the plan to slowly move all RPC methods to have `named_args` set to `true`, and then remove the bool and special behaviour?\r\n- Are you also planning to remove the `options` arguments and flatten them down into the regular arguments list?\r\n- Changing `bumpfee` to use the new pattern adds a `RPCTypeCheckObj()` call to the top of the function. I suppose that will be the case for all RPCs, or could we build something into the RPC framework to make that checking automatic?",
      "created_at" : "2017-11-15T19:58:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#issuecomment-344710437",
      "id" : 344710437,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11660",
      "updated_at" : "2017-11-15T19:58:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344710437",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> as it stands, this PR maintains backward-compatible support for positional arguments, I assume any future PRs would do the same?\r\n\r\nPositional arguments are still fully supported. (No \"backward\" about it...)\r\n\r\n> is the plan to slowly move all RPC methods to have named_args set to true, and then remove the bool and special behaviour?\r\n\r\nRight\r\n\r\n> Are you also planning to remove the options arguments and flatten them down into the regular arguments list?\r\n\r\nThat's what this does already...?\r\n\r\n> Changing bumpfee to use the new pattern adds a RPCTypeCheckObj() call to the top of the function. I suppose that will be the case for all RPCs, or could we build something into the RPC framework to make that checking automatic?\r\n\r\nI think it's best to have as much of the stuff for a given RPC with it in the code. We already have this for most things.",
      "created_at" : "2017-11-15T20:06:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#issuecomment-344712537",
      "id" : 344712537,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11660",
      "updated_at" : "2017-11-15T20:06:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344712537",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">> Are you also planning to remove the options arguments and flatten them down into the regular arguments list?\r\n\r\n> That's what this does already...?\r\n\r\nPerhaps I was unclear - is the plan to remove the 'options' argument in the help text so that the 'standard' way to call the RPC is with the options as key-values in the request rather than in an options object in the request?",
      "created_at" : "2017-11-15T20:09:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11660#issuecomment-344713438",
      "id" : 344713438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11660",
      "updated_at" : "2017-11-15T20:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344713438",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
