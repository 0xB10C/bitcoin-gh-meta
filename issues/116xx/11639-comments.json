[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased.",
      "created_at" : "2017-12-15T22:10:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-352124547",
      "id" : 352124547,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2017-12-15T22:10:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352124547",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158033628"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158033628"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Also BOOST_CHECK_EQUAL?",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2017-12-20T14:15:55Z",
      "diff_hunk" : "@@ -53,9 +53,8 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\n     BOOST_CHECK(state.IsInvalid());\n     BOOST_CHECK_EQUAL(state.GetRejectReason(), \"coinbase\");\n \n-    int nDoS;\n-    BOOST_CHECK_EQUAL(state.IsInvalid(nDoS), true);\n-    BOOST_CHECK_EQUAL(nDoS, 100);\n+    BOOST_CHECK_EQUAL(state.IsInvalid(), true);\n+    BOOST_CHECK(state.GetReason() == ValidationInvalidReason::CONSENSUS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158033628",
      "id" : 158033628,
      "original_commit_id" : "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "original_position" : 8,
      "path" : "src/test/txvalidation_tests.cpp",
      "position" : 8,
      "pull_request_review_id" : 84774914,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158033628",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158036096"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158036096"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Make it `CONSENSUS` only if `NOT_STANDARD`? I know that atm only those 2 are set but, imo, it's more clear to do so inside that condition:\r\n```cpp\r\nif (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\r\n    state.Invalid(ValidationInvalidReason::CONSENSUS, ...);\r\n}\r\n```\r\nThe same happens in line 1951.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2017-12-20T14:25:50Z",
      "diff_hunk" : "@@ -1906,11 +1907,15 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                // its nonsense for a block, so we reset the reason flag to CONSENSUS here.\n+                state.Invalid(ValidationInvalidReason::CONSENSUS, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158036096",
      "id" : 158036096,
      "original_commit_id" : "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "original_position" : 244,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 84774914,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158036096",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158605611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158605611"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Doesn't compile as GetReason() can't be printed.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2017-12-24T16:27:58Z",
      "diff_hunk" : "@@ -53,9 +53,8 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\n     BOOST_CHECK(state.IsInvalid());\n     BOOST_CHECK_EQUAL(state.GetRejectReason(), \"coinbase\");\n \n-    int nDoS;\n-    BOOST_CHECK_EQUAL(state.IsInvalid(nDoS), true);\n-    BOOST_CHECK_EQUAL(nDoS, 100);\n+    BOOST_CHECK_EQUAL(state.IsInvalid(), true);\n+    BOOST_CHECK(state.GetReason() == ValidationInvalidReason::CONSENSUS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158605611",
      "id" : 158605611,
      "in_reply_to_id" : 158033628,
      "original_commit_id" : "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "original_position" : 8,
      "path" : "src/test/txvalidation_tests.cpp",
      "position" : 8,
      "pull_request_review_id" : 85444994,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158605611",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158605955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158605955"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2017-12-24T16:45:29Z",
      "diff_hunk" : "@@ -1906,11 +1907,15 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                // its nonsense for a block, so we reset the reason flag to CONSENSUS here.\n+                state.Invalid(ValidationInvalidReason::CONSENSUS, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r158605955",
      "id" : 158605955,
      "in_reply_to_id" : 158036096,
      "original_commit_id" : "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "original_position" : 244,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 85445303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158605955",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160381451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160381451"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ATM `CheckTxInputs` set `MISSING_INPUTS` and `CONSENSUS` reasons and only makes sense to override when reason is `MISSING_INPUTS`:\r\n```cpp\r\nif (state.GetReason() == ValidationInvalidReason::MISSING_INPUTS) {\r\n    state.Invalid(ValidationInvalidReason::CONSENSUS, ...);\r\n}\r\n```\r\n  ",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-01-09T11:27:02Z",
      "diff_hunk" : "@@ -1906,11 +1907,15 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                // its nonsense for a block, so we reset the reason flag to CONSENSUS here.\n+                state.Invalid(ValidationInvalidReason::CONSENSUS, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160381451",
      "id" : 160381451,
      "in_reply_to_id" : 158036096,
      "original_commit_id" : "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "original_position" : 244,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 87486202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160381451",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160383713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160383713"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`ValidationInvalidReason::NONE` instead?\r\n  ",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-01-09T11:38:26Z",
      "diff_hunk" : "@@ -22,6 +22,32 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    VALID,           //!< not actually invalid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160383713",
      "id" : 160383713,
      "original_commit_id" : "2a117b2cc3a9a257f30312841f5d3f126d631cb7",
      "original_position" : 12,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 87486202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160383713",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160538094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160538094"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Errrr....fixed, actually this time.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-01-09T22:04:24Z",
      "diff_hunk" : "@@ -1906,11 +1907,15 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                // its nonsense for a block, so we reset the reason flag to CONSENSUS here.\n+                state.Invalid(ValidationInvalidReason::CONSENSUS, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160538094",
      "id" : 160538094,
      "in_reply_to_id" : 158036096,
      "original_commit_id" : "09dca76d6769cd3f1c8954f649fac5fd4c88c1a2",
      "original_position" : 244,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 87673566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160538094",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160538115"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160538115"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Sure, sounds good.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-01-09T22:04:30Z",
      "diff_hunk" : "@@ -22,6 +22,32 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    VALID,           //!< not actually invalid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r160538115",
      "id" : 160538115,
      "in_reply_to_id" : 160383713,
      "original_commit_id" : "2a117b2cc3a9a257f30312841f5d3f126d631cb7",
      "original_position" : 12,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 87673597,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160538115",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171021132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171021132"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The arguments don't match here:\r\n```\r\nvalidation.cpp:1921:79: error: no viable conversion from 'std::string' (aka 'basic_string<char, char_traits<char>, allocator<char> >') to 'bool'\r\n                              state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\r\n```\r\nbut more generally I think this would be a lot more readable if we could just add an explicit way to set the invalid reason on a CValidationState, rather than invoke DoS() in this way (here and elsewhere as well).",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-02-27T18:30:07Z",
      "diff_hunk" : "@@ -1906,11 +1914,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                if (state.GetReason() == ValidationInvalidReason::MISSING_INPUTS) {\n+                    // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                    // its nonsense for a block, so we reset the reason flag to CONSENSUS here.\n+                    state.DoS(state.GetDoS(), ValidationInvalidReason::CONSENSUS, false,\n+                              state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171021132",
      "id" : 171021132,
      "original_commit_id" : "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "original_position" : 230,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 99801359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171021132",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171022331"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171022331"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't quite understand this comment?",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-02-27T18:34:21Z",
      "diff_hunk" : "@@ -765,6 +765,73 @@ void Misbehaving(NodeId pnode, int howmuch)\n         LogPrintf(\"%s: %s peer=%d (%d -> %d)\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171022331",
      "id" : 171022331,
      "original_commit_id" : "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "original_position" : 14,
      "path" : "src/net_processing.cpp",
      "position" : 14,
      "pull_request_review_id" : 99802794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171022331",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171022830"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171022830"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I personally find this fall-through for the non-compact block case harder to follow and more fragile than having each case end with a return or break.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-02-27T18:36:09Z",
      "diff_hunk" : "@@ -765,6 +765,73 @@ void Misbehaving(NodeId pnode, int howmuch)\n         LogPrintf(\"%s: %s peer=%d (%d -> %d)\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171022830",
      "id" : 171022830,
      "original_commit_id" : "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "original_position" : 18,
      "path" : "src/net_processing.cpp",
      "position" : 18,
      "pull_request_review_id" : 99802794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171022830",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171033168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171033168"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this should probably be CONSENSUS rather than SOFT_FORK.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-02-27T19:09:23Z",
      "diff_hunk" : "@@ -1866,7 +1874,7 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         for (const auto& tx : block.vtx) {\n             for (size_t o = 0; o < tx->vout.size(); o++) {\n                 if (view.HaveCoin(COutPoint(tx->GetHash(), o))) {\n-                    return state.DoS(100, error(\"ConnectBlock(): tried to overwrite transaction\"),\n+                    return state.DoS(100, ValidationInvalidReason::SOFT_FORK, error(\"ConnectBlock(): tried to overwrite transaction\"),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171033168",
      "id" : 171033168,
      "original_commit_id" : "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "original_position" : 218,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 99802794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171033168",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171035667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171035667"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note that this could be \"SOFT_FORK\" (BIP 113).  But as I wrote elsewhere I think we should just use CONSENSUS everywhere in place of SOFT_FORK, for now.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-02-27T19:16:57Z",
      "diff_hunk" : "@@ -3136,7 +3164,7 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // Check that all transactions are finalized\n     for (const auto& tx : block.vtx) {\n         if (!IsFinalTx(*tx, nHeight, nLockTimeCutoff)) {\n-            return state.DoS(10, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");\n+            return state.DoS(10, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171035667",
      "id" : 171035667,
      "original_commit_id" : "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "original_position" : 404,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 99802794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171035667",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171036526"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171036526"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we're going to use this line of reasoning, then I think we may as well also not use SOFT_FORK anywhere else either (at least for invalid blocks, perhaps loose transactions should be different) -- presumably no nodes that support segwit validation should be unaware of any of the prior soft forks.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-02-27T19:19:45Z",
      "diff_hunk" : "@@ -3194,7 +3222,9 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // the block hash, so we couldn't mark the block as permanently\n     // failed).\n     if (GetBlockWeight(block) > MAX_BLOCK_WEIGHT) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));\n+        // We can call this a consensus failure as any data-providers who provided\n+        // us with witness data can be expected to support SegWit validation.\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171036526",
      "id" : 171036526,
      "original_commit_id" : "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "original_position" : 447,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 99802794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171036526",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171042519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171042519"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1) As all parallel-validation script failures are SOFT_FORK further down, I think we ought to make the non-parallel validation case be the same, rather than filter for NOT_STANDARD first.\r\n2) Since our blocks are only coming from segwit peers, I actually think we should just change all these to CONSENSUS anyway, and leave a comment explaining that when we deploy a new soft fork, we need to be careful about not splitting the network.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-02-27T19:39:27Z",
      "diff_hunk" : "@@ -1934,17 +1948,25 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::SOFT_FORK, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as its nonsense, so we reset the\n+                    // reason flag to SOFT_FORK here.\n+                    state.DoS(state.GetDoS(), ValidationInvalidReason::SOFT_FORK, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171042519",
      "id" : 171042519,
      "original_commit_id" : "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "original_position" : 269,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 99802794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171042519",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171045987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171045987"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not really obvious here why we use MUTATED rather than WITNESS_MUTATED, here and in the next few lines (other than needing to match the code in InvalidBlockFound() and AcceptBlock(), which only check against MUTATED). Perhaps add a comment explaining the usage somewhere?",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-02-27T19:51:26Z",
      "diff_hunk" : "@@ -3168,11 +3189,11 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n             // already does not permit it, it is impossible to trigger in the\n             // witness tree.\n             if (block.vtx[0]->vin[0].scriptWitness.stack.size() != 1 || block.vtx[0]->vin[0].scriptWitness.stack[0].size() != 32) {\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-witness-nonce-size\", true, strprintf(\"%s : invalid witness nonce size\", __func__));\n+                return state.Invalid(ValidationInvalidReason::MUTATED, false, REJECT_INVALID, \"bad-witness-nonce-size\", strprintf(\"%s : invalid witness nonce size\", __func__));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171045987",
      "id" : 171045987,
      "original_commit_id" : "f2c33c3f19bf88064d38e4c7c02a8a4eb55fbb71",
      "original_position" : 447,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 99802794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171045987",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171877060"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171877060"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We should figure out where we want to draw a line between CONSENSUS (ban the peer) and SOFT_FORK (ignore the peer). Obviously this case *is* a SOFT_FORK, but at this point its so old that it may not be worth keeping that distinction. I aired on the side of \"let any node, no matter how old, not get banned\" in general.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-03-02T15:29:26Z",
      "diff_hunk" : "@@ -1866,7 +1874,7 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         for (const auto& tx : block.vtx) {\n             for (size_t o = 0; o < tx->vout.size(); o++) {\n                 if (view.HaveCoin(COutPoint(tx->GetHash(), o))) {\n-                    return state.DoS(100, error(\"ConnectBlock(): tried to overwrite transaction\"),\n+                    return state.DoS(100, ValidationInvalidReason::SOFT_FORK, error(\"ConnectBlock(): tried to overwrite transaction\"),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171877060",
      "id" : 171877060,
      "in_reply_to_id" : 171033168,
      "original_commit_id" : "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "original_position" : 218,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 100811060,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171877060",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171877364"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171877364"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "WITNESS_MUTATED is only for transactions. In the future we could separate out the InvalidReason into two different ones for transactions/blocks.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-03-02T15:30:27Z",
      "diff_hunk" : "@@ -3168,11 +3189,11 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n             // already does not permit it, it is impossible to trigger in the\n             // witness tree.\n             if (block.vtx[0]->vin[0].scriptWitness.stack.size() != 1 || block.vtx[0]->vin[0].scriptWitness.stack[0].size() != 32) {\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-witness-nonce-size\", true, strprintf(\"%s : invalid witness nonce size\", __func__));\n+                return state.Invalid(ValidationInvalidReason::MUTATED, false, REJECT_INVALID, \"bad-witness-nonce-size\", strprintf(\"%s : invalid witness nonce size\", __func__));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171877364",
      "id" : 171877364,
      "in_reply_to_id" : 171045987,
      "original_commit_id" : "f2c33c3f19bf88064d38e4c7c02a8a4eb55fbb71",
      "original_position" : 447,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 100811440,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171877364",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171878154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171878154"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Huh? Doing so would break the ability of a pre-segwit node to provide us a non-segwit-but-valid block. Further, this line of reasoning does *not* assume that we only download blocks from segwit-enabled peers (which may be the case in practice in our current net layer, but making that assumption strong in validation seems bad). The line of reasoning here is only applicable to nodes that *provided* the witness, not nodes that (for some reason) does not.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-03-02T15:33:12Z",
      "diff_hunk" : "@@ -3194,7 +3222,9 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // the block hash, so we couldn't mark the block as permanently\n     // failed).\n     if (GetBlockWeight(block) > MAX_BLOCK_WEIGHT) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));\n+        // We can call this a consensus failure as any data-providers who provided\n+        // us with witness data can be expected to support SegWit validation.\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171878154",
      "id" : 171878154,
      "in_reply_to_id" : 171036526,
      "original_commit_id" : "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "original_position" : 447,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 100812379,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171878154",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171878581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171878581"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm confused. The NOT_STANDARD return here is to keep behavior the same for transactions as well as blocks. NOT_STANDARD is not a valid response for block ValidationReasons, so we have to swap it here.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-03-02T15:34:51Z",
      "diff_hunk" : "@@ -1934,17 +1948,25 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::SOFT_FORK, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as its nonsense, so we reset the\n+                    // reason flag to SOFT_FORK here.\n+                    state.DoS(state.GetDoS(), ValidationInvalidReason::SOFT_FORK, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r171878581",
      "id" : 171878581,
      "in_reply_to_id" : 171042519,
      "original_commit_id" : "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "original_position" : 269,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 100812909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/171878581",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Commented on the points I disagreed with, I obviously strongly disagree about making assumptions about the net_processing layer in validation, as that's been one of my overarching goals over the past few years. Will address the other points when I get a chance to rebase.",
      "created_at" : "2018-03-02T15:35:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-369954899",
      "id" : 369954899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2018-03-02T15:35:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/369954899",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r172050340"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172050340"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Re 1), I'm just saying that we should always rewrite the reason to be the same as we'd get if we did parallel validation (which is SOFT_FORK in this PR currently), versus only return SOFT_FORK if the reason was NOT_STANDARD.  It doesn't really make sense for ConnectBlock() to behave differently with regard to error codes if using single vs parallel script checking.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-03-04T14:23:05Z",
      "diff_hunk" : "@@ -1934,17 +1948,25 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::SOFT_FORK, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as its nonsense, so we reset the\n+                    // reason flag to SOFT_FORK here.\n+                    state.DoS(state.GetDoS(), ValidationInvalidReason::SOFT_FORK, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r172050340",
      "id" : 172050340,
      "in_reply_to_id" : 171042519,
      "original_commit_id" : "0272d2e808024ccf14afef236b673dad9ae0bdd5",
      "original_position" : 269,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 101007263,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172050340",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The more I think about this, the more I think we should drop the distinction between \"SOFT_FORK\" and \"CONSENSUS\" altogether.  At least when it comes to block processing, the only concept that matters is CONSENSUS.\r\n\r\nThe reason we care to distinguish SOFT_FORK from CONSENSUS is to highlight recent rule changes that our peers may not know about, so that the net_processing layer can optionally do something different for SOFT_FORK violations than it would do for CONSENSUS violations.  However I don't think this is a terribly meaningful distinction.  The main goals of the net_processing/net layers, with respect to these validation issues, is:\r\n * keep us connected to the honest network\r\n * prevent attackers from DoS'ing us\r\n * don't needlessly partition old nodes that have fallen back to SPV security because they're unaware of the consensus rules\r\n\r\nSo what is our strategy for each of these points?  For keeping us connected to the honest network, I think we mainly rely on having robust outbound peers -- any outbound peer that is not enforcing all the consensus rules should be disconnected.  Combined with the mitigations we deployed last fall for outbound peers whose tips aren't keeping up, and for protection in the case that our tip hasn't advanced in a while, I believe this is sufficient.  (See https://gist.github.com/sdaftuar/c2a3320c751efb078a7c1fd834036cb0 for more details around my thinking here.)\r\n\r\nFor not needlessly partitioning old nodes -- I think it's sufficient to not disconnect inbound peers that relay blocks that violate consensus rules, regardless of whether the rule is a recent soft fork or not.\r\n\r\nAnd to prevent DoS -- I think we just ensure that any blocks have valid proof-of-work, combined with protections against processing blocks that are too far behind our tip (or on a too-little-work-chain).\r\n\r\nIn all of these cases, I don't think we need to distinguish \"SOFT_FORK\" from \"CONSENSUS\".  And as its pretty arbitrary about when to decide to move something from the SOFT_FORK designation to CONSENSUS, I think we may as well not bother.",
      "created_at" : "2018-03-04T14:38:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-370234133",
      "id" : 370234133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2018-03-04T14:39:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370234133",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Discussed this offline with @sdaftuar for a bit - I'm OK with redefining \"SOFT_FORK\" to mean \"any future SOFT_FORK after segwit, so is currently unused\", but I'd rather leave it there as we'd certainly need it for \"any future SOFT_FORK\". Happy to do so if others like. Still want more review here, though.",
      "created_at" : "2018-04-05T15:52:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-378984143",
      "id" : 378984143,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2018-04-05T15:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378984143",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "No objection to leaving \"SOFT_FORK\" in for future use (even if I'm not sure we'll ever use it, I am open to being convinced).  Nit: I would somewhat prefer to call it something other than \"SOFT_FORK\" -- perhaps \"RECENT_CONSENSUS_CHANGE\" or something else that indicates the relevant substance rather than the form? ",
      "created_at" : "2018-04-05T17:01:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-379005876",
      "id" : 379005876,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2018-04-05T17:01:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379005876",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Big concept ACK, I'm happy to see the DoS scores get out of the network processing logic.\r\n\r\nAs for SOFT_FORK vs CONSENSUS: I like calling it `RECENT_CONSENSUS_CHANGE` or something similar, and making it match whatever we're currently not banning for. The discussion about how to deal with softforks and banning and DoS protection in general is more complicated and can be continued later.",
      "created_at" : "2018-04-05T18:15:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-379029154",
      "id" : 379029154,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2018-04-05T18:17:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379029154",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa well, current master consider RECENT_CONSENSUS_CHANGE/not-banning as any soft fork, ever, kinda, but also some other stuff, but not SegWit things. Its kinda a grab-bag as @sdaftuar points out. This PR cleaned it up somewhat but aired on the side of \"all soft-forks\", @sdaftuar wants it to air more on the side of \"things after segwit\", which I think makes sense. Leaving it the way it is on master kinda makes no sense (and would be hard to do).",
      "created_at" : "2018-04-05T18:47:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-379038624",
      "id" : 379038624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2018-04-05T18:47:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379038624",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "In the interests of advancing this refactor, I'm fine with doing whatever is least controversial (presumably, less change to existing behavior) in this PR, and saving the larger behavioral changes for a future PR.",
      "created_at" : "2018-04-05T20:15:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-379062592",
      "id" : 379062592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2018-04-05T20:15:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379062592",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased and changed SOFT_FORK to RECENT_CONSENSUS_CHANGE, redefining it to mean \"change more recent than segwit\" (ie it is currently unused, as @sdaftuar requested).",
      "created_at" : "2018-04-16T17:11:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-381679879",
      "id" : 381679879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2018-04-16T17:11:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381679879",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ack to the motivation - while validation shouldn't be deciding how many points to assign peers, you could argue that it should be telling net processing \"this is rejected because I don't have enough information to assess that it is valid\" vs. \"this is invalid because it was maliciously constructed\" - it would be nice from a readability perspective if that were more immediately apparent (e.g. by categorizing the reason names or the like)",
      "created_at" : "2018-04-16T17:12:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-381680248",
      "id" : 381680248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2018-04-16T17:12:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381680248",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the only cases where we can say \"I'm missing something this is based on\" is ValidationInvalidReason::MISSING_PREV and MISSING_INPUTS, which are pretty self-explanitory. Open to suggestions if you had something else in mind (or a comment to clarify).",
      "created_at" : "2018-04-16T17:32:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-381686281",
      "id" : 381686281,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2018-04-16T17:32:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381686281",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181833367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181833367"
         }
      },
      "author_association" : "MEMBER",
      "body" : "from the linter: \"All calls to LogPrintf() should be terminated with \\n\"",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T18:01:49Z",
      "diff_hunk" : "@@ -3065,28 +3084,30 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, false))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, false)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181833367",
      "id" : 181833367,
      "original_commit_id" : "f22fdb51afb0965f78efd70155bf5e327fbf7ffb",
      "original_position" : 380,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 112526654,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T18:30:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181833367",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181856096"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181856096"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not a big fan of these colorful comments - mainly because without context, it's difficult for new contributors to understand the spirit in which they were written.\r\n\r\nCan we keep them a bit more precise, eg `A reason why something was invalid. This is used to determine what action to take towards the provider of the object (eg disconnect, ban, etc).`",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T19:21:14Z",
      "diff_hunk" : "@@ -22,6 +22,39 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181856096",
      "id" : 181856096,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 4,
      "path" : "src/consensus/validation.h",
      "position" : 4,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181856096",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181857895"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181857895"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I find this comment really difficult to parse. What are the witness's important clients? Also, please remove `bother to`.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T19:27:50Z",
      "diff_hunk" : "@@ -560,28 +560,31 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n \n     // Coinbase is only valid in a block, not as a loose transaction\n     if (tx.IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"coinbase\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"coinbase\");\n \n     // Reject transactions with witness before segregated witness activates (override with -prematurewitness)\n     bool witnessEnabled = IsWitnessEnabled(chainActive.Tip(), chainparams.GetConsensus());\n     if (!gArgs.GetBoolArg(\"-prematurewitness\", false) && tx.HasWitness() && !witnessEnabled) {\n-        return state.DoS(0, false, REJECT_NONSTANDARD, \"no-witness-yet\", true);\n+        // We call this WITNESS_MUTATED because we don't bother to check if the witness was maybe garbage\n+        // and its important clients realize that they shouldn't assume the witness indicated the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181857895",
      "id" : 181857895,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 12,
      "path" : "src/validation.cpp",
      "position" : 12,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181857895",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181859175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181859175"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems to contradict the comment above `we still consider this an invalid rather than merely non-standard transaction.` Perhaps update the comment?",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T19:32:18Z",
      "diff_hunk" : "@@ -710,21 +713,21 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n         // merely non-standard transaction.\n         if (nSigOpsCost > MAX_STANDARD_TX_SIGOPS_COST)\n-            return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\", false,\n+            return state.Invalid(ValidationInvalidReason::NOT_STANDARD, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181859175",
      "id" : 181859175,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 83,
      "path" : "src/validation.cpp",
      "position" : 83,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181859175",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181860495"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181860495"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps update comment above, which talks about DoS banning nodes.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T19:37:11Z",
      "diff_hunk" : "@@ -1422,7 +1423,7 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                     // as to the correct behavior - we may want to continue\n                     // peering with non-upgraded nodes even after soft-fork\n                     // super-majority signaling has occurred.\n-                    return state.DoS(100,false, REJECT_INVALID, strprintf(\"mandatory-script-verify-flag-failed (%s)\", ScriptErrorString(check.GetScriptError())));\n+                    return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, strprintf(\"mandatory-script-verify-flag-failed (%s)\", ScriptErrorString(check.GetScriptError())));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181860495",
      "id" : 181860495,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 225,
      "path" : "src/validation.cpp",
      "position" : 225,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181860495",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181863702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181863702"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This comment would be clearer if it explained *why* the reason needs to be changed, rather than just asserting that \"its nonsense\". Perhaps something like:\r\n\r\n```\r\n`MISSING_INPUTS` is a legitimate `InvalidReason` for a transaction, but not for a block. If one of the block's transactions is missing inputs, then the block is consensus invalid. Update the `InvalidReason`.\r\n```\r\n\r\nSame for the other 'nonsense' comment below.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T19:49:33Z",
      "diff_hunk" : "@@ -1971,11 +1972,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                if (state.GetReason() == ValidationInvalidReason::MISSING_INPUTS) {\n+                    // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                    // its nonsense for a block, so we reset the reason flag to CONSENSUS here.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181863702",
      "id" : 181863702,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 253,
      "path" : "src/validation.cpp",
      "position" : 253,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181863702",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181864068"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181864068"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't understand this TODO. We are returning CONSENSUS here, not SOFT_FORK.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T19:50:56Z",
      "diff_hunk" : "@@ -2024,13 +2039,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n \n     CAmount blockReward = nFees + GetBlockSubsidy(pindex->nHeight, chainparams.GetConsensus());\n     if (block.vtx[0]->GetValueOut() > blockReward)\n-        return state.DoS(100,\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS,\n                          error(\"ConnectBlock(): coinbase pays too much (actual=%d vs limit=%d)\",\n                                block.vtx[0]->GetValueOut(), blockReward),\n                                REJECT_INVALID, \"bad-cb-amount\");\n \n+    // TODO: We should be able to ban peers that send us completely bogus scripts,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181864068",
      "id" : 181864068,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 313,
      "path" : "src/validation.cpp",
      "position" : 313,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181864068",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181864480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181864480"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It may be clearer to prefix the block-only reasons with `BLOCK_` and the transaction-only reasons with `TX_`",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T19:52:23Z",
      "diff_hunk" : "@@ -22,6 +22,39 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    UNKNOWN_INVALID,         //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks:\n+    MUTATED,                 //!< the block's data didn't match the data committed to by the PoW",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181864480",
      "id" : 181864480,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 24,
      "path" : "src/consensus/validation.h",
      "position" : 24,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181864480",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181866293"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181866293"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's not clear to me why you've removed the `Invalid()` call in the _Add useful-for-dos \"reason\" field to CValidationState_ commit.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T19:59:25Z",
      "diff_hunk" : "@@ -3065,28 +3084,30 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, false))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, false)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\\n\", tx->GetHash().ToString(), state.GetDebugMessage());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181866293",
      "id" : 181866293,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 380,
      "path" : "src/validation.cpp",
      "position" : 380,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181866293",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181866943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181866943"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I also don't understand this comment!",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T20:01:51Z",
      "diff_hunk" : "@@ -765,6 +765,73 @@ void Misbehaving(NodeId pnode, int howmuch)\n         LogPrintf(\"%s: %s peer=%d (%d -> %d)\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181866943",
      "id" : 181866943,
      "in_reply_to_id" : 171022331,
      "original_commit_id" : "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "original_position" : 14,
      "path" : "src/net_processing.cpp",
      "position" : 14,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181866943",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181867122"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867122"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What does \"duplicate of invalid \" mean?",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T20:02:33Z",
      "diff_hunk" : "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181867122",
      "id" : 181867122,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 17,
      "path" : "src/net_processing.cpp",
      "position" : 17,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867122",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181867308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree. an `else return true` would be clearer here.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T20:03:15Z",
      "diff_hunk" : "@@ -765,6 +765,73 @@ void Misbehaving(NodeId pnode, int howmuch)\n         LogPrintf(\"%s: %s peer=%d (%d -> %d)\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181867308",
      "id" : 181867308,
      "in_reply_to_id" : 171022830,
      "original_commit_id" : "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "original_position" : 18,
      "path" : "src/net_processing.cpp",
      "position" : 18,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867308",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181867540"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867540"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What does this mean?!",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T20:04:04Z",
      "diff_hunk" : "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        return true;\n+    // Speed-of-light or out-of-sync:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181867540",
      "id" : 181867540,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 23,
      "path" : "src/net_processing.cpp",
      "position" : 23,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181867540",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181870187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870187"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Actually, I think this would be clearer if it wasn't a `switch` statement at all. There are only a handful of cases where we return true. Explicitly test them and return false otherwise.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T20:13:49Z",
      "diff_hunk" : "@@ -765,6 +765,73 @@ void Misbehaving(NodeId pnode, int howmuch)\n         LogPrintf(\"%s: %s peer=%d (%d -> %d)\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181870187",
      "id" : 181870187,
      "in_reply_to_id" : 171022830,
      "original_commit_id" : "4781a3d3ce12182edf3c686b008ea7066ed5dc66",
      "original_position" : 18,
      "path" : "src/net_processing.cpp",
      "position" : 18,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870187",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181870743"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870743"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Again, not sure what this means. In this function `MISSING_PREV` seems to count as `Speed-of-light or out-of-sync`, but not in `MayResultInDisconnect()`",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T20:15:45Z",
      "diff_hunk" : "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        return true;\n+    // Speed-of-light or out-of-sync:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BAD_TIME:\n+    case ValidationInvalidReason::NOT_STANDARD:\n+    case ValidationInvalidReason::MISSING_INPUTS:\n+    case ValidationInvalidReason::WITNESS_MUTATED:\n+    case ValidationInvalidReason::CONFLICT:\n+    case ValidationInvalidReason::MEMPOOL_LIMIT:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid\"\n+        if (via_compact_block) break;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+        {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+        }\n+        return true;\n+    // Speed-of-light or out-of-sync:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181870743",
      "id" : 181870743,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 53,
      "path" : "src/net_processing.cpp",
      "position" : 53,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870743",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181870985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870985"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Again, I think this is clearer if you remove the switch statement.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T20:16:35Z",
      "diff_hunk" : "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        return true;\n+    // Speed-of-light or out-of-sync:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BAD_TIME:\n+    case ValidationInvalidReason::NOT_STANDARD:\n+    case ValidationInvalidReason::MISSING_INPUTS:\n+    case ValidationInvalidReason::WITNESS_MUTATED:\n+    case ValidationInvalidReason::CONFLICT:\n+    case ValidationInvalidReason::MEMPOOL_LIMIT:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181870985",
      "id" : 181870985,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 38,
      "path" : "src/net_processing.cpp",
      "position" : 38,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181870985",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181877907"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181877907"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, I think I understand now. This comment should be clarified and moved to the enum definition. Perhaps even rename to `DUPLICATE_INVALID`?",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T20:40:13Z",
      "diff_hunk" : "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181877907",
      "id" : 181877907,
      "in_reply_to_id" : 181867122,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 17,
      "path" : "src/net_processing.cpp",
      "position" : 17,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181877907",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181879716"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181879716"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This `!it->second.second` is pretty obscure:\r\n\r\n- when adding an entry to `mapBlockSource`, we check whether it was received as a compact block, invert that to mean 'should punish peer'\r\n- when reading from `mapBlockSource`, we take the `.second`, and invert it to mean `via compact_block` before calling `MaybePunishNode()`.\r\n\r\nCan we change `mapBlockSource` to just store whether the block was received via compact block to avoid this double inversion?",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T20:46:36Z",
      "diff_hunk" : "@@ -956,14 +1025,12 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const CValidationSta\n     const uint256 hash(block.GetHash());\n     std::map<uint256, std::pair<NodeId, bool>>::iterator it = mapBlockSource.find(hash);\n \n-    int nDoS = 0;\n-    if (state.IsInvalid(nDoS)) {\n+    if (state.IsInvalid()) {\n         // Don't send reject message with code 0 or an internal reject code.\n         if (it != mapBlockSource.end() && State(it->second.first) && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) {\n             CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\n             State(it->second.first)->rejects.push_back(reject);\n-            if (nDoS > 0 && it->second.second)\n-                Misbehaving(it->second.first, nDoS);\n+            MaybePunishNode(it->second.first, state, !it->second.second);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181879716",
      "id" : 181879716,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 89,
      "path" : "src/net_processing.cpp",
      "position" : 89,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181879716",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181881401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181881401"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems unnecessary. Why not just log inside `MaybePunishNode()` (it knows whether it called `Misbehaving()`) and remove the return value from `MaybePunishNode()`. Then the callers don't need to worry about logging.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T20:53:00Z",
      "diff_hunk" : "@@ -1406,6 +1466,10 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n                 // etc), and not just the duplicate-invalid case.\n                 pfrom->fDisconnect = true;\n             }\n+            if (!MaybePunishNode(pfrom->GetId(), state, false, \"invalid header received\")) {\n+                // MaybePunishNode returning true indicates Misbehaving logged the error for us",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181881401",
      "id" : 181881401,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 116,
      "path" : "src/net_processing.cpp",
      "position" : 116,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181881401",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181883001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181883001"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you comment *why* you think this is ungraceful?",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T20:58:54Z",
      "diff_hunk" : "@@ -784,6 +784,75 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message)\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid \"\n+        if (via_compact_block) return false;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        return true;\n+    // Speed-of-light or out-of-sync:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BAD_TIME:\n+    case ValidationInvalidReason::NOT_STANDARD:\n+    case ValidationInvalidReason::MISSING_INPUTS:\n+    case ValidationInvalidReason::WITNESS_MUTATED:\n+    case ValidationInvalidReason::CONFLICT:\n+    case ValidationInvalidReason::MEMPOOL_LIMIT:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is mean:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::MUTATED:\n+    case ValidationInvalidReason::UNKNOWN_INVALID: // Really \"duplicate of invalid\"\n+        if (via_compact_block) break;\n+    case ValidationInvalidReason::CHECKPOINT:\n+    case ValidationInvalidReason::INVALID_PREV:\n+        {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+        }\n+        return true;\n+    // Speed-of-light or out-of-sync:\n+    case ValidationInvalidReason::MISSING_PREV:\n+        {\n+            // TODO: Handle this much more gracefully",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181883001",
      "id" : 181883001,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 56,
      "path" : "src/net_processing.cpp",
      "position" : 56,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181883001",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181888861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181888861"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Alternatively, you could just change this function to return whether `reason` is set to `MUTATED` or `WITNESS_MUTATED`",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-16T21:18:23Z",
      "diff_hunk" : "@@ -71,19 +96,7 @@ class CValidationState {\n     bool IsError() const {\n         return mode == MODE_ERROR;\n     }\n-    bool IsInvalid(int &nDoSOut) const {\n-        if (IsInvalid()) {\n-            nDoSOut = nDoS;\n-            return true;\n-        }\n-        return false;\n-    }\n-    bool CorruptionPossible() const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181888861",
      "id" : 181888861,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 88,
      "path" : "src/consensus/validation.h",
      "position" : 88,
      "pull_request_review_id" : 112553444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-16T21:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181888861",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've left a bunch of comments, mostly around making the commenting clearer.",
      "created_at" : "2018-04-16T21:19:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#issuecomment-381753221",
      "id" : 381753221,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11639",
      "updated_at" : "2018-04-16T21:19:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381753221",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181941331"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181941331"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Renaming this `InvalidReason` would save a lot of chars overall. The only other prefix in this module is `REJECT_`, so `RejectReason` is an option.",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-17T03:06:56Z",
      "diff_hunk" : "@@ -22,6 +22,39 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181941331",
      "id" : 181941331,
      "original_commit_id" : "332461018e82ebb13c48776771c801e282e9b8f3",
      "original_position" : 10,
      "path" : "src/consensus/validation.h",
      "position" : 10,
      "pull_request_review_id" : 112653589,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-17T03:08:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181941331",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181941390"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181941390"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Agreed",
      "commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "created_at" : "2018-04-17T03:07:27Z",
      "diff_hunk" : "@@ -22,6 +22,39 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for (possibly) getting angry\n+  * (and retaliating) at the provider of the object in question (ie banning\n+  * peers).\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    UNKNOWN_INVALID,         //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks:\n+    MUTATED,                 //!< the block's data didn't match the data committed to by the PoW",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11639#discussion_r181941390",
      "id" : 181941390,
      "in_reply_to_id" : 181864480,
      "original_commit_id" : "01640d11ae79edf25a3471bb42a08aec3070859c",
      "original_position" : 24,
      "path" : "src/consensus/validation.h",
      "position" : 24,
      "pull_request_review_id" : 112653650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11639",
      "updated_at" : "2018-04-17T03:07:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181941390",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   }
]
