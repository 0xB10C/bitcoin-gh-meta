[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12076#discussion_r159243317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12076"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159243317"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should also use `os.path.join`?",
      "commit_id" : "fa72adaaac47f2c458f174da228eb714cbf07066",
      "created_at" : "2018-01-02T15:08:27Z",
      "diff_hunk" : "@@ -10,63 +10,57 @@\n - Generate 110 keys (enough to drain the keypool). Store key 90 (in the initial keypool) and key 110 (beyond the initial keypool). Send funds to key 90 and key 110.\n - Stop node1, clear the datadir, move wallet file back into the datadir and restart node1.\n - connect node1 to node0. Verify that they sync and node1 receives its funds.\"\"\"\n+import os\n import shutil\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n     connect_nodes_bi,\n+    get_datadir_path,\n     sync_blocks,\n )\n \n+\n class KeypoolRestoreTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 2\n         self.extra_args = [[], ['-keypool=100', '-keypoolmin=20']]\n \n     def run_test(self):\n-        self.tmpdir = self.options.tmpdir\n+        datadir_regtest_1 = os.path.join(get_datadir_path(self.options.tmpdir, 1), 'regtest')\n         self.nodes[0].generate(101)\n \n         self.log.info(\"Make backup of wallet\")\n-\n         self.stop_node(1)\n-\n-        shutil.copyfile(self.tmpdir + \"/node1/regtest/wallets/wallet.dat\", self.tmpdir + \"/wallet.bak\")\n+        shutil.copyfile(datadir_regtest_1 + \"/wallets/wallet.dat\", datadir_regtest_1 + \"/wallet.bak\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12076#discussion_r159243317",
      "id" : 159243317,
      "original_commit_id" : "fa72adaaac47f2c458f174da228eb714cbf07066",
      "original_position" : 32,
      "path" : "test/functional/keypool-topup.py",
      "position" : 32,
      "pull_request_review_id" : 86159232,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12076",
      "updated_at" : "2018-01-02T15:15:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159243317",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
