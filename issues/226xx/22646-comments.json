[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23114](https://github.com/bitcoin/bitcoin/pull/23114) (Add minisketch subtree and integrate into build/test by fanquake)\n* [#20201](https://github.com/bitcoin/bitcoin/pull/20201) (build: pkg-config related cleanup by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-08-06T09:31:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-894134343",
      "id" : 894134343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5841S2hH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894134343/reactions"
      },
      "updated_at" : "2021-10-02T00:51:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894134343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Strong concept ACK!\r\n\r\nAs well as the technical benefits listed in the PR description, a strong reason to go in this direction is to lower our maintenance and testing burden. Being able to build with a system univalue library really doesn't provide any benefit to users, but results in issues like #22412 which suck up reviewer and maintainer time. Maintaining support for different versions of univalue also expands the matrix of different build/configuration combinations which we really should (but don't) test if we claim support.",
      "created_at" : "2021-08-06T09:47:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-894142812",
      "id" : 894142812,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5841S4lc",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T09:47:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894142812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I know that the forking process already began before this PR, and I think that forking in open source can be very good. But I also think that when you fork, it is better practically and ethically to _rename the fork_. In the case of a library, this doesn't need to involve renaming functions and classes in the library, but the forked library should at least have different library filenames (`libunivalue.a`) and include filenames (in this case just `univalue.h`) so it is not a nightmare if downstream projects have code requiring both libraries as dependencies. Also it would be good to rename the source directory [`src/univalue/`](https://github.com/bitcoin/bitcoin/tree/master/src/univalue) and update the readme documentation [`src/univalue/README.md`](https://github.com/bitcoin/bitcoin/blob/master/src/univalue/README.md) to explicity say the library has been forked, the forks are incompatible, problems and discussions about the fork should be directed at the new issue tracker / mailing list / irc channel / whatever, not at the original project.\r\n\r\nThe idea is that by renaming a directory and two files, you can make things less ambiguous, confusing, and potentially painful for downstream developers, while also being kinder to the author of the original library and letting the name he chose for his project refer unambiguously to his own project instead of a collection of forks.\r\n\r\nAs for what name to substitute, for an internal fork it could be nonsense like _xyzlkq_ for all it matters, or something like _unibtc_ to be coherent, or something ike _jsonvalue_ to be descriptive, or something like _univalue--_ to be cheeky, whatever.\r\n\r\nPlease ignore this suggestion if it's too cumbersome. Just wanted to describe a possible way to make forking less confusing and contentious.",
      "created_at" : "2021-08-06T10:22:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-894163012",
      "id" : 894163012,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5841S9hE",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T10:22:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894163012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK.  More control over our build is better.",
      "created_at" : "2021-08-06T22:24:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-894547829",
      "id" : 894547829,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5841Ubd1",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T22:24:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894547829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK for the reasons @jnewbery gave in https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-894142812",
      "created_at" : "2021-08-15T18:53:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-899095035",
      "id" : 899095035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5841lxn7",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-15T18:53:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899095035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. \r\n\r\n> Please ignore this suggestion if it's too cumbersome. Just wanted to de scribe a possible way to make forking less confusing and contentious.\r\n\r\nNot sure about this. As said in the OP, we have done a similar thing for the `leveldb` and `crc32c` libraries with regard to maintaining our own fork without renaming them. The subsequent repositories have a mention in their github description that they are not the upstream project, this may be enough. To be clear, it is **not** the intent that other projects use our fork of the library, it is for our subtree use only. Nor is it intended for them to be packaged (e.g. in Linux distributions). Renaming the project might give a false signal that it's an independent project for general use, somehow.\r\n\r\n(Also AFAIK we do still intend to follow upstream changes, and contributing changes upstream, even though they only get merged intermittently if at all, I think it's better regarded as a patch stack on top than a completely separate project)",
      "created_at" : "2021-08-16T13:00:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-899489691",
      "id" : 899489691,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5841nR-b",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-16T13:11:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899489691",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Maybe the GitHub projects could be renamed to `bitcoin-core/${upstream-name}-subtree` to clarify this is a repo only used for bitcoin-core internal subtrees? I agree that renaming the project name itself (in the code) is too much and might even send the wrong impression that this is maintained for someone other than bitcoin-core itself.",
      "created_at" : "2021-08-17T06:47:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-900038840",
      "id" : 900038840,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5841pYC4",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-17T06:47:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/900038840",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept NACK.\r\n\r\nUniValue is not comparable to secp256k1 and LevelDB - the latter are used in consensus-critical code, and so it's important to be careful about which bugs get fixed in them. Using the system UniValue isn't and shouldn't not be dangerous nor unsupported.\r\n\r\nThere is basically no reason to embed a copy of UniValue at all. If upstream support is lacking, we should just release our fork as a proper fork of the library or not require things upstream has decided not to do. The embedded copy should ideally be removed, and only ever build against the system install.\r\n\r\nOther disagree with removing the embedded copy, however. Keeping support for both system *and* an embedded copy was a reasonable compromise. If we're not going to support both, however, the direction to go is removing the embedded copy, not dropping support for the correct configuration (system library).",
      "created_at" : "2021-09-02T12:23:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-911617873",
      "id" : 911617873,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5842Vi9R",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-02T12:23:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911617873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nSurely, in a world with enough maintenance resources, univalue could be released and integrated as a separate library. As there are evidently neither resources to maintain it as a separate library, nor maintain the integration of an external univalue, this seems like a good move.",
      "created_at" : "2021-09-02T13:04:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-911658749",
      "id" : 911658749,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5842Vs79",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-02T13:04:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911658749",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It's literally less effort to maintain it properly.\r\n\r\nAll the work to integrate it is already done. The bugs recently introduced, have also been fixed aside from gatekeepers blocking the fixes from being merged.",
      "created_at" : "2021-09-02T13:21:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-911676600",
      "id" : 911676600,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5842VxS4",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-02T13:21:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911676600",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Maybe the GitHub projects could be renamed to bitcoin-core/${upstream-name}-subtree to clarify this is a repo only used for bitcoin-core internal subtrees?\r\n\r\nSure, sounds good to me. \r\n\r\nEdit: ok, i've renamed:\r\n- `bitcoin-core/univalue` â `bitcoin-core/univalue-subtree`\r\n- `bitcoin-core/leveldb` â `bitcoin-core/leveldb-subtree`\r\n- `bitcoin-core/crc32c` â `bitcoin-core/crc32c-subtree`\r\n\r\nThe \"Subtrees\" section in the developer notes likely needs some updates after this.\r\n",
      "created_at" : "2021-09-16T18:46:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-921154730",
      "id" : 921154730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII584257Sq",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-16T18:53:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921154730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin-core/univalue-subtree/pull/19 is merged. Does this need rebasing?",
      "created_at" : "2021-10-04T08:26:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-933259869",
      "id" : 933259869,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5843oGpd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 1,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933259869/reactions"
      },
      "updated_at" : "2021-10-04T08:26:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933259869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> bitcoin-core/univalue-subtree#19 is merged. Does this need rebasing?\r\n\r\nI've rebased on master and dropped the cherry-picks in favour of a subtree update. I've also fixed up the integration commit so that `make dist` is working properly, and made some other minor changes. Also updated the PR description.",
      "created_at" : "2021-10-04T11:36:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-933397672",
      "id" : 933397672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5843ooSo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933397672/reactions"
      },
      "updated_at" : "2021-10-04T11:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933397672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The changes without the last commit will break building with git-bisect? If yes, the changes should probably be squashed into the previous merge commit (`git reset --soft HEAD~ && git commit --amend`).",
      "created_at" : "2021-10-04T12:18:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-933427798",
      "id" : 933427798,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5843ovpW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933427798/reactions"
      },
      "updated_at" : "2021-10-04T12:18:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933427798",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pushed a fix for the CI failures. The `fail*.json` sources were missing from the dist tarball, which was causing `unitester` to fail.\r\n\r\n> The changes without the last commit will break building with git-bisect?\r\n\r\nThey shouldn't do. After the subtree pull, univalue is still buildable using autotools. We atomically swap from building univalue using autotools, to integrating univalue into our build in the last commit.",
      "created_at" : "2021-10-04T23:34:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-933934705",
      "id" : 933934705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5843qrZx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933934705/reactions"
      },
      "updated_at" : "2021-10-05T01:06:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933934705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Similar to what we are doing with the [minisketch integration](https://github.com/bitcoin/bitcoin/pull/23114/files#diff-d4537436596f04e21cc7507f185f355d2f9bff213eca7969382faff5c3336e57R31), pushed a change to skip building the univalue tests if fuzzing is enabled.",
      "created_at" : "2021-10-05T01:06:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-933975173",
      "id" : 933975173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5843q1SF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933975173/reactions"
      },
      "updated_at" : "2021-10-05T01:06:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/933975173",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "At least one issue to fix from a [sanitizer CI](https://github.com/bitcoin/bitcoin/pull/22646/checks?check_run_id=3798223718):\r\n```bash\r\n********* Start testing of URITests *********\r\nConfig: Using QtTest library 5.15.2, Qt 5.15.2 (x86_64-little_endian-lp64 shared (dynamic) release build; by GCC 10.3.0), ubuntu 21.04\r\nPASS   : URITests::initTestCase()\r\nPASS   : URITests::uriTests()\r\nPASS   : URITests::cleanupTestCase()\r\nTotals: 3 passed, 0 failed, 0 skipped, 0 blacklisted, 1ms\r\n********* Finished testing of URITests *********\r\n********* Start testing of RPCNestedTests *********\r\nConfig: Using QtTest library 5.15.2, Qt 5.15.2 (x86_64-little_endian-lp64 shared (dynamic) release build; by GCC 10.3.0), ubuntu 21.04\r\nPASS   : RPCNestedTests::initTestCase()\r\nunivalue/lib/univalue_read.cpp:292:13: runtime error: implicit conversion from type 'int' of value -5 (32-bit, signed) to type 'unsigned int' changed the value to 4294967291 (32-bit, unsigned)\r\n    #0 0x55978052c2bf in UniValue::read(char const*, unsigned long) univalue/lib/univalue_read.cpp:292:13\r\n    #1 0x55977fcabbbd in UniValue::read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) ./univalue/include/univalue.h:153:16\r\n    #2 0x5597804a66c6 in ParseNonRFCJSONValue(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) rpc/client.cpp:234:15\r\n    #3 0x5597804a6cc8 in RPCConvertValues(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) rpc/client.cpp:252:30\r\n    #4 0x55977f0920c0 in RPCConsole::RPCParseCommandLine(interfaces::Node*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, WalletModel const*) qt/rpcconsole.cpp:328:47\r\n    #5 0x55977ee8a3dc in RPCConsole::RPCExecuteCommandLine(interfaces::Node&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, WalletModel const*) ./qt/rpcconsole.h:48:16\r\n    #6 0x55977ee8a3dc in RPCNestedTests::rpcNestedTests() qt/test/rpcnestedtests.cpp:62:5\r\n    #7 0x55977ef214f2 in RPCNestedTests::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) qt/test/moc_rpcnestedtests.cpp:72:21\r\n    #8 0x7f83e3593d9a in QMetaMethod::invoke(QObject*, Qt::ConnectionType, QGenericReturnArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) const (/lib/x86_64-linux-gnu/libQt5Core.so.5+0x2c3d9a)\r\n    #9 0x7f83e3294552  (/lib/x86_64-linux-gnu/libQt5Test.so.5+0x1c552)\r\n    #10 0x7f83e3294ffb  (/lib/x86_64-linux-gnu/libQt5Test.so.5+0x1cffb)\r\n    #11 0x7f83e32955e3  (/lib/x86_64-linux-gnu/libQt5Test.so.5+0x1d5e3)\r\n    #12 0x7f83e3295b33 in QTest::qRun() (/lib/x86_64-linux-gnu/libQt5Test.so.5+0x1db33)\r\n    #13 0x7f83e3295f2f in QTest::qExec(QObject*, int, char**) (/lib/x86_64-linux-gnu/libQt5Test.so.5+0x1df2f)\r\n    #14 0x55977eea9a74 in main qt/test/test_main.cpp:92:9\r\n    #15 0x7f83e1a32564 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x28564)\r\n    #16 0x55977edc350d in _start (/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/qt/test/test_bitcoin-qt+0x18ba50d)\r\n\r\nSUMMARY: UndefinedBehaviorSanitizer: implicit-integer-sign-change univalue/lib/univalue_read.cpp:292:13 in \r\nFAIL qt/test/test_bitcoin-qt (exit status: 1)\r\n```",
      "created_at" : "2021-10-05T02:23:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22646#issuecomment-934004878",
      "id" : 934004878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22646",
      "node_id" : "IC_kwDOABII5843q8iO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934004878/reactions"
      },
      "updated_at" : "2021-10-05T02:23:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934004878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
