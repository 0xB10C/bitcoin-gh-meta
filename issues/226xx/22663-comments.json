[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22937](https://github.com/bitcoin/bitcoin/pull/22937) (refactor: Forbid calling unsafe fs::path(std::string) constructor and fs::path::string() method by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-08-08T05:54:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#issuecomment-894747743",
      "id" : 894747743,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22663",
      "node_id" : "IC_kwDOABII5841VMRf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894747743/reactions"
      },
      "updated_at" : "2021-10-05T20:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894747743",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "One build is failing due to a leak while fuzzing `coins_view` and I cannot see why with the CI.  I am unable to reproduce this on my machine.",
      "created_at" : "2021-08-08T12:48:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#issuecomment-894792761",
      "id" : 894792761,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22663",
      "node_id" : "IC_kwDOABII5841VXQ5",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-08T12:48:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894792761",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r686109932"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686109932"
         }
      },
      "author_association" : "NONE",
      "body" : "If `penv` is deleted, then `~CDBWrapper()` gonna delete it again? Missing `= nullptr`?\r\n",
      "commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "created_at" : "2021-08-10T15:06:41Z",
      "diff_hunk" : "@@ -97,46 +97,59 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n              options->max_open_files, default_open_files);\n }\n \n-static leveldb::Options GetOptions(size_t nCacheSize)\n+static void GetOptions(size_t nCacheSize, leveldb::Options* options)\n {\n-    leveldb::Options options;\n-    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n-    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n-    options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n-    options.compression = leveldb::kNoCompression;\n-    options.info_log = new CBitcoinLevelDBLogger();\n+    options->block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    options->write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n+    options->filter_policy = leveldb::NewBloomFilterPolicy(10);\n+    options->compression = leveldb::kNoCompression;\n+    options->info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n-        options.paranoid_checks = true;\n+        options->paranoid_checks = true;\n     }\n-    SetMaxOpenFiles(&options);\n-    return options;\n+    SetMaxOpenFiles(options);\n+}\n+\n+// Custom deleter for unique_ptr<leveldb::Options>.\n+static void DeleteOptions(leveldb::Options* options)\n+{\n+    delete options->filter_policy;\n+    options->filter_policy = nullptr;\n+    delete options->info_log;\n+    options->info_log = nullptr;\n+    delete options->block_cache;\n+    options->block_cache = nullptr;\n+    options->env = nullptr;\n }\n \n CDBWrapper::CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n-    : m_name{path.stem().string()}\n+    : options(new leveldb::Options, DeleteOptions), m_name{path.stem().string()}\n {\n     penv = nullptr;\n     readoptions.verify_checksums = true;\n     iteroptions.verify_checksums = true;\n     iteroptions.fill_cache = false;\n     syncoptions.sync = true;\n-    options = GetOptions(nCacheSize);\n-    options.create_if_missing = true;\n+    GetOptions(nCacheSize, options.get());\n+    options->create_if_missing = true;\n     if (fMemory) {\n         penv = leveldb::NewMemEnv(leveldb::Env::Default());\n-        options.env = penv;\n+        options->env = penv;\n     } else {\n         if (fWipe) {\n             LogPrintf(\"Wiping LevelDB in %s\\n\", path.string());\n-            leveldb::Status result = leveldb::DestroyDB(path.string(), options);\n+            leveldb::Status result = leveldb::DestroyDB(path.string(), *options);\n             dbwrapper_private::HandleError(result);\n         }\n         TryCreateDirectories(path);\n         LogPrintf(\"Opening LevelDB in %s\\n\", path.string());\n     }\n-    leveldb::Status status = leveldb::DB::Open(options, path.string(), &pdb);\n+    leveldb::Status status = leveldb::DB::Open(*options, path.string(), &pdb);\n+    if (!status.ok()) {\n+        delete penv;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r686109932",
      "id" : 686109932,
      "line" : 151,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjEwOTkzMg==",
      "original_commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "original_line" : 151,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/dbwrapper.cpp",
      "position" : 71,
      "pull_request_review_id" : 726560453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-10T15:06:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686109932",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/292191?v=4",
         "events_url" : "https://api.github.com/users/Talkless/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Talkless/followers",
         "following_url" : "https://api.github.com/users/Talkless/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Talkless/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Talkless",
         "id" : 292191,
         "login" : "Talkless",
         "node_id" : "MDQ6VXNlcjI5MjE5MQ==",
         "organizations_url" : "https://api.github.com/users/Talkless/orgs",
         "received_events_url" : "https://api.github.com/users/Talkless/received_events",
         "repos_url" : "https://api.github.com/users/Talkless/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Talkless/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Talkless/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Talkless"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r686115676"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686115676"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If `!status.ok` then `HandleError` throws and the destructor isn't called",
      "commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "created_at" : "2021-08-10T15:13:27Z",
      "diff_hunk" : "@@ -97,46 +97,59 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n              options->max_open_files, default_open_files);\n }\n \n-static leveldb::Options GetOptions(size_t nCacheSize)\n+static void GetOptions(size_t nCacheSize, leveldb::Options* options)\n {\n-    leveldb::Options options;\n-    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n-    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n-    options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n-    options.compression = leveldb::kNoCompression;\n-    options.info_log = new CBitcoinLevelDBLogger();\n+    options->block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    options->write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n+    options->filter_policy = leveldb::NewBloomFilterPolicy(10);\n+    options->compression = leveldb::kNoCompression;\n+    options->info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n-        options.paranoid_checks = true;\n+        options->paranoid_checks = true;\n     }\n-    SetMaxOpenFiles(&options);\n-    return options;\n+    SetMaxOpenFiles(options);\n+}\n+\n+// Custom deleter for unique_ptr<leveldb::Options>.\n+static void DeleteOptions(leveldb::Options* options)\n+{\n+    delete options->filter_policy;\n+    options->filter_policy = nullptr;\n+    delete options->info_log;\n+    options->info_log = nullptr;\n+    delete options->block_cache;\n+    options->block_cache = nullptr;\n+    options->env = nullptr;\n }\n \n CDBWrapper::CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n-    : m_name{path.stem().string()}\n+    : options(new leveldb::Options, DeleteOptions), m_name{path.stem().string()}\n {\n     penv = nullptr;\n     readoptions.verify_checksums = true;\n     iteroptions.verify_checksums = true;\n     iteroptions.fill_cache = false;\n     syncoptions.sync = true;\n-    options = GetOptions(nCacheSize);\n-    options.create_if_missing = true;\n+    GetOptions(nCacheSize, options.get());\n+    options->create_if_missing = true;\n     if (fMemory) {\n         penv = leveldb::NewMemEnv(leveldb::Env::Default());\n-        options.env = penv;\n+        options->env = penv;\n     } else {\n         if (fWipe) {\n             LogPrintf(\"Wiping LevelDB in %s\\n\", path.string());\n-            leveldb::Status result = leveldb::DestroyDB(path.string(), options);\n+            leveldb::Status result = leveldb::DestroyDB(path.string(), *options);\n             dbwrapper_private::HandleError(result);\n         }\n         TryCreateDirectories(path);\n         LogPrintf(\"Opening LevelDB in %s\\n\", path.string());\n     }\n-    leveldb::Status status = leveldb::DB::Open(options, path.string(), &pdb);\n+    leveldb::Status status = leveldb::DB::Open(*options, path.string(), &pdb);\n+    if (!status.ok()) {\n+        delete penv;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r686115676",
      "id" : 686115676,
      "in_reply_to_id" : 686109932,
      "line" : 151,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjExNTY3Ng==",
      "original_commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "original_line" : 151,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/dbwrapper.cpp",
      "position" : 71,
      "pull_request_review_id" : 726568150,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-10T15:13:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686115676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r686783500"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686783500"
         }
      },
      "author_association" : "NONE",
      "body" : "Maybe worth making `penv` a `unique_ptr` too, if we need manual handling with `delete`? Or do you think this would be kinda out of scope for this PR?\r\n\r\nAdding addition `delete` into new code does not seem... \"right\" (https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-newdelete).",
      "commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "created_at" : "2021-08-11T12:30:05Z",
      "diff_hunk" : "@@ -97,46 +97,59 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n              options->max_open_files, default_open_files);\n }\n \n-static leveldb::Options GetOptions(size_t nCacheSize)\n+static void GetOptions(size_t nCacheSize, leveldb::Options* options)\n {\n-    leveldb::Options options;\n-    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n-    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n-    options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n-    options.compression = leveldb::kNoCompression;\n-    options.info_log = new CBitcoinLevelDBLogger();\n+    options->block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    options->write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n+    options->filter_policy = leveldb::NewBloomFilterPolicy(10);\n+    options->compression = leveldb::kNoCompression;\n+    options->info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n-        options.paranoid_checks = true;\n+        options->paranoid_checks = true;\n     }\n-    SetMaxOpenFiles(&options);\n-    return options;\n+    SetMaxOpenFiles(options);\n+}\n+\n+// Custom deleter for unique_ptr<leveldb::Options>.\n+static void DeleteOptions(leveldb::Options* options)\n+{\n+    delete options->filter_policy;\n+    options->filter_policy = nullptr;\n+    delete options->info_log;\n+    options->info_log = nullptr;\n+    delete options->block_cache;\n+    options->block_cache = nullptr;\n+    options->env = nullptr;\n }\n \n CDBWrapper::CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n-    : m_name{path.stem().string()}\n+    : options(new leveldb::Options, DeleteOptions), m_name{path.stem().string()}\n {\n     penv = nullptr;\n     readoptions.verify_checksums = true;\n     iteroptions.verify_checksums = true;\n     iteroptions.fill_cache = false;\n     syncoptions.sync = true;\n-    options = GetOptions(nCacheSize);\n-    options.create_if_missing = true;\n+    GetOptions(nCacheSize, options.get());\n+    options->create_if_missing = true;\n     if (fMemory) {\n         penv = leveldb::NewMemEnv(leveldb::Env::Default());\n-        options.env = penv;\n+        options->env = penv;\n     } else {\n         if (fWipe) {\n             LogPrintf(\"Wiping LevelDB in %s\\n\", path.string());\n-            leveldb::Status result = leveldb::DestroyDB(path.string(), options);\n+            leveldb::Status result = leveldb::DestroyDB(path.string(), *options);\n             dbwrapper_private::HandleError(result);\n         }\n         TryCreateDirectories(path);\n         LogPrintf(\"Opening LevelDB in %s\\n\", path.string());\n     }\n-    leveldb::Status status = leveldb::DB::Open(options, path.string(), &pdb);\n+    leveldb::Status status = leveldb::DB::Open(*options, path.string(), &pdb);\n+    if (!status.ok()) {\n+        delete penv;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r686783500",
      "id" : 686783500,
      "in_reply_to_id" : 686109932,
      "line" : 151,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njc4MzUwMA==",
      "original_commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "original_line" : 151,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/dbwrapper.cpp",
      "position" : 71,
      "pull_request_review_id" : 727421712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T12:30:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686783500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/292191?v=4",
         "events_url" : "https://api.github.com/users/Talkless/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Talkless/followers",
         "following_url" : "https://api.github.com/users/Talkless/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Talkless/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Talkless",
         "id" : 292191,
         "login" : "Talkless",
         "node_id" : "MDQ6VXNlcjI5MjE5MQ==",
         "organizations_url" : "https://api.github.com/users/Talkless/orgs",
         "received_events_url" : "https://api.github.com/users/Talkless/received_events",
         "repos_url" : "https://api.github.com/users/Talkless/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Talkless/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Talkless/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Talkless"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r687097257"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687097257"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good point, I can look into making it a `unique_ptr`",
      "commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "created_at" : "2021-08-11T19:02:17Z",
      "diff_hunk" : "@@ -97,46 +97,59 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n              options->max_open_files, default_open_files);\n }\n \n-static leveldb::Options GetOptions(size_t nCacheSize)\n+static void GetOptions(size_t nCacheSize, leveldb::Options* options)\n {\n-    leveldb::Options options;\n-    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n-    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n-    options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n-    options.compression = leveldb::kNoCompression;\n-    options.info_log = new CBitcoinLevelDBLogger();\n+    options->block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    options->write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n+    options->filter_policy = leveldb::NewBloomFilterPolicy(10);\n+    options->compression = leveldb::kNoCompression;\n+    options->info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n-        options.paranoid_checks = true;\n+        options->paranoid_checks = true;\n     }\n-    SetMaxOpenFiles(&options);\n-    return options;\n+    SetMaxOpenFiles(options);\n+}\n+\n+// Custom deleter for unique_ptr<leveldb::Options>.\n+static void DeleteOptions(leveldb::Options* options)\n+{\n+    delete options->filter_policy;\n+    options->filter_policy = nullptr;\n+    delete options->info_log;\n+    options->info_log = nullptr;\n+    delete options->block_cache;\n+    options->block_cache = nullptr;\n+    options->env = nullptr;\n }\n \n CDBWrapper::CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n-    : m_name{path.stem().string()}\n+    : options(new leveldb::Options, DeleteOptions), m_name{path.stem().string()}\n {\n     penv = nullptr;\n     readoptions.verify_checksums = true;\n     iteroptions.verify_checksums = true;\n     iteroptions.fill_cache = false;\n     syncoptions.sync = true;\n-    options = GetOptions(nCacheSize);\n-    options.create_if_missing = true;\n+    GetOptions(nCacheSize, options.get());\n+    options->create_if_missing = true;\n     if (fMemory) {\n         penv = leveldb::NewMemEnv(leveldb::Env::Default());\n-        options.env = penv;\n+        options->env = penv;\n     } else {\n         if (fWipe) {\n             LogPrintf(\"Wiping LevelDB in %s\\n\", path.string());\n-            leveldb::Status result = leveldb::DestroyDB(path.string(), options);\n+            leveldb::Status result = leveldb::DestroyDB(path.string(), *options);\n             dbwrapper_private::HandleError(result);\n         }\n         TryCreateDirectories(path);\n         LogPrintf(\"Opening LevelDB in %s\\n\", path.string());\n     }\n-    leveldb::Status status = leveldb::DB::Open(options, path.string(), &pdb);\n+    leveldb::Status status = leveldb::DB::Open(*options, path.string(), &pdb);\n+    if (!status.ok()) {\n+        delete penv;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r687097257",
      "id" : 687097257,
      "in_reply_to_id" : 686109932,
      "line" : 151,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NzA5NzI1Nw==",
      "original_commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "original_line" : 151,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/dbwrapper.cpp",
      "position" : 71,
      "pull_request_review_id" : 727838725,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T19:02:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/687097257",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-10-15T09:39:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#issuecomment-944151438",
      "id" : 944151438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22663",
      "node_id" : "IC_kwDOABII5844RpuO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/944151438/reactions"
      },
      "updated_at" : "2021-10-15T09:39:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/944151438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r739490464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739490464"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"dbwrapper: wrap options in unique_ptr and use DeleteOptions\" (6770f066b69c6c271e7096cc647d5d42762f6b05)\r\n\r\nIt's not too important, but I don't think there's an actual need to change this function, and the previous version of this that just returned a struct instead of dereferencing a pointer seemed more straightforward.\r\n\r\nTo keep the previous version, I believe you would just need to write `new leveldb::Options{GetOptions(...)}` below.\r\n\r\nWould be nice to add `[[nodiscard]]` to the previous version, if you did keep it though.\r\n",
      "commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "created_at" : "2021-10-29T19:41:09Z",
      "diff_hunk" : "@@ -97,46 +97,59 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n              options->max_open_files, default_open_files);\n }\n \n-static leveldb::Options GetOptions(size_t nCacheSize)\n+static void GetOptions(size_t nCacheSize, leveldb::Options* options)\n {\n-    leveldb::Options options;\n-    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n-    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n-    options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n-    options.compression = leveldb::kNoCompression;\n-    options.info_log = new CBitcoinLevelDBLogger();\n+    options->block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    options->write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n+    options->filter_policy = leveldb::NewBloomFilterPolicy(10);\n+    options->compression = leveldb::kNoCompression;\n+    options->info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n-        options.paranoid_checks = true;\n+        options->paranoid_checks = true;\n     }\n-    SetMaxOpenFiles(&options);\n-    return options;\n+    SetMaxOpenFiles(options);\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r739490464",
      "id" : 739490464,
      "line" : 113,
      "node_id" : "PRRC_kwDOABII584sE7qg",
      "original_commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "original_line" : 113,
      "original_position" : 27,
      "original_start_line" : 100,
      "path" : "src/dbwrapper.cpp",
      "position" : 27,
      "pull_request_review_id" : 793395719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739490464/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 100,
      "start_side" : "RIGHT",
      "updated_at" : "2021-10-29T20:14:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739490464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r739496546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739496546"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"dbwrapper: wrap options in unique_ptr and use DeleteOptions\" (6770f066b69c6c271e7096cc647d5d42762f6b05)\r\n\r\nIt seems dodgy to set env to null without freeing it here. I think it would be better to either:\r\n\r\n- Set this to null immediately in the places where the env is deleted, in which case you could `assert(!options->env)` here\r\n- Or, to just drop this line and treat `env` and `options` lifetimes as more independent\r\n- Or, to add a comment like \"env was previously deleted and should not be freed here\" here to make it clearer the inconsistency here is intentional",
      "commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "created_at" : "2021-10-29T19:51:55Z",
      "diff_hunk" : "@@ -97,46 +97,59 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n              options->max_open_files, default_open_files);\n }\n \n-static leveldb::Options GetOptions(size_t nCacheSize)\n+static void GetOptions(size_t nCacheSize, leveldb::Options* options)\n {\n-    leveldb::Options options;\n-    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n-    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n-    options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n-    options.compression = leveldb::kNoCompression;\n-    options.info_log = new CBitcoinLevelDBLogger();\n+    options->block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    options->write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n+    options->filter_policy = leveldb::NewBloomFilterPolicy(10);\n+    options->compression = leveldb::kNoCompression;\n+    options->info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n-        options.paranoid_checks = true;\n+        options->paranoid_checks = true;\n     }\n-    SetMaxOpenFiles(&options);\n-    return options;\n+    SetMaxOpenFiles(options);\n+}\n+\n+// Custom deleter for unique_ptr<leveldb::Options>.\n+static void DeleteOptions(leveldb::Options* options)\n+{\n+    delete options->filter_policy;\n+    options->filter_policy = nullptr;\n+    delete options->info_log;\n+    options->info_log = nullptr;\n+    delete options->block_cache;\n+    options->block_cache = nullptr;\n+    options->env = nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r739496546",
      "id" : 739496546,
      "line" : 124,
      "node_id" : "PRRC_kwDOABII584sE9Ji",
      "original_commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "original_line" : 124,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/dbwrapper.cpp",
      "position" : 38,
      "pull_request_review_id" : 793395719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739496546/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-29T20:14:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739496546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r739499514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739499514"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/22663#discussion_r686109932\r\n\r\n> If `penv` is deleted, then `~CDBWrapper()` gonna delete it again? Missing `= nullptr`?\r\n\r\nIn commit \"dbwrapper: wrap options in unique_ptr and use DeleteOptions\" (6770f066b69c6c271e7096cc647d5d42762f6b05)\r\n\r\nIt does seem fragile to rely on `HandleError` bypassing the destructor to avoid a double-delete. Would second the suggestion to add `= nullptr` to make the destructor safe if it were called. Or could add a \"// Deleting env here without resetting it is safe because the destructor will never be called\" comment to clarify. Or could make env a unique_ptr, which also seemed like a good suggestion",
      "commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "created_at" : "2021-10-29T19:58:04Z",
      "diff_hunk" : "@@ -97,46 +97,59 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n              options->max_open_files, default_open_files);\n }\n \n-static leveldb::Options GetOptions(size_t nCacheSize)\n+static void GetOptions(size_t nCacheSize, leveldb::Options* options)\n {\n-    leveldb::Options options;\n-    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n-    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n-    options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n-    options.compression = leveldb::kNoCompression;\n-    options.info_log = new CBitcoinLevelDBLogger();\n+    options->block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    options->write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n+    options->filter_policy = leveldb::NewBloomFilterPolicy(10);\n+    options->compression = leveldb::kNoCompression;\n+    options->info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n-        options.paranoid_checks = true;\n+        options->paranoid_checks = true;\n     }\n-    SetMaxOpenFiles(&options);\n-    return options;\n+    SetMaxOpenFiles(options);\n+}\n+\n+// Custom deleter for unique_ptr<leveldb::Options>.\n+static void DeleteOptions(leveldb::Options* options)\n+{\n+    delete options->filter_policy;\n+    options->filter_policy = nullptr;\n+    delete options->info_log;\n+    options->info_log = nullptr;\n+    delete options->block_cache;\n+    options->block_cache = nullptr;\n+    options->env = nullptr;\n }\n \n CDBWrapper::CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n-    : m_name{path.stem().string()}\n+    : options(new leveldb::Options, DeleteOptions), m_name{path.stem().string()}\n {\n     penv = nullptr;\n     readoptions.verify_checksums = true;\n     iteroptions.verify_checksums = true;\n     iteroptions.fill_cache = false;\n     syncoptions.sync = true;\n-    options = GetOptions(nCacheSize);\n-    options.create_if_missing = true;\n+    GetOptions(nCacheSize, options.get());\n+    options->create_if_missing = true;\n     if (fMemory) {\n         penv = leveldb::NewMemEnv(leveldb::Env::Default());\n-        options.env = penv;\n+        options->env = penv;\n     } else {\n         if (fWipe) {\n             LogPrintf(\"Wiping LevelDB in %s\\n\", path.string());\n-            leveldb::Status result = leveldb::DestroyDB(path.string(), options);\n+            leveldb::Status result = leveldb::DestroyDB(path.string(), *options);\n             dbwrapper_private::HandleError(result);\n         }\n         TryCreateDirectories(path);\n         LogPrintf(\"Opening LevelDB in %s\\n\", path.string());\n     }\n-    leveldb::Status status = leveldb::DB::Open(options, path.string(), &pdb);\n+    leveldb::Status status = leveldb::DB::Open(*options, path.string(), &pdb);\n+    if (!status.ok()) {\n+        delete penv;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r739499514",
      "id" : 739499514,
      "in_reply_to_id" : 686109932,
      "line" : 151,
      "node_id" : "PRRC_kwDOABII584sE936",
      "original_commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "original_line" : 151,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/dbwrapper.cpp",
      "position" : 71,
      "pull_request_review_id" : 793395719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739499514/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-29T20:14:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739499514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r739500531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739500531"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"dbwrapper: wrap options in unique_ptr and use DeleteOptions\" (6770f066b69c6c271e7096cc647d5d42762f6b05)\r\n\r\nI liked the suggestion to make `env` a unique_ptr https://github.com/bitcoin/bitcoin/pull/22663#discussion_r686783500, and maybe `pdb` could be a unique_ptr too?",
      "commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "created_at" : "2021-10-29T20:00:07Z",
      "diff_hunk" : "@@ -170,14 +183,7 @@ CDBWrapper::~CDBWrapper()\n {\n     delete pdb;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r739500531",
      "id" : 739500531,
      "line" : 184,
      "node_id" : "PRRC_kwDOABII584sE-Hz",
      "original_commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "original_line" : 184,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/dbwrapper.cpp",
      "position" : 78,
      "pull_request_review_id" : 793395719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739500531/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-29T20:14:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739500531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r739504112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739504112"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"dbwrapper: wrap options in unique_ptr and use DeleteOptions\" (6770f066b69c6c271e7096cc647d5d42762f6b05)\r\n\r\nCustom deleter seems to be forgetting to `delete options`, which would explain the fuzzing leak? https://github.com/bitcoin/bitcoin/pull/22663#issuecomment-894792761",
      "commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "created_at" : "2021-10-29T20:07:30Z",
      "diff_hunk" : "@@ -97,46 +97,59 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n              options->max_open_files, default_open_files);\n }\n \n-static leveldb::Options GetOptions(size_t nCacheSize)\n+static void GetOptions(size_t nCacheSize, leveldb::Options* options)\n {\n-    leveldb::Options options;\n-    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n-    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n-    options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n-    options.compression = leveldb::kNoCompression;\n-    options.info_log = new CBitcoinLevelDBLogger();\n+    options->block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    options->write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n+    options->filter_policy = leveldb::NewBloomFilterPolicy(10);\n+    options->compression = leveldb::kNoCompression;\n+    options->info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n-        options.paranoid_checks = true;\n+        options->paranoid_checks = true;\n     }\n-    SetMaxOpenFiles(&options);\n-    return options;\n+    SetMaxOpenFiles(options);\n+}\n+\n+// Custom deleter for unique_ptr<leveldb::Options>.\n+static void DeleteOptions(leveldb::Options* options)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r739504112",
      "id" : 739504112,
      "line" : 116,
      "node_id" : "PRRC_kwDOABII584sE-_w",
      "original_commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "original_line" : 116,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/dbwrapper.cpp",
      "position" : 30,
      "pull_request_review_id" : 793395719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739504112/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-29T20:14:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/739504112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r746714737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746714737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree with @ryanofsky. I don't think there's a strong need to change this function, but if there is, I would prefer it to return the target type `std::unique_ptr<leveldb::Options, void (*)(leveldb::Options*)` directly, instead of using a pointer positional out argument (which, strictly, seems a deterioration of API clarity to me).",
      "commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "created_at" : "2021-11-10T15:41:27Z",
      "diff_hunk" : "@@ -97,46 +97,59 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n              options->max_open_files, default_open_files);\n }\n \n-static leveldb::Options GetOptions(size_t nCacheSize)\n+static void GetOptions(size_t nCacheSize, leveldb::Options* options)\n {\n-    leveldb::Options options;\n-    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n-    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n-    options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n-    options.compression = leveldb::kNoCompression;\n-    options.info_log = new CBitcoinLevelDBLogger();\n+    options->block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    options->write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n+    options->filter_policy = leveldb::NewBloomFilterPolicy(10);\n+    options->compression = leveldb::kNoCompression;\n+    options->info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n-        options.paranoid_checks = true;\n+        options->paranoid_checks = true;\n     }\n-    SetMaxOpenFiles(&options);\n-    return options;\n+    SetMaxOpenFiles(options);\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r746714737",
      "id" : 746714737,
      "in_reply_to_id" : 739490464,
      "line" : 113,
      "node_id" : "PRRC_kwDOABII584sgfZx",
      "original_commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "original_line" : 113,
      "original_position" : 27,
      "original_start_line" : 100,
      "path" : "src/dbwrapper.cpp",
      "position" : 27,
      "pull_request_review_id" : 802774453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746714737/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 100,
      "start_side" : "RIGHT",
      "updated_at" : "2021-11-10T15:41:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746714737",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r747142169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747142169"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Will work on a patch with this, thanks for the review",
      "commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "created_at" : "2021-11-11T01:49:24Z",
      "diff_hunk" : "@@ -97,46 +97,59 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n              options->max_open_files, default_open_files);\n }\n \n-static leveldb::Options GetOptions(size_t nCacheSize)\n+static void GetOptions(size_t nCacheSize, leveldb::Options* options)\n {\n-    leveldb::Options options;\n-    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n-    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n-    options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n-    options.compression = leveldb::kNoCompression;\n-    options.info_log = new CBitcoinLevelDBLogger();\n+    options->block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    options->write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n+    options->filter_policy = leveldb::NewBloomFilterPolicy(10);\n+    options->compression = leveldb::kNoCompression;\n+    options->info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n-        options.paranoid_checks = true;\n+        options->paranoid_checks = true;\n     }\n-    SetMaxOpenFiles(&options);\n-    return options;\n+    SetMaxOpenFiles(options);\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#discussion_r747142169",
      "id" : 747142169,
      "in_reply_to_id" : 739490464,
      "line" : 113,
      "node_id" : "PRRC_kwDOABII584siHwZ",
      "original_commit_id" : "6770f066b69c6c271e7096cc647d5d42762f6b05",
      "original_line" : 113,
      "original_position" : 27,
      "original_start_line" : 100,
      "path" : "src/dbwrapper.cpp",
      "position" : 27,
      "pull_request_review_id" : 803337984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22663",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747142169/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 100,
      "start_side" : "RIGHT",
      "updated_at" : "2021-11-11T01:49:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747142169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Crypt-iQ can you please respond to @ryanofsky's comments and rebase ?",
      "created_at" : "2021-12-15T19:52:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#issuecomment-995164163",
      "id" : 995164163,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22663",
      "node_id" : "IC_kwDOABII5847UQAD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/995164163/reactions"
      },
      "updated_at" : "2021-12-15T19:52:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/995164163",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hi yes, I can get to it this weekend",
      "created_at" : "2021-12-15T21:31:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22663#issuecomment-995229505",
      "id" : 995229505,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22663",
      "node_id" : "IC_kwDOABII5847Uf9B",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/995229505/reactions"
      },
      "updated_at" : "2021-12-15T21:31:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/995229505",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   }
]
