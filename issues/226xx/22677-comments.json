[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm I'm mildly concept NACK on this refactoring; removeForReorg really feels like internal mempool functionality.\r\n\r\nAnother tactic to remove the module links would be to make removeForReorg generic to any T ChainState class. Then you don't need to have the specifics of the implementation of T known within mempool.\r\n\r\n(Circular deps within `.cpp` are not *that* bad IMO)",
      "created_at" : "2021-08-10T17:48:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#issuecomment-896190244",
      "id" : 896190244,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
      "node_id" : "IC_kwDOABII5841asck",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-10T17:48:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896190244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22796](https://github.com/bitcoin/bitcoin/pull/22796) (RBF move (1/3): extract BIP125 Rule 5 into policy/rbf by glozow)\n* [#22698](https://github.com/bitcoin/bitcoin/pull/22698) (Implement RBF inherited signaling and fix getmempoolentry returned bip125-replaceable status by mjdietzx)\n* [#22675](https://github.com/bitcoin/bitcoin/pull/22675) (MOVEONLY policy: extract RBF logic into policy/rbf by glozow)\n* [#22665](https://github.com/bitcoin/bitcoin/pull/22665) (policy/rbf: don't return \"incorrect\" replaceability status by darosior)\n* [#22290](https://github.com/bitcoin/bitcoin/pull/22290) (Package Mempool Submission with Package Fee-Bumping by glozow)\n* [#22282](https://github.com/bitcoin/bitcoin/pull/22282) (refactor: CheckFinalTx pass by reference instead of pointer by klementtan)\n* [#21527](https://github.com/bitcoin/bitcoin/pull/21527) (net_processing: lock clean up by ajtowns)\n* [#19888](https://github.com/bitcoin/bitcoin/pull/19888) (rpc, test: Improve getblockstats for unspendables by fjahr)\n* [#15606](https://github.com/bitcoin/bitcoin/pull/15606) (assumeutxo by jamesob)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-08-10T18:51:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#issuecomment-896232272",
      "id" : 896232272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
      "node_id" : "IC_kwDOABII5841a2tQ",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-26T02:38:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896232272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```bash\r\nvalidation.cpp:338:25: error: calling function 'TestLockPointValidity' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n        bool validLP =  TestLockPointValidity(m_chain, &lp);\r\n                        ^\r\nvalidation.cpp:339:41: error: calling function 'CoinsTip' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n        CCoinsViewMemPool view_mempool(&CoinsTip(), pool);\r\n                                        ^\r\nvalidation.cpp:340:14: error: calling function 'CheckFinalTx' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n        if (!CheckFinalTx(m_chain.Tip(), tx, flags)\r\n             ^\r\nvalidation.cpp:350:36: error: calling function 'CoinsTip' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n                const Coin &coin = CoinsTip().AccessCoin(txin.prevout);\r\n                                   ^\r\nvalidation.cpp:5113:5: error: calling function 'AssertLockHeldInternal<AnnotatedMixin<std::__1::recursive_mutex> >' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n    AssertLockHeld(::cs_main);\r\n    ^\r\n./sync.h:81:28: note: expanded from macro 'AssertLockHeld'\r\n#define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                           ^\r\nvalidation.cpp:5117:10: error: calling function 'check' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n    pool.check();\r\n         ^\r\nvalidation.cpp:5119:41: error: calling function 'CoinsTip' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n    CCoinsViewCache& active_coins_tip = CoinsTip();\r\n                                        ^\r\n7 errors generated.\r\n```",
      "created_at" : "2021-08-11T02:44:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#issuecomment-896456577",
      "id" : 896456577,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
      "node_id" : "IC_kwDOABII5841bteB",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-11T02:44:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896456577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> removeForReorg really feels like internal mempool functionality. Another tactic to remove the module links would be to make removeForReorg generic to any T ChainState class. Then you don't need to have the specifics of the implementation of T known within mempool.\r\n\r\nYeah, I see this. Perhaps the function could instead be parametrized by tip, coins cache, etc?",
      "created_at" : "2021-08-11T10:06:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#issuecomment-896691512",
      "id" : 896691512,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
      "node_id" : "IC_kwDOABII5841cm04",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-11T10:06:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896691512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've pushed a version that splits out the finality checking part of removeForReorg (parts that require validation functions CheckSequenceLocks and CheckFinalTx) into validation, but leaves most of it in txmempool. Perhaps a better separation?",
      "created_at" : "2021-08-18T20:34:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#issuecomment-901412474",
      "id" : 901412474,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
      "node_id" : "IC_kwDOABII5841unZ6",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-18T20:34:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901412474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "i don't think so :/\r\n\r\nedit: it still feels like an abstraction layer leak, the for loop is inner functionality. Have you given parametrizing by CChainState. a try? ",
      "created_at" : "2021-08-18T21:30:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#issuecomment-901443258",
      "id" : 901443258,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
      "node_id" : "IC_kwDOABII5841uu66",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-18T21:31:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901443258",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@JeremyRubin `CChainState` is what it's currently parametrized by - it's what causes the dependency on validation.h",
      "created_at" : "2021-08-19T08:43:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#issuecomment-901726060",
      "id" : 901726060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
      "node_id" : "IC_kwDOABII5841vz9s",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-19T08:43:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901726060",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok new approach. I added something similar to the `CConnman.ForEachNode` so we can pass in a lambda that captures what we need from chainstate. Validation isn't looking through `mapTx` anymore. The mempool gets a callable object and applies it to the entries internally.",
      "created_at" : "2021-08-19T14:01:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#issuecomment-901941089",
      "id" : 901941089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
      "node_id" : "IC_kwDOABII5841wodh",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-19T14:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/901941089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "i meant template paramterized by a generic ChainStateProvider type, that way it's clean depedency wise.. will check out the new approach later.",
      "created_at" : "2021-08-19T21:24:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#issuecomment-902258227",
      "id" : 902258227,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
      "node_id" : "IC_kwDOABII5841x14z",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-19T21:24:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902258227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "What's the latest on this PR? Am I right in thinking that an approach hasn't been settled on to avoid the circular dependency and that #22675 should be reviewed instead?\r\n\r\nedit: I guess this is just a RFC and draft PR so it is here in case an alternative approach is sketched out.",
      "created_at" : "2021-09-02T16:05:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#issuecomment-911839931",
      "id" : 911839931,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
      "node_id" : "IC_kwDOABII5842WZK7",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-02T17:17:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911839931",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed the CI issue. Ready for review.",
      "created_at" : "2021-09-10T13:31:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#issuecomment-916906730",
      "id" : 916906730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
      "node_id" : "IC_kwDOABII5842puLq",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-10T13:31:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916906730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22677#discussion_r714068419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22677"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714068419"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wonder if this function should be made more generic, into `RemoveWithDescendants(const setEntries& txToRemove, MemPoolRemovalReason reason)`, and then be called with `MemPoolRemovalReason::REORG` when removing transactions for a reorg. That'd deduplicate some of the code above in `removeRecursive()`.",
      "commit_id" : "ab3fef71edf2a9e3a36a15c1af6a360cccfa5b30",
      "created_at" : "2021-09-22T15:35:18Z",
      "diff_hunk" : "@@ -563,39 +562,11 @@ void CTxMemPool::removeRecursive(const CTransaction &origTx, MemPoolRemovalReaso\n         RemoveStaged(setAllRemoves, false, reason);\n }\n \n-void CTxMemPool::removeForReorg(CChainState& active_chainstate, int flags)\n+void CTxMemPool::removeForReorg(const setEntries& txToRemove)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#discussion_r714068419",
      "id" : 714068419,
      "line" : 565,
      "node_id" : "PRRC_kwDOABII584qj9HD",
      "original_commit_id" : "ab3fef71edf2a9e3a36a15c1af6a360cccfa5b30",
      "original_line" : 565,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 13,
      "pull_request_review_id" : 761087292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22677",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-22T16:15:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714068419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22677#discussion_r714077176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22677"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714077176"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`TestLockPointValidity()` can now be static in validation.cpp, since it's not used outside of that translation unit.",
      "commit_id" : "ab3fef71edf2a9e3a36a15c1af6a360cccfa5b30",
      "created_at" : "2021-09-22T15:44:54Z",
      "diff_hunk" : "@@ -366,8 +366,40 @@ void CChainState::MaybeUpdateMempoolForReorg(\n     // the disconnectpool that were added back and cleans up the mempool state.\n     m_mempool->UpdateTransactionsFromBlock(vHashUpdate);\n \n-    // We also need to remove any now-immature transactions\n-    m_mempool->removeForReorg(*this, STANDARD_LOCKTIME_VERIFY_FLAGS);\n+    // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n+    const auto filter_immature_nonfinal = [this, flags=STANDARD_LOCKTIME_VERIFY_FLAGS]\n+        (CTxMemPool::txiter it) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_mempool->cs)\n+    {\n+        AssertLockHeld(cs_main);\n+        AssertLockHeld(m_mempool->cs);\n+        const CTransaction& tx = it->GetTx();\n+        LockPoints lp = it->GetLockPoints();\n+        bool validLP =  TestLockPointValidity(m_chain, &lp);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#discussion_r714077176",
      "id" : 714077176,
      "line" : 377,
      "node_id" : "PRRC_kwDOABII584qj_P4",
      "original_commit_id" : "ab3fef71edf2a9e3a36a15c1af6a360cccfa5b30",
      "original_line" : 377,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 14,
      "pull_request_review_id" : 761087292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22677",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-22T16:15:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714077176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22677#discussion_r714078655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22677"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714078655"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This line has now been replaced by `return true;` in the lambda, which means that the `if (!validLP)` conditional below is not executed if we enter this branch. Is that intentional? If so, can you justify why it's safe to make that change?",
      "commit_id" : "ab3fef71edf2a9e3a36a15c1af6a360cccfa5b30",
      "created_at" : "2021-09-22T15:46:45Z",
      "diff_hunk" : "@@ -563,39 +562,11 @@ void CTxMemPool::removeRecursive(const CTransaction &origTx, MemPoolRemovalReaso\n         RemoveStaged(setAllRemoves, false, reason);\n }\n \n-void CTxMemPool::removeForReorg(CChainState& active_chainstate, int flags)\n+void CTxMemPool::removeForReorg(const setEntries& txToRemove)\n {\n-    // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     AssertLockHeld(cs);\n-    setEntries txToRemove;\n-    for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n-        const CTransaction& tx = it->GetTx();\n-        LockPoints lp = it->GetLockPoints();\n-        bool validLP =  TestLockPointValidity(active_chainstate.m_chain, &lp);\n-        CCoinsViewMemPool view_mempool(&active_chainstate.CoinsTip(), *this);\n-        if (!CheckFinalTx(active_chainstate.m_chain.Tip(), tx, flags)\n-            || !CheckSequenceLocks(active_chainstate.m_chain.Tip(), view_mempool, tx, flags, &lp, validLP)) {\n-            // Note if CheckSequenceLocks fails the LockPoints may still be invalid\n-            // So it's critical that we remove the tx and not depend on the LockPoints.\n-            txToRemove.insert(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#discussion_r714078655",
      "id" : 714078655,
      "line" : 580,
      "node_id" : "PRRC_kwDOABII584qj_m_",
      "original_commit_id" : "ab3fef71edf2a9e3a36a15c1af6a360cccfa5b30",
      "original_line" : 580,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 27,
      "pull_request_review_id" : 761087292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22677",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-22T16:15:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714078655",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22677#discussion_r714080918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22677"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714080918"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems like a behaviour change. Since `CTxMemPool::check()` is now called by `CChainState::CheckMempool()`, which itself has `if (GetRand(check_ratio) >= 1) return;`, then these checks will only get run 1/n^2 times.",
      "commit_id" : "ab3fef71edf2a9e3a36a15c1af6a360cccfa5b30",
      "created_at" : "2021-09-22T15:49:13Z",
      "diff_hunk" : "@@ -671,19 +642,9 @@ void CTxMemPool::clear()\n     _clear();\n }\n \n-static void CheckInputsAndUpdateCoins(const CTransaction& tx, CCoinsViewCache& mempoolDuplicate, const int64_t spendheight)\n-{\n-    TxValidationState dummy_state; // Not used. CheckTxInputs() should always pass\n-    CAmount txfee = 0;\n-    bool fCheckResult = tx.IsCoinBase() || Consensus::CheckTxInputs(tx, dummy_state, mempoolDuplicate, spendheight, txfee);\n-    assert(fCheckResult);\n-    UpdateCoins(tx, mempoolDuplicate, std::numeric_limits<int>::max());\n-}\n-\n-void CTxMemPool::check(CChainState& active_chainstate) const\n+void CTxMemPool::check() const\n {\n     if (m_check_ratio == 0) return;\n-\n     if (GetRand(m_check_ratio) >= 1) return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#discussion_r714080918",
      "id" : 714080918,
      "line" : 648,
      "node_id" : "PRRC_kwDOABII584qkAKW",
      "original_commit_id" : "ab3fef71edf2a9e3a36a15c1af6a360cccfa5b30",
      "original_line" : 648,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 69,
      "pull_request_review_id" : 761087292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22677",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-22T16:15:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714080918",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22677#discussion_r714097289"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22677"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714097289"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It'd be nice to remove these calls to mempool.check() from net_processing. It shouldn't be the client's responsibility to call into validation/mempool to check its invariants.\r\n\r\nThe diff is really easy:\r\n\r\n```diff\r\niff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 80655c61e7..636b4d1102 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2288,7 +2288,6 @@ void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\r\n             break;\r\n         }\r\n     }\r\n-    m_mempool.check(m_chainman.ActiveChainstate());\r\n }\r\n \r\n bool PeerManagerImpl::PrepareBlockFilterRequest(CNode& peer,\r\n@@ -3250,7 +3249,6 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\r\n         const TxValidationState& state = result.m_state;\r\n \r\n         if (result.m_result_type == MempoolAcceptResult::ResultType::VALID) {\r\n-            m_mempool.check(m_chainman.ActiveChainstate());\r\n             // As this version of the transaction was acceptable, we can forget about any\r\n             // requests for it.\r\n             m_txrequest.ForgetTxHash(tx.GetHash());\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex 2a66d96f22..8f1f33782b 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -1041,7 +1041,9 @@ static MempoolAcceptResult AcceptToMemoryPoolWithTime(const CChainParams& chainp\r\n MempoolAcceptResult AcceptToMemoryPool(CChainState& active_chainstate, CTxMemPool& pool, const CTransactionRef& tx,\r\n                                        bool bypass_limits, bool test_accept)\r\n {\r\n-    return AcceptToMemoryPoolWithTime(Params(), pool, active_chainstate, tx, GetTime(), bypass_limits, test_accept);\r\n+    auto ret = AcceptToMemoryPoolWithTime(Params(), pool, active_chainstate, tx, GetTime(), bypass_limits, test_accept);\r\n+    pool.check(active_chainstate);\r\n+    return ret;\r\n }\r\n \r\n PackageMempoolAcceptResult ProcessNewPackage(CChainState& active_chainstate, CTxMemPool& pool,\r\n```\r\nbranch here: https://github.com/jnewbery/bitcoin/tree/2021-09-no-mempool-check-in-net-processing\r\n\r\nThat's a _slight_ behaviour change since check() will get called a little more often, so it doesn't fit inside this PR, but by doing it first, this PR wouldn't need to touch net_processing. Thoughts?",
      "commit_id" : "ab3fef71edf2a9e3a36a15c1af6a360cccfa5b30",
      "created_at" : "2021-09-22T16:07:27Z",
      "diff_hunk" : "@@ -2288,7 +2288,7 @@ void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n             break;\n         }\n     }\n-    m_mempool.check(m_chainman.ActiveChainstate());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22677#discussion_r714097289",
      "id" : 714097289,
      "line" : 2291,
      "node_id" : "PRRC_kwDOABII584qkEKJ",
      "original_commit_id" : "ab3fef71edf2a9e3a36a15c1af6a360cccfa5b30",
      "original_line" : 2291,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 4,
      "pull_request_review_id" : 761087292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22677",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-22T16:15:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714097289",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
