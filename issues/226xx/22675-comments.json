[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nTIL Witness Replacement",
      "created_at" : "2021-08-10T14:48:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#issuecomment-896093753",
      "id" : 896093753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22675",
      "node_id" : "IC_kwDOABII5841aU45",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-10T14:48:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896093753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "A new circular dependency `policy/rbf -> txmempool -> validation -> policy/rbf` is introduced here, so I've added it to `EXPECTED_CIRCULAR_DEPENDENCIES` to suppress the issue. I understand this is not ideal. The main problem, I think, is the txmempool -> validation part (which already exists), so I've taken a crack at it in #22677.",
      "created_at" : "2021-08-10T16:33:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#issuecomment-896133317",
      "id" : 896133317,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22675",
      "node_id" : "IC_kwDOABII5841aejF",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-10T16:33:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896133317",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22665](https://github.com/bitcoin/bitcoin/pull/22665) (policy/rbf: don't return \"incorrect\" replaceability status by darosior)\n* [#22290](https://github.com/bitcoin/bitcoin/pull/22290) (Package Mempool Submission with Package Fee-Bumping by glozow)\n* [#10443](https://github.com/bitcoin/bitcoin/pull/10443) (Add fee_est tool for debugging fee estimation code by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-08-10T18:53:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#issuecomment-896233882",
      "id" : 896233882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22675",
      "node_id" : "IC_kwDOABII5841a3Ga",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-10T18:53:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896233882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2021-08-11T02:45:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#issuecomment-896457050",
      "id" : 896457050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22675",
      "node_id" : "IC_kwDOABII5841btla",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-11T02:45:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896457050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686672590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686672590"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Any reason this shouldn't go in `policy/policy.h`? It would get rid of the circular dependency as well\r\n\r\nAs precedent, we do have at least one BIP 125 specific constant there:\r\n```c++\r\n/** Default for -incrementalrelayfee, which sets the minimum feerate increase for mempool limiting or BIP 125 replacement **/\r\nstatic const unsigned int DEFAULT_INCREMENTAL_RELAY_FEE = 1000;\r\n```",
      "commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "created_at" : "2021-08-11T09:45:21Z",
      "diff_hunk" : "@@ -7,6 +7,10 @@\n \n #include <txmempool.h>\n \n+/** Maximum number of transactions that can be replaced by BIP125 RBF (Rule #5). This includes all\n+ * mempool conflicts and their descendants. */\n+static constexpr uint32_t MAX_BIP125_REPLACEMENT_CANDIDATES{100};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686672590",
      "id" : 686672590,
      "line" : 13,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjY3MjU5MA==",
      "original_commit_id" : "94655e96a43def6125fb602251313f1ab7693229",
      "original_line" : 12,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/policy/rbf.h",
      "position" : 8,
      "pull_request_review_id" : 727275844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T11:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686672590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686678031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686678031"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re 76354e503c039ae9c7e0d0f93191b211d699478c, nice ð I had the same thought when reading this code that it'd be more efficient to do something like this",
      "commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "created_at" : "2021-08-11T09:52:42Z",
      "diff_hunk" : "@@ -835,33 +835,36 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n                             newFeeRate.ToString(),\n                             oldFeeRate.ToString()));\n             }\n+        }\n+\n+        for (const auto& mi : setIterConflicting) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686678031",
      "id" : 686678031,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjY3ODAzMQ==",
      "original_commit_id" : "76354e503c039ae9c7e0d0f93191b211d699478c",
      "original_line" : 840,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 727275844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T11:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686678031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686711392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686711392"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess the reason it may overestimate here is due to the same descendant being counted multiple times when multiple conflicting parents share that same descendant?",
      "commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "created_at" : "2021-08-11T10:41:33Z",
      "diff_hunk" : "@@ -42,3 +46,38 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     // If we don't have a local mempool we can only check the transaction itself.\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n+\n+bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n+                      const CTxMemPool::setEntries setIterConflicting,\n+                      TxValidationState& state, CTxMemPool::setEntries& allConflicting)\n+{\n+    AssertLockHeld(m_pool.cs);\n+    const uint256 hash = tx.GetHash();\n+    std::set<uint256> setConflictsParents;\n+    uint64_t nConflictingCount = 0;\n+    for (const auto& mi : setIterConflicting) {\n+        for (const CTxIn &txin : mi->GetTx().vin)\n+        {\n+            setConflictsParents.insert(txin.prevout.hash);\n+        }\n+\n+        nConflictingCount += mi->GetCountWithDescendants();\n+        // This potentially overestimates the number of actual descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686711392",
      "id" : 686711392,
      "line" : 90,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjcxMTM5Mg==",
      "original_commit_id" : "b003c8da7539183fc22bcfdbb154b2cb17c2648e",
      "original_line" : 65,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : 59,
      "pull_request_review_id" : 727275844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T11:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686711392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686712403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686712403"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this necessary? Can't we just use `!SignalsOptInRBF` from `util/rbf.h`?\r\n\r\nNote: I realize this is a move only PR, but I'm just wondering, maybe it's a minor refactor later",
      "commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "created_at" : "2021-08-11T10:43:07Z",
      "diff_hunk" : "@@ -47,6 +47,29 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n \n+bool IsRBFOptOut(const CTransaction& txConflicting)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686712403",
      "id" : 686712403,
      "line" : 52,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjcxMjQwMw==",
      "original_commit_id" : "aa30c6f7d6eb62c1466d5272b39ee3d7e437cbda",
      "original_line" : 50,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : 21,
      "pull_request_review_id" : 727275844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T11:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686712403",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686717457"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686717457"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I'm sure if `util/rbf.h` existence is justified in the first place, but if we go with the current convention, `IsRBFOptOut` would seem to belong there",
      "commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "created_at" : "2021-08-11T10:51:05Z",
      "diff_hunk" : "@@ -47,6 +47,29 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n \n+bool IsRBFOptOut(const CTransaction& txConflicting)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686717457",
      "id" : 686717457,
      "in_reply_to_id" : 686712403,
      "line" : 52,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjcxNzQ1Nw==",
      "original_commit_id" : "aa30c6f7d6eb62c1466d5272b39ee3d7e437cbda",
      "original_line" : 50,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : 21,
      "pull_request_review_id" : 727275844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T11:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686717457",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686721462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686721462"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We are populating `setConflictsParents` in this method, but we never use it",
      "commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "created_at" : "2021-08-11T10:57:29Z",
      "diff_hunk" : "@@ -42,3 +48,174 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     // If we don't have a local mempool we can only check the transaction itself.\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n+\n+bool IsRBFOptOut(const CTransaction& txConflicting)\n+{\n+    // Allow opt-out of transaction replacement by setting\n+    // nSequence > MAX_BIP125_RBF_SEQUENCE (SEQUENCE_FINAL-2) on all inputs.\n+    //\n+    // SEQUENCE_FINAL-1 is picked to still allow use of nLockTime by\n+    // non-replaceable transactions. All inputs rather than just one\n+    // is for the sake of multi-party protocols, where we don't\n+    // want a single party to be able to disable replacement.\n+    //\n+    // Transactions that don't explicitly signal replaceability are\n+    // *not* replaceable with the current logic, even if one of their\n+    // unconfirmed ancestors signals replaceability. This diverges\n+    // from BIP125's inherited signaling description (see CVE-2021-31876).\n+    // Applications relying on first-seen mempool behavior should\n+    // check all unconfirmed ancestors; otherwise an opt-in ancestor\n+    // might be replaced, causing removal of this descendant.\n+    for (const CTxIn &_txin : txConflicting.vin) {\n+        if (_txin.nSequence <= MAX_BIP125_RBF_SEQUENCE) return false;\n+    }\n+    return true;\n+}\n+\n+bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n+                      const CTxMemPool::setEntries setIterConflicting,\n+                      TxValidationState& state, CTxMemPool::setEntries& allConflicting)\n+{\n+    AssertLockHeld(m_pool.cs);\n+    const uint256 hash = tx.GetHash();\n+    std::set<uint256> setConflictsParents;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686721462",
      "id" : 686721462,
      "line" : 81,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjcyMTQ2Mg==",
      "original_commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "original_line" : 81,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : 50,
      "pull_request_review_id" : 727275844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T11:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686721462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686722096"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686722096"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Now we are populating `setConflictsParents` again, the same way we did in `GetEntriesForRBF`, but we use it here",
      "commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "created_at" : "2021-08-11T10:58:27Z",
      "diff_hunk" : "@@ -42,3 +48,174 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     // If we don't have a local mempool we can only check the transaction itself.\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n+\n+bool IsRBFOptOut(const CTransaction& txConflicting)\n+{\n+    // Allow opt-out of transaction replacement by setting\n+    // nSequence > MAX_BIP125_RBF_SEQUENCE (SEQUENCE_FINAL-2) on all inputs.\n+    //\n+    // SEQUENCE_FINAL-1 is picked to still allow use of nLockTime by\n+    // non-replaceable transactions. All inputs rather than just one\n+    // is for the sake of multi-party protocols, where we don't\n+    // want a single party to be able to disable replacement.\n+    //\n+    // Transactions that don't explicitly signal replaceability are\n+    // *not* replaceable with the current logic, even if one of their\n+    // unconfirmed ancestors signals replaceability. This diverges\n+    // from BIP125's inherited signaling description (see CVE-2021-31876).\n+    // Applications relying on first-seen mempool behavior should\n+    // check all unconfirmed ancestors; otherwise an opt-in ancestor\n+    // might be replaced, causing removal of this descendant.\n+    for (const CTxIn &_txin : txConflicting.vin) {\n+        if (_txin.nSequence <= MAX_BIP125_RBF_SEQUENCE) return false;\n+    }\n+    return true;\n+}\n+\n+bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n+                      const CTxMemPool::setEntries setIterConflicting,\n+                      TxValidationState& state, CTxMemPool::setEntries& allConflicting)\n+{\n+    AssertLockHeld(m_pool.cs);\n+    const uint256 hash = tx.GetHash();\n+    std::set<uint256> setConflictsParents;\n+    uint64_t nConflictingCount = 0;\n+    for (const auto& mi : setIterConflicting) {\n+        for (const CTxIn &txin : mi->GetTx().vin)\n+        {\n+            setConflictsParents.insert(txin.prevout.hash);\n+        }\n+\n+        nConflictingCount += mi->GetCountWithDescendants();\n+        // This potentially overestimates the number of actual descendants\n+        // but we just want to be conservative to avoid doing too much\n+        // work.\n+        if (nConflictingCount > MAX_BIP125_REPLACEMENT_CANDIDATES) {\n+            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"too many potential replacements\",\n+                    strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n+                        hash.ToString(),\n+                        nConflictingCount,\n+                        MAX_BIP125_REPLACEMENT_CANDIDATES));\n+        }\n+    }\n+    // If not too many to replace, then calculate the set of\n+    // transactions that would have to be evicted\n+    for (CTxMemPool::txiter it : setIterConflicting) {\n+        m_pool.CalculateDescendants(it, allConflicting);\n+    }\n+    return true;\n+}\n+\n+bool HasNoNewUnconfirmed(const CTransaction& tx, CTxMemPool& m_pool,\n+                         const CTxMemPool::setEntries setIterConflicting, TxValidationState& state)\n+{\n+    AssertLockHeld(m_pool.cs);\n+    std::set<uint256> setConflictsParents;\n+    for (const auto& mi : setIterConflicting) {\n+        for (const CTxIn &txin : mi->GetTx().vin)\n+        {\n+            setConflictsParents.insert(txin.prevout.hash);\n+        }\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686722096",
      "id" : 686722096,
      "line" : 119,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjcyMjA5Ng==",
      "original_commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "original_line" : 119,
      "original_position" : 88,
      "original_start_line" : 113,
      "path" : "src/policy/rbf.cpp",
      "position" : 88,
      "pull_request_review_id" : 727275844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : 113,
      "start_side" : "RIGHT",
      "updated_at" : "2021-08-11T11:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686722096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686725070"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686725070"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Note: `nConflictingSize` is an unused variable",
      "commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "created_at" : "2021-08-11T11:03:17Z",
      "diff_hunk" : "@@ -42,3 +48,174 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     // If we don't have a local mempool we can only check the transaction itself.\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n+\n+bool IsRBFOptOut(const CTransaction& txConflicting)\n+{\n+    // Allow opt-out of transaction replacement by setting\n+    // nSequence > MAX_BIP125_RBF_SEQUENCE (SEQUENCE_FINAL-2) on all inputs.\n+    //\n+    // SEQUENCE_FINAL-1 is picked to still allow use of nLockTime by\n+    // non-replaceable transactions. All inputs rather than just one\n+    // is for the sake of multi-party protocols, where we don't\n+    // want a single party to be able to disable replacement.\n+    //\n+    // Transactions that don't explicitly signal replaceability are\n+    // *not* replaceable with the current logic, even if one of their\n+    // unconfirmed ancestors signals replaceability. This diverges\n+    // from BIP125's inherited signaling description (see CVE-2021-31876).\n+    // Applications relying on first-seen mempool behavior should\n+    // check all unconfirmed ancestors; otherwise an opt-in ancestor\n+    // might be replaced, causing removal of this descendant.\n+    for (const CTxIn &_txin : txConflicting.vin) {\n+        if (_txin.nSequence <= MAX_BIP125_RBF_SEQUENCE) return false;\n+    }\n+    return true;\n+}\n+\n+bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n+                      const CTxMemPool::setEntries setIterConflicting,\n+                      TxValidationState& state, CTxMemPool::setEntries& allConflicting)\n+{\n+    AssertLockHeld(m_pool.cs);\n+    const uint256 hash = tx.GetHash();\n+    std::set<uint256> setConflictsParents;\n+    uint64_t nConflictingCount = 0;\n+    for (const auto& mi : setIterConflicting) {\n+        for (const CTxIn &txin : mi->GetTx().vin)\n+        {\n+            setConflictsParents.insert(txin.prevout.hash);\n+        }\n+\n+        nConflictingCount += mi->GetCountWithDescendants();\n+        // This potentially overestimates the number of actual descendants\n+        // but we just want to be conservative to avoid doing too much\n+        // work.\n+        if (nConflictingCount > MAX_BIP125_REPLACEMENT_CANDIDATES) {\n+            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"too many potential replacements\",\n+                    strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n+                        hash.ToString(),\n+                        nConflictingCount,\n+                        MAX_BIP125_REPLACEMENT_CANDIDATES));\n+        }\n+    }\n+    // If not too many to replace, then calculate the set of\n+    // transactions that would have to be evicted\n+    for (CTxMemPool::txiter it : setIterConflicting) {\n+        m_pool.CalculateDescendants(it, allConflicting);\n+    }\n+    return true;\n+}\n+\n+bool HasNoNewUnconfirmed(const CTransaction& tx, CTxMemPool& m_pool,\n+                         const CTxMemPool::setEntries setIterConflicting, TxValidationState& state)\n+{\n+    AssertLockHeld(m_pool.cs);\n+    std::set<uint256> setConflictsParents;\n+    for (const auto& mi : setIterConflicting) {\n+        for (const CTxIn &txin : mi->GetTx().vin)\n+        {\n+            setConflictsParents.insert(txin.prevout.hash);\n+        }\n+    }\n+\n+    for (unsigned int j = 0; j < tx.vin.size(); j++)\n+    {\n+        // We don't want to accept replacements that require low\n+        // feerate junk to be mined first. Ideally we'd keep track of\n+        // the ancestor feerates and make the decision based on that,\n+        // but for now requiring all new inputs to be confirmed works.\n+        //\n+        // Note that if you relax this to make RBF a little more useful,\n+        // this may break the CalculateMempoolAncestors RBF relaxation,\n+        // above. See the comment above the first CalculateMempoolAncestors\n+        // call for more info.\n+        if (!setConflictsParents.count(tx.vin[j].prevout.hash))\n+        {\n+            // Rather than check the UTXO set - potentially expensive -\n+            // it's cheaper to just check if the new input refers to a\n+            // tx that's in the mempool.\n+            if (m_pool.exists(tx.vin[j].prevout.hash)) {\n+                return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"replacement-adds-unconfirmed\",\n+                        strprintf(\"replacement %s adds unconfirmed input, idx %d\",\n+                            tx.GetHash().ToString(), j));\n+            }\n+        }\n+    }\n+    return true;\n+}\n+\n+bool SpendsAndConflictsDisjoint(CTxMemPool::setEntries& setAncestors, std::set<uint256> setConflicts,\n+                                TxValidationState& state, const uint256& hash)\n+{\n+    for (CTxMemPool::txiter ancestorIt : setAncestors)\n+    {\n+        const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n+        if (setConflicts.count(hashAncestor))\n+        {\n+            return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-spends-conflicting-tx\",\n+                    strprintf(\"%s spends conflicting transaction %s\",\n+                        hash.ToString(),\n+                        hashAncestor.ToString()));\n+        }\n+    }\n+    return true;\n+}\n+\n+bool PaysMoreThanConflicts(const CTxMemPool::setEntries& setIterConflicting, CFeeRate newFeeRate,\n+                           TxValidationState& state, const uint256& hash)\n+{\n+    for (const auto& mi : setIterConflicting) {\n+        // Don't allow the replacement to reduce the feerate of the\n+        // mempool.\n+        //\n+        // We usually don't want to accept replacements with lower\n+        // feerates than what they replaced as that would lower the\n+        // feerate of the next block. Requiring that the feerate always\n+        // be increased is also an easy-to-reason about way to prevent\n+        // DoS attacks via replacements.\n+        //\n+        // We only consider the feerates of transactions being directly\n+        // replaced, not their indirect descendants. While that does\n+        // mean high feerate children are ignored when deciding whether\n+        // or not to replace, we do require the replacement to pay more\n+        // overall fees too, mitigating most cases.\n+        CFeeRate oldFeeRate(mi->GetModifiedFee(), mi->GetTxSize());\n+        if (newFeeRate <= oldFeeRate)\n+        {\n+            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"insufficient fee\",\n+                    strprintf(\"rejecting replacement %s; new feerate %s <= old feerate %s\",\n+                        hash.ToString(),\n+                        newFeeRate.ToString(),\n+                        oldFeeRate.ToString()));\n+        }\n+    }\n+    return true;\n+}\n+\n+bool PaysForRBF(CAmount nConflictingFees, size_t nConflictingSize,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686725070",
      "id" : 686725070,
      "line" : 195,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjcyNTA3MA==",
      "original_commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "original_line" : 195,
      "original_position" : 164,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : 164,
      "pull_request_review_id" : 727275844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T11:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686725070",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686859852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686859852"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hm, I think everything in util/rbf should be moved to policy/rbf actually :thinking: There's no reason to have two places for RBF (I think) and organization-wise, all RBF logic and code is policy.",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-11T13:59:36Z",
      "diff_hunk" : "@@ -47,6 +47,29 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n \n+bool IsRBFOptOut(const CTransaction& txConflicting)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686859852",
      "id" : 686859852,
      "in_reply_to_id" : 686712403,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njg1OTg1Mg==",
      "original_commit_id" : "aa30c6f7d6eb62c1466d5272b39ee3d7e437cbda",
      "original_line" : 50,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : null,
      "pull_request_review_id" : 727523177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T13:59:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686859852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686862622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686862622"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It wouldn't get rid of the circular dependency unfortunately, because it's caused by validation.cpp including policy/rbf.h",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-11T14:02:25Z",
      "diff_hunk" : "@@ -7,6 +7,10 @@\n \n #include <txmempool.h>\n \n+/** Maximum number of transactions that can be replaced by BIP125 RBF (Rule #5). This includes all\n+ * mempool conflicts and their descendants. */\n+static constexpr uint32_t MAX_BIP125_REPLACEMENT_CANDIDATES{100};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686862622",
      "id" : 686862622,
      "in_reply_to_id" : 686672590,
      "line" : 13,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njg2MjYyMg==",
      "original_commit_id" : "94655e96a43def6125fb602251313f1ab7693229",
      "original_line" : 13,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/policy/rbf.h",
      "position" : 8,
      "pull_request_review_id" : 727526907,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T14:02:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686862622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686863065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686863065"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, that's exactly right.",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-11T14:02:51Z",
      "diff_hunk" : "@@ -42,3 +46,38 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     // If we don't have a local mempool we can only check the transaction itself.\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n+\n+bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n+                      const CTxMemPool::setEntries setIterConflicting,\n+                      TxValidationState& state, CTxMemPool::setEntries& allConflicting)\n+{\n+    AssertLockHeld(m_pool.cs);\n+    const uint256 hash = tx.GetHash();\n+    std::set<uint256> setConflictsParents;\n+    uint64_t nConflictingCount = 0;\n+    for (const auto& mi : setIterConflicting) {\n+        for (const CTxIn &txin : mi->GetTx().vin)\n+        {\n+            setConflictsParents.insert(txin.prevout.hash);\n+        }\n+\n+        nConflictingCount += mi->GetCountWithDescendants();\n+        // This potentially overestimates the number of actual descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686863065",
      "id" : 686863065,
      "in_reply_to_id" : 686711392,
      "line" : 61,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njg2MzA2NQ==",
      "original_commit_id" : "b003c8da7539183fc22bcfdbb154b2cb17c2648e",
      "original_line" : 61,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : 30,
      "pull_request_review_id" : 727527469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T14:02:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686863065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686883898"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686883898"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure, it would make all users of policy/rbf depend on txmempool. Eg not sure the standalone binaries `wallet-util` and friends depend on it although they use util/rbf.",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-11T14:25:20Z",
      "diff_hunk" : "@@ -47,6 +47,29 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n \n+bool IsRBFOptOut(const CTransaction& txConflicting)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686883898",
      "id" : 686883898,
      "in_reply_to_id" : 686712403,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4Njg4Mzg5OA==",
      "original_commit_id" : "aa30c6f7d6eb62c1466d5272b39ee3d7e437cbda",
      "original_line" : 50,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : null,
      "pull_request_review_id" : 727556139,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T14:25:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686883898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686916506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686916506"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ahh good point @darosior. I was wrong. I think it makes sense for policy/* to depend on mempool, but I see how util/rbf is needed now.",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-11T15:00:07Z",
      "diff_hunk" : "@@ -47,6 +47,29 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n \n+bool IsRBFOptOut(const CTransaction& txConflicting)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686916506",
      "id" : 686916506,
      "in_reply_to_id" : 686712403,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjkxNjUwNg==",
      "original_commit_id" : "aa30c6f7d6eb62c1466d5272b39ee3d7e437cbda",
      "original_line" : 50,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : null,
      "pull_request_review_id" : 727600345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T15:05:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686916506",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686924148"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686924148"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oopsie good catch! did a few different attempts at moving BIP125, this is leftover from a previous one :sweat_smile: ",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-11T15:08:44Z",
      "diff_hunk" : "@@ -42,3 +48,174 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     // If we don't have a local mempool we can only check the transaction itself.\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n+\n+bool IsRBFOptOut(const CTransaction& txConflicting)\n+{\n+    // Allow opt-out of transaction replacement by setting\n+    // nSequence > MAX_BIP125_RBF_SEQUENCE (SEQUENCE_FINAL-2) on all inputs.\n+    //\n+    // SEQUENCE_FINAL-1 is picked to still allow use of nLockTime by\n+    // non-replaceable transactions. All inputs rather than just one\n+    // is for the sake of multi-party protocols, where we don't\n+    // want a single party to be able to disable replacement.\n+    //\n+    // Transactions that don't explicitly signal replaceability are\n+    // *not* replaceable with the current logic, even if one of their\n+    // unconfirmed ancestors signals replaceability. This diverges\n+    // from BIP125's inherited signaling description (see CVE-2021-31876).\n+    // Applications relying on first-seen mempool behavior should\n+    // check all unconfirmed ancestors; otherwise an opt-in ancestor\n+    // might be replaced, causing removal of this descendant.\n+    for (const CTxIn &_txin : txConflicting.vin) {\n+        if (_txin.nSequence <= MAX_BIP125_RBF_SEQUENCE) return false;\n+    }\n+    return true;\n+}\n+\n+bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n+                      const CTxMemPool::setEntries setIterConflicting,\n+                      TxValidationState& state, CTxMemPool::setEntries& allConflicting)\n+{\n+    AssertLockHeld(m_pool.cs);\n+    const uint256 hash = tx.GetHash();\n+    std::set<uint256> setConflictsParents;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686924148",
      "id" : 686924148,
      "in_reply_to_id" : 686721462,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjkyNDE0OA==",
      "original_commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "original_line" : 81,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : null,
      "pull_request_review_id" : 727610919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T15:08:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686924148",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686924532"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686924532"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Removed - thanks!",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-11T15:09:05Z",
      "diff_hunk" : "@@ -42,3 +48,174 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     // If we don't have a local mempool we can only check the transaction itself.\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n+\n+bool IsRBFOptOut(const CTransaction& txConflicting)\n+{\n+    // Allow opt-out of transaction replacement by setting\n+    // nSequence > MAX_BIP125_RBF_SEQUENCE (SEQUENCE_FINAL-2) on all inputs.\n+    //\n+    // SEQUENCE_FINAL-1 is picked to still allow use of nLockTime by\n+    // non-replaceable transactions. All inputs rather than just one\n+    // is for the sake of multi-party protocols, where we don't\n+    // want a single party to be able to disable replacement.\n+    //\n+    // Transactions that don't explicitly signal replaceability are\n+    // *not* replaceable with the current logic, even if one of their\n+    // unconfirmed ancestors signals replaceability. This diverges\n+    // from BIP125's inherited signaling description (see CVE-2021-31876).\n+    // Applications relying on first-seen mempool behavior should\n+    // check all unconfirmed ancestors; otherwise an opt-in ancestor\n+    // might be replaced, causing removal of this descendant.\n+    for (const CTxIn &_txin : txConflicting.vin) {\n+        if (_txin.nSequence <= MAX_BIP125_RBF_SEQUENCE) return false;\n+    }\n+    return true;\n+}\n+\n+bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n+                      const CTxMemPool::setEntries setIterConflicting,\n+                      TxValidationState& state, CTxMemPool::setEntries& allConflicting)\n+{\n+    AssertLockHeld(m_pool.cs);\n+    const uint256 hash = tx.GetHash();\n+    std::set<uint256> setConflictsParents;\n+    uint64_t nConflictingCount = 0;\n+    for (const auto& mi : setIterConflicting) {\n+        for (const CTxIn &txin : mi->GetTx().vin)\n+        {\n+            setConflictsParents.insert(txin.prevout.hash);\n+        }\n+\n+        nConflictingCount += mi->GetCountWithDescendants();\n+        // This potentially overestimates the number of actual descendants\n+        // but we just want to be conservative to avoid doing too much\n+        // work.\n+        if (nConflictingCount > MAX_BIP125_REPLACEMENT_CANDIDATES) {\n+            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"too many potential replacements\",\n+                    strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n+                        hash.ToString(),\n+                        nConflictingCount,\n+                        MAX_BIP125_REPLACEMENT_CANDIDATES));\n+        }\n+    }\n+    // If not too many to replace, then calculate the set of\n+    // transactions that would have to be evicted\n+    for (CTxMemPool::txiter it : setIterConflicting) {\n+        m_pool.CalculateDescendants(it, allConflicting);\n+    }\n+    return true;\n+}\n+\n+bool HasNoNewUnconfirmed(const CTransaction& tx, CTxMemPool& m_pool,\n+                         const CTxMemPool::setEntries setIterConflicting, TxValidationState& state)\n+{\n+    AssertLockHeld(m_pool.cs);\n+    std::set<uint256> setConflictsParents;\n+    for (const auto& mi : setIterConflicting) {\n+        for (const CTxIn &txin : mi->GetTx().vin)\n+        {\n+            setConflictsParents.insert(txin.prevout.hash);\n+        }\n+    }\n+\n+    for (unsigned int j = 0; j < tx.vin.size(); j++)\n+    {\n+        // We don't want to accept replacements that require low\n+        // feerate junk to be mined first. Ideally we'd keep track of\n+        // the ancestor feerates and make the decision based on that,\n+        // but for now requiring all new inputs to be confirmed works.\n+        //\n+        // Note that if you relax this to make RBF a little more useful,\n+        // this may break the CalculateMempoolAncestors RBF relaxation,\n+        // above. See the comment above the first CalculateMempoolAncestors\n+        // call for more info.\n+        if (!setConflictsParents.count(tx.vin[j].prevout.hash))\n+        {\n+            // Rather than check the UTXO set - potentially expensive -\n+            // it's cheaper to just check if the new input refers to a\n+            // tx that's in the mempool.\n+            if (m_pool.exists(tx.vin[j].prevout.hash)) {\n+                return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"replacement-adds-unconfirmed\",\n+                        strprintf(\"replacement %s adds unconfirmed input, idx %d\",\n+                            tx.GetHash().ToString(), j));\n+            }\n+        }\n+    }\n+    return true;\n+}\n+\n+bool SpendsAndConflictsDisjoint(CTxMemPool::setEntries& setAncestors, std::set<uint256> setConflicts,\n+                                TxValidationState& state, const uint256& hash)\n+{\n+    for (CTxMemPool::txiter ancestorIt : setAncestors)\n+    {\n+        const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n+        if (setConflicts.count(hashAncestor))\n+        {\n+            return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-spends-conflicting-tx\",\n+                    strprintf(\"%s spends conflicting transaction %s\",\n+                        hash.ToString(),\n+                        hashAncestor.ToString()));\n+        }\n+    }\n+    return true;\n+}\n+\n+bool PaysMoreThanConflicts(const CTxMemPool::setEntries& setIterConflicting, CFeeRate newFeeRate,\n+                           TxValidationState& state, const uint256& hash)\n+{\n+    for (const auto& mi : setIterConflicting) {\n+        // Don't allow the replacement to reduce the feerate of the\n+        // mempool.\n+        //\n+        // We usually don't want to accept replacements with lower\n+        // feerates than what they replaced as that would lower the\n+        // feerate of the next block. Requiring that the feerate always\n+        // be increased is also an easy-to-reason about way to prevent\n+        // DoS attacks via replacements.\n+        //\n+        // We only consider the feerates of transactions being directly\n+        // replaced, not their indirect descendants. While that does\n+        // mean high feerate children are ignored when deciding whether\n+        // or not to replace, we do require the replacement to pay more\n+        // overall fees too, mitigating most cases.\n+        CFeeRate oldFeeRate(mi->GetModifiedFee(), mi->GetTxSize());\n+        if (newFeeRate <= oldFeeRate)\n+        {\n+            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"insufficient fee\",\n+                    strprintf(\"rejecting replacement %s; new feerate %s <= old feerate %s\",\n+                        hash.ToString(),\n+                        newFeeRate.ToString(),\n+                        oldFeeRate.ToString()));\n+        }\n+    }\n+    return true;\n+}\n+\n+bool PaysForRBF(CAmount nConflictingFees, size_t nConflictingSize,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r686924532",
      "id" : 686924532,
      "in_reply_to_id" : 686725070,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjkyNDUzMg==",
      "original_commit_id" : "520d3efda0128c3e87f5f56f1c282d0e8b295d49",
      "original_line" : 195,
      "original_position" : 164,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : null,
      "pull_request_review_id" : 727611376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-11T15:09:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686924532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "crACK 6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-12T01:24:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#issuecomment-897274755",
      "id" : 897274755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22675",
      "node_id" : "IC_kwDOABII5841e1OD",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-12T01:24:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/897274755",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-08-12T12:11:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#issuecomment-897587220",
      "id" : 897587220,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22675",
      "node_id" : "IC_kwDOABII5841gBgU",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-12T12:11:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/897587220",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Tested ACK 6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-13T14:49:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#issuecomment-898510534",
      "id" : 898510534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22675",
      "node_id" : "IC_kwDOABII5841ji7G",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-13T14:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898510534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688663550"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688663550"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess for performance reasons, we should pass `setIterConflicting` by reference, rather than by value?\r\n```suggestion\r\n                      const CTxMemPool::setEntries& setIterConflicting,\r\n```",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-13T17:12:07Z",
      "diff_hunk" : "@@ -43,3 +47,31 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n \n+bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n+                      const CTxMemPool::setEntries setIterConflicting,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688663550",
      "id" : 688663550,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODY2MzU1MA==",
      "original_commit_id" : "474258f4296878a3740c8e19c9358ba4134cd48d",
      "original_line" : 51,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : 22,
      "pull_request_review_id" : 729819432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-13T17:30:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688663550",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688667057"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688667057"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This header doesn't seem to be directly needed in this compilation unit (strings _are_ used as return values/parameters for `uint256.ToString()` and `strprintf`, but it's the job of the headers offering those functions to already also include `<string>`).\r\n```suggestion\r\n```",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-13T17:18:42Z",
      "diff_hunk" : "@@ -2,9 +2,13 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <consensus/validation.h>\n+#include <logging.h>\n #include <policy/rbf.h>\n #include <util/rbf.h>\n \n+#include <string>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688667057",
      "id" : 688667057,
      "line" : 12,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODY2NzA1Nw==",
      "original_commit_id" : "474258f4296878a3740c8e19c9358ba4134cd48d",
      "original_line" : 10,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : 11,
      "pull_request_review_id" : 729819432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-13T17:30:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688667057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688975344"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688975344"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\nbool HasNoNewUnconfirmed(const CTransaction& tx, const CTxMemPool& m_pool,\r\n                         const CTxMemPool::setEntries& setIterConflicting, TxValidationState& state)\r\n```",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-14T18:04:08Z",
      "diff_hunk" : "@@ -75,3 +75,40 @@ bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n     return true;\n }\n \n+bool HasNoNewUnconfirmed(const CTransaction& tx, CTxMemPool& m_pool,\n+                         const CTxMemPool::setEntries setIterConflicting, TxValidationState& state)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688975344",
      "id" : 688975344,
      "line" : 81,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODk3NTM0NA==",
      "original_commit_id" : "7558a4f0c1f00b35639adcd9772b6cdc9bd4431c",
      "original_line" : 79,
      "original_position" : 5,
      "original_start_line" : 78,
      "path" : "src/policy/rbf.cpp",
      "position" : 50,
      "pull_request_review_id" : 730123757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : 80,
      "start_side" : "RIGHT",
      "updated_at" : "2021-08-14T18:43:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688975344",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688976433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688976433"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\nbool SpendsAndConflictsDisjoint(const CTxMemPool::setEntries& setAncestors, const std::set<uint256>& setConflicts,\r\n```",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-14T18:15:21Z",
      "diff_hunk" : "@@ -112,3 +112,20 @@ bool HasNoNewUnconfirmed(const CTransaction& tx, CTxMemPool& m_pool,\n     }\n     return true;\n }\n+\n+bool SpendsAndConflictsDisjoint(CTxMemPool::setEntries& setAncestors, std::set<uint256> setConflicts,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688976433",
      "id" : 688976433,
      "line" : 118,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODk3NjQzMw==",
      "original_commit_id" : "85feb62fbf8c3486992926b685d4df0705c5ca24",
      "original_line" : 116,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : 87,
      "pull_request_review_id" : 730123757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-14T18:43:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688976433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688976657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688976657"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n * returns true if the intersection is empty, false if otherwise.\r\n```",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-14T18:17:45Z",
      "diff_hunk" : "@@ -51,4 +51,12 @@ bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n bool HasNoNewUnconfirmed(const CTransaction& tx, CTxMemPool& m_pool,\n                          const CTxMemPool::setEntries setIterConflicting,\n                          TxValidationState& state) EXCLUSIVE_LOCKS_REQUIRED(m_pool.cs);\n+\n+/** Check the intersection between original mempool transactions (candidates for being replaced) and\n+ * the ancestors of replacement transactions.\n+ * @param[in]   hash    Transaction ID, included in the error message if violation occurs.\n+ * returns false if the intersection is empty, true if otherwise.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688976657",
      "id" : 688976657,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODk3NjY1Nw==",
      "original_commit_id" : "85feb62fbf8c3486992926b685d4df0705c5ca24",
      "original_line" : 58,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/policy/rbf.h",
      "position" : 35,
      "pull_request_review_id" : 730123757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-14T18:43:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688976657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688977532"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688977532"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This line removal must be unintentional (three placeholders, but only two arguments)? Quite a pity that the compiler doesn't warn us in this case. At least the tinyformat library seems to be nice enough to notice us at runtime :)\r\n```\r\n$ ./test/functional/feature_rbf.py\r\n.....\r\n.....\r\n2021-08-14T18:32:49.823000Z TestFramework (INFO): Running test replacement relay fee...\r\n2021-08-14T18:32:49.834000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):                                                                                                                                                             File \"/home/honey/bitcoin_prrev/test/functional/test_framework/util.py\", line 132, in try_rpc\r\n    fun(*args, **kwds)\r\n  File \"/home/honey/bitcoin_prrev/test/functional/test_framework/coverage.py\", line 49, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/home/honey/bitcoin_prrev/test/functional/test_framework/authproxy.py\", line 146, in __call__\r\n    raise JSONRPCException(response['error'], status)\r\ntest_framework.authproxy.JSONRPCException: tinyformat: Too many conversion specifiers in format string (-1)\r\n```",
      "commit_id" : "6a0a8ef791400d78fb4192a81a392131be78270b",
      "created_at" : "2021-08-14T18:28:17Z",
      "diff_hunk" : "@@ -828,7 +804,6 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n             return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"insufficient fee\",\n                     strprintf(\"rejecting replacement %s, not enough additional fees to relay; %s < %s\",\n                         hash.ToString(),\n-                        FormatMoney(nDeltaFees),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r688977532",
      "id" : 688977532,
      "line" : 909,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4ODk3NzUzMg==",
      "original_commit_id" : "a30b0270d0129f16573827d45250aa42912803d3",
      "original_line" : 831,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 171,
      "pull_request_review_id" : 730123757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-14T18:43:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/688977532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689346785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689346785"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "woah good catch O.o",
      "commit_id" : "192193c7c420ebbbac6bb0a60778e6a352b3d67c",
      "created_at" : "2021-08-16T08:42:45Z",
      "diff_hunk" : "@@ -828,7 +804,6 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n             return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"insufficient fee\",\n                     strprintf(\"rejecting replacement %s, not enough additional fees to relay; %s < %s\",\n                         hash.ToString(),\n-                        FormatMoney(nDeltaFees),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689346785",
      "id" : 689346785,
      "in_reply_to_id" : 688977532,
      "line" : 909,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTM0Njc4NQ==",
      "original_commit_id" : "a30b0270d0129f16573827d45250aa42912803d3",
      "original_line" : 909,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 171,
      "pull_request_review_id" : 730465340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-16T08:42:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689346785",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689392421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689392421"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point, done!",
      "commit_id" : "192193c7c420ebbbac6bb0a60778e6a352b3d67c",
      "created_at" : "2021-08-16T09:48:01Z",
      "diff_hunk" : "@@ -43,3 +47,31 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n     return SignalsOptInRBF(tx) ? RBFTransactionState::REPLACEABLE_BIP125 : RBFTransactionState::UNKNOWN;\n }\n \n+bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n+                      const CTxMemPool::setEntries setIterConflicting,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689392421",
      "id" : 689392421,
      "in_reply_to_id" : 688663550,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTM5MjQyMQ==",
      "original_commit_id" : "474258f4296878a3740c8e19c9358ba4134cd48d",
      "original_line" : 51,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : null,
      "pull_request_review_id" : 730524212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-16T09:48:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689392421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689392517"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689392517"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "192193c7c420ebbbac6bb0a60778e6a352b3d67c",
      "created_at" : "2021-08-16T09:48:10Z",
      "diff_hunk" : "@@ -2,9 +2,13 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <consensus/validation.h>\n+#include <logging.h>\n #include <policy/rbf.h>\n #include <util/rbf.h>\n \n+#include <string>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689392517",
      "id" : 689392517,
      "in_reply_to_id" : 688667057,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTM5MjUxNw==",
      "original_commit_id" : "474258f4296878a3740c8e19c9358ba4134cd48d",
      "original_line" : 10,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : null,
      "pull_request_review_id" : 730524333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-16T09:48:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689392517",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689392704"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689392704"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "192193c7c420ebbbac6bb0a60778e6a352b3d67c",
      "created_at" : "2021-08-16T09:48:27Z",
      "diff_hunk" : "@@ -75,3 +75,40 @@ bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n     return true;\n }\n \n+bool HasNoNewUnconfirmed(const CTransaction& tx, CTxMemPool& m_pool,\n+                         const CTxMemPool::setEntries setIterConflicting, TxValidationState& state)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689392704",
      "id" : 689392704,
      "in_reply_to_id" : 688975344,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTM5MjcwNA==",
      "original_commit_id" : "7558a4f0c1f00b35639adcd9772b6cdc9bd4431c",
      "original_line" : 79,
      "original_position" : 5,
      "original_start_line" : 78,
      "path" : "src/policy/rbf.cpp",
      "position" : null,
      "pull_request_review_id" : 730524556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-08-16T09:48:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689392704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689393199"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689393199"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point, done",
      "commit_id" : "192193c7c420ebbbac6bb0a60778e6a352b3d67c",
      "created_at" : "2021-08-16T09:49:09Z",
      "diff_hunk" : "@@ -112,3 +112,20 @@ bool HasNoNewUnconfirmed(const CTransaction& tx, CTxMemPool& m_pool,\n     }\n     return true;\n }\n+\n+bool SpendsAndConflictsDisjoint(CTxMemPool::setEntries& setAncestors, std::set<uint256> setConflicts,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689393199",
      "id" : 689393199,
      "in_reply_to_id" : 688976433,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTM5MzE5OQ==",
      "original_commit_id" : "85feb62fbf8c3486992926b685d4df0705c5ca24",
      "original_line" : 116,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/policy/rbf.cpp",
      "position" : null,
      "pull_request_review_id" : 730525111,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-16T09:49:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689393199",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689393296"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689393296"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed",
      "commit_id" : "192193c7c420ebbbac6bb0a60778e6a352b3d67c",
      "created_at" : "2021-08-16T09:49:17Z",
      "diff_hunk" : "@@ -51,4 +51,12 @@ bool GetEntriesForRBF(const CTransaction& tx, CTxMemPool& m_pool,\n bool HasNoNewUnconfirmed(const CTransaction& tx, CTxMemPool& m_pool,\n                          const CTxMemPool::setEntries setIterConflicting,\n                          TxValidationState& state) EXCLUSIVE_LOCKS_REQUIRED(m_pool.cs);\n+\n+/** Check the intersection between original mempool transactions (candidates for being replaced) and\n+ * the ancestors of replacement transactions.\n+ * @param[in]   hash    Transaction ID, included in the error message if violation occurs.\n+ * returns false if the intersection is empty, true if otherwise.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689393296",
      "id" : 689393296,
      "in_reply_to_id" : 688976657,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTM5MzI5Ng==",
      "original_commit_id" : "85feb62fbf8c3486992926b685d4df0705c5ca24",
      "original_line" : 58,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/policy/rbf.h",
      "position" : null,
      "pull_request_review_id" : 730525239,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-16T09:49:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689393296",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689398361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689398361"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed",
      "commit_id" : "192193c7c420ebbbac6bb0a60778e6a352b3d67c",
      "created_at" : "2021-08-16T09:56:52Z",
      "diff_hunk" : "@@ -828,7 +804,6 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n             return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"insufficient fee\",\n                     strprintf(\"rejecting replacement %s, not enough additional fees to relay; %s < %s\",\n                         hash.ToString(),\n-                        FormatMoney(nDeltaFees),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689398361",
      "id" : 689398361,
      "in_reply_to_id" : 688977532,
      "line" : 909,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTM5ODM2MQ==",
      "original_commit_id" : "a30b0270d0129f16573827d45250aa42912803d3",
      "original_line" : 909,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 171,
      "pull_request_review_id" : 730531942,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-16T09:56:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689398361",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\r\n> To be extra-cautious, I also compiled and ran unit tests + the functional test feature_rbf.py on every commit.\r\n> Left some more suggestions considering const-correctness and passing by reference rather than by value. On the second-to-last commit [a30b027](https://github.com/bitcoin/bitcoin/commit/a30b0270d0129f16573827d45250aa42912803d3) the test feature_rbf.py currently fails, see comment below. In the last commit this is fixed, as the deleted strprintf() argument line is re-introduced in the helper function.\r\n\r\nThanks @theStack and good catch! Fixed. Good idea for reviewers to run `git rebase --exec \"make check; test/functional/feature_rbf.py\" -i HEAD~11` in general\r\n\r\nAlso added a small scripted diff style cleanup, should be simple to review",
      "created_at" : "2021-08-16T09:58:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#issuecomment-899381767",
      "id" : 899381767,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22675",
      "node_id" : "IC_kwDOABII5841m3oH",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-16T09:58:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899381767",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689596026"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689596026"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Concept ACK, but I think we should avoid adding a circular dependency here.\r\nEdit: oh, I see you already have a PR, #22677, for this. I guess it's fine under the condition that it's temporarily (to keep this one move-only).",
      "commit_id" : "192193c7c420ebbbac6bb0a60778e6a352b3d67c",
      "created_at" : "2021-08-16T14:38:21Z",
      "diff_hunk" : "@@ -15,6 +15,7 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"index/base -> validation -> index/blockfilterindex -> index/base\"\n     \"index/coinstatsindex -> node/coinstats -> index/coinstatsindex\"\n     \"policy/fees -> txmempool -> policy/fees\"\n+    \"policy/rbf -> txmempool -> validation -> policy/rbf\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22675#discussion_r689596026",
      "id" : 689596026,
      "line" : 18,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTU5NjAyNg==",
      "original_commit_id" : "192193c7c420ebbbac6bb0a60778e6a352b3d67c",
      "original_line" : 18,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/lint/lint-circular-dependencies.sh",
      "position" : 4,
      "pull_request_review_id" : 730794542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22675",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-16T14:47:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689596026",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
