[
   {
      "body" : "@jnewbery Sorry for taking so long. Assuming there is a race condition where your side ends up scanning the chain before the abort makes it through, this should definitely fix it, I think. The tests take ~4 mins on my machine, but they're already in extended tests.\r\nIf this still shows intermittent failures on your end, I will need to go back to the drawing board, as it has to be something other than the above.",
      "created_at" : "2017-08-10T09:27:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-321500351",
      "id" : 321500351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10367",
      "updated_at" : "2017-08-10T09:27:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321500351",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "This may be specific to my local environment, but if I try to run this test multiple times in parallel, I get failures:\r\n\r\n```\r\nÃ¢ÂÂ ./test_runner.py $(for i in {1..40}; do echo -n 'import-abort-rescan '; done)\r\nTemporary test directory at /tmp/user/1000/bitcoin_test_runner_20170814_134812\r\nWARNING! The following scripts are not being run: ['test_bitcoincli.py', 'bip65-cltv.py', 'wallet-labels.py', 'p2p-fullblocktest2.py', 'bitcoin_cli.py', 'keypool-topup.py', 'wallet-hd-restore.py', 'disablehot.py', 'blocknotify.py', 'getblocktemplate_proposals.py', 'resendwallettransactions.py', 'minchainwork.py', 'walletnotify.py', 'bipdersig.py', 'datalogging.py']. Check the test lists in test_runner.py.\r\n.......................................................................................................................................................................................\r\nimport-abort-rescan.py failed, Duration: 97 s\r\n\r\nstdout:\r\n2017-08-14 13:48:33.367000 TestFramework (INFO): Initializing test directory /tmp/user/1000/bitcoin_test_runner_20170814_134812/import-abort-rescan_118\r\n2017-08-14 13:48:38.719000 TestFramework (INFO): Creating blocks with transactions ...\r\n2017-08-14 13:48:38.720000 TestFramework (INFO): ...  0%\r\n2017-08-14 13:49:10.376000 TestFramework (ERROR): JSONRPC error\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 169, in _get_response\r\n    http_response = self.__conn.getresponse()\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1197, in getresponse\r\n    response.begin()\r\n  File \"/usr/lib/python3.5/http/client.py\", line 297, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/usr/lib/python3.5/http/client.py\", line 258, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"/usr/lib/python3.5/socket.py\", line 575, in readinto\r\n    return self._sock.recv_into(b)\r\nsocket.timeout: timed out\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 149, in main\r\n    self.run_test()\r\n  File \"/home/ubuntu/bitcoin/test/functional/import-abort-rescan.py\", line 32, in run_test\r\n    self.nodes[0].sendtoaddress(addr, 0.1)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/coverage.py\", line 46, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 152, in __call__\r\n    response = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 126, in _request\r\n    return self._get_response()\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 176, in _get_response\r\n    self.__conn.timeout)})\r\ntest_framework.authproxy.JSONRPCException: 'sendtoaddress' RPC took longer than 30.000000 seconds. Consider using larger timeout for calls that take longer to return. (-344)\r\n2017-08-14 13:49:10.377000 TestFramework (INFO): Stopping nodes\r\n2017-08-14 13:49:10.377000 TestFramework (ERROR): Unable to stop node\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py\", line 254, in stop_node\r\n    self.nodes[i].stop()\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/coverage.py\", line 46, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 152, in __call__\r\n    response = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/home/ubuntu/bitcoin/test/functional/test_framework/authproxy.py\", line 125, in _request\r\n    self.__conn.request(method, path, postdata, headers)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1106, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1141, in _send_request\r\n    self.putrequest(method, url, **skips)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 974, in putrequest\r\n    raise CannotSendRequest(self.__state)\r\nhttp.client.CannotSendRequest: Request-sent\r\n```\r\n\r\nI'm running this in an ubuntu VM with quite slow spinning disk i/o.\r\n\r\n@kallewoof - if you run `./test_runner.py $(for i in {1..40}; do echo -n 'import-abort-rescan '; done)` do you get all success?",
      "created_at" : "2017-08-14T13:55:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322196718",
      "id" : 322196718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10367",
      "updated_at" : "2017-08-14T13:55:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322196718",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Just fyi\r\n\r\n```sh\r\n./test_runner.py $(for i in {1..40}; do echo -n 'import-abort-rescan '; done)\r\n```\r\n\r\nis passing for me on an ssd.",
      "created_at" : "2017-08-14T14:14:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322201496",
      "id" : 322201496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10367",
      "updated_at" : "2017-08-14T14:14:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322201496",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "Thanks @MarcoFalke - probably caused by my slow disk in that case.",
      "created_at" : "2017-08-14T15:01:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322214745",
      "id" : 322214745,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10367",
      "updated_at" : "2017-08-14T15:01:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322214745",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "Yeah. Though, I think tests should run and pass on all platforms that are capable of running Bitcoin Core.",
      "created_at" : "2017-08-14T15:06:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322215953",
      "id" : 322215953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10367",
      "updated_at" : "2017-08-14T15:06:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/322215953",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133007116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10367"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133007116"
         }
      },
      "body" : "nit: prefer imports to be in PEP-8 ordering (standard libraries first)",
      "commit_id" : "4eb87c27ee6918f03141264957d0c62b60efc9db",
      "created_at" : "2017-08-14T17:14:27Z",
      "diff_hunk" : "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet import RPCs.\n+\n+Test rescan behavior of importprivkey when aborted. The test ensures that:\n+1. The abortrescan command indeed stops the rescan process.\n+2. Subsequent rescan catches the aborted address UTXO\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal, get_rpc_proxy)\n+from decimal import Decimal",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133007116",
      "id" : 133007116,
      "original_commit_id" : "4eb87c27ee6918f03141264957d0c62b60efc9db",
      "original_position" : 14,
      "path" : "test/functional/import-abort-rescan.py",
      "position" : 14,
      "pull_request_review_id" : 56141828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10367",
      "updated_at" : "2017-08-14T17:20:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133007116",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133007202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10367"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133007202"
         }
      },
      "body" : "No need to override method if you're just calling into `super()`",
      "commit_id" : "4eb87c27ee6918f03141264957d0c62b60efc9db",
      "created_at" : "2017-08-14T17:14:49Z",
      "diff_hunk" : "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet import RPCs.\n+\n+Test rescan behavior of importprivkey when aborted. The test ensures that:\n+1. The abortrescan command indeed stops the rescan process.\n+2. Subsequent rescan catches the aborted address UTXO\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal, get_rpc_proxy)\n+from decimal import Decimal\n+import threading # for bg importprivkey\n+import time      # for sleep\n+\n+class ImportAbortRescanTest(BitcoinTestFramework):\n+    def __init__(self):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133007202",
      "id" : 133007202,
      "original_commit_id" : "4eb87c27ee6918f03141264957d0c62b60efc9db",
      "original_position" : 19,
      "path" : "test/functional/import-abort-rescan.py",
      "position" : 19,
      "pull_request_review_id" : 56141828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10367",
      "updated_at" : "2017-08-14T17:20:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133007202",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133007555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10367"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133007555"
         }
      },
      "body" : "nit: if block should appear on the next line. Same for the `if xxxxx: break` lines below",
      "commit_id" : "4eb87c27ee6918f03141264957d0c62b60efc9db",
      "created_at" : "2017-08-14T17:16:04Z",
      "diff_hunk" : "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet import RPCs.\n+\n+Test rescan behavior of importprivkey when aborted. The test ensures that:\n+1. The abortrescan command indeed stops the rescan process.\n+2. Subsequent rescan catches the aborted address UTXO\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal, get_rpc_proxy)\n+from decimal import Decimal\n+import threading # for bg importprivkey\n+import time      # for sleep\n+\n+class ImportAbortRescanTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        # self.setup_clean_chain = False\n+\n+    def run_test(self):\n+        # Generate for BTC\n+        self.nodes[0].generate(300)\n+        self.log.info(\"Creating blocks with transactions ...\")\n+        # Make blocks with spam to cause rescan delay\n+        for i in range(200):\n+            if i % 50 == 0: self.log.info(\"... %2.f%%\", 100.0 / 200.0 * i)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133007555",
      "id" : 133007555,
      "original_commit_id" : "4eb87c27ee6918f03141264957d0c62b60efc9db",
      "original_position" : 29,
      "path" : "test/functional/import-abort-rescan.py",
      "position" : 29,
      "pull_request_review_id" : 56141828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10367",
      "updated_at" : "2017-08-14T17:20:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133007555",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133008105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10367"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133008105"
         }
      },
      "body" : "nit: prefer `assert deadres, \"importthread did not die soon enough\"` (so the error message is delivered to the user)",
      "commit_id" : "4eb87c27ee6918f03141264957d0c62b60efc9db",
      "created_at" : "2017-08-14T17:18:19Z",
      "diff_hunk" : "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet import RPCs.\n+\n+Test rescan behavior of importprivkey when aborted. The test ensures that:\n+1. The abortrescan command indeed stops the rescan process.\n+2. Subsequent rescan catches the aborted address UTXO\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal, get_rpc_proxy)\n+from decimal import Decimal\n+import threading # for bg importprivkey\n+import time      # for sleep\n+\n+class ImportAbortRescanTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        # self.setup_clean_chain = False\n+\n+    def run_test(self):\n+        # Generate for BTC\n+        self.nodes[0].generate(300)\n+        self.log.info(\"Creating blocks with transactions ...\")\n+        # Make blocks with spam to cause rescan delay\n+        for i in range(200):\n+            if i % 50 == 0: self.log.info(\"... %2.f%%\", 100.0 / 200.0 * i)\n+            addr = self.nodes[0].getnewaddress()\n+            for j in range(10):\n+                self.nodes[0].sendtoaddress(addr, 0.1)\n+            self.nodes[0].generate(1)\n+        self.log.info(\"Sending to shared address ...\")\n+        addr = self.nodes[0].getnewaddress()\n+        privkey = self.nodes[0].dumpprivkey(addr)\n+        self.nodes[0].sendtoaddress(addr, 0.123)\n+        self.nodes[0].generate(10) # mature tx\n+        self.sync_all()\n+        balances = [n.getbalance() for n in self.nodes]\n+\n+        # Import this address in the background ...\n+        self.log.info(\"Importing address in background thread ...\")\n+        node1ref = get_rpc_proxy(self.nodes[1].url, 1, timeout=600)\n+        importthread = threading.Thread(target=node1ref.importprivkey, args=[privkey])\n+        importthread.start()\n+        # ... then abort rescan; try a bunch until abortres becomes true,\n+        # because we will start checking before above thread starts processing\n+        self.log.info(\"Attempting to abort scan ...\")\n+        for i in range(2000):\n+            time.sleep(0.001)\n+            abortres = self.nodes[1].abortrescan()\n+            if abortres: break\n+        assert abortres # if false, we failed to abort\n+        self.log.info(\"Waiting for import thread to die ...\")\n+        # import should die soon\n+        for i in range(10):\n+            time.sleep(0.1)\n+            deadres = not importthread.isAlive()\n+            if deadres: break\n+\n+        assert deadres # if false, importthread did not die soon enough",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133008105",
      "id" : 133008105,
      "original_commit_id" : "4eb87c27ee6918f03141264957d0c62b60efc9db",
      "original_position" : 62,
      "path" : "test/functional/import-abort-rescan.py",
      "position" : 62,
      "pull_request_review_id" : 56141828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10367",
      "updated_at" : "2017-08-14T17:20:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133008105",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
