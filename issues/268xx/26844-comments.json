[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2023-01-07T19:09:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#issuecomment-1374578364",
      "id" : 1374578364,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26844",
      "node_id" : "IC_kwDOABII585R7ma8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1374578364/reactions"
      },
      "updated_at" : "2023-01-07T19:09:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1374578364",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "At a first glance I would ask why we can't do what was suggested here: https://github.com/bitcoin/bitcoin/pull/12519#issuecomment-368118017, if that is preferable? At least back then, it sounded like we could just pick https://github.com/bitcoin/bitcoin/commit/77cee166e17e355306d2ca1a1d360e71c12d8350 without the more involved changes in https://github.com/bitcoin/bitcoin/pull/11227. (Not advocating against your change, just wondering why you have chosen to go with the less preferable version when both seem technically possible)\r\n\r\nAlso pinging @vasild who would likely be a good reviewer for this.",
      "created_at" : "2023-01-16T16:44:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#issuecomment-1384310255",
      "id" : 1384310255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26844",
      "node_id" : "IC_kwDOABII585SguXv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384310255/reactions"
      },
      "updated_at" : "2023-01-16T16:44:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384310255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> just wondering why you have chosen to go with the less preferable version when both seem technically possible\r\n\r\nBecause my change is tiny, and that other change is involved. I want the change to actually be merged, not bike-shedded indefinitely. Smaller changes are easier to validate.",
      "created_at" : "2023-01-16T20:43:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#issuecomment-1384532618",
      "id" : 1384532618,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26844",
      "node_id" : "IC_kwDOABII585ShkqK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384532618/reactions"
      },
      "updated_at" : "2023-01-16T20:43:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384532618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1090324464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090324464"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If this can't send the full message one of the two `break`s below will be executed which may result in this function returning with all `Send()` calls using `MSG_MORE`. For example: let there be 3 messages, 10 bytes each. `Send()` of the first one will use `MSG_MORE`, let it return 10 (full message sent). `Send()` of the second one will use `MSG_MORE`, let it return any number in [0..9]. Then this function will return, without ever calling `Send()` without `MSG_MORE` and the first message may remain buffered/unsent somewhere in the OS.\r\n\r\nI think this is unwanted effect, defeating `TCP_NODELAY` and the check `if (it + 1 != node.vSendMsg.end())`.\r\n\r\nI wonder if it is possible to tell the OS that we are done, without sending further data? Maybe `Send(nullptr, 0, MSG_NOSIGNAL | MSG_DONTWAIT); // without MSG_MORE` would do that?",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-01-30T08:51:45Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1090324464",
      "id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585A_Qfw",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1274703060,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090324464/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-30T08:59:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090324464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1090965155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090965155"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If not all of our pending outgoing messages can fit in the socket's transmit buffer, then we *want* all of our calls to `send` to specify `MSG_MORE`. The kernel will immediately (without delay) transmit as many full segments as it can assemble and that will fit in the congestion window. It will not immediately transmit a partial segment but instead will call back to us (via returning a writable status from `select`, `poll`, `epoll`, etc.) to fetch more data to transmit. If we have no more data to transmit, then yes, calling `send` with a zero length and without `MSG_MORE` will tell the kernel that we have nothing left to send, and it will transmit a partial segment as soon as such segment will fit in the congestion window.\r\n\r\nIn your example, if the second of the three 10-byte messages can only partially be copied to the socket transmit buffer, then it must be the case that the transmit buffer is now full. The transmit buffer is always larger than MSS, the maximum segment size, meaning the kernel can now assemble a full segment, which it will transmit as soon as the window allows. It will then indicate the socket is writable again, and we will be called again to write more of the second message.\r\n\r\nSo, in short, your concern that we will unnecessarily delay transmitting data is unwarranted. The kernel never delays transmitting a full segment if it fits in the congestion window. The kernel does delay transmitting a partial segment that fits in the congestion window if the last call to `send` on that socket specified `MSG_MORE`, but that's exactly what we want, as we want the opportunity to write more data into the transmit buffer so the kernel will potentially transmit fewer and larger segments.",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-01-30T17:58:35Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1090965155",
      "id" : 1090965155,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BBs6j",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1275670177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090965155/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-30T17:58:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090965155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1091828077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091828077"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If `send(2)` writes less bytes than requested, does it follow that the transmit buffer is full? I am not sure about that. Is it documented somewhere? What about a signal interrupting the send midway (or even before it started)? Is that not a case where `send(2)` writes less bytes than requested, but the transmit buffer is not full?",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-01-31T12:00:24Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1091828077",
      "id" : 1091828077,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BE_lt",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1277036081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091828077/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-31T12:00:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091828077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
