[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1613651346) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28077](https://github.com/bitcoin/bitcoin/pull/28077) (I2P: also sleep after errors in Accept() & destroy the session if we get \"Session was closed\" by vasild)\n* [#28043](https://github.com/bitcoin/bitcoin/pull/28043) (fuzz: Test headers pre-sync through p2p interface by dergoegge)\n* [#27385](https://github.com/bitcoin/bitcoin/pull/27385) (net, refactor: extract Network and BIP155Network logic to node/network by jonatack)\n* [#26312](https://github.com/bitcoin/bitcoin/pull/26312) (Remove Sock::Get() and Sock::Sock() by vasild)\n* [#25572](https://github.com/bitcoin/bitcoin/pull/25572) (refactor: Introduce EvictionManager and use it for the inbound eviction logic by dergoegge)\n* [#25268](https://github.com/bitcoin/bitcoin/pull/25268) (refactor: Introduce EvictionManager by dergoegge)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-01-04T14:39:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1371011959",
      "id" : 1371011959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585Rt_t3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1371011959/reactions"
      },
      "updated_at" : "2023-07-20T13:21:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1371011959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061551756"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061551756"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is inspired by https://github.com/bitcoin/bitcoin/pull/25515",
      "commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "created_at" : "2023-01-04T14:41:02Z",
      "diff_hunk" : "@@ -0,0 +1,183 @@\n+// Copyright (c) 2022-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net_processing.h>\n+#include <netaddress.h>\n+#include <protocol.h>\n+#include <test/util/logging.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <version.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chrono>\n+#include <string>\n+#include <unordered_map>\n+\n+BOOST_FIXTURE_TEST_SUITE(netmsg_tests, NetTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(initial_messages_exchange)\n+{\n+    std::unordered_map<std::string, size_t> count_sent_messages;\n+    auto pipes = m_sockets_pipes.PopFront();\n+\n+    // Wait for all messages due to the initial handshake to be Send() to the socket.\n+    // The FEEFILTER is the last one, so quit when we get that.\n+    for (;;) {\n+        auto msg = pipes->send.GetNetMsg();\n+        if (msg.has_value()) {\n+            count_sent_messages[msg->m_type]++;\n+            if (msg->m_type == NetMsgType::FEEFILTER) {\n+                break;\n+            }\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::VERSION], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::WTXIDRELAY], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::SENDADDRV2], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::VERACK], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::GETADDR], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::SENDCMPCT], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::PING], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::GETHEADERS], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::FEEFILTER], 1);\n+}\n+\n+BOOST_AUTO_TEST_CASE(addr)\n+{\n+    auto pipes = m_sockets_pipes.PopFront();\n+    std::vector<CAddress> addresses{5};\n+\n+    DebugLogHelper debug_log{strprintf(\"Received addr: %u addresses\", addresses.size())};\n+    pipes->recv.PushNetMsg(NetMsgType::ADDRV2, addresses);\n+    debug_log.EndAndThrowIfNotFound(30s);\n+}\n+\n+BOOST_AUTO_TEST_CASE(getblocks)\n+{\n+    auto pipes = m_sockets_pipes.PopFront();\n+    std::vector<uint256> hashes{5};\n+    CBlockLocator block_locator{std::move(hashes)};\n+    uint256 hash_stop;\n+\n+    DebugLogHelper debug_log{\"getblocks -1 to end\"};\n+    pipes->recv.PushNetMsg(NetMsgType::GETBLOCKS, block_locator, hash_stop);\n+    debug_log.EndAndThrowIfNotFound(30s);\n+}\n+\n+BOOST_AUTO_TEST_CASE(ping)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061551756",
      "id" : 1061551756,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII584_Rf6M",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 74,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/test/netmsg_tests.cpp",
      "position" : 74,
      "pull_request_review_id" : 1235986976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061551756/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-04T14:46:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061551756",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061557476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061557476"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is duplicated from `src/test/fuzz/process_message.cpp`. It should be deduplicated by putting it in a common header file, but I wonder if the new tests in `fuzz/netmsg.cpp` make the tests from `fuzz/process_message.cpp` and `fuzz/process_messages.cpp` obsolete and whether the latter should be removed. @MarcoFalke, as the author of `process_message[s]`, what do you think?",
      "commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "created_at" : "2023-01-04T14:46:19Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061557476",
      "id" : 1061557476,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII584_RhTk",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 43,
      "original_position" : 43,
      "original_start_line" : 28,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 43,
      "pull_request_review_id" : 1235986976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061557476/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 28,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-04T14:46:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061557476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061884646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061884646"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Key difference in #25515 is that it is testing net processing in isolation (at least isolated from CConnman), which imo is something we definitely should be doing. We already have e2e tests i.e. the functional tests, so I don't see the benefit to your approach here (besides the c++ tests being faster than the python ones).",
      "commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "created_at" : "2023-01-04T21:08:42Z",
      "diff_hunk" : "@@ -0,0 +1,183 @@\n+// Copyright (c) 2022-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net_processing.h>\n+#include <netaddress.h>\n+#include <protocol.h>\n+#include <test/util/logging.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <version.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chrono>\n+#include <string>\n+#include <unordered_map>\n+\n+BOOST_FIXTURE_TEST_SUITE(netmsg_tests, NetTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(initial_messages_exchange)\n+{\n+    std::unordered_map<std::string, size_t> count_sent_messages;\n+    auto pipes = m_sockets_pipes.PopFront();\n+\n+    // Wait for all messages due to the initial handshake to be Send() to the socket.\n+    // The FEEFILTER is the last one, so quit when we get that.\n+    for (;;) {\n+        auto msg = pipes->send.GetNetMsg();\n+        if (msg.has_value()) {\n+            count_sent_messages[msg->m_type]++;\n+            if (msg->m_type == NetMsgType::FEEFILTER) {\n+                break;\n+            }\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::VERSION], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::WTXIDRELAY], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::SENDADDRV2], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::VERACK], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::GETADDR], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::SENDCMPCT], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::PING], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::GETHEADERS], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::FEEFILTER], 1);\n+}\n+\n+BOOST_AUTO_TEST_CASE(addr)\n+{\n+    auto pipes = m_sockets_pipes.PopFront();\n+    std::vector<CAddress> addresses{5};\n+\n+    DebugLogHelper debug_log{strprintf(\"Received addr: %u addresses\", addresses.size())};\n+    pipes->recv.PushNetMsg(NetMsgType::ADDRV2, addresses);\n+    debug_log.EndAndThrowIfNotFound(30s);\n+}\n+\n+BOOST_AUTO_TEST_CASE(getblocks)\n+{\n+    auto pipes = m_sockets_pipes.PopFront();\n+    std::vector<uint256> hashes{5};\n+    CBlockLocator block_locator{std::move(hashes)};\n+    uint256 hash_stop;\n+\n+    DebugLogHelper debug_log{\"getblocks -1 to end\"};\n+    pipes->recv.PushNetMsg(NetMsgType::GETBLOCKS, block_locator, hash_stop);\n+    debug_log.EndAndThrowIfNotFound(30s);\n+}\n+\n+BOOST_AUTO_TEST_CASE(ping)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061884646",
      "id" : 1061884646,
      "in_reply_to_id" : 1061551756,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII584_SxLm",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 74,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/test/netmsg_tests.cpp",
      "position" : 74,
      "pull_request_review_id" : 1236481487,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061884646/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-04T22:09:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061884646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061894472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061894472"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This target is averaging 2 execs/s on my machine. A good target should average a 1000 execs/s (https://github.com/google/fuzzing/blob/master/docs/good-fuzz-target.md#speed).\r\n\r\nI don't quite see the upside of this target over the `process_message(s)` targets. It might be able to find additional bugs if run with ThreadSanitizer but the current performance is gonna stop it from doing so effectively.\r\n\r\nFuzzing is particularly effective when the targets are kept narrow. For example: fuzzing net, net processing, validation or any of their sub components (e.g. TxRequestTracker or AddrMan) in isolation makes sense but all of it together will be inefficient.",
      "commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "created_at" : "2023-01-04T21:24:39Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }\n+\n+void initialize_netmsg()\n+{\n+    Assert(GetNumMsgTypes() == getAllNetMessageTypes().size()); // If this fails, add or remove the message type below\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>();\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+static void fuzz_target(FuzzBufferType buffer, const std::string& limit_to_message_type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061894472",
      "id" : 1061894472,
      "line" : 57,
      "node_id" : "PRRC_kwDOABII584_SzlI",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 57,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 57,
      "pull_request_review_id" : 1236481487,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061894472/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-04T22:09:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061894472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061896055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061896055"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I suspect this is the main reason for the poor performance, but the additional threading also doesn't help.",
      "commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "created_at" : "2023-01-04T21:27:00Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }\n+\n+void initialize_netmsg()\n+{\n+    Assert(GetNumMsgTypes() == getAllNetMessageTypes().size()); // If this fails, add or remove the message type below\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>();\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+static void fuzz_target(FuzzBufferType buffer, const std::string& limit_to_message_type)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    g_setup->m_node.banman->TestOnlyReset();\n+\n+    // Addrman and CConnman deprioritize addresses tried in the last 10min. Avoid that since\n+    // our addrman has very few addresses.\n+    SetMockTime(GetMockTime() + std::chrono::minutes{\n+                                    fuzzed_data_provider.ConsumeIntegralInRange<uint8_t>(11, 255)});\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type =\n+            limit_to_message_type.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                limit_to_message_type;\n+\n+        CDataStream payload{\n+            ConsumeRandomLengthByteVector(fuzzed_data_provider), SER_NETWORK, PROTOCOL_VERSION};\n+\n+        pipes->recv.PushNetMsg(message_type, payload);\n+\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) { // EOF, the socket has been closed.\n+            return;\n+        }\n+    }\n+\n+    TestChainState& chainstate = *static_cast<TestChainState*>(&g_setup->m_node.chainman->ActiveChainstate());\n+\n+    // Force a disconnect and wait for it.\n+    for (;;) {\n+        // Push a message that will cause a disconnect and socket closure (EOF on the Send() pipe).\n+        pipes->recv.PushNetMsg(\n+            NetMsgType::GETBLOCKTXN,\n+            BlockTransactionsRequest{.blockhash = chainstate.m_chain.Tip()->GetBlockHash(),\n+                                     .indexes = {1, UINT16_MAX}});\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) {\n+            break;\n+        }\n+        std::this_thread::sleep_for(50ms);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061896055",
      "id" : 1061896055,
      "line" : 101,
      "node_id" : "PRRC_kwDOABII584_Sz93",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 101,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 101,
      "pull_request_review_id" : 1236481487,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061896055/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-04T22:09:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061896055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061896936"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061896936"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is missing a call to `SyncWithValidationInterfaceQueue` here.",
      "commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "created_at" : "2023-01-04T21:28:10Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }\n+\n+void initialize_netmsg()\n+{\n+    Assert(GetNumMsgTypes() == getAllNetMessageTypes().size()); // If this fails, add or remove the message type below\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>();\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+static void fuzz_target(FuzzBufferType buffer, const std::string& limit_to_message_type)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    g_setup->m_node.banman->TestOnlyReset();\n+\n+    // Addrman and CConnman deprioritize addresses tried in the last 10min. Avoid that since\n+    // our addrman has very few addresses.\n+    SetMockTime(GetMockTime() + std::chrono::minutes{\n+                                    fuzzed_data_provider.ConsumeIntegralInRange<uint8_t>(11, 255)});\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type =\n+            limit_to_message_type.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                limit_to_message_type;\n+\n+        CDataStream payload{\n+            ConsumeRandomLengthByteVector(fuzzed_data_provider), SER_NETWORK, PROTOCOL_VERSION};\n+\n+        pipes->recv.PushNetMsg(message_type, payload);\n+\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) { // EOF, the socket has been closed.\n+            return;\n+        }\n+    }\n+\n+    TestChainState& chainstate = *static_cast<TestChainState*>(&g_setup->m_node.chainman->ActiveChainstate());\n+\n+    // Force a disconnect and wait for it.\n+    for (;;) {\n+        // Push a message that will cause a disconnect and socket closure (EOF on the Send() pipe).\n+        pipes->recv.PushNetMsg(\n+            NetMsgType::GETBLOCKTXN,\n+            BlockTransactionsRequest{.blockhash = chainstate.m_chain.Tip()->GetBlockHash(),\n+                                     .indexes = {1, UINT16_MAX}});\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) {\n+            break;\n+        }\n+        std::this_thread::sleep_for(50ms);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1061896936",
      "id" : 1061896936,
      "line" : 102,
      "node_id" : "PRRC_kwDOABII584_S0Lo",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 102,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 102,
      "pull_request_review_id" : 1236481487,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061896936/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-04T22:09:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1061896936",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`9b7e9dad27...daee83c1c5`: optimize the fuzz test a bit",
      "created_at" : "2023-01-12T14:07:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1380407070",
      "id" : 1380407070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585SR1ce",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1380407070/reactions"
      },
      "updated_at" : "2023-01-12T14:07:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1380407070",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068176623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068176623"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, both testing in isolation and e2e is good to have. The difference between the tests included in this PR and the functional tests is that when the test code runs inside the same process:\r\n\r\n* it has greater control and observability - the test can read any global or member variable and can call arbitrary functions \r\n* it can do fuzzing\r\n\r\nI think all those tests are complementary, not mutually exclusive.",
      "commit_id" : "32ab679f54a4f36cc315d0bd36638b7942f752f6",
      "created_at" : "2023-01-12T14:16:57Z",
      "diff_hunk" : "@@ -0,0 +1,183 @@\n+// Copyright (c) 2022-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net_processing.h>\n+#include <netaddress.h>\n+#include <protocol.h>\n+#include <test/util/logging.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <version.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chrono>\n+#include <string>\n+#include <unordered_map>\n+\n+BOOST_FIXTURE_TEST_SUITE(netmsg_tests, NetTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(initial_messages_exchange)\n+{\n+    std::unordered_map<std::string, size_t> count_sent_messages;\n+    auto pipes = m_sockets_pipes.PopFront();\n+\n+    // Wait for all messages due to the initial handshake to be Send() to the socket.\n+    // The FEEFILTER is the last one, so quit when we get that.\n+    for (;;) {\n+        auto msg = pipes->send.GetNetMsg();\n+        if (msg.has_value()) {\n+            count_sent_messages[msg->m_type]++;\n+            if (msg->m_type == NetMsgType::FEEFILTER) {\n+                break;\n+            }\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::VERSION], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::WTXIDRELAY], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::SENDADDRV2], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::VERACK], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::GETADDR], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::SENDCMPCT], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::PING], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::GETHEADERS], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::FEEFILTER], 1);\n+}\n+\n+BOOST_AUTO_TEST_CASE(addr)\n+{\n+    auto pipes = m_sockets_pipes.PopFront();\n+    std::vector<CAddress> addresses{5};\n+\n+    DebugLogHelper debug_log{strprintf(\"Received addr: %u addresses\", addresses.size())};\n+    pipes->recv.PushNetMsg(NetMsgType::ADDRV2, addresses);\n+    debug_log.EndAndThrowIfNotFound(30s);\n+}\n+\n+BOOST_AUTO_TEST_CASE(getblocks)\n+{\n+    auto pipes = m_sockets_pipes.PopFront();\n+    std::vector<uint256> hashes{5};\n+    CBlockLocator block_locator{std::move(hashes)};\n+    uint256 hash_stop;\n+\n+    DebugLogHelper debug_log{\"getblocks -1 to end\"};\n+    pipes->recv.PushNetMsg(NetMsgType::GETBLOCKS, block_locator, hash_stop);\n+    debug_log.EndAndThrowIfNotFound(30s);\n+}\n+\n+BOOST_AUTO_TEST_CASE(ping)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068176623",
      "id" : 1068176623,
      "in_reply_to_id" : 1061551756,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII584_qxTv",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 74,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/test/netmsg_tests.cpp",
      "position" : 74,
      "pull_request_review_id" : 1245688508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068176623/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T14:16:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068176623",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068182302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068182302"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Pushed an improvement that changes it to about 17 exec/s, it tends to increase if the test is left to run for some time.\r\n\r\nIMO e2e fuzzing has some value.",
      "commit_id" : "32ab679f54a4f36cc315d0bd36638b7942f752f6",
      "created_at" : "2023-01-12T14:21:50Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }\n+\n+void initialize_netmsg()\n+{\n+    Assert(GetNumMsgTypes() == getAllNetMessageTypes().size()); // If this fails, add or remove the message type below\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>();\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+static void fuzz_target(FuzzBufferType buffer, const std::string& limit_to_message_type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068182302",
      "id" : 1068182302,
      "in_reply_to_id" : 1061894472,
      "line" : 58,
      "node_id" : "PRRC_kwDOABII584_qyse",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 58,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 58,
      "pull_request_review_id" : 1245697308,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068182302/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T14:21:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068182302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068182986"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068182986"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It wasn't but I ditched it anyway in `9b7e9dad27...daee83c1c5`.",
      "commit_id" : "32ab679f54a4f36cc315d0bd36638b7942f752f6",
      "created_at" : "2023-01-12T14:22:26Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }\n+\n+void initialize_netmsg()\n+{\n+    Assert(GetNumMsgTypes() == getAllNetMessageTypes().size()); // If this fails, add or remove the message type below\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>();\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+static void fuzz_target(FuzzBufferType buffer, const std::string& limit_to_message_type)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    g_setup->m_node.banman->TestOnlyReset();\n+\n+    // Addrman and CConnman deprioritize addresses tried in the last 10min. Avoid that since\n+    // our addrman has very few addresses.\n+    SetMockTime(GetMockTime() + std::chrono::minutes{\n+                                    fuzzed_data_provider.ConsumeIntegralInRange<uint8_t>(11, 255)});\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type =\n+            limit_to_message_type.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                limit_to_message_type;\n+\n+        CDataStream payload{\n+            ConsumeRandomLengthByteVector(fuzzed_data_provider), SER_NETWORK, PROTOCOL_VERSION};\n+\n+        pipes->recv.PushNetMsg(message_type, payload);\n+\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) { // EOF, the socket has been closed.\n+            return;\n+        }\n+    }\n+\n+    TestChainState& chainstate = *static_cast<TestChainState*>(&g_setup->m_node.chainman->ActiveChainstate());\n+\n+    // Force a disconnect and wait for it.\n+    for (;;) {\n+        // Push a message that will cause a disconnect and socket closure (EOF on the Send() pipe).\n+        pipes->recv.PushNetMsg(\n+            NetMsgType::GETBLOCKTXN,\n+            BlockTransactionsRequest{.blockhash = chainstate.m_chain.Tip()->GetBlockHash(),\n+                                     .indexes = {1, UINT16_MAX}});\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) {\n+            break;\n+        }\n+        std::this_thread::sleep_for(50ms);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068182986",
      "id" : 1068182986,
      "in_reply_to_id" : 1061896055,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584_qy3K",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 101,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : null,
      "pull_request_review_id" : 1245698381,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068182986/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T14:22:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068182986",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068185233"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068185233"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe. I am probably missing something. Can you elaborate why it is missing a call to `SyncWithValidationInterfaceQueue()`?",
      "commit_id" : "32ab679f54a4f36cc315d0bd36638b7942f752f6",
      "created_at" : "2023-01-12T14:24:17Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }\n+\n+void initialize_netmsg()\n+{\n+    Assert(GetNumMsgTypes() == getAllNetMessageTypes().size()); // If this fails, add or remove the message type below\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>();\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+static void fuzz_target(FuzzBufferType buffer, const std::string& limit_to_message_type)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    g_setup->m_node.banman->TestOnlyReset();\n+\n+    // Addrman and CConnman deprioritize addresses tried in the last 10min. Avoid that since\n+    // our addrman has very few addresses.\n+    SetMockTime(GetMockTime() + std::chrono::minutes{\n+                                    fuzzed_data_provider.ConsumeIntegralInRange<uint8_t>(11, 255)});\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type =\n+            limit_to_message_type.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                limit_to_message_type;\n+\n+        CDataStream payload{\n+            ConsumeRandomLengthByteVector(fuzzed_data_provider), SER_NETWORK, PROTOCOL_VERSION};\n+\n+        pipes->recv.PushNetMsg(message_type, payload);\n+\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) { // EOF, the socket has been closed.\n+            return;\n+        }\n+    }\n+\n+    TestChainState& chainstate = *static_cast<TestChainState*>(&g_setup->m_node.chainman->ActiveChainstate());\n+\n+    // Force a disconnect and wait for it.\n+    for (;;) {\n+        // Push a message that will cause a disconnect and socket closure (EOF on the Send() pipe).\n+        pipes->recv.PushNetMsg(\n+            NetMsgType::GETBLOCKTXN,\n+            BlockTransactionsRequest{.blockhash = chainstate.m_chain.Tip()->GetBlockHash(),\n+                                     .indexes = {1, UINT16_MAX}});\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) {\n+            break;\n+        }\n+        std::this_thread::sleep_for(50ms);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068185233",
      "id" : 1068185233,
      "in_reply_to_id" : 1061896936,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII584_qzaR",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 96,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 96,
      "pull_request_review_id" : 1245701729,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068185233/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T14:24:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068185233",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068191630"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068191630"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If (in theory) it is possible to push an event on the queue, it should be handled before starting the next input. (Not sure if applicable here)",
      "commit_id" : "32ab679f54a4f36cc315d0bd36638b7942f752f6",
      "created_at" : "2023-01-12T14:29:52Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }\n+\n+void initialize_netmsg()\n+{\n+    Assert(GetNumMsgTypes() == getAllNetMessageTypes().size()); // If this fails, add or remove the message type below\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>();\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+static void fuzz_target(FuzzBufferType buffer, const std::string& limit_to_message_type)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    g_setup->m_node.banman->TestOnlyReset();\n+\n+    // Addrman and CConnman deprioritize addresses tried in the last 10min. Avoid that since\n+    // our addrman has very few addresses.\n+    SetMockTime(GetMockTime() + std::chrono::minutes{\n+                                    fuzzed_data_provider.ConsumeIntegralInRange<uint8_t>(11, 255)});\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type =\n+            limit_to_message_type.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                limit_to_message_type;\n+\n+        CDataStream payload{\n+            ConsumeRandomLengthByteVector(fuzzed_data_provider), SER_NETWORK, PROTOCOL_VERSION};\n+\n+        pipes->recv.PushNetMsg(message_type, payload);\n+\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) { // EOF, the socket has been closed.\n+            return;\n+        }\n+    }\n+\n+    TestChainState& chainstate = *static_cast<TestChainState*>(&g_setup->m_node.chainman->ActiveChainstate());\n+\n+    // Force a disconnect and wait for it.\n+    for (;;) {\n+        // Push a message that will cause a disconnect and socket closure (EOF on the Send() pipe).\n+        pipes->recv.PushNetMsg(\n+            NetMsgType::GETBLOCKTXN,\n+            BlockTransactionsRequest{.blockhash = chainstate.m_chain.Tip()->GetBlockHash(),\n+                                     .indexes = {1, UINT16_MAX}});\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) {\n+            break;\n+        }\n+        std::this_thread::sleep_for(50ms);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068191630",
      "id" : 1068191630,
      "in_reply_to_id" : 1061896936,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII584_q0-O",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 96,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 96,
      "pull_request_review_id" : 1245711657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068191630/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T14:29:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068191630",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068212938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068212938"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added.",
      "commit_id" : "32ab679f54a4f36cc315d0bd36638b7942f752f6",
      "created_at" : "2023-01-12T14:47:14Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }\n+\n+void initialize_netmsg()\n+{\n+    Assert(GetNumMsgTypes() == getAllNetMessageTypes().size()); // If this fails, add or remove the message type below\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>();\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+static void fuzz_target(FuzzBufferType buffer, const std::string& limit_to_message_type)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    g_setup->m_node.banman->TestOnlyReset();\n+\n+    // Addrman and CConnman deprioritize addresses tried in the last 10min. Avoid that since\n+    // our addrman has very few addresses.\n+    SetMockTime(GetMockTime() + std::chrono::minutes{\n+                                    fuzzed_data_provider.ConsumeIntegralInRange<uint8_t>(11, 255)});\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type =\n+            limit_to_message_type.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                limit_to_message_type;\n+\n+        CDataStream payload{\n+            ConsumeRandomLengthByteVector(fuzzed_data_provider), SER_NETWORK, PROTOCOL_VERSION};\n+\n+        pipes->recv.PushNetMsg(message_type, payload);\n+\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) { // EOF, the socket has been closed.\n+            return;\n+        }\n+    }\n+\n+    TestChainState& chainstate = *static_cast<TestChainState*>(&g_setup->m_node.chainman->ActiveChainstate());\n+\n+    // Force a disconnect and wait for it.\n+    for (;;) {\n+        // Push a message that will cause a disconnect and socket closure (EOF on the Send() pipe).\n+        pipes->recv.PushNetMsg(\n+            NetMsgType::GETBLOCKTXN,\n+            BlockTransactionsRequest{.blockhash = chainstate.m_chain.Tip()->GetBlockHash(),\n+                                     .indexes = {1, UINT16_MAX}});\n+        if (pipes->send.GetBytes(buf, sizeof(buf)) == 0) {\n+            break;\n+        }\n+        std::this_thread::sleep_for(50ms);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068212938",
      "id" : 1068212938,
      "in_reply_to_id" : 1061896936,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII584_q6LK",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 96,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 96,
      "pull_request_review_id" : 1245744856,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068212938/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T14:47:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068212938",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068245906"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068245906"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not de-duplicate by putting it in the existing `./src/test/fuzz/process_message.cpp` file?",
      "commit_id" : "32ab679f54a4f36cc315d0bd36638b7942f752f6",
      "created_at" : "2023-01-12T15:12:13Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068245906",
      "id" : 1068245906,
      "in_reply_to_id" : 1061557476,
      "line" : 44,
      "node_id" : "PRRC_kwDOABII584_rCOS",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 44,
      "original_position" : 43,
      "original_start_line" : 28,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 44,
      "pull_request_review_id" : 1245795841,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068245906/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 29,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-12T15:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068245906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068310185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068310185"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You mean to put the entire contents of the newly introduced `fuzz/netmsg.cpp` inside `fuzz/process_message.cpp`?",
      "commit_id" : "32ab679f54a4f36cc315d0bd36638b7942f752f6",
      "created_at" : "2023-01-12T16:03:46Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068310185",
      "id" : 1068310185,
      "in_reply_to_id" : 1061557476,
      "line" : 44,
      "node_id" : "PRRC_kwDOABII584_rR6p",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 44,
      "original_position" : 43,
      "original_start_line" : 28,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 44,
      "pull_request_review_id" : 1245900568,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068310185/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 29,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-12T16:03:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068310185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068314583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068314583"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yes",
      "commit_id" : "32ab679f54a4f36cc315d0bd36638b7942f752f6",
      "created_at" : "2023-01-12T16:07:36Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068314583",
      "id" : 1068314583,
      "in_reply_to_id" : 1061557476,
      "line" : 44,
      "node_id" : "PRRC_kwDOABII584_rS_X",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 44,
      "original_position" : 43,
      "original_start_line" : 28,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 44,
      "pull_request_review_id" : 1245907668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068314583/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 29,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-12T16:07:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068314583",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068407369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068407369"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> IMO e2e fuzzing has some value.\r\n\r\nYes, but I think it should focus on what you are trying to test. If you keep the target to broad the fuzzer is gonna have a hard time finding interesting test cases (especially if the target is slow). One obvious way of focusing is to only fuzz smaller units of code and in the e2e case you probably want to narrow the way you are interpreting the fuzz input so that you are actually testing what you want to test.\r\n\r\nThe approach here currently seems to be very similar to the `process_message(s)` targets (which is why you suggested to replace them iiuc), in that you are interpreting most of the fuzz input as a sequence of arbitrary messages, so the questions that I have are:\r\n* What do you want to test here? Message processing? connman internals? the interactions between connman/peerman?\r\n* What bugs is your target capable of finding that `process_message(s)` (or other targets) are not? In other words which areas/interactions is this fuzzing that are previously not covered?\r\n* Are the message contents (and their mutations) of all message types useful for what you are trying to test here? e.g. does it matter if a tx message contains a transaction with 1 input or 5? because the fuzzer will likely find that difference interesting but it doesn't seem like this would add value to what you are trying to test here, since the goal (correct me if I am wrong) isn't fuzzing validation.\r\n* Could the input interpretation be narrowed to only include the messages that lead to interactions you are trying to test?",
      "commit_id" : "32ab679f54a4f36cc315d0bd36638b7942f752f6",
      "created_at" : "2023-01-12T17:31:09Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }\n+\n+void initialize_netmsg()\n+{\n+    Assert(GetNumMsgTypes() == getAllNetMessageTypes().size()); // If this fails, add or remove the message type below\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>();\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+static void fuzz_target(FuzzBufferType buffer, const std::string& limit_to_message_type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068407369",
      "id" : 1068407369,
      "in_reply_to_id" : 1061894472,
      "line" : 58,
      "node_id" : "PRRC_kwDOABII584_rppJ",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 58,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 58,
      "pull_request_review_id" : 1246114670,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068407369/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T17:31:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068407369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1070262419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1070262419"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Looks plausible. I will try to do that and see how it will look.",
      "commit_id" : "32ab679f54a4f36cc315d0bd36638b7942f752f6",
      "created_at" : "2023-01-14T12:58:20Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1070262419",
      "id" : 1070262419,
      "in_reply_to_id" : 1061557476,
      "line" : 44,
      "node_id" : "PRRC_kwDOABII584_yuiT",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 44,
      "original_position" : 43,
      "original_start_line" : 28,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : 44,
      "pull_request_review_id" : 1248763319,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1070262419/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 29,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-14T12:58:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1070262419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-02-01T11:35:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1411914720",
      "id" : 1411914720,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585UKBvg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1411914720/reactions"
      },
      "updated_at" : "2023-02-01T11:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1411914720",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`32ab679f54...7c591c868d`: rebase due to conflicts",
      "created_at" : "2023-02-09T14:00:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1424234586",
      "id" : 1424234586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585U5Bha",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424234586/reactions"
      },
      "updated_at" : "2023-02-09T14:00:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1424234586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1111936979"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1111936979"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done. This also reduced the size of the diff (the last commit). Thanks!",
      "commit_id" : "a81fe4ff9bb907e3a8e8f027a9cac440a82e7a14",
      "created_at" : "2023-02-20T13:05:33Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1111936979",
      "id" : 1111936979,
      "in_reply_to_id" : 1061557476,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CRs_T",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 44,
      "original_position" : 43,
      "original_start_line" : 28,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : null,
      "pull_request_review_id" : 1305767542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1111936979/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-20T13:05:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1111936979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`7c591c868d...a81fe4ff9b`: rebase and put the fuzz tests in `fuzz/process_message.cpp` instead of in a new file, as [suggested](https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1068245906).",
      "created_at" : "2023-02-20T13:07:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1436999481",
      "id" : 1436999481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585Vpt85",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1436999481/reactions"
      },
      "updated_at" : "2023-02-20T13:07:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1436999481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1171479645"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171479645"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The unit tests are what I run locally over and over, as they run so much more quickly.  IIRC there was a project idea a few years ago to convert the functional tests in Python to C++.  Having better unit test coverage, or shifting coverage from the Python tests to C++ ones, seems beneficial.",
      "commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "created_at" : "2023-04-19T15:03:10Z",
      "diff_hunk" : "@@ -0,0 +1,183 @@\n+// Copyright (c) 2022-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net_processing.h>\n+#include <netaddress.h>\n+#include <protocol.h>\n+#include <test/util/logging.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <version.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chrono>\n+#include <string>\n+#include <unordered_map>\n+\n+BOOST_FIXTURE_TEST_SUITE(netmsg_tests, NetTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(initial_messages_exchange)\n+{\n+    std::unordered_map<std::string, size_t> count_sent_messages;\n+    auto pipes = m_sockets_pipes.PopFront();\n+\n+    // Wait for all messages due to the initial handshake to be Send() to the socket.\n+    // The FEEFILTER is the last one, so quit when we get that.\n+    for (;;) {\n+        auto msg = pipes->send.GetNetMsg();\n+        if (msg.has_value()) {\n+            count_sent_messages[msg->m_type]++;\n+            if (msg->m_type == NetMsgType::FEEFILTER) {\n+                break;\n+            }\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::VERSION], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::WTXIDRELAY], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::SENDADDRV2], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::VERACK], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::GETADDR], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::SENDCMPCT], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::PING], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::GETHEADERS], 1);\n+    BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::FEEFILTER], 1);\n+}\n+\n+BOOST_AUTO_TEST_CASE(addr)\n+{\n+    auto pipes = m_sockets_pipes.PopFront();\n+    std::vector<CAddress> addresses{5};\n+\n+    DebugLogHelper debug_log{strprintf(\"Received addr: %u addresses\", addresses.size())};\n+    pipes->recv.PushNetMsg(NetMsgType::ADDRV2, addresses);\n+    debug_log.EndAndThrowIfNotFound(30s);\n+}\n+\n+BOOST_AUTO_TEST_CASE(getblocks)\n+{\n+    auto pipes = m_sockets_pipes.PopFront();\n+    std::vector<uint256> hashes{5};\n+    CBlockLocator block_locator{std::move(hashes)};\n+    uint256 hash_stop;\n+\n+    DebugLogHelper debug_log{\"getblocks -1 to end\"};\n+    pipes->recv.PushNetMsg(NetMsgType::GETBLOCKS, block_locator, hash_stop);\n+    debug_log.EndAndThrowIfNotFound(30s);\n+}\n+\n+BOOST_AUTO_TEST_CASE(ping)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1171479645",
      "id" : 1171479645,
      "in_reply_to_id" : 1061551756,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII585F01xd",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 74,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/test/netmsg_tests.cpp",
      "position" : 74,
      "pull_request_review_id" : 1392285351,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171479645/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-19T15:03:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171479645",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "There may be a silent merge conflict. After rebase to current master at fde224a6610699a6a28cc27e299ac14cbf7e16ca, building with Clang 16 fails at commit `test: add a mocked Sock that allows inspecting what has been Send() to it`.\r\n\r\n<details><summary>build error</summary><p>\r\n\r\n```\r\ntest/util/net.cpp:280:12: error: no viable conversion from returned value of type 'const CNetMessage' to function return type 'std::optional<CNetMessage>'\r\n    return msg;\r\n           ^~~\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/optional:736:41: note: candidate constructor not viable: no known conversion from 'const CNetMessage' to 'const optional<CNetMessage> &' for 1st argument\r\n    _LIBCPP_INLINE_VISIBILITY constexpr optional(const optional&) = default;\r\n                                        ^\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/optional:737:41: note: candidate constructor not viable: no known conversion from 'const CNetMessage' to 'optional<CNetMessage> &&' for 1st argument\r\n    _LIBCPP_INLINE_VISIBILITY constexpr optional(optional&&) = default;\r\n                                        ^\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/optional:738:41: note: candidate constructor not viable: no known conversion from 'const CNetMessage' to 'nullopt_t' for 1st argument\r\n    _LIBCPP_INLINE_VISIBILITY constexpr optional(nullopt_t) noexcept {}\r\n                                        ^\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/optional:762:15: note: candidate template ignored: requirement '_CheckOptionalArgsCtor<const CNetMessage &>::__enable_implicit()' was not satisfied [with _Up = const CNetMessage &]\r\n    constexpr optional(_Up&& __v)\r\n              ^\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/optional:777:35: note: candidate template ignored: could not match 'const optional<_Up>' against 'const CNetMessage'\r\n    _LIBCPP_CONSTEXPR_SINCE_CXX20 optional(const optional<_Up>& __v)\r\n                                  ^\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/optional:795:35: note: candidate template ignored: could not match 'optional<_Up>' against 'const CNetMessage'\r\n    _LIBCPP_CONSTEXPR_SINCE_CXX20 optional(optional<_Up>&& __v)\r\n                                  ^\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/optional:748:24: note: explicit constructor is not a candidate\r\n    constexpr explicit optional(_InPlaceT, _Args&&... __args)\r\n                       ^\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/optional:769:24: note: explicit constructor is not a candidate\r\n    constexpr explicit optional(_Up&& __v)\r\n                       ^\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/optional:785:44: note: explicit constructor is not a candidate\r\n    _LIBCPP_CONSTEXPR_SINCE_CXX20 explicit optional(const optional<_Up>& __v)\r\n                                           ^\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/optional:803:44: note: explicit constructor is not a candidate\r\n    _LIBCPP_CONSTEXPR_SINCE_CXX20 explicit optional(optional<_Up>&& __v)\r\n                                           ^\r\n1 error generated.\r\nmake[2]: *** [test/util/libtest_util_a-net.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[1]: *** [all-recursive] Error 1\r\nmake: *** [all-recursive] Error 1\r\n```\r\n</p></details>\r\n\r\n```\r\n$ clang --version\r\nHomebrew clang version 16.0.1\r\nTarget: arm64-apple-darwin22.4.0\r\nThread model: posix\r\n```",
      "created_at" : "2023-04-19T15:06:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1514904243",
      "id" : 1514904243,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585aS5qz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514904243/reactions"
      },
      "updated_at" : "2023-04-19T15:06:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514904243",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> There may be a silent merge conflict.\r\n\r\nProbably because of https://github.com/bitcoin/bitcoin/pull/27324, copying `CNetMessage`s is no longer possible.",
      "created_at" : "2023-04-19T15:12:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1514913010",
      "id" : 1514913010,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585aS7zy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514913010/reactions"
      },
      "updated_at" : "2023-04-19T15:12:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1514913010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-04-26T11:55:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1523290738",
      "id" : 1523290738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585ay5Jy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1523290738/reactions"
      },
      "updated_at" : "2023-04-26T11:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1523290738",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`a81fe4ff9b...f559067e27`: rebase due to conflicts, thanks for looking into this!",
      "created_at" : "2023-05-12T11:34:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1545603904",
      "id" : 1545603904,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585cIAtA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1545603904/reactions"
      },
      "updated_at" : "2023-05-12T11:34:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1545603904",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`f559067e27...4c867de996`: rebase due to conflicts",
      "created_at" : "2023-06-06T10:23:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1578372952",
      "id" : 1578372952,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585eFA9Y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1578372952/reactions"
      },
      "updated_at" : "2023-06-06T10:23:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1578372952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1219375776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219375776"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I put the new e2e tests in a separate new file because this code (which I was trying to avoid duplicating) is gone after https://github.com/bitcoin/bitcoin/pull/27766",
      "commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "created_at" : "2023-06-06T10:26:55Z",
      "diff_hunk" : "@@ -0,0 +1,140 @@\n+// Copyright (c) 2020-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <blockencodings.h>\n+#include <consensus/consensus.h>\n+#include <protocol.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <chrono>\n+#include <string>\n+#include <thread>\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+} // namespace\n+\n+static size_t& GetNumMsgTypes()\n+{\n+    static size_t g_num_msg_types{0};\n+    return g_num_msg_types;\n+}\n+#define FUZZ_TARGET_MSG(msg_type)                          \\\n+    struct msg_type##CountBeforeMain {                     \\\n+        msg_type##CountBeforeMain()                        \\\n+        {                                                  \\\n+            ++GetNumMsgTypes();                            \\\n+        }                                                  \\\n+    } const static g_##msg_type##count_before_main;        \\\n+    FUZZ_TARGET_INIT(netmsg_##msg_type, initialize_netmsg) \\\n+    {                                                      \\\n+        fuzz_target(buffer, #msg_type);                    \\\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1219375776",
      "id" : 1219375776,
      "in_reply_to_id" : 1061557476,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585IrjKg",
      "original_commit_id" : "9b7e9dad271167af913828aaf3b75a9942770a34",
      "original_line" : 44,
      "original_position" : 43,
      "original_start_line" : 28,
      "path" : "src/test/fuzz/netmsg.cpp",
      "position" : null,
      "pull_request_review_id" : 1464849019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219375776/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-06-06T10:26:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219375776",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1219413577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219413577"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changing the fuzz input format with a run-time setting seems fragile and not intuitive when one wants to re-use fuzz inputs or reproduce runs.",
      "commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "created_at" : "2023-06-06T10:53:23Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+FUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    SetMockTime(GetMockTime() + std::chrono::minutes{fuzzed_data_provider.ConsumeIntegral<uint8_t>()});\n+\n+    g_setup->m_node.connman->OpenNetworkConnection(\n+        CAddress{}, false, nullptr, \"1.2.3.4:8333\", ConnectionType::OUTBOUND_FULL_RELAY);\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type{\n+            LIMIT_TO_MESSAGE_TYPE.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                LIMIT_TO_MESSAGE_TYPE};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1219413577",
      "id" : 1219413577,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII585IrsZJ",
      "original_commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : 84,
      "pull_request_review_id" : 1464897993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219413577/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-06T10:55:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219413577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1219414855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219414855"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could this use `DataStream`, or drop it completely?",
      "commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "created_at" : "2023-06-06T10:54:24Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+FUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    SetMockTime(GetMockTime() + std::chrono::minutes{fuzzed_data_provider.ConsumeIntegral<uint8_t>()});\n+\n+    g_setup->m_node.connman->OpenNetworkConnection(\n+        CAddress{}, false, nullptr, \"1.2.3.4:8333\", ConnectionType::OUTBOUND_FULL_RELAY);\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type{\n+            LIMIT_TO_MESSAGE_TYPE.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                LIMIT_TO_MESSAGE_TYPE};\n+\n+        CDataStream payload{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1219414855",
      "id" : 1219414855,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII585IrstH",
      "original_commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "original_line" : 86,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : 86,
      "pull_request_review_id" : 1464897993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219414855/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-06T10:55:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219414855",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1219560287"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219560287"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Are you suggesting to replace it with this:\r\n\r\n```cpp\r\n        const std::string random_message_type{fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE)};\r\n        if (!LIMIT_TO_MESSAGE_TYPE.empty() && random_message_type != LIMIT_TO_MESSAGE_TYPE) { \r\n            continue;\r\n        } \r\n```",
      "commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "created_at" : "2023-06-06T12:31:32Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+FUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    SetMockTime(GetMockTime() + std::chrono::minutes{fuzzed_data_provider.ConsumeIntegral<uint8_t>()});\n+\n+    g_setup->m_node.connman->OpenNetworkConnection(\n+        CAddress{}, false, nullptr, \"1.2.3.4:8333\", ConnectionType::OUTBOUND_FULL_RELAY);\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type{\n+            LIMIT_TO_MESSAGE_TYPE.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                LIMIT_TO_MESSAGE_TYPE};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1219560287",
      "id" : 1219560287,
      "in_reply_to_id" : 1219413577,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII585IsQNf",
      "original_commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : 84,
      "pull_request_review_id" : 1465085877,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219560287/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-06T12:31:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219560287",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1219568001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219568001"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point, dropped it!",
      "commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "created_at" : "2023-06-06T12:36:45Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+FUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    SetMockTime(GetMockTime() + std::chrono::minutes{fuzzed_data_provider.ConsumeIntegral<uint8_t>()});\n+\n+    g_setup->m_node.connman->OpenNetworkConnection(\n+        CAddress{}, false, nullptr, \"1.2.3.4:8333\", ConnectionType::OUTBOUND_FULL_RELAY);\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type{\n+            LIMIT_TO_MESSAGE_TYPE.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                LIMIT_TO_MESSAGE_TYPE};\n+\n+        CDataStream payload{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1219568001",
      "id" : 1219568001,
      "in_reply_to_id" : 1219414855,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII585IsSGB",
      "original_commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "original_line" : 86,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : 86,
      "pull_request_review_id" : 1465095909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219568001/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-06T12:36:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219568001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`4c867de996...35fc849412`: address a suggestion (remove usage of `CDataStream`)",
      "created_at" : "2023-06-08T07:48:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1582072953",
      "id" : 1582072953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585eTIR5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1582072953/reactions"
      },
      "updated_at" : "2023-06-08T07:49:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1582072953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1222595950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222595950"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I would address your suggestion, but I am not sure I understand it. Is the above what you meant or did I get it wrong?",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-08T07:50:39Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+FUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    SetMockTime(GetMockTime() + std::chrono::minutes{fuzzed_data_provider.ConsumeIntegral<uint8_t>()});\n+\n+    g_setup->m_node.connman->OpenNetworkConnection(\n+        CAddress{}, false, nullptr, \"1.2.3.4:8333\", ConnectionType::OUTBOUND_FULL_RELAY);\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type{\n+            LIMIT_TO_MESSAGE_TYPE.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                LIMIT_TO_MESSAGE_TYPE};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1222595950",
      "id" : 1222595950,
      "in_reply_to_id" : 1219413577,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585I31Vu",
      "original_commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : null,
      "pull_request_review_id" : 1469229466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222595950/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-08T07:50:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222595950",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1222639887"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222639887"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, I think you can just copy paste it from the other test, no?",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-08T08:24:53Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+FUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    SetMockTime(GetMockTime() + std::chrono::minutes{fuzzed_data_provider.ConsumeIntegral<uint8_t>()});\n+\n+    g_setup->m_node.connman->OpenNetworkConnection(\n+        CAddress{}, false, nullptr, \"1.2.3.4:8333\", ConnectionType::OUTBOUND_FULL_RELAY);\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type{\n+            LIMIT_TO_MESSAGE_TYPE.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                LIMIT_TO_MESSAGE_TYPE};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1222639887",
      "id" : 1222639887,
      "in_reply_to_id" : 1219413577,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585I4AEP",
      "original_commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : null,
      "pull_request_review_id" : 1469300420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222639887/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-08T08:24:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222639887",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`35fc849412...bedbdf4a15`: address https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1219413577\r\n\r\n`bedbdf4a15...b96bd52f3a`: ditto, but move the check to the start of the test",
      "created_at" : "2023-06-08T09:12:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1582194359",
      "id" : 1582194359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585eTl63",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1582194359/reactions"
      },
      "updated_at" : "2023-06-08T09:16:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1582194359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1222705608"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222705608"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done. Now it is the same as in `process_message.cpp`.\r\n\r\nIt seems inefficient to me - if `LIMIT_TO_MESSAGE_TYPE` is set to e.g. `filterclear` the fuzzer has to brute force all possible strings with length 11 to find it? That is 2<sup>88</sup> possibilities.",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-08T09:22:22Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+FUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    SetMockTime(GetMockTime() + std::chrono::minutes{fuzzed_data_provider.ConsumeIntegral<uint8_t>()});\n+\n+    g_setup->m_node.connman->OpenNetworkConnection(\n+        CAddress{}, false, nullptr, \"1.2.3.4:8333\", ConnectionType::OUTBOUND_FULL_RELAY);\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type{\n+            LIMIT_TO_MESSAGE_TYPE.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                LIMIT_TO_MESSAGE_TYPE};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1222705608",
      "id" : 1222705608,
      "in_reply_to_id" : 1219413577,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585I4QHI",
      "original_commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : null,
      "pull_request_review_id" : 1469401463,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222705608/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-08T09:22:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222705608",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1222713396"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222713396"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A modern fuzz engine will read the `LIMIT_TO_MESSAGE_TYPE` and inject it into the fuzz input, so it shouldn't take more than a few seconds to guess. In any case it shouldn't take 2^88 tries",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-08T09:29:23Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+FUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    SetMockTime(GetMockTime() + std::chrono::minutes{fuzzed_data_provider.ConsumeIntegral<uint8_t>()});\n+\n+    g_setup->m_node.connman->OpenNetworkConnection(\n+        CAddress{}, false, nullptr, \"1.2.3.4:8333\", ConnectionType::OUTBOUND_FULL_RELAY);\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type{\n+            LIMIT_TO_MESSAGE_TYPE.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                LIMIT_TO_MESSAGE_TYPE};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1222713396",
      "id" : 1222713396,
      "in_reply_to_id" : 1219413577,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585I4SA0",
      "original_commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : null,
      "pull_request_review_id" : 1469413390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222713396/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-08T09:29:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222713396",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1242396610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1242396610"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Marking this as resolved, let me know if you think it is not.",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-26T15:43:32Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\n+        MineBlock(g_setup->m_node, CScript() << OP_TRUE);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n+FUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    SetMockTime(GetMockTime() + std::chrono::minutes{fuzzed_data_provider.ConsumeIntegral<uint8_t>()});\n+\n+    g_setup->m_node.connman->OpenNetworkConnection(\n+        CAddress{}, false, nullptr, \"1.2.3.4:8333\", ConnectionType::OUTBOUND_FULL_RELAY);\n+\n+    auto pipes = g_setup->m_sockets_pipes.PopFront();\n+\n+    uint8_t buf[1024];\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 100) {\n+\n+        const std::string message_type{\n+            LIMIT_TO_MESSAGE_TYPE.empty() ?\n+                fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE) :\n+                LIMIT_TO_MESSAGE_TYPE};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1242396610",
      "id" : 1242396610,
      "in_reply_to_id" : 1219413577,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KDXfC",
      "original_commit_id" : "4c867de996f58655aec3911f45367eb31865fb4d",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : null,
      "pull_request_review_id" : 1498853274,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1242396610/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-26T15:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1242396610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`b96bd52f3a...4557cc336f`: rebase",
      "created_at" : "2023-06-26T15:48:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1607757096",
      "id" : 1607757096,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585f1G0o",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1607757096/reactions"
      },
      "updated_at" : "2023-06-26T15:48:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1607757096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244442031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244442031"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Rather than including everything, it might be good to have a separate compilation unit for code that needs to be in `util/setup_common`, versus the current `util/net` code that is only needed for a handful of the tests.",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-27T22:38:40Z",
      "diff_hunk" : "@@ -13,6 +13,7 @@\n #include <pubkey.h>\n #include <random.h>\n #include <stdexcept>\n+#include <test/util/net.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244442031",
      "id" : 1244442031,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585KLK2v",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 16,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 4,
      "pull_request_review_id" : 1501951235,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244442031/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-27T22:59:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244442031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244454225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244454225"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "d2f46c7 Verified the behavior improvement in this commit by changing this line to make it fail.\r\n\r\n<details><summary>master</summary><p>\r\n\r\n```bash\r\n$ ./src/test/test_bitcoin -t banman_tests       \r\nRunning 1 test case...\r\nlibc++abi: terminating due to uncaught exception of type std::runtime_error: 'Dropping entry with unknown version (2) rom ban list' not found in debug log\r\n\r\n******** errors disabling the alternate stack:\r\n\t#error:22\r\n\tInvalid argument\r\nunknown location:0: fatal error: in \"banman_tests/file\": signal: SIGABRT (application abort requested)\r\ntest/banman_tests.cpp:38: last checkpoint\r\n\r\n*** 1 failure is detected in the test module \"Bitcoin Core Test Suite\"\r\n```\r\n</p></details>\r\n\r\n<details><summary>this commit</summary><p>\r\n\r\n```bash\r\n$ ./src/test/test_bitcoin -t banman_tests\r\nRunning 1 test case...\r\nunknown location:0: fatal error: in \"banman_tests/file\": std::runtime_error: 'Dropping entry with unknown version (2) rom ban list' not found in debug log\r\n\r\ntest/banman_tests.cpp:37: last checkpoint\r\n\r\n*** 1 failure is detected in the test module \"Bitcoin Core Test Suite\"\r\n```\r\n</p></details>\r\n",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-27T22:56:24Z",
      "diff_hunk" : "@@ -28,15 +28,15 @@ BOOST_AUTO_TEST_CASE(file)\n             \"] }\",\n         };\n         BOOST_REQUIRE(WriteBinaryFile(banlist_path + \".json\", entries_write));\n-        {\n-            // The invalid entries will be dropped, but the valid one remains\n-            ASSERT_DEBUG_LOG(\"Dropping entry with unparseable address or subnet (aaaaaaaaa) from ban list\");\n-            ASSERT_DEBUG_LOG(\"Dropping entry with unknown version (2) from ban list\");\n-            BanMan banman{banlist_path, /*client_interface=*/nullptr, /*default_ban_time=*/0};\n-            banmap_t entries_read;\n-            banman.GetBanned(entries_read);\n-            BOOST_CHECK_EQUAL(entries_read.size(), 1);\n-        }\n+        // The invalid entries will be dropped, but the valid one remains\n+        DebugLogHelper debug_log1{\"Dropping entry with unparseable address or subnet (aaaaaaaaa) from ban list\"};\n+        DebugLogHelper debug_log2{\"Dropping entry with unknown version (2) from ban list\"};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244454225",
      "id" : 1244454225,
      "line" : 33,
      "node_id" : "PRRC_kwDOABII585KLN1R",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 33,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/test/banman_tests.cpp",
      "position" : 15,
      "pull_request_review_id" : 1501951235,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244454225/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-27T23:01:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244454225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244795380"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244795380"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I tried extracting the mocked sockets out from `test/util/net.h` into a separate `test/util/mocked_sockets.h` and then compared the re-compilation time if that is modified (e.g. something in `DynSock` declaration is changed). In both cases recompilation takes ~28 seconds, so it makes no difference (in practice).\r\n\r\nHere is the change (on top of this PR):\r\n\r\n<details>\r\n<summary>mocked_sockets.h</summary>\r\n\r\n```diff\r\ncommit 398a2d5717b6ef6760e48eac92aa92127157a67a (HEAD -> e2e_tests)\r\nParent: 4557cc336fd8eb321b0db024b70213f46017071c\r\nAuthor:     Vasil Dimov <vd@FreeBSD.org>\r\nAuthorDate: Wed Jun 28 09:10:41 2023 +0200\r\nCommit:     Vasil Dimov <vd@FreeBSD.org>\r\nCommitDate: Wed Jun 28 09:10:41 2023 +0200\r\ngpg: Signature made Wed Jun 28 09:11:03 2023 CEST\r\ngpg:                using RSA key E64D8D45614DB07545D9CCC154DF06F64B55CBBF\r\ngpg: Good signature from \"Vasil Dimov <vd@myforest.net>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vd@FreeBSD.org>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vasild@gmail.com>\" [ultimate]\r\n\r\n\r\n    wip: mocked_sockets.h\r\n\r\ndiff --git a/src/test/util/net.h b/src/test/util/mocked_sockets.h\r\nsimilarity index 67%\r\ncopy from src/test/util/net.h\r\ncopy to src/test/util/mocked_sockets.h\r\nindex b5ab7699f0..cdf6cb5d96 100644\r\n--- a/src/test/util/net.h\r\n+++ b/src/test/util/mocked_sockets.h\r\n@@ -1,111 +1,27 @@\r\n-// Copyright (c) 2020-2022 The Bitcoin Core developers\r\n+// Copyright (c) 2023-2023 The Bitcoin Core developers\r\n // Distributed under the MIT software license, see the accompanying\r\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \r\n-#ifndef BITCOIN_TEST_UTIL_NET_H\r\n-#define BITCOIN_TEST_UTIL_NET_H\r\n+#ifndef BITCOIN_TEST_UTIL_MOCKED_SOCKETS_H\r\n+#define BITCOIN_TEST_UTIL_MOCKED_SOCKETS_H\r\n \r\n #include <compat/compat.h>\r\n #include <net.h>\r\n-#include <netaddress.h>\r\n #include <netmessagemaker.h>\r\n-#include <node/eviction.h>\r\n-#include <util/sock.h>\r\n #include <sync.h>\r\n+#include <util/sock.h>\r\n+#include <version.h>\r\n \r\n-#include <array>\r\n-#include <cassert>\r\n #include <chrono>\r\n-#include <condition_variable>\r\n-#include <cstring>\r\n+#include <cstdint>\r\n #include <memory>\r\n #include <optional>\r\n #include <string>\r\n #include <vector>\r\n \r\n-struct ConnmanTestMsg : public CConnman {\r\n-    using CConnman::CConnman;\r\n-\r\n-    void SetPeerConnectTimeout(std::chrono::seconds timeout)\r\n-    {\r\n-        m_peer_connect_timeout = timeout;\r\n-    }\r\n-\r\n-    void AddTestNode(CNode& node)\r\n-    {\r\n-        LOCK(m_nodes_mutex);\r\n-        m_nodes.push_back(&node);\r\n-    }\r\n-    void ClearTestNodes()\r\n-    {\r\n-        LOCK(m_nodes_mutex);\r\n-        for (CNode* node : m_nodes) {\r\n-            delete node;\r\n-        }\r\n-        m_nodes.clear();\r\n-    }\r\n-\r\n-    void Handshake(CNode& node,\r\n-                   bool successfully_connected,\r\n-                   ServiceFlags remote_services,\r\n-                   ServiceFlags local_services,\r\n-                   int32_t version,\r\n-                   bool relay_txs)\r\n-        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\r\n-\r\n-    void ProcessMessagesOnce(CNode& node) EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex) { m_msgproc->ProcessMessages(&node, flagInterruptMsgProc); }\r\n-\r\n-    void NodeReceiveMsgBytes(CNode& node, Span<const uint8_t> msg_bytes, bool& complete) const;\r\n-\r\n-    bool ReceiveMsgFrom(CNode& node, CSerializedNetMsg& ser_msg) const;\r\n-};\r\n-\r\n-constexpr ServiceFlags ALL_SERVICE_FLAGS[]{\r\n-    NODE_NONE,\r\n-    NODE_NETWORK,\r\n-    NODE_BLOOM,\r\n-    NODE_WITNESS,\r\n-    NODE_COMPACT_FILTERS,\r\n-    NODE_NETWORK_LIMITED,\r\n-};\r\n-\r\n-constexpr NetPermissionFlags ALL_NET_PERMISSION_FLAGS[]{\r\n-    NetPermissionFlags::None,\r\n-    NetPermissionFlags::BloomFilter,\r\n-    NetPermissionFlags::Relay,\r\n-    NetPermissionFlags::ForceRelay,\r\n-    NetPermissionFlags::NoBan,\r\n-    NetPermissionFlags::Mempool,\r\n-    NetPermissionFlags::Addr,\r\n-    NetPermissionFlags::Download,\r\n-    NetPermissionFlags::Implicit,\r\n-    NetPermissionFlags::All,\r\n-};\r\n-\r\n-constexpr ConnectionType ALL_CONNECTION_TYPES[]{\r\n-    ConnectionType::INBOUND,\r\n-    ConnectionType::OUTBOUND_FULL_RELAY,\r\n-    ConnectionType::MANUAL,\r\n-    ConnectionType::FEELER,\r\n-    ConnectionType::BLOCK_RELAY,\r\n-    ConnectionType::ADDR_FETCH,\r\n-};\r\n-\r\n-constexpr auto ALL_NETWORKS = std::array{\r\n-    Network::NET_UNROUTABLE,\r\n-    Network::NET_IPV4,\r\n-    Network::NET_IPV6,\r\n-    Network::NET_ONION,\r\n-    Network::NET_I2P,\r\n-    Network::NET_CJDNS,\r\n-    Network::NET_INTERNAL,\r\n-};\r\n-\r\n-std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int n_candidates, FastRandomContext& random_context);\r\n-\r\n /**\r\n  * A mocked Sock alternative that succeeds on all operations.\r\n  * Returns infinite amount of 0x0 bytes on reads.\r\n  */\r\n class ZeroSock : public Sock\r\n {\r\n@@ -257,7 +173,8 @@ void DynSock::Pipe::PushNetMsg(const std::string& type, Args&&... payload)\r\n     LOCK(m_mutex);\r\n     m_data.insert(m_data.end(), header.begin(), header.end());\r\n     m_data.insert(m_data.end(), msg.data.begin(), msg.data.end());\r\n     m_cond.notify_all();\r\n }\r\n \r\n-#endif // BITCOIN_TEST_UTIL_NET_H\r\n+#endif // BITCOIN_TEST_UTIL_MOCKED_SOCKETS_H\r\n+\r\ndiff --git a/src/test/util/net.cpp b/src/test/util/net.cpp\r\nindex ac866d7c89..1acdbf7061 100644\r\n--- a/src/test/util/net.cpp\r\n+++ b/src/test/util/net.cpp\r\n@@ -8,12 +8,13 @@\r\n #include <node/eviction.h>\r\n #include <net.h>\r\n #include <net_processing.h>\r\n #include <netmessagemaker.h>\r\n #include <span.h>\r\n #include <sync.h>\r\n+#include <test/util/mocked_sockets.h>\r\n \r\n #include <chrono>\r\n #include <optional>\r\n #include <vector>\r\n \r\n void ConnmanTestMsg::Handshake(CNode& node,\r\ndiff --git a/src/test/util/net.h b/src/test/util/net.h\r\nindex b5ab7699f0..7bad1ee4af 100644\r\n--- a/src/test/util/net.h\r\n+++ b/src/test/util/net.h\r\n@@ -100,164 +100,7 @@ constexpr auto ALL_NETWORKS = std::array{\r\n     Network::NET_CJDNS,\r\n     Network::NET_INTERNAL,\r\n };\r\n \r\n std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int n_candidates, FastRandomContext& random_context);\r\n \r\n-/**\r\n- * A mocked Sock alternative that succeeds on all operations.\r\n- * Returns infinite amount of 0x0 bytes on reads.\r\n- */\r\n-class ZeroSock : public Sock\r\n-{\r\n-public:\r\n-    ZeroSock();\r\n-\r\n-    ~ZeroSock() override;\r\n-\r\n-    ssize_t Send(const void*, size_t len, int) const override;\r\n-\r\n-    ssize_t Recv(void* buf, size_t len, int flags) const override;\r\n-\r\n-    int Connect(const sockaddr*, socklen_t) const override;\r\n-\r\n-    int Bind(const sockaddr*, socklen_t) const override;\r\n-\r\n-    int Listen(int) const override;\r\n-\r\n-    std::unique_ptr<Sock> Accept(sockaddr* addr, socklen_t* addr_len) const override;\r\n-\r\n-    int GetSockOpt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override;\r\n-\r\n-    int SetSockOpt(int, int, const void*, socklen_t) const override;\r\n-\r\n-    int GetSockName(sockaddr* name, socklen_t* name_len) const override;\r\n-\r\n-    bool SetNonBlocking() const override;\r\n-\r\n-    bool IsSelectable() const override;\r\n-\r\n-    bool Wait(std::chrono::milliseconds timeout,\r\n-              Event requested,\r\n-              Event* occurred = nullptr) const override;\r\n-\r\n-    bool WaitMany(std::chrono::milliseconds timeout, EventsPerSock& events_per_sock) const override;\r\n-\r\n-private:\r\n-    ZeroSock& operator=(Sock&& other) override;\r\n-};\r\n-\r\n-/**\r\n- * A mocked Sock alternative that returns a statically contained data upon read and succeeds\r\n- * and ignores all writes. The data to be returned is given to the constructor and when it is\r\n- * exhausted an EOF is returned by further reads.\r\n- */\r\n-class StaticContentsSock : public ZeroSock\r\n-{\r\n-public:\r\n-    explicit StaticContentsSock(const std::string& contents);\r\n-\r\n-    /**\r\n-     * Return parts of the contents that was provided at construction until it is exhausted\r\n-     * and then return 0 (EOF).\r\n-     */\r\n-    ssize_t Recv(void* buf, size_t len, int flags) const override;\r\n-\r\n-private:\r\n-    StaticContentsSock& operator=(Sock&& other) override;\r\n-\r\n-    const std::string m_contents;\r\n-    mutable size_t m_consumed{0};\r\n-};\r\n-\r\n-/**\r\n- * A mocked Sock alternative that allows providing the data to be returned by Recv()\r\n- * and inspecting the data that has been supplied to Send().\r\n- */\r\n-class DynSock : public ZeroSock\r\n-{\r\n-public:\r\n-    /**\r\n-     * Unidirectional bytes or CNetMessage queue (FIFO).\r\n-     */\r\n-    class Pipe\r\n-    {\r\n-    public:\r\n-        /**\r\n-         * Get bytes and remove them from the pipe.\r\n-         * @param[in] buf Destination to write bytes to.\r\n-         * @param[in] len Write up to this number of bytes.\r\n-         * @param[in] flags Same as the flags of `recv(2)`. Just `MSG_PEEK` is honored.\r\n-         * @return The number of bytes written to `buf`. `0` if `Eof()` has been called.\r\n-         * If no bytes are available then `-1` is returned and `errno` is set to `EAGAIN`.\r\n-         */\r\n-        ssize_t GetBytes(void* buf, size_t len, int flags = 0) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\r\n-\r\n-        /**\r\n-         * Deserialize a `CNetMessage` and remove it from the pipe.\r\n-         * If not enough bytes are available then the function will wait. If parsing fails\r\n-         * or EOF is signaled to the pipe, then `std::nullopt` is returned.\r\n-         */\r\n-        std::optional<CNetMessage> GetNetMsg() EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\r\n-\r\n-        /**\r\n-         * Push bytes to the pipe.\r\n-         */\r\n-        void PushBytes(const void* buf, size_t len) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\r\n-\r\n-        /**\r\n-         * Construct and push CNetMessage to the pipe.\r\n-         */\r\n-        template <typename... Args>\r\n-        void PushNetMsg(const std::string& type, Args&&... payload) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\r\n-\r\n-        /**\r\n-         * Signal end-of-file on the receiving end (`GetBytes()` or `GetNetMsg()`).\r\n-         */\r\n-        void Eof() EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\r\n-\r\n-    private:\r\n-        Mutex m_mutex;\r\n-        std::condition_variable m_cond;\r\n-        std::vector<uint8_t> m_data GUARDED_BY(m_mutex);\r\n-        bool m_eof GUARDED_BY(m_mutex){false};\r\n-    };\r\n-\r\n-    struct Pipes {\r\n-        Pipe recv;\r\n-        Pipe send;\r\n-    };\r\n-\r\n-    explicit DynSock(std::shared_ptr<Pipes> pipes);\r\n-\r\n-    ~DynSock();\r\n-\r\n-    ssize_t Recv(void* buf, size_t len, int flags) const override;\r\n-\r\n-    ssize_t Send(const void* buf, size_t len, int) const override;\r\n-\r\n-    bool Wait(std::chrono::milliseconds timeout,\r\n-              Event requested,\r\n-              Event* occurred = nullptr) const override;\r\n-\r\n-    bool WaitMany(std::chrono::milliseconds timeout, EventsPerSock& events_per_sock) const override;\r\n-\r\n-private:\r\n-    DynSock& operator=(Sock&&) override;\r\n-\r\n-    std::shared_ptr<Pipes> m_pipes;\r\n-};\r\n-\r\n-template <typename... Args>\r\n-void DynSock::Pipe::PushNetMsg(const std::string& type, Args&&... payload)\r\n-{\r\n-    auto msg = CNetMsgMaker(INIT_PROTO_VERSION).Make(type, std::forward<Args>(payload)...);\r\n-    std::vector<unsigned char> header;\r\n-    V1TransportSerializer().prepareForTransport(msg, header);\r\n-\r\n-    LOCK(m_mutex);\r\n-    m_data.insert(m_data.end(), header.begin(), header.end());\r\n-    m_data.insert(m_data.end(), msg.data.begin(), msg.data.end());\r\n-    m_cond.notify_all();\r\n-}\r\n-\r\n #endif // BITCOIN_TEST_UTIL_NET_H\r\ndiff --git a/src/test/util/setup_common.h b/src/test/util/setup_common.h\r\nindex d3137fa69e..1daac4a57c 100644\r\n--- a/src/test/util/setup_common.h\r\n+++ b/src/test/util/setup_common.h\r\n@@ -10,13 +10,13 @@\r\n #include <node/caches.h>\r\n #include <node/context.h> // IWYU pragma: export\r\n #include <primitives/transaction.h>\r\n #include <pubkey.h>\r\n #include <random.h>\r\n #include <stdexcept>\r\n-#include <test/util/net.h>\r\n+#include <test/util/mocked_sockets.h>\r\n #include <util/chaintype.h>\r\n #include <util/check.h>\r\n #include <util/fs.h>\r\n #include <util/string.h>\r\n #include <util/vector.h>\r\n \r\n```\r\n</details>\r\n\r\nOr did you mean something else?",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-28T07:21:05Z",
      "diff_hunk" : "@@ -13,6 +13,7 @@\n #include <pubkey.h>\n #include <random.h>\n #include <stdexcept>\n+#include <test/util/net.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244795380",
      "id" : 1244795380,
      "in_reply_to_id" : 1244442031,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585KMhH0",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 16,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 4,
      "pull_request_review_id" : 1502446003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244795380/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T07:21:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244795380",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244823822"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244823822"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(No opinion on the change), just\r\n\r\n> In both cases recompilation takes ~28 seconds\r\n\r\nSeems odd that re-compilation of all tests takes only 28 seconds when `mocked_sockets.h` is modified, which is included in `setup_common.h`, which is included in all test files, no?",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-28T07:47:18Z",
      "diff_hunk" : "@@ -13,6 +13,7 @@\n #include <pubkey.h>\n #include <random.h>\n #include <stdexcept>\n+#include <test/util/net.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244823822",
      "id" : 1244823822,
      "in_reply_to_id" : 1244442031,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585KMoEO",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 16,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 4,
      "pull_request_review_id" : 1502487720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244823822/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T07:47:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244823822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244922368"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244922368"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Compiling everything from scratch (after `git clean -fdx`) takes about 1m 30sec (including autogen and ./configure which are single-threaded). The CPU on the machine is:\r\n\r\n> AMD Ryzen 9 7950X 16-Core Processor             (4491.70-MHz K8-class CPU)",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-28T09:07:54Z",
      "diff_hunk" : "@@ -13,6 +13,7 @@\n #include <pubkey.h>\n #include <random.h>\n #include <stdexcept>\n+#include <test/util/net.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244922368",
      "id" : 1244922368,
      "in_reply_to_id" : 1244442031,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585KNAIA",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 16,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 4,
      "pull_request_review_id" : 1502635198,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244922368/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T09:07:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244922368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244937645"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244937645"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For a useful benchmark, you'll have to measure the total CPU time, not the CPU time of just the translation unit that takes the longest.",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-28T09:20:28Z",
      "diff_hunk" : "@@ -13,6 +13,7 @@\n #include <pubkey.h>\n #include <random.h>\n #include <stdexcept>\n+#include <test/util/net.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244937645",
      "id" : 1244937645,
      "in_reply_to_id" : 1244442031,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585KND2t",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 16,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 4,
      "pull_request_review_id" : 1502658238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244937645/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T09:20:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244937645",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244969873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244969873"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```\r\nPR:\r\nreal    0m29.623s\r\nuser    10m58.337s\r\nsys     0m51.187s\r\n\r\nreal    0m29.829s\r\nuser    10m58.359s\r\nsys     0m50.912s\r\n\r\nmocked_sockets.h:\r\nreal    0m29.528s\r\nuser    11m12.208s\r\nsys     1m0.406s\r\n\r\nreal    0m28.831s\r\nuser    10m45.615s\r\nsys     0m49.680s\r\n```\r\n\r\nI guess the \"total CPU time\" is real+sys from above. It all seems within noise. In both cases all tests would be recompiled, maybe I got @jonatack's comment wrong?",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-28T09:46:13Z",
      "diff_hunk" : "@@ -13,6 +13,7 @@\n #include <pubkey.h>\n #include <random.h>\n #include <stdexcept>\n+#include <test/util/net.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244969873",
      "id" : 1244969873,
      "in_reply_to_id" : 1244442031,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585KNLuR",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 16,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 4,
      "pull_request_review_id" : 1502708984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244969873/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T09:46:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244969873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244981230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244981230"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I guess the \"total CPU time\" is real+sys from above\r\n\r\nuser+sys, but thanks for re-checking.",
      "commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "created_at" : "2023-06-28T09:54:48Z",
      "diff_hunk" : "@@ -13,6 +13,7 @@\n #include <pubkey.h>\n #include <random.h>\n #include <stdexcept>\n+#include <test/util/net.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244981230",
      "id" : 1244981230,
      "in_reply_to_id" : 1244442031,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585KNOfu",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 16,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 4,
      "pull_request_review_id" : 1502725013,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244981230/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T09:54:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244981230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245423693"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245423693"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for looking into it. I like the idea of keeping them separate and avoiding including unneeded code, in general and for building with slower, older CPUs. So ð for your diff in https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1244795380. Great work so far AFAICT. Will continue reviewing the remaining commits.",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-28T15:42:30Z",
      "diff_hunk" : "@@ -13,6 +13,7 @@\n #include <pubkey.h>\n #include <random.h>\n #include <stdexcept>\n+#include <test/util/net.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245423693",
      "id" : 1245423693,
      "in_reply_to_id" : 1244442031,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585KO6hN",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 16,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 4,
      "pull_request_review_id" : 1503434375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245423693/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T15:42:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245423693",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245427231"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245427231"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> In both cases all tests would be recompiled\r\n\r\nYes, but future changes to `util/net` would not require compiling all the tests.",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-28T15:45:15Z",
      "diff_hunk" : "@@ -13,6 +13,7 @@\n #include <pubkey.h>\n #include <random.h>\n #include <stdexcept>\n+#include <test/util/net.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245427231",
      "id" : 1245427231,
      "in_reply_to_id" : 1244442031,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585KO7Yf",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 16,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 4,
      "pull_request_review_id" : 1503439862,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245427231/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T15:45:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245427231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245592304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245592304"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "37cd2f5 naming: maybe call the test file `net_msg_tests.cpp` (and move this to line 113)",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-28T18:15:03Z",
      "diff_hunk" : "@@ -113,6 +113,7 @@ BITCOIN_TESTS =\\\n   test/net_peer_eviction_tests.cpp \\\n   test/net_tests.cpp \\\n   test/netbase_tests.cpp \\\n+  test/netmsg_tests.cpp \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245592304",
      "id" : 1245592304,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KPjrw",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 116,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/Makefile.test.include",
      "position" : null,
      "pull_request_review_id" : 1503702678,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245592304/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T19:13:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245592304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245596582"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245596582"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "37cd2f5\r\n\r\n<details><summary>non-blocking suggestions: make pipes const, prefix iterator (per our developer notes, even if compilers optimize for it), reduce nesting</summary><p>\r\n\r\n```diff\r\n@@ -22,20 +22,15 @@ BOOST_FIXTURE_TEST_SUITE(netmsg_tests, NetTestingSetup)\r\n BOOST_AUTO_TEST_CASE(initial_messages_exchange)\r\n {\r\n     std::unordered_map<std::string, size_t> count_sent_messages;\r\n-    auto pipes = m_sockets_pipes.PopFront();\r\n+    const auto pipes{m_sockets_pipes.PopFront()};\r\n \r\n     // Wait for all messages due to the initial handshake to be Send() to the socket.\r\n     // The FEEFILTER is the last one, so quit when we get that.\r\n     for (;;) {\r\n         auto msg = pipes->send.GetNetMsg();\r\n-        if (msg.has_value()) {\r\n-            count_sent_messages[msg->m_type]++;\r\n-            if (msg->m_type == NetMsgType::FEEFILTER) {\r\n-                break;\r\n-            }\r\n-        } else {\r\n-            break;\r\n-        }\r\n+        if (!msg.has_value()) break;\r\n+        ++count_sent_messages[msg->m_type];\r\n+        if (msg->m_type == NetMsgType::FEEFILTER) break;\r\n     }\r\n \r\n     BOOST_CHECK_EQUAL(count_sent_messages[NetMsgType::VERSION], 1);\r\n@@ -51,7 +46,7 @@ BOOST_AUTO_TEST_CASE(initial_messages_exchange)\r\n \r\n BOOST_AUTO_TEST_CASE(addr)\r\n {\r\n-    auto pipes = m_sockets_pipes.PopFront();\r\n+    const auto pipes{m_sockets_pipes.PopFront()};\r\n     std::vector<CAddress> addresses{5};\r\n \r\n     DebugLogHelper debug_log{strprintf(\"Received addr: %u addresses\", addresses.size())};\r\n@@ -61,7 +56,7 @@ BOOST_AUTO_TEST_CASE(addr)\r\n \r\n BOOST_AUTO_TEST_CASE(getblocks)\r\n {\r\n-    auto pipes = m_sockets_pipes.PopFront();\r\n+    const auto pipes{m_sockets_pipes.PopFront()};\r\n     std::vector<uint256> hashes{5};\r\n     CBlockLocator block_locator{std::move(hashes)};\r\n     uint256 hash_stop;\r\n@@ -73,7 +68,7 @@ BOOST_AUTO_TEST_CASE(getblocks)\r\n \r\n BOOST_AUTO_TEST_CASE(ping)\r\n {\r\n-    auto pipes = m_sockets_pipes.PopFront();\r\n+    const auto pipes{m_sockets_pipes.PopFront()};\r\n \r\n     auto WaitForPingStats = [this](std::chrono::microseconds min,\r\n                                    std::chrono::microseconds last,\r\n@@ -173,7 +168,7 @@ BOOST_AUTO_TEST_CASE(ping)\r\n \r\n BOOST_AUTO_TEST_CASE(redundant_verack)\r\n {\r\n-    auto pipes = m_sockets_pipes.PopFront();\r\n+    const auto pipes{m_sockets_pipes.PopFront()};\r\n```\r\n</p></details>\r\n",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-28T18:19:51Z",
      "diff_hunk" : "@@ -0,0 +1,183 @@\n+// Copyright (c) 2022-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net_processing.h>\n+#include <netaddress.h>\n+#include <protocol.h>\n+#include <test/util/logging.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <version.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chrono>\n+#include <string>\n+#include <unordered_map>\n+\n+BOOST_FIXTURE_TEST_SUITE(netmsg_tests, NetTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(initial_messages_exchange)\n+{\n+    std::unordered_map<std::string, size_t> count_sent_messages;\n+    auto pipes = m_sockets_pipes.PopFront();\n+\n+    // Wait for all messages due to the initial handshake to be Send() to the socket.\n+    // The FEEFILTER is the last one, so quit when we get that.\n+    for (;;) {\n+        auto msg = pipes->send.GetNetMsg();\n+        if (msg.has_value()) {\n+            count_sent_messages[msg->m_type]++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245596582",
      "id" : 1245596582,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KPkum",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 32,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/test/netmsg_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1503702678,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245596582/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T19:17:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245596582",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245633845"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245633845"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/commit/37cd2f5a358f1d21c11efa8783be65570418c648 and 4557cc3 \r\n\r\nHave a look at https://cirrus-ci.com/task/4730456604672000 for IWYU suggestions on the new files.",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-28T19:01:10Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245633845",
      "id" : 1245633845,
      "line" : 30,
      "node_id" : "PRRC_kwDOABII585KPt01",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 30,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : 30,
      "pull_request_review_id" : 1503702678,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245633845/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T19:13:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245633845",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245634333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245634333"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/commit/4557cc336fd8eb321b0db024b70213f46017071c\r\n\r\n<details><summary>non-blocking suggestions</summary><p>\r\n\r\n```diff\r\n@@ -57,7 +57,7 @@ void initialize_process_message_e2e()\r\n             /*chain_type=*/ChainType::REGTEST,\r\n             /*extra_args=*/{\"-txreconciliation\"});\r\n     g_setup = testing_setup.get();\r\n-    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {\r\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; ++i) {\r\n         MineBlock(g_setup->m_node, CScript() << OP_TRUE);\r\n     }\r\n     SyncWithValidationInterfaceQueue();\r\n@@ -75,9 +75,9 @@ FUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\r\n     SetMockTime(GetMockTime() + std::chrono::minutes{fuzzed_data_provider.ConsumeIntegral<uint8_t>()});\r\n \r\n     g_setup->m_node.connman->OpenNetworkConnection(\r\n-        CAddress{}, false, nullptr, \"1.2.3.4:8333\", ConnectionType::OUTBOUND_FULL_RELAY);\r\n+        CAddress{}, /*fCountFailure=*/false, /*grantOutbound=*/nullptr, \"1.2.3.4:8333\", ConnectionType::OUTBOUND_FULL_RELAY);\r\n \r\n-    auto pipes = g_setup->m_sockets_pipes.PopFront();\r\n+    const auto pipes{g_setup->m_sockets_pipes.PopFront()};\r\n \r\n     uint8_t buf[1024];\r\n```\r\n</p></details>\r\n",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-28T19:01:47Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1245634333",
      "id" : 1245634333,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KPt8d",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : null,
      "pull_request_review_id" : 1503702678,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245634333/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T19:13:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245634333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`4557cc336f...353d323356`: take some suggestions\r\n\r\nInvalidates ACK from @jonatack \r\n\r\n`353d323356...612ba17fca`: proper rename of the test netmsg -> net_msg ",
      "created_at" : "2023-06-29T13:00:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1613145594",
      "id" : 1613145594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585gJqX6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613145594/reactions"
      },
      "updated_at" : "2023-06-29T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613145594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1246596157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246596157"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Alright, so I got it the other way around. So the point is to avoid recompiling all tests if e.g. `ALL_NETWORKS` is changed (defined in `test/util/net.h`). That lowers the re-compilation from 28-29 sec to about 10 sec (if `src/test/util/net.h` is modified).\r\n\r\nI will leave it as it is because moving the code around would further increase the size of this PR which suffers from lack of interest from reviewers and I think expanding it may further turn people away.",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-29T13:07:30Z",
      "diff_hunk" : "@@ -13,6 +13,7 @@\n #include <pubkey.h>\n #include <random.h>\n #include <stdexcept>\n+#include <test/util/net.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1246596157",
      "id" : 1246596157,
      "in_reply_to_id" : 1244442031,
      "line" : 16,
      "node_id" : "PRRC_kwDOABII585KTYw9",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 16,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 4,
      "pull_request_review_id" : 1505257347,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246596157/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-29T13:07:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246596157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1246596519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246596519"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-29T13:07:51Z",
      "diff_hunk" : "@@ -113,6 +113,7 @@ BITCOIN_TESTS =\\\n   test/net_peer_eviction_tests.cpp \\\n   test/net_tests.cpp \\\n   test/netbase_tests.cpp \\\n+  test/netmsg_tests.cpp \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1246596519",
      "id" : 1246596519,
      "in_reply_to_id" : 1245592304,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KTY2n",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 116,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/Makefile.test.include",
      "position" : null,
      "pull_request_review_id" : 1505257934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246596519/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-29T13:07:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246596519",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1246596786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246596786"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-29T13:08:02Z",
      "diff_hunk" : "@@ -0,0 +1,183 @@\n+// Copyright (c) 2022-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <net_processing.h>\n+#include <netaddress.h>\n+#include <protocol.h>\n+#include <test/util/logging.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <util/time.h>\n+#include <version.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <chrono>\n+#include <string>\n+#include <unordered_map>\n+\n+BOOST_FIXTURE_TEST_SUITE(netmsg_tests, NetTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(initial_messages_exchange)\n+{\n+    std::unordered_map<std::string, size_t> count_sent_messages;\n+    auto pipes = m_sockets_pipes.PopFront();\n+\n+    // Wait for all messages due to the initial handshake to be Send() to the socket.\n+    // The FEEFILTER is the last one, so quit when we get that.\n+    for (;;) {\n+        auto msg = pipes->send.GetNetMsg();\n+        if (msg.has_value()) {\n+            count_sent_messages[msg->m_type]++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1246596786",
      "id" : 1246596786,
      "in_reply_to_id" : 1245596582,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KTY6y",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 32,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/test/netmsg_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1505258303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246596786/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-29T13:08:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246596786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1246602200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246602200"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.\r\n\r\nI changed it to use `{}` as suggested but I don't see a point to use `{}` instead of `=` for initialization when `auto` is used. I find the `{}` variant a little bit less readable but see the merit to use it when `Type1 x{expresson_of_Type2};` is used to detect incompatibilities between `Type1` and `Type2`. But why do that for `auto x{expressoin_of_any_type};`?",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-29T13:12:42Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1246602200",
      "id" : 1246602200,
      "in_reply_to_id" : 1245634333,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KTaPY",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : null,
      "pull_request_review_id" : 1505266828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246602200/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-29T13:12:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246602200",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1246602826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246602826"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done, except this:\r\n\r\n```\r\ntest/net_msg_tests.cpp should add these lines:\r\n#include <boost/preprocessor/arithmetic/limits/dec_256.hpp>\r\n#include <boost/preprocessor/comparison/limits/not_equal_256.hpp>\r\n#include <boost/preprocessor/control/expr_iif.hpp>\r\n#include <boost/preprocessor/control/iif.hpp>\r\n#include <boost/preprocessor/detail/limits/auto_rec_256.hpp>\r\n#include <boost/preprocessor/logical/compl.hpp>\r\n#include <boost/preprocessor/logical/limits/bool_256.hpp>\r\n#include <boost/preprocessor/repetition/detail/limits/for_256.hpp>\r\n#include <boost/preprocessor/repetition/for.hpp>\r\n#include <boost/preprocessor/seq/limits/elem_256.hpp>\r\n#include <boost/preprocessor/seq/limits/size_256.hpp>\r\n#include <boost/preprocessor/tuple/elem.hpp>\r\n#include <boost/preprocessor/variadic/limits/elem_64.hpp>\r\n#include <boost/test/tools/old/interface.hpp>\r\n#include <boost/test/unit_test_log.hpp>\r\n#include <boost/test/unit_test_suite.hpp>\r\n#include <boost/test/utils/basic_cstring/basic_cstring.hpp>\r\n#include <boost/test/utils/lazy_ostream.hpp>\r\n\r\ntest/net_msg_tests.cpp should remove these lines:\r\n- #include <boost/test/unit_test.hpp>  // lines 18-18\r\n```\r\n\r\nwhich seems strange.",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-29T13:13:14Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1246602826",
      "id" : 1246602826,
      "in_reply_to_id" : 1245633845,
      "line" : 30,
      "node_id" : "PRRC_kwDOABII585KTaZK",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 30,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : 30,
      "pull_request_review_id" : 1505267868,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246602826/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-29T13:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1246602826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-29T19:03:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1613651346",
      "id" : 1613651346,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585gLl2S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613651346/reactions"
      },
      "updated_at" : "2023-06-29T19:03:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613651346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1247025846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247025846"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "With C++11, my understanding was to avoid `auto` with uniform (braced) initialization because in some cases it could have unexpected results.  Since C++17, that was mostly fixed and the CPP Guideline is to [prefer the {}-initializer syntax](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#es23-prefer-the--initializer-syntax) as its rules are simpler, more general, less ambiguous, and safer. See also https://ianyepan.github.io/posts/cpp-uniform-initialization/. Though it didn't matter in this case, IIUC, so I didn't mention it explicitly.",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-06-29T19:31:34Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1247025846",
      "id" : 1247025846,
      "in_reply_to_id" : 1245634333,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KVBq2",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : null,
      "pull_request_review_id" : 1505932424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247025846/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-29T19:32:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247025846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1263332063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1263332063"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure about changing this. It just makes it harder to use. If you prefer to not have an exception, this can use an `Assert`? Also, in the commit description, it would be good to refer to documentation why it is \"not allowed\", and/or include an example of what happens.",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-07-14T06:06:36Z",
      "diff_hunk" : "@@ -16,16 +16,30 @@ DebugLogHelper::DebugLogHelper(std::string message, MatchFn match)\n     m_print_connection = LogInstance().PushBackCallback(\n         [this](const std::string& s) {\n             if (m_found) return;\n-            m_found = s.find(m_message) != std::string::npos && m_match(&s);\n+            m_found = s.find(m_message) != std::string::npos && m_match(s);\n         });\n     noui_test_redirect();\n+    m_receiving_log = true;\n }\n \n-void DebugLogHelper::check_found()\n+DebugLogHelper::~DebugLogHelper()\n {\n-    noui_reconnect();\n-    LogInstance().DeleteCallback(m_print_connection);\n-    if (!m_found && m_match(nullptr)) {\n+    StopReceivingLog();\n+}\n+\n+void DebugLogHelper::EndAndThrowIfNotFound()\n+{\n+    StopReceivingLog();\n+    if (!m_found) {\n         throw std::runtime_error(strprintf(\"'%s' not found in debug log\\n\", m_message));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1263332063",
      "id" : 1263332063,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585LTOrf",
      "original_commit_id" : "d2f46c705540c74c2b6f83a66535c3ead1cb95d4",
      "original_line" : 34,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/test/util/logging.cpp",
      "position" : 42,
      "pull_request_review_id" : 1529671710,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1263332063/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-14T06:07:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1263332063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1268252521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268252521"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I am still not convinced about `auto` and brace-initialization.\r\n\r\nhttps://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#es23-prefer-the--initializer-syntax mentions:\r\n> Use = only when you are sure that there can be no narrowing conversions\r\n> For built-in arithmetic types, use = only with auto\r\n\r\nThere will not be narrowing conversions with `auto x = expression;`\r\n\r\nOne of the examples down there uses `auto p = ...`.",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-07-19T15:34:28Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/chaintype.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+#include <version.h>\n+\n+\n+#include <atomic>\n+#include <cstdlib>\n+#include <iostream>\n+#include <memory>\n+#include <string>\n+#include <string_view>\n+#include <vector>\n+\n+// There are two sets of tests:\n+// - direct: pass the fuzzed message directly to PeerManager::ProcessMessage() (fuzz/process_message.cpp)\n+// - e2e: send the fuzzed message to a mocked socket which is read from Connman\n+//   and processed by PeerManager (like it is happening in the \"real world\") (fuzz/process_message_e2e.cpp)\n+\n+namespace {\n+NetTestingSetup* g_setup;\n+std::string_view LIMIT_TO_MESSAGE_TYPE{};\n+} // namespace\n+\n+void initialize_process_message_e2e()\n+{\n+    if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\n+        LIMIT_TO_MESSAGE_TYPE = val;\n+        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\n+    }\n+\n+    static const auto testing_setup = MakeNoLogFileContext<NetTestingSetup>(\n+            /*chain_type=*/ChainType::REGTEST,\n+            /*extra_args=*/{\"-txreconciliation\"});\n+    g_setup = testing_setup.get();\n+    for (int i = 0; i < 2 * COINBASE_MATURITY; i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1268252521",
      "id" : 1268252521,
      "in_reply_to_id" : 1245634333,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ll_9p",
      "original_commit_id" : "4557cc336fd8eb321b0db024b70213f46017071c",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/test/fuzz/process_message_e2e.cpp",
      "position" : null,
      "pull_request_review_id" : 1537383252,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268252521/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T15:34:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268252521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> needs rebase if still relevant.\r\n\r\nFor the `previous releases` CI? (I don't find any merge conflicts with current master.)\r\n",
      "created_at" : "2023-07-19T16:19:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1642386101",
      "id" : 1642386101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585h5NK1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642386101/reactions"
      },
      "updated_at" : "2023-07-19T16:19:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642386101",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't find any merge conflicts with current master.\r\n\r\nAre you sure you ran a full build after the merge?",
      "created_at" : "2023-07-19T16:29:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1642400630",
      "id" : 1642400630,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585h5Qt2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642400630/reactions"
      },
      "updated_at" : "2023-07-19T16:29:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642400630",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah, the second try did it :)\r\n\r\n<details><summary>build log</summary><p>\r\n\r\n```\r\ntest/fuzz/process_message_e2e.cpp:59:1: error: a type specifier is required for all declarations\r\nFUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\r\n^\r\ntest/fuzz/process_message_e2e.cpp:59:18: error: use of undeclared identifier 'process_message_e2e'\r\nFUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\r\n                 ^\r\ntest/fuzz/process_message_e2e.cpp:59:70: error: expected ';' after top level declarator\r\nFUZZ_TARGET_INIT(process_message_e2e, initialize_process_message_e2e)\r\n                                                                     ^\r\n                                                                     ;\r\n3 errors generated.\r\nmake[2]: *** [test/fuzz/fuzz-process_message_e2e.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\ntest/validation_chainstatemanager_tests.cpp:664:9: error: use of undeclared identifier 'ASSERT_DEBUG_LOG'\r\n        ASSERT_DEBUG_LOG(\"failed to validate the -assumeutxo snapshot state\");\r\n        ^\r\n1 error generated.\r\nmake[2]: *** [test/test_bitcoin-validation_chainstatemanager_tests.o] Error 1\r\nwallet/test/walletload_tests.cpp:61:20: error: no matching constructor for initialization of 'DebugLogHelper'\r\n    DebugLogHelper logHelper(\"The descriptor ID calculated by the wallet differs from the one in DB\", [&](const std::string* s) {\r\n                   ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./test/util/logging.h:23:14: note: candidate constructor not viable: no known conversion from '(lambda at wallet/test/walletload_tests.cpp:61:103)' to 'MatchFn' (aka 'function<bool (const basic_string<char> &)>') for 2nd argument\r\n    explicit DebugLogHelper(std::string message, MatchFn match = [](const std::string&){ return true; });\r\n             ^\r\n./test/util/logging.h:18:7: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 2 were provided\r\nclass DebugLogHelper\r\n      ^\r\n1 error generated.\r\n```\r\n</p></details>\r\n",
      "created_at" : "2023-07-19T16:33:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1642405661",
      "id" : 1642405661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585h5R8d",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642405661/reactions"
      },
      "updated_at" : "2023-07-19T16:33:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642405661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1269027565"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269027565"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I will look into replacing this with `Assert()`.\r\n\r\n\"exception from destructor in c++\" is a topic well covered all over the internet. The compiler produces a warning for that. Here is an example:\r\n\r\n```cpp\r\nclass A \r\n{\r\npublic:\r\n    ~A() { \r\n        std::cout << \"before throw a\\n\";\r\n        // warning: '~A' has a non-throwing exception specification but can still throw [-Wexceptions]\r\n        //171 |         throw std::runtime_error(\"a\");\r\n        //    |         ^\r\n        throw std::runtime_error(\"a\");\r\n    } \r\n};\r\n\r\nint main(int, char**)\r\n{\r\n    try { \r\n        A a;\r\n        std::cout << \"before throw b\\n\";\r\n        throw std::runtime_error(\"b\");\r\n    } catch (const std::exception& e) { \r\n        std::cout << \"catch\\n\"; // never reached\r\n    } \r\n    return 0;\r\n}\r\n```\r\n\r\n```\r\n$ ./t\r\nbefore throw b\r\nbefore throw a\r\nAbort trap (core dumped)\r\n$\r\n```\r\n\r\nI will look into improving the commit message as well.",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-07-20T07:11:04Z",
      "diff_hunk" : "@@ -16,16 +16,30 @@ DebugLogHelper::DebugLogHelper(std::string message, MatchFn match)\n     m_print_connection = LogInstance().PushBackCallback(\n         [this](const std::string& s) {\n             if (m_found) return;\n-            m_found = s.find(m_message) != std::string::npos && m_match(&s);\n+            m_found = s.find(m_message) != std::string::npos && m_match(s);\n         });\n     noui_test_redirect();\n+    m_receiving_log = true;\n }\n \n-void DebugLogHelper::check_found()\n+DebugLogHelper::~DebugLogHelper()\n {\n-    noui_reconnect();\n-    LogInstance().DeleteCallback(m_print_connection);\n-    if (!m_found && m_match(nullptr)) {\n+    StopReceivingLog();\n+}\n+\n+void DebugLogHelper::EndAndThrowIfNotFound()\n+{\n+    StopReceivingLog();\n+    if (!m_found) {\n         throw std::runtime_error(strprintf(\"'%s' not found in debug log\\n\", m_message));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1269027565",
      "id" : 1269027565,
      "in_reply_to_id" : 1263332063,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585Lo9Lt",
      "original_commit_id" : "d2f46c705540c74c2b6f83a66535c3ead1cb95d4",
      "original_line" : 34,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/test/util/logging.cpp",
      "position" : 42,
      "pull_request_review_id" : 1538585345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269027565/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-20T07:11:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269027565",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1269042432"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269042432"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, but this being an \"Abort trap\" is well defined, not \"not allowed\". And I think the tests aborting on failure is fine.\r\n\r\n",
      "commit_id" : "612ba17fcadc955c142f21f9b1af0b60f0def55f",
      "created_at" : "2023-07-20T07:25:42Z",
      "diff_hunk" : "@@ -16,16 +16,30 @@ DebugLogHelper::DebugLogHelper(std::string message, MatchFn match)\n     m_print_connection = LogInstance().PushBackCallback(\n         [this](const std::string& s) {\n             if (m_found) return;\n-            m_found = s.find(m_message) != std::string::npos && m_match(&s);\n+            m_found = s.find(m_message) != std::string::npos && m_match(s);\n         });\n     noui_test_redirect();\n+    m_receiving_log = true;\n }\n \n-void DebugLogHelper::check_found()\n+DebugLogHelper::~DebugLogHelper()\n {\n-    noui_reconnect();\n-    LogInstance().DeleteCallback(m_print_connection);\n-    if (!m_found && m_match(nullptr)) {\n+    StopReceivingLog();\n+}\n+\n+void DebugLogHelper::EndAndThrowIfNotFound()\n+{\n+    StopReceivingLog();\n+    if (!m_found) {\n         throw std::runtime_error(strprintf(\"'%s' not found in debug log\\n\", m_message));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1269042432",
      "id" : 1269042432,
      "in_reply_to_id" : 1263332063,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585LpA0A",
      "original_commit_id" : "d2f46c705540c74c2b6f83a66535c3ead1cb95d4",
      "original_line" : 34,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/test/util/logging.cpp",
      "position" : 42,
      "pull_request_review_id" : 1538608183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269042432/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-20T07:25:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269042432",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`612ba17fca...55c84c2d3b`: rebase due to conflicts plus reduce the changes to `DebugLogHelper`: https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1263332063.",
      "created_at" : "2023-07-20T13:22:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#issuecomment-1643919170",
      "id" : 1643919170,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
      "node_id" : "IC_kwDOABII585h_DdC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643919170/reactions"
      },
      "updated_at" : "2023-07-20T13:22:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643919170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1269461760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269461760"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to use `std::abort()` in the destructor. Reverted to the original interface:\r\n\r\n```cpp\r\n{\r\n    ASSERT_DEBUG_LOG(\"expected message\");\r\n    produce log messages;\r\n}\r\n```\r\n\r\nThe change was necessary in order to pass the timeout to the \"final check or abort\" function which was the destructor and there is no way to pass parameters to the destructor. Anyway, now I pass the timeout to the constructor, save it in a member variable and use it in the destructor. With the wait it is now:\r\n\r\n```cpp\r\n{\r\n    ASSERT_DEBUG_LOG_WAIT(\"expected message\", 30s);\r\n    produce log messages;\r\n} // the destructor will wait 30s for the message to be logged before aborting\r\n```",
      "commit_id" : "55c84c2d3bff09784ad127aba68a166f3f36f215",
      "created_at" : "2023-07-20T13:28:10Z",
      "diff_hunk" : "@@ -16,16 +16,30 @@ DebugLogHelper::DebugLogHelper(std::string message, MatchFn match)\n     m_print_connection = LogInstance().PushBackCallback(\n         [this](const std::string& s) {\n             if (m_found) return;\n-            m_found = s.find(m_message) != std::string::npos && m_match(&s);\n+            m_found = s.find(m_message) != std::string::npos && m_match(s);\n         });\n     noui_test_redirect();\n+    m_receiving_log = true;\n }\n \n-void DebugLogHelper::check_found()\n+DebugLogHelper::~DebugLogHelper()\n {\n-    noui_reconnect();\n-    LogInstance().DeleteCallback(m_print_connection);\n-    if (!m_found && m_match(nullptr)) {\n+    StopReceivingLog();\n+}\n+\n+void DebugLogHelper::EndAndThrowIfNotFound()\n+{\n+    StopReceivingLog();\n+    if (!m_found) {\n         throw std::runtime_error(strprintf(\"'%s' not found in debug log\\n\", m_message));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1269461760",
      "id" : 1269461760,
      "in_reply_to_id" : 1263332063,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LqnMA",
      "original_commit_id" : "d2f46c705540c74c2b6f83a66535c3ead1cb95d4",
      "original_line" : 34,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/test/util/logging.cpp",
      "position" : null,
      "pull_request_review_id" : 1539268852,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269461760/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-20T13:28:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269461760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
