[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19387#discussion_r446350929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446350929"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `declval<const V&>`. Not that I expect size() to differ between const and non-const objects...",
      "commit_id" : "1d58cc7cb040a70f768b632f294db4e0797d3a34",
      "created_at" : "2020-06-26T18:43:32Z",
      "diff_hunk" : "@@ -78,8 +96,19 @@ class Span\n      * To prevent surprises, only Spans for constant value types are supported when passing in temporaries.\n      * Note that this restriction does not exist when converting arrays or other Spans (see above).\n      */\n-    template <typename V, typename std::enable_if<(std::is_const<C>::value || std::is_lvalue_reference<V>::value) && std::is_convertible<typename std::remove_pointer<decltype(std::declval<V&>().data())>::type (*)[], C (*)[]>::value && std::is_convertible<decltype(std::declval<V&>().size()), std::size_t>::value, int>::type = 0>\n-    constexpr Span(V&& v) noexcept : m_data(v.data()), m_size(v.size()) {}\n+    template <typename V>\n+    constexpr Span(V& other SPAN_ATTR_LIFETIMEBOUND,\n+        typename std::enable_if<!is_Span<V>::value &&\n+                                std::is_convertible<typename std::remove_pointer<decltype(std::declval<V&>().data())>::type (*)[], C (*)[]>::value &&\n+                                std::is_convertible<decltype(std::declval<V&>().size()), std::size_t>::value, std::nullptr_t>::type = nullptr)\n+        : m_data(other.data()), m_size(other.size()){}\n+\n+    template <typename V>\n+    constexpr Span(const V& other SPAN_ATTR_LIFETIMEBOUND,\n+        typename std::enable_if<!is_Span<V>::value &&\n+                                std::is_convertible<typename std::remove_pointer<decltype(std::declval<const V&>().data())>::type (*)[], C (*)[]>::value &&\n+                                std::is_convertible<decltype(std::declval<V&>().size()), std::size_t>::value, std::nullptr_t>::type = nullptr)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#discussion_r446350929",
      "id" : 446350929,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM1MDkyOQ==",
      "original_commit_id" : "6d47b23f79a655095e9f897e8fda550b4172dec7",
      "original_line" : 110,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/span.h",
      "position" : null,
      "pull_request_review_id" : 438518153,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19387",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-29T19:15:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446350929",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK apart from nit above.\r\n\r\nI've tested this by rebasing #13062 and #19326 on top, and compiling with Clang 10; no warnings. Adding an obvious `Span<const int> bad{std::vector<int>{}};` does produce a warning.\r\n\r\nIt does seem that no warning is produced when `MakeSpan` is used in between, and I can't get that fixed. I think that's fine, but it'd be nice to improve upon.",
      "created_at" : "2020-06-26T22:07:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#issuecomment-650424816",
      "id" : 650424816,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MDQyNDgxNg==",
      "updated_at" : "2020-06-26T22:07:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650424816",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: `[[clang::lifetimebound]]` is great! :)\r\n\r\nI think this will be useful also outside of `src/span.{cpp,h}`. What about adding it to `src/attributes.h` as `LIFETIMEBOUND`?\r\n\r\n```patch\r\ndiff --git a/src/attributes.h b/src/attributes.h\r\nindex 45099bd8b..9d5c1d44a 100644\r\n--- a/src/attributes.h\r\n+++ b/src/attributes.h\r\n@@ -19,4 +19,14 @@\r\n #  endif\r\n #endif\r\n \r\n+#if defined(__clang__)\r\n+#  if __has_attribute(lifetimebound)\r\n+#    define LIFETIMEBOUND [[clang::lifetimebound]]\r\n+#  else\r\n+#    define LIFETIMEBOUND\r\n+#  endif\r\n+#else\r\n+#  define LIFETIMEBOUND\r\n+#endif\r\n+\r\n #endif // BITCOIN_ATTRIBUTES_H\r\n```",
      "created_at" : "2020-06-28T13:02:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#issuecomment-650752959",
      "id" : 650752959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MDc1Mjk1OQ==",
      "updated_at" : "2020-06-28T13:02:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650752959",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-06-28T13:29:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#issuecomment-650758345",
      "id" : 650758345,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MDc1ODM0NQ==",
      "updated_at" : "2020-06-28T13:29:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650758345",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19387#discussion_r447150654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447150654"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed, thanks.",
      "commit_id" : "1d58cc7cb040a70f768b632f294db4e0797d3a34",
      "created_at" : "2020-06-29T17:55:38Z",
      "diff_hunk" : "@@ -78,8 +96,19 @@ class Span\n      * To prevent surprises, only Spans for constant value types are supported when passing in temporaries.\n      * Note that this restriction does not exist when converting arrays or other Spans (see above).\n      */\n-    template <typename V, typename std::enable_if<(std::is_const<C>::value || std::is_lvalue_reference<V>::value) && std::is_convertible<typename std::remove_pointer<decltype(std::declval<V&>().data())>::type (*)[], C (*)[]>::value && std::is_convertible<decltype(std::declval<V&>().size()), std::size_t>::value, int>::type = 0>\n-    constexpr Span(V&& v) noexcept : m_data(v.data()), m_size(v.size()) {}\n+    template <typename V>\n+    constexpr Span(V& other SPAN_ATTR_LIFETIMEBOUND,\n+        typename std::enable_if<!is_Span<V>::value &&\n+                                std::is_convertible<typename std::remove_pointer<decltype(std::declval<V&>().data())>::type (*)[], C (*)[]>::value &&\n+                                std::is_convertible<decltype(std::declval<V&>().size()), std::size_t>::value, std::nullptr_t>::type = nullptr)\n+        : m_data(other.data()), m_size(other.size()){}\n+\n+    template <typename V>\n+    constexpr Span(const V& other SPAN_ATTR_LIFETIMEBOUND,\n+        typename std::enable_if<!is_Span<V>::value &&\n+                                std::is_convertible<typename std::remove_pointer<decltype(std::declval<const V&>().data())>::type (*)[], C (*)[]>::value &&\n+                                std::is_convertible<decltype(std::declval<V&>().size()), std::size_t>::value, std::nullptr_t>::type = nullptr)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#discussion_r447150654",
      "id" : 447150654,
      "in_reply_to_id" : 446350929,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE1MDY1NA==",
      "original_commit_id" : "6d47b23f79a655095e9f897e8fda550b4172dec7",
      "original_line" : 110,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/span.h",
      "position" : null,
      "pull_request_review_id" : 439374571,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19387",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-29T19:15:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447150654",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated and squashed.\r\n\r\n@practicalswift I'd rather wait to add it there until there's a use for it, if that's ok. By the time we have it to use somewhere else, it may not be clang-only anymore.\r\n\r\n~~I did change it to use ```__has_cpp_attribute``` to match our existing attribute check, though.~~\r\n\r\nEdit: whoops, ```__has_cpp_attribute``` doesn't actually work here! Back to ```__has_attribute```.",
      "created_at" : "2020-06-29T17:57:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#issuecomment-651271913",
      "id" : 651271913,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MTI3MTkxMw==",
      "updated_at" : "2020-06-29T19:02:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651271913",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sorry for the pushing/rebasing noise, done now.\r\n\r\n> It does seem that no warning is produced when MakeSpan is used in between, and I can't get that fixed. I think that's fine, but it'd be nice to improve upon.\r\n\r\n@sipa It turns out that this warning _does_ work for MakeSpan, but only in c++17 mode and above:\r\n\r\n```\r\n$ clang++ spantest.cpp -o spantest -std=c++17\r\n```\r\n> spantest.cpp:10:26: warning: temporary whose address is used as value of local variable 'temp' will be destroyed at the  end of the full-expression [-Wdangling]\r\n>    auto temp = MakeSpan(std::vector<int>{1,2,3});\r\n\r\n I've gone ahead and added the annotations there as well, so they should just magically work when we switch to c++17.",
      "created_at" : "2020-06-29T19:22:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#issuecomment-651311305",
      "id" : 651311305,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MTMxMTMwNQ==",
      "updated_at" : "2020-06-29T19:22:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651311305",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> so they should just magically work when we switch to c++17.\r\n\r\nI like magic.\r\n\r\nACK 1d58cc7cb040a70f768b632f294db4e0797d3a34",
      "created_at" : "2020-07-01T04:27:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#issuecomment-652182571",
      "id" : 652182571,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjE4MjU3MQ==",
      "updated_at" : "2020-07-01T04:27:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652182571",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Instead of magic, I'd rather remove them and add the corresponding constructors from c++20 when we switched to c++17\r\n\r\nsecond-commit-only review ACK 1d58cc7cb040a70f768b632f294db4e0797d3a34",
      "created_at" : "2020-07-01T12:25:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#issuecomment-652387479",
      "id" : 652387479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjM4NzQ3OQ==",
      "updated_at" : "2020-07-01T12:25:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652387479",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19387#discussion_r448592690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19387"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448592690"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n#define ATTR_LIFETIMEBOUND [[clang::lifetimebound]]\r\n```\r\n\r\nCan this be named a bit more generic, so that it can be used in other places such as #19426 ?",
      "commit_id" : "1d58cc7cb040a70f768b632f294db4e0797d3a34",
      "created_at" : "2020-07-01T20:14:24Z",
      "diff_hunk" : "@@ -18,6 +18,16 @@\n #define ASSERT_IF_DEBUG(x)\n #endif\n \n+#if defined(__clang__)\n+#if __has_attribute(lifetimebound)\n+#define SPAN_ATTR_LIFETIMEBOUND [[clang::lifetimebound]]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#discussion_r448592690",
      "id" : 448592690,
      "line" : 23,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5MjY5MA==",
      "original_commit_id" : "1d58cc7cb040a70f768b632f294db4e0797d3a34",
      "original_line" : 23,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/span.h",
      "position" : 6,
      "pull_request_review_id" : 441167134,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19387",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-01T20:14:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448592690",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Well, no reason why we can't have both. The attribute as argument to `MakeSpan` makes sense - even if the compiler doesn't do anything useful with it - as it documents behavior to the user as well. And perhaps clang 123091137.4 will support it even in C++11 mode - who knows.",
      "created_at" : "2020-07-01T23:30:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#issuecomment-652694694",
      "id" : 652694694,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjY5NDY5NA==",
      "updated_at" : "2020-07-01T23:30:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652694694",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There are a lot more cases in the codebase where a data type stores a reference or pointer to another object provided to the constructor exist. For example:\r\n\r\n* In `src/stream.h`: `OverrideStream`, `CVectorReader`, `BitStreamReader`, `BitStreamWriter`\r\n* In `src/script/sign.h`: `MutableTransactionSignatureCreator` (#19426).\r\n* In `src/script/interpreter.h`: `GenericTransactionSignatureChecker`\r\n* In `src/serialize.h`: `Wrapper`, `Using`\r\n* In `src/wallet/rpcwallet.cpp`: `DescribeWalletAddressVisitor`\r\n* In `src/key_io.cpp`: `DestinationEncoder`\r\n* In `src/dbwrapper.h`: `CDBBatch`, `CDBIterator`\r\n* In `src/flatfile.h`: `FlatFileSeq`\r\n* In `src/hash.h`: `CHashVerifier`\r\n* In `src/miner.h`: `CBlockAssembler`\r\n* In `src/net_processing.h`: `PeerLogicValidation`\r\n* In `src/scheduler.h`: `SingleThreadedSchedulerClient`\r\n* In `src/sync.h`: `CSemaphoreGrant`\r\n* In `src/validation.h`: `CScriptCheck`, `ChainstateManager`,  `CChainState`\r\n\r\nSeveral of these accept const lvalue references, and store them, and are at risk already. Others take in a mutable lvalue reference or pointers, but would make sense to support rvalue/universal references as input (so that temporaries can be passed to it). In all those cases, having a `lifetimebound` attribute would be useful.\r\n\r\nSo I think that means we should just put it in attributes.h. There is plenty of potential for it.",
      "created_at" : "2020-07-02T00:19:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19387#issuecomment-652708587",
      "id" : 652708587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19387",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjcwODU4Nw==",
      "updated_at" : "2020-07-02T00:20:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652708587",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
