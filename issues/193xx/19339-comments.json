[
   {
      "author_association" : "MEMBER",
      "body" : "Absurd fees aren't even close to the only policy being enforced in ATMP... It doesn't make sense to split just this one out.",
      "created_at" : "2020-06-20T19:39:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647037491",
      "id" : 647037491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzAzNzQ5MQ==",
      "updated_at" : "2020-06-20T19:39:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647037491",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Absurd fees aren't even close to the only policy being enforced in ATMP... It doesn't make sense to split just this one out.\r\n\r\n@luke-jr Sorry ð   I'm a beginner so I don't know very much. Do you mean that there are other things that should be taken out too, or that it's not worth doing so at all?",
      "created_at" : "2020-06-20T19:42:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647037802",
      "id" : 647037802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzAzNzgwMg==",
      "updated_at" : "2020-06-20T19:42:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647037802",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It might be worth doing, but I'm not sure if the costs outweigh the benefits, and if/when done, it should be splitting all policy from all consensus checks, not just one policy from the rest.",
      "created_at" : "2020-06-20T19:45:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647038107",
      "id" : 647038107,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzAzODEwNw==",
      "updated_at" : "2020-06-20T19:45:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647038107",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Check out https://github.com/bitcoin/bitcoin/compare/0.20...luke-jr:sendraw_force-0.20+knots#diff-24efdb00bfbe56b140fb006b562cc70bR578\r\n\r\nThis changes all the policy checks to conditionals, while leaving the non-policy checks as strictly enforced. So a split would be on the same criteria. Note that reordering stuff may not always be a good idea, however...",
      "created_at" : "2020-06-20T19:50:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647038586",
      "id" : 647038586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzAzODU4Ng==",
      "updated_at" : "2020-06-20T19:50:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647038586",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19791 ([net processing] Move Misbehaving() to PeerManager by jnewbery)\n* #19753 (p2p: don't add AlreadyHave transactions to recentRejects by troygiorshev)\n* #19645 (Allow updating mempool-txn with cheaper witnesses by ariard)\n* #19610 (p2p: refactor AlreadyHave(), CInv::type, INV/TX processing by jonatack)\n* #19498 (Tidy up ProcessOrphanTx by jnewbery)\n* #19488 (Refactor mempool.dat to be extensible, and store missing info by luke-jr)\n* #19306 (refactor: Replace RecursiveMutex with Mutex in CTxMemPool by hebasto)\n* #19093 (RPC: Return transaction fee from testmempoolaccept by rajarshimaitra)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-06-20T19:54:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647038926",
      "id" : 647038926,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzAzODkyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T17:53:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647038926",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@luke-jr okay, I see what you're saying. Agree that refactoring consensus/policy should be as a whole + may or may not be worth it. I could be completely mistaken, but I thought that this was more... a user's preference rather than node's fee policy, since it's pretty much only used in RPC and wallet. It seems to be set to 0 in other places?",
      "created_at" : "2020-06-20T19:57:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647039237",
      "id" : 647039237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzAzOTIzNw==",
      "updated_at" : "2020-06-20T19:57:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647039237",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think you're correct in the abstract on this one @gzhao408, but concretely this behavior is probably desirable as it's a belt-and-suspenders check of preventing things getting into the mempool that are *almost certainly* a mistake.\r\n\r\nEven though mining/accepting these things should be done, and our node shouldn't really do 'deep transaction inspection', the case of absurd fees is pretty clearly accidental, so we add this redundant check (which can be disabled afaict via `allowhighfees`) even though clients should ultimately be responsible for this and not *rely* on absurd fees being rejected.\r\n\r\nI think if you wanted to move the logic somewhere else (e.g., to just RPC layer) you could do that too, but the most convenient place for that logic is in ATMP as we load the required context to check fees there already.\r\n\r\nClient side absurd fee problems should generally improve post-taproot & with the segwit fixes as signers should be more aware of how much fees their txn is spending as they can be made aware of all the inputs values they are signing for.",
      "created_at" : "2020-06-20T20:59:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647044823",
      "id" : 647044823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzA0NDgyMw==",
      "updated_at" : "2020-06-20T20:59:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647044823",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@gzhao408 You may be right - it's a good point that we don't enforce it on other stuff. Maybe we should really be checking it before even calling ATMP.\r\n\r\n@JeremyRubin This is needed for GUI transactions too, at least.",
      "created_at" : "2020-06-20T21:21:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647046700",
      "id" : 647046700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzA0NjcwMA==",
      "updated_at" : "2020-06-20T21:21:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647046700",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "One approach might be to introduce a redundant layer of logic to all the places we actually want to perform the absurdfee check, and then in a follow up PR (or commit if you want to do it in one), remove the now redundant ATMP check. I agree that ATMP is later than ideal for checking this property.",
      "created_at" : "2020-06-20T21:31:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647047694",
      "id" : 647047694,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzA0NzY5NA==",
      "updated_at" : "2020-06-20T21:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647047694",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I agree with removing the absurd fee check from ATMP, but we should still have it somewhere instead of removing it completely. Since it only is used for transactions sent by the node, the ideal place to move this to would be `BroadcastTransaction` in `src/node/transaction.cpp`. The RPC and wallet (GUI goes through the wallet) both use `BroadcastTransaction`.",
      "created_at" : "2020-06-20T22:08:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647050678",
      "id" : 647050678,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzA1MDY3OA==",
      "updated_at" : "2020-06-20T22:08:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647050678",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK! This isn't policy, it's wallet/RPC behaviour (and as such, belongs in the wallet/RPC).",
      "created_at" : "2020-06-22T23:08:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647813137",
      "id" : 647813137,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzgxMzEzNw==",
      "updated_at" : "2020-06-22T23:08:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647813137",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2020-06-23T00:49:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-647841346",
      "id" : 647841346,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Nzg0MTM0Ng==",
      "updated_at" : "2020-06-23T00:49:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647841346",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks everyone :) working on it this week, sorry for long silence. Going for @JeremyRubin's advice to (1) add a separate absurdfee check in the places where a client needs it, then (2) remove it from ATMP. It's somewhat redundant (esp with #19093 ...?) but not dangerous or expensive. Hopefully this approach makes sense.",
      "created_at" : "2020-07-01T05:17:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-652196516",
      "id" : 652196516,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjE5NjUxNg==",
      "updated_at" : "2020-07-01T05:17:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652196516",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK,\r\n\r\nThis check should be part of a consistent wallet _tx-sanitization_ policy, i.e a set of checks protecting users funds against harmful actions before authorizing spend. Some signers already do this like [Coincard](https://ckbunker.com/policy.html). We could envision Core implementing the same kind of logic behind ScriptPubKeyMan::SignTransaction, with user settings. Now do this policy should apply to transaction flowing through our node but not originating from our wallet (`sendrawtransaction`) ? That's harder to decide on because in some cases an absurd fee may have a game-theory rational (a LN justice transaction burning everything in fees before CSV delay expiration). \r\n\r\nOverall, absurd fee protection is already enforced on its own in `CreateTransaction` (grep `m_default_max_tx_fee`) but blindly removing from mempool checks would be a behavior change as it won't be applied anymore to `sendrawtransaction`/GUI transactions. So going forward with this PR check should be moved inside `BroadcastTransaction` to conserve behavior IMO.\r\n\r\nWith regards to untangling policy/consensus checks I think that should be a distinct conversation, order of them matter for anti-DoS reasons. ",
      "created_at" : "2020-07-24T15:11:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-663587420",
      "id" : 663587420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzU4NzQyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-24T15:11:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663587420",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This builds on #19093. If that one is merged first then Iâll rebase this; if this one gets more review attention, @rajarshimaitra is listed as the author of the base commit here so hopefully thatâs ok. \r\n\r\nPer yâallâs wonderful advice, I moved the absurd fee checking into `BroadcastTransaction` and as an extra step in `testmempoolaccept`. Calling this a `TransactionError::MAX_FEE_EXCEEDED` seemed more appropriate, since thatâs what the wallet uses. I still donât think itâs policy since itâs empty for transactions not originating from the nodeâs own wallet. Whether it _should_ be policy would a separate and interesting discussion ð .\r\n\r\nThereâs a couple intermediate stages to (1) test_accept and check fee before submitting (https://github.com/bitcoin/bitcoin/pull/19339/commits/7dc55a5f4c2bc3ba3c301338ce75b25412365dd7) and (2) keep absurd fee but ignore it in validation (https://github.com/bitcoin/bitcoin/pull/19339/commits/40703b1d5185cd26626d9da1fb76c3babdcdd550) to show that the behavior is the same.",
      "created_at" : "2020-07-25T20:48:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-663904504",
      "id" : 663904504,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzkwNDUwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-25T20:48:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663904504",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Approach ACK. This looks great. Thanks Gloria!",
      "created_at" : "2020-07-27T10:58:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-664325546",
      "id" : 664325546,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDMyNTU0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T10:58:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664325546",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased and refactored some of the commits to make it cleaner + easier to review in preparation for PR Review Club ([Notes](https://bitcoincore.reviews/19339)). Now's a perfect time to review if anyone has time :) thanks everybody!\r\n\r\n",
      "created_at" : "2020-08-16T16:51:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-674549975",
      "id" : 674549975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDU0OTk3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-19T18:57:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674549975",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r473232345"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473232345"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Instead of calling ATMP twice, can we trust the `test_accepted` value from the first call and skip redundant checks in the second call? Or maybe to put it another way, if all we need is the fee here, can we compute that quickly and test it against `max_tx_fee` before checking anything else about the tx? I think if that's easy enough to do, you don't have to add an argument to ATMP. But I guess you'd still have to remove `nAbsurdFee` everywhere it's called.",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-19T18:19:12Z",
      "diff_hunk" : "@@ -36,10 +36,19 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n     if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool. Submit it.\n+        // Transaction is not already in the mempool.\n         TxValidationState state;\n+        CAmount fee;\n+        bool test_accepted = AcceptToMemoryPool(*node.mempool, state, std::move(tx),\n+                nullptr /* plTxnReplaced */, false /* bypass_limits */, /* test_accept */ true, &fee);\n+        if (test_accepted) {\n+            if (max_tx_fee && fee > max_tx_fee) {\n+                return TransactionError::MAX_FEE_EXCEEDED;\n+            }\n+        }\n+        // Transaction fee is acceptable. Submit the transaction.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r473232345",
      "id" : 473232345,
      "line" : 48,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzMjM0NQ==",
      "original_commit_id" : "67bb7148ad4142611ab132047548f96dd3d59428",
      "original_line" : 48,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : 16,
      "pull_request_review_id" : 470724834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473232345",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r473247904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473247904"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should the filename have the PR number? (19339) I didn't know about this convention yet, just looked it up: https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#release-notes",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-19T18:48:24Z",
      "diff_hunk" : "@@ -0,0 +1,7 @@\n+RPC changes",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r473247904",
      "id" : 473247904,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI0NzkwNA==",
      "original_commit_id" : "67bb7148ad4142611ab132047548f96dd3d59428",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "doc/release-notes-19093.md",
      "position" : null,
      "pull_request_review_id" : 470724834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473247904",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475088750"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475088750"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Instead of calling ATMP twice, can we trust the `test_accepted` value from the first call and skip redundant checks in the second call?\r\n\r\nFrom what I understand, we do this somewhat (i.e. for expensive parts of validation) - the signature cache and script cache are filled in `PolicyScriptChecks` and `ConsensusScriptChecks` during the test accept and thus those parts don't need to be redone the second time around.\r\n\r\n> if all we need is the fee here, can we compute that quickly and test it against `max_tx_fee` before checking anything else about the tx?\r\n\r\nI definitely thought about doing it this way! Seemed simple enough, but without any tx sanitization (`PreChecks`) or state to go off of, it started getting really complicated ð . Test-accepting it through ATMP did exactly what I needed, and we kind of get to do it for... I don't want to say \"free,\" but it's way cheaper than 2x work.",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-22T13:08:16Z",
      "diff_hunk" : "@@ -36,10 +36,19 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n     if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool. Submit it.\n+        // Transaction is not already in the mempool.\n         TxValidationState state;\n+        CAmount fee;\n+        bool test_accepted = AcceptToMemoryPool(*node.mempool, state, std::move(tx),\n+                nullptr /* plTxnReplaced */, false /* bypass_limits */, /* test_accept */ true, &fee);\n+        if (test_accepted) {\n+            if (max_tx_fee && fee > max_tx_fee) {\n+                return TransactionError::MAX_FEE_EXCEEDED;\n+            }\n+        }\n+        // Transaction fee is acceptable. Submit the transaction.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475088750",
      "id" : 475088750,
      "in_reply_to_id" : 473232345,
      "line" : 48,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4ODc1MA==",
      "original_commit_id" : "67bb7148ad4142611ab132047548f96dd3d59428",
      "original_line" : 48,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : 16,
      "pull_request_review_id" : 472925035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475088750",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475088881"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475088881"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "FYI @rajarshimaitra",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-22T13:10:01Z",
      "diff_hunk" : "@@ -0,0 +1,7 @@\n+RPC changes",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475088881",
      "id" : 475088881,
      "in_reply_to_id" : 473247904,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA4ODg4MQ==",
      "original_commit_id" : "67bb7148ad4142611ab132047548f96dd3d59428",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "doc/release-notes-19093.md",
      "position" : null,
      "pull_request_review_id" : 472925143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475088881",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475093378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475093378"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've made a [branch](https://github.com/gzhao408/bitcoin/commit/483cc24a2923514a35f83682822aa29265c61555) that adds logging to the signature and script caches. Running the truncated version of rpc_rawtransaction.py shows how much reuse we get. Here's a sample of a `sendrawtransaction` which does the 2 ATMPs:\r\n\r\n```\r\n node0 2020-08-22T13:50:00.085822Z [httpworker.1] @@@ In BroadcastTransaction() \r\n node0 2020-08-22T13:50:00.085883Z [httpworker.1] @@@ Calling ATMP with testaccept=1 ! \r\n node0 2020-08-22T13:50:00.086011Z [httpworker.1] @@@ Calling PolicyScriptChecks! \r\n node0 2020-08-22T13:50:00.086049Z [httpworker.1] @@@ Verifying Signature \r\n node0 2020-08-22T13:50:00.086674Z [httpworker.1] @@@ Adding entry to Signature Cache! \r\n node0 2020-08-22T13:50:00.086740Z [httpworker.1] @@@ Calling ConsensusScriptChecks! \r\n node0 2020-08-22T13:50:00.086785Z [httpworker.1] @@@ Verifying Signature \r\n node0 2020-08-22T13:50:00.086830Z [httpworker.1] @@@ Signature Cache already filled! \r\n node0 2020-08-22T13:50:00.086856Z [httpworker.1] @@@ Adding entry to Script Execution cache! \r\n node0 2020-08-22T13:50:00.086890Z [httpworker.1] @@@ Accepted, checking max fee \r\n node0 2020-08-22T13:50:00.086917Z [httpworker.1] @@@ Calling ATMP with testaccept=0 ! \r\n node0 2020-08-22T13:50:00.086992Z [httpworker.1] @@@ Calling PolicyScriptChecks! \r\n node0 2020-08-22T13:50:00.087023Z [httpworker.1] @@@ Verifying Signature \r\n node0 2020-08-22T13:50:00.087067Z [httpworker.1] @@@ Signature Cache already filled! \r\n node0 2020-08-22T13:50:00.087094Z [httpworker.1] @@@ Calling ConsensusScriptChecks! \r\n node0 2020-08-22T13:50:00.087119Z [httpworker.1] @@@ Script Execution cache is already filled! \r\n```",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-22T13:53:04Z",
      "diff_hunk" : "@@ -36,10 +36,19 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n     if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool. Submit it.\n+        // Transaction is not already in the mempool.\n         TxValidationState state;\n+        CAmount fee;\n+        bool test_accepted = AcceptToMemoryPool(*node.mempool, state, std::move(tx),\n+                nullptr /* plTxnReplaced */, false /* bypass_limits */, /* test_accept */ true, &fee);\n+        if (test_accepted) {\n+            if (max_tx_fee && fee > max_tx_fee) {\n+                return TransactionError::MAX_FEE_EXCEEDED;\n+            }\n+        }\n+        // Transaction fee is acceptable. Submit the transaction.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475093378",
      "id" : 475093378,
      "in_reply_to_id" : 473232345,
      "line" : 48,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5MzM3OA==",
      "original_commit_id" : "67bb7148ad4142611ab132047548f96dd3d59428",
      "original_line" : 48,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : 16,
      "pull_request_review_id" : 472928071,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475093378",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK, Approach ACK, unit tests + all updated functional tests pass locally\r\n\r\nI think the discussion of \"what are the performance implications of calling ATMP twice\" is very interesting. I looked up where `BroadcastTransaction` could be called, and here's what I found:\r\n\r\n- `sendrawtransaction` RPC\r\n- `SubmitMemoryPoolAndRelay` in the wallet\r\n- `PSBTOperationsDialog` in the UI\r\n\r\nIn particular, I'm guessing `BroadcastTransaction` calls aren't too frequent (e.g. compared to relaying transactions in the P2P network), so the overhead of calling ATMP twice (especially since @gzhao408 showed that many of the verification results are cached) is OK.\r\n\r\n### Follow-ups for review club discussion:\r\n\r\n#### What would be the tradeoffs / considerations involved with either of these alternative approaches?\r\n\r\n1. Replace the `nAbsurdFee` parameter with some sort of generic `clientSafetyChecks` object that ATMP can call without knowing the client-specific details\r\n\r\n2. Split up ATMP into two parts: (i) `TestForMemoryPool` performs all checks and returns a fee together with some context, (ii) `AddToMemoryPool` takes the context and finishes the process. This way, we can remove the `test_accept` parameter. The `testmempoolaccept` RPC could just call `TestForMemoryPool`, and then `sendrawtransaction` could do something like this:\r\n\r\n```\r\ncontext = TestForMemoryPool(...);\r\nif (max_tx_fee && context.fee > max_tx_fee) {\r\n\treturn TransactionError::MAX_FEE_EXCEEDED;\r\n}\r\n\r\nif (!AddToMemoryPool(*node.mempool, context, ...)) {\r\n\t// return error result\r\n}\r\n```\r\n\r\n#### How will this change interact with taproot?\r\n\r\nGiven the \"Client side absurd fee problems should generally improve post-taproot\" comment above, will this code need to change again soon, or will \"post-taproot\" have multiple code paths, of which this is one of them?",
      "created_at" : "2020-08-22T18:12:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-678673676",
      "id" : 678673676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODY3MzY3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-22T18:12:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678673676",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the review @robot-dreams :)\r\n> In particular, I'm guessing `BroadcastTransaction` calls aren't too frequent (e.g. compared to relaying transactions in the P2P network)\r\n\r\nNice observation; I'd like to highlight that `BroadcastTransaction` is used for transactions coming from _clients_ as opposed to peers. Even if the slowdown were significant, it's very different from an inefficiency that may be exploited by random network peers.\r\n\r\n> Replace the `nAbsurdFee` parameter with some sort of generic `clientSafetyChecks` object that ATMP can call without knowing the client-specific details\r\n\r\nThe idea here is that we want to separate client-specific details from ATMP. In general, the validation result returned by ATMP shouldn't depend on which client submitted it (my opinion).\r\n\r\n> Split up ATMP into two parts: (i) TestForMemoryPool performs all checks and returns a fee together with some context, (ii) AddToMemoryPool takes the context and finishes the process.\r\n\r\nI'm not quite sure I fully understand this idea, but it seems pretty similar to what happens right now in ATMP. Most of it can be seen in [`AcceptSingleTransaction`](https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L1030) which has 4 components: the 3 `*Checks` (validation and fill in the fee), and `Finalize` (try to add it to the mempool). A test-accept returns before `Finalize`; a \"real\" accept runs through everything (and uses what's cached if possible). Other than repeating checks (which is the safe thing to do), this seems equivalent to what you're suggesting.",
      "created_at" : "2020-08-23T19:11:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-678812569",
      "id" : 678812569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODgxMjU2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-23T19:19:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678812569",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475546809"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475546809"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Both this ATMP call and the one below should have their `std::move(tx)` argument changed to `tx`. In general, you should never use a variable after it's been used with `std::move` in a function call, since it might have been moved away. In this case, if `tx` has been moved from, it'll be null, and any attempt to dereference it will segfault.\r\n\r\nHowever, because ATMP takes a _const_ reference to `CTransactionRef`, it can't be moved away from, so if ATMP wants to retain shared ownership of the transaction, it must copy rather than move to the new shared_ptr. That means that technically it is safe to use `tx` after this call.\r\n\r\nLet's just make it explicit though: ATMP takes a const ref and has to copy if it wants to retain shared ownership, so just pass it `tx`.\r\n\r\nSee R30, R34, R35 and R36 here: http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#r30-take-smart-pointers-as-parameters-only-to-explicitly-express-lifetime-semantics for more background on passing raw/smart pointers.",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-24T11:57:05Z",
      "diff_hunk" : "@@ -36,10 +36,19 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n     if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool. Submit it.\n+        // Transaction is not already in the mempool.\n         TxValidationState state;\n+        CAmount fee;\n+        bool test_accepted = AcceptToMemoryPool(*node.mempool, state, std::move(tx),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475546809",
      "id" : 475546809,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0NjgwOQ==",
      "original_commit_id" : "67bb7148ad4142611ab132047548f96dd3d59428",
      "original_line" : 42,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 473395169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475546809",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "In the last commit log, there's no need to state which commit hash the commit was cherry-picked from.",
      "created_at" : "2020-08-24T12:04:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-679085763",
      "id" : 679085763,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTA4NTc2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T12:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679085763",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475693119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475693119"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks for noting this and posting the link, @jnewbery ! After looking into this, I have two follow-up questions for you if that's OK:\r\n\r\n#### Question 1 (historical context)\r\n\r\nPreviously, this call always used `std::move(tx)` because `tx` did not appear later in the function. However, use of `tx` after `move` appeared in c7eb6b4f1fe5bd76388a023529977674534334a7, which was merged as part of #18044. Do you happen to have any ideas about why it wasn't a concern then?\r\n\r\n#### Question 2 (C++ guidelines)\r\n\r\nThe linked guidelines mention the `const shared_ptr<widget>&` case, but not the `const shared_ptr<widget>` case that's used in `BroadcastTransaction`:\r\n\r\n<img width=\"813\" alt=\"guidelines\" src=\"https://user-images.githubusercontent.com/4276679/91061181-b88e7400-e5e0-11ea-8c86-1e50908c689e.png\">\r\n\r\nDo you know if we should think of the `const shared_ptr<widget>` case any differently?",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-24T15:18:10Z",
      "diff_hunk" : "@@ -36,10 +36,19 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n     if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool. Submit it.\n+        // Transaction is not already in the mempool.\n         TxValidationState state;\n+        CAmount fee;\n+        bool test_accepted = AcceptToMemoryPool(*node.mempool, state, std::move(tx),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475693119",
      "id" : 475693119,
      "in_reply_to_id" : 475546809,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5MzExOQ==",
      "original_commit_id" : "67bb7148ad4142611ab132047548f96dd3d59428",
      "original_line" : 42,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 473603533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475693119",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@gzhao408 I did some cleanup and pushed it to https://github.com/robot-dreams/bitcoin/commits/mempool-remove-absurdfee ; feel free to grab any of the updated commits if you'd find them helpful, but of course no pressure to do so!\r\n\r\n- Rebase and fix merge conflict\r\n- Change `std::move(tx)` to `tx`\r\n- Change PR number in release notes\r\n- Change release notes about `testmempoolaccept` from \"if transaction is accepted\" to \"if transaction **would be** accepted\"\r\n- Fix typo in commit message (udpate -> update)\r\n- Remove \"cherry-picked from\" from commit message",
      "created_at" : "2020-08-24T15:57:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-679213758",
      "id" : 679213758,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTIxMzc1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T15:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679213758",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475759196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475759196"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> However, use of tx after move appeared in c7eb6b4, which was merged as part of #18044. Do you happen to have any ideas about why it wasn't a concern then?\r\n\r\nBecause it was missed in review. In this case, it's not going to cause any issues because `tx` isn't actually moved from, but we should still never be doing anything with a variable after it's had `std::move` used on it.\r\n\r\n> Do you know if we should think of the const shared_ptr<widget> case any differently?\r\n\r\nI don't think there's any good reason to pass a shared_ptr by const value. I may be mistaken here, but I think that means you need to increment the refcount when you enter the function (because the parameter is copy-constructed from the argument), and if you want to retain the refcount, you need to increment it again (because you can't move from the const parameter). Move semantics with smart pointers is a deep rabbit hole. There's lots more here: https://herbsutter.com/2013/06/05/gotw-91-solution-smart-pointer-parameters/ and http://scottmeyers.blogspot.com/2014/07/should-move-only-types-ever-be-passed.html.",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-24T16:57:16Z",
      "diff_hunk" : "@@ -36,10 +36,19 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n     if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool. Submit it.\n+        // Transaction is not already in the mempool.\n         TxValidationState state;\n+        CAmount fee;\n+        bool test_accepted = AcceptToMemoryPool(*node.mempool, state, std::move(tx),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475759196",
      "id" : 475759196,
      "in_reply_to_id" : 475546809,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc1OTE5Ng==",
      "original_commit_id" : "67bb7148ad4142611ab132047548f96dd3d59428",
      "original_line" : 42,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 473684990,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475759196",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475908814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475908814"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If you use a global namespace constant for the error message it would make sense to share it across files as well.   Otherwise local variables would make more sense to me. I think c763343c0064fe88aeef15eecd6273ccf2746fcc could also just be a clean scripted-diff without the need to introduce the constants.",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-24T21:37:32Z",
      "diff_hunk" : "@@ -21,6 +21,7 @@\n import os\n \n MAX_BIP125_RBF_SEQUENCE = 0xfffffffd\n+MAX_FEE_EXCEEDED_MSG = 'Fee exceeds maximum configured by user (eg -maxtxfee, maxfeerate)'",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475908814",
      "id" : 475908814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwODgxNA==",
      "original_commit_id" : "c763343c0064fe88aeef15eecd6273ccf2746fcc",
      "original_line" : 24,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/rpc_psbt.py",
      "position" : null,
      "pull_request_review_id" : 473874624,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475908814",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475913985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475913985"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "IMO you don't need the intermediate return value and can just move the call into the if() but if you want to keep it:\r\n```suggestion\r\n        const bool test_accepted = AcceptToMemoryPool(*node.mempool, state, std::move(tx),\r\n```",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-24T21:49:28Z",
      "diff_hunk" : "@@ -36,8 +36,17 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n     if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool. Submit it.\n+        // Transaction is not already in the mempool.\n         TxValidationState state;\n+        CAmount fee;\n+        bool test_accepted = AcceptToMemoryPool(*node.mempool, state, std::move(tx),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r475913985",
      "id" : 475913985,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkxMzk4NQ==",
      "original_commit_id" : "a872d8d31bcc2dd1089cb9fd68a48b3d798bd59b",
      "original_line" : 42,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 473874624,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475913985",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r476501583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476501583"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "you're totally right, I changed it to a scripted diff",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-25T14:39:23Z",
      "diff_hunk" : "@@ -21,6 +21,7 @@\n import os\n \n MAX_BIP125_RBF_SEQUENCE = 0xfffffffd\n+MAX_FEE_EXCEEDED_MSG = 'Fee exceeds maximum configured by user (eg -maxtxfee, maxfeerate)'",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r476501583",
      "id" : 476501583,
      "in_reply_to_id" : 475908814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwMTU4Mw==",
      "original_commit_id" : "c763343c0064fe88aeef15eecd6273ccf2746fcc",
      "original_line" : 24,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/rpc_psbt.py",
      "position" : null,
      "pull_request_review_id" : 474549567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476501583",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r476501773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476501773"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "moved it into the if(), thanks!",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-25T14:39:37Z",
      "diff_hunk" : "@@ -36,8 +36,17 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n     if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool. Submit it.\n+        // Transaction is not already in the mempool.\n         TxValidationState state;\n+        CAmount fee;\n+        bool test_accepted = AcceptToMemoryPool(*node.mempool, state, std::move(tx),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r476501773",
      "id" : 476501773,
      "in_reply_to_id" : 475913985,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwMTc3Mw==",
      "original_commit_id" : "a872d8d31bcc2dd1089cb9fd68a48b3d798bd59b",
      "original_line" : 42,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 474549807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476501773",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r476502050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476502050"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done! thanks for the explanation @jnewbery :) ",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-25T14:39:56Z",
      "diff_hunk" : "@@ -36,10 +36,19 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n     if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool. Submit it.\n+        // Transaction is not already in the mempool.\n         TxValidationState state;\n+        CAmount fee;\n+        bool test_accepted = AcceptToMemoryPool(*node.mempool, state, std::move(tx),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r476502050",
      "id" : 476502050,
      "in_reply_to_id" : 475546809,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwMjA1MA==",
      "original_commit_id" : "67bb7148ad4142611ab132047548f96dd3d59428",
      "original_line" : 42,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 474550100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T16:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476502050",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased and addressed comments. Apologies, I'm wrestling with the scripted-diff linter :'( \r\n\r\nI also edited the first commit so that I'm only picking the ATMP changes in #19093 (which is more RPC-focused) - these two PRs are now uncoupled.",
      "created_at" : "2020-08-25T16:30:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-680133532",
      "id" : 680133532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDEzMzUzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T16:30:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680133532",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Rebased and addressed comments. Apologies, I'm wrestling with the scripted-diff linter :'(\r\n\r\nThe issue is GNU vs BSD sed. I'm assuming you are on macOS (BSD sed), and you've written a command that is incompatible with GNU sed (used by Travis). The fix here is to drop the '' after `-i`, which is the part that's incompatible. Unfortunately portability when using `-i` isn't trivial.\r\n\r\nWhen testing `sed` commands on macOS I'd suggest brew installing and using [`gsed`](https://formulae.brew.sh/formula/gnu-sed).",
      "created_at" : "2020-08-26T02:26:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-680422284",
      "id" : 680422284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDQyMjI4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-26T02:26:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680422284",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The issue is GNU vs BSD sed. I'm assuming you are on macOS (BSD sed), and you've written a command that is incompatible with GNU sed (used by Travis). The fix here is to drop the '' after -i, which is the part that's incompatible. Unfortunately portability when using -i isn't trivial.\r\n\r\nThis issue has tripped lots of people up (including me). Perhaps `commit-script-check.sh` should detect if a scripted diff uses the BSD sed syntax and print a more helpful error message.",
      "created_at" : "2020-08-26T07:24:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#issuecomment-680708152",
      "id" : 680708152,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDcwODE1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-26T07:24:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680708152",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r477388457"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477388457"
         }
      },
      "author_association" : "MEMBER",
      "body" : "baab966 suggestion, as `CAmount` is of type `int64_t` per `src/amount.h`\r\n```suggestion\r\n        CAmount fee{0};\r\n```",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-26T15:25:43Z",
      "diff_hunk" : "@@ -36,10 +36,18 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n     if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool. Submit it.\n+        // Transaction is not already in the mempool.\n         TxValidationState state;\n-        if (!AcceptToMemoryPool(*node.mempool, state, std::move(tx),\n-                nullptr /* plTxnReplaced */, false /* bypass_limits */, max_tx_fee)) {\n+        CAmount fee;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r477388457",
      "id" : 477388457,
      "line" : 41,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM4ODQ1Nw==",
      "original_commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "original_line" : 41,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : 9,
      "pull_request_review_id" : 475603323,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-26T16:05:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477388457",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r477388789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477388789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "bcb85f4\r\n```suggestion\r\n    CAmount fee{0}; // To return transaction fee from AcceptToMemoryPool\r\n```",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-26T15:26:08Z",
      "diff_hunk" : "@@ -924,10 +924,20 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n \n     TxValidationState state;\n     bool test_accept_res;\n+    CAmount fee; // To return transaction fee from AcceptToMemoryPool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r477388789",
      "id" : 477388789,
      "line" : 927,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM4ODc4OQ==",
      "original_commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "original_line" : 927,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 4,
      "pull_request_review_id" : 475603323,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-26T16:05:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477388789",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r477393731"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477393731"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d81090e8a `s/eg/e.g./` or\r\n```diff\r\n- return Untranslated(\"Fee exceeds maximum configured by user (eg -maxtxfee, maxfeerate)\");\r\n+ return Untranslated(\"Fee exceeds maximum configured by user in -maxtxfee or maxfeerate\");\r\n```\r\n",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-26T15:32:56Z",
      "diff_hunk" : "@@ -30,7 +30,7 @@ bilingual_str TransactionErrorString(const TransactionError err)\n         case TransactionError::SIGHASH_MISMATCH:\n             return Untranslated(\"Specified sighash value does not match value stored in PSBT\");\n         case TransactionError::MAX_FEE_EXCEEDED:\n-            return Untranslated(\"Fee exceeds maximum configured by -maxtxfee\");\n+            return Untranslated(\"Fee exceeds maximum configured by user (eg -maxtxfee, maxfeerate)\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r477393731",
      "id" : 477393731,
      "line" : 33,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5MzczMQ==",
      "original_commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "original_line" : 33,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/error.cpp",
      "position" : 5,
      "pull_request_review_id" : 475603323,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-26T16:05:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477393731",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r477405130"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477405130"
         }
      },
      "author_association" : "MEMBER",
      "body" : "a5b33914\r\n\r\n- Should these keys also be returned with relevant values for the happy case as well, and not only if fee exceeds maxfee? (I suspect they should.)\r\n\r\n- These additions would need to be documented in the `RPCHelpMan` help a few lines above, as well as with an `Updated RPCs` release note.",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-26T15:48:40Z",
      "diff_hunk" : "@@ -924,10 +924,20 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n \n     TxValidationState state;\n     bool test_accept_res;\n+    CAmount fee; // To return transaction fee from AcceptToMemoryPool\n     {\n         LOCK(cs_main);\n         test_accept_res = AcceptToMemoryPool(mempool, state, std::move(tx),\n-            nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, /* test_accept */ true);\n+            nullptr /* plTxnReplaced */, false /* bypass_limits */, /* test_accept */ true, &fee);\n+    }\n+\n+    // Check that fee does not exceed maxfee\n+    if (test_accept_res && max_raw_tx_fee && fee > max_raw_tx_fee) {\n+        result_0.pushKV(\"allowed\", false);\n+        result_0.pushKV(\"reject-reason\", \"max-fee-exceeded\");\n+        result_0.pushKV(\"fee\", fee);\n+        result.push_back(std::move(result_0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r477405130",
      "id" : 477405130,
      "line" : 939,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQwNTEzMA==",
      "original_commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "original_line" : 939,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 17,
      "pull_request_review_id" : 475603323,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-26T16:05:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477405130",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r477422699"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477422699"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, I was confused by the early and duplicate `result.push_back(std::move(result_0));` and `return`, which I wasn't expecting. Perhaps use an `else` instead.\r\n\r\nConsider harmonising the outputs to both return the fee or neither, and if `fee` is added, then update the help + write a release note + add `fee` test cases.",
      "commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "created_at" : "2020-08-26T16:14:56Z",
      "diff_hunk" : "@@ -924,10 +924,20 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n \n     TxValidationState state;\n     bool test_accept_res;\n+    CAmount fee; // To return transaction fee from AcceptToMemoryPool\n     {\n         LOCK(cs_main);\n         test_accept_res = AcceptToMemoryPool(mempool, state, std::move(tx),\n-            nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, /* test_accept */ true);\n+            nullptr /* plTxnReplaced */, false /* bypass_limits */, /* test_accept */ true, &fee);\n+    }\n+\n+    // Check that fee does not exceed maxfee\n+    if (test_accept_res && max_raw_tx_fee && fee > max_raw_tx_fee) {\n+        result_0.pushKV(\"allowed\", false);\n+        result_0.pushKV(\"reject-reason\", \"max-fee-exceeded\");\n+        result_0.pushKV(\"fee\", fee);\n+        result.push_back(std::move(result_0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19339#discussion_r477422699",
      "id" : 477422699,
      "in_reply_to_id" : 477405130,
      "line" : 939,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyMjY5OQ==",
      "original_commit_id" : "330b0ba1122ab5d8e385d371e1455e3ec0f95dee",
      "original_line" : 939,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 17,
      "pull_request_review_id" : 475647928,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-26T16:21:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477422699",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
