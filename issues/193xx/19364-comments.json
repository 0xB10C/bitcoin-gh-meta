[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19374 (refactor: Drop g_orphan_list global by hebasto)\n* #19316 ([net] Cleanup logic around connection types by amitiuttarwar)\n* #19315 ([tests] Allow outbound & block-relay-only connections in functional tests. by amitiuttarwar)\n* #19306 (refactor: Replace RecursiveMutex with Mutex in CTxMemPool by hebasto)\n* #18044 (Use wtxid for transaction relay by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-06-23T19:34:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-648374732",
      "id" : 648374732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0ODM3NDczMg==",
      "updated_at" : "2020-06-29T05:02:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648374732",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r444741653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444741653"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wondering if we should clarify that these tasks are expected to be limited to 1 second or something (perhaps \"lightweight tasks\")?\r\nJust so that future devs don't tempt to put any heavy logic in here.",
      "commit_id" : "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
      "created_at" : "2020-06-24T08:47:55Z",
      "diff_hunk" : "@@ -73,6 +73,14 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     */\n     bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n \n+    /**\n+    * Process global tasks that aren't attached to a specific peer",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r444741653",
      "id" : 444741653,
      "line" : 77,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc0MTY1Mw==",
      "original_commit_id" : "0e7e11ee0ee94b4245a637284b925473a8046eeb",
      "original_line" : 77,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 5,
      "pull_request_review_id" : 436447468,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-29T16:58:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444741653",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\nThe idea makes perfect sense from the high-level. The implementation seems safe.",
      "created_at" : "2020-06-24T08:55:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-648690864",
      "id" : 648690864,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0ODY5MDg2NA==",
      "updated_at" : "2020-06-24T08:55:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648690864",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Does this new global data structure need to be limited in size in some way? At least when it was per peer, it would go away when the peer was disconnected. I'm vaguely worried that this might open up a new DoS vector.",
      "created_at" : "2020-06-24T13:10:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-648809825",
      "id" : 648809825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0ODgwOTgyNQ==",
      "updated_at" : "2020-06-24T13:10:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648809825",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r444902920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444902920"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Such documentation, if it's added, should be at the level of the `PeerLogicValidation` class. We don't want anything in the message handler thread to block for a long time (or to *be blocked* by slow tasks in other threads). That includes anything in  `ProcessMessages()`, `SendMessages()` and (now) `ProcessGlobalTasks()`.",
      "commit_id" : "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
      "created_at" : "2020-06-24T13:42:58Z",
      "diff_hunk" : "@@ -73,6 +73,14 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     */\n     bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n \n+    /**\n+    * Process global tasks that aren't attached to a specific peer",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r444902920",
      "id" : 444902920,
      "in_reply_to_id" : 444741653,
      "line" : 77,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkwMjkyMA==",
      "original_commit_id" : "0e7e11ee0ee94b4245a637284b925473a8046eeb",
      "original_line" : 77,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 5,
      "pull_request_review_id" : 436658863,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-29T16:58:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444902920",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Does this new global data structure need to be limited in size in some way? At least when it was per peer, it would go away when the peer was disconnected. I'm vaguely worried that this might open up a new DoS vector.\r\n\r\nThat's the right question to be asking, but I think we're safe:\r\n\r\n- items are inserted into `g_orphan_work_set` at the point they would have been inserted into the per-peer `orphan_work_set`.\r\n- one item is popped from that set on every message handler thread loop. In effect this means that the set is emptied very quickly. Even if the peer that provided the parent (which previously would have held the object in its `orphan_work_set`), the object will very quickly be processed from `g_orphan_work_set`.\r\n\r\nThese entries can't persist for long in the set. I could refactor `ProcessOrphanTx()` to make it more obvious that we'll always empty this set quickly, but I wanted to keep the diff small for this PR. Perhaps I could do that in a follow-up.\r\n\r\nLonger term, it might make sense to consolidate all orphan logic into a module, similar to how #19184 overhauls request logic.",
      "created_at" : "2020-06-24T14:22:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-648852380",
      "id" : 648852380,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0ODg1MjM4MA==",
      "updated_at" : "2020-06-24T14:22:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648852380",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r446979785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446979785"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Compiler warning `-Winconsistent-missing-override`\r\n```suggestion\r\n    bool ProcessGlobalTasks(std::atomic<bool>& interrupt) override;\r\n```",
      "commit_id" : "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
      "created_at" : "2020-06-29T13:41:02Z",
      "diff_hunk" : "@@ -73,6 +73,14 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     */\n     bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n \n+    /**\n+    * Process global tasks that aren't attached to a specific peer\n+    *\n+    * @param[in]   interrupt       Interrupt condition for processing threads\n+    * @returns     bool            true if there's more work to do\n+    */\n+    bool ProcessGlobalTasks(std::atomic<bool>& interrupt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r446979785",
      "id" : 446979785,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3OTc4NQ==",
      "original_commit_id" : "b957b0d098f5dce2961d2b1a8c7bcfeb6b8e935b",
      "original_line" : 82,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : null,
      "pull_request_review_id" : 439154165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-29T16:58:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446979785",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5553787?v=4",
         "events_url" : "https://api.github.com/users/troygiorshev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/troygiorshev/followers",
         "following_url" : "https://api.github.com/users/troygiorshev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/troygiorshev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/troygiorshev",
         "id" : 5553787,
         "login" : "troygiorshev",
         "node_id" : "MDQ6VXNlcjU1NTM3ODc=",
         "organizations_url" : "https://api.github.com/users/troygiorshev/orgs",
         "received_events_url" : "https://api.github.com/users/troygiorshev/received_events",
         "repos_url" : "https://api.github.com/users/troygiorshev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/troygiorshev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/troygiorshev"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r447114046"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447114046"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good catch. Fixed!",
      "commit_id" : "9487f082e5f4b9696e3b4fd42aafebf42617ca9c",
      "created_at" : "2020-06-29T16:52:10Z",
      "diff_hunk" : "@@ -73,6 +73,14 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     */\n     bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n \n+    /**\n+    * Process global tasks that aren't attached to a specific peer\n+    *\n+    * @param[in]   interrupt       Interrupt condition for processing threads\n+    * @returns     bool            true if there's more work to do\n+    */\n+    bool ProcessGlobalTasks(std::atomic<bool>& interrupt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19364#discussion_r447114046",
      "id" : 447114046,
      "in_reply_to_id" : 446979785,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzExNDA0Ng==",
      "original_commit_id" : "b957b0d098f5dce2961d2b1a8c7bcfeb6b8e935b",
      "original_line" : 82,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : null,
      "pull_request_review_id" : 439329092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-29T16:58:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447114046",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If I can give it a shot, the suspected DoS vector is something along the lines of a peer feeding us fake orphan transactions, therefore inflating the size of g_orphan_work_set and preventing us from processing any other orphaned transactions?\r\n\r\nI think @laanwj's concern may have been in general about us storing unvalidated data from a peer, which is always something that we need to be careful about. It's not so much of a concern here because the size of `orphan_work_set` is limited by the size of the orphan set, and we'll always clear `orphan_work_set` very quickly.\r\n\r\nI have a branch here: https://github.com/jnewbery/bitcoin/tree/2020-06-global-orphans2 that refactors `ProcessOrphanTx()` and makes it very obvious that `g_orphan_work_set` is emptied very quickly. I'm not sure whether it's worth opening that as a follow-up after this is merged.",
      "created_at" : "2020-06-29T16:58:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-651242980",
      "id" : 651242980,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MTI0Mjk4MA==",
      "updated_at" : "2020-06-29T16:58:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651242980",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-06-29T17:14:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19364#issuecomment-651250718",
      "id" : 651250718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MTI1MDcxOA==",
      "updated_at" : "2020-06-29T17:14:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651250718",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
