[
   {
      "author_association" : "MEMBER",
      "body" : "Does the crash also happen in a python functional test? If yes, mind to add one?",
      "created_at" : "2020-06-17T10:11:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19300#issuecomment-645283826",
      "id" : 645283826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19300",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTI4MzgyNg==",
      "updated_at" : "2020-06-17T10:11:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645283826",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke haven't tried but I'd say it should - but it will be one of those loop-until-it-happens test. I'll give it a try.",
      "created_at" : "2020-06-17T10:14:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19300#issuecomment-645285177",
      "id" : 645285177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19300",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTI4NTE3Nw==",
      "updated_at" : "2020-06-17T10:14:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645285177",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "does this need backport to 0.19?",
      "created_at" : "2020-06-17T10:16:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19300#issuecomment-645286264",
      "id" : 645286264,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19300",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTI4NjI2NA==",
      "updated_at" : "2020-06-17T10:16:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645286264",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke yes, and probably is a clean backport.",
      "created_at" : "2020-06-17T10:18:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19300#issuecomment-645287165",
      "id" : 645287165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19300",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTI4NzE2NQ==",
      "updated_at" : "2020-06-17T10:18:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645287165",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Hi, just tested the running of several background processes of the following script :\r\n\r\n```\r\n# Bitcoin Core RPC client version v0.20.0.0-ga62f0ed64f8bbbdfe6467ac5ce92ef5b5222d1bd\r\nwallet=xxxxxx\r\nfor i in {1..1000}\r\ndo\r\n  echo $i\r\n  bitcoin-cli loadwallet $wallet\r\n  bitcoin-cli unloadwallet $wallet\r\ndone\r\n\r\n```\r\nCrash is immediate. Here's valgrind output:\r\n\r\n```\r\nvalgrind /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128\r\n==30964== Memcheck, a memory error detector\r\n==30964== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==30964== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\r\n==30964== Command: /usr/local/bin/bitcoind -daemon -walletrbf -conf=/root/.bitcoin/bitcoin.conf -fallbackfee=0.00001 -rpcworkqueue=128\r\n==30964==\r\nBitcoin Core starting\r\n==30964==\r\n==30964== HEAP SUMMARY:\r\n==30964==     in use at exit: 2,232,114 bytes in 2,271 blocks\r\n==30964==   total heap usage: 3,234 allocs, 963 frees, 2,462,760 bytes allocated\r\n==30964==\r\n==30964== LEAK SUMMARY:\r\n==30964==    definitely lost: 0 bytes in 0 blocks\r\n==30964==    indirectly lost: 0 bytes in 0 blocks\r\n==30964==      possibly lost: 0 bytes in 0 blocks\r\n==30964==    still reachable: 2,232,114 bytes in 2,271 blocks\r\n==30964==         suppressed: 0 bytes in 0 blocks\r\n==30964== Reachable blocks (those to which a pointer was found) are not shown.\r\n==30964== To see them, rerun with: --leak-check=full --show-leak-kinds=all\r\n==30964==\r\n==30964== For lists of detected and suppressed errors, rerun with: -s\r\n==30964== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\nroot@backdev2:/home/psb/bin# ==30973== Syscall param pwrite64(buf) points to uninitialised byte(s)\r\n==30973==    at 0x507B983: ??? (syscall-template.S:84)\r\n==30973==    by 0x53CF188: __os_io (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BD04C: __memp_pgwrite.part.0 (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BD408: __memp_bhwrite (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BC31A: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x5348408: __db_verify (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x534A846: __db_verify_internal (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x52B9026: Db::verify(char const*, char const*, std::ostream*, unsigned int) (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x3DF7E5: BerkeleyEnvironment::Verify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool (*)(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (db.cpp:277)\r\n==30973==    by 0x3DFB4A: BerkeleyBatch::VerifyDatabaseFile(boost::filesystem::path const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool (*)(boost::filesystem::path const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) (db.cpp:422)\r\n==30973==    by 0x472D48: CWallet::Verify(interfaces::Chain&, WalletLocation const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:3778)\r\n==30973==  Address 0xd63ee08 is 120 bytes inside a block of size 1,112 alloc'd\r\n==30973==    at 0x402E7BD: malloc (vg_replace_malloc.c:309)\r\n==30973==    by 0x53CC964: __os_malloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x539B4F3: __env_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BBBC0: __memp_alloc (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x53BED27: __memp_fget (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x52D4063: __bam_new_file (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x5386387: __db_new_file (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x5386906: __db_open (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x534B2B8: __db_vrfy_pgset (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x534B4BE: __db_vrfy_dbinfo_create (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x5348056: __db_verify (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==    by 0x534A846: __db_verify_internal (in /usr/lib/libdb_cxx-4.8.so)\r\n==30973==\r\n==30973==\r\n==30973== Process terminating with default action of signal 6 (SIGABRT)\r\n==30973==    at 0x6350FFF: raise (raise.c:51)\r\n==30973==    by 0x6352429: abort (abort.c:89)\r\n==30973==    by 0x6349E66: __assert_fail_base (assert.c:92)\r\n==30973==    by 0x6349F11: __assert_fail (assert.c:101)\r\n==30973==    by 0x49085A: BerkeleyDatabase (db.h:125)\r\n==30973==    by 0x49085A: std::unique_ptr<BerkeleyDatabase, std::default_delete<BerkeleyDatabase> > MakeUnique<BerkeleyDatabase, std::shared_ptr<BerkeleyEnvironment>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::shared_ptr<BerkeleyEnvironment>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (memory.h:16)\r\n==30973==    by 0x49091F: BerkeleyDatabase::Create(boost::filesystem::path const&) (db.h:139)\r\n==30973==    by 0x47E2C1: CWallet::CreateWalletFromFile(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long) (wallet.cpp:3805)\r\n==30973==    by 0x4823E6: LoadWallet(interfaces::Chain&, WalletLocation const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (wallet.cpp:157)\r\n==30973==    by 0x40A7FD: loadwallet(JSONRPCRequest const&) (rpcwallet.cpp:2626)\r\n==30973==    by 0x22BFEB: operator() (server.h:104)\r\n==30973==    by 0x22BFEB: std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(char const*, char const*, UniValue (*)(JSONRPCRequest const&), std::initializer_list<char const*>)::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) (functional:1717)\r\n==30973==    by 0x14A95E: operator() (functional:2127)\r\n==30973==    by 0x14A95E: operator() (chain.cpp:208)\r\n==30973==    by 0x14A95E: std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), interfaces::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::{lambda(JSONRPCRequest const&, UniValue&, bool)#1}>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) (functional:1717)\r\n==30973==    by 0x2B32DB: operator() (functional:2127)\r\n==30973==    by 0x2B32DB: ExecuteCommand (server.cpp:453)\r\n==30973==    by 0x2B32DB: CRPCTable::execute(JSONRPCRequest const&) const (server.cpp:436)\r\n==30973==\r\n==30973== HEAP SUMMARY:\r\n==30973==     in use at exit: 475,082,336 bytes in 3,760,553 blocks\r\n==30973==   total heap usage: 9,888,764 allocs, 6,128,211 frees, 1,385,505,603 bytes allocated\r\n==30973==\r\n\r\n```",
      "created_at" : "2020-06-17T11:56:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19300#issuecomment-645329513",
      "id" : 645329513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19300",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTMyOTUxMw==",
      "updated_at" : "2020-06-17T12:07:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645329513",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/47175970?v=4",
         "events_url" : "https://api.github.com/users/fscemama/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fscemama/followers",
         "following_url" : "https://api.github.com/users/fscemama/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fscemama/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fscemama",
         "id" : 47175970,
         "login" : "fscemama",
         "node_id" : "MDQ6VXNlcjQ3MTc1OTcw",
         "organizations_url" : "https://api.github.com/users/fscemama/orgs",
         "received_events_url" : "https://api.github.com/users/fscemama/received_events",
         "repos_url" : "https://api.github.com/users/fscemama/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fscemama/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fscemama/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fscemama"
      }
   }
]
