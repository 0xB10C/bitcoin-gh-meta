[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19804 (test/refactor: reference p2p objects explicitly and remove confusing Test_Node.p2p property by gzhao408)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-06-17T23:09:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-645672477",
      "id" : 645672477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTY3MjQ3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-24T01:35:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645672477",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Being able to explicitly test different connection types including outbounds will be really useful.",
      "created_at" : "2020-06-18T19:49:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-646271653",
      "id" : 646271653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NjI3MTY1Mw==",
      "updated_at" : "2020-06-18T19:49:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646271653",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, that's a substantial move to increase coverage of p2p!\r\n\r\n@t-bast, see https://github.com/ariard/bitcoin/commits/2020-07-tda-mitigation-block-relay, based on this PR, it should allow you to open manual block-relay-only connection to a side-node _without_ leaking its presence due to addr-relay. That's one of the mitigation we talked offline against time-dilation and it should prevent you against unknown in-protocol eclipses. This is experimental software ofc, beware of not killing any kittens :)",
      "created_at" : "2020-07-03T04:05:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-653332533",
      "id" : 653332533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzMzMjUzMw==",
      "updated_at" : "2020-07-03T04:05:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653332533",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449410050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449410050"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "very nit: `conn_type` or `connType`?",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-07-03T06:59:16Z",
      "diff_hunk" : "@@ -367,8 +367,10 @@ static CAddress GetBindAddress(SOCKET sock)\n     return addr_bind;\n }\n \n-CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, bool manual_connection, bool block_relay_only)\n+CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449410050",
      "id" : 449410050,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQxMDA1MA==",
      "original_commit_id" : "b43b7dba9feadcdad6bd966eac924b01bca59e1c",
      "original_line" : 372,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 442187488,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449410050",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449412035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449412035"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "My 2 cents (feel free to ignore as I'm clearly very new to the bitcoin codebase): it feels to me that the distinction manual vs non-manual (automatic?) is orthogonal to the connection type and could be a separate enum.\r\n\r\nIIUC `MANUAL` can be composed with either `OUTBOUND`, `FEELER`, `BLOCK_RELAY` or `ADDR_FETCH`.",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-07-03T07:04:32Z",
      "diff_hunk" : "@@ -113,6 +113,14 @@ struct CSerializedNetMsg\n     std::string command;\n };\n \n+enum class ConnectionType {\n+    INBOUND, // peer initiated connections\n+    OUTBOUND, // full relay connections (blocks, addrs, txns)\n+    MANUAL, // connections to addresses added via addnode or the connect command line argument",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449412035",
      "id" : 449412035,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQxMjAzNQ==",
      "original_commit_id" : "b43b7dba9feadcdad6bd966eac924b01bca59e1c",
      "original_line" : 119,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 442187488,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449412035",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449634741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449634741"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`conn_type` is correct. See the developer guide: https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-07-03T15:28:35Z",
      "diff_hunk" : "@@ -367,8 +367,10 @@ static CAddress GetBindAddress(SOCKET sock)\n     return addr_bind;\n }\n \n-CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, bool manual_connection, bool block_relay_only)\n+CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449634741",
      "id" : 449634741,
      "in_reply_to_id" : 449410050,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzNDc0MQ==",
      "original_commit_id" : "b43b7dba9feadcdad6bd966eac924b01bca59e1c",
      "original_line" : 372,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 442478780,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449634741",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449634943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449634943"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See rationale here: https://github.com/bitcoin/bitcoin/pull/19316#issuecomment-646304479 and here: https://github.com/bitcoin/bitcoin/pull/19316#issuecomment-649776062",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-07-03T15:29:15Z",
      "diff_hunk" : "@@ -113,6 +113,14 @@ struct CSerializedNetMsg\n     std::string command;\n };\n \n+enum class ConnectionType {\n+    INBOUND, // peer initiated connections\n+    OUTBOUND, // full relay connections (blocks, addrs, txns)\n+    MANUAL, // connections to addresses added via addnode or the connect command line argument",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449634943",
      "id" : 449634943,
      "in_reply_to_id" : 449412035,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzNDk0Mw==",
      "original_commit_id" : "b43b7dba9feadcdad6bd966eac924b01bca59e1c",
      "original_line" : 119,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 442479057,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449634943",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@t-bast I'd strongly encourage you to _not_ use this branch or anything based on it for anything other than testing:\r\n\r\n- it's not merged yet, so still unreviewed\r\n- it's intended for testing only, and there are no guarantees about how it would work long-term in production (for example, the way that CConnman tracks the number of open connections is not updated to take account of these test connections. The commit here: https://github.com/ariard/bitcoin/commit/ea9943251b051a59d1b4cc7ae0ff34aeaea441f4 doesn't fix that)\r\n- since it's for testing only and not a public method, it may be removed or changed at any time.",
      "created_at" : "2020-07-03T15:35:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-653599673",
      "id" : 653599673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzU5OTY3Mw==",
      "updated_at" : "2020-07-03T15:35:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653599673",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449646549"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449646549"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the pointer, I was wondering about the inconsistency between variables (`addrConnect` instead of `addr_connect`), but this probably falls under `These are preferred in new code, but are not required when doing so would need changes to significant pieces of existing code.`",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-07-03T16:04:44Z",
      "diff_hunk" : "@@ -367,8 +367,10 @@ static CAddress GetBindAddress(SOCKET sock)\n     return addr_bind;\n }\n \n-CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, bool manual_connection, bool block_relay_only)\n+CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449646549",
      "id" : 449646549,
      "in_reply_to_id" : 449410050,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY0NjU0OQ==",
      "original_commit_id" : "b43b7dba9feadcdad6bd966eac924b01bca59e1c",
      "original_line" : 372,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 442493370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449646549",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449647582"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449647582"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I should have done my homework and read that PR first (as was clearly said in the PR description!).",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-07-03T16:08:07Z",
      "diff_hunk" : "@@ -113,6 +113,14 @@ struct CSerializedNetMsg\n     std::string command;\n };\n \n+enum class ConnectionType {\n+    INBOUND, // peer initiated connections\n+    OUTBOUND, // full relay connections (blocks, addrs, txns)\n+    MANUAL, // connections to addresses added via addnode or the connect command line argument",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r449647582",
      "id" : 449647582,
      "in_reply_to_id" : 449412035,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY0NzU4Mg==",
      "original_commit_id" : "b43b7dba9feadcdad6bd966eac924b01bca59e1c",
      "original_line" : 119,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 442494612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449647582",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for the concerns @jnewbery, no worries I'm not planning on using anything else than official `bitcoind` releases for `eclair`, I'm simply adding my concept ACK on the overall direction that will be quite helpful for hardening lightning!",
      "created_at" : "2020-07-03T16:10:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-653610473",
      "id" : 653610473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzYxMDQ3Mw==",
      "updated_at" : "2020-07-03T16:10:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653610473",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery thanks to press on the warning. The provided commit is for experimentation-only and MUST NOT be used in production for reasons aforementioned.\r\n\r\nFor anyone reading this and providing more context, Lightning nodes interested to prevent against time-dilation attacks (a no-hashrate eclipse variant against offchain protocols) should have multiple access to the chain view. As of today, the classic infra setup is to run the LN stack on top of _one_ full-node, if this one gets sybilled and partitioned from the rest of the network, the channel funds are at risk. Running a self-hosted or controlled secondary node connected to your main node would mitigate at least eclipses due to weaknesses in addr management or peer selection. As of today, we do have automatic block-relay-only peers, for which in theory their topology should stay masked to an external observer. But a bug in peer selection may be leveraged to lure block-only-relay connections to attacker controlled-peers. Adding redundant _manual_ block-relay-only connections will prevent this. Manual block-only secondary nodes won't fit there as they do leak addr-relay, which can be used to learn about their presence.\r\n\r\nProvided commit (https://github.com/ariard/bitcoin/commit/ea9943251b051a59d1b4cc7ae0ff34aeaea441f4) let you experiment such primary/secondary block-relay-only topology setup. There is no guarantee that anything will stay stable. If by playing with it, you do see value in this configuration, please concept ack and help to review downstream branches. If you don't understand what you're doing don't use it or ask questions.\r\n\r\n ",
      "created_at" : "2020-07-03T17:02:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-653624340",
      "id" : 653624340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzYyNDM0MA==",
      "updated_at" : "2020-07-03T17:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653624340",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-07-07T18:28:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-655044251",
      "id" : 655044251,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NTA0NDI1MQ==",
      "updated_at" : "2020-07-07T18:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655044251",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yay rebase! You can remove the \"This PR builds on #19316. Please review that first.\" from the PR description. Is this PR now ready for review?",
      "created_at" : "2020-08-18T18:59:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-675656643",
      "id" : 675656643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NTY1NjY0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-18T18:59:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675656643",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "hahha I was going to let the tests pass first, but yes it should be ready for review :) ",
      "created_at" : "2020-08-18T19:01:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-675657592",
      "id" : 675657592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NTY1NzU5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-18T19:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675657592",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r473836629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473836629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Either remove this comment or place it above `addpeeraddress`, since they're both not shown in help.",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-20T09:59:17Z",
      "diff_hunk" : "@@ -841,6 +897,9 @@ static const CRPCCommand commands[] =\n     { \"network\",            \"setnetworkactive\",       &setnetworkactive,       {\"state\"} },\n     { \"network\",            \"getnodeaddresses\",       &getnodeaddresses,       {\"count\"} },\n     { \"hidden\",             \"addpeeraddress\",         &addpeeraddress,         {\"address\", \"port\"} },\n+\n+    /* Not shown in help */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r473836629",
      "id" : 473836629,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgzNjYyOQ==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 900,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : null,
      "pull_request_review_id" : 471442648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473836629",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r473841451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473841451"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style: sort and place on separate lines",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-20T10:04:43Z",
      "diff_hunk" : "@@ -65,7 +65,7 @@\n     NODE_WITNESS,\n     sha256,\n )\n-from test_framework.util import wait_until\n+from test_framework.util import wait_until, MAX_NODES, p2p_port",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r473841451",
      "id" : 473841451,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg0MTQ1MQ==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 68,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 471442648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473841451",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r473856088"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473856088"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Consider renaming this function (and the equivalents in `P2PInterface` and `TestNode`) to `peer_accept_connection()` or similar. From the perspective of the `P2PConnection`, this is an inbound connection since it's initiated by the bitcoind node.",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-20T10:22:34Z",
      "diff_hunk" : "@@ -139,12 +139,20 @@ def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n         self.on_connection_send_msg = None\n         self.recvbuf = b\"\"\n         self.magic_bytes = MAGIC_BYTES[net]\n-        logger.debug('Connecting to Bitcoin Node: %s:%d' % (self.dstaddr, self.dstport))\n+\n+    def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n+        self.peer_connect_helper(dstaddr, dstport, net, timeout_factor)\n \n         loop = NetworkThread.network_event_loop\n-        conn_gen_unsafe = loop.create_connection(lambda: self, host=self.dstaddr, port=self.dstport)\n-        conn_gen = lambda: loop.call_soon_threadsafe(loop.create_task, conn_gen_unsafe)\n-        return conn_gen\n+        logger.debug('Connecting to Bitcoin Node: %s:%d' % (self.dstaddr, self.dstport))\n+        coroutine = loop.create_connection(lambda: self, host=self.dstaddr, port=self.dstport)\n+        return lambda: loop.call_soon_threadsafe(loop.create_task, coroutine)\n+\n+    def peer_outbound_connect(self, dstaddr, dstport, connect_cb, connect_id=0, *, net, timeout_factor):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r473856088",
      "id" : 473856088,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg1NjA4OA==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 151,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 471442648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473856088",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r473860655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473860655"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This doesn't actually test that the transaction won't get announced by the node, since transaction announcements are batched and only sent when the `nNextInvSend` timer pops. The `sync_with_ping()` above doesn't guarantee that there's nothing in the `setInventoryTxToSend` waiting to be sent (ie I think this test would still pass if this were an outbound-full-relay peer). I don't have any good suggestions except maybe adding a comment. Testing for the absence of something is hard!",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-20T10:28:16Z",
      "diff_hunk" : "@@ -69,18 +49,55 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n+        self.nodes[0].sendrawtransaction(tx_hex)\n+        conn.sync_with_ping()\n+        assert(txid not in conn.get_invs())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r473860655",
      "id" : 473860655,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg2MDY1NQ==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 82,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : null,
      "pull_request_review_id" : 471442648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473860655",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r473866387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473866387"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`getnewaddress` requires a wallet, so this test fails without the wallet compiled. Can you replace it with a hard-coded address?",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-20T10:35:25Z",
      "diff_hunk" : "@@ -69,18 +49,55 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n+        self.nodes[0].sendrawtransaction(tx_hex)\n+        conn.sync_with_ping()\n+        assert(txid not in conn.get_invs())\n+\n+    def check_p2p_tx_violation(self, index=1):\n+        self.log.info('Check that txs from P2P are rejected and result in disconnect')\n+        input_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(index), 2)['tx'][0]['txid']\n+        tx = create_transaction(self.nodes[0], input_txid, self.nodes[0].getnewaddress(), amount=50 - 0.001)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r473866387",
      "id" : 473866387,
      "line" : 99,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg2NjM4Nw==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 99,
      "original_position" : 114,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 131,
      "pull_request_review_id" : 471442648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473866387",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r474970241"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474970241"
         }
      },
      "author_association" : "MEMBER",
      "body" : "great point. renaming this & the equivalent on `P2PInterface` to `peer_accept_connection()` is much clearer. \r\n\r\nbut for `TestNode`, I think `add_outbound_p2p_connection()` makes sense? its a connection from node -> p2p conn, so outbound for node. inbound / accept for the P2P connections.",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-21T21:06:12Z",
      "diff_hunk" : "@@ -139,12 +139,20 @@ def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n         self.on_connection_send_msg = None\n         self.recvbuf = b\"\"\n         self.magic_bytes = MAGIC_BYTES[net]\n-        logger.debug('Connecting to Bitcoin Node: %s:%d' % (self.dstaddr, self.dstport))\n+\n+    def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n+        self.peer_connect_helper(dstaddr, dstport, net, timeout_factor)\n \n         loop = NetworkThread.network_event_loop\n-        conn_gen_unsafe = loop.create_connection(lambda: self, host=self.dstaddr, port=self.dstport)\n-        conn_gen = lambda: loop.call_soon_threadsafe(loop.create_task, conn_gen_unsafe)\n-        return conn_gen\n+        logger.debug('Connecting to Bitcoin Node: %s:%d' % (self.dstaddr, self.dstport))\n+        coroutine = loop.create_connection(lambda: self, host=self.dstaddr, port=self.dstport)\n+        return lambda: loop.call_soon_threadsafe(loop.create_task, coroutine)\n+\n+    def peer_outbound_connect(self, dstaddr, dstport, connect_cb, connect_id=0, *, net, timeout_factor):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r474970241",
      "id" : 474970241,
      "in_reply_to_id" : 473856088,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk3MDI0MQ==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 151,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 472819489,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474970241",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475454108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475454108"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point. It makes sense for the `TestNode` function to stay as `add_outbound_p2p_connection()`.",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-24T09:17:58Z",
      "diff_hunk" : "@@ -139,12 +139,20 @@ def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n         self.on_connection_send_msg = None\n         self.recvbuf = b\"\"\n         self.magic_bytes = MAGIC_BYTES[net]\n-        logger.debug('Connecting to Bitcoin Node: %s:%d' % (self.dstaddr, self.dstport))\n+\n+    def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n+        self.peer_connect_helper(dstaddr, dstport, net, timeout_factor)\n \n         loop = NetworkThread.network_event_loop\n-        conn_gen_unsafe = loop.create_connection(lambda: self, host=self.dstaddr, port=self.dstport)\n-        conn_gen = lambda: loop.call_soon_threadsafe(loop.create_task, conn_gen_unsafe)\n-        return conn_gen\n+        logger.debug('Connecting to Bitcoin Node: %s:%d' % (self.dstaddr, self.dstport))\n+        coroutine = loop.create_connection(lambda: self, host=self.dstaddr, port=self.dstport)\n+        return lambda: loop.call_soon_threadsafe(loop.create_task, coroutine)\n+\n+    def peer_outbound_connect(self, dstaddr, dstport, connect_cb, connect_id=0, *, net, timeout_factor):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475454108",
      "id" : 475454108,
      "in_reply_to_id" : 473856088,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ1NDEwOA==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 151,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 473274510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475454108",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475884039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475884039"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-24T20:46:35Z",
      "diff_hunk" : "@@ -841,6 +897,9 @@ static const CRPCCommand commands[] =\n     { \"network\",            \"setnetworkactive\",       &setnetworkactive,       {\"state\"} },\n     { \"network\",            \"getnodeaddresses\",       &getnodeaddresses,       {\"count\"} },\n     { \"hidden\",             \"addpeeraddress\",         &addpeeraddress,         {\"address\", \"port\"} },\n+\n+    /* Not shown in help */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475884039",
      "id" : 475884039,
      "in_reply_to_id" : 473836629,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg4NDAzOQ==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 900,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : null,
      "pull_request_review_id" : 473843859,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475884039",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475884229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475884229"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-24T20:46:55Z",
      "diff_hunk" : "@@ -65,7 +65,7 @@\n     NODE_WITNESS,\n     sha256,\n )\n-from test_framework.util import wait_until\n+from test_framework.util import wait_until, MAX_NODES, p2p_port",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475884229",
      "id" : 475884229,
      "in_reply_to_id" : 473841451,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg4NDIyOQ==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 68,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 473844072,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475884229",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475884574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475884574"
         }
      },
      "author_association" : "MEMBER",
      "body" : "renamed both instances of `peer_outbound_connect` to `peer_accept_connection`. thanks! ",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-24T20:47:37Z",
      "diff_hunk" : "@@ -139,12 +139,20 @@ def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n         self.on_connection_send_msg = None\n         self.recvbuf = b\"\"\n         self.magic_bytes = MAGIC_BYTES[net]\n-        logger.debug('Connecting to Bitcoin Node: %s:%d' % (self.dstaddr, self.dstport))\n+\n+    def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n+        self.peer_connect_helper(dstaddr, dstport, net, timeout_factor)\n \n         loop = NetworkThread.network_event_loop\n-        conn_gen_unsafe = loop.create_connection(lambda: self, host=self.dstaddr, port=self.dstport)\n-        conn_gen = lambda: loop.call_soon_threadsafe(loop.create_task, conn_gen_unsafe)\n-        return conn_gen\n+        logger.debug('Connecting to Bitcoin Node: %s:%d' % (self.dstaddr, self.dstport))\n+        coroutine = loop.create_connection(lambda: self, host=self.dstaddr, port=self.dstport)\n+        return lambda: loop.call_soon_threadsafe(loop.create_task, coroutine)\n+\n+    def peer_outbound_connect(self, dstaddr, dstport, connect_cb, connect_id=0, *, net, timeout_factor):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475884574",
      "id" : 475884574,
      "in_reply_to_id" : 473856088,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg4NDU3NA==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 151,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 473844519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475884574",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475887647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475887647"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ah, yeah I missed that. luckily `nNextInvSend` is mockable so I'm able to bump time forward to ensure the transaction would send. I also fixed a bug with the matching condition (was comparing different types). I think the test now functions correctly- if you remove the `connection_type=\"blockrelay\"` param when adding the p2p conn, the tx sends and the test fails. what do you think? ",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-24T20:53:37Z",
      "diff_hunk" : "@@ -69,18 +49,55 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n+        self.nodes[0].sendrawtransaction(tx_hex)\n+        conn.sync_with_ping()\n+        assert(txid not in conn.get_invs())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475887647",
      "id" : 475887647,
      "in_reply_to_id" : 473860655,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg4NzY0Nw==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 82,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : null,
      "pull_request_review_id" : 473848452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475887647",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475888230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475888230"
         }
      },
      "author_association" : "MEMBER",
      "body" : "so simple! done :) ",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-24T20:54:40Z",
      "diff_hunk" : "@@ -69,18 +49,55 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n+        self.nodes[0].sendrawtransaction(tx_hex)\n+        conn.sync_with_ping()\n+        assert(txid not in conn.get_invs())\n+\n+    def check_p2p_tx_violation(self, index=1):\n+        self.log.info('Check that txs from P2P are rejected and result in disconnect')\n+        input_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(index), 2)['tx'][0]['txid']\n+        tx = create_transaction(self.nodes[0], input_txid, self.nodes[0].getnewaddress(), amount=50 - 0.001)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r475888230",
      "id" : 475888230,
      "in_reply_to_id" : 473866387,
      "line" : 99,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg4ODIzMA==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 99,
      "original_position" : 114,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 131,
      "pull_request_review_id" : 473849198,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475888230",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476194074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476194074"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ah, looks like the blocktools helper uses wallet, so I ended up just adding `skip_if_no_wallet` and reverting this. ",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-25T05:53:27Z",
      "diff_hunk" : "@@ -69,18 +49,55 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n+        self.nodes[0].sendrawtransaction(tx_hex)\n+        conn.sync_with_ping()\n+        assert(txid not in conn.get_invs())\n+\n+    def check_p2p_tx_violation(self, index=1):\n+        self.log.info('Check that txs from P2P are rejected and result in disconnect')\n+        input_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(index), 2)['tx'][0]['txid']\n+        tx = create_transaction(self.nodes[0], input_txid, self.nodes[0].getnewaddress(), amount=50 - 0.001)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476194074",
      "id" : 476194074,
      "in_reply_to_id" : 473866387,
      "line" : 99,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5NDA3NA==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 99,
      "original_position" : 114,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 131,
      "pull_request_review_id" : 474154182,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476194074",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476299424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476299424"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: For new code it might be good to use the non-deprecated constructor (see e.g. #19528) ",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-25T09:09:43Z",
      "diff_hunk" : "@@ -282,6 +283,61 @@ static UniValue addnode(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue addconnection(const JSONRPCRequest& request)\n+{\n+    const RPCHelpMan help{\"addconnection\",\n+        \"\\nOpen an outbound connection to a specified node (test only)\",\n+        {\n+            {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP address and port to attempt connecting to.\"},\n+            {\"connectiontype\", RPCArg::Type::STR, RPCArg::Optional::NO, \"'outbound' or 'blockrelay'\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                { RPCResult::Type::STR, \"address\", \"Address of newly added connection.\" },\n+                { RPCResult::Type::STR, \"connectiontype\", \"Type of connection opened.\" },\n+            }},\n+        RPCExamples{\n+            HelpExampleCli(\"addconnection\", \"\\\"192.168.0.6:8333\\\" \\\"outbound\\\"\")\n+            + HelpExampleRpc(\"addconnection\", \"\\\"192.168.0.6:8333\\\" \\\"outbound\\\"\")\n+        },\n+    };\n+\n+    help.Check(request);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476299424",
      "id" : 476299424,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI5OTQyNA==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 306,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : null,
      "pull_request_review_id" : 474288186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476299424",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476300109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476300109"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Would be good to either consistently mention this in every file where \"hidden\" is used or nowhere. Maybe just keep the newline?",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-25T09:10:49Z",
      "diff_hunk" : "@@ -840,7 +896,10 @@ static const CRPCCommand commands[] =\n     { \"network\",            \"clearbanned\",            &clearbanned,            {} },\n     { \"network\",            \"setnetworkactive\",       &setnetworkactive,       {\"state\"} },\n     { \"network\",            \"getnodeaddresses\",       &getnodeaddresses,       {\"count\"} },\n+\n+    /* Not shown in help */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476300109",
      "id" : 476300109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMwMDEwOQ==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 900,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : null,
      "pull_request_review_id" : 474288186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476300109",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476300969"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476300969"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Any reason for this unrelated change? This also violates pep8",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-25T09:12:18Z",
      "diff_hunk" : "@@ -2,62 +2,46 @@\n # Copyright (c) 2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test p2p blocksonly\"\"\"\n+\"\"\"Test p2p blocksonly mode & block-relay-only connections.\"\"\"\n \n-from test_framework.messages import msg_tx, CTransaction, FromHex\n-from test_framework.mininode import P2PInterface\n+import time\n+\n+from test_framework.blocktools import create_transaction\n+from test_framework.messages import msg_tx\n+from test_framework.mininode import P2PInterface, P2PTxInvStore\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal\n \n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476300969",
      "id" : 476300969,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMwMDk2OQ==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 12,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : null,
      "pull_request_review_id" : 474288186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476300969",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476304181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476304181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Any reason to remove the star? I think keyword args that are simply passed on in python are denoted by `**kwargs` in intermediate function calls in the stack, not by explicitly listing them each. Though, I am not a python expert, so feel free to ignore.",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-25T09:17:51Z",
      "diff_hunk" : "@@ -130,7 +134,7 @@ def __init__(self):\n     def is_connected(self):\n         return self._transport is not None\n \n-    def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n+    def peer_connect_helper(self, dstaddr, dstport, net, timeout_factor):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476304181",
      "id" : 476304181,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMwNDE4MQ==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 137,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 474288186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476304181",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476308135"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476308135"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The line times out intermittently: https://cirrus-ci.com/task/5292757864415232?command=ci#L5215\r\n\r\n```\r\n test  2020-08-25T06:50:18.197000Z TestFramework.node0 (DEBUG): RPC successfully started \r\n node0 2020-08-25T06:50:18.198698Z [http] Received a POST request for / from 127.0.0.1:43672 \r\n node0 2020-08-25T06:50:18.199052Z [httpworker.2] ThreadRPCServer method=getnetworkinfo user=__cookie__ \r\n test  2020-08-25T06:50:18.202000Z TestFramework.mininode (DEBUG): Listening for Bitcoin Node: 0: \r\n node0 2020-08-25T06:50:19.011416Z [scheduler] Leaving InitialBlockDownload (latching to false) \r\n node0 2020-08-25T06:51:15.798367Z [scheduler] Feeding 32910 bytes of dynamic environment data into RNG \r\n test  2020-08-25T06:51:18.213000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: '''' \r\n                                           test_function = lambda: self.is_connected\r\n                                   '''\r\n test  2020-08-25T06:51:18.213000Z TestFramework (ERROR): Assertion failed \r\n                                   Traceback (most recent call last):\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 118, in main\r\n                                       self.run_test()\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/p2p_blocksonly.py\", line 26, in run_test\r\n                                       self.blocks_relay_conn_tests()\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/p2p_blocksonly.py\", line 76, in blocks_relay_conn_tests\r\n                                       self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_node.py\", line 561, in add_outbound_p2p_connection\r\n                                       p2p_conn.wait_for_connect()\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/mininode.py\", line 422, in wait_for_connect\r\n                                       wait_until(test_function, timeout=timeout, lock=mininode_lock)\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/util.py\", line 252, in wait_until\r\n                                       raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\n                                   AssertionError: Predicate ''''\r\n                                           test_function = lambda: self.is_connected\r\n                                   ''' not true after 60.0 seconds",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-25T09:24:05Z",
      "diff_hunk" : "@@ -69,18 +53,58 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476308135",
      "id" : 476308135,
      "line" : 81,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMwODEzNQ==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 81,
      "original_position" : 108,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 113,
      "pull_request_review_id" : 474288186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476308135",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476310077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476310077"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ok, it's a bit of a shame to require the wallet to be compiled to run this test. Ideally, I think we'd want just the `wallet_` tests to require the wallet, but we're a long way from that.\r\n\r\nNo need to change this here, but a useful future project would be to eliminate the wallet dependency from the non-wallet tests.",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-25T09:27:14Z",
      "diff_hunk" : "@@ -69,18 +49,55 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n+        self.nodes[0].sendrawtransaction(tx_hex)\n+        conn.sync_with_ping()\n+        assert(txid not in conn.get_invs())\n+\n+    def check_p2p_tx_violation(self, index=1):\n+        self.log.info('Check that txs from P2P are rejected and result in disconnect')\n+        input_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(index), 2)['tx'][0]['txid']\n+        tx = create_transaction(self.nodes[0], input_txid, self.nodes[0].getnewaddress(), amount=50 - 0.001)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476310077",
      "id" : 476310077,
      "in_reply_to_id" : 473866387,
      "line" : 99,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMxMDA3Nw==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 99,
      "original_position" : 114,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 131,
      "pull_request_review_id" : 474301572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476310077",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for addressing all my comments @amitiuttarwar . Changes look good to me.\r\n\r\nI'll wait until you've resolved the test timeout issue before a full rereview.",
      "created_at" : "2020-08-25T10:18:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-679938150",
      "id" : 679938150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTkzODE1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T10:18:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679938150",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-26T09:02:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-680754912",
      "id" : 680754912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDc1NDkxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-26T09:02:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680754912",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r478509021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478509021"
         }
      },
      "author_association" : "NONE",
      "body" : "For context, it looks like the star forces subsequent arguments to be present and named:\r\n\r\n```\r\ndef foo(a, b, *, c):\r\n    print(a, b, c)\r\n\r\nfoo(1, 2)\r\n# TypeError: foo() missing 1 required keyword-only argument: 'c'\r\n\r\nfoo(1, 2, 3)\r\n# TypeError: foo() takes 2 positional arguments but 3 were given\r\n\r\nfoo(1, 2, c=3)\r\n# 1 2 3\r\n```",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-27T15:32:07Z",
      "diff_hunk" : "@@ -130,7 +134,7 @@ def __init__(self):\n     def is_connected(self):\n         return self._transport is not None\n \n-    def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n+    def peer_connect_helper(self, dstaddr, dstport, net, timeout_factor):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r478509021",
      "id" : 478509021,
      "in_reply_to_id" : 476304181,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUwOTAyMQ==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 137,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 476841303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478509021",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r478529683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478529683"
         }
      },
      "author_association" : "NONE",
      "body" : "It looks like line 520 above checks `if 'dstport' not in kwargs:`; naive question, would this be needed here as well?",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-27T16:02:32Z",
      "diff_hunk" : "@@ -542,6 +542,30 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n \n         return p2p_conn\n \n+    def add_outbound_p2p_connection(self, p2p_conn, *, connection_type=\"outbound\", connect_id=0, **kwargs):\n+        \"\"\" Add an outbound p2p connection from node. Either\n+        full-relay(\"outbound\") or block-relay-only(\"blockrelay\") connection.\n+\n+        This method adds the p2p connection to the self.p2ps list and also\n+        returns the connection to the caller.\"\"\"\n+\n+        kwargs['dstport'] = p2p_port(self.index)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r478529683",
      "id" : 478529683,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUyOTY4Mw==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 552,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : null,
      "pull_request_review_id" : 476841303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478529683",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r478602722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478602722"
         }
      },
      "author_association" : "NONE",
      "body" : "I'm not sure if I'm understanding this correctly, but if you have more than `MAX_NODES / 2` nodes, could you get a port conflict?\r\n\r\ne.g. with `MAX_NODES = 12`:\r\n\r\n- Some code for node 7 calls `p2p_port(12 - 7)` here to get a p2p port on the Python side\r\n- Some other code for node 5 calls `p2p_port(5)` to get a p2p port for a `bitcoind` process",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-27T18:06:37Z",
      "diff_hunk" : "@@ -524,6 +551,33 @@ def close(self, timeout=10):\n         # Safe to remove event loop.\n         NetworkThread.network_event_loop = None\n \n+    @classmethod\n+    def listen(cls, p2p, callback, port=None, addr=None, idx=0):\n+        if port is None:\n+            assert idx >= 0 and idx < MAX_NODES\n+            port = p2p_port(MAX_NODES-idx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r478602722",
      "id" : 478602722,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwMjcyMg==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 558,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 476841303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478602722",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r478611513"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478611513"
         }
      },
      "author_association" : "NONE",
      "body" : "I looked into the flaky test a bit.\r\n\r\nLocally, I see this:\r\n\r\n\t2020-08-27T06:35:37.249000Z TestFramework.mininode (DEBUG): Listening for Bitcoin Node: 0:\r\n\t2020-08-27T06:35:37.250000Z TestFramework.mininode (DEBUG): Listening server on 127.0.0.1:15398 should be started\r\n\r\nHowever, in the CI logs, the \"Listening server on ...\" never appears:\r\n\r\n\t2020-08-25T06:50:18.202000Z TestFramework.mininode (DEBUG): Listening for Bitcoin Node: 0: \r\n\t2020-08-25T06:51:18.213000Z TestFramework.utils (ERROR): wait_until() failed.\r\n\t\r\nIt looks like on the CI servers, the `cls.network_event_loop.create_server` call didn't work:\r\n\r\n\tTraceback (most recent call last):\r\n\t  File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/mininode.py\", line 575, in create_server\r\n\t    listener = await cls.network_event_loop.create_server(cls.peer_listener(addr, port), addr, port)\r\n\t  File \"/usr/lib/python3.8/asyncio/base_events.py\", line 1463, in create_server\r\n\t    raise OSError(err.errno, 'error while attempting '\r\n\tOSError: [Errno 98] error while attempting to bind on address ('127.0.0.1', 15020): address already in use\r\n\r\nUnfortunately, I have **no idea** why this port is already in use on the CI serverâthe CI logs make no other mention of port 15020 before this error.\r\n\r\n- Can we guarantee that port 15020 isn't used by any other processes on the CI server?\r\n- If not, would it make sense to retry the `create_server` with different ports on failure?",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-27T18:22:50Z",
      "diff_hunk" : "@@ -524,6 +551,33 @@ def close(self, timeout=10):\n         # Safe to remove event loop.\n         NetworkThread.network_event_loop = None\n \n+    @classmethod\n+    def listen(cls, p2p, callback, port=None, addr=None, idx=0):\n+        if port is None:\n+            assert idx >= 0 and idx < MAX_NODES\n+            port = p2p_port(MAX_NODES-idx)\n+        if addr is None:\n+            addr = '127.0.0.1'\n+        coroutine = cls.create_server(addr, port, callback, p2p)\n+        cls.network_event_loop.call_soon_threadsafe(cls.network_event_loop.create_task, coroutine)\n+\n+    @classmethod\n+    def peer_listener(cls, addr, port):\n+        def pl():\n+            x = cls.protos.get((addr,port))\n+            cls.protos[(addr,port)] = None\n+            return x\n+        return pl\n+\n+    @classmethod\n+    async def create_server(cls, addr, port, callback, proto):\n+        if (addr, port) not in cls.listeners:\n+            listener = await cls.network_event_loop.create_server(cls.peer_listener(addr, port), addr, port)\n+            logger.debug(\"Listening server on %s:%d should be started\" % (addr, port))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r478611513",
      "id" : 478611513,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxMTUxMw==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 576,
      "original_position" : 129,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 476841303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478611513",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r478768406"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478768406"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, the `*` forces subsequent params to be specified by keyword not position",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-28T00:38:58Z",
      "diff_hunk" : "@@ -130,7 +134,7 @@ def __init__(self):\n     def is_connected(self):\n         return self._transport is not None\n \n-    def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n+    def peer_connect_helper(self, dstaddr, dstport, net, timeout_factor):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r478768406",
      "id" : 478768406,
      "in_reply_to_id" : 476304181,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2ODQwNg==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 137,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 477169941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478768406",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479284359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479284359"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe add a comment here mentioning this is only used for tests? I think it could be confusing without the context (e.g. a newcomer thinking this is how connections are added in general).\r\nI initially thought it should be named `AddTestOutbound` or something but I imagine this could be used for something else in the future, so a comment makes more sense.",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-28T13:23:06Z",
      "diff_hunk" : "@@ -288,6 +288,15 @@ class CConnman\n     bool RemoveAddedNode(const std::string& node);\n     std::vector<AddedNodeInfo> GetAddedNodeInfo();\n \n+    /**\n+     * Attempts to open a connection.\n+     *\n+     * @param[in]   address     Address of node to try connecting to\n+     * @param[in]   conn_type   ConnectionType::OUTBOUND or ConnectionType::BLOCK_RELAY\n+     * @return      bool        Returns false if at max connection capacity\n+     */\n+    bool AddConnection(const std::string& address, const ConnectionType conn_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479284359",
      "id" : 479284359,
      "line" : 339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI4NDM1OQ==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 339,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 11,
      "pull_request_review_id" : 477723783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479284359",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479293812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479293812"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: \"soon\" is pretty vague... Since you're refactoring, maybe edit a little bit like this?\r\n```suggestion\r\n        self.on_connection_send_msg = vt  # Will be sent in connection_made callback\r\n```",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-28T13:33:17Z",
      "diff_hunk" : "@@ -298,18 +310,27 @@ def __init__(self):\n         # The network services received from the peer\n         self.nServices = 0\n \n+    def peer_connect_send_version(self, services):\n+        # Send a version msg\n+        vt = msg_version()\n+        vt.nServices = services\n+        vt.addrTo.ip = self.dstaddr\n+        vt.addrTo.port = self.dstport\n+        vt.addrFrom.ip = \"0.0.0.0\"\n+        vt.addrFrom.port = 0\n+        self.on_connection_send_msg = vt  # Will be sent soon after connection_made",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479293812",
      "id" : 479293812,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI5MzgxMg==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 321,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 477723783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479293812",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479303202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479303202"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "tiny pep nit: remove space before Add\r\nAnd put the closing \"\"\" on a newline",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-28T13:43:22Z",
      "diff_hunk" : "@@ -542,6 +542,30 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n \n         return p2p_conn\n \n+    def add_outbound_p2p_connection(self, p2p_conn, *, connection_type=\"outbound\", connect_id=0, **kwargs):\n+        \"\"\" Add an outbound p2p connection from node. Either\n+        full-relay(\"outbound\") or block-relay-only(\"blockrelay\") connection.\n+\n+        This method adds the p2p connection to the self.p2ps list and also\n+        returns the connection to the caller.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479303202",
      "id" : 479303202,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMwMzIwMg==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 550,
      "original_position" : 18,
      "original_start_line" : 546,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : null,
      "pull_request_review_id" : 477723783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479303202",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479312039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479312039"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n```suggestion\r\n    const bool success = context.connman->AddConnection(address, conn_type);\r\n```",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-28T13:52:45Z",
      "diff_hunk" : "@@ -282,6 +283,61 @@ static UniValue addnode(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue addconnection(const JSONRPCRequest& request)\n+{\n+    const RPCHelpMan help{\"addconnection\",\n+        \"\\nOpen an outbound connection to a specified node (test only)\",\n+        {\n+            {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP address and port to attempt connecting to.\"},\n+            {\"connectiontype\", RPCArg::Type::STR, RPCArg::Optional::NO, \"'outbound' or 'blockrelay'\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                { RPCResult::Type::STR, \"address\", \"Address of newly added connection.\" },\n+                { RPCResult::Type::STR, \"connectiontype\", \"Type of connection opened.\" },\n+            }},\n+        RPCExamples{\n+            HelpExampleCli(\"addconnection\", \"\\\"192.168.0.6:8333\\\" \\\"outbound\\\"\")\n+            + HelpExampleRpc(\"addconnection\", \"\\\"192.168.0.6:8333\\\" \\\"outbound\\\"\")\n+        },\n+    };\n+\n+    help.Check(request);\n+\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"addconnection is for regression testing (-regtest mode) only\");\n+    }\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VSTR});\n+    const std::string address = request.params[0].get_str();\n+    const std::string conn_type_in = request.params[1].get_str();\n+    ConnectionType conn_type{};\n+    if (conn_type_in == \"outbound\") {\n+        conn_type = ConnectionType::OUTBOUND;\n+    } else if (conn_type_in == \"blockrelay\") {\n+        conn_type = ConnectionType::BLOCK_RELAY;\n+    } else {\n+        throw std::runtime_error(help.ToString());\n+    }\n+\n+    NodeContext& context = EnsureNodeContext(request.context);\n+    if (!context.connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    bool success = context.connman->AddConnection(address, conn_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479312039",
      "id" : 479312039,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxMjAzOQ==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 329,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : null,
      "pull_request_review_id" : 477723783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479312039",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479312802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479312802"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "or \r\n```suggestion\r\n    if(!context.connman->AddConnection(address, conn_type))\r\n```",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-28T13:53:33Z",
      "diff_hunk" : "@@ -282,6 +283,61 @@ static UniValue addnode(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue addconnection(const JSONRPCRequest& request)\n+{\n+    const RPCHelpMan help{\"addconnection\",\n+        \"\\nOpen an outbound connection to a specified node (test only)\",\n+        {\n+            {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP address and port to attempt connecting to.\"},\n+            {\"connectiontype\", RPCArg::Type::STR, RPCArg::Optional::NO, \"'outbound' or 'blockrelay'\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                { RPCResult::Type::STR, \"address\", \"Address of newly added connection.\" },\n+                { RPCResult::Type::STR, \"connectiontype\", \"Type of connection opened.\" },\n+            }},\n+        RPCExamples{\n+            HelpExampleCli(\"addconnection\", \"\\\"192.168.0.6:8333\\\" \\\"outbound\\\"\")\n+            + HelpExampleRpc(\"addconnection\", \"\\\"192.168.0.6:8333\\\" \\\"outbound\\\"\")\n+        },\n+    };\n+\n+    help.Check(request);\n+\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"addconnection is for regression testing (-regtest mode) only\");\n+    }\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VSTR});\n+    const std::string address = request.params[0].get_str();\n+    const std::string conn_type_in = request.params[1].get_str();\n+    ConnectionType conn_type{};\n+    if (conn_type_in == \"outbound\") {\n+        conn_type = ConnectionType::OUTBOUND;\n+    } else if (conn_type_in == \"blockrelay\") {\n+        conn_type = ConnectionType::BLOCK_RELAY;\n+    } else {\n+        throw std::runtime_error(help.ToString());\n+    }\n+\n+    NodeContext& context = EnsureNodeContext(request.context);\n+    if (!context.connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    bool success = context.connman->AddConnection(address, conn_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479312802",
      "id" : 479312802,
      "in_reply_to_id" : 479312039,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxMjgwMg==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 329,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : null,
      "pull_request_review_id" : 477723783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479312802",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479353496"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479353496"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why is this needed? If the test fails, is it not ok to fail for `sendrawtransaction` validation/mempool reasons?",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-28T14:46:29Z",
      "diff_hunk" : "@@ -69,18 +53,58 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        # bump time forward to ensure nNextInvSend timer pops\n+        self.nodes[0].setmocktime(int(time.time()) + 5)\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479353496",
      "id" : 479353496,
      "line" : 91,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1MzQ5Ng==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 91,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 123,
      "pull_request_review_id" : 477723783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479353496",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479354900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479354900"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this to clear the mempool?",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-28T14:48:51Z",
      "diff_hunk" : "@@ -69,18 +53,58 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479354900",
      "id" : 479354900,
      "line" : 73,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1NDkwMA==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 73,
      "original_position" : 100,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 105,
      "pull_request_review_id" : 477723783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479354900",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479358247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479358247"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I think `height` would be more clear than `index`",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-08-28T14:54:21Z",
      "diff_hunk" : "@@ -69,18 +53,58 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        # bump time forward to ensure nNextInvSend timer pops\n+        self.nodes[0].setmocktime(int(time.time()) + 5)\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n+        self.nodes[0].sendrawtransaction(tx_hex)\n+        conn.sync_with_ping()\n+        assert(int(txid, 16) not in conn.get_invs())\n+\n+    def check_p2p_tx_violation(self, index=1):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r479358247",
      "id" : 479358247,
      "line" : 96,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1ODI0Nw==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 96,
      "original_position" : 123,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 128,
      "pull_request_review_id" : 477723783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479358247",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nVery nice to be able to test this extremely important logic. Thanks for doing this!",
      "created_at" : "2020-08-29T01:13:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-683210775",
      "id" : 683210775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzIxMDc3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-29T01:13:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683210775",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've been [looking into](https://github.com/gzhao408/bitcoin/commit/651ef496dbd82e3fffad73e220f51372cf76ca17) the port management stuff to see the limits of how many connections can be opened. Quick [example_test.py](https://github.com/gzhao408/bitcoin/blob/651ef496dbd82e3fffad73e220f51372cf76ca17/test/functional/example_test.py): add 8 outbounds and 2 blockrelays to `nodes[0]` and `nodes[1]` each. This branch fails especially if you don't specify `connect_id` explicitly in `add_outbound_p2p_connection()` - I don't think you can add more than 1 outbound p2p connection because it'll try to reuse the same port. I tinkered with it to make it pass.\r\n\r\nI'm not 100% sure I understand everything correctly but I think the explanation is:\r\n-For inbounds, we care about the `dstaddr`/`dstport` which would be the same for all p2ps connected to one node. i.e. they all have the same destination -> they initiate the connection. So we use 1 port per test node, which is why arg to `p2p_port` needs to within the MAX_NODES range.\r\n-For outbounds, there's no \"destination\" since the p2ps are not initiating the connection. You need each p2p to listen on a different port. I guess the TestNode that's connecting would be called the \"origin\" or something.",
      "created_at" : "2020-08-30T17:00:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-683444413",
      "id" : 683444413,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzQ0NDQxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-30T17:00:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683444413",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r488821301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488821301"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note for the future, I think we could refactor out this code snippet in some accounting type helper. We're computing `nOutboundFullRelay`/`nOutboundBlockRelay` in diverse parts of the codebase, at least after #19858 \r\n\r\nLike returning a struct with an aliased int for each type we have.\r\n```\r\nstruct SetConnectionType {\r\n       int  full_relay;\r\n       int   blocksonly;\r\n       ...\r\n};\r\n\r\nGetConnectionTypeCount()\r\n```",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-15T17:00:03Z",
      "diff_hunk" : "@@ -1069,6 +1069,29 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     RandAddEvent((uint32_t)id);\n }\n \n+bool CConnman::AddConnection(const std::string& address)\n+{\n+    int nOutboundFullRelay = 0;\n+\n+    {\n+        LOCK(cs_vNodes);\n+        for (const CNode* pnode : vNodes) {\n+            if (pnode->m_conn_type == ConnectionType::OUTBOUND) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r488821301",
      "id" : 488821301,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyMTMwMQ==",
      "original_commit_id" : "07dd3ba792bf25eb7e24833393406f559f68e8fb",
      "original_line" : 1079,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 488885293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488821301",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r488823128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488823128"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If understand new test well, could you document the 2 behaviors tested, namely that sender doesn't relay transaction to a block-relay-only peer and that receiver disconnect a block-relay-only peer relaying transaction ?",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-15T17:03:18Z",
      "diff_hunk" : "@@ -2,15 +2,16 @@\n # Copyright (c) 2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test p2p blocksonly\"\"\"\n+\"\"\"Test p2p blocksonly mode & block-relay-only connections.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r488823128",
      "id" : 488823128,
      "line" : 5,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyMzEyOA==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 7,
      "pull_request_review_id" : 488885293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488823128",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-09-19T10:59:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-695199099",
      "id" : 695199099,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTE5OTA5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-19T10:59:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695199099",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492403950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492403950"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I haven't looked too closely at #19800 yet, but I think I should now be able to replace this `create_transaction` call with `miniwallet.send_self_transfer` and remove the wallet dependency? does this sound right? cc @MarcoFalke ",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-21T23:35:58Z",
      "diff_hunk" : "@@ -69,18 +49,55 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n+        self.nodes[0].sendrawtransaction(tx_hex)\n+        conn.sync_with_ping()\n+        assert(txid not in conn.get_invs())\n+\n+    def check_p2p_tx_violation(self, index=1):\n+        self.log.info('Check that txs from P2P are rejected and result in disconnect')\n+        input_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(index), 2)['tx'][0]['txid']\n+        tx = create_transaction(self.nodes[0], input_txid, self.nodes[0].getnewaddress(), amount=50 - 0.001)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492403950",
      "id" : 492403950,
      "in_reply_to_id" : 473866387,
      "line" : 99,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQwMzk1MA==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 99,
      "original_position" : 114,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 131,
      "pull_request_review_id" : 493050008,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492403950",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492405564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492405564"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done! how's it look now? \r\n\r\nq: is there anywhere that captures the current conventions around RPC functions? during original implementation I was looking around, but clearly wasn't able to successfully identify which methods are preferred",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-21T23:41:37Z",
      "diff_hunk" : "@@ -282,6 +283,61 @@ static UniValue addnode(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue addconnection(const JSONRPCRequest& request)\n+{\n+    const RPCHelpMan help{\"addconnection\",\n+        \"\\nOpen an outbound connection to a specified node (test only)\",\n+        {\n+            {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP address and port to attempt connecting to.\"},\n+            {\"connectiontype\", RPCArg::Type::STR, RPCArg::Optional::NO, \"'outbound' or 'blockrelay'\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                { RPCResult::Type::STR, \"address\", \"Address of newly added connection.\" },\n+                { RPCResult::Type::STR, \"connectiontype\", \"Type of connection opened.\" },\n+            }},\n+        RPCExamples{\n+            HelpExampleCli(\"addconnection\", \"\\\"192.168.0.6:8333\\\" \\\"outbound\\\"\")\n+            + HelpExampleRpc(\"addconnection\", \"\\\"192.168.0.6:8333\\\" \\\"outbound\\\"\")\n+        },\n+    };\n+\n+    help.Check(request);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492405564",
      "id" : 492405564,
      "in_reply_to_id" : 476299424,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQwNTU2NA==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 306,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : null,
      "pull_request_review_id" : 493051862,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492405564",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492405610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492405610"
         }
      },
      "author_association" : "MEMBER",
      "body" : "removed ",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-21T23:41:47Z",
      "diff_hunk" : "@@ -840,7 +896,10 @@ static const CRPCCommand commands[] =\n     { \"network\",            \"clearbanned\",            &clearbanned,            {} },\n     { \"network\",            \"setnetworkactive\",       &setnetworkactive,       {\"state\"} },\n     { \"network\",            \"getnodeaddresses\",       &getnodeaddresses,       {\"count\"} },\n+\n+    /* Not shown in help */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492405610",
      "id" : 492405610,
      "in_reply_to_id" : 476300109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQwNTYxMA==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 900,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : null,
      "pull_request_review_id" : 493051907,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492405610",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492405748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492405748"
         }
      },
      "author_association" : "MEMBER",
      "body" : "oops, fixed now",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-21T23:42:15Z",
      "diff_hunk" : "@@ -2,62 +2,46 @@\n # Copyright (c) 2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test p2p blocksonly\"\"\"\n+\"\"\"Test p2p blocksonly mode & block-relay-only connections.\"\"\"\n \n-from test_framework.messages import msg_tx, CTransaction, FromHex\n-from test_framework.mininode import P2PInterface\n+import time\n+\n+from test_framework.blocktools import create_transaction\n+from test_framework.messages import msg_tx\n+from test_framework.mininode import P2PInterface, P2PTxInvStore\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal\n \n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492405748",
      "id" : 492405748,
      "in_reply_to_id" : 476300969,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQwNTc0OA==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 12,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : null,
      "pull_request_review_id" : 493052053,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492405748",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492406400"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492406400"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yup, thats why I removed the `*` from the helper. \r\n\r\nalso note that the `*` is still present in the `peer_connect` function, just git is showing the diff since I added the helper. I don't fully understand what's going on here with the `*` on the actual functions though (`peer_connect`, `peer_accept_connection`), so please let me know if I'm missing something / should dig in more. ",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-21T23:44:32Z",
      "diff_hunk" : "@@ -130,7 +134,7 @@ def __init__(self):\n     def is_connected(self):\n         return self._transport is not None\n \n-    def peer_connect(self, dstaddr, dstport, *, net, timeout_factor):\n+    def peer_connect_helper(self, dstaddr, dstport, net, timeout_factor):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492406400",
      "id" : 492406400,
      "in_reply_to_id" : 476304181,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQwNjQwMA==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 137,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 493052765,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492406400",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492408256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492408256"
         }
      },
      "author_association" : "MEMBER",
      "body" : "good point. I actually ended up removing `dstport` and `dstaddr` from the `peer_accept_connection` function signature, because they aren't being set here (we don't know the exact info until the listening server is spun up, which is why we pass a callback through)- so it seems more like a red herring.",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-21T23:51:24Z",
      "diff_hunk" : "@@ -542,6 +542,30 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n \n         return p2p_conn\n \n+    def add_outbound_p2p_connection(self, p2p_conn, *, connection_type=\"outbound\", connect_id=0, **kwargs):\n+        \"\"\" Add an outbound p2p connection from node. Either\n+        full-relay(\"outbound\") or block-relay-only(\"blockrelay\") connection.\n+\n+        This method adds the p2p connection to the self.p2ps list and also\n+        returns the connection to the caller.\"\"\"\n+\n+        kwargs['dstport'] = p2p_port(self.index)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492408256",
      "id" : 492408256,
      "in_reply_to_id" : 478529683,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQwODI1Ng==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 552,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : null,
      "pull_request_review_id" : 493054871,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492408256",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492414635"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492414635"
         }
      },
      "author_association" : "MEMBER",
      "body" : "great question! however, I don't _think_ this is a problem. here's why: the `p2p_port` function in `util.py` calculates in a few different factors, one of which is the `PortSeed.n`, which is set by the `BitcoinTestFramework`. It either explicitly sets this value or defaults to the process id, which would be different for each test. so I think this would only cause a conflict if there are conflicting uses within the same test. (but I very much welcome a double check- this stuff is CONFUSING!)",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T00:15:03Z",
      "diff_hunk" : "@@ -524,6 +551,33 @@ def close(self, timeout=10):\n         # Safe to remove event loop.\n         NetworkThread.network_event_loop = None\n \n+    @classmethod\n+    def listen(cls, p2p, callback, port=None, addr=None, idx=0):\n+        if port is None:\n+            assert idx >= 0 and idx < MAX_NODES\n+            port = p2p_port(MAX_NODES-idx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492414635",
      "id" : 492414635,
      "in_reply_to_id" : 478602722,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQxNDYzNQ==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 558,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 493061764,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492414635",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492419398"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492419398"
         }
      },
      "author_association" : "MEMBER",
      "body" : "thank you very much for looking into the flaky test :) you are a brave soul! hahaha\r\n\r\nwith ~some~ a lot of help from @ajtowns, my best understanding of what was probably happening here is an off-by-one error. the port allocation is intended to have 12 unique slots for each test, allowing test runner to run multiple tests in parallel. previously, the idx was starting at 0, so p2p_port was being passed (MAX_NODES), which could lead to a port conflict with another test. to fix it, I'm starting the idx at 1 & have added the validations to check the proper range. let's see how CI does ð¤ð½\r\n\r\nto be more specific, the port conflict I'm referring to would occur if a test had pid `x` and invoked `p2p_port(12)`, and the next test had pid `x+1` and invoked `p2p_port(0)`. ",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T00:35:02Z",
      "diff_hunk" : "@@ -524,6 +551,33 @@ def close(self, timeout=10):\n         # Safe to remove event loop.\n         NetworkThread.network_event_loop = None\n \n+    @classmethod\n+    def listen(cls, p2p, callback, port=None, addr=None, idx=0):\n+        if port is None:\n+            assert idx >= 0 and idx < MAX_NODES\n+            port = p2p_port(MAX_NODES-idx)\n+        if addr is None:\n+            addr = '127.0.0.1'\n+        coroutine = cls.create_server(addr, port, callback, p2p)\n+        cls.network_event_loop.call_soon_threadsafe(cls.network_event_loop.create_task, coroutine)\n+\n+    @classmethod\n+    def peer_listener(cls, addr, port):\n+        def pl():\n+            x = cls.protos.get((addr,port))\n+            cls.protos[(addr,port)] = None\n+            return x\n+        return pl\n+\n+    @classmethod\n+    async def create_server(cls, addr, port, callback, proto):\n+        if (addr, port) not in cls.listeners:\n+            listener = await cls.network_event_loop.create_server(cls.peer_listener(addr, port), addr, port)\n+            logger.debug(\"Listening server on %s:%d should be started\" % (addr, port))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492419398",
      "id" : 492419398,
      "in_reply_to_id" : 478611513,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQxOTM5OA==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 576,
      "original_position" : 129,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 493066784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492419398",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492419476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492419476"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T00:35:26Z",
      "diff_hunk" : "@@ -288,6 +288,15 @@ class CConnman\n     bool RemoveAddedNode(const std::string& node);\n     std::vector<AddedNodeInfo> GetAddedNodeInfo();\n \n+    /**\n+     * Attempts to open a connection.\n+     *\n+     * @param[in]   address     Address of node to try connecting to\n+     * @param[in]   conn_type   ConnectionType::OUTBOUND or ConnectionType::BLOCK_RELAY\n+     * @return      bool        Returns false if at max connection capacity\n+     */\n+    bool AddConnection(const std::string& address, const ConnectionType conn_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492419476",
      "id" : 492419476,
      "in_reply_to_id" : 479284359,
      "line" : 339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQxOTQ3Ng==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 339,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 11,
      "pull_request_review_id" : 493066866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492419476",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492419538"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492419538"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T00:35:43Z",
      "diff_hunk" : "@@ -298,18 +310,27 @@ def __init__(self):\n         # The network services received from the peer\n         self.nServices = 0\n \n+    def peer_connect_send_version(self, services):\n+        # Send a version msg\n+        vt = msg_version()\n+        vt.nServices = services\n+        vt.addrTo.ip = self.dstaddr\n+        vt.addrTo.port = self.dstport\n+        vt.addrFrom.ip = \"0.0.0.0\"\n+        vt.addrFrom.port = 0\n+        self.on_connection_send_msg = vt  # Will be sent soon after connection_made",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492419538",
      "id" : 492419538,
      "in_reply_to_id" : 479293812,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQxOTUzOA==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 321,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 493066942,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492419538",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492419934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492419934"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done\r\n\r\nTIL about the closing \"\"\" on a newline. looks like quite a lot of our docstrings don't follow this convention ð",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T00:37:26Z",
      "diff_hunk" : "@@ -542,6 +542,30 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n \n         return p2p_conn\n \n+    def add_outbound_p2p_connection(self, p2p_conn, *, connection_type=\"outbound\", connect_id=0, **kwargs):\n+        \"\"\" Add an outbound p2p connection from node. Either\n+        full-relay(\"outbound\") or block-relay-only(\"blockrelay\") connection.\n+\n+        This method adds the p2p connection to the self.p2ps list and also\n+        returns the connection to the caller.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492419934",
      "id" : 492419934,
      "in_reply_to_id" : 479303202,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQxOTkzNA==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 550,
      "original_position" : 18,
      "original_start_line" : 546,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : null,
      "pull_request_review_id" : 493067399,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492419934",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492421394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492421394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah, I know I could inline but I separated it into its own variable in an attempt to emphasize that this is where the actual work happens since it gets compiled out anyways. so I don't think the `const` does anything, but I threw it in there anyways",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T00:43:48Z",
      "diff_hunk" : "@@ -282,6 +283,61 @@ static UniValue addnode(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue addconnection(const JSONRPCRequest& request)\n+{\n+    const RPCHelpMan help{\"addconnection\",\n+        \"\\nOpen an outbound connection to a specified node (test only)\",\n+        {\n+            {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP address and port to attempt connecting to.\"},\n+            {\"connectiontype\", RPCArg::Type::STR, RPCArg::Optional::NO, \"'outbound' or 'blockrelay'\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                { RPCResult::Type::STR, \"address\", \"Address of newly added connection.\" },\n+                { RPCResult::Type::STR, \"connectiontype\", \"Type of connection opened.\" },\n+            }},\n+        RPCExamples{\n+            HelpExampleCli(\"addconnection\", \"\\\"192.168.0.6:8333\\\" \\\"outbound\\\"\")\n+            + HelpExampleRpc(\"addconnection\", \"\\\"192.168.0.6:8333\\\" \\\"outbound\\\"\")\n+        },\n+    };\n+\n+    help.Check(request);\n+\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"addconnection is for regression testing (-regtest mode) only\");\n+    }\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VSTR});\n+    const std::string address = request.params[0].get_str();\n+    const std::string conn_type_in = request.params[1].get_str();\n+    ConnectionType conn_type{};\n+    if (conn_type_in == \"outbound\") {\n+        conn_type = ConnectionType::OUTBOUND;\n+    } else if (conn_type_in == \"blockrelay\") {\n+        conn_type = ConnectionType::BLOCK_RELAY;\n+    } else {\n+        throw std::runtime_error(help.ToString());\n+    }\n+\n+    NodeContext& context = EnsureNodeContext(request.context);\n+    if (!context.connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    bool success = context.connman->AddConnection(address, conn_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492421394",
      "id" : 492421394,
      "in_reply_to_id" : 479312039,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyMTM5NA==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 329,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/rpc/net.cpp",
      "position" : null,
      "pull_request_review_id" : 493068983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492421394",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492421519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492421519"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yup, resetting to clean state for next test",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T00:44:19Z",
      "diff_hunk" : "@@ -69,18 +53,58 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492421519",
      "id" : 492421519,
      "in_reply_to_id" : 479354900,
      "line" : 73,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyMTUxOQ==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 73,
      "original_position" : 100,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 105,
      "pull_request_review_id" : 493069106,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492421519",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492421829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492421829"
         }
      },
      "author_association" : "MEMBER",
      "body" : "thanks but I'm a pass. its true that this number is used for block height, but I think index is more accurate to what's passed in, and height is how the index is used",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T00:45:40Z",
      "diff_hunk" : "@@ -69,18 +53,58 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        # bump time forward to ensure nNextInvSend timer pops\n+        self.nodes[0].setmocktime(int(time.time()) + 5)\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n+        self.nodes[0].sendrawtransaction(tx_hex)\n+        conn.sync_with_ping()\n+        assert(int(txid, 16) not in conn.get_invs())\n+\n+    def check_p2p_tx_violation(self, index=1):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492421829",
      "id" : 492421829,
      "in_reply_to_id" : 479358247,
      "line" : 96,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyMTgyOQ==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 96,
      "original_position" : 123,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 128,
      "pull_request_review_id" : 493069429,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492421829",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492422923"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492422923"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't really understand this question- the test is essentially checking that there is a well formed transaction, submits it to the node, then checks if the p2p connection received the transaction. the goal is to isolate (as much as possible) the reason the conn didn't receive the transaction is due to being a block-relay-only connection.",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T00:50:10Z",
      "diff_hunk" : "@@ -69,18 +53,58 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        # bump time forward to ensure nNextInvSend timer pops\n+        self.nodes[0].setmocktime(int(time.time()) + 5)\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492422923",
      "id" : 492422923,
      "in_reply_to_id" : 479353496,
      "line" : 91,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyMjkyMw==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 91,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 123,
      "pull_request_review_id" : 493070575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492422923",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492424295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492424295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "sounds good for a future PR ðð½\r\n\r\ngoing to resolve this conversation to keep the review comments focused on these changes ",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T00:55:45Z",
      "diff_hunk" : "@@ -1069,6 +1069,29 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     RandAddEvent((uint32_t)id);\n }\n \n+bool CConnman::AddConnection(const std::string& address)\n+{\n+    int nOutboundFullRelay = 0;\n+\n+    {\n+        LOCK(cs_vNodes);\n+        for (const CNode* pnode : vNodes) {\n+            if (pnode->m_conn_type == ConnectionType::OUTBOUND) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492424295",
      "id" : 492424295,
      "in_reply_to_id" : 488821301,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyNDI5NQ==",
      "original_commit_id" : "07dd3ba792bf25eb7e24833393406f559f68e8fb",
      "original_line" : 1079,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 493071925,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492424295",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492426039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492426039"
         }
      },
      "author_association" : "MEMBER",
      "body" : "hm, yeah those are the main behavioral checks for the block-relay-only connection, but there are also tests for blocks-only mode. the checks seem pretty well documented in the test logs (`self.log.info`), is there a particular reason you'd find them helpful here as well? ",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T01:03:51Z",
      "diff_hunk" : "@@ -2,15 +2,16 @@\n # Copyright (c) 2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test p2p blocksonly\"\"\"\n+\"\"\"Test p2p blocksonly mode & block-relay-only connections.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492426039",
      "id" : 492426039,
      "in_reply_to_id" : 488823128,
      "line" : 5,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyNjAzOQ==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 7,
      "pull_request_review_id" : 493073850,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492426039",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "thank you for all of this awesome feedback! ðð½\r\n\r\nand CI is green! ðð¼  \r\nthis PR is ready for the next round of review :) \r\n\r\nsome updates since last time: \r\n- rebased onto master \r\n- reworked the port logic (as described [here](https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492419398)) \r\n- removed the `dstport` and `dstaddr` from `add_outbound_p2p_connection` & `peer_accept_connection` flow. It wasn't actually being set there because we don't know the port until its assigned in `NetworkThread.listen`, so this felt misleading.\r\n- added logic so `add_outbound_p2p_connection` is maintaining the connection index rather than requiring tests to manually manage.\r\n- added a test `p2p_add_connections` that sanity checks the behaviors of the test framework functionality \r\n\r\nopen questions / next steps: \r\n- RE `dstport` & `dstaddr`: right now, there is some awkward logging in `P2PConnection#connection_made`. Since `dstaddr` and `dstport` aren't able to be properly populated, if you run the tests you see `Connected & Listening: 0:0`. One option is to just have the logging behind an if statement that checks if there is a real value there, but I'd prefer a cleaner solution. I'll continue looking at it, but welcome any review suggestions. @MarcoFalke seems like you introduced these methods, do you have any ideas? \r\n\r\n- RE managing the connection index: I currently have added a `p2p_conn_index` field to `TestNode` to allow it to manage the index of various connections. I find it nicer for the test to not have to worry about keeping track & passing through the correct value. However, in an offline conversation with @ajtowns he expressed the preference towards having it be explicit, in favor of transparency and easier-to-debug failure scenarios. I'm curious what others think. I'm happy to switch back to tests managing index if that's preferable. \r\n\r\n- currently unsupported use case: with the node managing the index via a simple increment, there isn't the ability to reconnect to the same, existing P2P connection. two options for fixing this are 1. have test manage index as mentioned in previous bullet point, or 2. allow optionally passing through the index to `add_outbound_p2p_connection` for that circumstance. I don't currently have any examples of why we'd need to do this, so I've been more focused on getting the base cases working, but wanted to mention incase I should reprioritize / incorporate. \r\n\r\n- documentation: this stuff is complex. I've spent a long while trying to wrap my head around the mechanisms, and have to revisit often to really understand. I'm working on adding more documentation to hopefully make these code paths simpler to understand. \r\n\r\n",
      "created_at" : "2020-09-22T01:57:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-696470826",
      "id" : 696470826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NjQ3MDgyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-22T02:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/696470826",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492821017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492821017"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> does this sound right? cc @MarcoFalke\r\n\r\nno idea ;)\r\n\r\nJust try it and let me know if you run into any problems. If there are bugs in miniwallet, feel free to fix them along the way.",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-22T15:16:42Z",
      "diff_hunk" : "@@ -69,18 +49,55 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n+        self.nodes[0].sendrawtransaction(tx_hex)\n+        conn.sync_with_ping()\n+        assert(txid not in conn.get_invs())\n+\n+    def check_p2p_tx_violation(self, index=1):\n+        self.log.info('Check that txs from P2P are rejected and result in disconnect')\n+        input_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(index), 2)['tx'][0]['txid']\n+        tx = create_transaction(self.nodes[0], input_txid, self.nodes[0].getnewaddress(), amount=50 - 0.001)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r492821017",
      "id" : 492821017,
      "in_reply_to_id" : 473866387,
      "line" : 99,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgyMTAxNw==",
      "original_commit_id" : "e00848600f27c1495ff1bbc5e6aaa3d4f0cf5c95",
      "original_line" : 99,
      "original_position" : 114,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 131,
      "pull_request_review_id" : 493575352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T17:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492821017",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-09-22T21:23:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-696989776",
      "id" : 696989776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5Njk4OTc3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-22T21:23:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/696989776",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-09-23T18:21:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-697833357",
      "id" : 697833357,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzgzMzM1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T18:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697833357",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-09-25T14:11:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-698952206",
      "id" : 698952206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5ODk1MjIwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-25T14:11:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/698952206",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r495517956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495517956"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hm, I guess I found it odd because `sendrawtransaction` will throw a JSONRPCError if validation fails just like `testmempoolaccept` would return False. I don't think they'd have different results unless mempool changes in between calls or something. So it seems like something unnecessary that the test needs to pass. It doesn't make the test incorrect or anything ofc, just seemed peculiar",
      "commit_id" : "b489886b533809c9a4ee2643ceba7d34c278e03e",
      "created_at" : "2020-09-27T02:27:51Z",
      "diff_hunk" : "@@ -69,18 +53,58 @@ def run_test(self):\n         peer_2_info = self.nodes[0].getpeerinfo()[1]\n         assert_equal(peer_2_info['whitelisted'], True)\n         assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool', 'download'])\n-        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n-        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)\n \n         self.log.info('Check that the tx from forcerelay first_peer is relayed to others (ie.second_peer)')\n         with self.nodes[0].assert_debug_log([\"received getdata\"]):\n-            first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+            first_peer.send_message(msg_tx(tx))\n             self.log.info('Check that the forcerelay peer is still connected after sending the transaction')\n             assert_equal(first_peer.is_connected, True)\n             second_peer.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n         self.log.info(\"Forcerelay peer's transaction is accepted and relayed\")\n \n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].generate(1)\n+\n+    def blocks_relay_conn_tests(self):\n+        self.log.info('Tests with node in normal mode with block-relay-only connections')\n+        self.restart_node(0, [\"-noblocksonly\"])  # disables blocks only mode\n+        assert_equal(self.nodes[0].getnetworkinfo()['localrelay'], True)\n+\n+        # Ensure we disconnect if a block-relay-only connection sends us a transaction\n+        self.nodes[0].add_outbound_p2p_connection(P2PInterface(), connection_type=\"blockrelay\")\n+        assert_equal(self.nodes[0].getpeerinfo()[0]['relaytxes'], False)\n+        _, txid, tx_hex = self.check_p2p_tx_violation(index=2)\n+\n+        self.log.info(\"Check that txs from RPC are not sent to blockrelay connection\")\n+        conn = self.nodes[0].add_outbound_p2p_connection(P2PTxInvStore(), connection_type=\"blockrelay\")\n+\n+        # bump time forward to ensure nNextInvSend timer pops\n+        self.nodes[0].setmocktime(int(time.time()) + 5)\n+\n+        assert_equal(self.nodes[0].testmempoolaccept([tx_hex])[0]['allowed'], True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19315#discussion_r495517956",
      "id" : 495517956,
      "in_reply_to_id" : 479353496,
      "line" : 91,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNzk1Ng==",
      "original_commit_id" : "3bb87e7fb200637e61d25f07ce20672081fad4ab",
      "original_line" : 91,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "test/functional/p2p_blocksonly.py",
      "position" : 123,
      "pull_request_review_id" : 497044375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-27T02:29:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495517956",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   }
]
