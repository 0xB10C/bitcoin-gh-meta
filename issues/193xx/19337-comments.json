[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-06-20T13:54:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-646998291",
      "id" : 646998291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Njk5ODI5MQ==",
      "updated_at" : "2020-06-20T13:54:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646998291",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r443132759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443132759"
         }
      },
      "author_association" : "MEMBER",
      "body" : "no need to add dead code or code that is only used in tests",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-06-20T13:54:46Z",
      "diff_hunk" : "@@ -166,10 +206,16 @@ static void pop_lock()\n     }\n }\n \n-void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)\n+template <typename MutexType>\n+void EnterCritical(const char* pszName, const char* pszFile, int nLine, MutexType* cs, bool fTry)\n {\n     push_lock(cs, CLockLocation(pszName, pszFile, nLine, fTry, util::ThreadGetInternalName()));\n }\n+template void EnterCritical(const char*, const char*, int, Mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, RecursiveMutex*, bool);\n+template void EnterCritical(const char*, const char*, int, std::mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, std::recursive_mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, boost::mutex*, bool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r443132759",
      "id" : 443132759,
      "line" : 225,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzMjc1OQ==",
      "original_commit_id" : "401d3b759e14a96332a033485257d2e993c2b944",
      "original_line" : 225,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 84,
      "pull_request_review_id" : 434429994,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443132759",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r443133836"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443133836"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "These instantiations are required even if tests do not exist. Without them it wouldn't link with errors like:\r\n```\r\nld: error: undefined symbol: void EnterCritical<boost::mutex>(char const*, char const*, int, boost::mutex*, bool)\r\n>>> referenced by checkqueue.h:184 (src/checkqueue.h:184)\r\n>>>               libbitcoin_server_a-validation.o:(CCheckQueueControl<CScriptCheck>::CCheckQueueControl(CCheckQueue<CScriptCheck>*)) in archive libbitcoin_server.a\r\n```",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-06-20T14:10:45Z",
      "diff_hunk" : "@@ -166,10 +206,16 @@ static void pop_lock()\n     }\n }\n \n-void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)\n+template <typename MutexType>\n+void EnterCritical(const char* pszName, const char* pszFile, int nLine, MutexType* cs, bool fTry)\n {\n     push_lock(cs, CLockLocation(pszName, pszFile, nLine, fTry, util::ThreadGetInternalName()));\n }\n+template void EnterCritical(const char*, const char*, int, Mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, RecursiveMutex*, bool);\n+template void EnterCritical(const char*, const char*, int, std::mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, std::recursive_mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, boost::mutex*, bool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r443133836",
      "id" : 443133836,
      "in_reply_to_id" : 443132759,
      "line" : 225,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzMzgzNg==",
      "original_commit_id" : "401d3b759e14a96332a033485257d2e993c2b944",
      "original_line" : 225,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 84,
      "pull_request_review_id" : 434430918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443133836",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r443134518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443134518"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, this is solved in #18710 :)\r\n\r\nEDIT: I mean `boost::mutex`",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-06-20T14:20:32Z",
      "diff_hunk" : "@@ -166,10 +206,16 @@ static void pop_lock()\n     }\n }\n \n-void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)\n+template <typename MutexType>\n+void EnterCritical(const char* pszName, const char* pszFile, int nLine, MutexType* cs, bool fTry)\n {\n     push_lock(cs, CLockLocation(pszName, pszFile, nLine, fTry, util::ThreadGetInternalName()));\n }\n+template void EnterCritical(const char*, const char*, int, Mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, RecursiveMutex*, bool);\n+template void EnterCritical(const char*, const char*, int, std::mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, std::recursive_mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, boost::mutex*, bool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r443134518",
      "id" : 443134518,
      "in_reply_to_id" : 443132759,
      "line" : 225,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzNDUxOA==",
      "original_commit_id" : "401d3b759e14a96332a033485257d2e993c2b944",
      "original_line" : 225,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 84,
      "pull_request_review_id" : 434431505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443134518",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Travis error:\r\n- https://travis-ci.org/github/bitcoin/bitcoin/jobs/700351407#L4430",
      "created_at" : "2020-06-20T14:53:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-647005655",
      "id" : 647005655,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzAwNTY1NQ==",
      "updated_at" : "2020-06-20T14:53:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647005655",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Travis error:\r\n> \r\n>  - https://travis-ci.org/github/bitcoin/bitcoin/jobs/700351407#L4430\r\n\r\nIt is reliably reproducible locally.",
      "created_at" : "2020-06-20T15:33:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-647010420",
      "id" : 647010420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzAxMDQyMA==",
      "updated_at" : "2020-06-20T15:33:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647010420",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > Travis error:\r\n> > \r\n> > * https://travis-ci.org/github/bitcoin/bitcoin/jobs/700351407#L4430\r\n> \r\n> It is reliably reproducible locally.\r\n\r\n@vasild \r\n~idk exactly why but~ moving the `potential_deadlock_detected` test case to the end fixes the problem.\r\n\r\nUPDATE: at the end of the `potential_deadlock_detected` test case the lock stack is not empty.",
      "created_at" : "2020-06-20T15:48:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-647012158",
      "id" : 647012158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzAxMjE1OA==",
      "updated_at" : "2020-06-20T15:58:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647012158",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Travis error:\r\n> \r\n>     * https://travis-ci.org/github/bitcoin/bitcoin/jobs/700351407#L4430\r\n\r\nFixed in #19340.",
      "created_at" : "2020-06-20T20:27:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-647042058",
      "id" : 647042058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzA0MjA1OA==",
      "updated_at" : "2020-06-20T20:27:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647042058",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19340 (Preserve the `LockData` initial state if \"potential deadlock detected\" exception thrown by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-06-20T22:06:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-647050462",
      "id" : 647050462,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzA1MDQ2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-02T15:28:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647050462",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-06-21T18:32:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-647164552",
      "id" : 647164552,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzE2NDU1Mg==",
      "updated_at" : "2020-06-21T18:32:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647164552",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r443355827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443355827"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "So when these two PRs meet and if that was the last usage of `boost::mutex`, then this line can be removed: `template void EnterCritical(const char*, const char*, int, boost::mutex*, bool);`.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-06-22T07:07:48Z",
      "diff_hunk" : "@@ -166,10 +206,16 @@ static void pop_lock()\n     }\n }\n \n-void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)\n+template <typename MutexType>\n+void EnterCritical(const char* pszName, const char* pszFile, int nLine, MutexType* cs, bool fTry)\n {\n     push_lock(cs, CLockLocation(pszName, pszFile, nLine, fTry, util::ThreadGetInternalName()));\n }\n+template void EnterCritical(const char*, const char*, int, Mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, RecursiveMutex*, bool);\n+template void EnterCritical(const char*, const char*, int, std::mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, std::recursive_mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, boost::mutex*, bool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r443355827",
      "id" : 443355827,
      "in_reply_to_id" : 443132759,
      "line" : 225,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1NTgyNw==",
      "original_commit_id" : "401d3b759e14a96332a033485257d2e993c2b944",
      "original_line" : 225,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 84,
      "pull_request_review_id" : 434653385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443355827",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nNice!",
      "created_at" : "2020-06-22T09:00:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-647384558",
      "id" : 647384558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzM4NDU1OA==",
      "updated_at" : "2020-06-22T09:00:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647384558",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">     * could place boost headers into a separate group\r\n\r\nDone.\r\n \r\n>     * in commit [401d3b7](https://github.com/bitcoin/bitcoin/commit/401d3b759e14a96332a033485257d2e993c2b944) message \"... would produce an undefined behavior\" -- mind rewording \"would\" -> \"is\"\r\n\r\nDone.\r\n \r\n>     * could use unnamed namespace instead of `static`\r\n\r\nThe rest of the functions in the file use `static`, so for consistency I also used `static` in the newly introduced function. Maybe replace all `static` with an unnamed namespace in `sync.cpp`? If yes, then that would go as a separate commit, or maybe even a separate PR.\r\n\r\nReviewers: this PR exposed an existent deficiency which is fixed in https://github.com/bitcoin/bitcoin/pull/19340.",
      "created_at" : "2020-06-22T10:17:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-647424861",
      "id" : 647424861,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzQyNDg2MQ==",
      "updated_at" : "2020-06-22T10:17:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647424861",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I converted this PR to \"draft\" so that it does not get merged accidentally. CI tests passed this time! I guess the order in which the tests are executed matters. https://github.com/bitcoin/bitcoin/pull/19340 will fix that and should be merged before this PR.",
      "created_at" : "2020-06-22T11:04:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-647446864",
      "id" : 647446864,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzQ0Njg2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-06-22T11:04:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647446864",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild \r\n> I converted this PR to \"draft\" so that it does not get merged accidentally. CI tests passed this time! I guess the order in which the tests are executed matters. #19340 will fix that and should be merged before this PR.\r\n\r\n#19340 is merged :)\r\n",
      "created_at" : "2020-08-04T15:06:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-668652306",
      "id" : 668652306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODY1MjMwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-04T15:06:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668652306",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Reopened this PR now that #19340 is merged and rebased to resolve a conflict.",
      "created_at" : "2020-08-05T07:51:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-669040717",
      "id" : 669040717,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19337",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTA0MDcxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T07:51:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669040717",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465550425"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465550425"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    LEAVE_CRITICAL_SECTION(m);\r\n    BOOST_CHECK(LockStackEmpty());\r\n```",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T08:09:42Z",
      "diff_hunk" : "@@ -29,6 +32,36 @@ void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\n     BOOST_CHECK(!error_thrown);\n     #endif\n }\n+\n+#ifdef DEBUG_LOCKORDER\n+template <typename MutexType>\n+void TestDoubleLock2(MutexType& m)\n+{\n+    ENTER_CRITICAL_SECTION(m);\n+    LEAVE_CRITICAL_SECTION(m);\n+}\n+\n+template <typename MutexType>\n+void TestDoubleLock(bool should_throw)\n+{\n+    const bool prev = g_debug_lockorder_abort;\n+    g_debug_lockorder_abort = false;\n+\n+    MutexType m;\n+    ENTER_CRITICAL_SECTION(m);\n+    if (should_throw) {\n+        BOOST_CHECK_EXCEPTION(\n+            TestDoubleLock2(m), std::logic_error, [](const std::logic_error& e) {\n+                return strcmp(e.what(), \"double lock detected\") == 0;\n+            });\n+    } else {\n+        BOOST_CHECK_NO_THROW(TestDoubleLock2(m));\n+    }\n+    LEAVE_CRITICAL_SECTION(m);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465550425",
      "id" : 465550425,
      "line" : 60,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU1MDQyNQ==",
      "original_commit_id" : "c269e0a22423294b81c7a60862bc20f6ccf80f1c",
      "original_line" : 60,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/test/sync_tests.cpp",
      "position" : 39,
      "pull_request_review_id" : 461435804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465550425",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465556579"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465556579"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done!",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T08:20:48Z",
      "diff_hunk" : "@@ -29,6 +32,36 @@ void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\n     BOOST_CHECK(!error_thrown);\n     #endif\n }\n+\n+#ifdef DEBUG_LOCKORDER\n+template <typename MutexType>\n+void TestDoubleLock2(MutexType& m)\n+{\n+    ENTER_CRITICAL_SECTION(m);\n+    LEAVE_CRITICAL_SECTION(m);\n+}\n+\n+template <typename MutexType>\n+void TestDoubleLock(bool should_throw)\n+{\n+    const bool prev = g_debug_lockorder_abort;\n+    g_debug_lockorder_abort = false;\n+\n+    MutexType m;\n+    ENTER_CRITICAL_SECTION(m);\n+    if (should_throw) {\n+        BOOST_CHECK_EXCEPTION(\n+            TestDoubleLock2(m), std::logic_error, [](const std::logic_error& e) {\n+                return strcmp(e.what(), \"double lock detected\") == 0;\n+            });\n+    } else {\n+        BOOST_CHECK_NO_THROW(TestDoubleLock2(m));\n+    }\n+    LEAVE_CRITICAL_SECTION(m);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465556579",
      "id" : 465556579,
      "in_reply_to_id" : 465550425,
      "line" : 60,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU1NjU3OQ==",
      "original_commit_id" : "c269e0a22423294b81c7a60862bc20f6ccf80f1c",
      "original_line" : 60,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/test/sync_tests.cpp",
      "position" : 39,
      "pull_request_review_id" : 461443685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465556579",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465562495"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465562495"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Couldn't this use `LOCK(m)`, since `ENTER_CRITICAL_SECTION` is mostly only used internally to the sync module and other code used `LOCK`",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T08:30:37Z",
      "diff_hunk" : "@@ -29,6 +32,38 @@ void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\n     BOOST_CHECK(!error_thrown);\n     #endif\n }\n+\n+#ifdef DEBUG_LOCKORDER\n+template <typename MutexType>\n+void TestDoubleLock2(MutexType& m)\n+{\n+    ENTER_CRITICAL_SECTION(m);\n+    LEAVE_CRITICAL_SECTION(m);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465562495",
      "id" : 465562495,
      "line" : 41,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MjQ5NQ==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 41,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/test/sync_tests.cpp",
      "position" : 20,
      "pull_request_review_id" : 461451261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465562495",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465562816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465562816"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    {\r\n        LOCK(m);\r\n```\r\n\r\nSame here. Should be equivalent?",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T08:31:06Z",
      "diff_hunk" : "@@ -29,6 +32,38 @@ void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\n     BOOST_CHECK(!error_thrown);\n     #endif\n }\n+\n+#ifdef DEBUG_LOCKORDER\n+template <typename MutexType>\n+void TestDoubleLock2(MutexType& m)\n+{\n+    ENTER_CRITICAL_SECTION(m);\n+    LEAVE_CRITICAL_SECTION(m);\n+}\n+\n+template <typename MutexType>\n+void TestDoubleLock(bool should_throw)\n+{\n+    const bool prev = g_debug_lockorder_abort;\n+    g_debug_lockorder_abort = false;\n+\n+    MutexType m;\n+    ENTER_CRITICAL_SECTION(m);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465562816",
      "id" : 465562816,
      "line" : 51,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MjgxNg==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 51,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/test/sync_tests.cpp",
      "position" : 30,
      "pull_request_review_id" : 461451261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465562816",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465563801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465563801"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could limit the `#ifdef DEBUG_LOCKORDER` to just this one line/statement? Benefit would be that `BOOST_CHECK_NO_THROW` will be run for non-debug builds as well.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T08:32:54Z",
      "diff_hunk" : "@@ -29,6 +32,38 @@ void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\n     BOOST_CHECK(!error_thrown);\n     #endif\n }\n+\n+#ifdef DEBUG_LOCKORDER\n+template <typename MutexType>\n+void TestDoubleLock2(MutexType& m)\n+{\n+    ENTER_CRITICAL_SECTION(m);\n+    LEAVE_CRITICAL_SECTION(m);\n+}\n+\n+template <typename MutexType>\n+void TestDoubleLock(bool should_throw)\n+{\n+    const bool prev = g_debug_lockorder_abort;\n+    g_debug_lockorder_abort = false;\n+\n+    MutexType m;\n+    ENTER_CRITICAL_SECTION(m);\n+    if (should_throw) {\n+        BOOST_CHECK_EXCEPTION(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465563801",
      "id" : 465563801,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MzgwMQ==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 53,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/test/sync_tests.cpp",
      "position" : 32,
      "pull_request_review_id" : 461451261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465563801",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465567687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465567687"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would be nice if the `potential_deadlock_detected` and `double_lock_detected` helpers used the same style to pop_back the just added lock. (Either pass in a mutable reference or create a copy)",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T08:39:41Z",
      "diff_hunk" : "@@ -135,16 +139,53 @@ static void potential_deadlock_detected(const LockPair& mismatch, const LockStac\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\n }\n \n-static void push_lock(void* c, const CLockLocation& locklocation)\n+static void double_lock_detected(const void* mutex, LockStack& lock_stack)\n {\n+    LogPrintf(\"DOUBLE LOCK DETECTED\\n\");\n+    LogPrintf(\"Lock order:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        if (i.first == mutex) {\n+            LogPrintf(\" (*)\"); /* Continued */\n+        }\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    // We throw or abort() here, never actually locking the mutex. So remove the entry\n+    // from the lock stack which we just added in push_lock(). Tests in sync_tests.cpp\n+    // continue executing past the exception and we don't want one test to leave a\n+    // bricked stack for a subsequent test that could execute in the same thread.\n+    lock_stack.pop_back();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465567687",
      "id" : 465567687,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2NzY4Nw==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 156,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : null,
      "pull_request_review_id" : 461451261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465567687",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465568870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465568870"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        std::abort();\r\n```\r\n\r\nShould be the same symbol, but slightly clearer.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T08:41:38Z",
      "diff_hunk" : "@@ -135,16 +139,53 @@ static void potential_deadlock_detected(const LockPair& mismatch, const LockStac\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\n }\n \n-static void push_lock(void* c, const CLockLocation& locklocation)\n+static void double_lock_detected(const void* mutex, LockStack& lock_stack)\n {\n+    LogPrintf(\"DOUBLE LOCK DETECTED\\n\");\n+    LogPrintf(\"Lock order:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        if (i.first == mutex) {\n+            LogPrintf(\" (*)\"); /* Continued */\n+        }\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    // We throw or abort() here, never actually locking the mutex. So remove the entry\n+    // from the lock stack which we just added in push_lock(). Tests in sync_tests.cpp\n+    // continue executing past the exception and we don't want one test to leave a\n+    // bricked stack for a subsequent test that could execute in the same thread.\n+    lock_stack.pop_back();\n+    if (g_debug_lockorder_abort) {\n+        tfm::format(std::cerr, \"Assertion failed: detected double lock at %s:%i, details in debug log.\\n\", __FILE__, __LINE__);\n+        abort();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465568870",
      "id" : 465568870,
      "line" : 154,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2ODg3MA==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 154,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 32,
      "pull_request_review_id" : 461451261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465568870",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465587721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465587721"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There's more cases of s/abort()/std::abort so a follow up to to do this is also fine.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T09:14:43Z",
      "diff_hunk" : "@@ -135,16 +139,53 @@ static void potential_deadlock_detected(const LockPair& mismatch, const LockStac\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\n }\n \n-static void push_lock(void* c, const CLockLocation& locklocation)\n+static void double_lock_detected(const void* mutex, LockStack& lock_stack)\n {\n+    LogPrintf(\"DOUBLE LOCK DETECTED\\n\");\n+    LogPrintf(\"Lock order:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        if (i.first == mutex) {\n+            LogPrintf(\" (*)\"); /* Continued */\n+        }\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    // We throw or abort() here, never actually locking the mutex. So remove the entry\n+    // from the lock stack which we just added in push_lock(). Tests in sync_tests.cpp\n+    // continue executing past the exception and we don't want one test to leave a\n+    // bricked stack for a subsequent test that could execute in the same thread.\n+    lock_stack.pop_back();\n+    if (g_debug_lockorder_abort) {\n+        tfm::format(std::cerr, \"Assertion failed: detected double lock at %s:%i, details in debug log.\\n\", __FILE__, __LINE__);\n+        abort();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465587721",
      "id" : 465587721,
      "in_reply_to_id" : 465568870,
      "line" : 154,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4NzcyMQ==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 154,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 32,
      "pull_request_review_id" : 461483926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465587721",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465592482"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465592482"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Add `assert(false)` after this? Or some other \"unreachable\" assertion. Below, after `potential_deadlock_detected()` there's a comment, could also add the assertion there.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T09:22:53Z",
      "diff_hunk" : "@@ -135,16 +139,53 @@ static void potential_deadlock_detected(const LockPair& mismatch, const LockStac\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\n }\n \n-static void push_lock(void* c, const CLockLocation& locklocation)\n+static void double_lock_detected(const void* mutex, LockStack& lock_stack)\n {\n+    LogPrintf(\"DOUBLE LOCK DETECTED\\n\");\n+    LogPrintf(\"Lock order:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        if (i.first == mutex) {\n+            LogPrintf(\" (*)\"); /* Continued */\n+        }\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    // We throw or abort() here, never actually locking the mutex. So remove the entry\n+    // from the lock stack which we just added in push_lock(). Tests in sync_tests.cpp\n+    // continue executing past the exception and we don't want one test to leave a\n+    // bricked stack for a subsequent test that could execute in the same thread.\n+    lock_stack.pop_back();\n+    if (g_debug_lockorder_abort) {\n+        tfm::format(std::cerr, \"Assertion failed: detected double lock at %s:%i, details in debug log.\\n\", __FILE__, __LINE__);\n+        abort();\n+    }\n+    throw std::logic_error(\"double lock detected\");\n+}\n+\n+template <typename MutexType>\n+static void push_lock(MutexType* c, const CLockLocation& locklocation)\n+{\n+    constexpr bool is_recursive_mutex =\n+        std::is_base_of<RecursiveMutex, MutexType>::value ||\n+        std::is_base_of<std::recursive_mutex, MutexType>::value;\n+\n     LockData& lockdata = GetLockData();\n     std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n \n     LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n     lock_stack.emplace_back(c, locklocation);\n-    for (const LockStackItem& i : lock_stack) {\n-        if (i.first == c)\n-            break;\n+    for (size_t j = 0; j < lock_stack.size() - 1; ++j) {\n+        const LockStackItem& i = lock_stack[j];\n+\n+        if (i.first == c) {\n+            if (is_recursive_mutex) {\n+                break;\n+            }\n+            // It is not a recursive mutex and it appears in the stack two times:\n+            // at position `j` and at the end (which we added just before this loop).\n+            // Can't allow locking the same (non-recursive) mutex two times from the\n+            // same thread as that results in an undefined behavior.\n+            double_lock_detected(c, lock_stack);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465592482",
      "id" : 465592482,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MjQ4Mg==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 187,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : null,
      "pull_request_review_id" : 461483926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465592482",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465593530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465593530"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could keep range loop? When `lock_stack` is changed the iteration stops.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T09:24:45Z",
      "diff_hunk" : "@@ -135,16 +139,53 @@ static void potential_deadlock_detected(const LockPair& mismatch, const LockStac\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\n }\n \n-static void push_lock(void* c, const CLockLocation& locklocation)\n+static void double_lock_detected(const void* mutex, LockStack& lock_stack)\n {\n+    LogPrintf(\"DOUBLE LOCK DETECTED\\n\");\n+    LogPrintf(\"Lock order:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        if (i.first == mutex) {\n+            LogPrintf(\" (*)\"); /* Continued */\n+        }\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    // We throw or abort() here, never actually locking the mutex. So remove the entry\n+    // from the lock stack which we just added in push_lock(). Tests in sync_tests.cpp\n+    // continue executing past the exception and we don't want one test to leave a\n+    // bricked stack for a subsequent test that could execute in the same thread.\n+    lock_stack.pop_back();\n+    if (g_debug_lockorder_abort) {\n+        tfm::format(std::cerr, \"Assertion failed: detected double lock at %s:%i, details in debug log.\\n\", __FILE__, __LINE__);\n+        abort();\n+    }\n+    throw std::logic_error(\"double lock detected\");\n+}\n+\n+template <typename MutexType>\n+static void push_lock(MutexType* c, const CLockLocation& locklocation)\n+{\n+    constexpr bool is_recursive_mutex =\n+        std::is_base_of<RecursiveMutex, MutexType>::value ||\n+        std::is_base_of<std::recursive_mutex, MutexType>::value;\n+\n     LockData& lockdata = GetLockData();\n     std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n \n     LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n     lock_stack.emplace_back(c, locklocation);\n-    for (const LockStackItem& i : lock_stack) {\n-        if (i.first == c)\n-            break;\n+    for (size_t j = 0; j < lock_stack.size() - 1; ++j) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465593530",
      "id" : 465593530,
      "line" : 171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MzUzMA==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 171,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 52,
      "pull_request_review_id" : 461483926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465593530",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465691861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465691861"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`LOCK(m)` does not compile if `m` is `std::mutex`:\r\n\r\n```\r\nsrc/sync.h:132:59: error: no type named 'UniqueLock' in 'std::__1::mutex'\r\ntemplate <typename Mutex, typename Base = typename Mutex::UniqueLock>\r\n                                          ~~~~~~~~~~~~~~~~^~~~~~~~~~\r\n```",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T12:32:44Z",
      "diff_hunk" : "@@ -29,6 +32,38 @@ void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\n     BOOST_CHECK(!error_thrown);\n     #endif\n }\n+\n+#ifdef DEBUG_LOCKORDER\n+template <typename MutexType>\n+void TestDoubleLock2(MutexType& m)\n+{\n+    ENTER_CRITICAL_SECTION(m);\n+    LEAVE_CRITICAL_SECTION(m);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465691861",
      "id" : 465691861,
      "in_reply_to_id" : 465562495,
      "line" : 41,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY5MTg2MQ==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 41,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/test/sync_tests.cpp",
      "position" : 20,
      "pull_request_review_id" : 461617580,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465691861",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465693124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465693124"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same [as above](https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465691861) - it does not compile.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T12:35:03Z",
      "diff_hunk" : "@@ -29,6 +32,38 @@ void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\n     BOOST_CHECK(!error_thrown);\n     #endif\n }\n+\n+#ifdef DEBUG_LOCKORDER\n+template <typename MutexType>\n+void TestDoubleLock2(MutexType& m)\n+{\n+    ENTER_CRITICAL_SECTION(m);\n+    LEAVE_CRITICAL_SECTION(m);\n+}\n+\n+template <typename MutexType>\n+void TestDoubleLock(bool should_throw)\n+{\n+    const bool prev = g_debug_lockorder_abort;\n+    g_debug_lockorder_abort = false;\n+\n+    MutexType m;\n+    ENTER_CRITICAL_SECTION(m);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465693124",
      "id" : 465693124,
      "in_reply_to_id" : 465562816,
      "line" : 51,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY5MzEyNA==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 51,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/test/sync_tests.cpp",
      "position" : 30,
      "pull_request_review_id" : 461619254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465693124",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465698117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465698117"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Without `DEBUG_LOCKORDER` we would actually do the double lock and once executed then we are in \"undefined behavior\" state. We don't want to do that because it may randomly crash the test executable, overwrite random portions of memory for the excitement of subsequent tests, etc.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/b1f94072a1cc3ca67ce13658bb981d03480ef38e/src/test/sync_tests.cpp#L93-L95",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T12:43:27Z",
      "diff_hunk" : "@@ -29,6 +32,38 @@ void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\n     BOOST_CHECK(!error_thrown);\n     #endif\n }\n+\n+#ifdef DEBUG_LOCKORDER\n+template <typename MutexType>\n+void TestDoubleLock2(MutexType& m)\n+{\n+    ENTER_CRITICAL_SECTION(m);\n+    LEAVE_CRITICAL_SECTION(m);\n+}\n+\n+template <typename MutexType>\n+void TestDoubleLock(bool should_throw)\n+{\n+    const bool prev = g_debug_lockorder_abort;\n+    g_debug_lockorder_abort = false;\n+\n+    MutexType m;\n+    ENTER_CRITICAL_SECTION(m);\n+    if (should_throw) {\n+        BOOST_CHECK_EXCEPTION(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465698117",
      "id" : 465698117,
      "in_reply_to_id" : 465563801,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY5ODExNw==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 53,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/test/sync_tests.cpp",
      "position" : 32,
      "pull_request_review_id" : 461625668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465698117",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465703371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465703371"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done - used the same as used when calling `potential_deadlock_detected()` in `master` - a copy.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T12:52:06Z",
      "diff_hunk" : "@@ -135,16 +139,53 @@ static void potential_deadlock_detected(const LockPair& mismatch, const LockStac\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\n }\n \n-static void push_lock(void* c, const CLockLocation& locklocation)\n+static void double_lock_detected(const void* mutex, LockStack& lock_stack)\n {\n+    LogPrintf(\"DOUBLE LOCK DETECTED\\n\");\n+    LogPrintf(\"Lock order:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        if (i.first == mutex) {\n+            LogPrintf(\" (*)\"); /* Continued */\n+        }\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    // We throw or abort() here, never actually locking the mutex. So remove the entry\n+    // from the lock stack which we just added in push_lock(). Tests in sync_tests.cpp\n+    // continue executing past the exception and we don't want one test to leave a\n+    // bricked stack for a subsequent test that could execute in the same thread.\n+    lock_stack.pop_back();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465703371",
      "id" : 465703371,
      "in_reply_to_id" : 465567687,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwMzM3MQ==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 156,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : null,
      "pull_request_review_id" : 461632341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465703371",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465704368"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465704368"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I am leaving it as is for consistency with `potential_deadlock_detected()` which uses `abort()`. As @promag says, a subsequent patch could change all occurrences.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T12:53:43Z",
      "diff_hunk" : "@@ -135,16 +139,53 @@ static void potential_deadlock_detected(const LockPair& mismatch, const LockStac\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\n }\n \n-static void push_lock(void* c, const CLockLocation& locklocation)\n+static void double_lock_detected(const void* mutex, LockStack& lock_stack)\n {\n+    LogPrintf(\"DOUBLE LOCK DETECTED\\n\");\n+    LogPrintf(\"Lock order:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        if (i.first == mutex) {\n+            LogPrintf(\" (*)\"); /* Continued */\n+        }\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    // We throw or abort() here, never actually locking the mutex. So remove the entry\n+    // from the lock stack which we just added in push_lock(). Tests in sync_tests.cpp\n+    // continue executing past the exception and we don't want one test to leave a\n+    // bricked stack for a subsequent test that could execute in the same thread.\n+    lock_stack.pop_back();\n+    if (g_debug_lockorder_abort) {\n+        tfm::format(std::cerr, \"Assertion failed: detected double lock at %s:%i, details in debug log.\\n\", __FILE__, __LINE__);\n+        abort();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465704368",
      "id" : 465704368,
      "in_reply_to_id" : 465568870,
      "line" : 154,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwNDM2OA==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 154,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 32,
      "pull_request_review_id" : 461633623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465704368",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465704673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465704673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I added a comment, like done for `potential_deadlock_detected()`.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T12:54:14Z",
      "diff_hunk" : "@@ -135,16 +139,53 @@ static void potential_deadlock_detected(const LockPair& mismatch, const LockStac\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\n }\n \n-static void push_lock(void* c, const CLockLocation& locklocation)\n+static void double_lock_detected(const void* mutex, LockStack& lock_stack)\n {\n+    LogPrintf(\"DOUBLE LOCK DETECTED\\n\");\n+    LogPrintf(\"Lock order:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        if (i.first == mutex) {\n+            LogPrintf(\" (*)\"); /* Continued */\n+        }\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    // We throw or abort() here, never actually locking the mutex. So remove the entry\n+    // from the lock stack which we just added in push_lock(). Tests in sync_tests.cpp\n+    // continue executing past the exception and we don't want one test to leave a\n+    // bricked stack for a subsequent test that could execute in the same thread.\n+    lock_stack.pop_back();\n+    if (g_debug_lockorder_abort) {\n+        tfm::format(std::cerr, \"Assertion failed: detected double lock at %s:%i, details in debug log.\\n\", __FILE__, __LINE__);\n+        abort();\n+    }\n+    throw std::logic_error(\"double lock detected\");\n+}\n+\n+template <typename MutexType>\n+static void push_lock(MutexType* c, const CLockLocation& locklocation)\n+{\n+    constexpr bool is_recursive_mutex =\n+        std::is_base_of<RecursiveMutex, MutexType>::value ||\n+        std::is_base_of<std::recursive_mutex, MutexType>::value;\n+\n     LockData& lockdata = GetLockData();\n     std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n \n     LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n     lock_stack.emplace_back(c, locklocation);\n-    for (const LockStackItem& i : lock_stack) {\n-        if (i.first == c)\n-            break;\n+    for (size_t j = 0; j < lock_stack.size() - 1; ++j) {\n+        const LockStackItem& i = lock_stack[j];\n+\n+        if (i.first == c) {\n+            if (is_recursive_mutex) {\n+                break;\n+            }\n+            // It is not a recursive mutex and it appears in the stack two times:\n+            // at position `j` and at the end (which we added just before this loop).\n+            // Can't allow locking the same (non-recursive) mutex two times from the\n+            // same thread as that results in an undefined behavior.\n+            double_lock_detected(c, lock_stack);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465704673",
      "id" : 465704673,
      "in_reply_to_id" : 465592482,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwNDY3Mw==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 187,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : null,
      "pull_request_review_id" : 461634020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465704673",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465709073"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465709073"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We need to iterate on all but the last element.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T13:01:11Z",
      "diff_hunk" : "@@ -135,16 +139,53 @@ static void potential_deadlock_detected(const LockPair& mismatch, const LockStac\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\n }\n \n-static void push_lock(void* c, const CLockLocation& locklocation)\n+static void double_lock_detected(const void* mutex, LockStack& lock_stack)\n {\n+    LogPrintf(\"DOUBLE LOCK DETECTED\\n\");\n+    LogPrintf(\"Lock order:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        if (i.first == mutex) {\n+            LogPrintf(\" (*)\"); /* Continued */\n+        }\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    // We throw or abort() here, never actually locking the mutex. So remove the entry\n+    // from the lock stack which we just added in push_lock(). Tests in sync_tests.cpp\n+    // continue executing past the exception and we don't want one test to leave a\n+    // bricked stack for a subsequent test that could execute in the same thread.\n+    lock_stack.pop_back();\n+    if (g_debug_lockorder_abort) {\n+        tfm::format(std::cerr, \"Assertion failed: detected double lock at %s:%i, details in debug log.\\n\", __FILE__, __LINE__);\n+        abort();\n+    }\n+    throw std::logic_error(\"double lock detected\");\n+}\n+\n+template <typename MutexType>\n+static void push_lock(MutexType* c, const CLockLocation& locklocation)\n+{\n+    constexpr bool is_recursive_mutex =\n+        std::is_base_of<RecursiveMutex, MutexType>::value ||\n+        std::is_base_of<std::recursive_mutex, MutexType>::value;\n+\n     LockData& lockdata = GetLockData();\n     std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n \n     LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n     lock_stack.emplace_back(c, locklocation);\n-    for (const LockStackItem& i : lock_stack) {\n-        if (i.first == c)\n-            break;\n+    for (size_t j = 0; j < lock_stack.size() - 1; ++j) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465709073",
      "id" : 465709073,
      "in_reply_to_id" : 465593530,
      "line" : 171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwOTA3Mw==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 171,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 52,
      "pull_request_review_id" : 461639766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465709073",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465712075"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465712075"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, for `double_lock_detected` the last element should be skipped. But now lines L187-200 don't run for the last element.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T13:06:20Z",
      "diff_hunk" : "@@ -135,16 +139,53 @@ static void potential_deadlock_detected(const LockPair& mismatch, const LockStac\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\n }\n \n-static void push_lock(void* c, const CLockLocation& locklocation)\n+static void double_lock_detected(const void* mutex, LockStack& lock_stack)\n {\n+    LogPrintf(\"DOUBLE LOCK DETECTED\\n\");\n+    LogPrintf(\"Lock order:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        if (i.first == mutex) {\n+            LogPrintf(\" (*)\"); /* Continued */\n+        }\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    // We throw or abort() here, never actually locking the mutex. So remove the entry\n+    // from the lock stack which we just added in push_lock(). Tests in sync_tests.cpp\n+    // continue executing past the exception and we don't want one test to leave a\n+    // bricked stack for a subsequent test that could execute in the same thread.\n+    lock_stack.pop_back();\n+    if (g_debug_lockorder_abort) {\n+        tfm::format(std::cerr, \"Assertion failed: detected double lock at %s:%i, details in debug log.\\n\", __FILE__, __LINE__);\n+        abort();\n+    }\n+    throw std::logic_error(\"double lock detected\");\n+}\n+\n+template <typename MutexType>\n+static void push_lock(MutexType* c, const CLockLocation& locklocation)\n+{\n+    constexpr bool is_recursive_mutex =\n+        std::is_base_of<RecursiveMutex, MutexType>::value ||\n+        std::is_base_of<std::recursive_mutex, MutexType>::value;\n+\n     LockData& lockdata = GetLockData();\n     std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n \n     LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n     lock_stack.emplace_back(c, locklocation);\n-    for (const LockStackItem& i : lock_stack) {\n-        if (i.first == c)\n-            break;\n+    for (size_t j = 0; j < lock_stack.size() - 1; ++j) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465712075",
      "id" : 465712075,
      "in_reply_to_id" : 465593530,
      "line" : 171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcxMjA3NQ==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 171,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 52,
      "pull_request_review_id" : 461643924,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T21:39:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465712075",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465749596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465749596"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I compiled and tested locally with sanitizers and it passed. Am I missing something? https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-669211924",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T14:02:43Z",
      "diff_hunk" : "@@ -29,6 +32,38 @@ void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\n     BOOST_CHECK(!error_thrown);\n     #endif\n }\n+\n+#ifdef DEBUG_LOCKORDER\n+template <typename MutexType>\n+void TestDoubleLock2(MutexType& m)\n+{\n+    ENTER_CRITICAL_SECTION(m);\n+    LEAVE_CRITICAL_SECTION(m);\n+}\n+\n+template <typename MutexType>\n+void TestDoubleLock(bool should_throw)\n+{\n+    const bool prev = g_debug_lockorder_abort;\n+    g_debug_lockorder_abort = false;\n+\n+    MutexType m;\n+    ENTER_CRITICAL_SECTION(m);\n+    if (should_throw) {\n+        BOOST_CHECK_EXCEPTION(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465749596",
      "id" : 465749596,
      "in_reply_to_id" : 465563801,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0OTU5Ng==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 53,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/test/sync_tests.cpp",
      "position" : 32,
      "pull_request_review_id" : 461694949,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T14:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465749596",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465749673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465749673"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Though, we never use `LOCK` or even `ENTER_CRITICAL_SECTION` on `std::mutex`, so what is the point of testing for that? https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-669211924",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T14:02:52Z",
      "diff_hunk" : "@@ -29,6 +32,38 @@ void TestPotentialDeadLockDetected(MutexType& mutex1, MutexType& mutex2)\n     BOOST_CHECK(!error_thrown);\n     #endif\n }\n+\n+#ifdef DEBUG_LOCKORDER\n+template <typename MutexType>\n+void TestDoubleLock2(MutexType& m)\n+{\n+    ENTER_CRITICAL_SECTION(m);\n+    LEAVE_CRITICAL_SECTION(m);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465749673",
      "id" : 465749673,
      "in_reply_to_id" : 465562495,
      "line" : 41,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0OTY3Mw==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 41,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/test/sync_tests.cpp",
      "position" : 20,
      "pull_request_review_id" : 461695054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T14:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465749673",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465749839"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465749839"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I tried compiling locally without it and it worked https://github.com/bitcoin/bitcoin/pull/19337#issuecomment-669211924",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T14:03:05Z",
      "diff_hunk" : "@@ -166,10 +206,16 @@ static void pop_lock()\n     }\n }\n \n-void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)\n+template <typename MutexType>\n+void EnterCritical(const char* pszName, const char* pszFile, int nLine, MutexType* cs, bool fTry)\n {\n     push_lock(cs, CLockLocation(pszName, pszFile, nLine, fTry, util::ThreadGetInternalName()));\n }\n+template void EnterCritical(const char*, const char*, int, Mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, RecursiveMutex*, bool);\n+template void EnterCritical(const char*, const char*, int, std::mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, std::recursive_mutex*, bool);\n+template void EnterCritical(const char*, const char*, int, boost::mutex*, bool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r465749839",
      "id" : 465749839,
      "in_reply_to_id" : 443132759,
      "line" : 225,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0OTgzOQ==",
      "original_commit_id" : "401d3b759e14a96332a033485257d2e993c2b944",
      "original_line" : 225,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 84,
      "pull_request_review_id" : 461695271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T14:03:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465749839",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r466023613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466023613"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nevermind, the last element was already skipped with `if (i.first == c) break;`.",
      "commit_id" : "f6a1a9130b1d5cbe50b60a1fed7cd2b0c1a9aa35",
      "created_at" : "2020-08-05T21:48:34Z",
      "diff_hunk" : "@@ -135,16 +139,53 @@ static void potential_deadlock_detected(const LockPair& mismatch, const LockStac\n     throw std::logic_error(strprintf(\"potential deadlock detected: %s -> %s -> %s\", mutex_b, mutex_a, mutex_b));\n }\n \n-static void push_lock(void* c, const CLockLocation& locklocation)\n+static void double_lock_detected(const void* mutex, LockStack& lock_stack)\n {\n+    LogPrintf(\"DOUBLE LOCK DETECTED\\n\");\n+    LogPrintf(\"Lock order:\\n\");\n+    for (const LockStackItem& i : lock_stack) {\n+        if (i.first == mutex) {\n+            LogPrintf(\" (*)\"); /* Continued */\n+        }\n+        LogPrintf(\" %s\\n\", i.second.ToString());\n+    }\n+    // We throw or abort() here, never actually locking the mutex. So remove the entry\n+    // from the lock stack which we just added in push_lock(). Tests in sync_tests.cpp\n+    // continue executing past the exception and we don't want one test to leave a\n+    // bricked stack for a subsequent test that could execute in the same thread.\n+    lock_stack.pop_back();\n+    if (g_debug_lockorder_abort) {\n+        tfm::format(std::cerr, \"Assertion failed: detected double lock at %s:%i, details in debug log.\\n\", __FILE__, __LINE__);\n+        abort();\n+    }\n+    throw std::logic_error(\"double lock detected\");\n+}\n+\n+template <typename MutexType>\n+static void push_lock(MutexType* c, const CLockLocation& locklocation)\n+{\n+    constexpr bool is_recursive_mutex =\n+        std::is_base_of<RecursiveMutex, MutexType>::value ||\n+        std::is_base_of<std::recursive_mutex, MutexType>::value;\n+\n     LockData& lockdata = GetLockData();\n     std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n \n     LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n     lock_stack.emplace_back(c, locklocation);\n-    for (const LockStackItem& i : lock_stack) {\n-        if (i.first == c)\n-            break;\n+    for (size_t j = 0; j < lock_stack.size() - 1; ++j) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19337#discussion_r466023613",
      "id" : 466023613,
      "in_reply_to_id" : 465593530,
      "line" : 171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyMzYxMw==",
      "original_commit_id" : "b1f94072a1cc3ca67ce13658bb981d03480ef38e",
      "original_line" : 171,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/sync.cpp",
      "position" : 52,
      "pull_request_review_id" : 462047924,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19337",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T21:48:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466023613",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
