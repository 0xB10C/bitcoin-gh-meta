[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: as a pure Bitcoin Core console user (`-printtoconsole` is my interface) the unnecessary column jumping has annoyed me (mildly) for years :)\r\n\r\nIt is easier to scan for anomalies if the column lengths don't vary unnecessarily.\r\n\r\nWarm welcome as a contributor @jamesgmorgan - nice small console UX improvement :)\r\n\r\nPossible alternative which will achieve precision to 6 places and thus remove the suggested left-justification (left-justification might theoretically break log parsers):\r\n\r\n```patch\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex cbbc857fdcfc..971f19240e51 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -1271,12 +1271,12 @@ void static InvalidChainFound(CBlockIndex* pindexNew)\r\n     if (!pindexBestInvalid || pindexNew->nChainWork > pindexBestInvalid->nChainWork)\r\n         pindexBestInvalid = pindexNew;\r\n \r\n-    LogPrintf(\"%s: invalid block=%s  height=%d  log2_work=%.8g  date=%s\\n\", __func__,\r\n+    LogPrintf(\"%s: invalid block=%s  height=%d  log2_work=%f  date=%s\\n\", __func__,\r\n       pindexNew->GetBlockHash().ToString(), pindexNew->nHeight,\r\n       log(pindexNew->nChainWork.getdouble())/log(2.0), FormatISO8601DateTime(pindexNew->GetBlockTime()));\r\n     CBlockIndex *tip = chainActive.Tip();\r\n     assert (tip);\r\n-    LogPrintf(\"%s:  current best=%s  height=%d  log2_work=%.8g  date=%s\\n\", __func__,\r\n+    LogPrintf(\"%s:  current best=%s  height=%d  log2_work=%f  date=%s\\n\", __func__,\r\n       tip->GetBlockHash().ToString(), chainActive.Height(), log(tip->nChainWork.getdouble())/log(2.0),\r\n       FormatISO8601DateTime(tip->GetBlockTime()));\r\n     CheckForkWarningConditions();\r\n@@ -2245,7 +2245,7 @@ void static UpdateTip(const CBlockIndex *pindexNew, const CChainParams& chainPar\r\n             DoWarning(strWarning);\r\n         }\r\n     }\r\n-    LogPrintf(\"%s: new best=%s height=%d version=0x%08x log2_work=%.8g tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)\", __func__, /* Continued */\r\n+    LogPrintf(\"%s: new best=%s height=%d version=0x%08x log2_work=%f tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)\", __func__, /* Continued */\r\n       pindexNew->GetBlockHash().ToString(), pindexNew->nHeight, pindexNew->nVersion,\r\n       log(pindexNew->nChainWork.getdouble())/log(2.0), (unsigned long)pindexNew->nChainTx,\r\n       FormatISO8601DateTime(pindexNew->GetBlockTime()),\r\n```\r\n\r\nWill give the output:\r\n\r\n```\r\n2020-06-18T02:54:42Z UpdateTip: new best=0000000000000000107f877e4920643f9fb06090fa7551cd1cdd83b857f520aa height=382038 version=0x00000003 log2_work=83.558653 tx=90953616 date='2015-11-04T17:11:44Z' progress=0.166675 cache=117.6MiB(966410txo)\r\n2020-06-18T02:54:51Z UpdateTip: new best=0000000000000000019a4de585d30d1a8cc13c7a1972d11b4945635c9556acb5 height=382039 version=0x00000003 log2_work=83.558680 tx=90955936 date='2015-11-04T17:19:39Z' progress=0.166679 cache=117.9MiB(968799txo)\r\n```",
      "created_at" : "2020-06-18T08:23:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19317#issuecomment-645863075",
      "id" : 645863075,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19317",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTg2MzA3NQ==",
      "updated_at" : "2020-06-18T08:29:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645863075",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Isn't there a way to always force 8 digits of precision? I'd slightly prefer appending 0 to space padding.\r\n\r\nEdit: oh, I only just read @practicalswift's post in detail, so just `%f`?",
      "created_at" : "2020-06-18T09:54:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19317#issuecomment-645913470",
      "id" : 645913470,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19317",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTkxMzQ3MA==",
      "updated_at" : "2020-06-18T09:55:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645913470",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2020-06-18T12:05:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19317#issuecomment-645972970",
      "id" : 645972970,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19317",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTk3Mjk3MA==",
      "updated_at" : "2020-06-18T12:05:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645972970",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   }
]
