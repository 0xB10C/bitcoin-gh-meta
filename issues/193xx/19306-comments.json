[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19293 (net: Avoid redundant and confusing FAILED log by MarcoFalke)\n* #19198 (test: Check that peers with forcerelay permission are not asked to feefilter by MarcoFalke)\n* #19184 (Overhaul transaction request logic by sipa)\n* #19174 (refactor: replace CConnman/BanMan pointers by references in net_processing.cpp by theStack)\n* #19093 (RPC: testmempoolaccept returns transaction fee by rajarshimaitra)\n* #18638 (net: Use mockable time for ping/pong, add tests by MarcoFalke)\n* #18637 (coins: allow cache resize after init by jamesob)\n* #18531 (rpc: Assert that RPCArg names are equal to CRPCCommand ones by MarcoFalke)\n* #18191 (Change UpdateForDescendants to use Epochs by JeremyRubin)\n* #18017 (txmempool: split epoch logic into class by ajtowns)\n* #13990 (Allow fee estimation to work with lower fees by ajtowns)\n* #12677 (RPC: Add ancestor{count,size,fees} to listunspent output by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-06-17T23:20:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645675813",
      "id" : 645675813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTY3NTgxMw==",
      "updated_at" : "2020-06-19T02:56:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645675813",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "From [IRC](http://www.erisian.com.au/bitcoin-core-dev/log-2020-06-18.html#l-34):\r\n> \\<sipa\\> eh, i agree - that change isn't a step in the right direction\r\n\r\n@sipa \r\nWhich direction is right?",
      "created_at" : "2020-06-18T09:04:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645885934",
      "id" : 645885934,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTg4NTkzNA==",
      "updated_at" : "2020-06-18T09:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645885934",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "From [IRC](http://www.erisian.com.au/bitcoin-core-dev/log-2020-06-18.html#l-96):\r\n> \\<jeremyrubin\\> I think it's basically getting rid of a recursive mutex for code that's still designed to take a recursive mutex\r\n> \\<gwillen\\> it's better than a true recursive mutex because it's not possible to recurse by accident, you have to declare at call time which behavior you want (although better if you had to declare statically at compile time)\r\n> \\<sipa\\> it looks like that\r\n> \\<jeremyrubin\\> The correct refactor would be to make the code not do anything fancy with locks, or to just leave it\r\n> \\<jeremyrubin\\> gwillen: I think the chances of a bug or error in custom logic is higher than a recursive mutex\r\n> \\<jeremyrubin\\> accidental recursion seems unlikely...\r\n> \\<jeremyrubin\\> and accidental recursion would be a bug lock or no\r\n> \\<gwillen\\> (sorry I mean, accidental mutex recursion, that is, calling a function while holding a mutex, not expecting the callee to also lock it, resulting in the callee violating the caller's invariants)\r\n> \\<gwillen\\> (this is the fundamental problem of recursive mutexes)\r\n> \\<gwillen\\> (and I assume the motivation behind hebasto's refactor)\r\n\r\nCorrect, @gwillen :)",
      "created_at" : "2020-06-18T09:28:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645899608",
      "id" : 645899608,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTg5OTYwOA==",
      "updated_at" : "2020-06-18T09:28:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645899608",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Searching for concept (N)ACKs before separating digestible chunks for reviewing into smaller pulls.",
      "created_at" : "2020-06-18T09:31:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645901110",
      "id" : 645901110,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTkwMTExMA==",
      "updated_at" : "2020-06-18T09:32:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645901110",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Currently this adds a lot of code complexity. Also, it adds mental complexity to write code that doesn't crash or deadlock/UB whereas the `RecursiveMutex` just works (TM).\r\n\r\nMaybe there is a way to achieve the same without the added complexity? For example, always force the caller to take the lock for the right scope. This would also solve issues of non-atomic RPC responses or at make them more visible. Though, it makes caller code slightly more verbose.",
      "created_at" : "2020-06-18T11:29:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645957467",
      "id" : 645957467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTk1NzQ2Nw==",
      "updated_at" : "2020-06-18T11:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645957467",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Currently this adds a lot of code complexity. Also, it adds mental complexity to write code that doesn't crash or deadlock/UB whereas the `RecursiveMutex` just works (TM).\r\n\r\nA function that locks `RecursiveMutex` there are no guarantees that protected invariants are held before locking. This adds mental complexity to read code.\r\n\r\n> Maybe there is a way to achieve the same without the added complexity? For example, always force the caller to take the lock for the right scope. This would also solve issues of non-atomic RPC responses or at make them more visible.\r\n\r\nI assume these steps are much easier for non-recursive mutex, no?",
      "created_at" : "2020-06-18T11:38:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645961153",
      "id" : 645961153,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTk2MTE1Mw==",
      "updated_at" : "2020-06-18T11:38:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645961153",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-06-19T10:23:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-646560196",
      "id" : 646560196,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NjU2MDE5Ng==",
      "updated_at" : "2020-06-19T10:23:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646560196",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
