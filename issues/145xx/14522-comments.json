[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->Reviewers, this pull request conflicts with the following ones:\n\n* #14519 (tests: add utility to easily profile node performance with perf by jamesob)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-10-20T09:49:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14522#issuecomment-431566168",
      "id" : 431566168,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14522",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMTU2NjE2OA==",
      "updated_at" : "2018-10-20T09:49:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/431566168",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14522#discussion_r227041595"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14522"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227041595"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use `for _ in range(200):` instead to show that the variable is intentionally unused :-)",
      "commit_id" : "435445ff01e032ff1a8e33f38206e99f196e2f63",
      "created_at" : "2018-10-22T16:19:24Z",
      "diff_hunk" : "@@ -0,0 +1,169 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node responses to invalid network messages.\"\"\"\n+import struct\n+\n+from test_framework import messages\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class msg_unrecognized:\n+    \"\"\"Nonsensical message. Modeled after similar types in test_framework.messages.\"\"\"\n+\n+    command = b'badmsg'\n+\n+    def __init__(self, str_data):\n+        self.str_data = str_data.encode() if not isinstance(str_data, bytes) else str_data\n+\n+    def serialize(self):\n+        return messages.ser_string(self.str_data)\n+\n+    def __repr__(self):\n+        return \"{}(data={})\".format(self.command, self.str_data)\n+\n+\n+class msg_nametoolong(msg_unrecognized):\n+    \"\"\"Nonsensical message. Modeled after similar types in test_framework.messages.\"\"\"\n+\n+    command = b'thisnameiswayyyyyyyyytoolong'\n+\n+\n+class InvalidMessagesTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        \"\"\"\n+        0. Send a bunch of large (4MB) messages of an unrecognized type. Check to see\n+           that it isn't an effective DoS against the node.\n+\n+        1. Send an oversized (4MB+) message and check that we're disconnected.\n+\n+        2. Send a few messages with an incorrect data size in the header, ensure the\n+           messages are ignored.\n+\n+        3. Send an unrecognized message with a command name longer than 12 characters.\n+\n+        \"\"\"\n+        node = self.nodes[0]\n+        self.node = node\n+        node.add_p2p_connection(P2PDataStore())\n+        conn2 = node.add_p2p_connection(P2PDataStore())\n+\n+        msg_limit = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH\n+        valid_data_limit = msg_limit - 5  # Account for the 4-byte length prefix\n+\n+        #\n+        # 0.\n+        #\n+        # Send as large a message as is valid, ensure we aren't disconnected but\n+        # also can't exhaust resources.\n+        #\n+        msg_at_size = msg_unrecognized(\"b\" * valid_data_limit)\n+        assert len(msg_at_size.serialize()) == msg_limit\n+\n+        with node.assert_memory_usage_stable(perc_increase_allowed=0.03):\n+            self.log.info(\n+                \"Sending a bunch of large, junk messages to test \"\n+                \"memory exhaustion. May take a bit...\")\n+\n+            # Run a bunch of times to test for memory exhaustion.\n+            for i in range(200):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14522#discussion_r227041595",
      "id" : 227041595,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzA0MTU5NQ==",
      "original_commit_id" : "435445ff01e032ff1a8e33f38206e99f196e2f63",
      "original_position" : 76,
      "path" : "test/functional/p2p_invalid_messages.py",
      "position" : 76,
      "pull_request_review_id" : 166993623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14522",
      "updated_at" : "2018-10-22T16:19:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227041595",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14522#discussion_r227042048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14522"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227042048"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Try to find a less general exception to catch :-)",
      "commit_id" : "435445ff01e032ff1a8e33f38206e99f196e2f63",
      "created_at" : "2018-10-22T16:20:44Z",
      "diff_hunk" : "@@ -115,6 +115,22 @@ def get_deterministic_priv_key(self):\n         ]\n         return PRIV_KEYS[self.index]\n \n+    def get_mem_rss(self):\n+        \"\"\"Get the memory usage (RSS) per `ps`.\n+\n+        If process is stopped or `ps` is unavailable, return None.\n+        \"\"\"\n+        if not (self.running and self.process):\n+            self.log.warning(\"Couldn't get memory usage; process isn't running.\")\n+            return None\n+\n+        try:\n+            return int(subprocess.check_output(\n+                \"ps h -o rss {}\".format(self.process.pid), shell=True).strip())\n+        except Exception:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14522#discussion_r227042048",
      "id" : 227042048,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzA0MjA0OA==",
      "original_commit_id" : "435445ff01e032ff1a8e33f38206e99f196e2f63",
      "original_position" : 16,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : 16,
      "pull_request_review_id" : 166994191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14522",
      "updated_at" : "2018-10-22T16:20:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227042048",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14522#discussion_r227233907"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14522"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227233907"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think you are looking for `subprocess.CalledProcessError` :)",
      "commit_id" : "435445ff01e032ff1a8e33f38206e99f196e2f63",
      "created_at" : "2018-10-23T05:55:30Z",
      "diff_hunk" : "@@ -115,6 +115,22 @@ def get_deterministic_priv_key(self):\n         ]\n         return PRIV_KEYS[self.index]\n \n+    def get_mem_rss(self):\n+        \"\"\"Get the memory usage (RSS) per `ps`.\n+\n+        If process is stopped or `ps` is unavailable, return None.\n+        \"\"\"\n+        if not (self.running and self.process):\n+            self.log.warning(\"Couldn't get memory usage; process isn't running.\")\n+            return None\n+\n+        try:\n+            return int(subprocess.check_output(\n+                \"ps h -o rss {}\".format(self.process.pid), shell=True).strip())\n+        except Exception:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14522#discussion_r227233907",
      "id" : 227233907,
      "in_reply_to_id" : 227042048,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzIzMzkwNw==",
      "original_commit_id" : "435445ff01e032ff1a8e33f38206e99f196e2f63",
      "original_position" : 16,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : 16,
      "pull_request_review_id" : 167225519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14522",
      "updated_at" : "2018-10-23T05:56:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227233907",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14220652?v=4",
         "events_url" : "https://api.github.com/users/conscott/events{/privacy}",
         "followers_url" : "https://api.github.com/users/conscott/followers",
         "following_url" : "https://api.github.com/users/conscott/following{/other_user}",
         "gists_url" : "https://api.github.com/users/conscott/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/conscott",
         "id" : 14220652,
         "login" : "conscott",
         "node_id" : "MDQ6VXNlcjE0MjIwNjUy",
         "organizations_url" : "https://api.github.com/users/conscott/orgs",
         "received_events_url" : "https://api.github.com/users/conscott/received_events",
         "repos_url" : "https://api.github.com/users/conscott/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/conscott/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/conscott/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/conscott"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14522#discussion_r227238734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14522"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227238734"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If this is expected to happen sometimes, (I would assume because `ps` isn't supported), might want to leave a comment as to why this check is being skipped rather than throwing an exception. ",
      "commit_id" : "435445ff01e032ff1a8e33f38206e99f196e2f63",
      "created_at" : "2018-10-23T06:19:32Z",
      "diff_hunk" : "@@ -267,6 +283,29 @@ def assert_debug_log(self, expected_msgs):\n                 if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n                     self._raise_assertion_error('Expected message \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(expected_msg, print_log))\n \n+    @contextlib.contextmanager\n+    def assert_memory_usage_stable(self, perc_increase_allowed=0.03):\n+        \"\"\"Context manager that allows the user to assert that a node's memory usage (RSS)\n+        hasn't increased beyond some threshold percentage.\n+        \"\"\"\n+        before_memory_usage = self.get_mem_rss()\n+\n+        yield\n+\n+        after_memory_usage = self.get_mem_rss()\n+\n+        if not (before_memory_usage and after_memory_usage):\n+            self.log.warning(\"Unable to detect memory usage (RSS) - skipping memory check.\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14522#discussion_r227238734",
      "id" : 227238734,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzIzODczNA==",
      "original_commit_id" : "435445ff01e032ff1a8e33f38206e99f196e2f63",
      "original_position" : 39,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : 39,
      "pull_request_review_id" : 167231575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14522",
      "updated_at" : "2018-10-23T06:19:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227238734",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14220652?v=4",
         "events_url" : "https://api.github.com/users/conscott/events{/privacy}",
         "followers_url" : "https://api.github.com/users/conscott/followers",
         "following_url" : "https://api.github.com/users/conscott/following{/other_user}",
         "gists_url" : "https://api.github.com/users/conscott/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/conscott",
         "id" : 14220652,
         "login" : "conscott",
         "node_id" : "MDQ6VXNlcjE0MjIwNjUy",
         "organizations_url" : "https://api.github.com/users/conscott/orgs",
         "received_events_url" : "https://api.github.com/users/conscott/received_events",
         "repos_url" : "https://api.github.com/users/conscott/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/conscott/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/conscott/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/conscott"
      }
   }
]
