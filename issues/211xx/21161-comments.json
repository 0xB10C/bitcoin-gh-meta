[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This is currently giving me somewhat lower feerate estimates on mainnet -- 173sat/vb becomes 142sat/vb for 4 blocks, 82sat/vb becomes 65sat/vb for 25 blocks. Not sure if that's fixing a bug, or introducing a bug though -- I don't *think* it's noise, because I'm also seeing a reduction when running the estimates against the fixed fee_estimates dat I had in #13990.\r\n\r\nEDIT: at first glance looks like these fee differences were due to the mishandling of fail buckets morcos describes below",
      "created_at" : "2021-02-12T13:21:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21161#issuecomment-778192028",
      "id" : 778192028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21161",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3ODE5MjAyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-13T04:04:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778192028",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice find on the bug and I think you've more or less identified the problem (I think I recapped it below)\r\n\r\nHowever I believe there are 2 issues with your potential fix.\r\n1) I think there is a new quadratic behavior now where if there are consistently not enough transactions in the buckets, you'll count up all the buckets to determine that, and then again all the buckets except the top one and so on...   Or some lesser variation on that if there are enough transactions at some point.  Not sure if thats actually a problem.\r\n\r\n2) I believe in your code you now only extend bucket ranges to achieve the required number of transactions, whereas the old code extended bucket ranges for that reason OR if the current buckets were failing.  It's that second condition that caused the bug because the bucket ranges didn't always match between targets, BUT I believe its important not to just eliminate that.  The reason the search for passing buckets continues even after you find a failing bucket is that you don't want to allow for the possibility that a small number of stuck transactions at a high feerate can peg fee estimates to be stuck at a high level.  Your code still solves for that, but it now completely ignores those failed transactions which I fear could lead to a different type of manipulation where a very low bucket of just enough transactions could be confirmed and it would cause the estimator to return artificially low estimates even if the vast majority of transactions at higher fee rates were not being confirmed.  \r\n\r\nI'll try to check IRC over the next few days if you want to ping me to discuss further.  A solution is not immediately apparent to me.   It's possible that the best solution is to just relax the requirement that fee rates have to be monotonically decreasing as confirmation target increases.   These are edge cases where it's not clear which answer would be better anyway.  I think the monotonic requirement was good as a QA check, but at this point may be causing more harm than good.\r\n\r\n\r\n\r\nProblem recap:  \r\nImagine only 2 buckets and an 85% threshold: \r\nfeerate: 100 sat/vb has 2/2 transactions confirmed within a target of 3 blocks (same within a target of 4 blocks.)\r\nfeerate: 150 sat/vb has 84/100 transactions confirmed within a target of 3 blocks and 85/100 transactions within 4 blocks.\r\n\r\nThe estimate for 3-block target fails at 150 sat/vb but passes when you add in the 100 sat/vb bucket, so it returns a median fee somewhere in the middle of those 2 buckets. \r\n\r\nOn the other hand the estimate for the 4-block target passes at 150 sat/vb, but then does not have enough data at 100 sat/vb alone and fails.  So it returns a median fee in the 150 sat/vb bucket (HIGHER than the rate for the 3-block target)",
      "created_at" : "2021-02-12T15:59:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21161#issuecomment-778280467",
      "id" : 778280467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21161",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3ODI4MDQ2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-12T15:59:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778280467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=4",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "node_id" : "MDQ6VXNlcjQzNjAzNDk=",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@morcos Yes, that makes sense! I think I'm only looking at each bucket once (`bucket` is always what I'm looking at, and it's only decremented never reset/incremented), so there shouldn't be quadratic behaviour -- though it was getting late so what was in my head may not match what was in my editor...\r\n\r\nAgree that the new code is ignoring high feerate failures now and that that is wrong; I think I've got an idea how to fix that, will see about updating the PR over the weekend.",
      "created_at" : "2021-02-13T02:14:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21161#issuecomment-778546332",
      "id" : 778546332,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21161",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3ODU0NjMzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-13T02:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778546332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated -- I traded in my hatchet for a scalpel; think this should exactly fix the problem.",
      "created_at" : "2021-02-13T07:43:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21161#issuecomment-778578214",
      "id" : 778578214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21161",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3ODU3ODIxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-13T07:43:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778578214",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Problem recap:\r\n> Imagine only 2 buckets and an 85% threshold:\r\n> feerate: 100 sat/vb has 2/2 transactions confirmed within a target of 3 blocks (same within a target of 4 blocks.)\r\n> feerate: 150 sat/vb has 84/100 transactions confirmed within a target of 3 blocks and 85/100 transactions within 4 blocks.\r\n> \r\n> The estimate for 3-block target fails at 150 sat/vb but passes when you add in the 100 sat/vb bucket, so it returns a median fee somewhere in the middle of those 2 buckets.\r\n\r\nI think in this case the 4-block target would calculate:\r\n\r\n  * 150 sat/vb has 85/100 -- passing, 150sat/vb is good\r\n  * 100 sat/vb has 2/2 -- also passing, 100sat/vb is good\r\n  * median value is in the 100 sat/vb bucket\r\n\r\nand 3-block target would say:\r\n\r\n  * 150 sat/vb has 84/100 -- not passing, extend\r\n  * 100 sat/vb has (84+2)/(100+2) -- passing\r\n  * median fee is in the 150 sat/vb bucket\r\n  \r\nbut that just gives a higher fee to the lower target which is correct.\r\n\r\nI think the actual bug needs more than 2 buckets, so that you get:\r\n\r\n  * 200-250 sat/vb buckets; 3-block / 4-block: failing\r\n  * 190-250 sat/vb buckets: 3-block failing, 4-block: passing\r\n\r\nat which point they start locking at separate bucket sets, and get: \r\n \r\n  * 3-blocks: 180-250 sat/vb buckets: 3-block passing\r\n  * 3-blocks: 0-170 sat/vb: not enough info\r\n  * 4-blocks: 0-190 sat/vb: not enough info\r\n\r\nat which point 3-blocks is locking for a median in 180-250 sat/vb while 4 blocks is looking for a median in 190-250 sat/vb and the higher target can get a higher fee rate.",
      "created_at" : "2021-02-13T07:56:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21161#issuecomment-778579772",
      "id" : 778579772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21161",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3ODU3OTc3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-13T07:56:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778579772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
