[
   {
      "author_association" : "MEMBER",
      "body" : "the failing test seems unrelated. The failure is in `feature_assumevalid.py`, which seems hard to impact from changes that exclusively touch the unit tests, unit test framework, and some comments :) ",
      "created_at" : "2021-02-09T01:54:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-775595337",
      "id" : 775595337,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NTU5NTMzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-09T01:54:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775595337",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20158 (tree-wide: De-globalize ChainstateManager by dongcarl)\n* #19806 (validation: UTXO snapshot activation by jamesob)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-02-09T03:40:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-775637714",
      "id" : 775637714,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NTYzNzcxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-09T03:40:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775637714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r573713098"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573713098"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Probably more of a hassle, but another way to document would be to use `std::chrono` types with explicit units.",
      "commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "created_at" : "2021-02-10T13:09:47Z",
      "diff_hunk" : "@@ -40,9 +40,16 @@ int64_t GetTimeMicros();\n /** Returns the system time (not mockable) */\n int64_t GetSystemTimeInSeconds(); // Like GetTime(), but not mockable\n \n-/** For testing. Set e.g. with the setmocktime rpc, or -mocktime argument */\n+/**\n+ * For testing. Set e.g. with the setmocktime rpc, or -mocktime argument\n+ *\n+ * @param[in] nMockTimeIn Time in seconds.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r573713098",
      "id" : 573713098,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzcxMzA5OA==",
      "original_commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "original_line" : 46,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/util/time.h",
      "position" : 8,
      "pull_request_review_id" : 587587358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-10T13:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573713098",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK e7573304b7e112b6b7f49c79c25fce36a5440209\r\n\r\nThe new function is added but not used (so not tested), I would prefer if it was, but I guess it can wait until #21061.",
      "created_at" : "2021-02-10T13:11:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-776696006",
      "id" : 776696006,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NjY5NjAwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-10T13:11:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/776696006",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r573981587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573981587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah, I took a quick look at changing the signature to a chrono type, but ended up taking the efficient/lazy way for now. there are a couple tweaks that would need to be made to switch it over, nothing difficult but not currently at the top of my priority list\r\n\r\nso I thought leaving a comment was the smallest way to help :) ",
      "commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "created_at" : "2021-02-10T18:43:14Z",
      "diff_hunk" : "@@ -40,9 +40,16 @@ int64_t GetTimeMicros();\n /** Returns the system time (not mockable) */\n int64_t GetSystemTimeInSeconds(); // Like GetTime(), but not mockable\n \n-/** For testing. Set e.g. with the setmocktime rpc, or -mocktime argument */\n+/**\n+ * For testing. Set e.g. with the setmocktime rpc, or -mocktime argument\n+ *\n+ * @param[in] nMockTimeIn Time in seconds.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r573981587",
      "id" : 573981587,
      "in_reply_to_id" : 573713098,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mzk4MTU4Nw==",
      "original_commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "original_line" : 46,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/util/time.h",
      "position" : 8,
      "pull_request_review_id" : 587933726,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-10T18:43:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573981587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574396383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574396383"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n\r\n```suggestion\r\n    CTxIn input(outpoint_to_spend);\r\n```\r\n\r\nThe last two arguments have default values equal to the above.",
      "commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "created_at" : "2021-02-11T10:36:31Z",
      "diff_hunk" : "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574396383",
      "id" : 574396383,
      "line" : 245,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDM5NjM4Mw==",
      "original_commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "original_line" : 245,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : 15,
      "pull_request_review_id" : 588421416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T11:12:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574396383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574401946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574401946"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe `assert()` or `BOOST_REQUIRE()` that `GetCoin()` returns `true`?",
      "commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "created_at" : "2021-02-11T10:45:07Z",
      "diff_hunk" : "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);\n+    // - Use GetCoin to properly populate utxo_to_spend,\n+    Coin utxo_to_spend;\n+    coins_cache.GetCoin(outpoint_to_spend, utxo_to_spend);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574401946",
      "id" : 574401946,
      "line" : 262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQwMTk0Ng==",
      "original_commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "original_line" : 262,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : 32,
      "pull_request_review_id" : 588421416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T11:12:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574401946",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574403104"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574403104"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n\r\n```suggestion\r\n    COutPoint outpoint_to_spend(input_transaction->GetHash(), input_vout);\r\n```",
      "commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "created_at" : "2021-02-11T10:46:56Z",
      "diff_hunk" : "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574403104",
      "id" : 574403104,
      "line" : 244,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQwMzEwNA==",
      "original_commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "original_line" : 244,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : 14,
      "pull_request_review_id" : 588421416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T11:12:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574403104",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574407638"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574407638"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The prototype of `AddCoins()` is:\r\n\r\n```cpp\r\nvoid AddCoins(CCoinsViewCache& cache, const CTransaction& tx, int nHeight, bool check = false);\r\n```\r\n\r\nI think the above call implicitly converts `false` to `0` for the 3rd argument `nHeight`. Maybe that should be:\r\n\r\n```suggestion\r\n    const int height = 123;\r\n    AddCoins(coins_cache, *input_transaction.get(), height);\r\n```",
      "commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "created_at" : "2021-02-11T10:54:16Z",
      "diff_hunk" : "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574407638",
      "id" : 574407638,
      "line" : 259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQwNzYzOA==",
      "original_commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "original_line" : 259,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : 29,
      "pull_request_review_id" : 588421416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T11:12:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574407638",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574409892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574409892"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`assert()` or `BOOST_REQUIRE()` a successful sign?",
      "commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "created_at" : "2021-02-11T10:57:43Z",
      "diff_hunk" : "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);\n+    // - Use GetCoin to properly populate utxo_to_spend,\n+    Coin utxo_to_spend;\n+    coins_cache.GetCoin(outpoint_to_spend, utxo_to_spend);\n+    // - Then add it to a map to pass in to SignTransaction\n+    std::map<COutPoint, Coin> input_coins;\n+    input_coins.insert({outpoint_to_spend, utxo_to_spend});\n+    // - Default signature hashing type\n+    int nHashType = SIGHASH_ALL;\n+    std::map<int, std::string> input_errors;\n+    SignTransaction(mempool_txn, &keystore, input_coins, nHashType, input_errors);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574409892",
      "id" : 574409892,
      "line" : 269,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQwOTg5Mg==",
      "original_commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "original_line" : 269,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : 39,
      "pull_request_review_id" : 588421416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T11:12:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574409892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574411812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574411812"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`assert()` or `BOOST_REQUIRE()` a success here?",
      "commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "created_at" : "2021-02-11T11:00:35Z",
      "diff_hunk" : "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);\n+    // - Use GetCoin to properly populate utxo_to_spend,\n+    Coin utxo_to_spend;\n+    coins_cache.GetCoin(outpoint_to_spend, utxo_to_spend);\n+    // - Then add it to a map to pass in to SignTransaction\n+    std::map<COutPoint, Coin> input_coins;\n+    input_coins.insert({outpoint_to_spend, utxo_to_spend});\n+    // - Default signature hashing type\n+    int nHashType = SIGHASH_ALL;\n+    std::map<int, std::string> input_errors;\n+    SignTransaction(mempool_txn, &keystore, input_coins, nHashType, input_errors);\n+\n+    // Add transaction to the mempool\n+    TxValidationState state;\n+    WITH_LOCK(cs_main, AcceptToMemoryPool(*m_node.mempool.get(), state, MakeTransactionRef(mempool_txn), nullptr, false));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574411812",
      "id" : 574411812,
      "line" : 273,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQxMTgxMg==",
      "original_commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "original_line" : 273,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : 43,
      "pull_request_review_id" : 588421416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-11T11:12:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574411812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574417478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574417478"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The implementation assumes that the key to spend `input_transaction:input_vout` is `this->coinbaseKey`. Indeed all callers of this in #21061 pass some tx from `this->m_coinbase_txns[]`.\r\n\r\nThis is not clear from the above prototype. Maybe document this explicitly or even better - pass the spend key here, together with `input_transaction` and `input_vout`.",
      "commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "created_at" : "2021-02-11T11:10:32Z",
      "diff_hunk" : "@@ -121,6 +121,11 @@ struct TestChain100Setup : public RegTestingSetup {\n     CBlock CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns,\n                                  const CScript& scriptPubKey);\n \n+    CMutableTransaction CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                      int input_vout,\n+                                                      CScript output_destination,\n+                                                      CAmount output_amount = CAmount(1 * COIN));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574417478",
      "id" : 574417478,
      "line" : 127,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQxNzQ3OA==",
      "original_commit_id" : "e7573304b7e112b6b7f49c79c25fce36a5440209",
      "original_line" : 127,
      "original_position" : 7,
      "original_start_line" : 124,
      "path" : "src/test/util/setup_common.h",
      "position" : 7,
      "pull_request_review_id" : 588421416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
      "side" : "RIGHT",
      "start_line" : 124,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-11T11:12:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574417478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
