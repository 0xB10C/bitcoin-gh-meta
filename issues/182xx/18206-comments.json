[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18190 (tests: Add fuzzing harness for Golomb-Rice coding (GolombRiceEncode/GolombRiceDecode) by practicalswift)\n* #18176 (tests: Add fuzzing harness for CScript and CScriptNum operations by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-02-25T13:01:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#issuecomment-590855144",
      "id" : 590855144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18206",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MDg1NTE0NA==",
      "updated_at" : "2020-02-25T13:01:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590855144",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383930058"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383930058"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why does this need to be a different fuzzer-instructed path? I'd guess it would be simpler and more efficient to call this as the first step in `case 1`",
      "commit_id" : "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "created_at" : "2020-02-25T14:56:11Z",
      "diff_hunk" : "@@ -0,0 +1,94 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bloom.h>\n+#include <optional.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    CBloomFilter bloom_filter{fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 10000000), 1.0 / fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, std::numeric_limits<unsigned int>::max()), fuzzed_data_provider.ConsumeIntegral<unsigned int>(), static_cast<unsigned char>(fuzzed_data_provider.PickValueInArray({BLOOM_UPDATE_NONE, BLOOM_UPDATE_ALL, BLOOM_UPDATE_P2PUBKEY_ONLY, BLOOM_UPDATE_MASK}))};\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 10)) {\n+        case 0: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            bloom_filter.insert(b);\n+            const bool present = bloom_filter.contains(b);\n+            assert(present);\n+            break;\n+        }\n+        case 1: {\n+            const Optional<COutPoint> out_point = ConsumeDeserializable<COutPoint>(fuzzed_data_provider);\n+            if (!out_point) {\n+                break;\n+            }\n+            bloom_filter.insert(*out_point);\n+            const bool present = bloom_filter.contains(*out_point);\n+            assert(present);\n+            break;\n+        }\n+        case 2: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            bloom_filter.insert(*u256);\n+            const bool present = bloom_filter.contains(*u256);\n+            assert(present);\n+            break;\n+        }\n+        case 3: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            (void)bloom_filter.contains(b);\n+            break;\n+        }\n+        case 4: {\n+            const Optional<COutPoint> out_point = ConsumeDeserializable<COutPoint>(fuzzed_data_provider);\n+            if (!out_point) {\n+                break;\n+            }\n+            (void)bloom_filter.contains(*out_point);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383930058",
      "id" : 383930058,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzMDA1OA==",
      "original_commit_id" : "d5d40e2e26a359aae2cc36f3e6794f5acf8d8aa7",
      "original_position" : 60,
      "path" : "src/test/fuzz/bloom_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 364205114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206",
      "updated_at" : "2020-02-25T17:09:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383930058",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383930308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383930308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same",
      "commit_id" : "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "created_at" : "2020-02-25T14:56:32Z",
      "diff_hunk" : "@@ -0,0 +1,94 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bloom.h>\n+#include <optional.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    CBloomFilter bloom_filter{fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 10000000), 1.0 / fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, std::numeric_limits<unsigned int>::max()), fuzzed_data_provider.ConsumeIntegral<unsigned int>(), static_cast<unsigned char>(fuzzed_data_provider.PickValueInArray({BLOOM_UPDATE_NONE, BLOOM_UPDATE_ALL, BLOOM_UPDATE_P2PUBKEY_ONLY, BLOOM_UPDATE_MASK}))};\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 10)) {\n+        case 0: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            bloom_filter.insert(b);\n+            const bool present = bloom_filter.contains(b);\n+            assert(present);\n+            break;\n+        }\n+        case 1: {\n+            const Optional<COutPoint> out_point = ConsumeDeserializable<COutPoint>(fuzzed_data_provider);\n+            if (!out_point) {\n+                break;\n+            }\n+            bloom_filter.insert(*out_point);\n+            const bool present = bloom_filter.contains(*out_point);\n+            assert(present);\n+            break;\n+        }\n+        case 2: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            bloom_filter.insert(*u256);\n+            const bool present = bloom_filter.contains(*u256);\n+            assert(present);\n+            break;\n+        }\n+        case 3: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            (void)bloom_filter.contains(b);\n+            break;\n+        }\n+        case 4: {\n+            const Optional<COutPoint> out_point = ConsumeDeserializable<COutPoint>(fuzzed_data_provider);\n+            if (!out_point) {\n+                break;\n+            }\n+            (void)bloom_filter.contains(*out_point);\n+            break;\n+        }\n+        case 5: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            (void)bloom_filter.contains(*u256);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383930308",
      "id" : 383930308,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzMDMwOA==",
      "original_commit_id" : "d5d40e2e26a359aae2cc36f3e6794f5acf8d8aa7",
      "original_position" : 68,
      "path" : "src/test/fuzz/bloom_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 364205114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206",
      "updated_at" : "2020-02-25T17:09:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383930308",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383930383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383930383"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same",
      "commit_id" : "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "created_at" : "2020-02-25T14:56:38Z",
      "diff_hunk" : "@@ -0,0 +1,94 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bloom.h>\n+#include <optional.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    CBloomFilter bloom_filter{fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 10000000), 1.0 / fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, std::numeric_limits<unsigned int>::max()), fuzzed_data_provider.ConsumeIntegral<unsigned int>(), static_cast<unsigned char>(fuzzed_data_provider.PickValueInArray({BLOOM_UPDATE_NONE, BLOOM_UPDATE_ALL, BLOOM_UPDATE_P2PUBKEY_ONLY, BLOOM_UPDATE_MASK}))};\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 10)) {\n+        case 0: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            bloom_filter.insert(b);\n+            const bool present = bloom_filter.contains(b);\n+            assert(present);\n+            break;\n+        }\n+        case 1: {\n+            const Optional<COutPoint> out_point = ConsumeDeserializable<COutPoint>(fuzzed_data_provider);\n+            if (!out_point) {\n+                break;\n+            }\n+            bloom_filter.insert(*out_point);\n+            const bool present = bloom_filter.contains(*out_point);\n+            assert(present);\n+            break;\n+        }\n+        case 2: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            bloom_filter.insert(*u256);\n+            const bool present = bloom_filter.contains(*u256);\n+            assert(present);\n+            break;\n+        }\n+        case 3: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            (void)bloom_filter.contains(b);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383930383",
      "id" : 383930383,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzMDM4Mw==",
      "original_commit_id" : "d5d40e2e26a359aae2cc36f3e6794f5acf8d8aa7",
      "original_position" : 52,
      "path" : "src/test/fuzz/bloom_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 364205114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206",
      "updated_at" : "2020-02-25T17:09:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383930383",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383931147"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383931147"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I know that our clang-format allows infinite length lines. But in editors that don't line-wrap this is really hard to read. Maybe add a newline after each `,`?",
      "commit_id" : "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "created_at" : "2020-02-25T14:57:41Z",
      "diff_hunk" : "@@ -0,0 +1,94 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bloom.h>\n+#include <optional.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    CBloomFilter bloom_filter{fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 10000000), 1.0 / fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, std::numeric_limits<unsigned int>::max()), fuzzed_data_provider.ConsumeIntegral<unsigned int>(), static_cast<unsigned char>(fuzzed_data_provider.PickValueInArray({BLOOM_UPDATE_NONE, BLOOM_UPDATE_ALL, BLOOM_UPDATE_P2PUBKEY_ONLY, BLOOM_UPDATE_MASK}))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383931147",
      "id" : 383931147,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzMTE0Nw==",
      "original_commit_id" : "d5d40e2e26a359aae2cc36f3e6794f5acf8d8aa7",
      "original_position" : 20,
      "path" : "src/test/fuzz/bloom_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 364205114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206",
      "updated_at" : "2020-02-25T17:09:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383931147",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383932139"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383932139"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why does this need to be fuzzer-instructed? More coverage can be achieved by calling it unconditionally.",
      "commit_id" : "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "created_at" : "2020-02-25T14:59:04Z",
      "diff_hunk" : "@@ -0,0 +1,94 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bloom.h>\n+#include <optional.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    CBloomFilter bloom_filter{fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 10000000), 1.0 / fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, std::numeric_limits<unsigned int>::max()), fuzzed_data_provider.ConsumeIntegral<unsigned int>(), static_cast<unsigned char>(fuzzed_data_provider.PickValueInArray({BLOOM_UPDATE_NONE, BLOOM_UPDATE_ALL, BLOOM_UPDATE_P2PUBKEY_ONLY, BLOOM_UPDATE_MASK}))};\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 10)) {\n+        case 0: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            bloom_filter.insert(b);\n+            const bool present = bloom_filter.contains(b);\n+            assert(present);\n+            break;\n+        }\n+        case 1: {\n+            const Optional<COutPoint> out_point = ConsumeDeserializable<COutPoint>(fuzzed_data_provider);\n+            if (!out_point) {\n+                break;\n+            }\n+            bloom_filter.insert(*out_point);\n+            const bool present = bloom_filter.contains(*out_point);\n+            assert(present);\n+            break;\n+        }\n+        case 2: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            bloom_filter.insert(*u256);\n+            const bool present = bloom_filter.contains(*u256);\n+            assert(present);\n+            break;\n+        }\n+        case 3: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            (void)bloom_filter.contains(b);\n+            break;\n+        }\n+        case 4: {\n+            const Optional<COutPoint> out_point = ConsumeDeserializable<COutPoint>(fuzzed_data_provider);\n+            if (!out_point) {\n+                break;\n+            }\n+            (void)bloom_filter.contains(*out_point);\n+            break;\n+        }\n+        case 5: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            (void)bloom_filter.contains(*u256);\n+            break;\n+        }\n+        case 6:\n+            bloom_filter.clear();\n+            break;\n+        case 7:\n+            bloom_filter.reset(fuzzed_data_provider.ConsumeIntegral<unsigned int>());\n+            break;\n+        case 8:\n+            (void)bloom_filter.IsWithinSizeConstraints();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383932139",
      "id" : 383932139,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzMjEzOQ==",
      "original_commit_id" : "d5d40e2e26a359aae2cc36f3e6794f5acf8d8aa7",
      "original_position" : 78,
      "path" : "src/test/fuzz/bloom_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 364205114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206",
      "updated_at" : "2020-02-25T17:09:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383932139",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383934449"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383934449"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why include itself?",
      "commit_id" : "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "created_at" : "2020-02-25T15:02:22Z",
      "diff_hunk" : "@@ -5,10 +5,39 @@\n #ifndef BITCOIN_TEST_FUZZ_FUZZ_H\n #define BITCOIN_TEST_FUZZ_FUZZ_H\n \n-#include <stdint.h>\n+#include <attributes.h>\n+#include <optional.h>\n+#include <serialize.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383934449",
      "id" : 383934449,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzNDQ0OQ==",
      "original_commit_id" : "d5d40e2e26a359aae2cc36f3e6794f5acf8d8aa7",
      "original_position" : 10,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : null,
      "pull_request_review_id" : 364205114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206",
      "updated_at" : "2020-02-25T17:09:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383934449",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383935504"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383935504"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This header takes a long time to parse, but not every fuzz target is using it. It might reduce compile time to put the fuzzedDataProvider helpers in a new module (header) and keep this header the raw and minimal \"main fuzz header\"",
      "commit_id" : "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "created_at" : "2020-02-25T15:03:54Z",
      "diff_hunk" : "@@ -5,10 +5,39 @@\n #ifndef BITCOIN_TEST_FUZZ_FUZZ_H\n #define BITCOIN_TEST_FUZZ_FUZZ_H\n \n-#include <stdint.h>\n+#include <attributes.h>\n+#include <optional.h>\n+#include <serialize.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383935504",
      "id" : 383935504,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzNTUwNA==",
      "original_commit_id" : "d5d40e2e26a359aae2cc36f3e6794f5acf8d8aa7",
      "original_position" : 7,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : null,
      "pull_request_review_id" : 364205114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206",
      "updated_at" : "2020-02-25T17:09:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383935504",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383936633"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383936633"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\r\n\r\nWhy does this need to be a different fuzzer-instructed path? I'd guess it would be simpler and more efficient to call this as the first step in case 1\r\n",
      "commit_id" : "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "created_at" : "2020-02-25T15:05:45Z",
      "diff_hunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bloom.h>\n+#include <optional.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    CRollingBloomFilter rolling_bloom_filter{fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 1000), 0.999 / fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, std::numeric_limits<unsigned int>::max())};\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 4)) {\n+        case 0: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            rolling_bloom_filter.insert(b);\n+            const bool present = rolling_bloom_filter.contains(b);\n+            assert(present);\n+            break;\n+        }\n+        case 1: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            rolling_bloom_filter.insert(*u256);\n+            const bool present = rolling_bloom_filter.contains(*u256);\n+            assert(present);\n+            break;\n+        }\n+        case 2: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            (void)rolling_bloom_filter.contains(b);\n+            break;\n+        }\n+        case 3: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            (void)rolling_bloom_filter.contains(*u256);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383936633",
      "id" : 383936633,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzNjYzMw==",
      "original_commit_id" : "d5d40e2e26a359aae2cc36f3e6794f5acf8d8aa7",
      "original_position" : 49,
      "path" : "src/test/fuzz/rolling_bloom_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 364205114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206",
      "updated_at" : "2020-02-25T17:09:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383936633",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383936709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383936709"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same",
      "commit_id" : "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "created_at" : "2020-02-25T15:05:49Z",
      "diff_hunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bloom.h>\n+#include <optional.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    CRollingBloomFilter rolling_bloom_filter{fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 1000), 0.999 / fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, std::numeric_limits<unsigned int>::max())};\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 4)) {\n+        case 0: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            rolling_bloom_filter.insert(b);\n+            const bool present = rolling_bloom_filter.contains(b);\n+            assert(present);\n+            break;\n+        }\n+        case 1: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            rolling_bloom_filter.insert(*u256);\n+            const bool present = rolling_bloom_filter.contains(*u256);\n+            assert(present);\n+            break;\n+        }\n+        case 2: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            (void)rolling_bloom_filter.contains(b);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383936709",
      "id" : 383936709,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzNjcwOQ==",
      "original_commit_id" : "d5d40e2e26a359aae2cc36f3e6794f5acf8d8aa7",
      "original_position" : 41,
      "path" : "src/test/fuzz/rolling_bloom_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 364205114,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206",
      "updated_at" : "2020-02-25T17:09:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383936709",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383996964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383996964"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point. Fixed!",
      "commit_id" : "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "created_at" : "2020-02-25T16:53:06Z",
      "diff_hunk" : "@@ -0,0 +1,94 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bloom.h>\n+#include <optional.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    CBloomFilter bloom_filter{fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 10000000), 1.0 / fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, std::numeric_limits<unsigned int>::max()), fuzzed_data_provider.ConsumeIntegral<unsigned int>(), static_cast<unsigned char>(fuzzed_data_provider.PickValueInArray({BLOOM_UPDATE_NONE, BLOOM_UPDATE_ALL, BLOOM_UPDATE_P2PUBKEY_ONLY, BLOOM_UPDATE_MASK}))};\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 10)) {\n+        case 0: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            bloom_filter.insert(b);\n+            const bool present = bloom_filter.contains(b);\n+            assert(present);\n+            break;\n+        }\n+        case 1: {\n+            const Optional<COutPoint> out_point = ConsumeDeserializable<COutPoint>(fuzzed_data_provider);\n+            if (!out_point) {\n+                break;\n+            }\n+            bloom_filter.insert(*out_point);\n+            const bool present = bloom_filter.contains(*out_point);\n+            assert(present);\n+            break;\n+        }\n+        case 2: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            bloom_filter.insert(*u256);\n+            const bool present = bloom_filter.contains(*u256);\n+            assert(present);\n+            break;\n+        }\n+        case 3: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            (void)bloom_filter.contains(b);\n+            break;\n+        }\n+        case 4: {\n+            const Optional<COutPoint> out_point = ConsumeDeserializable<COutPoint>(fuzzed_data_provider);\n+            if (!out_point) {\n+                break;\n+            }\n+            (void)bloom_filter.contains(*out_point);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383996964",
      "id" : 383996964,
      "in_reply_to_id" : 383930058,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk5Njk2NA==",
      "original_commit_id" : "d5d40e2e26a359aae2cc36f3e6794f5acf8d8aa7",
      "original_position" : 60,
      "path" : "src/test/fuzz/bloom_filter.cpp",
      "position" : null,
      "pull_request_review_id" : 364291261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206",
      "updated_at" : "2020-02-25T17:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383996964",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r384005428"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384005428"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point. Now fixed.",
      "commit_id" : "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "created_at" : "2020-02-25T17:06:09Z",
      "diff_hunk" : "@@ -5,10 +5,39 @@\n #ifndef BITCOIN_TEST_FUZZ_FUZZ_H\n #define BITCOIN_TEST_FUZZ_FUZZ_H\n \n-#include <stdint.h>\n+#include <attributes.h>\n+#include <optional.h>\n+#include <serialize.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#discussion_r384005428",
      "id" : 384005428,
      "in_reply_to_id" : 383935504,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAwNTQyOA==",
      "original_commit_id" : "d5d40e2e26a359aae2cc36f3e6794f5acf8d8aa7",
      "original_position" : 7,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : null,
      "pull_request_review_id" : 364301358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18206",
      "updated_at" : "2020-02-25T17:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384005428",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Thanks for reviewing. Good feedback! All points addressed - please re-review :)",
      "created_at" : "2020-02-25T17:11:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18206#issuecomment-590968969",
      "id" : 590968969,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18206",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MDk2ODk2OQ==",
      "updated_at" : "2020-02-25T17:11:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590968969",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
