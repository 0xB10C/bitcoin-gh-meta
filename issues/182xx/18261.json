{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "This is an implementation of [Erlay](https://arxiv.org/abs/1905.10518), using primitives in the BIP-330 (see the updated spec [here](https://github.com/bitcoin/bips/pull/899)). Please refer to these two to understand the design. My talk on the topic is [here](https://youtu.be/YxsjdIl0034?t=670).\r\n\r\nErlay uses both flooding (announcing using INV messages to all peers) and reconciliation to announce transactions. Flooding is expensive, so Erlay seeks to use it sparingly and in strategic locations - only well-connected publicly reachable nodes flood transactions to other publicly reachable nodes via outbound connections. Since every unreachable node is directly connected to several reachable nodes, this policy ensures that a transaction is quickly propagated to be within one hop from most of the nodes in the network.\r\n\r\nAll transactions not propagated through flooding are propagated through efficient set reconciliation. To do this, every node keeps a reconciliation set for each peer, in which transactions are placed which would have been announced using INV messages absent this protocol. Every 2 seconds every node chooses a peer from its outbound connections in a predetermined order to reconcile with, resulting in both sides learning the transactions known to the other side. After every reconciliation round, the corresponding reconciliation set is cleared.\r\n\r\nI think both paper and the BIP motives the changes, but I'll mention them briefly once again here:\r\n- save 40% of the bandwidth consumed by a node\r\n- increase network connectivity for almost no bandwidth or latency cost\r\n- improves privacy as a side-effect\r\n\r\nObviously looking for review, let's try to start with a high-level concerns, and keep nits for later.\r\n\r\nI also have a nice-to-have list (I will do it at some point, but some help would be really great):\r\n- [ ] better logging\r\n- [ ] make a big regtest test (real recon nodes talking to each other) \r\n- [ ] **reproduce and figure out why current functional tests fail sometimes (beginning of test_outgoing_recon)**\r\n\r\n_Rebased on bitcoin#18044_",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/comments",
   "created_at" : "2020-03-04T20:01:31Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/18261",
   "id" : 575726877,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MzgzODM3MDY2",
   "number" : 18261,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/18261.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18261",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/18261.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18261"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Erlay: bandwidth-efficient transaction relay protocol",
   "updated_at" : "2020-03-04T20:13:32Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18261",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
      "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
      "followers_url" : "https://api.github.com/users/naumenkogs/followers",
      "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/naumenkogs",
      "id" : 7975071,
      "login" : "naumenkogs",
      "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
      "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
      "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
      "repos_url" : "https://api.github.com/users/naumenkogs/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/naumenkogs"
   }
}
