[
   {
      "author_association" : "MEMBER",
      "body" : "We already run against valgrind and msan is a subset of valgrind according to: \"MSan implements a subset of functionality found in Valgrind (Memcheck tool). It is significantly faster than Memcheck (TODO:benchmark).\" (https://github.com/google/sanitizers/wiki/MemorySanitizer)",
      "created_at" : "2020-03-07T21:20:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18288#issuecomment-596138689",
      "id" : 596138689,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NjEzODY4OQ==",
      "updated_at" : "2020-03-07T21:20:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596138689",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n\r\nI think we should use both. While both tools try to find uses of uninitialized memory (UUM) they are implemented in totally different ways: Valgrind's memcheck is using binary translation while MSan is using compiler-based instrumentation. ~~From my experience it is not guaranteed that Valgrind finds all issues reported by MSan and vice versa.~~\r\n\r\nFurthermore, having the combination libFuzzer+MSan readily available is really crucial when fuzzing. The combination libFuzzer+Valgrind is only usable for testing against an existing fuzzing corpus like we do in Travis -- not for doing any actual fuzzing. For the libFuzzer+MSan combination to be available it is important to have the cumbersome MSan setup process documented and also kept up-to-date and working over time. We get that for free by having an MSan build in Travis.\r\n\r\nAlso MSan is order of magnitudes faster than Valgrind which means that we can run also tests that are too slow for Valgrind in Travis.\r\n\r\nAnd last but not least MSan can report the name of the variable that has not been initialized (thanks to MSan using compiler-based instrumentation). Valgrind only points to the function name.\r\n\r\nIn summary: I think having MSan in Travis is a very clear win. Let's use all available tools to try to kill the uninitialized memory (UUM) bug class :)\r\n\r\nLet me know if you can think of any problems that could arise from testing also under MSan in Travis.",
      "created_at" : "2020-03-07T23:14:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18288#issuecomment-596147058",
      "id" : 596147058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NjE0NzA1OA==",
      "updated_at" : "2020-03-08T08:40:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596147058",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n\r\n> We already run against valgrind [â¦]\r\n\r\nCorrect if you mean the unit tests.\r\n\r\nIncorrect if you mean the functional tests :)\r\n\r\nDue to Valgrind's slowness we currently only run a single(!) functional test under Valgrind (`TEST_RUNNER_EXTRA=\"p2p_segwit.py\"`).\r\n\r\nNote that this PR runs all available functional tests (and unit tests) under MSan.",
      "created_at" : "2020-03-07T23:23:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18288#issuecomment-596147603",
      "id" : 596147603,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NjE0NzYwMw==",
      "updated_at" : "2020-03-07T23:25:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596147603",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd love to see a bug that msan catches that valgrind doesn't.",
      "created_at" : "2020-03-08T01:38:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18288#issuecomment-596156198",
      "id" : 596156198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NjE1NjE5OA==",
      "updated_at" : "2020-03-08T01:38:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596156198",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > From my experience it is not guaranteed that Valgrind finds all issues reported by MSan and vice versa.\r\n>\r\n> I'd love to see a bug that msan catches that valgrind doesn't.\r\n\r\nSorry about making a vague claim that I cannot back up with an example. Until I can provide an example we can simplify the discussion by assuming that I was flat out wrong about the possibility of Valgrind not catching an issue found by MSan (given enough runtime to compensate for being orders of magnitude slower than MSan).\r\n\r\nFrom a practical perspective the main reason to start using MSan is the speedup that will allow us to go from detecting use of uninitialized memory in code covered by a single(!) functional test (`p2p_segwit.py`) to detecting use of uninitialized memory in *all* code covered by our functional tests.\r\n\r\nPlease note that I'm not suggesting removing the Valgrind job: I think we should use both and ideally bump the timeouts so that Valgrind can test a couple of more functional tests at least :)\r\n\r\n(Just to be clear: I love **both** Valgrind (proof of love: #18166, #18162, #18159, #17633, #17640, #17624, #17455, #15117, #11035, #11024, #10977) and MSan â I use them daily :))\r\n\r\nLet me know if you can think of any problems that could arise from testing also under MSan in Travis.",
      "created_at" : "2020-03-08T08:24:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18288#issuecomment-596179265",
      "id" : 596179265,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18288",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NjE3OTI2NQ==",
      "updated_at" : "2020-03-08T08:33:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596179265",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
