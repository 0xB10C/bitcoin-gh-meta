[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19438 (Introduce deploymentstatus by ajtowns)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-03-05T15:30:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-595290205",
      "id" : 595290205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NTI5MDIwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T04:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595290205",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-03-05T21:43:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-595462480",
      "id" : 595462480,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NTQ2MjQ4MA==",
      "updated_at" : "2020-03-05T21:43:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595462480",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/fa733bbd78add587e19f0175ab9c127a8c27e024/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-03-11T19:05:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-597814436",
      "id" : 597814436,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NzgxNDQzNg==",
      "updated_at" : "2020-03-11T19:05:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597814436",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/fa733bbd78add587e19f0175ab9c127a8c27e024/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-03-13T22:57:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-598964911",
      "id" : 598964911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5ODk2NDkxMQ==",
      "updated_at" : "2020-03-13T22:57:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/598964911",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Local build and tests green, will review shortly.",
      "created_at" : "2020-03-22T20:34:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-602268095",
      "id" : 602268095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjI2ODA5NQ==",
      "updated_at" : "2020-03-22T20:34:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602268095",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-03-27T07:16:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-604851263",
      "id" : 604851263,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNDg1MTI2Mw==",
      "updated_at" : "2020-03-27T07:16:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/604851263",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r405546360"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405546360"
         }
      },
      "author_association" : "MEMBER",
      "body" : "shouldn't we at least assert that the length of the script is > 0?\r\n\r\na normal `script.GetOp` and checking the result seems more self-explanatory and safe to me",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-08T13:58:37Z",
      "diff_hunk" : "@@ -28,3 +28,65 @@ std::string CBlock::ToString() const\n     }\n     return s.str();\n }\n+\n+bool CBlock::GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const\n+{\n+    int cidx = GetWitnessCommitmentIndex();\n+    if (cidx == -1) return false;\n+    auto script = vtx.at(0)->vout.at(cidx).scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    ++pc; // move beyond initial OP_RETURN",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r405546360",
      "id" : 405546360,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0NjM2MA==",
      "original_commit_id" : "79865a6d28e309334450fa58cb5d201f108ed23a",
      "original_line" : 39,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/primitives/block.cpp",
      "position" : null,
      "pull_request_review_id" : 390001251,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405546360",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> bitcoin-qt: qt/bitcoin.cpp:528: int GuiMain(int, char**): Assertion `!networkStyle.isNull()' failed.\r\n\r\noops",
      "created_at" : "2020-04-08T14:18:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-610986949",
      "id" : 610986949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMDk4Njk0OQ==",
      "updated_at" : "2020-04-08T14:18:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/610986949",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > bitcoin-qt: qt/bitcoin.cpp:528: int GuiMain(int, char**): Assertion `!networkStyle.isNull()' failed.\r\n> \r\n> oops\r\n\r\nOh.. Yeah I wanted to keep this ultra minimal, but I should probably not crash QT, yeah... :)",
      "created_at" : "2020-04-09T03:42:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-611311289",
      "id" : 611311289,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMTMxMTI4OQ==",
      "updated_at" : "2020-04-09T03:42:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/611311289",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r405939735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405939735"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it's strictly necessary as the witness commitment index search requires an OP_RETURN, but I don't think it hurts either so will switch.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-09T03:46:08Z",
      "diff_hunk" : "@@ -28,3 +28,65 @@ std::string CBlock::ToString() const\n     }\n     return s.str();\n }\n+\n+bool CBlock::GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const\n+{\n+    int cidx = GetWitnessCommitmentIndex();\n+    if (cidx == -1) return false;\n+    auto script = vtx.at(0)->vout.at(cidx).scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    ++pc; // move beyond initial OP_RETURN",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r405939735",
      "id" : 405939735,
      "in_reply_to_id" : 405546360,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkzOTczNQ==",
      "original_commit_id" : "79865a6d28e309334450fa58cb5d201f108ed23a",
      "original_line" : 39,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/primitives/block.cpp",
      "position" : null,
      "pull_request_review_id" : 390472523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405939735",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> concept ACK, scope ACK, if I can actually connect to signet(still waiting for connections from DNS response)\r\n\r\nWeird. I just now started a fresh instance with a new datadir and it instantly connected and started syncing blocks..",
      "created_at" : "2020-04-09T04:19:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-611319221",
      "id" : 611319221,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMTMxOTIyMQ==",
      "updated_at" : "2020-04-09T04:19:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/611319221",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-04-10T18:43:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-612164295",
      "id" : 612164295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjE2NDI5NQ==",
      "updated_at" : "2020-04-10T18:43:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612164295",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Signet worked perfectly the first try :100: ...following the instructions at https://gist.github.com/kallewoof/98b6d8dbe126d2b6f47da0ddccd2aa5a... now reviewing",
      "created_at" : "2020-04-27T18:26:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-620154768",
      "id" : 620154768,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMDE1NDc2OA==",
      "updated_at" : "2020-04-27T18:26:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620154768",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Er, I was excited (e.g. \"this is so cool\") and should have been more specific.\r\n\r\n<details>\r\n<summary>Here is what I did after building this PR branch... :memo:</summary>\r\n<p>\r\n\r\n```bash\r\ncd src\r\nmkdir signet\r\necho \"signet=1\" > signet/bitcoin.conf\r\n\r\n./bitcoind -datadir=signet  # in a separate terminal buffer to watch the debug log\r\n\r\n./bitcoin-cli -datadir=signet -getinfo\r\n\r\n./bitcoin-cli -datadir=signet getnewaddress\r\nsb1q77gyzqu9fawygs9suvyfaga2f4mn9kmz2yudk0\r\n\r\n./bitcoin-cli -datadir=signet setlabel sb1q77gyzqu9fawygs9suvyfaga2f4mn9kmz2yudk0 testing-signet\r\n\r\n./bitcoin-cli -datadir=signet getaddressinfo sb1q77gyzqu9fawygs9suvyfaga2f4mn9kmz2yudk0\r\n{\r\n  \"address\": \"sb1q77gyzqu9fawygs9suvyfaga2f4mn9kmz2yudk0\",\r\n  \"scriptPubKey\": \"0014f7904103854f5c4440b0e3089ea3aa4d7732db62\",\r\n  \"ismine\": true,\r\n  \"solvable\": true,\r\n  \"desc\": \"wpkh([6352002d/0'/0'/0']028f681e25caadc71f45e7811775f4e73b5b27ce7bf335888d514a9fc3999c55c1)#de6xjlkq\",\r\n  \"iswatchonly\": false,\r\n  \"isscript\": false,\r\n  \"iswitness\": true,\r\n  \"witness_version\": 0,\r\n  \"witness_program\": \"f7904103854f5c4440b0e3089ea3aa4d7732db62\",\r\n  \"pubkey\": \"028f681e25caadc71f45e7811775f4e73b5b27ce7bf335888d514a9fc3999c55c1\",\r\n  \"ischange\": false,\r\n  \"timestamp\": 1588011190,\r\n  \"hdkeypath\": \"m/0'/0'/0'\",\r\n  \"hdseedid\": \"50a32a27b26929927079cef87b19a7ffb673871b\",\r\n  \"hdmasterfingerprint\": \"6352002d\",\r\n  \"labels\": [\r\n    \"testing-signet\"\r\n  ]\r\n}\r\n```\r\n\r\nObtain 10 signet coins at https://signet.bc-2.jp/\r\n```\r\nPayment of 10.00000000 BTC sent with txid 1fb49b9b484e42f5f19a1e5491b1760f949c303a297a63b68e41e9e9f379b3d5\r\n```\r\n\r\nVerify reception\r\n```json\r\n./bitcoin-cli -datadir=signet gettransaction 1fb49b9b484e42f5f19a1e5491b1760f949c303a297a63b68e41e9e9f379b3d5\r\n{\r\n  \"amount\": 10.00000000,\r\n  \"confirmations\": 0,\r\n  \"trusted\": false,\r\n  \"txid\": \"1fb49b9b484e42f5f19a1e5491b1760f949c303a297a63b68e41e9e9f379b3d5\",\r\n  \"walletconflicts\": [\r\n  ],\r\n  \"time\": 1588011612,\r\n  \"timereceived\": 1588011612,\r\n  \"bip125-replaceable\": \"no\",\r\n  \"details\": [\r\n    {\r\n      \"address\": \"sb1q77gyzqu9fawygs9suvyfaga2f4mn9kmz2yudk0\",\r\n      \"category\": \"receive\",\r\n      \"amount\": 10.00000000,\r\n      \"label\": \"testing-signet\",\r\n      \"vout\": 0\r\n    }\r\n  ],\r\n  \"hex\": \"0200000000010154c0f4e926d77105e30311dd126f3a06aed63f7aa722702dd0c606e2f05a8db80100000000feffffff0200ca9a3b00000000160014f7904103854f5c4440b0e3089ea3aa4d7732db62fc33c6b8000000001600149218f528e0ebd953fdc72a7f42150facbe545ee1024730440220422cd8b64cdd49a87636ada6d41bfa761b592f99edc7d21081ba2b54e4d0672502207156fba2cec09d990a243c6925f4bca53e123730d13076d3e68cc0f96795e645012102a53a66b296489e8cd996c216d2c90e682187cce883f55d06c188daf5e8779816101f0000\"\r\n}\r\n\r\n./bitcoin-cli -datadir=signet getbalances\r\n{\r\n  \"mine\": {\r\n    \"trusted\": 0.00000000,\r\n    \"untrusted_pending\": 10.00000000,\r\n    \"immature\": 0.00000000\r\n  }\r\n}\r\n```\r\n\r\n...and after a few minutes...\r\n\r\n```json\r\n./bitcoin-cli -datadir=signet getbalances\r\n{\r\n  \"mine\": {\r\n    \"trusted\": 10.00000000,\r\n    \"untrusted_pending\": 0.00000000,\r\n    \"immature\": 0.00000000\r\n  }\r\n}\r\n\r\n./bitcoin-cli -datadir=signet -getinfo\r\n{\r\n  \"version\": 209900,\r\n  \"blocks\": 8055,\r\n  \"headers\": 8055,\r\n  \"verificationprogress\": 1.544713757023421e-05,\r\n  \"timeoffset\": 0,\r\n  \"connections\": 3,\r\n  \"proxy\": \"\",\r\n  \"difficulty\": 0.0008245888870457042,\r\n  \"chain\": \"signet\",\r\n  \"keypoolsize\": 999,\r\n  \"paytxfee\": 0.00000000,\r\n  \"balance\": 10.00000000,\r\n  \"relayfee\": 0.00001000,\r\n  \"warnings\": \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\"\r\n}\r\n\r\n./bitcoin-cli -datadir=signet stop\r\n```\r\n</p>\r\n</details>\r\n",
      "created_at" : "2020-04-28T12:18:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-620569419",
      "id" : 620569419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMDU2OTQxOQ==",
      "updated_at" : "2020-04-28T13:39:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620569419",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416625974"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416625974"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in 63b5d7a, if #18780 is merged, can replace `38` with `MINIMUM_WITNESS_COMMITMENT`",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-28T13:46:09Z",
      "diff_hunk" : "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416625974",
      "id" : 416625974,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYyNTk3NA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 137,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 401850965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416625974",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416633644"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416633644"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in 63b5d7a3a7e6081e perhaps replace the four `-1` commitment index values in `block.h/.cpp` with a static constant whose name could also make their meaning explicit",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-28T13:56:02Z",
      "diff_hunk" : "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416633644",
      "id" : 416633644,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYzMzY0NA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 126,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 401850965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416633644",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416679361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416679361"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: s/signet/SigNet/",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-28T14:52:50Z",
      "diff_hunk" : "@@ -264,17 +264,22 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_seednode\")) {\n-            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n-        }\n+            LogPrintf(\"Using default signet network\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416679361",
      "id" : 416679361,
      "line" : 268,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3OTM2MQ==",
      "original_commit_id" : "de4ef268a3a7db75d2a82a3b803f5d49e2ebe45e",
      "original_line" : 268,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 40,
      "pull_request_review_id" : 401918081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416679361",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416897762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416897762"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in d55bcb17844e6e68 perhaps cache the args in a localvar\r\n```diff\r\n-            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\r\n+            const auto sbs = args.GetArgs(\"-signet_blockscript\");\r\n+            if (sbs.size() != 1) {\r\n                 throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\r\n             }\r\n-            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\r\n+            bin = ParseHex(sbs[0]);\r\n             if (args.IsArgSet(\"-signet_seednode\")) {\r\n                 vSeeds = gArgs.GetArgs(\"-signet_seednode\");\r\n             }\r\n \r\n-            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\r\n+            LogPrintf(\"SigNet with block script %s\\n\", sbs[0]);\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-28T20:22:22Z",
      "diff_hunk" : "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416897762",
      "id" : 416897762,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5Nzc2Mg==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 276,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 401850965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416897762",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416905437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416905437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In d55bcb1, how did you arrive at this `powLimit` value?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-28T20:36:05Z",
      "diff_hunk" : "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        g_signet_blockscript = CScript(bin.begin(), bin.end());\n+        consensus.signet_blocks = true;\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416905437",
      "id" : 416905437,
      "line" : 302,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkwNTQzNw==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 302,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 74,
      "pull_request_review_id" : 401850965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416905437",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416910629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416910629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d55bcb1 do we need any of these additional params to be set in `SigNetParams`? (values tba). Some of them may have been added since this PR was made.\r\n```diff\r\n+        // The best chain should have at least this much work.\r\n+        consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000000001495c1d5a01e2af8a23\");\r\n+\r\n+        // By default assume that the signatures in ancestors of this block are valid.\r\n+        consensus.defaultAssumeValid = uint256S(\"0x000000000000056c49030c174179b52a928c870e6e8a822c75973b7970cfbd01\"); // 1692000\r\n \r\n         nDefaultPort = 38333;\r\n         nPruneAfterHeight = 1000;\r\n+        m_assumed_blockchain_size = 40;\r\n+        m_assumed_chain_state_size = 2;\r\n \r\n         fDefaultConsistencyChecks = false;\r\n         fRequireStandard = true;\r\n         m_is_test_chain = true;\r\n+        m_is_mockable_chain = true;\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-28T20:45:35Z",
      "diff_hunk" : "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        g_signet_blockscript = CScript(bin.begin(), bin.end());\n+        consensus.signet_blocks = true;\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << g_signet_blockscript;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"sb\" + args.GetArg(\"-signet_hrp\", \"\");\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416910629",
      "id" : 416910629,
      "line" : 333,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkxMDYyOQ==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 333,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 105,
      "pull_request_review_id" : 401850965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416910629",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416972019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416972019"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d55bcb1 I like the readability of snakecased config options, but is the current convention that they be without separators? e.g. -signetblockscript, -signethrp, -signetseednode",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-28T22:54:38Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416972019",
      "id" : 416972019,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3MjAxOQ==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 29,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 401850965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416972019",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416972958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416972958"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d55bcb1 nit: s/Human readable/Human-readable/",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-28T22:57:09Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416972958",
      "id" : 416972958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3Mjk1OA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 29,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 401850965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416972958",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416976162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416976162"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In d55bcb1, maintain the same sort (main/testnet/signet/regtest) here as in `chainparamsbase.h`?\r\n```diff\r\n-    else if (chain == CBaseChainParams::REGTEST)\r\n-        return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\r\n     else if (chain == CBaseChainParams::SIGNET)\r\n         return MakeUnique<CBaseChainParams>(\"signet\", 38332);\r\n+    else if (chain == CBaseChainParams::REGTEST)\r\n+        return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\r\n```\r\nAlso, should we keep the `else` before the throw?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-28T23:05:55Z",
      "diff_hunk" : "@@ -41,8 +46,9 @@ std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain\n         return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n     else if (chain == CBaseChainParams::REGTEST)\n         return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n-    else\n-        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+    else if (chain == CBaseChainParams::SIGNET)\n+        return MakeUnique<CBaseChainParams>(\"signet\", 38332);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r416976162",
      "id" : 416976162,
      "line" : 47,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3NjE2Mg==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 47,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : 30,
      "pull_request_review_id" : 401850965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416976162",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417267584"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417267584"
         }
      },
      "author_association" : "MEMBER",
      "body" : "d55bcb1 perhaps maintain the same sort (main/testnet/signet/regtest) here (and in general wherever the four chains are enumerated)?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T12:13:34Z",
      "diff_hunk" : "@@ -396,6 +477,9 @@ std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n         return std::unique_ptr<CChainParams>(new CRegTestParams(gArgs));\n+    else if (chain == CBaseChainParams::SIGNET) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417267584",
      "id" : 417267584,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI2NzU4NA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 491,
      "original_position" : 120,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 401850965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417267584",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417298730"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417298730"
         }
      },
      "author_association" : "MEMBER",
      "body" : "db73201 istm a comment here and at line 3300 below would be helpful (the neighbouring code is commented as well)",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T13:06:24Z",
      "diff_hunk" : "@@ -1151,6 +1152,11 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n     if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n+    if (consensusParams.signet_blocks && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417298730",
      "id" : 417298730,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5ODczMA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 1167,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 401850965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417298730",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417314418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417314418"
         }
      },
      "author_association" : "MEMBER",
      "body" : "63b5d7a3a7e6081e3b42a78ad1f nit: would it be better to construct rather than copy?\r\n```diff\r\n-    result.push_back(*pc++);\r\n+    result.emplace_back(*pc++);\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T13:29:46Z",
      "diff_hunk" : "@@ -28,3 +28,67 @@ std::string CBlock::ToString() const\n     }\n     return s.str();\n }\n+\n+bool CBlock::GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const\n+{\n+    int cidx = GetWitnessCommitmentIndex();\n+    if (cidx == -1) return false;\n+    auto script = vtx.at(0)->vout.at(cidx).scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    // move beyond initial OP_RETURN\n+    if (pc != script.end() && script.GetOp(pc, opcode, result) && opcode == OP_RETURN) {\n+        while (script.GetOp(pc, opcode, result)) {\n+            if (result.size() > 3 && !memcmp(result.data(), header, 4)) {\n+                result.erase(result.begin(), result.begin() + 4);\n+                return true;\n+            }\n+        }\n+    }\n+    result.clear();\n+    return false;\n+}\n+\n+bool CBlock::SetWitnessCommitmentSection(CMutableTransaction& mtx, const uint8_t header[4], const std::vector<uint8_t>& data)\n+{\n+    int cidx = GetWitnessCommitmentIndex(mtx);\n+    if (cidx == -1) return false;\n+\n+    CScript result;\n+    std::vector<uint8_t> pushdata;\n+    auto script = mtx.vout[cidx].scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    result.push_back(*pc++);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417314418",
      "id" : 417314418,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxNDQxOA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/primitives/block.cpp",
      "position" : null,
      "pull_request_review_id" : 401850965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417314418",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417331044"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417331044"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not knowing this test, I was confused why this is needed until I dumped the file. So a little better explanation would be nice in the commit message. Suggestion: \"Even though the test is not changed, error messages for missing/invalid parameter combinations now include -signet. This is why the hash changes.\"",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T13:52:13Z",
      "diff_hunk" : "@@ -1125,7 +1125,7 @@ BOOST_FIXTURE_TEST_CASE(util_ChainMerge, ChainMergeTestingSetup)\n     // Results file is formatted like:\n     //\n     //   <input> || <output>\n-    BOOST_CHECK_EQUAL(out_sha_hex, \"f0b3a3c29869edc765d579c928f7f1690a71fbb673b49ccf39cbc4de18156a0d\");\n+    BOOST_CHECK_EQUAL(out_sha_hex, \"4645298a210e40fd8dfacc2b470be96a186f0ff2ebab328953cfe1ce866e55cf\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417331044",
      "id" : 417331044,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMzMTA0NA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 1109,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/util_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 401918081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417331044",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417353416"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417353416"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think there could be an additional comment for these CommitmentSection functions that they are specific for SigNet",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T14:21:03Z",
      "diff_hunk" : "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {\n+                return o;\n+            }\n+        }\n+        return -1;\n+    }\n+\n+    /**\n+     * Attempt to get the data for the section with the given header in the witness commitment of this block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417353416",
      "id" : 417353416,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1MzQxNg==",
      "original_commit_id" : "63b5d7a3a7e6081e3b42a78ad1fd1cafd578b49e",
      "original_line" : 158,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 401918081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417353416",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417359282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417359282"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Agree, I was even going to suggest pulling the whole SigNet header into a named constant and then work with that.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T14:28:21Z",
      "diff_hunk" : "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417359282",
      "id" : 417359282,
      "in_reply_to_id" : 416625974,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1OTI4Mg==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 137,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 401918081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417359282",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417363952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417363952"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "super nit\r\n```suggestion\r\n/** A low level signature checker. Note that it does not verify that the hash passed in relates to a known message (unlike for the other signature checkers). */\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T14:34:06Z",
      "diff_hunk" : "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417363952",
      "id" : 417363952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM2Mzk1Mg==",
      "original_commit_id" : "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "original_line" : 169,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 401918081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417363952",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417392936"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417392936"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit s/signet/SigNet/",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T15:11:10Z",
      "diff_hunk" : "@@ -249,13 +252,86 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417392936",
      "id" : 417392936,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM5MjkzNg==",
      "original_commit_id" : "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "original_line" : 267,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 401918081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417392936",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417394889"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417394889"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/signet/SigNet/",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T15:13:40Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417394889",
      "id" : 417394889,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM5NDg4OQ==",
      "original_commit_id" : "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "original_line" : 27,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 401918081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417394889",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417395253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417395253"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/signet/SigNet/",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T15:14:10Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417395253",
      "id" : 417395253,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM5NTI1Mw==",
      "original_commit_id" : "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "original_line" : 29,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 401918081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417395253",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Made a few signet transactions using the GUI. Works well.",
      "created_at" : "2020-04-29T15:54:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-621302081",
      "id" : 621302081,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMTMwMjA4MQ==",
      "updated_at" : "2020-04-29T15:54:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621302081",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417444593"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417444593"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I guess starting a custom signet without a seed node only makes sense if the user is running the seed node themselves. It might be worth a warning or a log message in case people wonder why nothing is happening if they forget this.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:22:04Z",
      "diff_hunk" : "@@ -249,13 +252,86 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417444593",
      "id" : 417444593,
      "line" : 284,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0NDU5Mw==",
      "original_commit_id" : "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "original_line" : 284,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 56,
      "pull_request_review_id" : 401918081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417444593",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417445644"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417445644"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was wondering about whether anyone would knee-jerk if we `#include <script/script.h>`'d, but then I realized this is already happening (evidenced by the fact `OP_RETURN` does not give a compile error here) via `primitives/transaction.h`, so it should be fine.\r\n\r\nSwitching to this, thanks!",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:23:46Z",
      "diff_hunk" : "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417445644",
      "id" : 417445644,
      "in_reply_to_id" : 416625974,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0NTY0NA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 137,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 402833061,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417445644",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417448693"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417448693"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense; also switching the couple of places in validation.cpp where `-1` is used.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:28:27Z",
      "diff_hunk" : "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417448693",
      "id" : 417448693,
      "in_reply_to_id" : 416633644,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0ODY5Mw==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 126,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 402836749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417448693",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417450702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417450702"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sounds good!",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:31:27Z",
      "diff_hunk" : "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417450702",
      "id" : 417450702,
      "in_reply_to_id" : 416897762,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1MDcwMg==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 276,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 402839174,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417450702",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417451540"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417451540"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ISTM the first version is correct?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:32:50Z",
      "diff_hunk" : "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417451540",
      "id" : 417451540,
      "in_reply_to_id" : 417363952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1MTU0MA==",
      "original_commit_id" : "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "original_line" : 169,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 402840244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417451540",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417451806"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417451806"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I grinded a block for a short while and picked the lowest resulting value. It is a bit more random than it needs to be, but doesn't seem harmful so I kept it as is.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:33:14Z",
      "diff_hunk" : "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        g_signet_blockscript = CScript(bin.begin(), bin.end());\n+        consensus.signet_blocks = true;\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417451806",
      "id" : 417451806,
      "in_reply_to_id" : 416905437,
      "line" : 302,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1MTgwNg==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 302,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 74,
      "pull_request_review_id" : 402840564,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417451806",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417452296"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417452296"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was wondering this, too.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:33:58Z",
      "diff_hunk" : "@@ -1125,7 +1125,7 @@ BOOST_FIXTURE_TEST_CASE(util_ChainMerge, ChainMergeTestingSetup)\n     // Results file is formatted like:\n     //\n     //   <input> || <output>\n-    BOOST_CHECK_EQUAL(out_sha_hex, \"f0b3a3c29869edc765d579c928f7f1690a71fbb673b49ccf39cbc4de18156a0d\");\n+    BOOST_CHECK_EQUAL(out_sha_hex, \"4645298a210e40fd8dfacc2b470be96a186f0ff2ebab328953cfe1ce866e55cf\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417452296",
      "id" : 417452296,
      "in_reply_to_id" : 417331044,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1MjI5Ng==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 1109,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/util_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 402841169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417452296",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417452794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417452794"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I didn't notice these additions, thanks. Adding. Edit: well, the first ones are from before; I was simply not including a minimum chain work or default assume valid.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:34:45Z",
      "diff_hunk" : "@@ -249,13 +252,91 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        g_signet_blockscript = CScript(bin.begin(), bin.end());\n+        consensus.signet_blocks = true;\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << g_signet_blockscript;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"sb\" + args.GetArg(\"-signet_hrp\", \"\");\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417452794",
      "id" : 417452794,
      "in_reply_to_id" : 416910629,
      "line" : 333,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1Mjc5NA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 333,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 105,
      "pull_request_review_id" : 402841806,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417452794",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417454170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417454170"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> ISTM the first version is correct?\r\n\r\nThat's why it's a nit.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:36:54Z",
      "diff_hunk" : "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417454170",
      "id" : 417454170,
      "in_reply_to_id" : 417363952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NDE3MA==",
      "original_commit_id" : "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "original_line" : 169,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 402843509,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417454170",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455144"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455144"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "There is a double space and it assumes that the caller has to do something which is why I like my version a bit better.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:38:25Z",
      "diff_hunk" : "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455144",
      "id" : 417455144,
      "in_reply_to_id" : 417363952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NTE0NA==",
      "original_commit_id" : "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "original_line" : 169,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 402844787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455144",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455255"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, I mean that I think the first version is better.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:38:35Z",
      "diff_hunk" : "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455255",
      "id" : 417455255,
      "in_reply_to_id" : 417363952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NTI1NQ==",
      "original_commit_id" : "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "original_line" : 169,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 402844913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455255",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455264"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455264"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Both seem to be acceptable. E.g. https://en.wikipedia.org/wiki/Human-readable_medium has as an example the sentence `Human readable protocols greatly reduce the cost of debugging.[1]`.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:38:36Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455264",
      "id" : 417455264,
      "in_reply_to_id" : 416972958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NTI2NA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 29,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 402844928,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455264",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455856"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I haven't heard of such a convention for options. I'll keep this until someone else yells at me, as it's spread around a bit. (Will change if it's important though!)",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:39:30Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417455856",
      "id" : 417455856,
      "in_reply_to_id" : 416972019,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NTg1Ng==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 29,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 402845649,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417455856",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417457480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417457480"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Yes, I mean that I think the first version is better.\r\n\r\nHow can you be sure that the caller always has to do this whenever this function is used?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:42:12Z",
      "diff_hunk" : "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417457480",
      "id" : 417457480,
      "in_reply_to_id" : 417363952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NzQ4MA==",
      "original_commit_id" : "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "original_line" : 169,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 402847749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417457480",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417457574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417457574"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Swapped; I don't see the point keeping the else as every if case returns, and it seems more clear to be explicit, but I can see the argument for minimal diffs...",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:42:20Z",
      "diff_hunk" : "@@ -41,8 +46,9 @@ std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain\n         return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n     else if (chain == CBaseChainParams::REGTEST)\n         return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n-    else\n-        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+    else if (chain == CBaseChainParams::SIGNET)\n+        return MakeUnique<CBaseChainParams>(\"signet\", 38332);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417457574",
      "id" : 417457574,
      "in_reply_to_id" : 416976162,
      "line" : 47,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NzU3NA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 47,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : 30,
      "pull_request_review_id" : 402847874,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417457574",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417459940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417459940"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe have a look at #18780 that looks like it's about to be merged to see if you want to pull in some of the changes.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:45:49Z",
      "diff_hunk" : "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417459940",
      "id" : 417459940,
      "in_reply_to_id" : 416625974,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1OTk0MA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 137,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 402850754,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417459940",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417460090"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417460090"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Switched to `emplace_back`",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:46:04Z",
      "diff_hunk" : "@@ -28,3 +28,67 @@ std::string CBlock::ToString() const\n     }\n     return s.str();\n }\n+\n+bool CBlock::GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const\n+{\n+    int cidx = GetWitnessCommitmentIndex();\n+    if (cidx == -1) return false;\n+    auto script = vtx.at(0)->vout.at(cidx).scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    // move beyond initial OP_RETURN\n+    if (pc != script.end() && script.GetOp(pc, opcode, result) && opcode == OP_RETURN) {\n+        while (script.GetOp(pc, opcode, result)) {\n+            if (result.size() > 3 && !memcmp(result.data(), header, 4)) {\n+                result.erase(result.begin(), result.begin() + 4);\n+                return true;\n+            }\n+        }\n+    }\n+    result.clear();\n+    return false;\n+}\n+\n+bool CBlock::SetWitnessCommitmentSection(CMutableTransaction& mtx, const uint8_t header[4], const std::vector<uint8_t>& data)\n+{\n+    int cidx = GetWitnessCommitmentIndex(mtx);\n+    if (cidx == -1) return false;\n+\n+    CScript result;\n+    std::vector<uint8_t> pushdata;\n+    auto script = mtx.vout[cidx].scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    result.push_back(*pc++);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417460090",
      "id" : 417460090,
      "in_reply_to_id" : 417314418,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2MDA5MA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/primitives/block.cpp",
      "position" : null,
      "pull_request_review_id" : 402850960,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417460090",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417462467"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417462467"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> There is a double space and it assumes that the caller has to do something which is why I like my version a bit better.\r\n\r\nDouble space is grammatically correct and the warning to the caller seems preferable IMO.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:49:40Z",
      "diff_hunk" : "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417462467",
      "id" : 417462467,
      "in_reply_to_id" : 417363952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2MjQ2Nw==",
      "original_commit_id" : "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "original_line" : 169,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 402853915,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417462467",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417465360"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417465360"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That's my point: \"must\" is not a warning, it's a requirement.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T16:53:46Z",
      "diff_hunk" : "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417465360",
      "id" : 417465360,
      "in_reply_to_id" : 417363952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2NTM2MA==",
      "original_commit_id" : "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "original_line" : 169,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 402857304,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417465360",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417470956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417470956"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think we call any of the other nets RegTest or TestNet, so signet seems OK here. I did a regexp search for `\"([^\"]*)testnet` and all instances I found used lowercase except for start-of-sentence-uppercasing.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T17:02:11Z",
      "diff_hunk" : "@@ -264,17 +264,22 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_seednode\")) {\n-            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n-        }\n+            LogPrintf(\"Using default signet network\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417470956",
      "id" : 417470956,
      "in_reply_to_id" : 416679361,
      "line" : 268,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MDk1Ng==",
      "original_commit_id" : "de4ef268a3a7db75d2a82a3b803f5d49e2ebe45e",
      "original_line" : 268,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 40,
      "pull_request_review_id" : 402864189,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417470956",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417471567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417471567"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Apologies; I don't actually expect this commit to make it through in the end. I should mark it as such. I believe this is something @laanwj wants to double check and commit when appropriate, but I may be off here.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T17:03:16Z",
      "diff_hunk" : "@@ -1125,7 +1125,7 @@ BOOST_FIXTURE_TEST_CASE(util_ChainMerge, ChainMergeTestingSetup)\n     // Results file is formatted like:\n     //\n     //   <input> || <output>\n-    BOOST_CHECK_EQUAL(out_sha_hex, \"f0b3a3c29869edc765d579c928f7f1690a71fbb673b49ccf39cbc4de18156a0d\");\n+    BOOST_CHECK_EQUAL(out_sha_hex, \"4645298a210e40fd8dfacc2b470be96a186f0ff2ebab328953cfe1ce866e55cf\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417471567",
      "id" : 417471567,
      "in_reply_to_id" : 417331044,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MTU2Nw==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 1109,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/util_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 402864971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417471567",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417472690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417472690"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Technically they're not; this code simply adds support for a feature that segwit always supported, which is the extension of the witness commitment to add arbitrary/additional data. This adds a framework to find/modify such extensions, and includes a header for each one, so they are distinguishable.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T17:05:00Z",
      "diff_hunk" : "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {\n+                return o;\n+            }\n+        }\n+        return -1;\n+    }\n+\n+    /**\n+     * Attempt to get the data for the section with the given header in the witness commitment of this block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417472690",
      "id" : 417472690,
      "in_reply_to_id" : 417353416,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MjY5MA==",
      "original_commit_id" : "63b5d7a3a7e6081e3b42a78ad1fd1cafd578b49e",
      "original_line" : 158,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 402866360,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417472690",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417474643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417474643"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it will be fairly common to start a node and then manually `addnode=` peers to build a network real quick. Having a seed node is only really meant for super permanent signets (like the default one) where you want people to just be able to start and go. I'm not sure how this will all pan out, but that's how I envision it right now.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T17:08:04Z",
      "diff_hunk" : "@@ -249,13 +252,86 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417474643",
      "id" : 417474643,
      "in_reply_to_id" : 417444593,
      "line" : 284,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NDY0Mw==",
      "original_commit_id" : "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "original_line" : 284,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 56,
      "pull_request_review_id" : 402868657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417474643",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417474840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417474840"
         }
      },
      "author_association" : "MEMBER",
      "body" : ":+1: on signet",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T17:08:22Z",
      "diff_hunk" : "@@ -264,17 +264,22 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_seednode\")) {\n-            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n-        }\n+            LogPrintf(\"Using default signet network\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417474840",
      "id" : 417474840,
      "in_reply_to_id" : 416679361,
      "line" : 268,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NDg0MA==",
      "original_commit_id" : "de4ef268a3a7db75d2a82a3b803f5d49e2ebe45e",
      "original_line" : 268,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 40,
      "pull_request_review_id" : 402868883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417474840",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417476362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417476362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I read it as \"the caller is responsible for verifying\" which is more defensively paranoid, in a good way, I think, than \"it does not verify\".",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T17:10:48Z",
      "diff_hunk" : "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417476362",
      "id" : 417476362,
      "in_reply_to_id" : 417363952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NjM2Mg==",
      "original_commit_id" : "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "original_line" : 169,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 402870727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417476362",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417476433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417476433"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Will check out #18780 for sure, thanks.\r\n\r\nAlso, @fjahr this is not signet stuff, this is segwit stuff (the 38 + OP_RET + etc). It's the witness commitment header. Or are you referring to something else when you say \"the whole SigNet header into a named constant\"?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T17:10:54Z",
      "diff_hunk" : "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417476433",
      "id" : 417476433,
      "in_reply_to_id" : 416625974,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NjQzMw==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 137,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 402870820,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417476433",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417477253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417477253"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, then it's just inconsistent because I saw `SigNet` as well in comments and log messages.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T17:12:11Z",
      "diff_hunk" : "@@ -264,17 +264,22 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_seednode\")) {\n-            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n-        }\n+            LogPrintf(\"Using default signet network\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417477253",
      "id" : 417477253,
      "in_reply_to_id" : 416679361,
      "line" : 268,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NzI1Mw==",
      "original_commit_id" : "de4ef268a3a7db75d2a82a3b803f5d49e2ebe45e",
      "original_line" : 268,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 40,
      "pull_request_review_id" : 402871843,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417477253",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417477271"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417477271"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The current version seems a tiny bit more clear on the fact that if you use this thing, you (the caller) have to check this stuff yourself, so keeping as is.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T17:12:13Z",
      "diff_hunk" : "@@ -161,6 +161,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417477271",
      "id" : 417477271,
      "in_reply_to_id" : 417363952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NzI3MQ==",
      "original_commit_id" : "d50d6acb9fd1b831ac5d1ad0530901ba4281d724",
      "original_line" : 169,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 402871887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417477271",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks a lot @jonatack and @fjahr for your feedback. I've addressed all of your comments (let me know if I ignored something), so please re-review!",
      "created_at" : "2020-04-29T17:13:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-621345945",
      "id" : 621345945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMTM0NTk0NQ==",
      "updated_at" : "2020-04-29T17:13:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621345945",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> First a conceptual question: I might be missing something and this might have been discussed previously but as a participant in the network (not the signer) what prevents me from taking the last block, mining a higher POW for it and then sending it out to replace the original block from the signer? If I understand it correctly, this is possible but attacks with this are probably not feasible because the attacker only has the block nonce to play with, not the extended nonce and they can also not change the other content of the block. For a moment I thought this might be a problem but since an attack with this would probably require many blocks, this is not a concern I think. I am just generally interested if I got this part right.\r\n> \r\n> More general comments (did not make sense as inline comments):\r\n> \r\n> * You might plan to add them later, but I thought adding SIGNET to tests in `src/test/util_tests.cpp:870/871` and `src/test/key_io_tests.cpp:139` might make sense in this pull already\r\n> * The first commit could be split into two: the move only part and the witness commitment section, for easier review\r\n\r\n@kallewoof I think you missed my comments in the review message? ^ Thanks!\r\n",
      "created_at" : "2020-04-29T17:27:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-621353486",
      "id" : 621353486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMTM1MzQ4Ng==",
      "updated_at" : "2020-04-29T17:27:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621353486",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417569922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417569922"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/SigNet/Signet/",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T19:49:41Z",
      "diff_hunk" : "@@ -249,13 +252,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417569922",
      "id" : 417569922,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2OTkyMg==",
      "original_commit_id" : "3b4e8d78f61a8869a5edc4cbbafd2cbe411eafd8",
      "original_line" : 256,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 402986678,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417569922",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417570226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417570226"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/SigNet/Signet/",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-29T19:50:09Z",
      "diff_hunk" : "@@ -249,13 +252,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", blockscript[0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417570226",
      "id" : 417570226,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3MDIyNg==",
      "original_commit_id" : "3b4e8d78f61a8869a5edc4cbbafd2cbe411eafd8",
      "original_line" : 282,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 402986678,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417570226",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@fjahr Indeed, sorry about that!\r\n\r\n> First a conceptual question: I might be missing something and this might have been discussed previously but as a participant in the network (not the signer) what prevents me from taking the last block, mining a higher POW for it and then sending it out to replace the original block from the signer? If I understand it correctly, this is possible but attacks with this are probably not feasible because the attacker only has the block nonce to play with, not the extended nonce and they can also not change the other content of the block. For a moment I thought this might be a problem but since an attack with this would probably require many blocks, this is not a concern I think. I am just generally interested if I got this part right.\r\n\r\nYep, you did. There's nothing preventing you from doing this, and as Signet itself comes with built in double spend modes, this is going to be a fairly common occurrence for certain networks. I don't think it's a big problem, though.\r\n\r\n> * You might plan to add them later, but I thought adding SIGNET to tests in `src/test/util_tests.cpp:870/871` and `src/test/key_io_tests.cpp:139` might make sense in this pull already\r\n\r\nMakes sense, thanks!\r\n\r\n> * The first commit could be split into two: the move only part and the witness commitment section, for easier review\r\n\r\nYou're right, that makes more sense. Done.",
      "created_at" : "2020-04-30T03:33:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-621592585",
      "id" : 621592585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMTU5MjU4NQ==",
      "updated_at" : "2020-04-30T03:33:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621592585",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417734749"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417734749"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A-ha! Thanks, my consistency is admirable... Fixed.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-30T03:34:59Z",
      "diff_hunk" : "@@ -249,13 +252,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417734749",
      "id" : 417734749,
      "in_reply_to_id" : 417569922,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczNDc0OQ==",
      "original_commit_id" : "3b4e8d78f61a8869a5edc4cbbafd2cbe411eafd8",
      "original_line" : 256,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 403179678,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417734749",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417736702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417736702"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Update: I looked closer into this (my initial impression was that this was a maintainer thing, but it actually looks like the contributors are supposed to deal with it), and have updated the commit message to explain why the hash changed.\r\n\r\nAlso, a recent addition to tests resulted in another hash changing; these were combined in one commit.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-04-30T03:43:44Z",
      "diff_hunk" : "@@ -1125,7 +1125,7 @@ BOOST_FIXTURE_TEST_CASE(util_ChainMerge, ChainMergeTestingSetup)\n     // Results file is formatted like:\n     //\n     //   <input> || <output>\n-    BOOST_CHECK_EQUAL(out_sha_hex, \"f0b3a3c29869edc765d579c928f7f1690a71fbb673b49ccf39cbc4de18156a0d\");\n+    BOOST_CHECK_EQUAL(out_sha_hex, \"4645298a210e40fd8dfacc2b470be96a186f0ff2ebab328953cfe1ce866e55cf\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r417736702",
      "id" : 417736702,
      "in_reply_to_id" : 417331044,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzczNjcwMg==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 1109,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/util_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 403181807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417736702",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-04-30T14:03:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-621873365",
      "id" : 621873365,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMTg3MzM2NQ==",
      "updated_at" : "2020-04-30T14:03:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621873365",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Needs another rebase, but ACK 27619339eb4dc348a32aa68b517be5b49df3d6a3. Reviewed code including latest changes and synced a node and tested sending and receiving txs and some other basic functionalities, mostly info calls.\r\n\r\nOne thing I noticed is that the progress during sync currently doesn't work (shows 1.0 from the start) because there is no `chainTxData` for Signet, I guess that is something that gets added by maintainers? EDIT: Yes it is. https://github.com/bitcoin/bitcoin/blob/master/doc/release-process.md#before-branch-off",
      "created_at" : "2020-04-30T14:57:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-621907454",
      "id" : 621907454,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMTkwNzQ1NA==",
      "updated_at" : "2020-04-30T14:57:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621907454",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 27619339eb4dc348a32aa68b517be5b49df3d6a3\r\n\r\nBuilt, run and tested on macOS Catalina 10.15.4\r\n\r\n**Unit tests** executed successfully.\r\n\r\nDone **manual tests** with `bitcoind` and bitcoin.conf that contained `signet=1` flag.\r\n\r\n**Examples**:\r\n\r\n* Query daemon info\r\n\r\n`./bitcoin-cli -datadir=signet -getinfo`\r\n\r\n```shell\r\n{\r\n  \"version\": 209900,\r\n  \"blocks\": 2875,\r\n  \"headers\": 8376,\r\n  \"verificationprogress\": 7.824597019403681e-230,\r\n  \"timeoffset\": 0,\r\n  \"connections\": 1,\r\n  \"proxy\": \"\",\r\n  \"difficulty\": 0.0007813477653418144,\r\n  \"chain\": \"signet\",\r\n  \"keypoolsize\": 1000,\r\n  \"paytxfee\": 0.00000000,\r\n  \"balance\": 0.00000000,\r\n  \"relayfee\": 0.00001000,\r\n  \"warnings\": \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\"\r\n}\r\n```\r\n\r\n* Created a signet address and received 10 signet BTCs:\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet getnewaddress\r\nsb1q3tsk7vvs3guyg6cacxd8celepqjqupes4ura2t\r\n```\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet setlabel sb1q3tsk7vvs3guyg6cacxd8celepqjqupes4ura2t brakmic-signet-address\r\n```\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet getaddressinfo sb1q3tsk7vvs3guyg6cacxd8celepqjqupes4ura2t\r\n{\r\n  \"address\": \"sb1q3tsk7vvs3guyg6cacxd8celepqjqupes4ura2t\",                     \r\n  \"scriptPubKey\": \"00148ae16f31908a38446b1dc19a7c67f908240e0730\",\r\n  \"ismine\": true,\r\n  \"solvable\": true,\r\n  \"desc\": \"wpkh([39028b98/0'/0'/0']03164fe243eda4c563657cc10b0c6f420fc92dde092f67b5e03f7d7ddfe20c9a6f)#l9u634et\",\r\n  \"iswatchonly\": false,\r\n  \"isscript\": false,\r\n  \"iswitness\": true,\r\n  \"witness_version\": 0,\r\n  \"witness_program\": \"8ae16f31908a38446b1dc19a7c67f908240e0730\",\r\n  \"pubkey\": \"03164fe243eda4c563657cc10b0c6f420fc92dde092f67b5e03f7d7ddfe20c9a6f\",\r\n  \"ischange\": false,\r\n  \"timestamp\": 1588269529,\r\n  \"hdkeypath\": \"m/0'/0'/0'\",\r\n  \"hdseedid\": \"0ba40a67510bf4857fd667d106e3f67c99257524\",\r\n  \"hdmasterfingerprint\": \"39028b98\",\r\n  \"labels\": [\r\n    \"brakmic-signet-address\"\r\n  ]\r\n}\r\n```\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet gettransaction 2588fc33f81a53994648773591d4a6e127535c74b6340dee19e5608d9547a9ce\r\n{\r\n  \"amount\": 10.00000000,\r\n  \"confirmations\": 0,\r\n  \"trusted\": false,\r\n  \"txid\": \"2588fc33f81a53994648773591d4a6e127535c74b6340dee19e5608d9547a9ce\",\r\n  \"walletconflicts\": [\r\n  ],\r\n  \"time\": 1588269697,\r\n  \"timereceived\": 1588269697,\r\n  \"bip125-replaceable\": \"no\",\r\n  \"details\": [\r\n    {\r\n      \"address\": \"sb1q3tsk7vvs3guyg6cacxd8celepqjqupes4ura2t\",\r\n      \"category\": \"receive\",\r\n      \"amount\": 10.00000000,\r\n      \"label\": \"brakmic-signet-address\",\r\n      \"vout\": 0\r\n    }\r\n  ],\r\n  \"hex\": \"0200000000010159fedd1084d29c3c4615254d1b3b5786c4f01c1a497e39762f40be3ec05b7b8d0000000000feffffff0200ca9a3b000000001600148ae16f31908a38446b1dc19a7c67f908240e073076c5f50500000000160014b342968beebfe1b0d17fe385e167567ad07811e902473044022053cc1d2a66739fb4b2ad6f284dff56cae186d7c9d464f4a1448ffcda4df95828022030f49b1c7d32544ce247d0a828254aa81b6ed315a00f37d225cee4585eeeb1f5012103c7f54159ca13bb20f515813df57de41cedae3c71dafc4b4150ab5b06ed72a527b8200000\"\r\n}\r\n```\r\n\r\n* My wallet balances (not confirmed)\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet getbalances                   \r\n{\r\n  \"mine\": {\r\n    \"trusted\": 0.00000000,\r\n    \"untrusted_pending\": 10.00000000,\r\n    \"immature\": 0.00000000\r\n  }\r\n}\r\n```\r\n\r\n* Same balances after a few minutes\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet getbalances\r\n{\r\n  \"mine\": {\r\n    \"trusted\": 10.00000000,\r\n    \"untrusted_pending\": 0.00000000,\r\n    \"immature\": 0.00000000\r\n  }\r\n}\r\n```",
      "created_at" : "2020-04-30T18:11:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-622016262",
      "id" : 622016262,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjAxNjI2Mg==",
      "updated_at" : "2020-04-30T18:19:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622016262",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@fjahr \r\n\r\nThanks for the re-review; rebased!\r\n\r\n> One thing I noticed is that the progress during sync currently doesn't work (shows 1.0 from the start) because there is no chainTxData for Signet, I guess that is something that gets added by maintainers? EDIT: Yes it is. https://github.com/bitcoin/bitcoin/blob/master/doc/release-process.md#before-branch-off\r\n\r\nYeah, I think there's discussion to actually only display this for specific networks (mainnet, and testnet I guess). Since you can spin up custom signets, it seems not worthwhile to add checkpoints and such, but it's up to the contributors whether they do or not.\r\n\r\n@brakmic Thanks a lot for the detailed review. Would love a re-ACK now that it's been rebased :)",
      "created_at" : "2020-05-01T08:43:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-622303723",
      "id" : 622303723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjMwMzcyMw==",
      "updated_at" : "2020-05-01T08:43:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622303723",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418465059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418465059"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep, sorry about that. Fixed.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-01T08:44:34Z",
      "diff_hunk" : "@@ -264,17 +264,22 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_seednode\")) {\n-            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n-        }\n+            LogPrintf(\"Using default signet network\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418465059",
      "id" : 418465059,
      "in_reply_to_id" : 416679361,
      "line" : 268,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2NTA1OQ==",
      "original_commit_id" : "de4ef268a3a7db75d2a82a3b803f5d49e2ebe45e",
      "original_line" : 268,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 40,
      "pull_request_review_id" : 404072426,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418465059",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : " > @brakmic Thanks a lot for the detailed review. Would love a re-ACK now that it's been rebased :)\r\n\r\nYou're welcome!\r\n\r\nI've recompiled your latest code as soon as it was available...on my **Raspberry Pi4** :) \r\n\r\n```shell\r\nuname -a\r\nLinux lnd 4.19.105-v8+ #1296 SMP PREEMPT Thu Feb 20 16:34:11 GMT 2020 aarch64 GNU/Linux\r\n```\r\nJust wanted to know how it works there. And I am keeping it online.\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet uptime\r\n39362\r\n```\r\n\r\n```shell\r\n./bitcoin-cli -datadir=signet getblockchaininfo\r\n{\r\n  \"chain\": \"signet\",\r\n  \"blocks\": 8464,\r\n  \"headers\": 8464,\r\n  \"bestblockhash\": \"000002620188a0abe05b324d32ec943b71a593a6e2a577df6490af59079801c9\",\r\n  \"difficulty\": 0.0008142809685956302,\r\n  \"mediantime\": 1588319843,\r\n  \"verificationprogress\": 7.753189433667663e-09,\r\n  \"initialblockdownload\": false,\r\n  \"chainwork\": \"0000000000000000000000000000000000000000000000000000000564eb9c63\",\r\n  \"size_on_disk\": 3244862,\r\n  \"pruned\": false,\r\n```\r\n\r\nAwesome work, @kallewoof !\r\n\r\nACK 483fbce2b87de171112a0f304095797a6b5d3d08",
      "created_at" : "2020-05-01T08:54:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-622307198",
      "id" : 622307198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjMwNzE5OA==",
      "updated_at" : "2020-05-01T08:54:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622307198",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK 483fbce2b87de171112a0f304095797a6b5d3d08\r\n\r\nOnly changes since last review were rebase and movement + usage of `MINIMUM_WITNESS_COMMITMENT` constant.\r\n\r\n> Yeah, I think there's discussion to actually only display this for specific networks (mainnet, and testnet I guess). Since you can spin up custom signets, it seems not worthwhile to add checkpoints and such, but it's up to the contributors whether they do or not.\r\n\r\nMakes sense, thanks!",
      "created_at" : "2020-05-01T13:15:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-622383322",
      "id" : 622383322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjM4MzMyMg==",
      "updated_at" : "2020-05-01T13:15:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622383322",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418574248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418574248"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I still don't understand why this is moved https://github.com/bitcoin/bitcoin/pull/16411#discussion_r335017902\r\n\r\n* GetWitnessCommitmentIndex is a member function, but doesn't access any member variables. This is confusing and makes it hard to write clean code.\r\n* `src/primitives` only contains data structures, and no validation logic. If this becomes the new place for validation, we might as well move the rest of validation to this file. E.g. ConnectBlock to `CBlock::Connect`, etc. This clearly defeats the purpose of having different modules for primitives and validation.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-01T14:47:59Z",
      "diff_hunk" : "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418574248",
      "id" : 418574248,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU3NDI0OA==",
      "original_commit_id" : "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "original_line" : 141,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 404199872,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418574248",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418574836"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418574836"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: member functions are already inline, same goes for `template<>`s. No need to specify it twice.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-01T14:49:19Z",
      "diff_hunk" : "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418574836",
      "id" : 418574836,
      "in_reply_to_id" : 418574248,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU3NDgzNg==",
      "original_commit_id" : "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "original_line" : 141,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 404200623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418574836",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418917924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418917924"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I hear you on the \"only data structure\" part... perhaps this belongs in validation.cpp in the end. It's bloated and I didn't wanna bloat it more with the new witness commitment section stuff, though.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-02T05:58:09Z",
      "diff_hunk" : "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418917924",
      "id" : 418917924,
      "in_reply_to_id" : 418574248,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkxNzkyNA==",
      "original_commit_id" : "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "original_line" : 141,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 404503309,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418917924",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418918363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418918363"
         }
      },
      "author_association" : "MEMBER",
      "body" : "On the other hand, it could be argued that this is in fact data structure *stuff* and not validation. I mean, there's no validation done here, it simply locates and returns the index of the witness commitment, if any.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-02T06:03:47Z",
      "diff_hunk" : "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r418918363",
      "id" : 418918363,
      "in_reply_to_id" : 418574248,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkxODM2Mw==",
      "original_commit_id" : "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "original_line" : 141,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 404503560,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418918363",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Removed `inline`; also replaced two `Returns -1 if ...` with `Returns NO_WITNESS_COMMITMENT if ...`.",
      "created_at" : "2020-05-02T06:06:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-622690128",
      "id" : 622690128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjY5MDEyOA==",
      "updated_at" : "2020-05-02T06:06:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622690128",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419005415"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419005415"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`GetWitnessCommitmentIndex` has been added to validation in commit 8b49040854be2e26b66366aeae1cba4716f93d93. Generally we don't move stuff around unless there is a reason to. Maybe @sipa can give more insights. Though, if no one else complains about this, I will close this conversation as resolved.\r\n\r\nHowever, making this a member function of CBlock, whereas it doesn't read any of the member variables, is highly confusing and should be fixed.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-02T20:41:07Z",
      "diff_hunk" : "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419005415",
      "id" : 419005415,
      "in_reply_to_id" : 418574248,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwNTQxNQ==",
      "original_commit_id" : "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "original_line" : 141,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 404559085,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419005415",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419005700"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419005700"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I strongly prefer keeping this in validation. Not every piece of code that uses transactions (e.g. wallets, P2P layer things, ...) needs to depend on something that only matters to validation.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-02T20:43:53Z",
      "diff_hunk" : "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419005700",
      "id" : 419005700,
      "in_reply_to_id" : 418574248,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwNTcwMA==",
      "original_commit_id" : "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "original_line" : 141,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 404559262,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419005700",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419228261"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419228261"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've restored it to validation.cpp, and added a variant that takes a transaction rather than a block. The block-based one (original) is converted into a wrapper calling the variant.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-04T06:12:04Z",
      "diff_hunk" : "@@ -123,27 +123,56 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n-    int GetWitnessCommitmentIndex() const\n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n     {\n-        int commitpos = NO_WITNESS_COMMITMENT;\n-        if (!vtx.empty()) {\n-            for (size_t o = 0; o < vtx[0]->vout.size(); o++) {\n-                const CTxOut& vout = vtx[0]->vout[o];\n-                if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                    vout.scriptPubKey[0] == OP_RETURN &&\n-                    vout.scriptPubKey[1] == 0x24 &&\n-                    vout.scriptPubKey[2] == 0xaa &&\n-                    vout.scriptPubKey[3] == 0x21 &&\n-                    vout.scriptPubKey[4] == 0xa9 &&\n-                    vout.scriptPubKey[5] == 0xed) {\n-                    commitpos = o;\n-                }\n+        return vtx.empty() ? NO_WITNESS_COMMITMENT : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419228261",
      "id" : 419228261,
      "in_reply_to_id" : 418574248,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIyODI2MQ==",
      "original_commit_id" : "8bbfde09fb1e27e292efdc84162aad25bcd5358a",
      "original_line" : 141,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/primitives/block.h",
      "position" : null,
      "pull_request_review_id" : 404726158,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419228261",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "After feedback, I've restored `GetWitnessCommitmentIndex` into `validation.cpp`.\r\n\r\nThis also introduces the transaction-based variant which is used by the signet code.\r\n\r\nI.e.\r\n\r\n* the \"move GWCI from validation into primitives/block\" commit is gone\r\n* in its stead is a new \"add tx based GWCI variants\" commit\r\n* the remainder of the witness commitment section code has been moved into `signet.h/cpp`, and is now included in the `add signet basic support` commit",
      "created_at" : "2020-05-04T06:13:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-623276883",
      "id" : 623276883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzI3Njg4Mw==",
      "updated_at" : "2020-05-04T06:14:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623276883",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419872121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419872121"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This comment should use the new constant, not `-1`. Will fix at next rebase.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-05T05:32:48Z",
      "diff_hunk" : "@@ -332,6 +334,9 @@ bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& pa\n /** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n int GetWitnessCommitmentIndex(const CBlock& block);\n \n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r419872121",
      "id" : 419872121,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg3MjEyMQ==",
      "original_commit_id" : "fd10dd5f0044b7426c4b8198dbcd82f6da89ce0d",
      "original_line" : 335,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 405501609,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/419872121",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420017940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420017940"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Mind to explain the use case for `signet_hrp` being a run-time option?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-05T10:44:54Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420017940",
      "id" : 420017940,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAxNzk0MA==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 29,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 405674808,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420017940",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420194254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420194254"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fd10dd5f and 6209c21 pico-nit: if you retouch, here and a couple other places in the changeset, `++s` is preferred over `s++` per developer-notes.md::L94",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-05T15:22:05Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+extern CScript g_signet_blockscript;\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);\n+\n+static constexpr int NO_WITNESS_COMMITMENT{-1}; // note: this is copied from validation.h, to avoid a circular dependency issue\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    if (!CheckBlockSolution(GetSignetHash(block), signet_data, consensusParams)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution invalid)\");\n+    }\n+    return true;\n+}\n+\n+bool CheckBlockSolution(const uint256& signet_hash, const std::vector<uint8_t>& signature, const Consensus::Params& params)\n+{\n+    SimpleSignatureChecker bsc(signet_hash);\n+    CScript solution = CScript(signature.begin(), signature.end());\n+    return VerifyScript(solution, g_signet_blockscript, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc);\n+}\n+\n+uint256 BlockSignetMerkleRoot(const CBlock& block, bool* mutated = nullptr)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    {\n+        // find and delete signet signature\n+        CMutableTransaction mtx(*block.vtx.at(0));\n+        SetWitnessCommitmentSection(mtx, SIGNET_HEADER, std::vector<uint8_t>{});\n+        leaves[0] = mtx.GetHash();\n+    }\n+    for (size_t s = 1; s < block.vtx.size(); s++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420194254",
      "id" : 420194254,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE5NDI1NA==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 53,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 405895986,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420194254",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420214083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420214083"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fd10dd5f If you retouch, perhaps add comments to document the byte values:\r\n\r\n```diff\r\n-            vout.scriptPubKey[1] == 0x24 &&\r\n-            vout.scriptPubKey[2] == 0xaa &&\r\n+            vout.scriptPubKey[1] == 0x24 &&  // Push the following 36 bytes\r\n+            vout.scriptPubKey[2] == 0xaa &&  // BIP141 SegWit commitment header (4 bytes: 0xaa21a9ed)\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-05T15:48:54Z",
      "diff_hunk" : "@@ -3381,31 +3393,37 @@ bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& pa\n     return (height >= params.SegwitHeight);\n }\n \n-int GetWitnessCommitmentIndex(const CBlock& block)\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx)\n {\n-    int commitpos = -1;\n-    if (!block.vtx.empty()) {\n-        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n-            const CTxOut& vout = block.vtx[0]->vout[o];\n-            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                vout.scriptPubKey[0] == OP_RETURN &&\n-                vout.scriptPubKey[1] == 0x24 &&\n-                vout.scriptPubKey[2] == 0xaa &&\n-                vout.scriptPubKey[3] == 0x21 &&\n-                vout.scriptPubKey[4] == 0xa9 &&\n-                vout.scriptPubKey[5] == 0xed) {\n-                commitpos = o;\n-            }\n+    int commitpos = NO_WITNESS_COMMITMENT;\n+    for (size_t o = 0; o < tx.vout.size(); o++) {\n+        const CTxOut& vout = tx.vout[o];\n+        if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+            vout.scriptPubKey[0] == OP_RETURN &&\n+            vout.scriptPubKey[1] == 0x24 &&\n+            vout.scriptPubKey[2] == 0xaa &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420214083",
      "id" : 420214083,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIxNDA4Mw==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 3404,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 405895986,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420214083",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420269434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420269434"
         }
      },
      "author_association" : "MEMBER",
      "body" : "c1144b86 These 3 lines can use `emplace_back` like the other vSeeds.emplace_back operations in this file.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-05T17:07:30Z",
      "diff_hunk" : "@@ -249,13 +254,93 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420269434",
      "id" : 420269434,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI2OTQzNA==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 271,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 405895986,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420269434",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420271626"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420271626"
         }
      },
      "author_association" : "MEMBER",
      "body" : "c1144b86 `-signet_seednode` appears to only take effect if `-signet_blockscript` is also passed. If so, perhaps say so in the `-signet_seednode` help in chainparamsbase.cpp.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-05T17:11:02Z",
      "diff_hunk" : "@@ -249,13 +254,93 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420271626",
      "id" : 420271626,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MTYyNg==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 280,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 405895986,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420271626",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420275966"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420275966"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What is the difference between the `-signet_seednode` chainparams option, and the `-seednode` connection option in init.cpp?\r\n\r\nPerhaps (pulling in some ideas from the `-seednode` help):\r\n```diff\r\n-    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\r\n+    gArgs.AddArg(\"-signet_seednode=<ip>\", \"Specify a seed node for the signet network (may be specified multiple times to connect to multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\r\n```\r\n",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-05T17:17:52Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420275966",
      "id" : 420275966,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3NTk2Ng==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 29,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 405895986,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420275966",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420287152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420287152"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Mind to explain the use case for `signet_hrp` being a run-time option?\r\n\r\nAgree; I don't know how this is to be used.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-05T17:35:22Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420287152",
      "id" : 420287152,
      "in_reply_to_id" : 420017940,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4NzE1Mg==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 29,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 405895986,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420287152",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420535779"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420535779"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This became useful when I was running a taproot signet there for awhile, as it allowed correctly configured nodes to distinguish between addresses for the two networks.\r\n\r\nI think we are leaning more and more towards having \"one\" signet most of the time, but having this feature still seems like a good idea. I don't have a strong opinion, and can drop this out for later consideration if you guys feel uncomfortable about it.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-06T04:14:28Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420535779",
      "id" : 420535779,
      "in_reply_to_id" : 420017940,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzNTc3OQ==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 29,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 406293820,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420535779",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420536312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420536312"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you do `?w=1` suffix on the view all changes page [ https://github.com/bitcoin/bitcoin/pull/18267/files?w=1#diff-24efdb00bfbe56b140fb006b562cc70b ], you will note that I'm only indenting these lines, so I think I'll skip touching them for now.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-06T04:16:50Z",
      "diff_hunk" : "@@ -3381,31 +3393,37 @@ bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& pa\n     return (height >= params.SegwitHeight);\n }\n \n-int GetWitnessCommitmentIndex(const CBlock& block)\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx)\n {\n-    int commitpos = -1;\n-    if (!block.vtx.empty()) {\n-        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n-            const CTxOut& vout = block.vtx[0]->vout[o];\n-            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                vout.scriptPubKey[0] == OP_RETURN &&\n-                vout.scriptPubKey[1] == 0x24 &&\n-                vout.scriptPubKey[2] == 0xaa &&\n-                vout.scriptPubKey[3] == 0x21 &&\n-                vout.scriptPubKey[4] == 0xa9 &&\n-                vout.scriptPubKey[5] == 0xed) {\n-                commitpos = o;\n-            }\n+    int commitpos = NO_WITNESS_COMMITMENT;\n+    for (size_t o = 0; o < tx.vout.size(); o++) {\n+        const CTxOut& vout = tx.vout[o];\n+        if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+            vout.scriptPubKey[0] == OP_RETURN &&\n+            vout.scriptPubKey[1] == 0x24 &&\n+            vout.scriptPubKey[2] == 0xaa &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420536312",
      "id" : 420536312,
      "in_reply_to_id" : 420214083,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzNjMxMg==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 3404,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 406294357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420536312",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420536454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420536454"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think that's a good logic, actually. I'm going to change it to always take seeds, thanks.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-06T04:17:44Z",
      "diff_hunk" : "@@ -249,13 +254,93 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420536454",
      "id" : 420536454,
      "in_reply_to_id" : 420271626,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzNjQ1NA==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 280,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 406294537,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420536454",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420537098"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420537098"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not entirely sure; it seems the -seednode flag is used to set up `CConnman` options in `init.cpp`, but I can't see that using the chain parameter stuff, so... yeah, not sure.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-06T04:20:47Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420537098",
      "id" : 420537098,
      "in_reply_to_id" : 420275966,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzNzA5OA==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 29,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 406295194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420537098",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed @jonatack nits.",
      "created_at" : "2020-05-06T04:28:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-624435366",
      "id" : 624435366,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDQzNTM2Ng==",
      "updated_at" : "2020-05-06T04:28:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624435366",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420610372"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420610372"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This line causes compilation errors, because of undeclared *blockscript* variable.\r\n\r\n```shell\r\nchainparams.cpp: In constructor âSigNetParams::SigNetParams(const ArgsManager&)â:\r\nchainparams.cpp:284:52: error: âblockscriptâ was not declared in this scope\r\n         LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\r\n                                                    ^~~~~~~~~~~\r\nmake[2]: *** [Makefile:10152: libbitcoin_common_a-chainparams.o] Error 1\r\n```\r\n\r\nblockscript is only visible within the **else** statement above.  ",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-06T08:01:52Z",
      "diff_hunk" : "@@ -251,13 +254,88 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+        if (blockscript.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(blockscript[0]);\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420610372",
      "id" : 420610372,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMDM3Mg==",
      "original_commit_id" : "25be6f6c2dc6817c9e6463695a02d1db4780d325",
      "original_line" : 278,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 406382618,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420610372",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420637114"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420637114"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, yeah I failed at a rebase. Fixed now.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-06T08:51:15Z",
      "diff_hunk" : "@@ -251,13 +254,88 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+        if (blockscript.size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(blockscript[0]);\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420637114",
      "id" : 420637114,
      "in_reply_to_id" : 420610372,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzNzExNA==",
      "original_commit_id" : "25be6f6c2dc6817c9e6463695a02d1db4780d325",
      "original_line" : 278,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 406416881,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420637114",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420703244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420703244"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> it allowed correctly configured nodes ...\r\n\r\nThat assumes correct configuration. In converse, incorrect configuration will reject addresses of the own network. Leaving this option out will configure all nodes correctly and I don't see a risk where mixing up addresses could lead to an issue. It could even make sense to call it `tb`, see here #12314 ",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-06T10:55:37Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420703244",
      "id" : 420703244,
      "in_reply_to_id" : 420017940,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcwMzI0NA==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 29,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 406501703,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420703244",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420760682"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420760682"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ok",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-06T12:45:07Z",
      "diff_hunk" : "@@ -3381,31 +3393,37 @@ bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& pa\n     return (height >= params.SegwitHeight);\n }\n \n-int GetWitnessCommitmentIndex(const CBlock& block)\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx)\n {\n-    int commitpos = -1;\n-    if (!block.vtx.empty()) {\n-        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n-            const CTxOut& vout = block.vtx[0]->vout[o];\n-            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n-                vout.scriptPubKey[0] == OP_RETURN &&\n-                vout.scriptPubKey[1] == 0x24 &&\n-                vout.scriptPubKey[2] == 0xaa &&\n-                vout.scriptPubKey[3] == 0x21 &&\n-                vout.scriptPubKey[4] == 0xa9 &&\n-                vout.scriptPubKey[5] == 0xed) {\n-                commitpos = o;\n-            }\n+    int commitpos = NO_WITNESS_COMMITMENT;\n+    for (size_t o = 0; o < tx.vout.size(); o++) {\n+        const CTxOut& vout = tx.vout[o];\n+        if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+            vout.scriptPubKey[0] == OP_RETURN &&\n+            vout.scriptPubKey[1] == 0x24 &&\n+            vout.scriptPubKey[2] == 0xaa &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420760682",
      "id" : 420760682,
      "in_reply_to_id" : 420214083,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc2MDY4Mg==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 3404,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 406574313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420760682",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420804460"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420804460"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It may still be good to change the output if `-seednode` is passed and echo it rather than only \"Using default signet network\"",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-06T13:48:04Z",
      "diff_hunk" : "@@ -249,13 +252,86 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        extern CScript g_signet_blockscript;\n+\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420804460",
      "id" : 420804460,
      "in_reply_to_id" : 417444593,
      "line" : 284,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwNDQ2MA==",
      "original_commit_id" : "d55bcb17844e6e68cc3e51dd5c25a365ffd1d49d",
      "original_line" : 284,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 56,
      "pull_request_review_id" : 406630008,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420804460",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420809318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420809318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/suffixed/prefixed/?\r\n\r\nMaybe add a usage example.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-06T13:54:05Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420809318",
      "id" : 420809318,
      "in_reply_to_id" : 416972958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwOTMxOA==",
      "original_commit_id" : "76047d0c77f0ade5b2e16f5d980c4d4b1709a13b",
      "original_line" : 29,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 406630008,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420809318",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420872951"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420872951"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It seems that this also changes the network magic, so this is a switch to run a different signet?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-06T15:14:52Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420872951",
      "id" : 420872951,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg3Mjk1MQ==",
      "original_commit_id" : "d4e204beb795319fd40bcbf7ab2cff6b96823e1e",
      "original_line" : 28,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 406716343,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420872951",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421263518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421263518"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep, the blockscript defines the network magic.\r\n\r\nhttps://github.com/bitcoin/bips/blob/master/bip-0325.mediawiki#message-start\r\n\r\nEdit: to clarify, each blockscript is considered its own signet, which is why the network magic depends on the blockscript.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-07T06:17:38Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421263518",
      "id" : 421263518,
      "in_reply_to_id" : 420872951,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI2MzUxOA==",
      "original_commit_id" : "d4e204beb795319fd40bcbf7ab2cff6b96823e1e",
      "original_line" : 28,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 407175988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421263518",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~Fixed documentation for `-signet_hrp` (said `suffix`, meant `prefix`).~\r\n\r\nRemoved `-signet_hrp` (see https://github.com/bitcoin/bitcoin/pull/18267#discussion_r420017940)",
      "created_at" : "2020-05-07T06:20:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625053105",
      "id" : 625053105,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTA1MzEwNQ==",
      "updated_at" : "2020-05-07T06:27:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625053105",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421266858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421266858"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't know about calling it `tb`, but I've seen enough friction to warrant removing this option in the first iteration/PR, so I'm removing this parameter for now.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-07T06:26:32Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421266858",
      "id" : 421266858,
      "in_reply_to_id" : 420017940,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI2Njg1OA==",
      "original_commit_id" : "3e44470efaafac77b538707b02a3fca163b38ea3",
      "original_line" : 29,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 407179911,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421266858",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK 647c10fe82adcd5c4721424718afc67ce51b6c83\r\n\r\nBtw., I created a simple bash script for automatic building & running of Signet binaries on my 64bit Raspberry Pi. Should be able to run on other Linux systems as well.\r\n\r\nhttps://gist.github.com/brakmic/37c7618ad6e8bb33c6a271fe682e38a3\r\n\r\nCould maybe help to get more people to install and run Bitcoin Signet. :)\r\n\r\n*The script also asks for sBTC from your faucet via cURL, but currently there is an 502 HTTP error, so I couldn't test it thoroughly*.",
      "created_at" : "2020-05-07T11:44:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625204514",
      "id" : 625204514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTIwNDUxNA==",
      "updated_at" : "2020-05-07T12:52:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625204514",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421501655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421501655"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wasn't the point of signet to be a single network and everyone could choose their keys to decide which reorg to \"follow\"?\r\n\r\nE.g. there are different keys like:\r\n\r\n* no_regorgs_key: signs every block, advancing height by 1 every 10 min, never decreasing height. This is the \"true\" signet chain\r\n* 10_reorg_key: reorgs 10 blocks every 20 blocks, then reorgs back to to the \"true\" chain\r\n* 101_reorg_key: reorgs 100 blocks every 200 blocks, then back to the \"true\" chain",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-07T13:26:21Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421501655",
      "id" : 421501655,
      "in_reply_to_id" : 420872951,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUwMTY1NQ==",
      "original_commit_id" : "d4e204beb795319fd40bcbf7ab2cff6b96823e1e",
      "original_line" : 28,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 407468546,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421501655",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421705685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421705685"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's on the map, for sure, but it adds complexity I'm trying to avoid in the initial release.\r\n\r\nAs for the single network, yes! The thing is, people are unpredictable, and I can imagine we will end up switching networks on rare occasions; in the end, we may have some form of org handling the privkeys to sign blocks, but initially at least, it will probably be me volunteering to do it, and if I go missing or evil or something, it should be trivial to switch to a new setup (later on, I'd like to make this also possible to switch without having to reset the chain, but that's not MVP stuff). There may also be Bitcoin related companies (e.g. exchanges) who want to have their own signets in addition to the existing one.\r\n\r\nThe approach here is discussed in https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-577999888 but essentially, we are using the same genesis block for all signets, and instead switching the network magic to avoid mixing signets up.\r\n",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-07T18:24:58Z",
      "diff_hunk" : "@@ -23,6 +24,10 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r421705685",
      "id" : 421705685,
      "in_reply_to_id" : 420872951,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcwNTY4NQ==",
      "original_commit_id" : "d4e204beb795319fd40bcbf7ab2cff6b96823e1e",
      "original_line" : 28,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 407726906,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421705685",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@brakmic Wow, very nice! Also, thanks for the heads up on 502 error. Investigating that.",
      "created_at" : "2020-05-07T18:26:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625422076",
      "id" : 625422076,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTQyMjA3Ng==",
      "updated_at" : "2020-05-07T18:26:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625422076",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@brakmic Tried that script on a MacBook, but it doesn't like some of the arguments (see below). Still, very cool :)\r\n\r\n(And the faucet is back up.)\r\n\r\n```\r\n$ bash ./runsignet.sh\r\ntr: Illegal byte sequence\r\ntr: Illegal byte sequence\r\nCreating backup datadir /Users/me/Downloads/signet/data/signet_datadir_backup\r\nmkdir: /Users/me/Downloads/signet/data: No such file or directory\r\nmkdir: /Users/me/Downloads/signet/data/signet_datadir_backup: No such file or directory\r\nmkdir: /Users/me/Downloads/signet/data/signet_datadir_backup/signet: No such file or directory\r\nCreating default bitcoin.conf\r\n./runsignet.sh: line 44: /Users/me/Downloads/signet/data/signet_datadir_backup/bitcoin.conf: No such file or directory\r\n-----------------------------------\r\n  Getting Bitcoin Signet sources\r\n-----------------------------------\r\nCloning into '/Users/me/Downloads/signet/data/signet'...\r\nremote: Enumerating objects: 9, done.\r\nremote: Counting objects: 100% (9/9), done.\r\nremote: Compressing objects: 100% (7/7), done.\r\n^Cceiving objects:  11% (19511/167291), 21.00 MiB | 4.31 MiB/s\r\n$ ls\r\ndata          runsignet.sh  runsignet.sh~\r\n$ ls data\r\n```\r\n",
      "created_at" : "2020-05-07T18:41:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625429274",
      "id" : 625429274,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTQyOTI3NA==",
      "updated_at" : "2020-05-07T18:41:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625429274",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @brakmic Tried that script on a MacBook, but it doesn't like some of the arguments (see below). Still, very cool :)\r\n> \r\n\r\nOh, I didn't test it on a Mac. But as I luckily have one, I'll investigate it and come back to you (with a hopefully updated version) :)\r\n\r\n> (And the faucet is back up.)\r\n> \r\n\r\nAwesome! Thanks! Now I can test the last few commands from the script.\r\n\r\n",
      "created_at" : "2020-05-07T18:43:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625430464",
      "id" : 625430464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTQzMDQ2NA==",
      "updated_at" : "2020-05-07T18:43:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625430464",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @brakmic Tried that script on a MacBook, but it doesn't like some of the arguments (see below). Still, very cool :)\r\n> \r\n> ```\r\n> $ bash ./runsignet.sh\r\n> tr: Illegal byte sequence\r\n> tr: Illegal byte sequence\r\n\r\nHave fixed it. The problem was in random password/username generation sequence.\r\n\r\n**tr** on macOS doesn't like [certain byte sequences](https://unix.stackexchange.com/a/45406) because they aren't valid UTF-8.\r\n\r\nThe script now simply takes the current dir as its root. No extra changes needed.\r\n\r\nGist: https://gist.github.com/brakmic/37c7618ad6e8bb33c6a271fe682e38a3\r\n\r\nHowever, I wasn't able to beg for coins from your server. Will check it later. But that's not that important. ;)\r\n\r\n\r\n",
      "created_at" : "2020-05-07T22:42:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625533405",
      "id" : 625533405,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTUzMzQwNQ==",
      "updated_at" : "2020-05-07T22:42:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625533405",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@brakmic Works better now! The rpcpassword ended up with a '#' in it, though, so this happened:\r\n```\r\nError: Error reading configuration file: parse error on line 8, using # in rpcpassword can be ambiguous and should be avoided\r\n```\r\n",
      "created_at" : "2020-05-08T06:20:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625654711",
      "id" : 625654711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTY1NDcxMQ==",
      "updated_at" : "2020-05-08T06:20:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625654711",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @brakmic Works better now! The rpcpassword ended up with a '#' in it, though, so this happened:\r\n> \r\n> ```\r\n> Error: Error reading configuration file: parse error on line 8, using # in rpcpassword can be ambiguous and should be avoided\r\n> ```\r\n\r\nAh, yes, I was too generous with available random chars for user/pwd. Fixed now. Thanks!",
      "created_at" : "2020-05-08T06:33:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625659336",
      "id" : 625659336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTY1OTMzNg==",
      "updated_at" : "2020-05-08T06:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625659336",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Works better this time; though it needs to wait for the node to finish starting up before it continues (am seeing a bunch of\r\n```\r\nerror code: -28\r\nerror message:\r\nLoading wallet...\r\n```\r\nnow).",
      "created_at" : "2020-05-08T06:49:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625665271",
      "id" : 625665271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTY2NTI3MQ==",
      "updated_at" : "2020-05-08T06:49:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625665271",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Works better this time; though it needs to wait for the node to finish starting up before it continues (am seeing a bunch of\r\n> \r\n> ```\r\n> error code: -28\r\n> error message:\r\n> Loading wallet...\r\n> ```\r\n> \r\n> now).\r\n\r\nI think it's because the script was too fast for the IBD. Have put a simple \"sleep 10s\", just to let it download a few blocks.\r\n\r\nAlso, on macOS there is no manual BDB4 compilation anymore, only on Raspberry (no official packages in Raspbian repo)\r\n\r\nBut somehow I can't get the returned address to query for coins, which btw. now works. I can send a post to your server.  :)\r\n",
      "created_at" : "2020-05-08T07:37:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625683484",
      "id" : 625683484,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTY4MzQ4NA==",
      "updated_at" : "2020-05-08T07:37:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625683484",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@brakmic Check out https://gist.github.com/carnhofdaki/60edef577f637ef2dbf4d244e4e279c2 by @carnhofdaki -- it does some fancy stuff to hold until the server is up. (I think that script is outdated now, but not sure. See https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-547558988 for context.)",
      "created_at" : "2020-05-08T07:50:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625689157",
      "id" : 625689157,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTY4OTE1Nw==",
      "updated_at" : "2020-05-08T07:50:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625689157",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @brakmic Check out https://gist.github.com/carnhofdaki/60edef577f637ef2dbf4d244e4e279c2 by @carnhofdaki -- it does some fancy stuff to hold until the server is up. (I think that script is outdated now, but not sure. See [#16411 (comment)](https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-547558988) for context.)\r\n\r\nThanks. I was wrong: the address got generated. The message \"missing address\" comes from your server, so I have somehow messed up the form data. :)",
      "created_at" : "2020-05-08T07:53:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625690363",
      "id" : 625690363,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTY5MDM2Mw==",
      "updated_at" : "2020-05-08T07:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625690363",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kallewoof \r\n\r\nBegging for coins from your faucet works now :)\r\n\r\n![coin_faucet](https://raw.githubusercontent.com/brakmic/bazaar/master/images/random/signet_script_finish.png)",
      "created_at" : "2020-05-08T08:21:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625701760",
      "id" : 625701760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTcwMTc2MA==",
      "updated_at" : "2020-05-08T08:21:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625701760",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK 647c10fe82adcd5c4721424718afc67ce51b6c83\r\n\r\nDid full review of earlier commits and checked later ones for no significant changes. Most notable changes:\r\n\r\n- rebased\r\n- reverted move of `GetWitnessCommitmentIndex`\r\n- moved `GetWitnessCommitmentSection` to signet.cpp\r\n- removed RPC `-signet_hrp`\r\n- introduced `g_signet_blockscript`\r\n- more nits addressed\r\n\r\nTests passed locally.",
      "created_at" : "2020-05-08T15:24:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-625868867",
      "id" : 625868867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTg2ODg2Nw==",
      "updated_at" : "2020-05-08T15:24:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625868867",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think it's because the script was too fast for the IBD. Have put a simple \"sleep 10s\", just to let it download a few blocks.\r\n\r\nEven simpler, add `-rpcwait` to the CLI command?",
      "created_at" : "2020-05-10T17:17:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-626360101",
      "id" : 626360101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjM2MDEwMQ==",
      "updated_at" : "2020-05-10T17:17:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626360101",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review re-ACK 647c10f only change since previous review is removal of the `-signet_hrp` \"human-readable part\" user option, per git diff d4e204b 647c10f\r\n\r\n<details><summary><code>git diff d4e204b 647c10f</code></summary><p>\r\n\r\n```diff\r\n$ git diff d4e204b 647c10f\r\ndiff --git a/src/chainparams.cpp b/src/chainparams.cpp\r\nindex 797b22fbe9..669010c53e 100644\r\n--- a/src/chainparams.cpp\r\n+++ b/src/chainparams.cpp\r\n@@ -325,7 +325,7 @@ public:\r\n         base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\r\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\r\n \r\n-        bech32_hrp = \"sb\" + args.GetArg(\"-signet_hrp\", \"\");\r\n+        bech32_hrp = \"sb\";\r\n \r\n         fDefaultConsistencyChecks = false;\r\n         fRequireStandard = true;\r\ndiff --git a/src/chainparamsbase.cpp b/src/chainparamsbase.cpp\r\nindex 4d5485e38a..78a87371bb 100644\r\n--- a/src/chainparamsbase.cpp\r\n+++ b/src/chainparamsbase.cpp\r\n@@ -26,7 +26,6 @@ void SetupChainParamsBaseOptions()\r\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\r\n     gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\r\n     gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\r\n-    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\r\n     gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\r\n }\r\n```\r\n</p></details>\r\n\r\n",
      "created_at" : "2020-05-10T17:28:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-626361626",
      "id" : 626361626,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjM2MTYyNg==",
      "updated_at" : "2020-05-10T17:28:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626361626",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There are some really nice patches on top of this PR at https://github.com/ajtowns/bitcoin/commits/202005-signet-tweaks by @ajtowns -- hopefully those can be in a follow-up PR, as I think this PR is close to merge-ready (if not, I guess I can merge them in here; we'll see).",
      "created_at" : "2020-05-11T06:18:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-626494619",
      "id" : 626494619,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjQ5NDYxOQ==",
      "updated_at" : "2020-05-11T06:18:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626494619",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kallewoof I think for consensus changes the bar is a bit higher than for wallet changes (or other changes) and we should aim to get them right the first time with as little back-and-forth on the way there.\r\n\r\nThe non-wip commits seem to get rid of quite a few chunks of code (and globals), so I wouldn't mind having them squashed (with the appropriate Co-Author tag) into the commits here before merge.",
      "created_at" : "2020-05-11T11:53:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-626655676",
      "id" : 626655676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjY1NTY3Ng==",
      "updated_at" : "2020-05-11T11:53:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626655676",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Merged all except WIP commit into current branch.",
      "created_at" : "2020-05-12T10:40:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-627261658",
      "id" : 627261658,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzI2MTY1OA==",
      "updated_at" : "2020-05-12T10:40:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627261658",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK ae117d836a3371d294b03f73dff33604d1112702\r\n\r\nOnly changes since my last review were replacing the blockscript global with the signet challenge in the consensus params and getting rid of the `CheckBlockSolution` function. ",
      "created_at" : "2020-05-23T16:09:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-633084510",
      "id" : 633084510,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMzA4NDUxMA==",
      "updated_at" : "2020-05-23T16:09:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/633084510",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429580302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580302"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit 7168395ea63d33075a60369f5778eb635208beba\r\n\r\nAre all these includes really needed? I've removed all non-std-lib includes and everything compiles fine with this diff:\r\n\r\n```diff\r\ndiff --git a/src/signet.h b/src/signet.h\r\nindex b9946f950a..679df85c5d 100644\r\n--- a/src/signet.h\r\n+++ b/src/signet.h\r\n@@ -5,18 +5,16 @@\r\n #ifndef BITCOIN_SIGNET_H\r\n #define BITCOIN_SIGNET_H\r\n \r\n-#if defined(HAVE_CONFIG_H)\r\n-#include <config/bitcoin-config.h>\r\n-#endif\r\n-\r\n-#include <consensus/params.h>\r\n-\r\n-#include <stdint.h>\r\n+#include <cstdint>\r\n+#include <vector>\r\n \r\n class CBlock;\r\n class CScript;\r\n class uint256;\r\n struct CMutableTransaction;\r\n+namespace Consensus {\r\n+struct Params;\r\n+}\r\n \r\n constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\r\n \r\n",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-23T21:40:04Z",
      "diff_hunk" : "@@ -0,0 +1,56 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <consensus/params.h>\n+\n+#include <stdint.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429580302",
      "id" : 429580302,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MDMwMg==",
      "original_commit_id" : "7168395ea63d33075a60369f5778eb635208beba",
      "original_line" : 14,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : null,
      "pull_request_review_id" : 417310815,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580302",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429580400"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580400"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 7168395ea63d33075a60369f5778eb635208beba\r\n\r\nI think the ignored return value should be documented\r\n\r\n```suggestion\r\n        (void)SetWitnessCommitmentSection(mtx, SIGNET_HEADER, std::vector<uint8_t>{});\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-23T21:41:27Z",
      "diff_hunk" : "@@ -0,0 +1,122 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);\n+\n+static constexpr int NO_WITNESS_COMMITMENT{-1}; // note: this is copied from validation.h, to avoid a circular dependency issue\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution invalid)\");\n+    }\n+    return true;\n+}\n+\n+uint256 BlockSignetMerkleRoot(const CBlock& block, bool* mutated = nullptr)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    {\n+        // find and delete signet signature\n+        CMutableTransaction mtx(*block.vtx.at(0));\n+        SetWitnessCommitmentSection(mtx, SIGNET_HEADER, std::vector<uint8_t>{});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429580400",
      "id" : 429580400,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MDQwMA==",
      "original_commit_id" : "7168395ea63d33075a60369f5778eb635208beba",
      "original_line" : 45,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 417310815,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580400",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429580797"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580797"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In commit 7168395ea63d33075a60369f5778eb635208beba\r\n\r\nI don't think we solve circular dependencies by copy pasting parts of the dependencies into each other. Doing so slightly defeats the purpose of having separate modules. There are at least two options:\r\n\r\n* Ignore the circular dependency for now (and document it as an exception in the linter)\r\n* Move the witness commitment stuff to a new \"module\". I think libconsensus `consensus/witness_commitment` (or similar) could make sense. This would also help the miner not depend on the server (in a theoretical world where the miner is a separate util binary, where all state is passed in), but only on libconsensus.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-23T21:48:10Z",
      "diff_hunk" : "@@ -0,0 +1,122 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);\n+\n+static constexpr int NO_WITNESS_COMMITMENT{-1}; // note: this is copied from validation.h, to avoid a circular dependency issue",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429580797",
      "id" : 429580797,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MDc5Nw==",
      "original_commit_id" : "7168395ea63d33075a60369f5778eb635208beba",
      "original_line" : 19,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 417310815,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429580797",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429800129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429800129"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure about the namespace/struct part, but otherwise sounds reasonable. Updated to this.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-25T08:21:36Z",
      "diff_hunk" : "@@ -0,0 +1,56 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <consensus/params.h>\n+\n+#include <stdint.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429800129",
      "id" : 429800129,
      "in_reply_to_id" : 429580302,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwMDEyOQ==",
      "original_commit_id" : "7168395ea63d33075a60369f5778eb635208beba",
      "original_line" : 14,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : null,
      "pull_request_review_id" : 417542252,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429800129",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429800204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429800204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moving to avoid duplicate makes sense; honestly not sure what I was thinking here.\r\n\r\nI'm not sure it warrants a new module, so I've put it in `consensus/validation.h` for now. If you really do think it should be in a separate file, I'll move it.\r\n",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-25T08:21:44Z",
      "diff_hunk" : "@@ -0,0 +1,122 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);\n+\n+static constexpr int NO_WITNESS_COMMITMENT{-1}; // note: this is copied from validation.h, to avoid a circular dependency issue",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r429800204",
      "id" : 429800204,
      "in_reply_to_id" : 429580797,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwMDIwNA==",
      "original_commit_id" : "7168395ea63d33075a60369f5778eb635208beba",
      "original_line" : 19,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 417542336,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429800204",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r430335345"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430335345"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same for those two as well, obviously ;)",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-26T11:13:23Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r430335345",
      "id" : 430335345,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMzNTM0NQ==",
      "original_commit_id" : "988b8c065b7aa30c68588de35a620930b7a0ff91",
      "original_line" : 18,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 418197105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430335345",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r430854321"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430854321"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh... yeah, okay. I moved the declarations as well (from `src/validation.h`).",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-27T04:45:50Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r430854321",
      "id" : 430854321,
      "in_reply_to_id" : 430335345,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg1NDMyMQ==",
      "original_commit_id" : "988b8c065b7aa30c68588de35a620930b7a0ff91",
      "original_line" : 18,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 418853413,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430854321",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432476733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432476733"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`scriptCode` unused ever, maybe drop a comment saying it's just there due to inheritance? ",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-29T13:19:17Z",
      "diff_hunk" : "@@ -1501,6 +1501,18 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+bool SimpleSignatureChecker::CheckSig(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432476733",
      "id" : 432476733,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3NjczMw==",
      "original_commit_id" : "72758ea816e143aeed0f7a736af7e8402c0121ef",
      "original_line" : 1504,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 420942433,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432476733",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432488802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432488802"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Have you given thought to the other script verification flags? People can malleate the witness to make it larger.\r\n\r\nAlternative is to cap the signature size by consensus param.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-29T13:39:33Z",
      "diff_hunk" : "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432488802",
      "id" : 432488802,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4ODgwMg==",
      "original_commit_id" : "89ef14d17e01985c9faa5daaf0583c89ba95422f",
      "original_line" : 28,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 420942433,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432488802",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432491910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432491910"
         }
      },
      "author_association" : "MEMBER",
      "body" : "could return an explicit `state.Invalid` line for better debugging?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-29T13:44:38Z",
      "diff_hunk" : "@@ -3318,6 +3325,11 @@ bool CheckBlock(const CBlock& block, BlockValidationState& state, const Consensu\n     if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n         return false;\n \n+    // Signet only: check block solution, unless this is the genesis block\n+    if (consensusParams.signet_blocks && fCheckPOW && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) {\n+        return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432491910",
      "id" : 432491910,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5MTkxMA==",
      "original_commit_id" : "4991f1545bbefc100c6ece97787ccb71f7746880",
      "original_line" : 3330,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 420942433,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432491910",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432497862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432497862"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe too late but: Turning this into a witness stack + adding some validation flags would allow new scripts to be deployed on new networks without any additional work. We do this in Elements which means you can deploy segwit-style scripts, taproot etc.\r\n\r\nOk there's one catch in that the witnessScript has to be known by the blocksigner to fill out the witness stack, but relatively small burden.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-29T13:53:59Z",
      "diff_hunk" : "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432497862",
      "id" : 432497862,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5Nzg2Mg==",
      "original_commit_id" : "89ef14d17e01985c9faa5daaf0583c89ba95422f",
      "original_line" : 20,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 420942433,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432497862",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911042"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do we usually do that? I know e.g. in other languages unused parameters are marked by giving them an underscore prefix, but I don't think I've seen this in Bitcoin Core.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-31T05:22:52Z",
      "diff_hunk" : "@@ -1501,6 +1501,18 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+bool SimpleSignatureChecker::CheckSig(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911042",
      "id" : 432911042,
      "in_reply_to_id" : 432476733,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTA0Mg==",
      "original_commit_id" : "72758ea816e143aeed0f7a736af7e8402c0121ef",
      "original_line" : 1504,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 421462540,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911042",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911752"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911752"
         }
      },
      "author_association" : "MEMBER",
      "body" : "People can already kind of malleate blocks by changing the nonce, since it isn't committed to in the signet hash, so it feels like going for the same level of restrictions as in the block checks is sensible, I think. Thoughts @ajtowns ?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-31T05:36:58Z",
      "diff_hunk" : "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911752",
      "id" : 432911752,
      "in_reply_to_id" : 432488802,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTc1Mg==",
      "original_commit_id" : "89ef14d17e01985c9faa5daaf0583c89ba95422f",
      "original_line" : 28,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 421463127,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911752",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911875"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sounds good!",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-31T05:39:07Z",
      "diff_hunk" : "@@ -3318,6 +3325,11 @@ bool CheckBlock(const CBlock& block, BlockValidationState& state, const Consensu\n     if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n         return false;\n \n+    // Signet only: check block solution, unless this is the genesis block\n+    if (consensusParams.signet_blocks && fCheckPOW && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) {\n+        return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911875",
      "id" : 432911875,
      "in_reply_to_id" : 432491910,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTg3NQ==",
      "original_commit_id" : "4991f1545bbefc100c6ece97787ccb71f7746880",
      "original_line" : 3330,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 421463224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911875",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911959"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911959"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think @ajtowns is working on a patch to Signet to do precisely this, but I think I'm leaning towards keeping it simple for now. I mean, taproot in signet blocks doesn't really make any sense, or open up any possibilities, AFAICT.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-31T05:40:15Z",
      "diff_hunk" : "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432911959",
      "id" : 432911959,
      "in_reply_to_id" : 432497862,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTk1OQ==",
      "original_commit_id" : "89ef14d17e01985c9faa5daaf0583c89ba95422f",
      "original_line" : 20,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 421463283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432911959",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432933933"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432933933"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In some places we omit unused args (like `scriptCode`), in others we mark it unused like `/* scriptCode */`. In both cases only the type is kept, which indicates that the value can not be used and is unused. Not sure if there is a guideline.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-05-31T10:49:25Z",
      "diff_hunk" : "@@ -1501,6 +1501,18 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+bool SimpleSignatureChecker::CheckSig(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r432933933",
      "id" : 432933933,
      "in_reply_to_id" : 432476733,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMzkzMw==",
      "original_commit_id" : "72758ea816e143aeed0f7a736af7e8402c0121ef",
      "original_line" : 1504,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 421482543,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432933933",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r433039843"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433039843"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I updated the code to exclude the name (`scriptCode`) in declaration/definition.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-06-01T04:49:27Z",
      "diff_hunk" : "@@ -1501,6 +1501,18 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n+bool SimpleSignatureChecker::CheckSig(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r433039843",
      "id" : 433039843,
      "in_reply_to_id" : 432476733,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAzOTg0Mw==",
      "original_commit_id" : "72758ea816e143aeed0f7a736af7e8402c0121ef",
      "original_line" : 1504,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 421590913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433039843",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK 03ac167829d555de456d684f6580c6429253c7f0\r\n\r\nChanges since my last review only addressed various review comments that came up in between. ",
      "created_at" : "2020-06-01T19:59:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-637071356",
      "id" : 637071356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNzA3MTM1Ng==",
      "updated_at" : "2020-06-01T19:59:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/637071356",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448982216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448982216"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This may be out of scope for this PR, but as long as we're here - should the word \"mainnet\" actually be replaced by the name of the network selected in the for loop? `chain.NetworkIDString()`",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-02T12:58:35Z",
      "diff_hunk" : "@@ -136,7 +136,7 @@ BOOST_AUTO_TEST_CASE(key_io_invalid)\n         std::string exp_base58string = test[0].get_str();\n \n         // must be invalid as public and as private key\n-        for (const auto& chain : { CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::REGTEST }) {\n+        for (const auto& chain : { CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::SIGNET, CBaseChainParams::REGTEST }) {\n             SelectParams(chain);\n             destination = DecodeDestination(exp_base58string);\n             BOOST_CHECK_MESSAGE(!IsValidDestination(destination), \"IsValid pubkey in mainnet:\" + strTest);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448982216",
      "id" : 448982216,
      "line" : 142,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4MjIxNg==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 142,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/test/key_io_tests.cpp",
      "position" : 8,
      "pull_request_review_id" : 441652460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448982216",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448985621"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448985621"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do you think it would be helpful to print the decoded ASM of the script as well?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-02T13:03:56Z",
      "diff_hunk" : "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448985621",
      "id" : 448985621,
      "line" : 280,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4NTYyMQ==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 280,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 52,
      "pull_request_review_id" : 441656778,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448985621",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448985929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448985929"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`OP_1 03ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430 OP_1 OP_CHECKMULTISIG`\r\n\r\nWhy did you choose 1-of-1 multisig instead of a single `OP_CHECKSIG` ?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-02T13:04:26Z",
      "diff_hunk" : "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448985929",
      "id" : 448985929,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4NTkyOQ==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 269,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 441657194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448985929",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448995439"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448995439"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This may be more of a note on BIP325 in general, but on mainnet currently it is not invalid to produce a block with no transactions and therefore no witness commitment in the coinbase tx.\r\n\r\nI found a recent example: https://blockstream.info/block/0000000000000000000e77c9c81498be9a4aa226d4be35a19a0fb11d99331d6a\r\n\r\nWhy does the spec depend on a witness commitment instead of new `OP_RETURN` for this purpose?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-02T13:19:05Z",
      "diff_hunk" : "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution invalid)\");\n+    }\n+    return true;\n+}\n+\n+uint256 BlockSignetMerkleRoot(const CBlock& block, bool* mutated = nullptr)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    {\n+        // find and delete signet signature\n+        CMutableTransaction mtx(*block.vtx.at(0));\n+        (void)SetWitnessCommitmentSection(mtx, SIGNET_HEADER, std::vector<uint8_t>{});\n+        leaves[0] = mtx.GetHash();\n+    }\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves), mutated);\n+}\n+\n+uint256 GetSignetHash(const CBlock& block)\n+{\n+    if (block.vtx.size() == 0) return block.GetHash();\n+    return (CHashWriter(SER_DISK, PROTOCOL_VERSION) << block.nVersion << block.hashPrevBlock << BlockSignetMerkleRoot(block) << block.nTime << block.nBits).GetHash();\n+}\n+\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result)\n+{\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r448995439",
      "id" : 448995439,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk5NTQzOQ==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 59,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 441669795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448995439",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r449050474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449050474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Array-to-pointer safety nit: What about `const std::array<uint8_t, 4>` (instead of `const uint8_t header[4]`) and giving `SIGNET_HEADER` the same treatment?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-02T14:39:06Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+class CBlock;\n+class CScript;\n+class uint256;\n+struct CMutableTransaction;\n+\n+namespace Consensus {\n+struct Params;\n+}\n+\n+constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet hash for the given block\n+ *\n+ * The signet hash differs from the regular block hash in two places:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+uint256 GetSignetHash(const CBlock& block);\n+\n+/**\n+ * Attempt to get the data for the section with the given header in the witness commitment of the block.\n+ *\n+ * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+ */\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r449050474",
      "id" : 449050474,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1MDQ3NA==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 41,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : null,
      "pull_request_review_id" : 441743392,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449050474",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nBuild OK (OSX), Tests pass locally OK functional + unit.\r\n\r\nThis is all very cool, going to run a node in a second but I have some general questions:\r\n\r\n1. Should there be additional test cases for address and key strings for signet in `src/test/data/key_io_valid.json` ?\r\n2. I'm unclear what the outcome would be if the challenge script had `CSV` or `CLTV` -- does the method from `BaseSignatureChecker` just return false? Is there any reason to expand those methods into the signet checker? Perhaps grab the `nSequence` or `nLocktime` values from the coinbase TX?\r\n3. Re: hard-coded public key and IP address for \"the\" signet. I understand the idea here is that groups of developers can launch their own signet chain with unique parameters. Still, having a default identity (pubkey, IP) seems potentially awkward. I wonder if the private key you set should be revealed? Or if the \"default\" challenge should be otherwise more accessible/permissionless? Having a single hard-coded seed might require on going maintenance.\r\n\r\n",
      "created_at" : "2020-07-02T14:48:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653051326",
      "id" : 653051326,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzA1MTMyNg==",
      "updated_at" : "2020-07-02T14:49:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653051326",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  I wonder if the private key you set should be revealed? \r\n\r\nThis would turn into testnet with mining essentially. Private key being secret is important.",
      "created_at" : "2020-07-02T14:56:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653055802",
      "id" : 653055802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzA1NTgwMg==",
      "updated_at" : "2020-07-02T14:56:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653055802",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Running on signet now. I noticed in the log all blocks during IBD were reported as `progress=1.000000`\r\n\r\nI wonder if it makes sense to add logic in `GuessVerificationProgress()` that just compares current wall-clock time to the timestamp in the chain tip (I think this is how we used to do it before hard coding an estimated TX/s into chainparams)\r\n\r\nOr maybe there's a value equivalent to \"1 tx every ten minutes\" that can be used to fudge it:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/7027c67cac852b27c6d71489e4135fabdd624226/src/chainparams.cpp#L159-L164",
      "created_at" : "2020-07-02T15:02:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653059667",
      "id" : 653059667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzA1OTY2Nw==",
      "updated_at" : "2020-07-02T15:02:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653059667",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Might want to look how Elements(Liquid nodes) does it. Should be directly\nusable?\n\nOn Thu, Jul 2, 2020, 11:02 AM Matthew Zipkin <notifications@github.com>\nwrote:\n\n> Running on signet now. I noticed in the log all blocks during IBD were\n> reported as progress=1.000000\n>\n> I wonder if it makes sense to add logic in GuessVerificationProgress()\n> that just compares current wall-clock time to the timestamp in the chain\n> tip (I think this is how we used to do it before hard coding an estimated\n> TX/s into chainparams)\n>\n> Or maybe there's a value equivalent to \"1 tx every ten minutes\" that can\n> be used to fudge it:\n>\n>\n> https://github.com/bitcoin/bitcoin/blob/7027c67cac852b27c6d71489e4135fabdd624226/src/chainparams.cpp#L159-L164\n>\n> â\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653059667>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABMAFU5DFVAK6YJBTNO3TSDRZSORZANCNFSM4LCDORNQ>\n> .\n>\n",
      "created_at" : "2020-07-02T15:04:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653060753",
      "id" : 653060753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzA2MDc1Mw==",
      "updated_at" : "2020-07-02T15:04:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653060753",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > I wonder if the private key you set should be revealed?\r\n> \r\n> This would turn into testnet with mining essentially. Private key being secret is important.\r\n\r\nOK - so this PR represents one single signet that everyone will use instead of testnet? If so then I understand keeping the key private, except that it could be a burden on the single \"host\".\r\n\r\nMy impression is that groups of developers will launch their own signets with custom parameters for various reasons, and this PR just defines a generic framework. I guess it just looks funny to hard code one person's key in consensus code, even for a test network. I'd expect to see that like more of an example in a test instead, with the actual production code left more generic.",
      "created_at" : "2020-07-02T15:16:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653067954",
      "id" : 653067954,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzA2Nzk1NA==",
      "updated_at" : "2020-07-02T15:16:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653067954",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r449105201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449105201"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why require standard for signet? This is `false` for testnet. Is the idea just to be more mainnet-like?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-02T15:45:09Z",
      "diff_hunk" : "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"sb\";\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r449105201",
      "id" : 449105201,
      "line" : 332,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEwNTIwMQ==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 332,
      "original_position" : 104,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 104,
      "pull_request_review_id" : 441815401,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449105201",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Connected to signet, got coins from faucet, did a sendmany to a dozen internal wallet addresses - all good! Had to set `fallbackfee` for this network to send.\r\n\r\nAlso tried starting a signet with ` -signet_blockscript=51` (`OP_TRUE`) and still got `block solution missing` when attempting to generate. This branch doesn't have the mining code yet but I thought I could trick it by using an \"anyone can mine\" script :-)\r\n\r\n",
      "created_at" : "2020-07-02T16:06:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-653095871",
      "id" : 653095871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzA5NTg3MQ==",
      "updated_at" : "2020-07-02T16:06:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653095871",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r449228243"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449228243"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think if you're moving these functions into consensus/ then they should either be inline (which seems reasonable enough) or should be in a new consensus/validation.cpp as otherwise libconsensus won't be self-contained.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-02T19:35:18Z",
      "diff_hunk" : "@@ -144,4 +144,13 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+\n+/** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r449228243",
      "id" : 449228243,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyODI0Mw==",
      "original_commit_id" : "fe5b704bdd4a6813b3fde72dd88d218fbf989e5b",
      "original_line" : 154,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 441970331,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449228243",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r451873501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451873501"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think using a span here would work even better.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-08T23:08:46Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+class CBlock;\n+class CScript;\n+class uint256;\n+struct CMutableTransaction;\n+\n+namespace Consensus {\n+struct Params;\n+}\n+\n+constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet hash for the given block\n+ *\n+ * The signet hash differs from the regular block hash in two places:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+uint256 GetSignetHash(const CBlock& block);\n+\n+/**\n+ * Attempt to get the data for the section with the given header in the witness commitment of the block.\n+ *\n+ * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+ */\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r451873501",
      "id" : 451873501,
      "in_reply_to_id" : 449050474,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3MzUwMQ==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 41,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : null,
      "pull_request_review_id" : 441970331,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451873501",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453419296"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419296"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's a good point, yeah. I think it deserves a dedicated PR though, even if a one liner.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-13T03:44:47Z",
      "diff_hunk" : "@@ -136,7 +136,7 @@ BOOST_AUTO_TEST_CASE(key_io_invalid)\n         std::string exp_base58string = test[0].get_str();\n \n         // must be invalid as public and as private key\n-        for (const auto& chain : { CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::REGTEST }) {\n+        for (const auto& chain : { CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::SIGNET, CBaseChainParams::REGTEST }) {\n             SelectParams(chain);\n             destination = DecodeDestination(exp_base58string);\n             BOOST_CHECK_MESSAGE(!IsValidDestination(destination), \"IsValid pubkey in mainnet:\" + strTest);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453419296",
      "id" : 453419296,
      "in_reply_to_id" : 448982216,
      "line" : 142,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTI5Ng==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 142,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/test/key_io_tests.cpp",
      "position" : 8,
      "pull_request_review_id" : 446963828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419296",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453419619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419619"
         }
      },
      "author_association" : "MEMBER",
      "body" : "From personal experience, this is a check point to ensure you're not accidentally running on the wrong signet, in which case the ASM won't really help any.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-13T03:46:06Z",
      "diff_hunk" : "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453419619",
      "id" : 453419619,
      "in_reply_to_id" : 448985621,
      "line" : 280,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTYxOQ==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 280,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 52,
      "pull_request_review_id" : 446964132,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419619",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453419873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419873"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Mostly as I expect there to be backup signers and such, so having it on a multisig setup from the start seems sensible.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-13T03:47:19Z",
      "diff_hunk" : "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453419873",
      "id" : 453419873,
      "in_reply_to_id" : 448985929,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxOTg3Mw==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 269,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 446964421,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453419873",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453420748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453420748"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's a good point, but then again, it IS allowed to put a witness commitment in a block with no transactions (as evidenced by most of the signet blocks right now), so it doesn't feel like a huge deal in the end. After all, the signet blocks will \"suffer\" from the extra overhead with empty blocks, but that seems like an acceptable trade-off.\r\n\r\nThe question is if it's simpler to do an OP_RETURN instead of a witness commitment extension. @sipa or someone, would love your input on this.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-13T03:51:40Z",
      "diff_hunk" : "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution invalid)\");\n+    }\n+    return true;\n+}\n+\n+uint256 BlockSignetMerkleRoot(const CBlock& block, bool* mutated = nullptr)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    {\n+        // find and delete signet signature\n+        CMutableTransaction mtx(*block.vtx.at(0));\n+        (void)SetWitnessCommitmentSection(mtx, SIGNET_HEADER, std::vector<uint8_t>{});\n+        leaves[0] = mtx.GetHash();\n+    }\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves), mutated);\n+}\n+\n+uint256 GetSignetHash(const CBlock& block)\n+{\n+    if (block.vtx.size() == 0) return block.GetHash();\n+    return (CHashWriter(SER_DISK, PROTOCOL_VERSION) << block.nVersion << block.hashPrevBlock << BlockSignetMerkleRoot(block) << block.nTime << block.nBits).GetHash();\n+}\n+\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result)\n+{\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453420748",
      "id" : 453420748,
      "in_reply_to_id" : 448995439,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMDc0OA==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 59,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 446965461,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453420748",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453424499"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453424499"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Trying to switch the `SIGNET_HEADER` declaration into a `Span`, I end up with this ugly beast. Anything I can do to improve that? Going to go with @practicalswift's suggestion for now. :)\r\n\r\n```C++\r\nconst Span<const uint8_t> SIGNET_HEADER =\r\n  MakeSpan(\r\n    (const std::vector<const uint8_t>)std::vector<const uint8_t>{0xec, 0xc7, 0xda, 0xa2}\r\n  );\r\n```\r\n",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-13T04:09:56Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+class CBlock;\n+class CScript;\n+class uint256;\n+struct CMutableTransaction;\n+\n+namespace Consensus {\n+struct Params;\n+}\n+\n+constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet hash for the given block\n+ *\n+ * The signet hash differs from the regular block hash in two places:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+uint256 GetSignetHash(const CBlock& block);\n+\n+/**\n+ * Attempt to get the data for the section with the given header in the witness commitment of the block.\n+ *\n+ * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+ */\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453424499",
      "id" : 453424499,
      "in_reply_to_id" : 449050474,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNDQ5OQ==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 41,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : null,
      "pull_request_review_id" : 446969714,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453424499",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453425026"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453425026"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, one of the design goals with signet is to be as close to mainnet as possible. The further it deviates, the less useful it is for people who want to make sure their stuff works.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-13T04:12:29Z",
      "diff_hunk" : "@@ -249,13 +254,95 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"sb\";\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453425026",
      "id" : 453425026,
      "in_reply_to_id" : 449105201,
      "line" : 332,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNTAyNg==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 332,
      "original_position" : 104,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 104,
      "pull_request_review_id" : 446970277,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453425026",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453425899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453425899"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, Span does not store any data. Doing that would be illegal (it's creating a vector, storing a pointer to its data in a Span, and then throwing the vector away).\r\n\r\nJust do this:\r\n\r\n```c++\r\nconst uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\r\n```\r\n(or `std::array`, or `std::vector`, or whatever container you prefer...)\r\n\r\nAnd make `GetWitnessCommitmentSection` accept a `Span<const uint8_t>`. You can just pass `SIGNET_HEADER` as argument to `GetWitnessCommitmentSection` - it'll be converted to a Span on the fly.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-13T04:16:27Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+class CBlock;\n+class CScript;\n+class uint256;\n+struct CMutableTransaction;\n+\n+namespace Consensus {\n+struct Params;\n+}\n+\n+constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet hash for the given block\n+ *\n+ * The signet hash differs from the regular block hash in two places:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+uint256 GetSignetHash(const CBlock& block);\n+\n+/**\n+ * Attempt to get the data for the section with the given header in the witness commitment of the block.\n+ *\n+ * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+ */\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453425899",
      "id" : 453425899,
      "in_reply_to_id" : 449050474,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNTg5OQ==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 41,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : null,
      "pull_request_review_id" : 446971183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453425899",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@pinheadmz \r\n\r\n> OK - so this PR represents one single signet that everyone will use instead of testnet? If so then I understand keeping the key private, except that it could be a burden on the single \"host\".\r\n> \r\n> My impression is that groups of developers will launch their own signets with custom parameters for various reasons, and this PR just defines a generic framework. I guess it just looks funny to hard code one person's key in consensus code, even for a test network. I'd expect to see that like more of an example in a test instead, with the actual production code left more generic.\r\n\r\nThat was my initial idea too, but current trend is that there is a super-signet that basically has most of the proposed features, and people choose to activate whatever they want to test out. Due to the nature of soft forks, inactive features will be silently ignored/accepted in blocks.\r\n\r\nOf course there may be spin-off signets, esp. as people want to test stuff out that hasn't gotten far enough to be added to the above yet, and there may be \"LTS signets\" for people who really only want to have something that runs forever, like mainnet.",
      "created_at" : "2020-07-13T04:17:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-657349391",
      "id" : 657349391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzM0OTM5MQ==",
      "updated_at" : "2020-07-13T04:17:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657349391",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453427204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453427204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Experimenting with making these inline and contained in `consensus/validation.h`.\r\n",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-13T04:22:53Z",
      "diff_hunk" : "@@ -144,4 +144,13 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+\n+/** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n+int GetWitnessCommitmentIndex(const CBlock& block);\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+template<typename T> int GetWitnessCommitmentIndex(const T& tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453427204",
      "id" : 453427204,
      "in_reply_to_id" : 449228243,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNzIwNA==",
      "original_commit_id" : "fe5b704bdd4a6813b3fde72dd88d218fbf989e5b",
      "original_line" : 154,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 446972609,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453427204",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift @ajtowns @pinheadmz and others, thanks a lot for review, and sorry about delay in responding. I've pushed two to-squash commits. Feedback welcome!",
      "created_at" : "2020-07-13T04:25:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-657350987",
      "id" : 657350987,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzM1MDk4Nw==",
      "updated_at" : "2020-07-13T23:28:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657350987",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453429312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453429312"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Gotcha! Thanks.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-13T04:32:59Z",
      "diff_hunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+class CBlock;\n+class CScript;\n+class uint256;\n+struct CMutableTransaction;\n+\n+namespace Consensus {\n+struct Params;\n+}\n+\n+constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet hash for the given block\n+ *\n+ * The signet hash differs from the regular block hash in two places:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+uint256 GetSignetHash(const CBlock& block);\n+\n+/**\n+ * Attempt to get the data for the section with the given header in the witness commitment of the block.\n+ *\n+ * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+ */\n+bool GetWitnessCommitmentSection(const CBlock& block, const uint8_t header[4], std::vector<uint8_t>& result);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r453429312",
      "id" : 453429312,
      "in_reply_to_id" : 449050474,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyOTMxMg==",
      "original_commit_id" : "03ac167829d555de456d684f6580c6429253c7f0",
      "original_line" : 41,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : null,
      "pull_request_review_id" : 446974984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453429312",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@instagibbs \r\n> Might want to look how Elements(Liquid nodes) does it. Should be directly usable?\r\n\r\nLooks like since Liquid has \"guaranteed\" block time (signet will too, right?) IBD progress is computed from the timestamp of the chain tip and current time.\r\n\r\nhttps://github.com/Blockstream/liquid/commit/5652022f4b21c8dd6bb595ede4c35e8ec62d5765#diff-24efdb00bfbe56b140fb006b562cc70bR5321-R5326",
      "created_at" : "2020-07-14T15:22:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-658243537",
      "id" : 658243537,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODI0MzUzNw==",
      "updated_at" : "2020-07-14T15:22:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658243537",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Confirmed recent rebase is minimal (just added 2 commits, not sure why other commit hashes changed or why github identified it as a force-push?)\r\n\r\nStill builds OK on OSX, unit tests pass. Synced to signet OK.\r\n\r\nJust waiting to hear more opinions on the commitment location before ACKing: https://github.com/bitcoin/bitcoin/pull/18267/commits/9fd83904dd745be7ffaf51262e344e6c3dcf07cc#r453420748\r\n\r\nFunctional tests failed:\r\n\r\n```\r\nwallet_basic.py failed, Duration: 62 s\r\nwallet_address_types.py failed, Duration: 65 s\r\n```\r\n\r\nBoth were `AssertionError: [node 4] Unable to connect to bitcoind after 60s` maybe just a CPU crunch on my own machine\r\n\r\nI can post the stack traces if you want ",
      "created_at" : "2020-07-14T16:00:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-658264426",
      "id" : 658264426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODI2NDQyNg==",
      "updated_at" : "2020-07-14T16:00:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658264426",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@pinheadmz \r\n\r\nThanks for the re-review!\r\n\r\n> Looks like since Liquid has \"guaranteed\" block time (signet will too, right?) IBD progress is computed from the timestamp of the chain tip and current time.\r\n\r\nSignet will be using proof of work as well, so it's not guaranteed per se, but it should be very unusual to see big discrepancies in block times due to the limited difficulty (currently plan to mine 1 min and delay 9 mins, but there may be other types in the future).\r\n\r\n> Confirmed recent rebase is minimal (just added 2 commits, not sure why other commit hashes changed or why github identified it as a force-push?)\r\n\r\nThis is because I had to rebase on master to get some changes to `Span` that were added since the last rebase.\r\n\r\nThose errors you are seeing are most likely unrelated. If they persist when you run again, let me know and I'll look. :)\r\n",
      "created_at" : "2020-07-14T23:10:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-658456829",
      "id" : 658456829,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODQ1NjgyOQ==",
      "updated_at" : "2020-07-14T23:10:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658456829",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "For what it's worth, I ran the functional tests for wallet_basic.py and wallet_address_types.py four times against 9fd83904d and didn't get any failures.",
      "created_at" : "2020-07-15T00:51:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-658483596",
      "id" : 658483596,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODQ4MzU5Ng==",
      "updated_at" : "2020-07-15T00:51:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658483596",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r457006827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457006827"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since you can already malleate the nonce to get a different block, and can't build on the block without being able to do a valid signature, I guess malleation isn't really a concern, but I think extra flags would make sense. I wonder if exporting  `validation.cpp:GetBlockScriptFlags` and calling it with the genesis block (or making it accept pindexPrev and calling it with nullptr) to get the script flags would make sense.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-20T03:08:22Z",
      "diff_hunk" : "@@ -0,0 +1,118 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <util/system.h>\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    std::vector<uint8_t> signet_data;\n+    if (!GetWitnessCommitmentSection(block, SIGNET_HEADER, signet_data)) {\n+        return error(\"CheckBlockSolution: Errors in block (block solution missing)\");\n+    }\n+    SimpleSignatureChecker bsc(GetSignetHash(block));\n+    CScript challenge(consensusParams.signet_challenge.begin(), consensusParams.signet_challenge.end());\n+    CScript solution = CScript(signet_data.begin(), signet_data.end());\n+\n+    if (!VerifyScript(solution, challenge, nullptr, MANDATORY_SCRIPT_VERIFY_FLAGS, bsc)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r457006827",
      "id" : 457006827,
      "in_reply_to_id" : 432488802,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAwNjgyNw==",
      "original_commit_id" : "89ef14d17e01985c9faa5daaf0583c89ba95422f",
      "original_line" : 28,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 451270809,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457006827",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r457010234"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457010234"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've done a proposal to change from a special signature checker to reusing transaction signature checking at https://github.com/bitcoin/bips/pull/947 . @sdaftuar I think this might resolve your concern from https://github.com/bitcoin/bitcoin/pull/16653#issuecomment-523495761",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-07-20T03:17:28Z",
      "diff_hunk" : "@@ -166,6 +166,17 @@ class BaseSignatureChecker\n     virtual ~BaseSignatureChecker() {}\n };\n \n+/** A low level signature checker.  Note that the caller must verify that the hash passed in relates to a known message (unlike for the other signature checkers). */\n+class SimpleSignatureChecker : public BaseSignatureChecker",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r457010234",
      "id" : 457010234,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAxMDIzNA==",
      "original_commit_id" : "e6ec7783d764b04c0122bb466494565929e74b1e",
      "original_line" : 170,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : null,
      "pull_request_review_id" : 451272717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457010234",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This pull request has been updated to reflect the changes in https://github.com/bitcoin/bips/pull/947 -- see https://github.com/ajtowns/bitcoin/commits/202007-signet for details on what changed (note: some commits were out of scope for this PR, such as generation, and have not been cherry-picked/merged here).",
      "created_at" : "2020-07-30T03:14:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-666066277",
      "id" : 666066277,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjA2NjI3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T03:14:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666066277",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-07-30T16:26:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-666506520",
      "id" : 666506520,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjUwNjUyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T16:26:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666506520",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464010088"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464010088"
         }
      },
      "author_association" : "MEMBER",
      "body" : "359badf294c8fa632b7df479a3e146cf28658f6b\r\n\r\nnit, args can have the same name as members.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-01T23:23:13Z",
      "diff_hunk" : "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464010088",
      "id" : 464010088,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMDA4OA==",
      "original_commit_id" : "359badf294c8fa632b7df479a3e146cf28658f6b",
      "original_line" : 34,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : null,
      "pull_request_review_id" : 459609278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464010088",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464010767"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464010767"
         }
      },
      "author_association" : "MEMBER",
      "body" : "359badf294c8fa632b7df479a3e146cf28658f6b\r\n\r\nnit, just noting `signet_blocks` is only used in the next commit.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-01T23:33:54Z",
      "diff_hunk" : "@@ -80,6 +80,13 @@ struct Params {\n     int64_t DifficultyAdjustmentInterval() const { return nPowTargetTimespan / nPowTargetSpacing; }\n     uint256 nMinimumChainWork;\n     uint256 defaultAssumeValid;\n+\n+    /**\n+     * If true, witness commitments contain a payload equal to a Bitcoin Script solution\n+     * to the signet challenge.\n+     */\n+    bool signet_blocks{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464010767",
      "id" : 464010767,
      "line" : 88,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMDc2Nw==",
      "original_commit_id" : "359badf294c8fa632b7df479a3e146cf28658f6b",
      "original_line" : 88,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/consensus/params.h",
      "position" : 9,
      "pull_request_review_id" : 459609278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464010767",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464011050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011050"
         }
      },
      "author_association" : "MEMBER",
      "body" : "359badf294c8fa632b7df479a3e146cf28658f6b\r\n\r\nWhy have this separated? Could be in the to the constructor?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-01T23:37:58Z",
      "diff_hunk" : "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }\n+\n+    static SignetTxs Create(const CBlock& block, const CScript& challenge);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464011050",
      "id" : 464011050,
      "line" : 36,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMTA1MA==",
      "original_commit_id" : "359badf294c8fa632b7df479a3e146cf28658f6b",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : 36,
      "pull_request_review_id" : 459609278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011050",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464011118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011118"
         }
      },
      "author_association" : "MEMBER",
      "body" : "359badf294c8fa632b7df479a3e146cf28658f6b\r\n\r\nThese could be const?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-01T23:39:07Z",
      "diff_hunk" : "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }\n+\n+    static SignetTxs Create(const CBlock& block, const CScript& challenge);\n+\n+public:\n+    SignetTxs(const CBlock& block, const CScript& challenge) : SignetTxs(Create(block, challenge)) { }\n+\n+    CTransaction to_spend;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464011118",
      "id" : 464011118,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMTExOA==",
      "original_commit_id" : "359badf294c8fa632b7df479a3e146cf28658f6b",
      "original_line" : 41,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : null,
      "pull_request_review_id" : 459609278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011118",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464011952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "359badf294c8fa632b7df479a3e146cf28658f6b\r\n\r\nCan't find a reason for this block. Is this a leftover?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-01T23:52:09Z",
      "diff_hunk" : "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464011952",
      "id" : 464011952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMTk1Mg==",
      "original_commit_id" : "359badf294c8fa632b7df479a3e146cf28658f6b",
      "original_line" : 78,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 459609278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464011952",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464013798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464013798"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The member vars are CTransactions rather than CMutableTransactions, and are effectively const, so have to be list initialized, so the actual logic has to be moved elsewhere. (At least as far as I can see)",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-02T00:21:22Z",
      "diff_hunk" : "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }\n+\n+    static SignetTxs Create(const CBlock& block, const CScript& challenge);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464013798",
      "id" : 464013798,
      "in_reply_to_id" : 464011050,
      "line" : 36,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxMzc5OA==",
      "original_commit_id" : "359badf294c8fa632b7df479a3e146cf28658f6b",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : 36,
      "pull_request_review_id" : 459611192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464013798",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464014430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464014430"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, it was making it possible to free up some data at one point, but now there's nothing going on afterwards anymore.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-02T00:31:20Z",
      "diff_hunk" : "@@ -0,0 +1,147 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464014430",
      "id" : 464014430,
      "in_reply_to_id" : 464011952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxNDQzMA==",
      "original_commit_id" : "359badf294c8fa632b7df479a3e146cf28658f6b",
      "original_line" : 78,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 459611517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464014430",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464015795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464015795"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for the explanation ð ",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-02T00:53:07Z",
      "diff_hunk" : "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }\n+\n+    static SignetTxs Create(const CBlock& block, const CScript& challenge);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464015795",
      "id" : 464015795,
      "in_reply_to_id" : 464011050,
      "line" : 36,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAxNTc5NQ==",
      "original_commit_id" : "359badf294c8fa632b7df479a3e146cf28658f6b",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : 36,
      "pull_request_review_id" : 459612260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464015795",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464176423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464176423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I personally find that confusing. I think renaming the instance vars to `m_*` is worthwhile, though, so will do that.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-03T03:29:25Z",
      "diff_hunk" : "@@ -0,0 +1,45 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>\n+\n+#include <span.h>\n+\n+/**\n+ * Extract signature and check whether a block has a valid solution\n+ */\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams);\n+\n+/**\n+ * Generate the signet tx corresponding to the given block\n+ *\n+ * The signet tx commits to everything in the block except:\n+ * 1. It hashes a modified merkle root with the signet signature removed.\n+ * 2. It skips the nonce.\n+ */\n+class SignetTxs {\n+private:\n+    template<class T1, class T2>\n+    SignetTxs(const T1& to_spend_, const T2& to_sign_) : to_spend{to_spend_}, to_sign{to_sign_} { }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r464176423",
      "id" : 464176423,
      "in_reply_to_id" : 464010088,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE3NjQyMw==",
      "original_commit_id" : "359badf294c8fa632b7df479a3e146cf28658f6b",
      "original_line" : 34,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : null,
      "pull_request_review_id" : 459728598,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464176423",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed nits in to-squashies.",
      "created_at" : "2020-08-03T03:34:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-667784979",
      "id" : 667784979,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Nzc4NDk3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-03T03:34:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667784979",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "* Updated to use new 1-of-2 key for the new Signet network (new 2nd key maintained by @ajtowns).\r\n* Trimmed down `consensus/validation.h` stuff, removing the transaction based `GetWitnessCommitmentIndex` variant\r\n* Squashed to-squashies (including the new stuff)",
      "created_at" : "2020-08-11T02:25:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-671686673",
      "id" : 671686673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTY4NjY3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-11T02:26:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671686673",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Test network was restarted (Signet Global Test Net V) along with below services:\r\n* Faucet https://signet.bc-2.jp/\r\n* Explorer https://explorer.bc-2.jp/\r\n",
      "created_at" : "2020-08-12T03:32:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-672551050",
      "id" : 672551050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MjU1MTA1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T03:32:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672551050",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "CR-Ack -- looked over, everything looks fine. Doesn't seem to interfere with any non-signet code paths.",
      "created_at" : "2020-08-12T05:07:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-672575995",
      "id" : 672575995,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MjU3NTk5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T05:07:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672575995",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469684620"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469684620"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Any reason not to move the `block.GetHash() != consensusParams.hashGenesisBlock` check into `CheckBlockSolution`?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-13T04:08:11Z",
      "diff_hunk" : "@@ -1162,6 +1163,12 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n     if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n+    // Signet only: check block solution, unless this is the genesis block\n+    if (consensusParams.signet_blocks && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469684620",
      "id" : 469684620,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4NDYyMA==",
      "original_commit_id" : "4b96892b06a5f45e9dc1117dda0552822bfb5ce4",
      "original_line" : 1167,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 466430363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469684620",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469709732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469709732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There was, but not any more -- fixed, thanks!",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-13T05:44:47Z",
      "diff_hunk" : "@@ -1162,6 +1163,12 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n     if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n+    // Signet only: check block solution, unless this is the genesis block\n+    if (consensusParams.signet_blocks && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469709732",
      "id" : 469709732,
      "in_reply_to_id" : 469684620,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcwOTczMg==",
      "original_commit_id" : "4b96892b06a5f45e9dc1117dda0552822bfb5ce4",
      "original_line" : 1167,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 466458917,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469709732",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469713812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469713812"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why are these prefix values different from testnet/regtest?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-13T05:57:20Z",
      "diff_hunk" : "@@ -250,13 +255,101 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469713812",
      "id" : 469713812,
      "line" : 327,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcxMzgxMg==",
      "original_commit_id" : "96e3d1e45157cb8f2c7ecae8366fe076cc913742",
      "original_line" : 327,
      "original_position" : 99,
      "original_start_line" : 323,
      "path" : "src/chainparams.cpp",
      "position" : 99,
      "pull_request_review_id" : 466463623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : 323,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469713812",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "That's better than before. ACK 96e3d1e .\r\nI wish we can get signet soon, it will help to test taproot for example.",
      "created_at" : "2020-08-13T06:09:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-673282533",
      "id" : 673282533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzI4MjUzMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T06:09:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673282533",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469718546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469718546"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Having them be the same might cause confusion when someone tries to use test/signet to transact on sig/testnet.. no biggie for regtest, which I assume is why (reg)test(net) share prefixes.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-13T06:12:18Z",
      "diff_hunk" : "@@ -250,13 +255,101 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n+            if (blockscript.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(blockscript[0]);\n+\n+            LogPrintf(\"Signet with block script %s\\n\", blockscript[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+        m_assumed_blockchain_size = 0;\n+        m_assumed_chain_state_size = 0;\n+\n+        genesis = CreateGenesisBlock(1534313275, 100123, 0x1e2adc28, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>{125};\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>{87};\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>{217};\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r469718546",
      "id" : 469718546,
      "in_reply_to_id" : 469713812,
      "line" : 327,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcxODU0Ng==",
      "original_commit_id" : "96e3d1e45157cb8f2c7ecae8366fe076cc913742",
      "original_line" : 327,
      "original_position" : 99,
      "original_start_line" : 323,
      "path" : "src/chainparams.cpp",
      "position" : 99,
      "pull_request_review_id" : 466469370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : 323,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469718546",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@kallewoof there is one thing I don't like, but feel free to ignore my remark:\r\n\r\nIf there is for example a new signet for taproot. People who wants to use it, need to get 3 command line parameters right.\r\n\r\nIt would be great if it was all in one parameter say\r\n\r\n`-signet=ab63bc...&signet.node.com` such that people creating signet can just share a single string with everthing needed instead of 3 different parameters.\r\n\r\nMaybe not worth another round of review though.",
      "created_at" : "2020-08-13T08:40:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-673346135",
      "id" : 673346135,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzM0NjEzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T08:41:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673346135",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@NicolasDorier I think that makes perfect sense, but it can easily be a follow-up addition. (One that I will personally write, if nobody beats me to it!)",
      "created_at" : "2020-08-13T09:05:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-673358532",
      "id" : 673358532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzM1ODUzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T09:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673358532",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Built and manually retested following my steps in https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-620569419 -- the latest version still works as advertised.\r\n\r\nNow reviewing the code changes since my 4th review on May 10 at https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-626361626.\r\n\r\nEdit: ugh, looks like a total re-review is needed.",
      "created_at" : "2020-08-13T09:19:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-673365884",
      "id" : 673365884,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzM2NTg4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T09:23:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673365884",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack Sorry about that. >< The changes are improvements, FWIW!",
      "created_at" : "2020-08-13T09:25:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-673369040",
      "id" : 673369040,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzM2OTA0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T09:25:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673369040",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r470999292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470999292"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Could add reference to BIP325 here",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-15T15:12:19Z",
      "diff_hunk" : "@@ -80,6 +80,13 @@ struct Params {\n     int64_t DifficultyAdjustmentInterval() const { return nPowTargetTimespan / nPowTargetSpacing; }\n     uint256 nMinimumChainWork;\n     uint256 defaultAssumeValid;\n+\n+    /**\n+     * If true, witness commitments contain a payload equal to a Bitcoin Script solution\n+     * to the signet challenge.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r470999292",
      "id" : 470999292,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk5OTI5Mg==",
      "original_commit_id" : "3d1b58f1efd60a44beaeb3ef88ee2a616a8566d4",
      "original_line" : 86,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/consensus/params.h",
      "position" : null,
      "pull_request_review_id" : 467960074,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470999292",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471010081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471010081"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n        return error(\"CheckBlockSolution: Errors in block (no witness commitment)\");\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-15T16:14:09Z",
      "diff_hunk" : "@@ -0,0 +1,151 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    bool bad = false;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        bad = true; // no commitment\n+    } else {\n+        try {\n+            VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+            v >> tx_spending.vin[0].scriptSig;\n+            if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+            if (!v.empty()) bad = true;\n+        } catch (const std::exception&) {\n+            bad = true;\n+        }\n+    }\n+    if (bad) {\n+        // treat deserialization problems as not providing any signature and an unspendable input\n+        tx_to_spend.vout[0].scriptPubKey = CScript(OP_RETURN);\n+        tx_spending.vin[0].scriptSig.clear();\n+        tx_spending.vin[0].scriptWitness.stack.clear();\n+    } else {\n+        uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+        data.clear();\n+        CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        writer << block.nVersion;\n+        writer << block.hashPrevBlock;\n+        writer << signet_merkle;\n+        writer << block.nTime;\n+        tx_to_spend.vin[0].scriptSig << data;\n+    }\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {\n+        return error(\"CheckBlockSolution: Errors in block (no witness comittment)\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471010081",
      "id" : 471010081,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAxMDA4MQ==",
      "original_commit_id" : "3d1b58f1efd60a44beaeb3ef88ee2a616a8566d4",
      "original_line" : 132,
      "original_position" : 132,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 467960074,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471010081",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471010900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471010900"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: to consider if you feel like improving this a little more since it's not strictly move-only anyway (github doesn't highlight changes here, which is annoying. This drops the `commitpos` variable and changes for loop increment to conform with the style guide.)\r\n\r\n```suggestion\r\n    if (!block.vtx.empty()) {\r\n        for (size_t o = 0; o < block.vtx[0]->vout.size(); ++o) {\r\n            const CTxOut& vout = block.vtx[0]->vout[o];\r\n            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\r\n                vout.scriptPubKey[0] == OP_RETURN &&\r\n                vout.scriptPubKey[1] == 0x24 &&\r\n                vout.scriptPubKey[2] == 0xaa &&\r\n                vout.scriptPubKey[3] == 0x21 &&\r\n                vout.scriptPubKey[4] == 0xa9 &&\r\n                vout.scriptPubKey[5] == 0xed) {\r\n                return o;\r\n            }\r\n        }\r\n    }\r\n    return NO_WITNESS_COMMITMENT;\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-15T16:23:48Z",
      "diff_hunk" : "@@ -150,4 +150,30 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+/** Minimum size of a witness commitment structure. Defined in BIP 141. **/\n+static constexpr size_t MINIMUM_WITNESS_COMMITMENT{38};\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+static inline int GetWitnessCommitmentIndex(const CBlock& block)\n+{\n+    int commitpos = NO_WITNESS_COMMITMENT;\n+    if (!block.vtx.empty()) {\n+        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n+            const CTxOut& vout = block.vtx[0]->vout[o];\n+            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+                vout.scriptPubKey[0] == OP_RETURN &&\n+                vout.scriptPubKey[1] == 0x24 &&\n+                vout.scriptPubKey[2] == 0xaa &&\n+                vout.scriptPubKey[3] == 0x21 &&\n+                vout.scriptPubKey[4] == 0xa9 &&\n+                vout.scriptPubKey[5] == 0xed) {\n+                commitpos = o;\n+            }\n+        }\n+    }\n+    return commitpos;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471010900",
      "id" : 471010900,
      "line" : 177,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAxMDkwMA==",
      "original_commit_id" : "3c22f5fcd895c9ea7897c637a254a657a2581410",
      "original_line" : 177,
      "original_position" : 27,
      "original_start_line" : 161,
      "path" : "src/consensus/validation.h",
      "position" : 27,
      "pull_request_review_id" : 467960074,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : 162,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471010900",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471026715"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471026715"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: can be shortened (or make `cidx` const).\r\n```suggestion\r\n    if (GetWitnessCommitmentIndex(block) == NO_WITNESS_COMMITMENT) {\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-15T19:32:03Z",
      "diff_hunk" : "@@ -0,0 +1,151 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    assert(cidx != NO_WITNESS_COMMITMENT);\n+\n+    CScript& script = cb.vout.at(cidx).scriptPubKey;\n+\n+    std::vector<uint8_t> data;\n+    bool bad = false;\n+    if (!ExtractCommitmentSection(script, SIGNET_HEADER, data)) {\n+        bad = true; // no commitment\n+    } else {\n+        try {\n+            VectorReader v(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+            v >> tx_spending.vin[0].scriptSig;\n+            if (!v.empty()) v >> tx_spending.vin[0].scriptWitness.stack;\n+            if (!v.empty()) bad = true;\n+        } catch (const std::exception&) {\n+            bad = true;\n+        }\n+    }\n+    if (bad) {\n+        // treat deserialization problems as not providing any signature and an unspendable input\n+        tx_to_spend.vout[0].scriptPubKey = CScript(OP_RETURN);\n+        tx_spending.vin[0].scriptSig.clear();\n+        tx_spending.vin[0].scriptWitness.stack.clear();\n+    } else {\n+        uint256 signet_merkle = ComputeModifiedMerkleRoot(cb, block);\n+\n+        data.clear();\n+        CVectorWriter writer(SER_NETWORK, INIT_PROTO_VERSION, data, 0);\n+        writer << block.nVersion;\n+        writer << block.hashPrevBlock;\n+        writer << signet_merkle;\n+        writer << block.nTime;\n+        tx_to_spend.vin[0].scriptSig << data;\n+    }\n+    tx_spending.vin[0].prevout = COutPoint(tx_to_spend.GetHash(), 0);\n+\n+    return {tx_to_spend, tx_spending};\n+}\n+\n+// Signet block solution checker\n+bool CheckBlockSolution(const CBlock& block, const Consensus::Params& consensusParams)\n+{\n+    if (block.GetHash() == consensusParams.hashGenesisBlock) {\n+        // genesis block solution is always valid\n+        return true;\n+    }\n+\n+    int cidx = GetWitnessCommitmentIndex(block);\n+    if (cidx == NO_WITNESS_COMMITMENT) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471026715",
      "id" : 471026715,
      "line" : 123,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAyNjcxNQ==",
      "original_commit_id" : "3d1b58f1efd60a44beaeb3ef88ee2a616a8566d4",
      "original_line" : 122,
      "original_position" : 131,
      "original_start_line" : 130,
      "path" : "src/signet.cpp",
      "position" : 123,
      "pull_request_review_id" : 467960074,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : 122,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471026715",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471026891"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471026891"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    const int cidx = GetWitnessCommitmentIndex(block);\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-15T19:34:53Z",
      "diff_hunk" : "@@ -0,0 +1,151 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    CMutableTransaction cb(*block.vtx.at(0));\n+\n+    int cidx = GetWitnessCommitmentIndex(block);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471026891",
      "id" : 471026891,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAyNjg5MQ==",
      "original_commit_id" : "3d1b58f1efd60a44beaeb3ef88ee2a616a8566d4",
      "original_line" : 82,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : null,
      "pull_request_review_id" : 467960074,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471026891",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471182577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471182577"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wanted to do even more (e.g. loop from end and break on first encounter, rather than always going through all of them), but I refrained as I wanted minimal changes. ~~[Edit: I think I'm misremembering something, because this code doesn't do what I said (anymore?)]~~ [Edit 2: your changes actually change the behavior. See the Segwit BIP on witness commitment.] Chicken-egg issue though, as we tend to discourage pure refactors, and we also tend to shy away from changing things unnecessarily in unrelated PRs...",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-17T00:45:12Z",
      "diff_hunk" : "@@ -150,4 +150,30 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+/** Minimum size of a witness commitment structure. Defined in BIP 141. **/\n+static constexpr size_t MINIMUM_WITNESS_COMMITMENT{38};\n+\n+/** Compute at which vout of the given coinbase transaction the witness commitment occurs, or -1 if not found */\n+static inline int GetWitnessCommitmentIndex(const CBlock& block)\n+{\n+    int commitpos = NO_WITNESS_COMMITMENT;\n+    if (!block.vtx.empty()) {\n+        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n+            const CTxOut& vout = block.vtx[0]->vout[o];\n+            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+                vout.scriptPubKey[0] == OP_RETURN &&\n+                vout.scriptPubKey[1] == 0x24 &&\n+                vout.scriptPubKey[2] == 0xaa &&\n+                vout.scriptPubKey[3] == 0x21 &&\n+                vout.scriptPubKey[4] == 0xa9 &&\n+                vout.scriptPubKey[5] == 0xed) {\n+                commitpos = o;\n+            }\n+        }\n+    }\n+    return commitpos;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471182577",
      "id" : 471182577,
      "in_reply_to_id" : 471010900,
      "line" : 177,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4MjU3Nw==",
      "original_commit_id" : "3c22f5fcd895c9ea7897c637a254a657a2581410",
      "original_line" : 177,
      "original_position" : 27,
      "original_start_line" : 161,
      "path" : "src/consensus/validation.h",
      "position" : 27,
      "pull_request_review_id" : 468112966,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : 162,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471182577",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@fjahr Thanks for review! Adapted your bad-replacement with some modifications. I addressed most other things, but kept the cidx stuff as is for now.",
      "created_at" : "2020-08-17T01:02:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-674605860",
      "id" : 674605860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDYwNTg2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-17T01:02:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674605860",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471267630"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471267630"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9d19caf nit: sort ;) or just run clang-format on signet.h/signet.cpp\r\n```diff\r\n #include <consensus/params.h>\r\n-#include <primitives/transaction.h>\r\n #include <primitives/block.h>\r\n+#include <primitives/transaction.h>\r\n #include <uint256.h>\r\n \r\n+#include <array>\r\n #include <cstdint>\r\n #include <vector>\r\n-#include <array>\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-17T06:59:16Z",
      "diff_hunk" : "@@ -0,0 +1,46 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SIGNET_H\n+#define BITCOIN_SIGNET_H\n+\n+#include <consensus/params.h>\n+#include <primitives/transaction.h>\n+#include <primitives/block.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <vector>\n+#include <array>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471267630",
      "id" : 471267630,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI2NzYzMA==",
      "original_commit_id" : "8b83160a74b62cd2d41ab011d8228a2c94c7800e",
      "original_line" : 15,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/signet.h",
      "position" : null,
      "pull_request_review_id" : 468212169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471267630",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471321602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471321602"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6920af6 nit, consistent order\r\n```suggestion\r\n        throw std::runtime_error(\"Invalid combination of -regtest, -signet, -testnet and -chain. Can use at most one.\");\r\n```",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-17T08:27:22Z",
      "diff_hunk" : "@@ -922,16 +923,21 @@ std::string ArgsManager::GetChainName() const\n     };\n \n     const bool fRegTest = get_net(\"-regtest\");\n+    const bool fSigNet  = get_net(\"-signet\");\n     const bool fTestNet = get_net(\"-testnet\");\n     const bool is_chain_arg_set = IsArgSet(\"-chain\");\n \n-    if ((int)is_chain_arg_set + (int)fRegTest + (int)fTestNet > 1) {\n-        throw std::runtime_error(\"Invalid combination of -regtest, -testnet and -chain. Can use at most one.\");\n+    if ((int)is_chain_arg_set + (int)fRegTest + (int)fTestNet + (int)fSigNet > 1) {\n+        throw std::runtime_error(\"Invalid combination of -regtest, -testnet, -signet and -chain. Can use at most one.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471321602",
      "id" : 471321602,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMyMTYwMg==",
      "original_commit_id" : "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "original_line" : 931,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 468265194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471321602",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471324349"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471324349"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6920af6 nit: while here, it would be nice to add brackets to these successive conditionals\r\n\r\nedit: idem in `CreateChainParams`, line 485 ",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-17T08:32:06Z",
      "diff_hunk" : "@@ -39,10 +43,11 @@ std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain\n         return MakeUnique<CBaseChainParams>(\"\", 8332);\n     else if (chain == CBaseChainParams::TESTNET)\n         return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n+    else if (chain == CBaseChainParams::SIGNET)\n+        return MakeUnique<CBaseChainParams>(\"signet\", 38332);\n     else if (chain == CBaseChainParams::REGTEST)\n         return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n-    else\n-        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+    throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471324349",
      "id" : 471324349,
      "line" : 51,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMyNDM0OQ==",
      "original_commit_id" : "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "original_line" : 50,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : 36,
      "pull_request_review_id" : 468265194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471324349",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471325983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471325983"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6920af6 for node operators, perhaps state the accepted format and/or give an example for the seednode and/or blockscript",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-17T08:34:53Z",
      "diff_hunk" : "@@ -23,6 +24,9 @@ void SetupChainParamsBaseOptions(ArgsManager& argsman)\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471325983",
      "id" : 471325983,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMyNTk4Mw==",
      "original_commit_id" : "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "original_line" : 29,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/chainparamsbase.cpp",
      "position" : null,
      "pull_request_review_id" : 468265194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471325983",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471353926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471353926"
         }
      },
      "author_association" : "MEMBER",
      "body" : "When fuzzing the signet code I noticed that the `block.vtx.empty()` isn't handled here. What about handling it by returning invalid, or alternatively asserting that `!block.vtx.empty()`?",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-17T09:26:15Z",
      "diff_hunk" : "@@ -0,0 +1,146 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    CMutableTransaction cb(*block.vtx.at(0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471353926",
      "id" : 471353926,
      "line" : 81,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM1MzkyNg==",
      "original_commit_id" : "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "original_line" : 80,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : 81,
      "pull_request_review_id" : 468305903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471353926",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471363273"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471363273"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good catch! Done. Also added a commit with your fuzzer (under your name).",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-17T09:43:21Z",
      "diff_hunk" : "@@ -0,0 +1,146 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>\n+#include <streams.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+\n+static constexpr uint8_t SIGNET_HEADER[4] = {0xec, 0xc7, 0xda, 0xa2};\n+\n+static constexpr unsigned int BLOCK_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_DERSIG | SCRIPT_VERIFY_NULLDUMMY;\n+\n+static bool ExtractCommitmentSection(CScript& script, const Span<const uint8_t> header, std::vector<uint8_t>& result)\n+{\n+    CScript replacement;\n+    bool found = false;\n+\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    std::vector<uint8_t> pushdata;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (!found && pushdata.size() > (size_t) header.size() && Span<const uint8_t>(pushdata.data(), header.size()) == header) {\n+                // pushdata only counts if it has the header _and_ some data\n+                result.clear();\n+                result.insert(result.end(), pushdata.begin() + header.size(), pushdata.end());\n+                pushdata.erase(pushdata.begin() + header.size(), pushdata.end());\n+                found = true;\n+            }\n+            replacement << pushdata;\n+        } else {\n+            replacement << opcode;\n+        }\n+    }\n+\n+    if (found) script = replacement;\n+    return found;\n+}\n+\n+static uint256 ComputeModifiedMerkleRoot(const CMutableTransaction& cb, const CBlock& block)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    leaves[0] = cb.GetHash();\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n+        leaves[s] = block.vtx[s]->GetHash();\n+    }\n+    return ComputeMerkleRoot(std::move(leaves));\n+}\n+\n+SignetTxs SignetTxs::Create(const CBlock& block, const CScript& challenge)\n+{\n+    CMutableTransaction tx_to_spend;\n+    tx_to_spend.nVersion = 0;\n+    tx_to_spend.nLockTime = 0;\n+    tx_to_spend.vin.emplace_back(COutPoint(), CScript(OP_0), 0);\n+    tx_to_spend.vout.emplace_back(0, challenge);\n+\n+    CMutableTransaction tx_spending;\n+    tx_spending.nVersion = 0;\n+    tx_spending.nLockTime = 0;\n+    tx_spending.vin.emplace_back(COutPoint(), CScript(), 0);\n+    tx_spending.vout.emplace_back(0, CScript(OP_RETURN));\n+\n+    // can't fill any other fields before extracting signet\n+    // responses from block coinbase tx\n+\n+    // find and delete signet signature\n+    CMutableTransaction cb(*block.vtx.at(0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471363273",
      "id" : 471363273,
      "in_reply_to_id" : 471353926,
      "line" : 81,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM2MzI3Mw==",
      "original_commit_id" : "33b2e22d5aeea35714a74ec81cb3233f22d48ca5",
      "original_line" : 80,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/signet.cpp",
      "position" : 81,
      "pull_request_review_id" : 468317445,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T13:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471363273",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack I won't rebase/squash anything until you give me the go ahead.",
      "created_at" : "2020-08-17T09:44:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-674778009",
      "id" : 674778009,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDc3ODAwOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-17T09:44:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674778009",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kallewoof Thanks, good for now. My only substantive feedback at this point would be to make the commits hygienic by merging the unit test changes into the commits that require them, as the commits starting from 6920af6 fail the unit tests until the last commit. Functional tests to sanity check the conf options handling would be good as well; I'll propose a commit later today.\r\n\r\nEdit: thanks for the updates, LGTM.",
      "created_at" : "2020-08-17T09:50:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#issuecomment-674781195",
      "id" : 674781195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDc4MTE5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-17T09:55:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674781195",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471632336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471632336"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in ad33fd5b5f74bb8ff56ffe901f5a1825e73ecf44\r\n\r\nnit: The help info on the args could be updated to reflect the defaults to the global signet. Right now it's not obvious that blockscript and seednode are optional.",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-17T17:16:41Z",
      "diff_hunk" : "@@ -265,19 +265,25 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n-        if (blockscript.size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471632336",
      "id" : 471632336,
      "line" : 269,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYzMjMzNg==",
      "original_commit_id" : "ad33fd5b5f74bb8ff56ffe901f5a1825e73ecf44",
      "original_line" : 269,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 41,
      "pull_request_review_id" : 468668921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T17:20:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471632336",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471636977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471636977"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Otherwise all the changes look good to me!",
      "commit_id" : "10f978508aac4f7cb9fbed32d25a1458df0b2fee",
      "created_at" : "2020-08-17T17:20:30Z",
      "diff_hunk" : "@@ -265,19 +265,25 @@ class SigNetParams : public CChainParams {\n         vSeeds.clear();\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        const auto blockscript = args.GetArgs(\"-signet_blockscript\");\n-        if (blockscript.size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18267#discussion_r471636977",
      "id" : 471636977,
      "in_reply_to_id" : 471632336,
      "line" : 269,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYzNjk3Nw==",
      "original_commit_id" : "ad33fd5b5f74bb8ff56ffe901f5a1825e73ecf44",
      "original_line" : 269,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 41,
      "pull_request_review_id" : 468671620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-17T17:20:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471636977",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   }
]
