[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18279#discussion_r388951184"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388951184"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't this whole scope happen under the cs_wallet lock?\r\n\r\nAlso, shouldn't `m_chain_notifications_handler.reset()` happen inside here under the wallet lock?\r\n\r\nOtherwise a new block could come in and put new notifications in the handler while we reset it.",
      "commit_id" : "a6b1e3e607bcb87ac31eb0a56c69252820f3269b",
      "created_at" : "2020-03-06T14:58:58Z",
      "diff_hunk" : "@@ -1156,8 +1156,11 @@ void CWallet::BlockUntilSyncedToCurrentChain() {\n     // ::ChainActive().Tip(), otherwise put a callback in the validation interface queue and wait\n     // for the queue to drain enough to execute it (indicating we are caught up\n     // at least with the time we entered this function).\n-    uint256 last_block_hash = WITH_LOCK(cs_wallet, return m_last_block_processed);\n-    chain().waitForNotificationsIfTipChanged(last_block_hash);\n+    bool tipIsSame = false;\n+    do {\n+        uint256 last_block_hash = WITH_LOCK(cs_wallet, return m_last_block_processed);\n+        tipIsSame = chain().waitForNotificationsIfTipIsNotSame(last_block_hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18279#discussion_r388951184",
      "id" : 388951184,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk1MTE4NA==",
      "original_commit_id" : "ddcc4b23b18f00e33a9f6916553d0eae6a69a1b3",
      "original_position" : 19,
      "path" : "src/wallet/wallet.cpp",
      "position" : 19,
      "pull_request_review_id" : 370384387,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18279",
      "updated_at" : "2020-03-06T16:35:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388951184",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think this is the wrong approach.",
      "created_at" : "2020-03-06T15:00:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18279#issuecomment-595806717",
      "id" : 595806717,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18279",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NTgwNjcxNw==",
      "updated_at" : "2020-03-06T15:00:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595806717",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18279#discussion_r388957652"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18279"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388957652"
         }
      },
      "author_association" : "NONE",
      "body" : "> Shouldn't this whole scope happen under the cs_wallet lock?\r\n\r\nNo, we leave mutex for process thread to finish.\r\n> Also, shouldn't m_chain_notifications_handler.reset() happen inside here under the wallet lock?\r\n\r\nNo.\r\n> Otherwise a new block could come in and put new notifications in the handler while we reset it.\r\n\r\nI'm aware of that, we can have a function that takes a mutex and reset notifications",
      "commit_id" : "a6b1e3e607bcb87ac31eb0a56c69252820f3269b",
      "created_at" : "2020-03-06T15:10:19Z",
      "diff_hunk" : "@@ -1156,8 +1156,11 @@ void CWallet::BlockUntilSyncedToCurrentChain() {\n     // ::ChainActive().Tip(), otherwise put a callback in the validation interface queue and wait\n     // for the queue to drain enough to execute it (indicating we are caught up\n     // at least with the time we entered this function).\n-    uint256 last_block_hash = WITH_LOCK(cs_wallet, return m_last_block_processed);\n-    chain().waitForNotificationsIfTipChanged(last_block_hash);\n+    bool tipIsSame = false;\n+    do {\n+        uint256 last_block_hash = WITH_LOCK(cs_wallet, return m_last_block_processed);\n+        tipIsSame = chain().waitForNotificationsIfTipIsNotSame(last_block_hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18279#discussion_r388957652",
      "id" : 388957652,
      "in_reply_to_id" : 388951184,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk1NzY1Mg==",
      "original_commit_id" : "ddcc4b23b18f00e33a9f6916553d0eae6a69a1b3",
      "original_position" : 19,
      "path" : "src/wallet/wallet.cpp",
      "position" : 19,
      "pull_request_review_id" : 370392864,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18279",
      "updated_at" : "2020-03-06T16:35:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388957652",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> I think this is the wrong approach.\r\n\r\nThat's at least ensure sync between wallet and chain tips otherwise all calls to `BlockUntilSyncedToCurrentChain` are just pointless, they don't do what is supposed to do. Your patch looks fine but not what we want when calls a function like `BlockUntilSyncedToCurrentChain`",
      "created_at" : "2020-03-06T15:16:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18279#issuecomment-595813866",
      "id" : 595813866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18279",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NTgxMzg2Ng==",
      "updated_at" : "2020-03-06T15:17:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595813866",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #10102 ([experimental] Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-03-07T02:45:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18279#issuecomment-596037468",
      "id" : 596037468,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18279",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NjAzNzQ2OA==",
      "updated_at" : "2020-03-07T02:45:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596037468",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@promag the problem is not the queued connection / disconnection, actually \r\n```\r\nvoid UnregisterValidationInterface(CValidationInterface* pwalletIn) {\r\n    if (g_signals.m_internals) {\r\n        g_signals.m_internals->m_connMainSignals.erase(pwalletIn);\r\n    }\r\n}\r\n```\r\nsignal is received before disconnect is called by erasing the caller.\r\n\r\nFix unit test and rebase.",
      "created_at" : "2020-03-07T09:22:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18279#issuecomment-596066452",
      "id" : 596066452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18279",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NjA2NjQ1Mg==",
      "updated_at" : "2020-03-07T09:22:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596066452",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   }
]
