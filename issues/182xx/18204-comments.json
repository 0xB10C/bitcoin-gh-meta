[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18163 (descriptors: Use xpub at last hardened step if possible by achow101)\n* #16710 (build: Enable -Wsuggest-override if available by hebasto)\n* #16463 ([BIP 174] Implement serialization support for GLOBAL_XPUB field. by achow101)\n* #16116 (Avoid unnecessary signing provider copies on descriptor expansion by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-02-25T02:20:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-590647940",
      "id" : 590647940,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MDY0Nzk0MA==",
      "updated_at" : "2020-02-25T22:27:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590647940",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383778842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383778842"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`global_pos` and `internal_pos` could use documentation. Would it make sense to cache all pubkeys (for a given position) in one operation?",
      "commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "created_at" : "2020-02-25T10:08:02Z",
      "diff_hunk" : "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;\n+    std::vector<std::vector<CPubKey>> m_pubkey_cache;\n+\n+public:\n+    DescriptorCache() : m_pos_begin(0) {}\n+    DescriptorCache(int begin_pos) : m_pos_begin(begin_pos) {}\n+    bool CachePubKey(unsigned int cache_pos, const CPubKey& pubkey);\n+    bool GetCachedPubKey(unsigned int global_pos, unsigned int internal_pos, CPubKey& pubkey) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383778842",
      "id" : 383778842,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3ODg0Mg==",
      "original_commit_id" : "13b526665646f5c3593fed996df4eabbfb64f7b4",
      "original_position" : 14,
      "path" : "src/script/descriptor.h",
      "position" : null,
      "pull_request_review_id" : 364014093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-26T01:14:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383778842",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383891841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383891841"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: it's named `global_pos` in the definition which lines up with `GetCachedPubKey`",
      "commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "created_at" : "2020-02-25T13:54:47Z",
      "diff_hunk" : "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;\n+    std::vector<std::vector<CPubKey>> m_pubkey_cache;\n+\n+public:\n+    DescriptorCache() : m_pos_begin(0) {}\n+    DescriptorCache(int begin_pos) : m_pos_begin(begin_pos) {}\n+    bool CachePubKey(unsigned int cache_pos, const CPubKey& pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383891841",
      "id" : 383891841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5MTg0MQ==",
      "original_commit_id" : "13b526665646f5c3593fed996df4eabbfb64f7b4",
      "original_position" : 13,
      "path" : "src/script/descriptor.h",
      "position" : null,
      "pull_request_review_id" : 364156739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-26T01:14:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383891841",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383892053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383892053"
         }
      },
      "author_association" : "MEMBER",
      "body" : "this needs a description as well",
      "commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "created_at" : "2020-02-25T13:55:10Z",
      "diff_hunk" : "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383892053",
      "id" : 383892053,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5MjA1Mw==",
      "original_commit_id" : "13b526665646f5c3593fed996df4eabbfb64f7b4",
      "original_position" : 7,
      "path" : "src/script/descriptor.h",
      "position" : null,
      "pull_request_review_id" : 364156739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-26T01:14:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383892053",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the assertion. Travis seems to be seeing a memory leak but I'm having trouble figuring out where that is.",
      "created_at" : "2020-02-25T20:10:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-591045213",
      "id" : 591045213,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MTA0NTIxMw==",
      "updated_at" : "2020-02-25T20:10:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591045213",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've reworked how the caching works to get rid of the `global_pos` and `internal_pos` stuff.\r\n\r\nInstead of having `ExpandHelper` go through the cache and find the pubkeys, we pass the cache into the `PubkeyProvider`s and let them do the cache lookups. Since really only `BIP32PubkeyProvider` uses the cache, we can get rid of the position stuff by having it store only xpubs in a map. So for all derived keys, we store their `KeyOriginInfo` and xpub so that later the `BIP32PubkeyProvider` can look them up. The last parent is still being stored so that additional derivation can occur.\r\n\r\nThis consolidates cache reads and writes and encapsulates them in the classes that actually use the cache.",
      "created_at" : "2020-02-26T01:17:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-591184682",
      "id" : 591184682,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MTE4NDY4Mg==",
      "updated_at" : "2020-02-26T01:17:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591184682",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384534021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384534021"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We should compare path elements first (`max(a.path.size(), b.path.size())`) and size after.\r\n\r\nSince `std::map<KeyOriginInfo, CExtPubKey> m_xpubs` is serialised, I'd prefer to tidy up the ordering. Whether this matters depends on how you rebase https://github.com/bitcoin/bitcoin/pull/16528/commits/35bb585b28e5de43553bfd52d2257db9400199be, if it remains a blob or becomes multiple entries keyed by origin.",
      "commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "created_at" : "2020-02-26T14:40:50Z",
      "diff_hunk" : "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384534021",
      "id" : 384534021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNDAyMQ==",
      "original_commit_id" : "6df2a7a0e1ff5baa4a174e393abfcd27fe2967b9",
      "original_position" : 10,
      "path" : "src/script/keyorigin.h",
      "position" : 10,
      "pull_request_review_id" : 364952572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-26T15:49:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384534021",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384554045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384554045"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: maybe rename `spks_cached1` to `spks1_from_cache`",
      "commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "created_at" : "2020-02-26T15:09:57Z",
      "diff_hunk" : "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384554045",
      "id" : 384554045,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NDA0NQ==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 32,
      "path" : "src/test/descriptor_tests.cpp",
      "position" : 32,
      "pull_request_review_id" : 364952572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-26T15:49:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384554045",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384555695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384555695"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`but use the cache generated while expanding i. This cache won't have the pubkeys for i + 1, but`",
      "commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "created_at" : "2020-02-26T15:12:26Z",
      "diff_hunk" : "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;\n+                BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i + 1, key_provider, spks1, script_provider1, nullptr));\n+\n+                // Try again but use the old cache. The old cache won't have the pubkeys, but will have the parent xpub for derivation.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384555695",
      "id" : 384555695,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NTY5NQ==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 35,
      "path" : "src/test/descriptor_tests.cpp",
      "position" : 35,
      "pull_request_review_id" : 364952572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-26T15:49:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384555695",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384560821"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384560821"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`xpub or xpriv`, unless you neuter it at the end and have it return a `CExtPubKey&`",
      "commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "created_at" : "2020-02-26T15:19:36Z",
      "diff_hunk" : "@@ -262,6 +262,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xpub",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384560821",
      "id" : 384560821,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2MDgyMQ==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 34,
      "path" : "src/script/descriptor.cpp",
      "position" : 34,
      "pull_request_review_id" : 364952572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-26T15:49:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384560821",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384579514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384579514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is it worth skipping the parent `write` once it's done?",
      "commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "created_at" : "2020-02-26T15:45:35Z",
      "diff_hunk" : "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+            }\n+            *key = extkey.pubkey;\n+            if (write_cache && !read_cache) {\n+                if (!write_cache->CacheExtPubKey(info_out, extkey)) return false;\n+                // Only cache parent if there is any unhardened derivation\n+                if (m_derive == DeriveType::UNHARDENED && !write_cache->CacheExtPubKey(parent_info, parent)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384579514",
      "id" : 384579514,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3OTUxNA==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 100,
      "path" : "src/script/descriptor.cpp",
      "position" : 100,
      "pull_request_review_id" : 364952572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-26T15:49:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384579514",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
