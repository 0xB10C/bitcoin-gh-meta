[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #16710 (build: Enable -Wsuggest-override if available by hebasto)\n* #16463 ([BIP 174] Implement serialization support for GLOBAL_XPUB field. by achow101)\n* #16116 (Avoid unnecessary signing provider copies on descriptor expansion by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-02-25T02:20:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-590647940",
      "id" : 590647940,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MDY0Nzk0MA==",
      "updated_at" : "2020-02-26T19:45:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590647940",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383778842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383778842"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`global_pos` and `internal_pos` could use documentation. Would it make sense to cache all pubkeys (for a given position) in one operation?",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-25T10:08:02Z",
      "diff_hunk" : "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;\n+    std::vector<std::vector<CPubKey>> m_pubkey_cache;\n+\n+public:\n+    DescriptorCache() : m_pos_begin(0) {}\n+    DescriptorCache(int begin_pos) : m_pos_begin(begin_pos) {}\n+    bool CachePubKey(unsigned int cache_pos, const CPubKey& pubkey);\n+    bool GetCachedPubKey(unsigned int global_pos, unsigned int internal_pos, CPubKey& pubkey) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383778842",
      "id" : 383778842,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3ODg0Mg==",
      "original_commit_id" : "13b526665646f5c3593fed996df4eabbfb64f7b4",
      "original_position" : 14,
      "path" : "src/script/descriptor.h",
      "position" : null,
      "pull_request_review_id" : 364014093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383778842",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383891841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383891841"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: it's named `global_pos` in the definition which lines up with `GetCachedPubKey`",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-25T13:54:47Z",
      "diff_hunk" : "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;\n+    std::vector<std::vector<CPubKey>> m_pubkey_cache;\n+\n+public:\n+    DescriptorCache() : m_pos_begin(0) {}\n+    DescriptorCache(int begin_pos) : m_pos_begin(begin_pos) {}\n+    bool CachePubKey(unsigned int cache_pos, const CPubKey& pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383891841",
      "id" : 383891841,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5MTg0MQ==",
      "original_commit_id" : "13b526665646f5c3593fed996df4eabbfb64f7b4",
      "original_position" : 13,
      "path" : "src/script/descriptor.h",
      "position" : null,
      "pull_request_review_id" : 364156739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383891841",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383892053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383892053"
         }
      },
      "author_association" : "MEMBER",
      "body" : "this needs a description as well",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-25T13:55:10Z",
      "diff_hunk" : "@@ -13,6 +13,18 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    unsigned int m_pos_begin;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r383892053",
      "id" : 383892053,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5MjA1Mw==",
      "original_commit_id" : "13b526665646f5c3593fed996df4eabbfb64f7b4",
      "original_position" : 7,
      "path" : "src/script/descriptor.h",
      "position" : null,
      "pull_request_review_id" : 364156739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383892053",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the assertion. Travis seems to be seeing a memory leak but I'm having trouble figuring out where that is.",
      "created_at" : "2020-02-25T20:10:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-591045213",
      "id" : 591045213,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MTA0NTIxMw==",
      "updated_at" : "2020-02-25T20:10:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591045213",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've reworked how the caching works to get rid of the `global_pos` and `internal_pos` stuff.\r\n\r\nInstead of having `ExpandHelper` go through the cache and find the pubkeys, we pass the cache into the `PubkeyProvider`s and let them do the cache lookups. Since really only `BIP32PubkeyProvider` uses the cache, we can get rid of the position stuff by having it store only xpubs in a map. So for all derived keys, we store their `KeyOriginInfo` and xpub so that later the `BIP32PubkeyProvider` can look them up. The last parent is still being stored so that additional derivation can occur.\r\n\r\nThis consolidates cache reads and writes and encapsulates them in the classes that actually use the cache.",
      "created_at" : "2020-02-26T01:17:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-591184682",
      "id" : 591184682,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MTE4NDY4Mg==",
      "updated_at" : "2020-02-26T01:17:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591184682",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384534021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384534021"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We should compare path elements first (`max(a.path.size(), b.path.size())`) and size after.\r\n\r\nSince `std::map<KeyOriginInfo, CExtPubKey> m_xpubs` is serialised, I'd prefer to tidy up the ordering. Whether this matters depends on how you rebase https://github.com/bitcoin/bitcoin/pull/16528/commits/35bb585b28e5de43553bfd52d2257db9400199be, if it remains a blob or becomes multiple entries keyed by origin.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T14:40:50Z",
      "diff_hunk" : "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384534021",
      "id" : 384534021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNDAyMQ==",
      "original_commit_id" : "6df2a7a0e1ff5baa4a174e393abfcd27fe2967b9",
      "original_position" : 10,
      "path" : "src/script/keyorigin.h",
      "position" : null,
      "pull_request_review_id" : 364952572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384534021",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384554045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384554045"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: maybe rename `spks_cached1` to `spks1_from_cache`",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T15:09:57Z",
      "diff_hunk" : "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384554045",
      "id" : 384554045,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NDA0NQ==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 32,
      "path" : "src/test/descriptor_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 364952572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384554045",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384555695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384555695"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`but use the cache generated while expanding i. This cache won't have the pubkeys for i + 1, but`",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T15:12:26Z",
      "diff_hunk" : "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;\n+                BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i + 1, key_provider, spks1, script_provider1, nullptr));\n+\n+                // Try again but use the old cache. The old cache won't have the pubkeys, but will have the parent xpub for derivation.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384555695",
      "id" : 384555695,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1NTY5NQ==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 35,
      "path" : "src/test/descriptor_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 364952572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384555695",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384560821"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384560821"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`xpub or xpriv`, unless you neuter it at the end and have it return a `CExtPubKey&`",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T15:19:36Z",
      "diff_hunk" : "@@ -262,6 +262,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xpub",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384560821",
      "id" : 384560821,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2MDgyMQ==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 34,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 364952572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384560821",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384579514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384579514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is it worth skipping the parent `write` once it's done?",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T15:45:35Z",
      "diff_hunk" : "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+            }\n+            *key = extkey.pubkey;\n+            if (write_cache && !read_cache) {\n+                if (!write_cache->CacheExtPubKey(info_out, extkey)) return false;\n+                // Only cache parent if there is any unhardened derivation\n+                if (m_derive == DeriveType::UNHARDENED && !write_cache->CacheExtPubKey(parent_info, parent)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384579514",
      "id" : 384579514,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3OTUxNA==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 100,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 364952572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384579514",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384655169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384655169"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A lookup is just as expensive as an insertion, so I don't think so.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T17:41:37Z",
      "diff_hunk" : "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+            }\n+            *key = extkey.pubkey;\n+            if (write_cache && !read_cache) {\n+                if (!write_cache->CacheExtPubKey(info_out, extkey)) return false;\n+                // Only cache parent if there is any unhardened derivation\n+                if (m_derive == DeriveType::UNHARDENED && !write_cache->CacheExtPubKey(parent_info, parent)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384655169",
      "id" : 384655169,
      "in_reply_to_id" : 384579514,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY1NTE2OQ==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 100,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365105969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384655169",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663400"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663400"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T17:56:20Z",
      "diff_hunk" : "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663400",
      "id" : 384663400,
      "in_reply_to_id" : 384534021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzQwMA==",
      "original_commit_id" : "6df2a7a0e1ff5baa4a174e393abfcd27fe2967b9",
      "original_position" : 10,
      "path" : "src/script/keyorigin.h",
      "position" : null,
      "pull_request_review_id" : 365116244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663400",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663446"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T17:56:24Z",
      "diff_hunk" : "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663446",
      "id" : 384663446,
      "in_reply_to_id" : 384554045,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzQ0Ng==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 32,
      "path" : "src/test/descriptor_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 365116296,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663446",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663507"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T17:56:31Z",
      "diff_hunk" : "@@ -135,19 +136,34 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // Evaluate the descriptor selected by `t` in poisition `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n-            std::vector<unsigned char> cache;\n-            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &cache));\n+            DescriptorCache desc_cache;\n+            BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i, key_provider, spks, script_provider, &desc_cache));\n \n             // Compare the output with the expected result.\n             BOOST_CHECK_EQUAL(spks.size(), ref.size());\n \n             // Try to expand again using cached data, and compare.\n-            BOOST_CHECK(parse_pub->ExpandFromCache(i, cache, spks_cached, script_provider_cached));\n+            BOOST_CHECK(parse_pub->ExpandFromCache(i, desc_cache, spks_cached, script_provider_cached));\n             BOOST_CHECK(spks == spks_cached);\n             BOOST_CHECK(script_provider.pubkeys == script_provider_cached.pubkeys);\n             BOOST_CHECK(script_provider.scripts == script_provider_cached.scripts);\n             BOOST_CHECK(script_provider.origins == script_provider_cached.origins);\n \n+            // Make sure we can expand using cached xpubs for unhardened derivation\n+            if (!(flags & DERIVE_HARDENED)) {\n+                // Evaluate the descriptor at i + 1\n+                FlatSigningProvider script_provider1, script_provider_cached1;\n+                std::vector<CScript> spks1, spks_cached1;\n+                BOOST_CHECK((t ? parse_priv : parse_pub)->Expand(i + 1, key_provider, spks1, script_provider1, nullptr));\n+\n+                // Try again but use the old cache. The old cache won't have the pubkeys, but will have the parent xpub for derivation.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663507",
      "id" : 384663507,
      "in_reply_to_id" : 384555695,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzUwNw==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 35,
      "path" : "src/test/descriptor_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 365116377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663507",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed to xprv",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T17:56:41Z",
      "diff_hunk" : "@@ -262,6 +262,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xpub",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384663587",
      "id" : 384663587,
      "in_reply_to_id" : 384560821,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MzU4Nw==",
      "original_commit_id" : "a544f0e7459f346a1bf129c9dc978fe46c6abf73",
      "original_position" : 34,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365116491,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384663587",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've squashed the middle three commits together (the ones that just changed to using DescriptorCache) so that the signature of `Expand` and `ExpandHelper` don't change so many times.\r\n\r\n> Switching from pubkeys to xpubs plus origin info increases the cache size by ~40 bytes per key, or 240 KB for a typical descriptor wallet with change & receive for three output types, with the first 1000 keys expanded. That's probably acceptable, though maybe the serialization could be optimized to leave out the chain code for \"leaf\" keys (meh, complexity).\r\n\r\nWe could do what I did originally and have a pubkey cache, but I felt that to be unnecessary. We would still be storing `KeyOriginInfo`.\r\n\r\n> This could be a good time to rename `m_derive` to `m_range_derive` to make it clear that this refers to whether a given (final?) path element is (hardened) ranged or not.\r\n\r\nWhy? I find it to be clear.",
      "created_at" : "2020-02-26T17:59:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-591559861",
      "id" : 591559861,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MTU1OTg2MQ==",
      "updated_at" : "2020-02-26T17:59:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591559861",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384811070"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384811070"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can be removed.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T22:39:04Z",
      "diff_hunk" : "@@ -18,6 +18,22 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        unsigned int min = std::min(a.path.size(), b.path.size());\n+        for (unsigned int i = 0; i < min; ++i) {\n+            if (a.path.at(i) < b.path.at(i)) return true;\n+            if (a.path.at(i) > b.path.at(i)) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;\n+        if (a.path.size() > b.path.size()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384811070",
      "id" : 384811070,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMTA3MA==",
      "original_commit_id" : "08186b12cec164a7f056ffff2397a78103ebe6a7",
      "original_position" : 16,
      "path" : "src/script/keyorigin.h",
      "position" : null,
      "pull_request_review_id" : 365297033,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384811070",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384812839"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384812839"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Will this return false in a follow up change?",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-26T22:43:17Z",
      "diff_hunk" : "@@ -13,6 +13,15 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;\n+\n+public:\n+    bool CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384812839",
      "id" : 384812839,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMjgzOQ==",
      "original_commit_id" : "08186b12cec164a7f056ffff2397a78103ebe6a7",
      "original_position" : 10,
      "path" : "src/script/descriptor.h",
      "position" : null,
      "pull_request_review_id" : 365297033,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384812839",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384875316"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875316"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T02:05:12Z",
      "diff_hunk" : "@@ -18,6 +18,22 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {\n+            if (a.fingerprint[i] < b.fingerprint[i]) return true;\n+            if (a.fingerprint[i] > b.fingerprint[i]) return false;\n+        }\n+        unsigned int min = std::min(a.path.size(), b.path.size());\n+        for (unsigned int i = 0; i < min; ++i) {\n+            if (a.path.at(i) < b.path.at(i)) return true;\n+            if (a.path.at(i) > b.path.at(i)) return false;\n+        }\n+        if (a.path.size() < b.path.size()) return true;\n+        if (a.path.size() > b.path.size()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384875316",
      "id" : 384875316,
      "in_reply_to_id" : 384811070,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg3NTMxNg==",
      "original_commit_id" : "08186b12cec164a7f056ffff2397a78103ebe6a7",
      "original_position" : 16,
      "path" : "src/script/keyorigin.h",
      "position" : null,
      "pull_request_review_id" : 365371087,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875316",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384875354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875354"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No. I've made it `void`",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T02:05:20Z",
      "diff_hunk" : "@@ -13,6 +13,15 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;\n+\n+public:\n+    bool CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384875354",
      "id" : 384875354,
      "in_reply_to_id" : 384812839,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg3NTM1NA==",
      "original_commit_id" : "08186b12cec164a7f056ffff2397a78103ebe6a7",
      "original_position" : 10,
      "path" : "src/script/descriptor.h",
      "position" : null,
      "pull_request_review_id" : 365371134,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384875354",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384987867"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384987867"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Does it make sense to `assert(m_xpubs.count(origin_info) == 0)`?",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T08:57:05Z",
      "diff_hunk" : "@@ -1050,3 +1061,16 @@ std::unique_ptr<Descriptor> InferDescriptor(const CScript& script, const Signing\n {\n     return InferScript(script, ParseScriptContext::TOP, provider);\n }\n+\n+void DescriptorCache::CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub)\n+{\n+    m_xpubs[origin_info] = xpub;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384987867",
      "id" : 384987867,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk4Nzg2Nw==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 190,
      "path" : "src/script/descriptor.cpp",
      "position" : 221,
      "pull_request_review_id" : 365505343,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384987867",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385114549"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385114549"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not at the moment: https://github.com/bitcoin/bitcoin/pull/18204#discussion_r384655169",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T13:08:52Z",
      "diff_hunk" : "@@ -1050,3 +1061,16 @@ std::unique_ptr<Descriptor> InferDescriptor(const CScript& script, const Signing\n {\n     return InferScript(script, ParseScriptContext::TOP, provider);\n }\n+\n+void DescriptorCache::CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub)\n+{\n+    m_xpubs[origin_info] = xpub;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385114549",
      "id" : 385114549,
      "in_reply_to_id" : 384987867,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExNDU0OQ==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 190,
      "path" : "src/script/descriptor.cpp",
      "position" : 221,
      "pull_request_review_id" : 365665103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385114549",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385131791"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385131791"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This `CExtPubKey` juggling still confuses me :-)\r\n\r\nI added some comments for my own sanity. Will probably need to read this again later.\r\n\r\n```\r\nCExtPubKey extkey_out = m_extkey;    // to hold extended key for *key (m/.../k)\r\nCExtPubKey extkey_parent = m_extkey; // to hold extended key for the parent of *key (m/.../k/pos)\r\n```\r\n",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T13:41:22Z",
      "diff_hunk" : "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385131791",
      "id" : 385131791,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzMTc5MQ==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 67,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365687424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385131791",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385134499"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385134499"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n// Check if m/.../k/pos` is cached (only the case for unranged descriptors)\r\n```",
      "commit_id" : "31cd94008a9ed8ded99ca6d44b736d8a9da7b1f2",
      "created_at" : "2020-02-27T13:46:09Z",
      "diff_hunk" : "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385134499",
      "id" : 385134499,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNDQ5OQ==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 68,
      "path" : "src/script/descriptor.cpp",
      "position" : 73,
      "pull_request_review_id" : 365687424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-27T18:25:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385134499",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385134821"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385134821"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n// Check if the parent at m/.../k is cached\r\n```",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T13:46:43Z",
      "diff_hunk" : "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385134821",
      "id" : 385134821,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNDgyMQ==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 71,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365687424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385134821",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385135647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385135647"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n// Get the extended private key at m/.../k\r\n```",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T13:48:10Z",
      "diff_hunk" : "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385135647",
      "id" : 385135647,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNTY0Nw==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 77,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365687424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385135647",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385137236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385137236"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n// Get the extended public key at m/.../k/i or m/.../k/i'\r\n```",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T13:50:53Z",
      "diff_hunk" : "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385137236",
      "id" : 385137236,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNzIzNg==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 79,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365687424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385137236",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385139315"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385139315"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(one line up)\r\n```\r\n// Set parent to the extended public key at m/.../k\r\n```",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T13:54:23Z",
      "diff_hunk" : "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385139315",
      "id" : 385139315,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzOTMxNQ==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 88,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365687424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385139315",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385140390"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385140390"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(above)\r\n```\r\n// If this is not a ranged descriptor, we return the public key at `m/.../k`, otherwise at `m/.../k/i\r\n```",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T13:56:18Z",
      "diff_hunk" : "@@ -275,29 +285,49 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n+                if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n+                extkey = xprv.Neuter();\n             } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385140390",
      "id" : 385140390,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE0MDM5MA==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 91,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365687424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385140390",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385142659"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385142659"
         }
      },
      "author_association" : "MEMBER",
      "body" : "much clearer now :+1: ",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T14:00:07Z",
      "diff_hunk" : "@@ -13,6 +13,15 @@\n \n #include <vector>\n \n+// Cache for pre-computed descriptor things\n+class DescriptorCache {\n+private:\n+    std::map<KeyOriginInfo, CExtPubKey> m_xpubs;\n+\n+public:\n+    void CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub);\n+    bool GetCachedExtPubKey(const KeyOriginInfo& origin_info, CExtPubKey& xpub) const;\n+};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385142659",
      "id" : 385142659,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE0MjY1OQ==",
      "original_commit_id" : "0837211a3868151bb6f2ae2730850c7ecd9bdd15",
      "original_position" : 12,
      "path" : "src/script/descriptor.h",
      "position" : null,
      "pull_request_review_id" : 365701767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385142659",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385154331"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385154331"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I made this complaint long ago but I'd really prefer some constant for `4` being littered everywhere.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T14:18:43Z",
      "diff_hunk" : "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        for (int i = 0; i < 4; ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385154331",
      "id" : 385154331,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1NDMzMQ==",
      "original_commit_id" : "0837211a3868151bb6f2ae2730850c7ecd9bdd15",
      "original_position" : 6,
      "path" : "src/script/keyorigin.h",
      "position" : 6,
      "pull_request_review_id" : 365701767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385154331",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385155902"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385155902"
         }
      },
      "author_association" : "MEMBER",
      "body" : "future work: Noticed there are no unit tests for `KeyOriginInfo`, would be nice to have",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T14:21:08Z",
      "diff_hunk" : "@@ -18,6 +18,21 @@ struct KeyOriginInfo\n         return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n     }\n \n+    friend bool operator<(const KeyOriginInfo& a, const KeyOriginInfo& b)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385155902",
      "id" : 385155902,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1NTkwMg==",
      "original_commit_id" : "0837211a3868151bb6f2ae2730850c7ecd9bdd15",
      "original_position" : 4,
      "path" : "src/script/keyorigin.h",
      "position" : 4,
      "pull_request_review_id" : 365701767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385155902",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385161281"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385161281"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A few words on the new optional args?",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T14:29:12Z",
      "diff_hunk" : "@@ -153,7 +153,7 @@ struct PubkeyProvider\n     virtual ~PubkeyProvider() = default;\n \n     /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385161281",
      "id" : 385161281,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2MTI4MQ==",
      "original_commit_id" : "db007ea44f90befcad8fe0b3d089c273deecc89c",
      "original_position" : 5,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365701767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385161281",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385180274"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385180274"
         }
      },
      "author_association" : "MEMBER",
      "body" : "any? The whole path has to be unhardened right?",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T15:20:43Z",
      "diff_hunk" : "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385180274",
      "id" : 385180274,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4MDI3NA==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 44,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365701767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385180274",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Unable to \"review\" at the moment due to github issues, but https://github.com/bitcoin/bitcoin/pull/18204/commits/d90075e586b2a4b1fbc1c511d662c0b918023595 looks logically correct (will swing back here when back up and drop comments)",
      "created_at" : "2020-02-27T17:31:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592081988",
      "id" : 592081988,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MjA4MTk4OA==",
      "updated_at" : "2020-02-27T17:31:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592081988",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385287770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385287770"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just the last range step. The range derivation type has to be unhardened or none. This means it either ends with `*` or with an absolute path. There can be hardened steps in between, and even have the last step be hardened if it is not a range.\r\n\r\nThis thing about a non-ranged path is kind of a hack to make sure that we cache the pubkey for descriptors that have keys like `xprv../1'`. We have some examples of this in the tests.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T18:21:21Z",
      "diff_hunk" : "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385287770",
      "id" : 385287770,
      "in_reply_to_id" : 385180274,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4Nzc3MA==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 44,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365891599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385287770",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385290029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385290029"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added some comments.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T18:25:30Z",
      "diff_hunk" : "@@ -153,7 +153,7 @@ struct PubkeyProvider\n     virtual ~PubkeyProvider() = default;\n \n     /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385290029",
      "id" : 385290029,
      "in_reply_to_id" : 385161281,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5MDAyOQ==",
      "original_commit_id" : "db007ea44f90befcad8fe0b3d089c273deecc89c",
      "original_position" : 5,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365894431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385290029",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Can you move 568a90f and 23aef19 from #16528 to here? 568a90f could use a test to show that nothing is added to cache.\r\n\r\nDone. Also squashed a bit and added tests.",
      "created_at" : "2020-02-27T18:26:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592107250",
      "id" : 592107250,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MjEwNzI1MA==",
      "updated_at" : "2020-02-27T18:26:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592107250",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385292764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385292764"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Performance penalty aside, makes sense to assert it's the same xpub if already cached?",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T18:30:33Z",
      "diff_hunk" : "@@ -1050,3 +1061,16 @@ std::unique_ptr<Descriptor> InferDescriptor(const CScript& script, const Signing\n {\n     return InferScript(script, ParseScriptContext::TOP, provider);\n }\n+\n+void DescriptorCache::CacheExtPubKey(const KeyOriginInfo& origin_info, const CExtPubKey& xpub)\n+{\n+    m_xpubs[origin_info] = xpub;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385292764",
      "id" : 385292764,
      "in_reply_to_id" : 384987867,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5Mjc2NA==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 190,
      "path" : "src/script/descriptor.cpp",
      "position" : 221,
      "pull_request_review_id" : 365897948,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385292764",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385299363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385299363"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just to clarify, there's no test for this AFAIK, but `xpriv/../*/...` isn't allowed, right?",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T18:42:54Z",
      "diff_hunk" : "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385299363",
      "id" : 385299363,
      "in_reply_to_id" : 385180274,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5OTM2Mw==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 44,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365906201,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385299363",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385308764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385308764"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I see, so we don't do any intermediate caching if we can always generate from \"root\" anyways with pubkey.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T19:00:07Z",
      "diff_hunk" : "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385308764",
      "id" : 385308764,
      "in_reply_to_id" : 385180274,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwODc2NA==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 44,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365918191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385308764",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385311318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385311318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Just to clarify, there's no test for this AFAIK, but `xpriv/../*/...` isn't allowed, right?\r\n\r\nYes. Maybe we should add a `CheckUnparsable` for that.\r\n\r\n> I see, so we don't do any intermediate caching if we can always generate from \"root\" anyways with pubkey.\r\n\r\nActually no. We always cache if there are xpubs. If the descriptor has just an xpub, e.g. `wpkh(xpub...)`, we actually would cache that xpub. If it were `wpkh(xpub.../0)`, we would cache the derived xpub. Same if it is hardened.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T19:05:06Z",
      "diff_hunk" : "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385311318",
      "id" : 385311318,
      "in_reply_to_id" : 385180274,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMTMxOA==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 44,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365921550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385311318",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385313609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385313609"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think I'm agreeing with you here.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-27T19:09:30Z",
      "diff_hunk" : "@@ -287,32 +287,44 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     size_t GetSize() const override { return 33; }\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n             CExtPubKey extkey = m_extkey;\n+            CExtPubKey parent = extkey;\n             if (read_cache) {\n-                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                    if (m_derive == DeriveType::HARDENED) return false;\n+                    // Try to get the derivation parent\n+                    if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                    assert(m_derive == DeriveType::UNHARDENED);\n+                    parent.Derive(extkey, pos);\n+                }\n             } else if (IsHardened()) {\n                 CExtKey xprv;\n                 if (!GetDerivedExtKey(arg, xprv)) return false;\n+                parent = xprv.Neuter();\n                 if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);\n                 if (m_derive == DeriveType::HARDENED) xprv.Derive(xprv, pos | 0x80000000UL);\n                 extkey = xprv.Neuter();\n             } else {\n                 for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n+                    parent.Derive(parent, entry);\n                 }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+                extkey = parent;\n+                if (m_derive == DeriveType::UNHARDENED) parent.Derive(extkey, pos);\n                 assert(m_derive != DeriveType::HARDENED);\n             }\n             *key = extkey.pubkey;\n             if (write_cache && !read_cache) {\n                 write_cache->CacheExtPubKey(info_out, extkey);\n+                // Only cache parent if there is any unhardened derivation",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385313609",
      "id" : 385313609,
      "in_reply_to_id" : 385180274,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMzYwOQ==",
      "original_commit_id" : "d90075e586b2a4b1fbc1c511d662c0b918023595",
      "original_position" : 44,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 365924341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385313609",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Travis and AppVeyor didn't run. Probably because of the Github problems yesterday. It might help to force push some trivial change.",
      "created_at" : "2020-02-28T11:58:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592482741",
      "id" : 592482741,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MjQ4Mjc0MQ==",
      "updated_at" : "2020-02-28T11:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592482741",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385672434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385672434"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n// For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\r\n```",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T12:37:13Z",
      "diff_hunk" : "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385672434",
      "id" : 385672434,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3MjQzNA==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 62,
      "path" : "src/script/descriptor.cpp",
      "position" : 88,
      "pull_request_review_id" : 366367050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385672434",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385676713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676713"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: assert `Derive()` succeeds",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T12:47:05Z",
      "diff_hunk" : "@@ -262,6 +265,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xprv\n+    bool GetDerivedExtKey(const SigningProvider& arg, CExtKey& xprv) const\n+    {\n+        if (!GetExtKey(arg, xprv)) return false;\n+        for (auto entry : m_path) {\n+            xprv.Derive(xprv, entry);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385676713",
      "id" : 385676713,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NjcxMw==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 44,
      "path" : "src/script/descriptor.cpp",
      "position" : 55,
      "pull_request_review_id" : 366367050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676713",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385676836"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676836"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: assert `Derive()` succeeds",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T12:47:21Z",
      "diff_hunk" : "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n         if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n+            CExtPubKey extkey = m_extkey;\n+            if (read_cache) {\n+                if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            } else if (IsHardened()) {\n+                CExtKey xprv;\n+                if (!GetDerivedExtKey(arg, xprv)) return false;\n+                if (m_derive == DeriveType::UNHARDENED) xprv.Derive(xprv, pos);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385676836",
      "id" : 385676836,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3NjgzNg==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 76,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 366367050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385676836",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385679014"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385679014"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You don't need this temporary variable anymore, suggest renaming `info` to `info_out` instead. ",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T12:52:48Z",
      "diff_hunk" : "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385679014",
      "id" : 385679014,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3OTAxNA==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 59,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 366367050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385679014",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385683704"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385683704"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`CPubKey* key` can be a reference now, and you can drop `if(key)` in a few places. The `nullptr` was only used for caching individual pubkeys.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T13:04:17Z",
      "diff_hunk" : "@@ -152,8 +152,11 @@ struct PubkeyProvider\n {\n     virtual ~PubkeyProvider() = default;\n \n-    /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    /** Derive a public key. If key==nullptr, only info is desired.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385683704",
      "id" : 385683704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4MzcwNA==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 6,
      "path" : "src/script/descriptor.cpp",
      "position" : 6,
      "pull_request_review_id" : 366367050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385683704",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385849377"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385849377"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We want to avoid modifying `info` in case later steps fail.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T18:21:11Z",
      "diff_hunk" : "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385849377",
      "id" : 385849377,
      "in_reply_to_id" : 385679014,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg0OTM3Nw==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 59,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 366593569,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385849377",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385851709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385851709"
         }
      },
      "author_association" : "MEMBER",
      "body" : "might be worth a comment(took me a bit to convince myself what it was doing)",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T18:26:03Z",
      "diff_hunk" : "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385851709",
      "id" : 385851709,
      "in_reply_to_id" : 385679014,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MTcwOQ==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 59,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 366596472,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385851709",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385863672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385863672"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Then we need another test, because everything passed when I changed that.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T18:51:57Z",
      "diff_hunk" : "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385863672",
      "id" : 385863672,
      "in_reply_to_id" : 385679014,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MzY3Mg==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 59,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 366611544,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385863672",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883261"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883261"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I added a comment. I don't think a test is useful. Everything still passes because `ExpandHelper` does the same thing. Just keeping it for belt-and-suspenders.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T19:34:46Z",
      "diff_hunk" : "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883261",
      "id" : 385883261,
      "in_reply_to_id" : 385679014,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzI2MQ==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 59,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 366636525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883261",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883435"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done here and elsewhere.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T19:35:12Z",
      "diff_hunk" : "@@ -262,6 +265,16 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         return true;\n     }\n \n+    // Derives the last xprv\n+    bool GetDerivedExtKey(const SigningProvider& arg, CExtKey& xprv) const\n+    {\n+        if (!GetExtKey(arg, xprv)) return false;\n+        for (auto entry : m_path) {\n+            xprv.Derive(xprv, entry);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883435",
      "id" : 385883435,
      "in_reply_to_id" : 385676713,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQzNQ==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 44,
      "path" : "src/script/descriptor.cpp",
      "position" : 55,
      "pull_request_review_id" : 366636764,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883435",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883484"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T19:35:19Z",
      "diff_hunk" : "@@ -275,29 +288,37 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n+        KeyOriginInfo info_out;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883484",
      "id" : 385883484,
      "in_reply_to_id" : 385672434,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQ4NA==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 62,
      "path" : "src/script/descriptor.cpp",
      "position" : 88,
      "pull_request_review_id" : 366636816,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883484",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883549"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883549"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-28T19:35:27Z",
      "diff_hunk" : "@@ -152,8 +152,11 @@ struct PubkeyProvider\n {\n     virtual ~PubkeyProvider() = default;\n \n-    /** Derive a public key. If key==nullptr, only info is desired. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const = 0;\n+    /** Derive a public key. If key==nullptr, only info is desired.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r385883549",
      "id" : 385883549,
      "in_reply_to_id" : 385683704,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzU0OQ==",
      "original_commit_id" : "b434a8769956573b2ee8eaa2b4826f0e82d39f1f",
      "original_position" : 6,
      "path" : "src/script/descriptor.cpp",
      "position" : 6,
      "pull_request_review_id" : 366636884,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-28T21:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385883549",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've added another commit to internally cache that parent xpub inside of `BIP32PubkeyProvider` so the `Expand` doesn't constantly re-derive the same xpub.",
      "created_at" : "2020-02-28T21:59:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#issuecomment-592748507",
      "id" : 592748507,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5Mjc0ODUwNw==",
      "updated_at" : "2020-02-28T21:59:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592748507",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386011800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386011800"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for adding the asserts, but now they violate \"Assertions should not have side-effects\": https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#general-c",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-29T08:21:22Z",
      "diff_hunk" : "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386011800",
      "id" : 386011800,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMTgwMA==",
      "original_commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "original_position" : 104,
      "path" : "src/script/descriptor.cpp",
      "position" : 104,
      "pull_request_review_id" : 366785407,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-29T10:20:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386011800",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386012519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012519"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7 : maybe change to `m_derive != DeriveType:: UNHARDENED` for readability, since there's no point in calling `GetCachedExtPubKey(parent_info` for `DeriveType:: NONE`, because `parent_info == info_out` in that case.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-29T08:35:43Z",
      "diff_hunk" : "@@ -291,35 +291,47 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n         // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n \n         // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n \n         // Derive keys or fetch them from cache\n         CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n         if (read_cache) {\n-            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386012519",
      "id" : 386012519,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMjUxOQ==",
      "original_commit_id" : "2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7",
      "original_position" : 21,
      "path" : "src/script/descriptor.cpp",
      "position" : 100,
      "pull_request_review_id" : 366785407,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-29T10:20:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012519",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386012626"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012626"
         }
      },
      "author_association" : "MEMBER",
      "body" : "With my previous suggestion this `assert` would go away.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-29T08:37:11Z",
      "diff_hunk" : "@@ -291,35 +291,47 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const override\n     {\n         // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n-        KeyOriginInfo info_out;\n+        KeyOriginInfo info_out, parent_info;\n         CKeyID keyid = m_extkey.pubkey.GetID();\n         std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n         info_out.path = m_path;\n+        parent_info = info_out;\n \n         // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n         if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n         if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n \n         // Derive keys or fetch them from cache\n         CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n         if (read_cache) {\n-            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) return false;\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386012626",
      "id" : 386012626,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMjYyNg==",
      "original_commit_id" : "2f04cc4c50a9ef94f6e67d97ea552e7b6e03cec7",
      "original_position" : 24,
      "path" : "src/script/descriptor.cpp",
      "position" : 103,
      "pull_request_review_id" : 366785407,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-29T10:20:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386012626",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386039834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386039834"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The exclusive use of either `read_cache` or `write_cache` trips me up. A reminder like `assert(!(read_cache && write_cache));` may be helpful.",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-29T16:43:50Z",
      "diff_hunk" : "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386039834",
      "id" : 386039834,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzOTgzNA==",
      "original_commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "original_position" : 68,
      "path" : "src/script/descriptor.cpp",
      "position" : 68,
      "pull_request_review_id" : 366807278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-29T17:23:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386039834",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386040461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386040461"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The `skip_unhardened` argument of `CacheExtPubKey` is a nett confusion increase for me, try:\r\n```cpp\r\n// Cache parent instead of child if there is any unhardened derivation\r\nif (m_derive != DeriveType::HARDENED) {\r\n  write_cache->CacheExtPubKey(parent_info, parent);\r\n} else if (info_out.path.size() > 0) {\r\n  write_cache->CacheExtPubKey(info_out, extkey);\r\n}\r\n```",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-29T16:54:31Z",
      "diff_hunk" : "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));\n+            }\n+        } else if (m_cached_xpub.pubkey.IsValid() && m_derive != DeriveType::HARDENED) {\n+            parent = extkey = m_cached_xpub;\n+            if (m_derive == DeriveType::UNHARDENED) assert(parent.Derive(extkey, pos));\n+        } else if (IsHardened()) {\n+            CExtKey xprv;\n+            if (!GetDerivedExtKey(arg, xprv)) return false;\n+            parent = xprv.Neuter();\n+            if (m_derive == DeriveType::UNHARDENED) assert(xprv.Derive(xprv, pos));\n+            if (m_derive == DeriveType::HARDENED) assert(xprv.Derive(xprv, pos | 0x80000000UL));\n+            extkey = xprv.Neuter();\n+        } else {\n+            for (auto entry : m_path) {\n+                assert(parent.Derive(parent, entry));\n             }\n+            extkey = parent;\n+            if (m_derive == DeriveType::UNHARDENED) assert(parent.Derive(extkey, pos));\n+            assert(m_derive != DeriveType::HARDENED);\n         }\n-        CKeyID keyid = m_extkey.pubkey.GetID();\n-        std::copy(keyid.begin(), keyid.begin() + sizeof(info.fingerprint), info.fingerprint);\n-        info.path = m_path;\n-        if (m_derive == DeriveType::UNHARDENED) info.path.push_back((uint32_t)pos);\n-        if (m_derive == DeriveType::HARDENED) info.path.push_back(((uint32_t)pos) | 0x80000000L);\n+        key = extkey.pubkey;\n+        if (!m_cached_xpub.pubkey.IsValid() && m_derive != DeriveType::HARDENED) m_cached_xpub = parent;\n+        if (write_cache && !read_cache) {\n+            write_cache->CacheExtPubKey(info_out, extkey, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386040461",
      "id" : 386040461,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0MDQ2MQ==",
      "original_commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "original_position" : 132,
      "path" : "src/script/descriptor.cpp",
      "position" : 132,
      "pull_request_review_id" : 366807278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-29T17:23:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386040461",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386041610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386041610"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n// If we don't have a read_cache, we have a write_cache\r\n```",
      "commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "created_at" : "2020-02-29T17:13:00Z",
      "diff_hunk" : "@@ -275,29 +289,57 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey* key, KeyOriginInfo& info) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) override\n     {\n-        if (key) {\n-            if (IsHardened()) {\n-                CKey priv_key;\n-                if (!GetPrivKey(pos, arg, priv_key)) return false;\n-                *key = priv_key.GetPubKey();\n-            } else {\n-                // TODO: optimize by caching\n-                CExtPubKey extkey = m_extkey;\n-                for (auto entry : m_path) {\n-                    extkey.Derive(extkey, entry);\n-                }\n-                if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n-                assert(m_derive != DeriveType::HARDENED);\n-                *key = extkey.pubkey;\n+        // Put the KeyOriginInfo into a temp variable to avoid modifying info before successful derivation\n+        KeyOriginInfo info_out, parent_info;\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info_out.fingerprint), info_out.fingerprint);\n+        info_out.path = m_path;\n+        parent_info = info_out;\n+\n+        // For a ranged descriptor, add derivation step to path, otherwise return public key at current depth.\n+        if (m_derive == DeriveType::UNHARDENED) info_out.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info_out.path.push_back(((uint32_t)pos) | 0x80000000L);\n+\n+        // Derive keys or fetch them from cache\n+        CExtPubKey extkey = m_extkey;\n+        CExtPubKey parent = extkey;\n+        if (read_cache) {\n+            if (!read_cache->GetCachedExtPubKey(info_out, extkey)) {\n+                if (m_derive == DeriveType::HARDENED) return false;\n+                // Try to get the derivation parent\n+                if (!read_cache->GetCachedExtPubKey(parent_info, parent)) return false;\n+                assert(m_derive == DeriveType::UNHARDENED);\n+                assert(parent.Derive(extkey, pos));\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18204#discussion_r386041610",
      "id" : 386041610,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0MTYxMA==",
      "original_commit_id" : "384562930a48474f337224b0355b6fd08784c375",
      "original_position" : 105,
      "path" : "src/script/descriptor.cpp",
      "position" : 105,
      "pull_request_review_id" : 366807278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18204",
      "updated_at" : "2020-02-29T17:23:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386041610",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
