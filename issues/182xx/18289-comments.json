[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389257488"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389257488"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In that case, should `stop()` also `assert(nThreadsServicingQueue > 0)` at least when `drain == true`?",
      "commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "created_at" : "2020-03-07T14:13:24Z",
      "diff_hunk" : "@@ -9,13 +9,14 @@\n #include <assert.h>\n #include <utility>\n \n-CScheduler::CScheduler() : nThreadsServicingQueue(0), stopRequested(false), stopWhenEmpty(false)\n+CScheduler::CScheduler()\n {\n }\n \n CScheduler::~CScheduler()\n {\n     assert(nThreadsServicingQueue == 0);\n+    if (stopWhenEmpty) assert(taskQueue.empty());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389257488",
      "id" : 389257488,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1NzQ4OA==",
      "original_commit_id" : "fa70ccc6c4e304646b4610228f3975b3a9762643",
      "original_position" : 12,
      "path" : "src/scheduler.cpp",
      "position" : 12,
      "pull_request_review_id" : 370746082,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289",
      "updated_at" : "2020-03-07T14:19:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389257488",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nThanks for making the code easier to read. That is appreciated by future generations of Core developers :)",
      "created_at" : "2020-03-07T16:31:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18289#issuecomment-596105738",
      "id" : 596105738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18289",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NjEwNTczOA==",
      "updated_at" : "2020-03-07T16:31:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596105738",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389308471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389308471"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree. Maybe relax the assert to `assert(nThreadsServicingQueue > 0 || taskQueue.empty())` because otherwise `CScheduler c; c.stop();` would assert.",
      "commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "created_at" : "2020-03-07T20:06:23Z",
      "diff_hunk" : "@@ -9,13 +9,14 @@\n #include <assert.h>\n #include <utility>\n \n-CScheduler::CScheduler() : nThreadsServicingQueue(0), stopRequested(false), stopWhenEmpty(false)\n+CScheduler::CScheduler()\n {\n }\n \n CScheduler::~CScheduler()\n {\n     assert(nThreadsServicingQueue == 0);\n+    if (stopWhenEmpty) assert(taskQueue.empty());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389308471",
      "id" : 389308471,
      "in_reply_to_id" : 389257488,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMwODQ3MQ==",
      "original_commit_id" : "fa70ccc6c4e304646b4610228f3975b3a9762643",
      "original_position" : 12,
      "path" : "src/scheduler.cpp",
      "position" : 12,
      "pull_request_review_id" : 370786301,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289",
      "updated_at" : "2020-03-07T20:06:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389308471",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389336510"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389336510"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `const std::chrono::milliseconds&` to avoid copy (here and below).",
      "commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "created_at" : "2020-03-08T05:16:53Z",
      "diff_hunk" : "@@ -118,15 +114,15 @@ void CScheduler::MockForward(std::chrono::seconds delta_seconds)\n     newTaskScheduled.notify_one();\n }\n \n-static void Repeat(CScheduler* s, CScheduler::Function f, int64_t deltaMilliSeconds)\n+static void Repeat(CScheduler& s, CScheduler::Function f, std::chrono::milliseconds delta)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389336510",
      "id" : 389336510,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzNjUxMA==",
      "original_commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "original_position" : 33,
      "path" : "src/scheduler.cpp",
      "position" : 33,
      "pull_request_review_id" : 370805345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289",
      "updated_at" : "2020-03-08T05:21:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389336510",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389395171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389395171"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: the comment warrants `s/ (900s)//`, or even reword to something like \"How often to dump addresses to banlist.dat\". Same below for `DUMP_PEERS_INTERVAL`.",
      "commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "created_at" : "2020-03-08T18:50:06Z",
      "diff_hunk" : "@@ -87,7 +87,7 @@ static const bool DEFAULT_REST_ENABLE = false;\n static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;\n \n // Dump addresses to banlist.dat every 15 minutes (900s)\n-static constexpr int DUMP_BANS_INTERVAL = 60 * 15;\n+static constexpr std::chrono::minutes DUMP_BANS_INTERVAL{15};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389395171",
      "id" : 389395171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5NTE3MQ==",
      "original_commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "original_position" : 5,
      "path" : "src/init.cpp",
      "position" : 5,
      "pull_request_review_id" : 370850142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289",
      "updated_at" : "2020-03-08T19:20:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389395171",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK faa90a0 (code review, not tested)",
      "created_at" : "2020-03-08T19:28:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18289#issuecomment-596242345",
      "id" : 596242345,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18289",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NjI0MjM0NQ==",
      "updated_at" : "2020-03-08T19:28:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596242345",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389408608"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389408608"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    scheduler.scheduleEvery([this] { DumpAddresses(); }, DUMP_PEERS_INTERVAL);\r\n```\r\nSame below.",
      "commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "created_at" : "2020-03-08T21:51:17Z",
      "diff_hunk" : "@@ -2343,7 +2343,7 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     threadMessageHandler = std::thread(&TraceThread<std::function<void()> >, \"msghand\", std::function<void()>(std::bind(&CConnman::ThreadMessageHandler, this)));\n \n     // Dump network addresses\n-    scheduler.scheduleEvery(std::bind(&CConnman::DumpAddresses, this), DUMP_PEERS_INTERVAL * 1000);\n+    scheduler.scheduleEvery([&] { this->DumpAddresses(); }, DUMP_PEERS_INTERVAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389408608",
      "id" : 389408608,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwODYwOA==",
      "original_commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "original_position" : 14,
      "path" : "src/net.cpp",
      "position" : 14,
      "pull_request_review_id" : 370860591,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289",
      "updated_at" : "2020-03-08T21:58:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389408608",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389539257"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389539257"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit on nit:\r\n\r\nI'm afraid that might be a pessimisation :)\r\n\r\nFrom a performance perspective the typical rule-of-thumb recommendation is to pass \"in\" parameters by value (instead of reference to const) if the parameter has a size up to 16 bytes (\"cheaply-copied\" types).\r\n\r\nThus in this case the rule-of-thumb recommendation would be to pass by value instead of reference to const.\r\n\r\n(Disclaimer: As always with optimisations -- if it is worth trying to optimise then it is worth trying to quantify the impact of the optimisation by measuring! :))\r\n\r\nFrom the C++ Core Guidelines (Stroustrup & Sutter):\r\n\r\n> [F.16: For âinâ parameters, pass cheaply-copied types by value and others by reference to const](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#f16-for-in-parameters-pass-cheaply-copied-types-by-value-and-others-by-reference-to-const)\r\n>\r\n> Reason: Both let the caller know that a function will not modify the argument, and both allow initialization by rvalues.\r\n>\r\n> What is âcheap to copyâ depends on the machine architecture, but two or three words (doubles, pointers, references) are usually best passed by value. When copying is cheap, nothing beats the simplicity and safety of copying, and for small objects (up to two or three words) it is also faster than passing by reference because it does not require an extra indirection to access from the function.\r\n>\r\n> \r\n> Examples:\r\n> ```\r\n> void f1(const string& s);  // OK: pass by reference to const; always cheap\r\n>\r\n> void f2(string s);         // bad: potentially expensive\r\n> \r\n> void f3(int x);            // OK: Unbeatable\r\n> \r\n> void f4(const int& x);     // bad: overhead on access in f4()\r\n> ```\r\n\r\n![](https://isocpp.github.io/CppCoreGuidelines/param-passing-normal.png)",
      "commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "created_at" : "2020-03-09T09:19:54Z",
      "diff_hunk" : "@@ -118,15 +114,15 @@ void CScheduler::MockForward(std::chrono::seconds delta_seconds)\n     newTaskScheduled.notify_one();\n }\n \n-static void Repeat(CScheduler* s, CScheduler::Function f, int64_t deltaMilliSeconds)\n+static void Repeat(CScheduler& s, CScheduler::Function f, std::chrono::milliseconds delta)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389539257",
      "id" : 389539257,
      "in_reply_to_id" : 389336510,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUzOTI1Nw==",
      "original_commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "original_position" : 33,
      "path" : "src/scheduler.cpp",
      "position" : 33,
      "pull_request_review_id" : 371010291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289",
      "updated_at" : "2020-03-09T09:25:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389539257",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389540471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389540471"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It feels unstable to me to depend on architecture and/or implementation rather than just go for const x& when you can, but it's a nit; I'll live. :)",
      "commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "created_at" : "2020-03-09T09:22:25Z",
      "diff_hunk" : "@@ -118,15 +114,15 @@ void CScheduler::MockForward(std::chrono::seconds delta_seconds)\n     newTaskScheduled.notify_one();\n }\n \n-static void Repeat(CScheduler* s, CScheduler::Function f, int64_t deltaMilliSeconds)\n+static void Repeat(CScheduler& s, CScheduler::Function f, std::chrono::milliseconds delta)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389540471",
      "id" : 389540471,
      "in_reply_to_id" : 389336510,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0MDQ3MQ==",
      "original_commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "original_position" : 33,
      "path" : "src/scheduler.cpp",
      "position" : 33,
      "pull_request_review_id" : 371011831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289",
      "updated_at" : "2020-03-09T09:22:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389540471",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r390092118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390092118"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`std::chrono::milliseconds` is just a 64-bit int (well, 45-bit or greater int), so passing it as `const &` means you're passing a 64-bit pointer instead, and have to deref it later.",
      "commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "created_at" : "2020-03-10T04:40:45Z",
      "diff_hunk" : "@@ -118,15 +114,15 @@ void CScheduler::MockForward(std::chrono::seconds delta_seconds)\n     newTaskScheduled.notify_one();\n }\n \n-static void Repeat(CScheduler* s, CScheduler::Function f, int64_t deltaMilliSeconds)\n+static void Repeat(CScheduler& s, CScheduler::Function f, std::chrono::milliseconds delta)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18289#discussion_r390092118",
      "id" : 390092118,
      "in_reply_to_id" : 389336510,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5MjExOA==",
      "original_commit_id" : "faa90a0f933f574aa3304df7616778fc01009f51",
      "original_position" : 33,
      "path" : "src/scheduler.cpp",
      "position" : 33,
      "pull_request_review_id" : 371678351,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18289",
      "updated_at" : "2020-03-10T04:40:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390092118",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
