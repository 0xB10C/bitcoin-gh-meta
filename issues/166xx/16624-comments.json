[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Travis is stalling yet another time..",
      "created_at" : "2019-08-15T22:14:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-521816320",
      "id" : 521816320,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTgxNjMyMA==",
      "updated_at" : "2019-08-15T22:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521816320",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-08-15T23:17:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-521829833",
      "id" : 521829833,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTgyOTgzMw==",
      "updated_at" : "2019-08-15T23:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521829833",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16572](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16572.html) (wallet: Fix Char as Bool in Wallet by JeremyRubin)\n* [#15931](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15931.html) (Remove GetDepthInMainChain dependency on locked chain interface by ariard)\n* [#15129](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15129.html) (rpc: Added ability to remove watch only addresses by benthecarman)\n* [#9381](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9381.html) (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-08-16T00:26:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-521842286",
      "id" : 521842286,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTg0MjI4Ng==",
      "updated_at" : "2019-08-16T00:26:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521842286",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314647502"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314647502"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: why the trailing comma?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T09:28:10Z",
      "diff_hunk" : "@@ -396,7 +396,7 @@ class CWalletTx\n private:\n     const CWallet* pwallet;\n \n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n+    /** Constant used in hashBlock to indicate tx has been abandoned, */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314647502",
      "id" : 314647502,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY0NzUwMg==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 5,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275855762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314647502",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314648430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314648430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is the default initialization changed to 0?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T09:31:01Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314648430",
      "id" : 314648430,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY0ODQzMA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 25,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275855762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314648430",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314649394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314649394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can we move this backwards compatibility feature entirely to the serialization code, and then make `nIndex` a `uint` (for clarity)?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T09:34:00Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314649394",
      "id" : 314649394,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY0OTM5NA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 65,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275855762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314649394",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314650144"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314650144"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Mention that `nIndex` is a block height?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T09:36:17Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314650144",
      "id" : 314650144,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY1MDE0NA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 60,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275855762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314650144",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. This overlaps (but is compatible) with #9381",
      "created_at" : "2019-08-16T10:39:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-521967025",
      "id" : 521967025,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTk2NzAyNQ==",
      "updated_at" : "2019-08-16T10:39:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521967025",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314683678"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314683678"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`isConfirmed()` does not seem to be tested as the others. Add a test? :-)",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T11:34:29Z",
      "diff_hunk" : "@@ -607,10 +651,14 @@ class CWalletTx\n      * >0 : is a coinbase transaction which matures in this many blocks\n      */\n     int GetBlocksToMaturity(interfaces::Chain::Lock& locked_chain) const;\n-    bool hashUnset() const { return (hashBlock.IsNull() || hashBlock == ABANDON_HASH); }\n-    bool isAbandoned() const { return (hashBlock == ABANDON_HASH); }\n-    void setAbandoned() { hashBlock = ABANDON_HASH; }\n-\n+    bool isAbandoned() const { return tx_state.state == CWalletTx::ABANDONED; }\n+    void setAbandoned() { tx_state.state = CWalletTx::ABANDONED; }\n+    bool isConflicted() const { return tx_state.state == CWalletTx::CONFLICTED; }\n+    void setConflicted() { tx_state.state = CWalletTx::CONFLICTED; }\n+    bool isUnconfirmed() const { return tx_state.state == CWalletTx::UNCONFIRMED; }\n+    void setUnconfirmed() { tx_state.state = CWalletTx::UNCONFIRMED; }\n+    bool isConfirmed() const { return tx_state.state == CWalletTx::CONFIRMED; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314683678",
      "id" : 314683678,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY4MzY3OA==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_position" : 130,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275902603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314683678",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314683814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314683814"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be \"conflicted\"? :-)",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T11:34:49Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314683814",
      "id" : 314683814,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY4MzgxNA==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_position" : 39,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 275902757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314683814",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314778232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314778232"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> if hashBlock is null it means transaction is abandoned\r\n\r\nCould you clarify this part of the comment. Doesn't `1` not `0` mean abandoned?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T15:42:13Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314778232",
      "id" : 314778232,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc3ODIzMg==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 60,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314778232",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314782646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314782646"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Comment above about \"if transaction was found in a block\" no longer makes sense without the if condition.\r\n\r\nAlso, it seems like now when an abandoned, conflicted, or confirmed transaction is added to the mempool, and this is called, the transaction will now be marked unconfirmed instead of left in the previous state.\r\n\r\nThis seems logical, but I'm wondering if it is a change in behavior. It'd be helpful if the PR description or commit message would say explicitly whether any of this changes wallet behavior, and what the changes are if it does.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T15:53:15Z",
      "diff_hunk" : "@@ -1249,8 +1238,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const uint256\n             CWalletTx wtx(this, ptx);\n \n             // Get merkle branch if transaction was found in a block\n-            if (!block_hash.IsNull())\n-                wtx.SetMerkleBranch(block_hash, posInBlock);\n+            wtx.SetMerkleBranch(state, block_hash, posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314782646",
      "id" : 314782646,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc4MjY0Ng==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314782646",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314787768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314787768"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Can we move this backwards compatibility feature entirely to the serialization code, and then make `nIndex` a `uint` (for clarity)?\r\n\r\nPersonally -0 on this. Imo, unsigned types provide no safety and are terrible for everything except bitfields.\r\n",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T16:06:31Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314787768",
      "id" : 314787768,
      "in_reply_to_id" : 314649394,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc4Nzc2OA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 65,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314787768",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314788614"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314788614"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just a suggestion, but I'd add `= 0` here and `= UNCONFIRMED` on the line below to simplify constructor and deserialization code.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T16:08:46Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314788614",
      "id" : 314788614,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc4ODYxNA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 65,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314788614",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314789485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314789485"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Why is the default initialization changed to 0?\r\n\r\nFrom what I can tell in this PR, the convention mostly adhered to in this PR is to stop using -1 and ABANDON_HASH values at runtime, and restrict them only to the serialization code. This seems like a pretty good convention if it's followed consistently. I also think it'd be nice to explicitly say what values the block and index values should have for different states in a comment.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T16:10:54Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314789485",
      "id" : 314789485,
      "in_reply_to_id" : 314648430,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc4OTQ4NQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 25,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314789485",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314790802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314790802"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can we set 0 here, or change MarkConflicted to set -1? I think it'd be good to be consistent about what conflicted transactions look like.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T16:14:39Z",
      "diff_hunk" : "@@ -513,7 +541,23 @@ class CWalletTx\n         std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n         std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev\n         char dummy_char; //! Used to be fSpent\n-        s >> tx >> hashBlock >> dummy_vector1 >> nIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+        int serializedIndex;\n+        s >> tx >> tx_state.hashBlock >> dummy_vector1 >> serializedIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+\n+        if (serializedIndex == -1 && tx_state.hashBlock == ABANDON_HASH) {\n+            tx_state.nIndex = 0;\n+            setAbandoned();\n+        } else if (serializedIndex == -1) {\n+            tx_state.nIndex = -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314790802",
      "id" : 314790802,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc5MDgwMg==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 94,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314790802",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314792223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314792223"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Remove SyncTransaction for conflicted txn in CWallet::BlockConnected\" (0e3212ae85c7cf1eb6a8d937ac67d6822f624175)\r\n\r\nI don't think I understand this change. Commit description suggests why it is ok, but I don't understand what motivates it. Is it just cleanup? Is it maybe a minor bugfix, or needed for a future change?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T16:18:27Z",
      "diff_hunk" : "@@ -1415,7 +1415,6 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     // the notification that the conflicted transaction was evicted.\n \n     for (const CTransactionRef& ptx : vtxConflicted) {\n-        SyncTransaction(ptx, CWalletTx::TxState::CONFLICTED, {} /* block hash */, 0 /* position in block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314792223",
      "id" : 314792223,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDc5MjIyMw==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276025142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314792223",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314822059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314822059"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "With these changes, but even before, `nIndex` never referred directly to a block height. When set at -1, it's interpreted as a magic value meaning the `hashBlock` is one of the deepest conflicting tx. This PR intents to scope this logic only to serialization/deserialization.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T17:42:28Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314822059",
      "id" : 314822059,
      "in_reply_to_id" : 314650144,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyMjA1OQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 60,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276081238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314822059",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314822720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314822720"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes see comment on top of `TxConfirmation`, should be improved ?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T17:44:12Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314822720",
      "id" : 314822720,
      "in_reply_to_id" : 314648430,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyMjcyMA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 25,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276082091,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314822720",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314823204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314823204"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What do you mean here by moving this backwards compatibility feature entirely to the serialization code ? If changes are right this logic should only lived in serialization code now. ",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T17:45:34Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314823204",
      "id" : 314823204,
      "in_reply_to_id" : 314649394,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyMzIwNA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 65,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276082742,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314823204",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314824365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314824365"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Removed for now, I've added it for further changes were ABANDON state was dual-set with other states, but drop if for now, would have been too big changes at once.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T17:48:40Z",
      "diff_hunk" : "@@ -607,10 +651,14 @@ class CWalletTx\n      * >0 : is a coinbase transaction which matures in this many blocks\n      */\n     int GetBlocksToMaturity(interfaces::Chain::Lock& locked_chain) const;\n-    bool hashUnset() const { return (hashBlock.IsNull() || hashBlock == ABANDON_HASH); }\n-    bool isAbandoned() const { return (hashBlock == ABANDON_HASH); }\n-    void setAbandoned() { hashBlock = ABANDON_HASH; }\n-\n+    bool isAbandoned() const { return tx_state.state == CWalletTx::ABANDONED; }\n+    void setAbandoned() { tx_state.state = CWalletTx::ABANDONED; }\n+    bool isConflicted() const { return tx_state.state == CWalletTx::CONFLICTED; }\n+    void setConflicted() { tx_state.state = CWalletTx::CONFLICTED; }\n+    bool isUnconfirmed() const { return tx_state.state == CWalletTx::UNCONFIRMED; }\n+    void setUnconfirmed() { tx_state.state = CWalletTx::UNCONFIRMED; }\n+    bool isConfirmed() const { return tx_state.state == CWalletTx::CONFIRMED; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314824365",
      "id" : 314824365,
      "in_reply_to_id" : 314683678,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyNDM2NQ==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_position" : 130,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276084280,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314824365",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314825417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314825417"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You're right that an inconsistency from my part. Corrected.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T17:51:09Z",
      "diff_hunk" : "@@ -513,7 +541,23 @@ class CWalletTx\n         std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n         std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev\n         char dummy_char; //! Used to be fSpent\n-        s >> tx >> hashBlock >> dummy_vector1 >> nIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+        int serializedIndex;\n+        s >> tx >> tx_state.hashBlock >> dummy_vector1 >> serializedIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+\n+        if (serializedIndex == -1 && tx_state.hashBlock == ABANDON_HASH) {\n+            tx_state.nIndex = 0;\n+            setAbandoned();\n+        } else if (serializedIndex == -1) {\n+            tx_state.nIndex = -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314825417",
      "id" : 314825417,
      "in_reply_to_id" : 314790802,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyNTQxNw==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 94,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276085453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314825417",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314827034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314827034"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If `nIndex` doesn't mean a block height, then why not remove the instance variable altogether? We can still (de)serialize in a backwards compatible way.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T17:55:03Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314827034",
      "id" : 314827034,
      "in_reply_to_id" : 314650144,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyNzAzNA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 60,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276087488,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314827034",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314827251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314827251"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See below, it depends on if nIndex has any meaning.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T17:55:36Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314827251",
      "id" : 314827251,
      "in_reply_to_id" : 314649394,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgyNzI1MQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 65,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276087756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314827251",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314833011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314833011"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Currently, `AbandonTransaction` set `nIndex` as -1 and this value is kept at serialization/deserialization. I'm not sure if it make sense for older client, because an abandoned transaction can be also confirmed/unconfirmed/conflicted at same time. Nevertheless, I've tried to keep same behavior for now, so `hashBlock` set as ABANDON_HASH is used to avoid deserialization ambiguity with conflicted.\r\n\r\nI've clarified this comment, the ABANDON_HASH one and also reset abandon txn `hashBlock` at deserialization. ABANDON_HASH should be scoped at serialization/deserialization.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T18:10:59Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314833011",
      "id" : 314833011,
      "in_reply_to_id" : 314778232,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgzMzAxMQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 60,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276095145,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314833011",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314834977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314834977"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T18:16:04Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0\n+         * refers to a confirmed transaction (if hashBlock set) or unconfirmed one.\n+         * Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        int nIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314834977",
      "id" : 314834977,
      "in_reply_to_id" : 314788614,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgzNDk3Nw==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 65,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276097580,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314834977",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314851583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314851583"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Clarified in commit message that is a change in behavior where at block disconnection, previous tx state is override by UNCONFIRMED one. I think right now, we don't track at all the fact that tx has been disconnected, and that's why we don't undo conflicts, or make it hard to solve them. The only direct consequence of these changes I can think of is a user having to call abandontransaction a 2nd time if block get disconnected and transaction is not back in mempool.\r\n\r\nThis change would make easier to track conflicts, where if conflicting transaction get UNCONFIRMED, iterate on conflicted outpoints and make them free.\r\n\r\nMaybe, I can avoid update right now for UNCONFIRMED state, so a tx is born in this state but never go backward to it, and save implications for a later PR ?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T19:01:10Z",
      "diff_hunk" : "@@ -1249,8 +1238,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const uint256\n             CWalletTx wtx(this, ptx);\n \n             // Get merkle branch if transaction was found in a block\n-            if (!block_hash.IsNull())\n-                wtx.SetMerkleBranch(block_hash, posInBlock);\n+            wtx.SetMerkleBranch(state, block_hash, posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314851583",
      "id" : 314851583,
      "in_reply_to_id" : 314782646,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDg1MTU4Mw==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276118971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314851583",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314855770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314855770"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated commit message. I think this redundant, as conflicts tagging logic is triggered by connection of conflicting transaction. AFAIK, it's not a bugfix but a cleanup. And as it was same issue than major commit, I bundled them together.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T19:13:57Z",
      "diff_hunk" : "@@ -1415,7 +1415,6 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     // the notification that the conflicted transaction was evicted.\n \n     for (const CTransactionRef& ptx : vtxConflicted) {\n-        SyncTransaction(ptx, CWalletTx::TxState::CONFLICTED, {} /* block hash */, 0 /* position in block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314855770",
      "id" : 314855770,
      "in_reply_to_id" : 314792223,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDg1NTc3MA==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276124371,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314855770",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314858435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314858435"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Well I think we need to keep `nIndex` at least it's used by RPCs in `WalletTxToJSON` ? Or getting it out of new `TxConfirmation` struct ? ",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T19:21:22Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314858435",
      "id" : 314858435,
      "in_reply_to_id" : 314650144,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDg1ODQzNQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 60,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276127735,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314858435",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks all for reviews, updated with comments corrected at 6cc34fc.",
      "created_at" : "2019-08-16T19:25:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-522123948",
      "id" : 522123948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjEyMzk0OA==",
      "updated_at" : "2019-08-16T21:13:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522123948",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314863840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314863840"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we should figure out what it means in the RPC, consider deprecating that field, and then having an explicit backwards compatible workaround.\r\n\r\nIn the backwards compatiblity tests I wrote it seems `blockindex` is absent for uncofirmned or abandoned transactions. It was `1` for a confirmed transaction.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-16T19:38:33Z",
      "diff_hunk" : "@@ -477,16 +475,46 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n+        tx_state.nIndex = 0;\n+        setUnconfirmed();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflited tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n      */\n-    int nIndex;\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n+     */\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with, but if hashBlock is null it means transaction is abandoned. An nIndex >= 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314863840",
      "id" : 314863840,
      "in_reply_to_id" : 314650144,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDg2Mzg0MA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 60,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276134793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314863840",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-08-16T21:47:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-522161854",
      "id" : 522161854,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjE2MTg1NA==",
      "updated_at" : "2019-08-16T21:47:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522161854",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314977051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314977051"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you clarify why we keep the first loop at all? Why not call `TransactionRemovedFromMempool` before `SyncTransaction` in the second loop?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-18T09:43:26Z",
      "diff_hunk" : "@@ -1415,7 +1415,6 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     // the notification that the conflicted transaction was evicted.\n \n     for (const CTransactionRef& ptx : vtxConflicted) {\n-        SyncTransaction(ptx, CWalletTx::TxState::CONFLICTED, {} /* block hash */, 0 /* position in block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314977051",
      "id" : 314977051,
      "in_reply_to_id" : 314792223,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3NzA1MQ==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276269788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314977051",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314978161"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314978161"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Above this comment: `For a CONFIRMED transaction, nIndex is the position inside the block, used in merkle proofs.`\r\n\r\nThis had me confused before; I assumed it referred to a block height.\r\n\r\nThis serialization comment can be moved to the serialization code, because with this change `nIndex` is never `-1`; only `serializedIndex` is.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-18T10:16:15Z",
      "diff_hunk" : "@@ -477,16 +477,44 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n      */\n-    int nIndex;\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314978161",
      "id" : 314978161,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3ODE2MQ==",
      "original_commit_id" : "4ac5d649034585a9da96a55efe70770823729af8",
      "original_position" : 58,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276269788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314978161",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314978711"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314978711"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`TxConfirmation tx_state` is now a confusingly named variable.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-18T10:30:35Z",
      "diff_hunk" : "@@ -4628,21 +4617,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_state.hashBlock = block_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314978711",
      "id" : 314978711,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3ODcxMQ==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_position" : 166,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276269788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314978711",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314979368"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314979368"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I can live with changing it now, but we should drop the comment then.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-18T10:48:19Z",
      "diff_hunk" : "@@ -1249,8 +1238,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const uint256\n             CWalletTx wtx(this, ptx);\n \n             // Get merkle branch if transaction was found in a block\n-            if (!block_hash.IsNull())\n-                wtx.SetMerkleBranch(block_hash, posInBlock);\n+            wtx.SetMerkleBranch(state, block_hash, posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314979368",
      "id" : 314979368,
      "in_reply_to_id" : 314782646,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3OTM2OA==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276269788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314979368",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314979956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314979956"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`posInBlock` could be a good rename candidate for `nIndex`, though probably not worth making the diff bigger.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-18T11:02:58Z",
      "diff_hunk" : "@@ -1383,8 +1372,9 @@ void CWallet::MarkConflicted(const uint256& hashBlock, const uint256& hashTx)\n     }\n }\n \n-void CWallet::SyncTransaction(const CTransactionRef& ptx, const uint256& block_hash, int posInBlock, bool update_tx) {\n-    if (!AddToWalletIfInvolvingMe(ptx, block_hash, posInBlock, update_tx))\n+void CWallet::SyncTransaction(const CTransactionRef& ptx, CWalletTx::TxState state, const uint256& block_hash, int posInBlock, bool update_tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r314979956",
      "id" : 314979956,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3OTk1Ng==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_position" : 81,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276269788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314979956",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315231755"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315231755"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Extended commit message, we keep the loop because set of conflicted txn isn't same as txn included in a block.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-19T14:11:36Z",
      "diff_hunk" : "@@ -1415,7 +1415,6 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     // the notification that the conflicted transaction was evicted.\n \n     for (const CTransactionRef& ptx : vtxConflicted) {\n-        SyncTransaction(ptx, CWalletTx::TxState::CONFLICTED, {} /* block hash */, 0 /* position in block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315231755",
      "id" : 315231755,
      "in_reply_to_id" : 314792223,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIzMTc1NQ==",
      "original_commit_id" : "0e3212ae85c7cf1eb6a8d937ac67d6822f624175",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276586034,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315231755",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315233217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315233217"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh I've struggled hard on naming, `TxConfirmation` is struct with tx state + its values (block hash, position in block). If you have any better names, I'll take it :)",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-19T14:14:24Z",
      "diff_hunk" : "@@ -4628,21 +4617,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_state.hashBlock = block_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315233217",
      "id" : 315233217,
      "in_reply_to_id" : 314978711,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIzMzIxNw==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_position" : 166,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276587922,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315233217",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315235906"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315235906"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Moved to the deserialization code!",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-19T14:19:29Z",
      "diff_hunk" : "@@ -477,16 +477,44 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n      */\n-    int nIndex;\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315235906",
      "id" : 315235906,
      "in_reply_to_id" : 314978161,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTIzNTkwNg==",
      "original_commit_id" : "4ac5d649034585a9da96a55efe70770823729af8",
      "original_position" : 58,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276591330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315235906",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @Sjors for review, pushed some corrections on de4459c",
      "created_at" : "2019-08-19T14:21:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-522596969",
      "id" : 522596969,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjU5Njk2OQ==",
      "updated_at" : "2019-08-19T15:52:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522596969",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315245474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315245474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The variable name `tx_state` is the confusing part, because it's not a TxState",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-19T14:37:26Z",
      "diff_hunk" : "@@ -4628,21 +4617,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_state.hashBlock = block_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315245474",
      "id" : 315245474,
      "in_reply_to_id" : 314978711,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI0NTQ3NA==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_position" : 166,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276603726,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315245474",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315289405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315289405"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Encapsulate tx state in a TxConfirmation struct\" (8a7d26dc3c69e219a2db8d52980074951aff55a3)\r\n\r\nOn the surface it seems like improved behavior to not consider a transaction conflicted or abandoned when it's in the mempool. So just removing or updating the comment above seems good for that case. If this can mark a transaction not abandoned when it's not actually in the mempool that also seems ok but might be worth noting in a comment.\r\n\r\nIdeally this commit might just be a pure refactor, and behavior changes could be left for other commits or PRs, but I think it's fine to have changes here if they're explicitly noted.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-19T16:01:01Z",
      "diff_hunk" : "@@ -1249,8 +1238,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const uint256\n             CWalletTx wtx(this, ptx);\n \n             // Get merkle branch if transaction was found in a block\n-            if (!block_hash.IsNull())\n-                wtx.SetMerkleBranch(block_hash, posInBlock);\n+            wtx.SetMerkleBranch(state, block_hash, posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315289405",
      "id" : 315289405,
      "in_reply_to_id" : 314782646,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI4OTQwNQ==",
      "original_commit_id" : "7d2a5b39d6751743851957788d61c265eaaf4f36",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276659023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315289405",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315293956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315293956"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Encapsulate tx state in a TxConfirmation struct\" (8a7d26dc3c69e219a2db8d52980074951aff55a3)\r\n\r\nShould we maybe add\r\n\r\n```c++\r\n} else {\r\n    assert(wtx.tx_state.nIndex == wtxIn.tx_state.nIndex);\r\n    assert(wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock);\r\n}\r\n```\r\n\r\nMy concern is that the new behavior might be less robust than previous behavior if there is a bug in higher level code that marks a transaction as confirmed in two different blocks without marking the transaction as unconfirmed in between.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-19T16:11:38Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315293956",
      "id" : 315293956,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI5Mzk1Ng==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_position" : 24,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 276659023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315293956",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315297321"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315297321"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> The variable name `tx_state` is the confusing part, because it's not a TxState\r\n\r\nI think the current naming is ok, but if it I had to choose, I would probably do something like:\r\n\r\n```c++\r\nclass CWalletTx\r\n{\r\npublic:\r\n    enum Status { UNCONFIRMED, CONFIRMED, CONFLICTED, ABANDONED };\r\n    struct Confirmation {\r\n        Status status;\r\n        uint256 block_hash\r\n        int pos_in_block;\r\n    }\r\n    ...\r\n    Confirmation m_confirm;\r\n    ...\r\n};\r\n```",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-19T16:19:59Z",
      "diff_hunk" : "@@ -4628,21 +4617,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_state.hashBlock = block_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315297321",
      "id" : 315297321,
      "in_reply_to_id" : 314978711,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTI5NzMyMQ==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_position" : 166,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276659023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315297321",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315300924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315300924"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Encapsulate tx state in a TxConfirmation struct\" (8a7d26dc3c69e219a2db8d52980074951aff55a3)\r\n\r\nIt seems more safe to reset the whole struct instead of just one member. Maybe `tx_state = TxConfirmation{};`?\r\n\r\nI think there may actually be a (theoretical) bug without this. If you unserialized an unconfirmed transaction into a CWalletTx that was _not_ unconfirmed, deserialization code would not actually update the state to unconfirmed.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-19T16:29:00Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315300924",
      "id" : 315300924,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTMwMDkyNA==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_position" : 26,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276659023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315300924",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315310345"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315310345"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Remove SyncTransaction for conflicted txn in CWallet::BlockConnected\" (3e027c776556c3070a9c3460045a6e397b21ceb8)\r\n\r\nCan we drop these `tx_state.nIndex = 0;` assignments or set them in all cases consistently? (There is a missing assignment in the unconfirmed case). I'd have a slight preference for just dropping these and the Init() call above reset everything to default, instead of repeating same default values multiple places.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-19T16:51:25Z",
      "diff_hunk" : "@@ -513,7 +534,27 @@ class CWalletTx\n         std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n         std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev\n         char dummy_char; //! Used to be fSpent\n-        s >> tx >> hashBlock >> dummy_vector1 >> nIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+        int serializedIndex;\n+        s >> tx >> tx_state.hashBlock >> dummy_vector1 >> serializedIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts\n+         * with. If nIndex == -1 and hashBlock is ABANDON_HASH, it means transaction is abandoned.\n+         * In same context, an nIndex >= 0 refers to a confirmed transaction (if hashBlock set) or\n+         * unconfirmed one. Older clients interpret nIndex == -1 as unconfirmed for backward\n+         * compatibility (pre-commit 9ac63d6).\n+         */\n+        if (serializedIndex == -1 && tx_state.hashBlock == ABANDON_HASH) {\n+            tx_state.nIndex = 0;\n+            tx_state.hashBlock = uint256();\n+            setAbandoned();\n+        } else if (serializedIndex == -1) {\n+            tx_state.nIndex = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315310345",
      "id" : 315310345,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTMxMDM0NQ==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_position" : 95,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 276659023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315310345",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315323037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315323037"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Replaced by `tx_conf` on f9f4926",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-19T17:22:56Z",
      "diff_hunk" : "@@ -4628,21 +4617,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_state.hashBlock = block_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315323037",
      "id" : 315323037,
      "in_reply_to_id" : 314978711,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTMyMzAzNw==",
      "original_commit_id" : "6cc34fc4976505fa6c2b0f4bd8728d7751a550c6",
      "original_position" : 166,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 276701856,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315323037",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315810816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315810816"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Change to `SetMerkleBranch()`?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T17:23:39Z",
      "diff_hunk" : "@@ -249,8 +249,9 @@ BOOST_FIXTURE_TEST_CASE(coin_mark_dirty_immature_credit, TestChain100Setup)\n     LockAssertion lock(::cs_main);\n     LOCK(wallet.cs_wallet);\n \n-    wtx.hashBlock = ::ChainActive().Tip()->GetBlockHash();\n-    wtx.nIndex = 0;\n+    wtx.tx_conf.hashBlock = ::ChainActive().Tip()->GetBlockHash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315810816",
      "id" : 315810816,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgxMDgxNg==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 6,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315810816",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315812394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315812394"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Well strictly speaking, given that Init set to unconfirmed, it would be more wrongly updating to confirmed. But if hash is set IMO we have database corruption or bug in higher tracking logic. Updated serialization logic with this and beneath to make it more robust.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T17:27:22Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_state.hashBlock = uint256();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315812394",
      "id" : 315812394,
      "in_reply_to_id" : 315300924,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgxMjM5NA==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_position" : 26,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277323357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315812394",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315812435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315812435"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T17:27:28Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315812435",
      "id" : 315812435,
      "in_reply_to_id" : 315293956,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgxMjQzNQ==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_position" : 24,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 277323410,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T18:53:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315812435",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315821088"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315821088"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Change to `SetMerkleBranch()`?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T17:46:57Z",
      "diff_hunk" : "@@ -384,8 +384,9 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Something wrong with merkleblock\");\n     }\n \n-    wtx.nIndex = txnIndex;\n-    wtx.hashBlock = merkleBlock.header.GetHash();\n+    wtx.tx_conf.nIndex = txnIndex;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315821088",
      "id" : 315821088,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyMTA4OA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 6,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315821088",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315825109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315825109"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this whole comment can be removed (since you're removing the `SyncTransaction()` call for the conflicting transactions). You could also move the `for (const CTransactionRef& ptx : vtxConflicted)` loop to below the `for (size_t i = 0; i < block.vtx.size(); i++)`, which seems more natural.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T17:55:44Z",
      "diff_hunk" : "@@ -1425,11 +1414,10 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n     // the notification that the conflicted transaction was evicted.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315825109",
      "id" : 315825109,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyNTEwOQ==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 98,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315825109",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315826030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315826030"
         }
      },
      "author_association" : "MEMBER",
      "body" : "micronit: place this at the top of the function (so the order of logic matches the order of the arguments)",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T17:57:44Z",
      "diff_hunk" : "@@ -4628,21 +4616,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_conf.hashBlock = block_hash;\n \n     // set the position of the transaction in the block\n-    nIndex = posInBlock;\n+    tx_conf.nIndex = posInBlock;\n+\n+    // Update tx state",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315826030",
      "id" : 315826030,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyNjAzMA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 173,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315826030",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315826312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315826312"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: could join this and the line below to one line to match current code style guide.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T17:58:24Z",
      "diff_hunk" : "@@ -4628,21 +4616,24 @@ CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n     m_pre_split = false;\n }\n \n-void CWalletTx::SetMerkleBranch(const uint256& block_hash, int posInBlock)\n+void CWalletTx::SetMerkleBranch(TxState state, const uint256& block_hash, int posInBlock)\n {\n     // Update the tx's hashBlock\n-    hashBlock = block_hash;\n+    tx_conf.hashBlock = block_hash;\n \n     // set the position of the transaction in the block\n-    nIndex = posInBlock;\n+    tx_conf.nIndex = posInBlock;\n+\n+    // Update tx state\n+    tx_conf.state = state;\n }\n \n int CWalletTx::GetDepthInMainChain(interfaces::Chain::Lock& locked_chain) const\n {\n-    if (hashUnset())\n+    if (isUnconfirmed() || isAbandoned())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315826312",
      "id" : 315826312,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyNjMxMg==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 180,
      "path" : "src/wallet/wallet.cpp",
      "position" : 186,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315826312",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315828072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315828072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "grammar nits:\r\n\r\n- s/start in the UNCONFIRMED/start as UNCONFIRMED/\r\n- s/they rollback/they roll back/\r\n- s/we update [...] as CONFLICTED/we update [...] to CONFLICTED/\r\n- s/In tx isn't confirmed/If tx isn't confirmed/\r\n- s/switch it to ABANDONED thanks to the abandontransaction call/switch it to ABANDONED by using the abandontransaction call/",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T18:02:20Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315828072",
      "id" : 315828072,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyODA3Mg==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 36,
      "path" : "src/wallet/wallet.h",
      "position" : 36,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315828072",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315829382"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315829382"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I don't think `block index` is well understood to mean 'the transaction's position in the block'. I think explicitly calling it 'a pair of {block hash, tx index in block}' would be clearer.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T18:05:13Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315829382",
      "id" : 315829382,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyOTM4Mg==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 51,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315829382",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315829607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315829607"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this is right. When state is `CONFLICTED`, `nIndex` is set to 0",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T18:05:43Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315829607",
      "id" : 315829607,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgyOTYwNw==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 53,
      "path" : "src/wallet/wallet.h",
      "position" : 54,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315829607",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315830180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315830180"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: in the function calls, `state` comes before `hashBlock` and `nIndex`. I suggest you do the same here for consistency.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T18:07:07Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n      */\n-    int nIndex;\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        int nIndex = 0;\n+        TxState state = UNCONFIRMED;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315830180",
      "id" : 315830180,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgzMDE4MA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 59,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315830180",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315830488"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315830488"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: code style guide says that data members should be named `m_...`",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T18:07:51Z",
      "diff_hunk" : "@@ -477,16 +477,37 @@ class CWalletTx\n         fInMempool = false;\n         nChangeCached = 0;\n         nOrderPos = -1;\n+        tx_conf.hashBlock = uint256();\n     }\n \n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n+\n+    /* New transactions start in the UNCONFIRMED. At BlockConnected,\n+     * they will transition to CONFIRMED. In case of reorg, at BlockDisconnected,\n+     * they rollback to UNCONFIRMED. If we detect a conflicting transaction at\n+     * block connection, we update conflicted tx and its dependencies as CONFLICTED.\n+     * In tx isn't confirmed and outside of mempool, the user may switch it to ABANDONED\n+     * thanks to the abandontransaction call. This last state may be override by a CONFLICTED\n+     * or CONFIRMED transition.\n+     */\n+    enum TxState {\n+        UNCONFIRMED,\n+        CONFIRMED,\n+        CONFLICTED,\n+        ABANDONED\n+    };\n+\n+    /* TxConfirmation includes tx state and a pair of block hash/block index at which tx has been confirmed.\n+     * This pair is both 0 if tx hasn't confirmed yet. Meaning of these fields changes with CONFLICTED state\n+     * where they instead point to block hash and index of the deepest conflicting tx.\n      */\n-    int nIndex;\n+    struct TxConfirmation {\n+        uint256 hashBlock;\n+        int nIndex = 0;\n+        TxState state = UNCONFIRMED;\n+    };\n+\n+    TxConfirmation tx_conf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315830488",
      "id" : 315830488,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgzMDQ4OA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 62,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315830488",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315831474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315831474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I'd prefer to not have these ternary operators in this very long line, since it makes it very difficult to read. I think it'd be clearer if you instantiated two local variables `serialized_hash` and `serialized_index`, and then use them in this serialization line.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T18:10:05Z",
      "diff_hunk" : "@@ -502,7 +523,7 @@ class CWalletTx\n         std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n         std::vector<char> dummy_vector2; //!< Used to be vtxPrev\n         char dummy_char = false; //!< Used to be fSpent\n-        s << tx << hashBlock << dummy_vector1 << nIndex << dummy_vector2 << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << dummy_char;\n+        s << tx << (isAbandoned() ? ABANDON_HASH : tx_conf.hashBlock) << dummy_vector1 << ((isAbandoned() || isConflicted()) ? -1 : tx_conf.nIndex) << dummy_vector2 << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << dummy_char;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315831474",
      "id" : 315831474,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgzMTQ3NA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 71,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315831474",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315831790"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315831790"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: should this be 'any in-wallet ancestor'?",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T18:10:54Z",
      "diff_hunk" : "@@ -513,7 +534,27 @@ class CWalletTx\n         std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n         std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev\n         char dummy_char; //! Used to be fSpent\n-        s >> tx >> hashBlock >> dummy_vector1 >> nIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+        int serializedIndex;\n+        s >> tx >> tx_conf.hashBlock >> dummy_vector1 >> serializedIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\n+\n+        /* At serialization/deserialization, an nIndex == -1 means that hashBlock refers to\n+         * the earliest block in the chain we know this or any in-wallet dependency conflicts",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315831790",
      "id" : 315831790,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgzMTc5MA==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 84,
      "path" : "src/wallet/wallet.h",
      "position" : 84,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315831790",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315840155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315840155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "consider updating this function to also zero out `nIndex` and `hashBlock`",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T18:30:00Z",
      "diff_hunk" : "@@ -607,10 +648,12 @@ class CWalletTx\n      * >0 : is a coinbase transaction which matures in this many blocks\n      */\n     int GetBlocksToMaturity(interfaces::Chain::Lock& locked_chain) const;\n-    bool hashUnset() const { return (hashBlock.IsNull() || hashBlock == ABANDON_HASH); }\n-    bool isAbandoned() const { return (hashBlock == ABANDON_HASH); }\n-    void setAbandoned() { hashBlock = ABANDON_HASH; }\n-\n+    bool isAbandoned() const { return tx_conf.state == CWalletTx::ABANDONED; }\n+    void setAbandoned() { tx_conf.state = CWalletTx::ABANDONED; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315840155",
      "id" : 315840155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg0MDE1NQ==",
      "original_commit_id" : "f9f492638a488149acceb7b6487553862e919028",
      "original_position" : 122,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315840155",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated at 5ef9e95 with @ryanofsky comments. Main changes are a more robust serialization logic and assert for already present txn in AddToWallet. This last one flagged a misbehavior of AddToWallet in ComputeTimeSmart (see commit message), so was worth adding.",
      "created_at" : "2019-08-20T18:57:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-523150156",
      "id" : 523150156,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMzE1MDE1Ng==",
      "updated_at" : "2019-08-20T18:57:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/523150156",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315869597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315869597"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: this function is badly named (and has been since 391dff16fe9ace90fc0f3308a5c63c453370e713 _Do not store Merkle branches in the wallet._). Now would be a good time to rename it to `SetTxConf()` or similar.",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T19:42:34Z",
      "diff_hunk" : "@@ -590,7 +629,7 @@ class CWalletTx\n     // in place.\n     std::set<uint256> GetConflicts() const NO_THREAD_SAFETY_ANALYSIS;\n \n-    void SetMerkleBranch(const uint256& block_hash, int posInBlock);\n+    void SetMerkleBranch(Status status, const uint256& block_hash, int posInBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315869597",
      "id" : 315869597,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg2OTU5Nw==",
      "original_commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "original_position" : 107,
      "path" : "src/wallet/wallet.h",
      "position" : 107,
      "pull_request_review_id" : 277321225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T19:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315869597",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Just nits so far. Still planning on doing a more thorough review.",
      "created_at" : "2019-08-20T19:47:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#issuecomment-523167191",
      "id" : 523167191,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16624",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMzE2NzE5MQ==",
      "updated_at" : "2019-08-20T19:47:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/523167191",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315883326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315883326"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(re: https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315293956)\r\n\r\nI don't like these new asserts. I think they could be triggered if:\r\n\r\n- a wallet tx is confirmed in a block\r\n- the wallet is shut down\r\n- the block chain re-orgs and the tx is included in a different block\r\n- the wallet file is loaded on a sync'ed node\r\n\r\nAll this code is trying to do is update an existing wallet tx's `Confirmation` status with the new `Confirmation` status. I think we can just change it to:\r\n\r\n`if (wtxIn.tx_state.state != wtx.tx_state.state || wtxIn.tx_state.hashBlock != wtx.tx_state.hashBlock || wtxIn.tx_state.nIndex != wtx.tx_state.nIndex) {`",
      "commit_id" : "5ef9e9560bfad887973100022a92bfeaeee1797c",
      "created_at" : "2019-08-20T20:17:44Z",
      "diff_hunk" : "@@ -1118,21 +1118,10 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n+        if (wtxIn.tx_state.state != wtx.tx_state.state) {\n+            wtx.tx_state.state = wtxIn.tx_state.state;\n+            wtx.tx_state.nIndex = wtxIn.tx_state.nIndex;\n+            wtx.tx_state.hashBlock = wtxIn.tx_state.hashBlock;\n             fUpdated = true;\n         }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16624#discussion_r315883326",
      "id" : 315883326,
      "in_reply_to_id" : 315293956,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg4MzMyNg==",
      "original_commit_id" : "8a7d26dc3c69e219a2db8d52980074951aff55a3",
      "original_position" : 24,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 277414677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16624",
      "updated_at" : "2019-08-20T20:17:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315883326",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
