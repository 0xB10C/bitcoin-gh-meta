[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16539](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16539.html) (wallet: lower -txmaxfee default from 0.1 to 0.01 BTC by Sjors)\n* [#16492](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16492.html) (rpc: Add feeRate argument to bumpFee RPC by ezegom)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-08-23T00:51:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16690#issuecomment-524130924",
      "id" : 524130924,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16690",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDEzMDkyNA==",
      "updated_at" : "2019-08-23T00:51:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524130924",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16690#discussion_r316971392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16690"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316971392"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/tweeks/tweaks",
      "commit_id" : "6bc4c7578fff3a42ef1908ef4faf8139c1715939",
      "created_at" : "2019-08-23T04:35:28Z",
      "diff_hunk" : "@@ -64,61 +64,215 @@ platform.\n Notable changes\n ===============\n \n+New user documentation\n+----------------------\n+\n+- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n+  suggests configuration tweeks for running Bitcoin Core on systems with",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16690#discussion_r316971392",
      "id" : 316971392,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk3MTM5Mg==",
      "original_commit_id" : "6bc4c7578fff3a42ef1908ef4faf8139c1715939",
      "original_position" : 8,
      "path" : "doc/release-notes.md",
      "position" : 8,
      "pull_request_review_id" : 278792533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16690",
      "updated_at" : "2019-08-23T06:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316971392",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16690#discussion_r316971723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16690"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316971723"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is not good advise.\r\nBIP37, when connected to your own node, is the most efficient way to get a light wallet without the need of installing middlewares or the need of separate index incompatible with pruning.\r\n\r\nFor this reason, `whitebind` and `whitelist` now support the `bloomfilter` permission, so whitelisted peer can still enjoy BIP37.",
      "commit_id" : "6bc4c7578fff3a42ef1908ef4faf8139c1715939",
      "created_at" : "2019-08-23T04:37:39Z",
      "diff_hunk" : "@@ -64,61 +64,215 @@ platform.\n Notable changes\n ===============\n \n+New user documentation\n+----------------------\n+\n+- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n+  suggests configuration tweeks for running Bitcoin Core on systems with\n+  limited memory. (#16339)\n+\n New RPCs\n --------\n \n - `getbalances` returns an object with all balances (`mine`,\n   `untrusted_pending` and `immature`). Please refer to the RPC help of\n   `getbalances` for details. The new RPC is intended to replace\n-  `getunconfirmedbalance` and the balance fields in `getwalletinfo`, as well as\n-  `getbalance`. The old calls may be removed in a future version.\n+  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n+  `getwalletinfo`.  These old calls and fields may be removed in a\n+  future version. (#15930, #16239)\n+\n+- `setwalletflag` sets and unsets wallet flags that enable or disable\n+  features specific to that existing wallet, such as the new\n+  `avoid_reuse` feature documented elsewhere in these release notes.\n+  (#13756)\n+\n+- `getblockfilter` gets the BIP158 filter for the specified block.  This\n+  RPC is only enabled if block filters have been created using the\n+  `-blockfilterindex` configuration option. (#14121)\n+\n+New settings\n+------------\n+\n+- `-blockfilterindex` enables the creation of BIP158 block filters for\n+  the entire blockchain.  Filters will be created in the background and\n+  currently use about 4 GiB of space.  Note: this version of Bitcoin\n+  Core does not serve block filters over the P2P network, although the\n+  local user may obtain block filters using the `getblockfilter` RPC.\n+  (#14121)\n+\n+Updated settings\n+----------------\n+\n+- `whitebind` and `whitelist` now accept a list of permissions to\n+  provide peers connecting using the indicated interfaces or IP\n+  addresses.  If no permissions are specified with an address or CIDR\n+  network, the implicit default permissions are the same as previous\n+  releases.  See the `bitcoind -help` output for these two options for\n+  details about the available permissions. (#16248)\n \n Updated RPCs\n ------------\n \n Note: some low-level RPC changes mainly useful for testing are described in the\n Low-level Changes section below.\n \n-- The `sendmany` RPC had an argument `minconf` that was not well specified and\n-  would lead to RPC errors even when the wallet's coin selection would succeed.\n-  The `sendtoaddress` RPC never had this check, so to normalize the behavior,\n-  `minconf` is now ignored in `sendmany`. If the coin selection does not\n-  succeed due to missing coins, it will still throw an RPC error. Be reminded\n-  that coin selection is influenced by the `-spendzeroconfchange`,\n-  `-limitancestorcount`, `-limitdescendantcount` and `-walletrejectlongchains`\n-  command line arguments.\n+- `sendmany` no longer has a `minconf` argument.  This argument was not\n+  well specified and would lead to RPC errors even when the wallet's\n+  coin selection succeeded.  Users who want to influence coin selection\n+  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n+  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n+  arguments. (#15596)\n+\n+- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n+  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n+  whether already used addresses should be included in the operation.\n+  Additionally, `sendtoaddress` will avoid partial spends when\n+  `avoid_reuse` is enabled even if this feature is not already enabled\n+  via the `-avoidpartialspends` command line flag because not doing so\n+  would risk using up the \"wrong\" UTXO for an address reuse case.\n+  (#13756)\n+\n+- `listunspent` now returns a \"reused\" bool for each output if the\n+  wallet flag \"avoid_reuse\" is enabled. (#13756)\n+\n+- `getblockstats` now uses BlockUndo data instead of the transaction\n+  index, making it much faster, no longer dependent on the `-txindex`\n+  configuration option, and functional for all non-pruned blocks.\n+  (#14802)\n+\n+- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n+  out input and output scripts and keys when known. P2SH-witness inputs\n+  will be filled in from the UTXO set when a descriptor is provided that\n+  shows they're spending segwit outputs.  See the RPC help text for full\n+  details. (#15427)\n+\n+- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n+  `allowhighfees` parameter to fail mempool acceptance if the\n+  transaction fee exceedes the value of the configuration option\n+  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n+  can be changed when calling either RPC using a `maxfeerate` parameter.\n+  (#15620)\n+\n+- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n+  `getrawmempool` no longer return a `size` field unless the\n+  configuration option `-deprecatedrpc=size` is used.  Instead a new\n+  `vsize` field is returned with the transaction's virtual size\n+  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n+\n+- `getwalletinfo` now includes a `scanning` field that is either `false`\n+  (no scanning) or an object with information about the duration and\n+  progress of the wallet's scanning historical blocks for transactions\n+  affecting its balances. (#15730)\n+\n+- `createwallet` accepts a new `passphrase` parameter.  If set, this\n+  will create the new wallet encrypted with the given passphrase.  If\n+  unset or empty (the default), a warning will be printed and no\n+  encryption will be used. (#16394)\n+\n+- `getmempoolentry` now provides a `weight` field containing the\n+  transaction weight as defined in BIP141. (#16647)\n+\n+- `getdescriptorinfo` now returns an additional `checksum` field\n+  containing the checksum for the unmodified descriptor provided by the\n+  user (that is, before the descriptor is normalized for the\n+  `descriptor` field). (#15986)\n+\n+- `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if the\n+  `-walletrbf` configuration option is set to true. (#15911)\n+\n+GUI changes\n+-----------\n+\n+- Provides bech32 addresses by default.  The user may change the address\n+  during invoice generation using a GUI toggle, or the default address\n+  type may be changed by the `-addresstype` configuration option.\n+  (#15711, #16497)\n+\n+Deprecated or removed configuration options\n+-------------------------------------------\n+\n+- `-mempoolreplacement` is removed, although default node behavior\n+  remains the same.  This option previously allowed the user to prevent\n+  the node from accepting or relaying BIP125 transaction replacements.\n+  This is different from the remaining configuration option\n+  `-walletrbf`. (#16171)\n \n Deprecated or removed RPCs\n --------------------------\n \n-- The `totalFee` option of the `bumpfee` RPC has been deprecated and will be\n-  removed in 0.20.  To continue using this option start with\n-  `-deprecatedrpc=totalFee`.  See the `bumpfee` RPC help text for more details.\n+- `bumpfee` no longer accepts a `totalFee` option unless the\n+  configuration parameter `deprecatedrpc=totalFee` is specified.  This\n+  parameter will be fully removed in a subsequent release. (#15996)\n+\n+- `generate` is now removed after being deprecated in Bitcoin Core 0.18.\n+  Use the `generatetoaddress` RPC instead. (#15492)\n+\n+P2P changes\n+-----------\n+\n+- BIP 61 reject messages were deprecated in v0.18. They are now disabled\n+  by default, but can be enabled by setting the `-enablebip61` command\n+  line option.  BIP 61 reject messages will be removed entirely in a\n+  future version of Bitcoin Core. (#14054)\n+\n+- The default value for the `-peerbloomfilters` configuration option\n+  (and, thus, BIP37/BIP111 NODE_BLOOM support) has been changed to false.\n+  This eliminates well-known DoS vectors in Bitcoin Core, especially for\n+  nodes with spinning disks. Other software should still be able to\n+  connect to older versions of Bitcoin Core and users who have manually\n+  enabled NODE_BLOOM support for the near future, but developers of such\n+  software should consider migrating to an alternative over the coming\n+  years. (#16152)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16690#discussion_r316971723",
      "id" : 316971723,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk3MTcyMw==",
      "original_commit_id" : "6bc4c7578fff3a42ef1908ef4faf8139c1715939",
      "original_position" : 175,
      "path" : "doc/release-notes.md",
      "position" : 175,
      "pull_request_review_id" : 278792945,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16690",
      "updated_at" : "2019-08-23T04:37:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316971723",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16690#discussion_r316973298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16690"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316973298"
         }
      },
      "author_association" : "MEMBER",
      "body" : ">  a warning will be printed\r\n\r\nI only see a warning calling `src/bitcoin-cli createwallet \"test\" false false \"\" false` (i.e empty passphrase).\r\nNot in the `src/bitcoin-cli createwallet \"test\"` (unset?) case.",
      "commit_id" : "6bc4c7578fff3a42ef1908ef4faf8139c1715939",
      "created_at" : "2019-08-23T04:49:58Z",
      "diff_hunk" : "@@ -64,61 +64,215 @@ platform.\n Notable changes\n ===============\n \n+New user documentation\n+----------------------\n+\n+- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n+  suggests configuration tweeks for running Bitcoin Core on systems with\n+  limited memory. (#16339)\n+\n New RPCs\n --------\n \n - `getbalances` returns an object with all balances (`mine`,\n   `untrusted_pending` and `immature`). Please refer to the RPC help of\n   `getbalances` for details. The new RPC is intended to replace\n-  `getunconfirmedbalance` and the balance fields in `getwalletinfo`, as well as\n-  `getbalance`. The old calls may be removed in a future version.\n+  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n+  `getwalletinfo`.  These old calls and fields may be removed in a\n+  future version. (#15930, #16239)\n+\n+- `setwalletflag` sets and unsets wallet flags that enable or disable\n+  features specific to that existing wallet, such as the new\n+  `avoid_reuse` feature documented elsewhere in these release notes.\n+  (#13756)\n+\n+- `getblockfilter` gets the BIP158 filter for the specified block.  This\n+  RPC is only enabled if block filters have been created using the\n+  `-blockfilterindex` configuration option. (#14121)\n+\n+New settings\n+------------\n+\n+- `-blockfilterindex` enables the creation of BIP158 block filters for\n+  the entire blockchain.  Filters will be created in the background and\n+  currently use about 4 GiB of space.  Note: this version of Bitcoin\n+  Core does not serve block filters over the P2P network, although the\n+  local user may obtain block filters using the `getblockfilter` RPC.\n+  (#14121)\n+\n+Updated settings\n+----------------\n+\n+- `whitebind` and `whitelist` now accept a list of permissions to\n+  provide peers connecting using the indicated interfaces or IP\n+  addresses.  If no permissions are specified with an address or CIDR\n+  network, the implicit default permissions are the same as previous\n+  releases.  See the `bitcoind -help` output for these two options for\n+  details about the available permissions. (#16248)\n \n Updated RPCs\n ------------\n \n Note: some low-level RPC changes mainly useful for testing are described in the\n Low-level Changes section below.\n \n-- The `sendmany` RPC had an argument `minconf` that was not well specified and\n-  would lead to RPC errors even when the wallet's coin selection would succeed.\n-  The `sendtoaddress` RPC never had this check, so to normalize the behavior,\n-  `minconf` is now ignored in `sendmany`. If the coin selection does not\n-  succeed due to missing coins, it will still throw an RPC error. Be reminded\n-  that coin selection is influenced by the `-spendzeroconfchange`,\n-  `-limitancestorcount`, `-limitdescendantcount` and `-walletrejectlongchains`\n-  command line arguments.\n+- `sendmany` no longer has a `minconf` argument.  This argument was not\n+  well specified and would lead to RPC errors even when the wallet's\n+  coin selection succeeded.  Users who want to influence coin selection\n+  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n+  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n+  arguments. (#15596)\n+\n+- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n+  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n+  whether already used addresses should be included in the operation.\n+  Additionally, `sendtoaddress` will avoid partial spends when\n+  `avoid_reuse` is enabled even if this feature is not already enabled\n+  via the `-avoidpartialspends` command line flag because not doing so\n+  would risk using up the \"wrong\" UTXO for an address reuse case.\n+  (#13756)\n+\n+- `listunspent` now returns a \"reused\" bool for each output if the\n+  wallet flag \"avoid_reuse\" is enabled. (#13756)\n+\n+- `getblockstats` now uses BlockUndo data instead of the transaction\n+  index, making it much faster, no longer dependent on the `-txindex`\n+  configuration option, and functional for all non-pruned blocks.\n+  (#14802)\n+\n+- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n+  out input and output scripts and keys when known. P2SH-witness inputs\n+  will be filled in from the UTXO set when a descriptor is provided that\n+  shows they're spending segwit outputs.  See the RPC help text for full\n+  details. (#15427)\n+\n+- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n+  `allowhighfees` parameter to fail mempool acceptance if the\n+  transaction fee exceedes the value of the configuration option\n+  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n+  can be changed when calling either RPC using a `maxfeerate` parameter.\n+  (#15620)\n+\n+- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n+  `getrawmempool` no longer return a `size` field unless the\n+  configuration option `-deprecatedrpc=size` is used.  Instead a new\n+  `vsize` field is returned with the transaction's virtual size\n+  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n+\n+- `getwalletinfo` now includes a `scanning` field that is either `false`\n+  (no scanning) or an object with information about the duration and\n+  progress of the wallet's scanning historical blocks for transactions\n+  affecting its balances. (#15730)\n+\n+- `createwallet` accepts a new `passphrase` parameter.  If set, this\n+  will create the new wallet encrypted with the given passphrase.  If\n+  unset or empty (the default), a warning will be printed and no",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16690#discussion_r316973298",
      "id" : 316973298,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk3MzI5OA==",
      "original_commit_id" : "6bc4c7578fff3a42ef1908ef4faf8139c1715939",
      "original_position" : 116,
      "path" : "doc/release-notes.md",
      "position" : 116,
      "pull_request_review_id" : 278792533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16690",
      "updated_at" : "2019-08-23T06:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316973298",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16690#discussion_r316977480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16690"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316977480"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'll add a mention of the bloomfilter permission (the ability to specify per-peer/network/interface options via white\\* is already mentioned in the document).\r\n\r\nThat said, I'm skeptical of your argument.  For privacy, BIP37 needs to be over a secure private link (e.g. authenticated and encrypted), and if you have that, you can just run the wallet RPCs for even higher efficiency than BIP37 with minimal false positives.  Your pruning argument doesn't make sense to me (BIP37 needs full blocks, so it has problems with pruning that BIP158 doesn't---with BIP158, you can create the block filter and then throw away the full block and undo data); if you're thinking about Electrum-style indexes or Electrum Personal Server rescanning, BIP37 seems equivalent in problems related to pruning).  This is probably off-topic for release notes discussion, though, so DM me on IRC or poke me in #bitcoin if you're bored and want to debate it.  :-)",
      "commit_id" : "6bc4c7578fff3a42ef1908ef4faf8139c1715939",
      "created_at" : "2019-08-23T05:19:41Z",
      "diff_hunk" : "@@ -64,61 +64,215 @@ platform.\n Notable changes\n ===============\n \n+New user documentation\n+----------------------\n+\n+- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n+  suggests configuration tweeks for running Bitcoin Core on systems with\n+  limited memory. (#16339)\n+\n New RPCs\n --------\n \n - `getbalances` returns an object with all balances (`mine`,\n   `untrusted_pending` and `immature`). Please refer to the RPC help of\n   `getbalances` for details. The new RPC is intended to replace\n-  `getunconfirmedbalance` and the balance fields in `getwalletinfo`, as well as\n-  `getbalance`. The old calls may be removed in a future version.\n+  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n+  `getwalletinfo`.  These old calls and fields may be removed in a\n+  future version. (#15930, #16239)\n+\n+- `setwalletflag` sets and unsets wallet flags that enable or disable\n+  features specific to that existing wallet, such as the new\n+  `avoid_reuse` feature documented elsewhere in these release notes.\n+  (#13756)\n+\n+- `getblockfilter` gets the BIP158 filter for the specified block.  This\n+  RPC is only enabled if block filters have been created using the\n+  `-blockfilterindex` configuration option. (#14121)\n+\n+New settings\n+------------\n+\n+- `-blockfilterindex` enables the creation of BIP158 block filters for\n+  the entire blockchain.  Filters will be created in the background and\n+  currently use about 4 GiB of space.  Note: this version of Bitcoin\n+  Core does not serve block filters over the P2P network, although the\n+  local user may obtain block filters using the `getblockfilter` RPC.\n+  (#14121)\n+\n+Updated settings\n+----------------\n+\n+- `whitebind` and `whitelist` now accept a list of permissions to\n+  provide peers connecting using the indicated interfaces or IP\n+  addresses.  If no permissions are specified with an address or CIDR\n+  network, the implicit default permissions are the same as previous\n+  releases.  See the `bitcoind -help` output for these two options for\n+  details about the available permissions. (#16248)\n \n Updated RPCs\n ------------\n \n Note: some low-level RPC changes mainly useful for testing are described in the\n Low-level Changes section below.\n \n-- The `sendmany` RPC had an argument `minconf` that was not well specified and\n-  would lead to RPC errors even when the wallet's coin selection would succeed.\n-  The `sendtoaddress` RPC never had this check, so to normalize the behavior,\n-  `minconf` is now ignored in `sendmany`. If the coin selection does not\n-  succeed due to missing coins, it will still throw an RPC error. Be reminded\n-  that coin selection is influenced by the `-spendzeroconfchange`,\n-  `-limitancestorcount`, `-limitdescendantcount` and `-walletrejectlongchains`\n-  command line arguments.\n+- `sendmany` no longer has a `minconf` argument.  This argument was not\n+  well specified and would lead to RPC errors even when the wallet's\n+  coin selection succeeded.  Users who want to influence coin selection\n+  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n+  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n+  arguments. (#15596)\n+\n+- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n+  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n+  whether already used addresses should be included in the operation.\n+  Additionally, `sendtoaddress` will avoid partial spends when\n+  `avoid_reuse` is enabled even if this feature is not already enabled\n+  via the `-avoidpartialspends` command line flag because not doing so\n+  would risk using up the \"wrong\" UTXO for an address reuse case.\n+  (#13756)\n+\n+- `listunspent` now returns a \"reused\" bool for each output if the\n+  wallet flag \"avoid_reuse\" is enabled. (#13756)\n+\n+- `getblockstats` now uses BlockUndo data instead of the transaction\n+  index, making it much faster, no longer dependent on the `-txindex`\n+  configuration option, and functional for all non-pruned blocks.\n+  (#14802)\n+\n+- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n+  out input and output scripts and keys when known. P2SH-witness inputs\n+  will be filled in from the UTXO set when a descriptor is provided that\n+  shows they're spending segwit outputs.  See the RPC help text for full\n+  details. (#15427)\n+\n+- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n+  `allowhighfees` parameter to fail mempool acceptance if the\n+  transaction fee exceedes the value of the configuration option\n+  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n+  can be changed when calling either RPC using a `maxfeerate` parameter.\n+  (#15620)\n+\n+- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n+  `getrawmempool` no longer return a `size` field unless the\n+  configuration option `-deprecatedrpc=size` is used.  Instead a new\n+  `vsize` field is returned with the transaction's virtual size\n+  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n+\n+- `getwalletinfo` now includes a `scanning` field that is either `false`\n+  (no scanning) or an object with information about the duration and\n+  progress of the wallet's scanning historical blocks for transactions\n+  affecting its balances. (#15730)\n+\n+- `createwallet` accepts a new `passphrase` parameter.  If set, this\n+  will create the new wallet encrypted with the given passphrase.  If\n+  unset or empty (the default), a warning will be printed and no\n+  encryption will be used. (#16394)\n+\n+- `getmempoolentry` now provides a `weight` field containing the\n+  transaction weight as defined in BIP141. (#16647)\n+\n+- `getdescriptorinfo` now returns an additional `checksum` field\n+  containing the checksum for the unmodified descriptor provided by the\n+  user (that is, before the descriptor is normalized for the\n+  `descriptor` field). (#15986)\n+\n+- `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if the\n+  `-walletrbf` configuration option is set to true. (#15911)\n+\n+GUI changes\n+-----------\n+\n+- Provides bech32 addresses by default.  The user may change the address\n+  during invoice generation using a GUI toggle, or the default address\n+  type may be changed by the `-addresstype` configuration option.\n+  (#15711, #16497)\n+\n+Deprecated or removed configuration options\n+-------------------------------------------\n+\n+- `-mempoolreplacement` is removed, although default node behavior\n+  remains the same.  This option previously allowed the user to prevent\n+  the node from accepting or relaying BIP125 transaction replacements.\n+  This is different from the remaining configuration option\n+  `-walletrbf`. (#16171)\n \n Deprecated or removed RPCs\n --------------------------\n \n-- The `totalFee` option of the `bumpfee` RPC has been deprecated and will be\n-  removed in 0.20.  To continue using this option start with\n-  `-deprecatedrpc=totalFee`.  See the `bumpfee` RPC help text for more details.\n+- `bumpfee` no longer accepts a `totalFee` option unless the\n+  configuration parameter `deprecatedrpc=totalFee` is specified.  This\n+  parameter will be fully removed in a subsequent release. (#15996)\n+\n+- `generate` is now removed after being deprecated in Bitcoin Core 0.18.\n+  Use the `generatetoaddress` RPC instead. (#15492)\n+\n+P2P changes\n+-----------\n+\n+- BIP 61 reject messages were deprecated in v0.18. They are now disabled\n+  by default, but can be enabled by setting the `-enablebip61` command\n+  line option.  BIP 61 reject messages will be removed entirely in a\n+  future version of Bitcoin Core. (#14054)\n+\n+- The default value for the `-peerbloomfilters` configuration option\n+  (and, thus, BIP37/BIP111 NODE_BLOOM support) has been changed to false.\n+  This eliminates well-known DoS vectors in Bitcoin Core, especially for\n+  nodes with spinning disks. Other software should still be able to\n+  connect to older versions of Bitcoin Core and users who have manually\n+  enabled NODE_BLOOM support for the near future, but developers of such\n+  software should consider migrating to an alternative over the coming\n+  years. (#16152)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16690#discussion_r316977480",
      "id" : 316977480,
      "in_reply_to_id" : 316971723,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk3NzQ4MA==",
      "original_commit_id" : "6bc4c7578fff3a42ef1908ef4faf8139c1715939",
      "original_position" : 175,
      "path" : "doc/release-notes.md",
      "position" : 175,
      "pull_request_review_id" : 278800059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16690",
      "updated_at" : "2019-08-23T05:19:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316977480",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16690#discussion_r316998089"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16690"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316998089"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is the second comma redundant?",
      "commit_id" : "6bc4c7578fff3a42ef1908ef4faf8139c1715939",
      "created_at" : "2019-08-23T07:02:12Z",
      "diff_hunk" : "@@ -64,61 +64,215 @@ platform.\n Notable changes\n ===============\n \n+New user documentation\n+----------------------\n+\n+- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n+  suggests configuration tweeks for running Bitcoin Core on systems with\n+  limited memory. (#16339)\n+\n New RPCs\n --------\n \n - `getbalances` returns an object with all balances (`mine`,\n   `untrusted_pending` and `immature`). Please refer to the RPC help of\n   `getbalances` for details. The new RPC is intended to replace\n-  `getunconfirmedbalance` and the balance fields in `getwalletinfo`, as well as\n-  `getbalance`. The old calls may be removed in a future version.\n+  `getbalance`, `getunconfirmedbalance`, and the balance fields in",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16690#discussion_r316998089",
      "id" : 316998089,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk5ODA4OQ==",
      "original_commit_id" : "6bc4c7578fff3a42ef1908ef4faf8139c1715939",
      "original_position" : 19,
      "path" : "doc/release-notes.md",
      "position" : 19,
      "pull_request_review_id" : 278826574,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16690",
      "updated_at" : "2019-08-23T07:02:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316998089",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
