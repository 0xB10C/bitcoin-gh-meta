[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316934773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316934773"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Compiling without including transaction header (already included in txmempool.h)",
      "commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "created_at" : "2019-08-23T00:21:43Z",
      "diff_hunk" : "@@ -5,9 +5,13 @@\n \n #include <validationinterface.h>\n \n+#include <chain.h>\n+#include <logging.h>\n #include <primitives/block.h>\n+#include <primitives/transaction.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316934773",
      "id" : 316934773,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjkzNDc3Mw==",
      "original_commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "original_position" : 7,
      "path" : "src/validationinterface.cpp",
      "position" : 7,
      "pull_request_review_id" : 278747465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688",
      "updated_at" : "2019-08-23T01:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316934773",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16365](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16365.html) (Log RPC parameters (arguments) if -debug=rpcparams by LarryRuane)\n* [#16324](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16324.html) (Get cs_main out of the critical path in ProcessMessages by TheBlueMatt)\n* [#16323](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16323.html) (Call ProcessNewBlock() asynchronously by TheBlueMatt)\n* [#15931](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15931.html) (Remove GetDepthInMainChain dependency on locked chain interface by ariard)\n* [#15805](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15805.html) (log: Increase signal-to-noise in bitcoind standard output. Don't print debug output \"Pre-allocating to position ...\" and \"Leaving block file ...\" when running with -nodebug (default). by practicalswift)\n* [#15606](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15606.html) ([experimental] UTXO snapshots by jamesob)\n* [#14384](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14384.html) (Fire TransactionRemovedFromMempool callbacks from mempool by l2a5b1)\n* [#14053](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14053.html) (Add address-based index (attempt 4?) by marcinja)\n* [#10102](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10102.html) ([experimental] Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-08-23T00:52:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16688#issuecomment-524131064",
      "id" : 524131064,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16688",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNDEzMTA2NA==",
      "updated_at" : "2019-08-23T00:52:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524131064",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316940139"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316940139"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What's the rational defining func instead of directly as LogPrint arg ?",
      "commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "created_at" : "2019-08-23T00:56:46Z",
      "diff_hunk" : "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316940139",
      "id" : 316940139,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk0MDEzOQ==",
      "original_commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "original_position" : 19,
      "path" : "src/validationinterface.cpp",
      "position" : 41,
      "pull_request_review_id" : 278747465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688",
      "updated_at" : "2019-08-23T01:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316940139",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316940553"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316940553"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could you use a ternary to check pindexFork instead of two call to LogPrint? Also fInitialDownload could be logged",
      "commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "created_at" : "2019-08-23T00:59:03Z",
      "diff_hunk" : "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316940553",
      "id" : 316940553,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk0MDU1Mw==",
      "original_commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "original_position" : 21,
      "path" : "src/validationinterface.cpp",
      "position" : 43,
      "pull_request_review_id" : 278747465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688",
      "updated_at" : "2019-08-23T01:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316940553",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316941180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316941180"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks to pindex, maybe log the height too",
      "commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "created_at" : "2019-08-23T01:03:00Z",
      "diff_hunk" : "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: new block hash=%s\\n\", func, pindexNew->GetBlockHash().ToString());\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n     });\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n         m_internals->TransactionAddedToMempool(ptx);\n     });\n }\n \n void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        auto func = __func__;\n+        m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+            LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n             m_internals->TransactionRemovedFromMempool(ptx);\n         });\n     }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pblock, pindex, pvtxConflicted, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, pblock->GetHash().ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316941180",
      "id" : 316941180,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk0MTE4MA==",
      "original_commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "original_position" : 51,
      "path" : "src/validationinterface.cpp",
      "position" : 72,
      "pull_request_review_id" : 278747465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688",
      "updated_at" : "2019-08-23T01:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316941180",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316942251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316942251"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: maybe \"top block hash %s bottom block hash\"",
      "commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "created_at" : "2019-08-23T01:09:35Z",
      "diff_hunk" : "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: new block hash=%s\\n\", func, pindexNew->GetBlockHash().ToString());\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n     });\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n         m_internals->TransactionAddedToMempool(ptx);\n     });\n }\n \n void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        auto func = __func__;\n+        m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+            LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n             m_internals->TransactionRemovedFromMempool(ptx);\n         });\n     }\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pblock, pindex, pvtxConflicted, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, pblock->GetHash().ToString());\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n     });\n }\n \n void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock> &pblock) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pblock, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, pblock->GetHash().ToString());\n         m_internals->BlockDisconnected(pblock);\n     });\n }\n \n void CMainSignals::ChainStateFlushed(const CBlockLocator &locator) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([locator, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, locator, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: block hash=%s\\n\", func, locator.IsNull() ? \"null\" : locator.vHave.front().ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316942251",
      "id" : 316942251,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk0MjI1MQ==",
      "original_commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "original_position" : 69,
      "path" : "src/validationinterface.cpp",
      "position" : 90,
      "pull_request_review_id" : 278747465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688",
      "updated_at" : "2019-08-23T01:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316942251",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316942492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316942492"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You may add MemPoolRemovalReasonString somewhere, like TransactionErrorString in util/error.cp. IMO that's an interesting info to log",
      "commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "created_at" : "2019-08-23T01:11:03Z",
      "diff_hunk" : "@@ -133,47 +137,62 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, pindexNew, pindexFork, fInitialDownload, this] {\n+        if (pindexFork) LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: fork block hash=%s\\n\", func, pindexFork->GetBlockHash().ToString());\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: new block hash=%s\\n\", func, pindexNew->GetBlockHash().ToString());\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n     });\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto func = __func__;\n+    m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+        LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());\n         m_internals->TransactionAddedToMempool(ptx);\n     });\n }\n \n void CMainSignals::TransactionRemovedFromMempool(CTransactionRef ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        auto func = __func__;\n+        m_internals->m_schedulerClient.AddToProcessQueue([func, ptx, this] {\n+            LogPrint(BCLog::VALIDATIONINTERFACE, \"%s: tx hash=%s\\n\", func, ptx->GetHash().ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16688#discussion_r316942492",
      "id" : 316942492,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk0MjQ5Mg==",
      "original_commit_id" : "e13e0f85dcb4c7f2f682c9baa19445ee9f4dc98b",
      "original_position" : 41,
      "path" : "src/validationinterface.cpp",
      "position" : 62,
      "pull_request_review_id" : 278747465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16688",
      "updated_at" : "2019-08-23T01:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316942492",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
