[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18354 (Protect wallet by using shared pointers by bvbfan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-12-05T22:21:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-562345098",
      "id" : 562345098,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MjM0NTA5OA==",
      "updated_at" : "2020-05-01T13:57:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562345098",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355111113"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355111113"
         }
      },
      "author_association" : "NONE",
      "body" : "should `index` and `internal` be made `const` too? ",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-07T09:22:41Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355111113",
      "id" : 355111113,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTExMTExMw==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 283,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328547913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355111113",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1986950?v=4",
         "events_url" : "https://api.github.com/users/paymog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paymog/followers",
         "following_url" : "https://api.github.com/users/paymog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paymog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paymog",
         "id" : 1986950,
         "login" : "paymog",
         "node_id" : "MDQ6VXNlcjE5ODY5NTA=",
         "organizations_url" : "https://api.github.com/users/paymog/orgs",
         "received_events_url" : "https://api.github.com/users/paymog/received_events",
         "repos_url" : "https://api.github.com/users/paymog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paymog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paymog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paymog"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355111471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355111471"
         }
      },
      "author_association" : "NONE",
      "body" : "Documentation for the function would be nice, whether here or in the header file. What does this function do? What does the return value mean?",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-07T09:29:58Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355111471",
      "id" : 355111471,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTExMTQ3MQ==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 283,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328547913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355111471",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1986950?v=4",
         "events_url" : "https://api.github.com/users/paymog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paymog/followers",
         "following_url" : "https://api.github.com/users/paymog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paymog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paymog",
         "id" : 1986950,
         "login" : "paymog",
         "node_id" : "MDQ6VXNlcjE5ODY5NTA=",
         "organizations_url" : "https://api.github.com/users/paymog/orgs",
         "received_events_url" : "https://api.github.com/users/paymog/received_events",
         "repos_url" : "https://api.github.com/users/paymog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paymog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paymog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paymog"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355111542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355111542"
         }
      },
      "author_association" : "NONE",
      "body" : "`const`? Seems like this isn't be modified later in the function",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-07T09:31:26Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_wallet);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355111542",
      "id" : 355111542,
      "line" : 304,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTExMTU0Mg==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 304,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 15,
      "pull_request_review_id" : 328547913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355111542",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1986950?v=4",
         "events_url" : "https://api.github.com/users/paymog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paymog/followers",
         "following_url" : "https://api.github.com/users/paymog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paymog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paymog",
         "id" : 1986950,
         "login" : "paymog",
         "node_id" : "MDQ6VXNlcjE5ODY5NTA=",
         "organizations_url" : "https://api.github.com/users/paymog/orgs",
         "received_events_url" : "https://api.github.com/users/paymog/received_events",
         "repos_url" : "https://api.github.com/users/paymog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paymog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paymog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paymog"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355112025"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355112025"
         }
      },
      "author_association" : "NONE",
      "body" : "should the type on the left hand side be `int64_t`? It seems `GetArg` returns that type and you're casting `0` to that type too: https://github.com/bitcoin/bitcoin/blob/23cecd6cd56f952c757f469c46d7593c2ffaa419/src/util/system.h#L234",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-07T09:40:37Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_wallet);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    unsigned int target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355112025",
      "id" : 355112025,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTExMjAyNQ==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 292,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328547913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355112025",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1986950?v=4",
         "events_url" : "https://api.github.com/users/paymog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paymog/followers",
         "following_url" : "https://api.github.com/users/paymog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paymog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paymog",
         "id" : 1986950,
         "login" : "paymog",
         "node_id" : "MDQ6VXNlcjE5ODY5NTA=",
         "organizations_url" : "https://api.github.com/users/paymog/orgs",
         "received_events_url" : "https://api.github.com/users/paymog/received_events",
         "repos_url" : "https://api.github.com/users/paymog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paymog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paymog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paymog"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355112076"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355112076"
         }
      },
      "author_association" : "NONE",
      "body" : "`(int64_t) 0` is used twice now, should it be made into a constant?",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-07T09:42:06Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_wallet);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    unsigned int target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+\n+    // \"size\" of the keypools. Not really the size, actually the difference between index and the chain counter\n+    int64_t kp_size = (internal ? chain.nInternalChainCounter : chain.nExternalChainCounter) - index;\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    // available is determined based on the index given\n+    int64_t missing = std::max(std::max((int64_t) target_size, (int64_t) 1) - kp_size, (int64_t) 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355112076",
      "id" : 355112076,
      "line" : 315,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTExMjA3Ng==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 315,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 26,
      "pull_request_review_id" : 328547913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355112076",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1986950?v=4",
         "events_url" : "https://api.github.com/users/paymog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paymog/followers",
         "following_url" : "https://api.github.com/users/paymog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paymog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paymog",
         "id" : 1986950,
         "login" : "paymog",
         "node_id" : "MDQ6VXNlcjE5ODY5NTA=",
         "organizations_url" : "https://api.github.com/users/paymog/orgs",
         "received_events_url" : "https://api.github.com/users/paymog/received_events",
         "repos_url" : "https://api.github.com/users/paymog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paymog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paymog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paymog"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355112156"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355112156"
         }
      },
      "author_association" : "NONE",
      "body" : "is this missing a termination condition?",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-07T09:44:10Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_wallet);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    unsigned int target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+\n+    // \"size\" of the keypools. Not really the size, actually the difference between index and the chain counter\n+    int64_t kp_size = (internal ? chain.nInternalChainCounter : chain.nExternalChainCounter) - index;\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    // available is determined based on the index given\n+    int64_t missing = std::max(std::max((int64_t) target_size, (int64_t) 1) - kp_size, (int64_t) 0);\n+\n+    WalletBatch batch(m_storage.GetDatabase());\n+    for (int64_t i = missing; i--;)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355112156",
      "id" : 355112156,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTExMjE1Ng==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 303,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328547913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355112156",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1986950?v=4",
         "events_url" : "https://api.github.com/users/paymog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paymog/followers",
         "following_url" : "https://api.github.com/users/paymog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paymog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paymog",
         "id" : 1986950,
         "login" : "paymog",
         "node_id" : "MDQ6VXNlcjE5ODY5NTA=",
         "organizations_url" : "https://api.github.com/users/paymog/orgs",
         "received_events_url" : "https://api.github.com/users/paymog/received_events",
         "repos_url" : "https://api.github.com/users/paymog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paymog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paymog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paymog"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355170609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355170609"
         }
      },
      "author_association" : "NONE",
      "body" : "sanity check: should this be `hdChain` or `chain`?",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T09:03:09Z",
      "diff_hunk" : "@@ -732,12 +787,27 @@ bool LegacyScriptPubKeyMan::AddWatchOnly(const CScript& dest, int64_t nCreateTim\n void LegacyScriptPubKeyMan::SetHDChain(const CHDChain& chain, bool memonly)\n {\n     LOCK(cs_wallet);\n-    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain))\n-        throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+    if (!memonly) {\n+        if (!WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+        }\n+        if (!hdChain.seed_id.IsNull()) {\n+            AddInactiveHDChain(hdChain, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355170609",
      "id" : 355170609,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTE3MDYwOQ==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 796,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328547913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355170609",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1986950?v=4",
         "events_url" : "https://api.github.com/users/paymog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paymog/followers",
         "following_url" : "https://api.github.com/users/paymog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paymog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paymog",
         "id" : 1986950,
         "login" : "paymog",
         "node_id" : "MDQ6VXNlcjE5ODY5NTA=",
         "organizations_url" : "https://api.github.com/users/paymog/orgs",
         "received_events_url" : "https://api.github.com/users/paymog/received_events",
         "repos_url" : "https://api.github.com/users/paymog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paymog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paymog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paymog"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355170663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355170663"
         }
      },
      "author_association" : "NONE",
      "body" : "should we check if `chain.seed_id` is null here? ",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T09:04:15Z",
      "diff_hunk" : "@@ -732,12 +787,27 @@ bool LegacyScriptPubKeyMan::AddWatchOnly(const CScript& dest, int64_t nCreateTim\n void LegacyScriptPubKeyMan::SetHDChain(const CHDChain& chain, bool memonly)\n {\n     LOCK(cs_wallet);\n-    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain))\n-        throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+    if (!memonly) {\n+        if (!WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+        }\n+        if (!hdChain.seed_id.IsNull()) {\n+            AddInactiveHDChain(hdChain, false);\n+        }\n+    }\n \n     hdChain = chain;\n }\n \n+void LegacyScriptPubKeyMan::AddInactiveHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteInactiveHDChain(chain))\n+        throw std::runtime_error(std::string(__func__) + \": writing inactive chain failed\");\n+\n+    m_inactive_hd_chains[chain.seed_id] = chain;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355170663",
      "id" : 355170663,
      "line" : 906,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTE3MDY2Mw==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 906,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 89,
      "pull_request_review_id" : 328547913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355170663",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1986950?v=4",
         "events_url" : "https://api.github.com/users/paymog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paymog/followers",
         "following_url" : "https://api.github.com/users/paymog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paymog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paymog",
         "id" : 1986950,
         "login" : "paymog",
         "node_id" : "MDQ6VXNlcjE5ODY5NTA=",
         "organizations_url" : "https://api.github.com/users/paymog/orgs",
         "received_events_url" : "https://api.github.com/users/paymog/received_events",
         "repos_url" : "https://api.github.com/users/paymog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paymog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paymog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paymog"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355171237"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355171237"
         }
      },
      "author_association" : "NONE",
      "body" : "I'm new to Bitcoin and I'm still learning the testing standards - should there be a test where this exception is expected to be thrown?",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T09:12:33Z",
      "diff_hunk" : "@@ -732,12 +787,27 @@ bool LegacyScriptPubKeyMan::AddWatchOnly(const CScript& dest, int64_t nCreateTim\n void LegacyScriptPubKeyMan::SetHDChain(const CHDChain& chain, bool memonly)\n {\n     LOCK(cs_wallet);\n-    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain))\n-        throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+    if (!memonly) {\n+        if (!WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355171237",
      "id" : 355171237,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTE3MTIzNw==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 897,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328547913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355171237",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1986950?v=4",
         "events_url" : "https://api.github.com/users/paymog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paymog/followers",
         "following_url" : "https://api.github.com/users/paymog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paymog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paymog",
         "id" : 1986950,
         "login" : "paymog",
         "node_id" : "MDQ6VXNlcjE5ODY5NTA=",
         "organizations_url" : "https://api.github.com/users/paymog/orgs",
         "received_events_url" : "https://api.github.com/users/paymog/received_events",
         "repos_url" : "https://api.github.com/users/paymog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paymog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paymog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paymog"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355199686"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355199686"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No. This is only expected to be thrown under corruption and/or hardware failure conditions.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T16:56:33Z",
      "diff_hunk" : "@@ -732,12 +787,27 @@ bool LegacyScriptPubKeyMan::AddWatchOnly(const CScript& dest, int64_t nCreateTim\n void LegacyScriptPubKeyMan::SetHDChain(const CHDChain& chain, bool memonly)\n {\n     LOCK(cs_wallet);\n-    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain))\n-        throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+    if (!memonly) {\n+        if (!WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355199686",
      "id" : 355199686,
      "in_reply_to_id" : 355171237,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTE5OTY4Ng==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 897,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328620017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355199686",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355199870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355199870"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it really matters. They are not references and are primitives.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T16:59:21Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355199870",
      "id" : 355199870,
      "in_reply_to_id" : 355111113,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTE5OTg3MA==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 283,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328620165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355199870",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355200192"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355200192"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`GenerateNewKey` modifies it.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T17:04:27Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_wallet);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355200192",
      "id" : 355200192,
      "in_reply_to_id" : 355111542,
      "line" : 304,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIwMDE5Mg==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 304,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 15,
      "pull_request_review_id" : 328620430,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355200192",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355200227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355200227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it's worth it.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T17:05:01Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_wallet);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    unsigned int target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+\n+    // \"size\" of the keypools. Not really the size, actually the difference between index and the chain counter\n+    int64_t kp_size = (internal ? chain.nInternalChainCounter : chain.nExternalChainCounter) - index;\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    // available is determined based on the index given\n+    int64_t missing = std::max(std::max((int64_t) target_size, (int64_t) 1) - kp_size, (int64_t) 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355200227",
      "id" : 355200227,
      "in_reply_to_id" : 355112076,
      "line" : 315,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIwMDIyNw==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 315,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 26,
      "pull_request_review_id" : 328620464,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355200227",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355200722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355200722"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It is supposed to be `hdChain`.\r\n\r\n`SetHDChain` happens when we change `hdChain`. We want to store what is currently `hdChain` as an inactive seed before we switch it out for the new one. So this is correct, we add it as an inactive chain before it is set to the new `chain`.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T17:12:53Z",
      "diff_hunk" : "@@ -732,12 +787,27 @@ bool LegacyScriptPubKeyMan::AddWatchOnly(const CScript& dest, int64_t nCreateTim\n void LegacyScriptPubKeyMan::SetHDChain(const CHDChain& chain, bool memonly)\n {\n     LOCK(cs_wallet);\n-    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain))\n-        throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+    if (!memonly) {\n+        if (!WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+        }\n+        if (!hdChain.seed_id.IsNull()) {\n+            AddInactiveHDChain(hdChain, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355200722",
      "id" : 355200722,
      "in_reply_to_id" : 355170609,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIwMDcyMg==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 796,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328620840,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355200722",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355203595"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355203595"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a comment.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T18:00:50Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355203595",
      "id" : 355203595,
      "in_reply_to_id" : 355111471,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIwMzU5NQ==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 283,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328623013,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355203595",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355203600"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355203600"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T18:00:55Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_wallet);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    unsigned int target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355203600",
      "id" : 355203600,
      "in_reply_to_id" : 355112025,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIwMzYwMA==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 292,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328623021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355203600",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355203638"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355203638"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I copied this out of TopUp and technically this is correct. But it's hard to read and reason about, so I've changed it to the standard way of doing for loops.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T18:01:18Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_wallet);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    unsigned int target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+\n+    // \"size\" of the keypools. Not really the size, actually the difference between index and the chain counter\n+    int64_t kp_size = (internal ? chain.nInternalChainCounter : chain.nExternalChainCounter) - index;\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    // available is determined based on the index given\n+    int64_t missing = std::max(std::max((int64_t) target_size, (int64_t) 1) - kp_size, (int64_t) 0);\n+\n+    WalletBatch batch(m_storage.GetDatabase());\n+    for (int64_t i = missing; i--;)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355203638",
      "id" : 355203638,
      "in_reply_to_id" : 355112156,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIwMzYzOA==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 303,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 328623064,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355203638",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355203648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355203648"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It should never be null. I've added an assert to check that.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-08T18:01:35Z",
      "diff_hunk" : "@@ -732,12 +787,27 @@ bool LegacyScriptPubKeyMan::AddWatchOnly(const CScript& dest, int64_t nCreateTim\n void LegacyScriptPubKeyMan::SetHDChain(const CHDChain& chain, bool memonly)\n {\n     LOCK(cs_wallet);\n-    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain))\n-        throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+    if (!memonly) {\n+        if (!WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+        }\n+        if (!hdChain.seed_id.IsNull()) {\n+            AddInactiveHDChain(hdChain, false);\n+        }\n+    }\n \n     hdChain = chain;\n }\n \n+void LegacyScriptPubKeyMan::AddInactiveHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteInactiveHDChain(chain))\n+        throw std::runtime_error(std::string(__func__) + \": writing inactive chain failed\");\n+\n+    m_inactive_hd_chains[chain.seed_id] = chain;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355203648",
      "id" : 355203648,
      "in_reply_to_id" : 355170663,
      "line" : 906,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIwMzY0OA==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 906,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 89,
      "pull_request_review_id" : 328623077,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355203648",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Found a few bugs where the wrong CHDChain was being used/updated/written. Should be fixed now.",
      "created_at" : "2019-12-08T18:02:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-562975226",
      "id" : 562975226,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2Mjk3NTIyNg==",
      "updated_at" : "2019-12-08T18:02:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562975226",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355716017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355716017"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is needed to take lock again? Can't you `AssertLockHeld` and `EXCLUSIVE_LOCKREQUIRED` instead?",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-09T22:17:38Z",
      "diff_hunk" : "@@ -732,12 +732,28 @@ bool LegacyScriptPubKeyMan::AddWatchOnly(const CScript& dest, int64_t nCreateTim\n void LegacyScriptPubKeyMan::SetHDChain(const CHDChain& chain, bool memonly)\n {\n     LOCK(cs_wallet);\n-    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain))\n-        throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+    if (!memonly) {\n+        if (!WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+        }\n+        if (!hdChain.seed_id.IsNull()) {\n+            AddInactiveHDChain(hdChain, false);\n+        }\n+    }\n \n     hdChain = chain;\n }\n \n+void LegacyScriptPubKeyMan::AddInactiveHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355716017",
      "id" : 355716017,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTcxNjAxNw==",
      "original_commit_id" : "cf80607b12ecd4c6b07441557c81d986b6fb12d8",
      "original_line" : 749,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 329329202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355716017",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355717884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355717884"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Pass `memonly`? (even if value is always `false` for now)",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-09T22:22:02Z",
      "diff_hunk" : "@@ -732,12 +732,28 @@ bool LegacyScriptPubKeyMan::AddWatchOnly(const CScript& dest, int64_t nCreateTim\n void LegacyScriptPubKeyMan::SetHDChain(const CHDChain& chain, bool memonly)\n {\n     LOCK(cs_wallet);\n-    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain))\n-        throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+    if (!memonly) {\n+        if (!WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+        }\n+        if (!hdChain.seed_id.IsNull()) {\n+            AddInactiveHDChain(hdChain, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355717884",
      "id" : 355717884,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTcxNzg4NA==",
      "original_commit_id" : "cf80607b12ecd4c6b07441557c81d986b6fb12d8",
      "original_line" : 740,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 329329202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355717884",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355738392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355738392"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-09T23:17:31Z",
      "diff_hunk" : "@@ -732,12 +732,28 @@ bool LegacyScriptPubKeyMan::AddWatchOnly(const CScript& dest, int64_t nCreateTim\n void LegacyScriptPubKeyMan::SetHDChain(const CHDChain& chain, bool memonly)\n {\n     LOCK(cs_wallet);\n-    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain))\n-        throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+    if (!memonly) {\n+        if (!WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+        }\n+        if (!hdChain.seed_id.IsNull()) {\n+            AddInactiveHDChain(hdChain, false);\n+        }\n+    }\n \n     hdChain = chain;\n }\n \n+void LegacyScriptPubKeyMan::AddInactiveHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355738392",
      "id" : 355738392,
      "in_reply_to_id" : 355716017,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTczODM5Mg==",
      "original_commit_id" : "cf80607b12ecd4c6b07441557c81d986b6fb12d8",
      "original_line" : 749,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 329432291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355738392",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355738422"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355738422"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-09T23:17:36Z",
      "diff_hunk" : "@@ -732,12 +732,28 @@ bool LegacyScriptPubKeyMan::AddWatchOnly(const CScript& dest, int64_t nCreateTim\n void LegacyScriptPubKeyMan::SetHDChain(const CHDChain& chain, bool memonly)\n {\n     LOCK(cs_wallet);\n-    if (!memonly && !WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain))\n-        throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+    if (!memonly) {\n+        if (!WalletBatch(m_storage.GetDatabase()).WriteHDChain(chain)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing chain failed\");\n+        }\n+        if (!hdChain.seed_id.IsNull()) {\n+            AddInactiveHDChain(hdChain, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r355738422",
      "id" : 355738422,
      "in_reply_to_id" : 355717884,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTczODQyMg==",
      "original_commit_id" : "cf80607b12ecd4c6b07441557c81d986b6fb12d8",
      "original_line" : 740,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 329432447,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355738422",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@achow101 after thoughts, I was thinking of the case where we have initial keypool=1000, we create a wallet backup B1 at block N, then we exhaust keypool until reaching index 1100, none of the address in the range 0 to 1000 are confirmed on chain, address index 1100 get confirmed at block N+10000. We restore wallet backup B1 and rescan from N until N+10000, wallet is not going to see address index 1100 because we only advance look-ahead key buffer when we detect an address in range 0 to 1000.\r\n\r\nThis scenario is really unlikely but it this current code behavior ? Just to be sure, if yes maybe comment of `CKeyPool` should be updated to avoid people setting to small `-keypool`.",
      "created_at" : "2019-12-10T02:31:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-563613452",
      "id" : 563613452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MzYxMzQ1Mg==",
      "updated_at" : "2019-12-10T02:31:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/563613452",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, such a scenario is possible and is unavoidable. The only thing that you can do is to have a large enough keypool (or gap limit as other wallets call it) where this is unlikely to happen. This is why the default `-keypool` was raised to 1000 from 100.",
      "created_at" : "2019-12-10T02:49:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-563636980",
      "id" : 563636980,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MzYzNjk4MA==",
      "updated_at" : "2019-12-10T02:49:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/563636980",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Okay thanks for answer, added a commit on top of your branch (https://github.com/ariard/bitcoin/commit/3c25ab7f36319cbe38d1fb65a321b1234635648e) to clarify the risk of losing funds by lowering the default keypool value. With the default value, this scenario is really unlikely, but we should inform as best user to avoid one of them removing the footgun protection by mistake.\r\n\r\nWe could also go further and return error at wallet init if -keypool < 100.",
      "created_at" : "2019-12-10T23:24:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-564305888",
      "id" : 564305888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDMwNTg4OA==",
      "updated_at" : "2019-12-10T23:24:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564305888",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think updating the docs about `-keypool` settings is out of scope for this PR.",
      "created_at" : "2019-12-11T01:48:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-564340206",
      "id" : 564340206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDM0MDIwNg==",
      "updated_at" : "2019-12-11T01:48:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564340206",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "No worries I'll take it on its own. But on the raw idea, do you think it's pertinent to update the doc to inform user ?",
      "created_at" : "2019-12-11T03:49:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-564367899",
      "id" : 564367899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDM2Nzg5OQ==",
      "updated_at" : "2019-12-11T03:49:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564367899",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, we should keep docs up to date with behavior.",
      "created_at" : "2019-12-11T03:54:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-564368726",
      "id" : 564368726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDM2ODcyNg==",
      "updated_at" : "2019-12-11T03:54:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564368726",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r361878437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361878437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, above.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-29T23:21:00Z",
      "diff_hunk" : "@@ -275,6 +275,49 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_wallet);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    int64_t target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+\n+    // \"size\" of the keypools. Not really the size, actually the difference between index and the chain counter\n+    // Since chain counter is 1 based and index is 0 based, one of them needs to be offset by 1.\n+    int64_t kp_size = (internal ? chain.nInternalChainCounter : chain.nExternalChainCounter) - (index + 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    // available is determined based on the index given\n+    int64_t missing = std::max(std::max((int64_t) target_size, (int64_t) 1) - kp_size, (int64_t) 0);\n+\n+    WalletBatch batch(m_storage.GetDatabase());\n+    for (int64_t i = missing; i > 0; --i)\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r361878437",
      "id" : 361878437,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg3ODQzNw==",
      "original_commit_id" : "fc7a5e4d5341f5a541a68e2717fefc5e0f4d4007",
      "original_line" : 305,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 336980010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361878437",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r362106027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362106027"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2019-12-30T21:57:46Z",
      "diff_hunk" : "@@ -275,6 +275,49 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_wallet);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    int64_t target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+\n+    // \"size\" of the keypools. Not really the size, actually the difference between index and the chain counter\n+    // Since chain counter is 1 based and index is 0 based, one of them needs to be offset by 1.\n+    int64_t kp_size = (internal ? chain.nInternalChainCounter : chain.nExternalChainCounter) - (index + 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    // available is determined based on the index given\n+    int64_t missing = std::max(std::max((int64_t) target_size, (int64_t) 1) - kp_size, (int64_t) 0);\n+\n+    WalletBatch batch(m_storage.GetDatabase());\n+    for (int64_t i = missing; i > 0; --i)\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r362106027",
      "id" : 362106027,
      "in_reply_to_id" : 361878437,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjEwNjAyNw==",
      "original_commit_id" : "fc7a5e4d5341f5a541a68e2717fefc5e0f4d4007",
      "original_line" : 305,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 337250492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362106027",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-01-03T18:54:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-570663830",
      "id" : 570663830,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MDY2MzgzMA==",
      "updated_at" : "2020-01-03T18:54:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570663830",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Renamed it.",
      "created_at" : "2020-01-06T17:03:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-571221110",
      "id" : 571221110,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MTIyMTExMA==",
      "updated_at" : "2020-01-06T17:03:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/571221110",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice work!\r\nConcept ACK.",
      "created_at" : "2020-01-09T05:26:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-572394058",
      "id" : 572394058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MjM5NDA1OA==",
      "updated_at" : "2020-01-09T05:26:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/572394058",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-01-30T06:07:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-580098250",
      "id" : 580098250,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDA5ODI1MA==",
      "updated_at" : "2020-01-30T06:07:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580098250",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-01-30T15:54:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-580319326",
      "id" : 580319326,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDMxOTMyNg==",
      "updated_at" : "2020-01-30T15:54:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580319326",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Travis is tripping over some lock issue. As is macOS with `--enable-debug`:\r\n```\r\nwallet/walletdb.cpp:399:58: error: calling function 'AddInactiveHDChain' requires holding mutex 'pwallet->GetOrCreateLegacyScriptPubKeyMan().cs_KeyStore' exclusively [-Werror,-Wthread-safety-analysis]\r\n            pwallet->GetOrCreateLegacyScriptPubKeyMan()->AddInactiveHDChain(chain, true);\r\n```",
      "created_at" : "2020-02-19T12:14:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-588194193",
      "id" : 588194193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODE5NDE5Mw==",
      "updated_at" : "2020-02-19T12:15:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588194193",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392695102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392695102"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: initial",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-15T17:34:20Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392695102",
      "id" : 392695102,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5NTEwMg==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 156,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392695102",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392695347"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392695347"
         }
      },
      "author_association" : "MEMBER",
      "body" : "keypool of 3",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-15T17:37:10Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392695347",
      "id" : 392695347,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5NTM0Nw==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 158,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392695347",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392696785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392696785"
         }
      },
      "author_association" : "MEMBER",
      "body" : "suggestion\r\n```diff\r\n-        # Empty keypool and get an address that is beyond the initial keypool\r\n+        # Empty the origin keypool and get an address that is beyond the initial keypool of 3\r\n         origin_rpc.getnewaddress()\r\n         origin_rpc.getnewaddress()\r\n-        last_addr = origin_rpc.getnewaddress()\r\n-        addr = origin_rpc.getnewaddress()\r\n+        last_addr = origin_rpc.getnewaddress() # last address of initial keypool\r\n+        addr = origin_rpc.getnewaddress() # address beyond initial keypool of 3\r\n```",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-15T17:54:53Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392696785",
      "id" : 392696785,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5Njc4NQ==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 183,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392696785",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392698112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392698112"
         }
      },
      "author_association" : "MEMBER",
      "body" : "suggest mentioning in order of checks\r\n```diff\r\n-        # Check that the restored seed does not have addr but does have last_addr\r\n+        # Check that the restored seed has last_addr but does not have addr\r\n         info = restore_rpc.getaddressinfo(last_addr)\r\n         assert_equal(info['ismine'], True)\r\n         info = restore_rpc.getaddressinfo(addr)\r\n         assert_equal(info['ismine'], False)\r\n+        # Check that the origin seed does have addr\r\n         info = origin_rpc.getaddressinfo(addr)\r\n         assert_equal(info['ismine'], True)\r\n```",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-15T18:10:19Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+        info = origin_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392698112",
      "id" : 392698112,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5ODExMg==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 192,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392698112",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392698529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392698529"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This line seems redundant?",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-15T18:15:31Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392698529",
      "id" : 392698529,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5ODUyOQ==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 172,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392698529",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392700316"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392700316"
         }
      },
      "author_association" : "MEMBER",
      "body" : "suggest mentioning in order of checks\r\n```diff\r\n-        # Check that the restored seed does not have addr but does have last_addr\r\n+        # Check that the restored seed has last_addr but does not have addr\r\n```\r\n",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-15T18:37:10Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+        info = origin_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        txid = self.nodes[0].sendtoaddress(addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\n+        out_of_kp_txid = txid\n+\n+        txid = self.nodes[0].sendtoaddress(last_addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        restore_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)\n+\n+        restore_rpc.rescanblockchain()\n+        restore_rpc.gettransaction(out_of_kp_txid)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        # Check again that 3 keys were derived.\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392700316",
      "id" : 392700316,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMDMxNg==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 219,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392700316",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392700402"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392700402"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could you add comments for the 3 sections above? ",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-15T18:38:09Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+        info = origin_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        txid = self.nodes[0].sendtoaddress(addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\n+        out_of_kp_txid = txid\n+\n+        txid = self.nodes[0].sendtoaddress(last_addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        restore_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)\n+\n+        restore_rpc.rescanblockchain()\n+        restore_rpc.gettransaction(out_of_kp_txid)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392700402",
      "id" : 392700402,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMDQwMg==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 218,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392700402",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392936080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392936080"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit suggestion here and line 1014 just above: git grepping indicates these are lowercased elsewhere, except when the message begins with a class name\r\n```diff\r\n- throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\r\n+ throw std::runtime_error(std::string(__func__) + \": writing HD chain model failed\");\r\n```",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T10:57:00Z",
      "diff_hunk" : "@@ -918,30 +987,35 @@ void LegacyScriptPubKeyMan::DeriveNewChildKey(WalletBatch &batch, CKeyMetadata&\n         // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n         // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n         if (internal) {\n-            chainChildKey.Derive(childKey, hdChain.nInternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n-            metadata.hdKeypath = \"m/0'/1'/\" + std::to_string(hdChain.nInternalChainCounter) + \"'\";\n+            chainChildKey.Derive(childKey, hd_chain.nInternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/1'/\" + std::to_string(hd_chain.nInternalChainCounter) + \"'\";\n             metadata.key_origin.path.push_back(0 | BIP32_HARDENED_KEY_LIMIT);\n             metadata.key_origin.path.push_back(1 | BIP32_HARDENED_KEY_LIMIT);\n-            metadata.key_origin.path.push_back(hdChain.nInternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n-            hdChain.nInternalChainCounter++;\n+            metadata.key_origin.path.push_back(hd_chain.nInternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            hd_chain.nInternalChainCounter++;\n         }\n         else {\n-            chainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n-            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            chainChildKey.Derive(childKey, hd_chain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hd_chain.nExternalChainCounter) + \"'\";\n             metadata.key_origin.path.push_back(0 | BIP32_HARDENED_KEY_LIMIT);\n             metadata.key_origin.path.push_back(0 | BIP32_HARDENED_KEY_LIMIT);\n-            metadata.key_origin.path.push_back(hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n-            hdChain.nExternalChainCounter++;\n+            metadata.key_origin.path.push_back(hd_chain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            hd_chain.nExternalChainCounter++;\n         }\n     } while (HaveKey(childKey.key.GetPubKey().GetID()));\n     secret = childKey.key;\n-    metadata.hd_seed_id = hdChain.seed_id;\n+    metadata.hd_seed_id = hd_chain.seed_id;\n     CKeyID master_id = masterKey.key.GetPubKey().GetID();\n     std::copy(master_id.begin(), master_id.begin() + 4, metadata.key_origin.fingerprint);\n     metadata.has_key_origin = true;\n     // update the chain model in the database\n-    if (!batch.WriteHDChain(hdChain))\n-        throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+    if (hd_chain.seed_id == m_hd_chain.seed_id) {\n+        if (!batch.WriteHDChain(hd_chain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+    } else {\n+        if (!batch.WriteInactiveHDChain(hd_chain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392936080",
      "id" : 392936080,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkzNjA4MA==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 1017,
      "original_position" : 188,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392936080",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392951184"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392951184"
         }
      },
      "author_association" : "MEMBER",
      "body" : "should also define `bool operator!=`...?",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T11:29:52Z",
      "diff_hunk" : "@@ -110,6 +110,11 @@ class CHDChain\n         nInternalChainCounter = 0;\n         seed_id.SetNull();\n     }\n+\n+    bool operator==(const CHDChain& chain) const\n+    {\n+        return seed_id == chain.seed_id;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392951184",
      "id" : 392951184,
      "line" : 123,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1MTE4NA==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 123,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : 8,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392951184",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392953786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392953786"
         }
      },
      "author_association" : "MEMBER",
      "body" : "-keypool (keypoolsize)",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T11:34:57Z",
      "diff_hunk" : "@@ -306,6 +320,18 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n      */\n     bool ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool, bool fRequestedInternal);\n \n+    /**\n+     * Like TopUp() but adds keys for inactive HD chains.\n+     * Ensures that there are at least -keypoolsize number of keys derived after the given index.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392953786",
      "id" : 392953786,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1Mzc4Ng==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 325,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.h",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392953786",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392954955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392954955"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: s/user selected/user-selected/",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T11:37:06Z",
      "diff_hunk" : "@@ -280,6 +280,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_KeyStore);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    int64_t target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+\n+    // \"size\" of the keypools. Not really the size, actually the difference between index and the chain counter\n+    // Since chain counter is 1 based and index is 0 based, one of them needs to be offset by 1.\n+    int64_t kp_size = (internal ? chain.nInternalChainCounter : chain.nExternalChainCounter) - (index + 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392954955",
      "id" : 392954955,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NDk1NQ==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 304,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392954955",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392955591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392955591"
         }
      },
      "author_association" : "MEMBER",
      "body" : "agree with @achow101, see https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#f16-for-in-parameters-pass-cheaply-copied-types-by-value-and-others-by-reference-to-const",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T11:38:23Z",
      "diff_hunk" : "@@ -275,6 +275,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392955591",
      "id" : 392955591,
      "in_reply_to_id" : 355111113,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NTU5MQ==",
      "original_commit_id" : "c4ae01c81255c5e0e3b5ca3b979e60a1c531aed1",
      "original_line" : 283,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392955591",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392976340"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392976340"
         }
      },
      "author_association" : "MEMBER",
      "body" : "naming/documentation: both here in `FillInactiveChain()` and in `TopUp()`, \"available\" and `missing` seem like opposites",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T12:20:06Z",
      "diff_hunk" : "@@ -280,6 +280,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_KeyStore);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    int64_t target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+\n+    // \"size\" of the keypools. Not really the size, actually the difference between index and the chain counter\n+    // Since chain counter is 1 based and index is 0 based, one of them needs to be offset by 1.\n+    int64_t kp_size = (internal ? chain.nInternalChainCounter : chain.nExternalChainCounter) - (index + 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    // available is determined based on the index given\n+    int64_t missing = std::max(std::max((int64_t) target_size, (int64_t) 1) - kp_size, (int64_t) 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392976340",
      "id" : 392976340,
      "line" : 315,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk3NjM0MA==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 315,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 26,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392976340",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392980170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392980170"
         }
      },
      "author_association" : "MEMBER",
      "body" : "musing on naming here: consider naming the function `FillUpInactiveHDChain` or `TopUpInactiveHDChain`:\r\n- to say it's an HD chain (which shows why no need to check `!CanGenerateKeys()` here IIUC)\r\n- naming similar to `AddInactiveHDChain` and `WriteInActiveHDChain`\r\n- best to avoid \"I\" next to \"ll\"\r\n- and if desired, show similarity to `TopUp` as the functions are similar, unless you don't want grepping for TopUp to return both",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T12:25:29Z",
      "diff_hunk" : "@@ -280,6 +280,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r392980170",
      "id" : 392980170,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk4MDE3MA==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 283,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392980170",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393019229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393019229"
         }
      },
      "author_association" : "MEMBER",
      "body" : "for info I appended these checks after the rescan so that all checks before the rescan are also repeated after it, and all still pass\r\n```diff\r\n         assert_equal(info['ismine'], False)\r\n+        info = origin_rpc.getaddressinfo(addr)\r\n+        assert_equal(info['ismine'], True)\r\n+\r\n+        txid = self.nodes[0].sendtoaddress(addr, 1)\r\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\r\n+        self.nodes[0].generate(1)\r\n+        origin_rpc.gettransaction(txid)\r\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\r\n+        out_of_kp_txid = txid\r\n+\r\n+        txid = self.nodes[0].sendtoaddress(last_addr, 1)\r\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\r\n+        self.nodes[0].generate(1)\r\n+        origin_rpc.gettransaction(txid)\r\n+        restore_rpc.gettransaction(txid)\r\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)\r\n+\r\n+        restore_rpc.rescanblockchain()\r\n+        restore_rpc.gettransaction(out_of_kp_txid)\r\n+        info = restore_rpc.getaddressinfo(addr)\r\n+        assert_equal(info['ismine'], True)\r\n \r\n if __name__ == '__main__':\r\n     WalletHDTest().main ()\r\n```",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T13:24:30Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+        info = origin_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        txid = self.nodes[0].sendtoaddress(addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\n+        out_of_kp_txid = txid\n+\n+        txid = self.nodes[0].sendtoaddress(last_addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        restore_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)\n+\n+        restore_rpc.rescanblockchain()\n+        restore_rpc.gettransaction(out_of_kp_txid)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        # Check again that 3 keys were derived.\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393019229",
      "id" : 393019229,
      "line" : 250,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAxOTIyOQ==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 250,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : 88,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393019229",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393029747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393029747"
         }
      },
      "author_association" : "MEMBER",
      "body" : "On current master d402c1e4d, the new test fails here after the rescan with `Invalid or non-wallet transaction id (-5)`, is this where it fails for you, and should it not fail on one of the assertions?",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T13:41:15Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+        info = origin_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        txid = self.nodes[0].sendtoaddress(addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\n+        out_of_kp_txid = txid\n+\n+        txid = self.nodes[0].sendtoaddress(last_addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        restore_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)\n+\n+        restore_rpc.rescanblockchain()\n+        restore_rpc.gettransaction(out_of_kp_txid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393029747",
      "id" : 393029747,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyOTc0Nw==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 216,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 374818515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393029747",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393151113"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393151113"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, this is the correct place for it to fail. The asserts above should pass because on mater, we still have the keypool of 3 so all the things existing/not existing is the same. The difference is that the `out_of_kp_txid` is not seen by master because it uses a key that is out of the original keypool. Since master does not continue to extend the original keypool, it fails to detect `out_of_kp_txid` so it is supposed to fail here.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T16:27:39Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+        info = origin_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        txid = self.nodes[0].sendtoaddress(addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\n+        out_of_kp_txid = txid\n+\n+        txid = self.nodes[0].sendtoaddress(last_addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        restore_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)\n+\n+        restore_rpc.rescanblockchain()\n+        restore_rpc.gettransaction(out_of_kp_txid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393151113",
      "id" : 393151113,
      "in_reply_to_id" : 393029747,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1MTExMw==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 216,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 375380020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393151113",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393152055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393152055"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It is not. We are first setting the original seed (we set it to make sure it is shared), then setting a new seed to simulate a seed rotation.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T16:29:06Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393152055",
      "id" : 393152055,
      "in_reply_to_id" : 392698529,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1MjA1NQ==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 172,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 375381245,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393152055",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393187069"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393187069"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, right -- reading the cli help again, both calls are flushing; the first call sets the seed with the passed `seed` value and the second call sets a random seed. Maybe add a comment to explain the intention or simulation.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:17:32Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393187069",
      "id" : 393187069,
      "in_reply_to_id" : 392698529,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4NzA2OQ==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 172,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 375425890,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393187069",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393189292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393189292"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok thanks. Upgraded the Concept ACK to an ACK with non-blocking comments.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:21:22Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+        info = origin_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        txid = self.nodes[0].sendtoaddress(addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\n+        out_of_kp_txid = txid\n+\n+        txid = self.nodes[0].sendtoaddress(last_addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        restore_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)\n+\n+        restore_rpc.rescanblockchain()\n+        restore_rpc.gettransaction(out_of_kp_txid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393189292",
      "id" : 393189292,
      "in_reply_to_id" : 393029747,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4OTI5Mg==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 216,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 375428818,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393189292",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393202958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393202958"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:44:20Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393202958",
      "id" : 393202958,
      "in_reply_to_id" : 392695102,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMjk1OA==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 156,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 375446101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393202958",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393202998"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393202998"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:44:25Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393202998",
      "id" : 393202998,
      "in_reply_to_id" : 392695347,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMjk5OA==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 158,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 375446162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393202998",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203066"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:44:30Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203066",
      "id" : 393203066,
      "in_reply_to_id" : 392696785,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzA2Ng==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 183,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 375446238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203066",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203131"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203131"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:44:37Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+        info = origin_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203131",
      "id" : 393203131,
      "in_reply_to_id" : 392698112,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzEzMQ==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 192,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 375446331,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203131",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203207"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:44:44Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+        info = origin_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        txid = self.nodes[0].sendtoaddress(addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\n+        out_of_kp_txid = txid\n+\n+        txid = self.nodes[0].sendtoaddress(last_addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        restore_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)\n+\n+        restore_rpc.rescanblockchain()\n+        restore_rpc.gettransaction(out_of_kp_txid)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        # Check again that 3 keys were derived.\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203207",
      "id" : 393203207,
      "in_reply_to_id" : 392700316,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzIwNw==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 219,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 375446420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203207",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203250"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203250"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:44:47Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+        info = origin_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        txid = self.nodes[0].sendtoaddress(addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\n+        out_of_kp_txid = txid\n+\n+        txid = self.nodes[0].sendtoaddress(last_addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        restore_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)\n+\n+        restore_rpc.rescanblockchain()\n+        restore_rpc.gettransaction(out_of_kp_txid)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203250",
      "id" : 393203250,
      "in_reply_to_id" : 392700402,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzI1MA==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 218,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 375446461,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203250",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203317"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:44:52Z",
      "diff_hunk" : "@@ -918,30 +987,35 @@ void LegacyScriptPubKeyMan::DeriveNewChildKey(WalletBatch &batch, CKeyMetadata&\n         // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n         // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n         if (internal) {\n-            chainChildKey.Derive(childKey, hdChain.nInternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n-            metadata.hdKeypath = \"m/0'/1'/\" + std::to_string(hdChain.nInternalChainCounter) + \"'\";\n+            chainChildKey.Derive(childKey, hd_chain.nInternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/1'/\" + std::to_string(hd_chain.nInternalChainCounter) + \"'\";\n             metadata.key_origin.path.push_back(0 | BIP32_HARDENED_KEY_LIMIT);\n             metadata.key_origin.path.push_back(1 | BIP32_HARDENED_KEY_LIMIT);\n-            metadata.key_origin.path.push_back(hdChain.nInternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n-            hdChain.nInternalChainCounter++;\n+            metadata.key_origin.path.push_back(hd_chain.nInternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            hd_chain.nInternalChainCounter++;\n         }\n         else {\n-            chainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n-            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+            chainChildKey.Derive(childKey, hd_chain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hd_chain.nExternalChainCounter) + \"'\";\n             metadata.key_origin.path.push_back(0 | BIP32_HARDENED_KEY_LIMIT);\n             metadata.key_origin.path.push_back(0 | BIP32_HARDENED_KEY_LIMIT);\n-            metadata.key_origin.path.push_back(hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n-            hdChain.nExternalChainCounter++;\n+            metadata.key_origin.path.push_back(hd_chain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            hd_chain.nExternalChainCounter++;\n         }\n     } while (HaveKey(childKey.key.GetPubKey().GetID()));\n     secret = childKey.key;\n-    metadata.hd_seed_id = hdChain.seed_id;\n+    metadata.hd_seed_id = hd_chain.seed_id;\n     CKeyID master_id = masterKey.key.GetPubKey().GetID();\n     std::copy(master_id.begin(), master_id.begin() + 4, metadata.key_origin.fingerprint);\n     metadata.has_key_origin = true;\n     // update the chain model in the database\n-    if (!batch.WriteHDChain(hdChain))\n-        throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+    if (hd_chain.seed_id == m_hd_chain.seed_id) {\n+        if (!batch.WriteHDChain(hd_chain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n+    } else {\n+        if (!batch.WriteInactiveHDChain(hd_chain))\n+            throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203317",
      "id" : 393203317,
      "in_reply_to_id" : 392936080,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzMxNw==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 1017,
      "original_position" : 188,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 375446534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203317",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203508"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It should be implicitly defined.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:45:11Z",
      "diff_hunk" : "@@ -110,6 +110,11 @@ class CHDChain\n         nInternalChainCounter = 0;\n         seed_id.SetNull();\n     }\n+\n+    bool operator==(const CHDChain& chain) const\n+    {\n+        return seed_id == chain.seed_id;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203508",
      "id" : 393203508,
      "in_reply_to_id" : 392951184,
      "line" : 123,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzUwOA==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 123,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : 8,
      "pull_request_review_id" : 375446771,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203508",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203548"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:45:14Z",
      "diff_hunk" : "@@ -306,6 +320,18 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n      */\n     bool ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool, bool fRequestedInternal);\n \n+    /**\n+     * Like TopUp() but adds keys for inactive HD chains.\n+     * Ensures that there are at least -keypoolsize number of keys derived after the given index.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203548",
      "id" : 393203548,
      "in_reply_to_id" : 392953786,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzU0OA==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 325,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.h",
      "position" : null,
      "pull_request_review_id" : 375446818,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203548",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:45:19Z",
      "diff_hunk" : "@@ -280,6 +280,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_KeyStore);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    int64_t target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+\n+    // \"size\" of the keypools. Not really the size, actually the difference between index and the chain counter\n+    // Since chain counter is 1 based and index is 0 based, one of them needs to be offset by 1.\n+    int64_t kp_size = (internal ? chain.nInternalChainCounter : chain.nExternalChainCounter) - (index + 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203587",
      "id" : 393203587,
      "in_reply_to_id" : 392954955,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzU4Nw==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 304,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 375446869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203587",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203638"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203638"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:45:23Z",
      "diff_hunk" : "@@ -280,6 +280,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_KeyStore);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    int64_t target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+\n+    // \"size\" of the keypools. Not really the size, actually the difference between index and the chain counter\n+    // Since chain counter is 1 based and index is 0 based, one of them needs to be offset by 1.\n+    int64_t kp_size = (internal ? chain.nInternalChainCounter : chain.nExternalChainCounter) - (index + 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    // available is determined based on the index given\n+    int64_t missing = std::max(std::max((int64_t) target_size, (int64_t) 1) - kp_size, (int64_t) 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203638",
      "id" : 393203638,
      "in_reply_to_id" : 392976340,
      "line" : 315,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzYzOA==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 315,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 26,
      "pull_request_review_id" : 375446926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203638",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203756"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203756"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Renamed to `TopUpInactiveHDChain`",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:45:35Z",
      "diff_hunk" : "@@ -280,6 +280,48 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::FillInactiveChain(const CKeyID seed_id, int64_t index, bool internal)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393203756",
      "id" : 393203756,
      "in_reply_to_id" : 392980170,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzc1Ng==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 283,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 375447068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393203756",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393204677"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393204677"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a comment.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T17:47:10Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393204677",
      "id" : 393204677,
      "in_reply_to_id" : 392698529,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNDY3Nw==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 172,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 375448232,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393204677",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393216391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393216391"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Default comparison operators are only being added in C++20. That said, if nothing needs !=, no need to define it.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T18:05:36Z",
      "diff_hunk" : "@@ -110,6 +110,11 @@ class CHDChain\n         nInternalChainCounter = 0;\n         seed_id.SetNull();\n     }\n+\n+    bool operator==(const CHDChain& chain) const\n+    {\n+        return seed_id == chain.seed_id;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393216391",
      "id" : 393216391,
      "in_reply_to_id" : 392951184,
      "line" : 123,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNjM5MQ==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 123,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.h",
      "position" : 8,
      "pull_request_review_id" : 375465363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393216391",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393253681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393253681"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "0715613\r\n\r\nIf you switch `-keypool` arg after switching seed to a smaller one, you may end up with less look-ahead protection for a seed which may be used for higher amounts or different funds policy. That's already an issue today without seed rotation, but I would be okay to make it a static parameter part of `m_inactive_hd_chains`.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T19:09:35Z",
      "diff_hunk" : "@@ -280,6 +280,47 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::TopUpInactiveHDChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_KeyStore);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    int64_t target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393253681",
      "id" : 393253681,
      "line" : 307,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI1MzY4MQ==",
      "original_commit_id" : "0715613ce4b983b775e247f89aa033d2d2b822f5",
      "original_line" : 307,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 18,
      "pull_request_review_id" : 375510813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393253681",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393255004"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393255004"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "0715613\r\n\r\nToo much work for parameterizing `TopUp` with `seed_id` or other reasons?",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T19:12:12Z",
      "diff_hunk" : "@@ -280,6 +280,47 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::TopUpInactiveHDChain(const CKeyID seed_id, int64_t index, bool internal)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393255004",
      "id" : 393255004,
      "line" : 293,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI1NTAwNA==",
      "original_commit_id" : "0715613ce4b983b775e247f89aa033d2d2b822f5",
      "original_line" : 293,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 4,
      "pull_request_review_id" : 375510813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393255004",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393260572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393260572"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think that's necessary. Since `sethdseed`'s purpose is seed rotation, it doesn't really make sense that there would be different funds policies.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T19:23:48Z",
      "diff_hunk" : "@@ -280,6 +280,47 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::TopUpInactiveHDChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_KeyStore);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    int64_t target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393260572",
      "id" : 393260572,
      "in_reply_to_id" : 393253681,
      "line" : 307,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI2MDU3Mg==",
      "original_commit_id" : "0715613ce4b983b775e247f89aa033d2d2b822f5",
      "original_line" : 307,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 18,
      "pull_request_review_id" : 375519633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393260572",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393261919"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393261919"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Needing `index` makes it harder to parameterize.",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-03-16T19:26:31Z",
      "diff_hunk" : "@@ -280,6 +280,47 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::TopUpInactiveHDChain(const CKeyID seed_id, int64_t index, bool internal)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393261919",
      "id" : 393261919,
      "in_reply_to_id" : 393255004,
      "line" : 293,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI2MTkxOQ==",
      "original_commit_id" : "0715613ce4b983b775e247f89aa033d2d2b822f5",
      "original_line" : 293,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 4,
      "pull_request_review_id" : 375521318,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-02T02:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393261919",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Re-ACK 5fafe5e reviewed changes since last review with `git diff d435512..5fafe5e`, rebased on master @ 25424cf57, built/ran tests/bitcoind",
      "created_at" : "2020-03-16T21:20:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-599763723",
      "id" : 599763723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5OTc2MzcyMw==",
      "updated_at" : "2020-03-16T21:20:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599763723",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-03-25T19:47:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-604049003",
      "id" : 604049003,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNDA0OTAwMw==",
      "updated_at" : "2020-03-25T19:47:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/604049003",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review almost-ACK d27ced4eeaf59d093b4eedeed6c344f3f80082c1\r\n\r\nArrived here while reviewing #17484, and happy to see another really nicely implemented PR!  Clean changes and great code comments and tests. Only thing that I think is a problem (and easily addressed) is decision to read/write/rely on new \"inactivehdchain\" database rows. I guess there are two slightly different decisions I'm concerned about:\r\n\r\n1. Decision to rely on \"inactivehdchain\" rows being written to top up old seeds instead of always topping up old seeds.\r\n2. Decision to write \"inactivehdchain\" rows when sethdseed is called.\r\n\r\nI think (1) isn't good because it results in behavior that could be unnecessarily confusing and seem unreliable to users. Wallet loading code could just populate the `m_inactive_hd_chains` map from existing key origin data during loading, without requiring \"inactivehdchain\" database rows to have been written previously. A problem with requiring the rows to top up is that now instead of having two types of seeds in the wallet: _active_ and _inactive_, there are three kinds: _active_, _inactive and topped up_, _inactive and dormant_ which could be confusing to users who will see different behavior between the different inactive types, and not have control over what type they end up with without switching software versions. So it would be great to see `m_inactive_hd_chains` map and counters just populated automatically with origin data when wallet is loaded.\r\n\r\nDecision (2) to write \"inactivehdchain\" rows may be justified even if the rows aren't required for topping up, because maybe there is some useful metadata or history they provide, but it would be good to figure out if there is actually anything in there worth keeping when a new seed is set. Also, WalletBatch::WriteInactiveHDChain implemented in 40635251387758aac8a578b72e01b265dcc15d77, seems like it only writes a single row to the database with each new inactive chain overwriting the last, so I wonder if that behaves as intended in the current implementation.\r\n\r\nEverything else seems really good aside from this one point. Great to see this PR!",
      "created_at" : "2020-05-01T01:58:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-622211593",
      "id" : 622211593,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjIxMTU5Mw==",
      "updated_at" : "2020-05-01T01:58:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622211593",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've changed this to get rid of the `inactivehdseed` records and just interpret the `keymeta` records during loading.",
      "created_at" : "2020-05-02T02:03:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#issuecomment-622653118",
      "id" : 622653118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17681",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjY1MzExOA==",
      "updated_at" : "2020-05-02T02:03:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622653118",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421528878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421528878"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"fixup! Determine inactive HD seeds from key metadata and track them in LegacyScriptPubKeyMan\" (65dee3410cd9807bb4aa6b6677c2e0832e050ea2)\r\n\r\nShould fix: probably need to drop this performance optimization",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-05-07T14:02:47Z",
      "diff_hunk" : "@@ -83,6 +83,7 @@ def run_test(self):\n         shutil.rmtree(os.path.join(self.nodes[1].datadir, self.chain, \"blocks\"))\n         shutil.rmtree(os.path.join(self.nodes[1].datadir, self.chain, \"chainstate\"))\n         shutil.copyfile(os.path.join(self.nodes[1].datadir, \"hd.bak\"), os.path.join(self.nodes[1].datadir, self.chain, 'wallets', \"wallet.dat\"))\n+        return",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421528878",
      "id" : 421528878,
      "line" : 86,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyODg3OA==",
      "original_commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "original_line" : 86,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : 4,
      "pull_request_review_id" : 407503207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T15:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421528878",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421530343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421530343"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"fixup! Determine inactive HD seeds from key metadata and track them in LegacyScriptPubKeyMan\" (65dee3410cd9807bb4aa6b6677c2e0832e050ea2)\r\n\r\nNote: looks like unintended comment change here",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-05-07T14:04:47Z",
      "diff_hunk" : "@@ -685,7 +686,7 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n                 if (IsKeyType(strType) || strType == DBKeys::DEFAULTKEY) {\n                     result = DBErrors::CORRUPT;\n                 } else if (strType == DBKeys::FLAGS) {\n-                    // reading the wallet flags can only fail if unknown flags are present\n+                    // reading the wallet flags only fail if unknown flags are present",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421530343",
      "id" : 421530343,
      "line" : 689,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzMDM0Mw==",
      "original_commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "original_line" : 689,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 79,
      "pull_request_review_id" : 407503207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T15:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421530343",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421539430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421539430"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Determine inactive HD seeds from key metadata and track them in LegacyScriptPubKeyMan\" (22361d241b4d236b2b8f84b59094c296172db0ff)\r\n\r\nNote: I initially questioned this, but it does seems reasonable to treat unexpected paths as errors. Triggering an error instead of ignoring these keys means we may need to be a little more careful about backwards compatibility in the future, and store possible paths with different lengths in a new field, but this seems like a reasonable tradeoff for getting better error checking now",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-05-07T14:16:51Z",
      "diff_hunk" : "@@ -405,6 +407,56 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssValue >> keyMeta;\n             wss.nKeyMeta++;\n             pwallet->GetOrCreateLegacyScriptPubKeyMan()->LoadKeyMetadata(vchPubKey.GetID(), keyMeta);\n+\n+            // Extract some CHDChain info from this metadata if it has any\n+            if (keyMeta.nVersion >= CKeyMetadata::VERSION_WITH_HDDATA) {\n+                // Get the path from the key origin or from the path string\n+                // Not applicable when path is \"s\" as that indicates a seed\n+                bool internal = false;\n+                uint32_t index = 0;\n+                if (keyMeta.hdKeypath != \"s\") {\n+                    std::vector<uint32_t> path;\n+                    if (keyMeta.has_key_origin) {\n+                        // We have a key origin, so pull it from it's path vector\n+                        if (keyMeta.key_origin.path.size() != 3) {\n+                            strErr = \"Error reading wallet database: keymeta found with unexpected path\";\n+                            return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421539430",
      "id" : 421539430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzOTQzMA==",
      "original_commit_id" : "22361d241b4d236b2b8f84b59094c296172db0ff",
      "original_line" : 423,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 407503207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T15:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421539430",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421540545"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421540545"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"fixup! Determine inactive HD seeds from key metadata and track them in LegacyScriptPubKeyMan\" (65dee3410cd9807bb4aa6b6677c2e0832e050ea2)\r\n\r\nNote: Could drop the comment about \"s\" here since it's now noted and handled above",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-05-07T14:18:22Z",
      "diff_hunk" : "@@ -418,15 +418,10 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                     std::vector<uint32_t> path;\n                     if (keyMeta.has_key_origin) {\n                         // We have a key origin, so pull it from it's path vector\n-                        if (keyMeta.key_origin.path.size() != 3) {\n-                            strErr = \"Error reading wallet database: keymeta found with unexpected path\";\n-                            return false;\n-                        }\n                         path = keyMeta.key_origin.path;\n-                    } else if (keyMeta.hdKeypath != \"s\") {\n+                    } else {\n                         // No key origin, have to parse the string\n                         // \"s\" is for a seed, no path info to parse so we skip those",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421540545",
      "id" : 421540545,
      "line" : 424,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU0MDU0NQ==",
      "original_commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "original_line" : 424,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 34,
      "pull_request_review_id" : 407503207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T15:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421540545",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421550317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421550317"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Determine inactive HD seeds from key metadata and track them in LegacyScriptPubKeyMan\" (22361d241b4d236b2b8f84b59094c296172db0ff)\r\n\r\nShould fix: It would probably be good to skip keys or error if path[1] is not `0` or `1` or path[0] is not `0`",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-05-07T14:30:19Z",
      "diff_hunk" : "@@ -405,6 +407,56 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssValue >> keyMeta;\n             wss.nKeyMeta++;\n             pwallet->GetOrCreateLegacyScriptPubKeyMan()->LoadKeyMetadata(vchPubKey.GetID(), keyMeta);\n+\n+            // Extract some CHDChain info from this metadata if it has any\n+            if (keyMeta.nVersion >= CKeyMetadata::VERSION_WITH_HDDATA) {\n+                // Get the path from the key origin or from the path string\n+                // Not applicable when path is \"s\" as that indicates a seed\n+                bool internal = false;\n+                uint32_t index = 0;\n+                if (keyMeta.hdKeypath != \"s\") {\n+                    std::vector<uint32_t> path;\n+                    if (keyMeta.has_key_origin) {\n+                        // We have a key origin, so pull it from it's path vector\n+                        if (keyMeta.key_origin.path.size() != 3) {\n+                            strErr = \"Error reading wallet database: keymeta found with unexpected path\";\n+                            return false;\n+                        }\n+                        path = keyMeta.key_origin.path;\n+                    } else if (keyMeta.hdKeypath != \"s\") {\n+                        // No key origin, have to parse the string\n+                        // \"s\" is for a seed, no path info to parse so we skip those\n+                        std::vector<uint32_t> path;\n+                        if (!ParseHDKeypath(keyMeta.hdKeypath, path)) {\n+                            strErr = \"Error reading wallet database: keymeta with invalid HD keypath\";\n+                            return false;\n+                        }\n+                    }\n+\n+                    // Extract the index and internal from the path\n+                    // Path string is m/0'/k'/i'\n+                    // Path vector is [0', k', i'] (but as ints OR'd with the hardened bit\n+                    // k == 0 for external, 1 for internal. i is the index\n+                    internal = path[1] == 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421550317",
      "id" : 421550317,
      "line" : 439,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU1MDMxNw==",
      "original_commit_id" : "22361d241b4d236b2b8f84b59094c296172db0ff",
      "original_line" : 440,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 49,
      "pull_request_review_id" : 407503207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T15:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421550317",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421554491"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421554491"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Generate new keys for inactive seeds after marking used\" (8b8f982973a83ea77b5159235b282f20bd430677)\r\n\r\nNote: Maybe would be good to include seed id in log message",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-05-07T14:35:14Z",
      "diff_hunk" : "@@ -290,6 +290,47 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n+bool LegacyScriptPubKeyMan::TopUpInactiveHDChain(const CKeyID seed_id, int64_t index, bool internal)\n+{\n+    LOCK(cs_KeyStore);\n+\n+    if (m_storage.IsLocked()) return false;\n+\n+    auto it = m_inactive_hd_chains.find(seed_id);\n+    if (it == m_inactive_hd_chains.end()) {\n+        return false;\n+    }\n+\n+    CHDChain& chain = it->second;\n+\n+    // Top up key pool\n+    int64_t target_size = std::max(gArgs.GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+\n+    // \"size\" of the keypools. Not really the size, actually the difference between index and the chain counter\n+    // Since chain counter is 1 based and index is 0 based, one of them needs to be offset by 1.\n+    int64_t kp_size = (internal ? chain.nInternalChainCounter : chain.nExternalChainCounter) - (index + 1);\n+\n+    // count number of missing keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user-selected target (-keypool)\n+    int64_t missing = std::max(std::max((int64_t) target_size, (int64_t) 1) - kp_size, (int64_t) 0);\n+\n+    WalletBatch batch(m_storage.GetDatabase());\n+    for (int64_t i = missing; i > 0; --i) {\n+        CPubKey pubkey(GenerateNewKey(batch, chain, internal));\n+        AddKeypoolPubkeyWithDB(pubkey, internal, batch);\n+    }\n+    if (missing > 0) {\n+        if (internal) {\n+            WalletLogPrintf(\"inactive seed added %d internal keys\\n\", missing);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421554491",
      "id" : 421554491,
      "line" : 324,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU1NDQ5MQ==",
      "original_commit_id" : "8b8f982973a83ea77b5159235b282f20bd430677",
      "original_line" : 324,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 35,
      "pull_request_review_id" : 407503207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T15:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421554491",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421567397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421567397"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Test that keys from inactive seeds are generated\" (5932c00fef5054207bd133daa1aea9857d9c3611)\r\n\r\nClever test! Nice way to ensure the inactive pool wasn't topped up while still active",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-05-07T14:51:35Z",
      "diff_hunk" : "@@ -170,5 +170,82 @@ def run_test(self):\n             assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n             assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+            self.log.info('Test sethdseed restoring with keys outside of the initial keypool')\n+            self.nodes[0].generate(10)\n+            # Restart node 1 with keypool of 3 and a different wallet\n+            self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+            self.stop_node(1)\n+            self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+            connect_nodes(self.nodes[0], 1)\n+\n+            # sethdseed restoring and seeing txs to addresses out of the keypool\n+            origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+            seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+            origin_rpc.sethdseed(True, seed)\n+\n+            self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+            restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+            restore_rpc.sethdseed(True, seed) # Set to be the same seed as origin_rpc\n+            restore_rpc.sethdseed(True) # Rotate to a new seed, making original `seed` inactive\n+\n+            # Check persistence of inactive seed\n+            restore_rpc.unloadwallet()\n+            self.nodes[1].loadwallet('restore')\n+            restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+            # Empty origin keypool and get an address that is beyond the initial keypool\n+            origin_rpc.getnewaddress()\n+            origin_rpc.getnewaddress()\n+            last_addr = origin_rpc.getnewaddress() # Last address of initial keypool\n+            addr = origin_rpc.getnewaddress() # First address beyond initial keypool\n+\n+            # Check that the restored seed has last_addr but does not have addr\n+            info = restore_rpc.getaddressinfo(last_addr)\n+            assert_equal(info['ismine'], True)\n+            info = restore_rpc.getaddressinfo(addr)\n+            assert_equal(info['ismine'], False)\n+            # Check that the origin seed has addr\n+            info = origin_rpc.getaddressinfo(addr)\n+            assert_equal(info['ismine'], True)\n+\n+            # Send a transaction to addr, which is out of the initial keypool.\n+            # The wallet that has set a new seed (restore_rpc) should not detect this transaction.\n+            txid = self.nodes[0].sendtoaddress(addr, 1)\n+            origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+            self.nodes[0].generate(1)\n+            origin_rpc.gettransaction(txid)\n+            assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\n+            out_of_kp_txid = txid\n+\n+            # Send a transaction to last_addr, which is in the initial keypool.\n+            # The wallet that has set a new seed (restore_rpc) should detect this transaction and generate 3 new keys from the initial seed.\n+            # The previous transaction (out_of_kp_txid) should still not be detected as a rescan is required.\n+            txid = self.nodes[0].sendtoaddress(last_addr, 1)\n+            origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+            self.nodes[0].generate(1)\n+            origin_rpc.gettransaction(txid)\n+            restore_rpc.gettransaction(txid)\n+            assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)\n+\n+            # After rescanning, restore_rpc should now see out_of_kp_txid and generate an additional key.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421567397",
      "id" : 421567397,
      "line" : 231,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2NzM5Nw==",
      "original_commit_id" : "5932c00fef5054207bd133daa1aea9857d9c3611",
      "original_line" : 230,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : 69,
      "pull_request_review_id" : 407503207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T15:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421567397",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421571988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421571988"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Test that keys from inactive seeds are generated\" (5932c00fef5054207bd133daa1aea9857d9c3611)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/17681#discussion_r393019229\r\n\r\n> for info I appended these checks after the rescan so that all checks before the rescan are also repeated after it, and all still pass\r\n\r\nNot sure if this review comment was made based on an older version of the test, but while these checks do good as a sanity check for rescan, I think adding them here would muddle the purpose of this test, and wouldn't be great to add here unless preceded by an explanatory comment, or pulled into a function to keep the test readble",
      "commit_id" : "65dee3410cd9807bb4aa6b6677c2e0832e050ea2",
      "created_at" : "2020-05-07T14:57:41Z",
      "diff_hunk" : "@@ -153,5 +153,74 @@ def run_test(self):\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, new_seed)\n         assert_raises_rpc_error(-5, \"Already have this key\", self.nodes[1].sethdseed, False, self.nodes[1].dumpprivkey(self.nodes[1].getnewaddress()))\n \n+        self.log.info('Test sethdseed restoring with keys outside of the intial keypool')\n+        self.nodes[0].generate(10)\n+        # Restart node 1 with keypool of 5 and a different wallet\n+        self.nodes[1].createwallet(wallet_name='origin', blank=True)\n+        self.stop_node(1)\n+        self.start_node(1, extra_args=['-keypool=3', '-wallet=origin'])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # sethdseed restoring and seeing txs to addresses out of the keypool\n+        origin_rpc = self.nodes[1].get_wallet_rpc('origin')\n+        seed = self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress())\n+        origin_rpc.sethdseed(True, seed)\n+\n+        self.nodes[1].createwallet(wallet_name='restore', blank=True)\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+        restore_rpc.sethdseed(True, seed)\n+        restore_rpc.sethdseed(True)\n+\n+        # Check persistence of inactive seed\n+        restore_rpc.unloadwallet()\n+        self.nodes[1].loadwallet('restore')\n+        restore_rpc = self.nodes[1].get_wallet_rpc('restore')\n+\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+        info = origin_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        txid = self.nodes[0].sendtoaddress(addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\n+        out_of_kp_txid = txid\n+\n+        txid = self.nodes[0].sendtoaddress(last_addr, 1)\n+        origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n+        self.nodes[0].generate(1)\n+        origin_rpc.gettransaction(txid)\n+        restore_rpc.gettransaction(txid)\n+        assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)\n+\n+        restore_rpc.rescanblockchain()\n+        restore_rpc.gettransaction(out_of_kp_txid)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], True)\n+\n+        # Check again that 3 keys were derived.\n+        # Empty keypool and get an address that is beyond the initial keypool\n+        origin_rpc.getnewaddress()\n+        origin_rpc.getnewaddress()\n+        last_addr = origin_rpc.getnewaddress()\n+        addr = origin_rpc.getnewaddress()\n+\n+        # Check that the restored seed does not have addr but does have last_addr\n+        info = restore_rpc.getaddressinfo(last_addr)\n+        assert_equal(info['ismine'], True)\n+        info = restore_rpc.getaddressinfo(addr)\n+        assert_equal(info['ismine'], False)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17681#discussion_r421571988",
      "id" : 421571988,
      "in_reply_to_id" : 393019229,
      "line" : 250,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU3MTk4OA==",
      "original_commit_id" : "d435512094ccd447ce0d582fa0e9ea85c46ebec3",
      "original_line" : 250,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : 88,
      "pull_request_review_id" : 407503207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17681",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-07T15:06:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421571988",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
