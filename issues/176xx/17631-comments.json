[
   {
      "author_association" : "MEMBER",
      "body" : "A test would be nice.",
      "created_at" : "2019-11-29T09:00:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17631#issuecomment-559713149",
      "id" : 559713149,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17631",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTcxMzE0OQ==",
      "updated_at" : "2019-11-29T09:00:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559713149",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "After reading `doc/REST-interface.md` I'm not entirely clear about the assumed trust boundaries.\r\n\r\nWhat recommendations do we give to our users regarding exposing the REST endpoints publicly? Do the recommendations differ from our recommendations with regards to exposing the JSON-RPC endpoints publicly?\r\n\r\nAs I've understood it we regard the JSON-RPC interface as as an internal control plane only to be accessible by trusted clients. The assumption we're making from a trust boundary perspective seems to be that we assume that an untrusted clients will never be able to connect to the port serving the JSON-RPC interface (which is the same port as the REST interface).",
      "created_at" : "2019-11-29T09:24:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17631#issuecomment-559721048",
      "id" : 559721048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17631",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTcyMTA0OA==",
      "updated_at" : "2019-11-29T09:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559721048",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\n> After reading doc/REST-interface.md I'm not entirely clear about the assumed trust boundaries.\r\n\r\nThat's a fair question (FWIW the limit has always been: only public data, no complex queries, do not parse JSON as input), but I'd suggest opening a new issue for it. Please keep this one for review of the code changes.",
      "created_at" : "2019-11-29T09:32:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17631#issuecomment-559723792",
      "id" : 559723792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17631",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTcyMzc5Mg==",
      "updated_at" : "2019-11-29T09:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559723792",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Without knowing if consumers are trusted or not it is pretty hard to review it from a security perspective :)",
      "created_at" : "2019-11-29T09:37:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17631#issuecomment-559725358",
      "id" : 559725358,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17631",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTcyNTM1OA==",
      "updated_at" : "2019-11-29T09:37:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559725358",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The REST interface is a lightweight interface for querying public data. Consumers are trusted but less so than on RPC (as they don't authenticate). I still wouldn't recommend exposing it directly to the internet. But maybe it's OK to open it \"publicly\" inside some LAN or VPN that your applications run in.\r\n\r\nThis is my last general comment on this, please open a new issue if you want to continue this discussion.\r\n\r\n> `doc/REST-interface.md`\r\n\r\nSpeaking of which, please update the documentation to mention this new call.",
      "created_at" : "2019-11-29T09:42:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17631#issuecomment-559726929",
      "id" : 559726929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17631",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTcyNjkyOQ==",
      "updated_at" : "2019-11-29T09:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559726929",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17631#discussion_r352165265"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17631"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/352165265"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, the use of a single line if statement would be better (including the other one line statements as well)",
      "commit_id" : "661f03f03576b3588d6aa973b6c731b72e50bef8",
      "created_at" : "2019-11-29T14:55:44Z",
      "diff_hunk" : "@@ -265,6 +267,112 @@ static bool rest_block_notxdetails(HTTPRequest* req, const std::string& strURIPa\n     return rest_block(req, strURIPart, false);\n }\n \n+static bool rest_block_filter(HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req))\n+        return false;\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n+\n+    //request is sent over URI scheme /rest/blockfilter/filtertype/requesttype/blockhash\n+    std::vector<std::string> uriParts;\n+    boost::split(uriParts, param, boost::is_any_of(\"/\"));\n+    if (uriParts.size() != 3) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid URI format. Expected /rest/blockfilter/filtertype/requesttype/blockhash\");\n+    }\n+\n+    uint256 block_hash;\n+    if (!ParseHashStr(uriParts[2], block_hash)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17631#discussion_r352165265",
      "id" : 352165265,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjE2NTI2NQ==",
      "original_commit_id" : "661f03f03576b3588d6aa973b6c731b72e50bef8",
      "original_position" : 32,
      "path" : "src/rest.cpp",
      "position" : 32,
      "pull_request_review_id" : 324757830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17631",
      "updated_at" : "2019-11-29T14:56:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/352165265",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/12272949?v=4",
         "events_url" : "https://api.github.com/users/emilengler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emilengler/followers",
         "following_url" : "https://api.github.com/users/emilengler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emilengler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emilengler",
         "id" : 12272949,
         "login" : "emilengler",
         "node_id" : "MDQ6VXNlcjEyMjcyOTQ5",
         "organizations_url" : "https://api.github.com/users/emilengler/orgs",
         "received_events_url" : "https://api.github.com/users/emilengler/received_events",
         "repos_url" : "https://api.github.com/users/emilengler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emilengler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emilengler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17631#discussion_r352227089"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17631"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/352227089"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would be much too long a line to do that.",
      "commit_id" : "661f03f03576b3588d6aa973b6c731b72e50bef8",
      "created_at" : "2019-11-29T18:57:58Z",
      "diff_hunk" : "@@ -265,6 +267,112 @@ static bool rest_block_notxdetails(HTTPRequest* req, const std::string& strURIPa\n     return rest_block(req, strURIPart, false);\n }\n \n+static bool rest_block_filter(HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req))\n+        return false;\n+    std::string param;\n+    const RetFormat rf = ParseDataFormat(param, strURIPart);\n+\n+    //request is sent over URI scheme /rest/blockfilter/filtertype/requesttype/blockhash\n+    std::vector<std::string> uriParts;\n+    boost::split(uriParts, param, boost::is_any_of(\"/\"));\n+    if (uriParts.size() != 3) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid URI format. Expected /rest/blockfilter/filtertype/requesttype/blockhash\");\n+    }\n+\n+    uint256 block_hash;\n+    if (!ParseHashStr(uriParts[2], block_hash)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17631#discussion_r352227089",
      "id" : 352227089,
      "in_reply_to_id" : 352165265,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjIyNzA4OQ==",
      "original_commit_id" : "661f03f03576b3588d6aa973b6c731b72e50bef8",
      "original_position" : 32,
      "path" : "src/rest.cpp",
      "position" : 32,
      "pull_request_review_id" : 324833271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17631",
      "updated_at" : "2019-11-29T18:57:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/352227089",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   }
]
