[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "will likely need to rebase on top of https://github.com/bitcoin/bitcoin/pull/22870 and change the failing tests to exempt them from DISCOURAGE_UPGRADABLE_NOPS",
      "created_at" : "2021-09-03T01:08:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#issuecomment-912173251",
      "id" : 912173251,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22871",
      "node_id" : "IC_kwDOABII5842XqjD",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-03T01:08:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912173251",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r701540132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701540132"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "probably worth adding a comment like: `// CHECKSEQUENCEVERIFY behaving as NOP, set error appropriately` ",
      "commit_id" : "59008cfb0b4a0793b03d52c4c77ab64cd4ede9d7",
      "created_at" : "2021-09-03T02:23:12Z",
      "diff_hunk" : "@@ -606,8 +606,11 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                     // To provide for future soft-fork extensibility, if the\n                     // operand has the disabled lock-time flag set,\n                     // CHECKSEQUENCEVERIFY behaves as a NOP.\n-                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0)\n+                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0) {\n+                        if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r701540132",
      "id" : 701540132,
      "line" : 610,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTU0MDEzMg==",
      "original_commit_id" : "59008cfb0b4a0793b03d52c4c77ab64cd4ede9d7",
      "original_line" : 610,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 6,
      "pull_request_review_id" : 745656644,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-03T02:23:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701540132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15256660?v=4",
         "events_url" : "https://api.github.com/users/benthecarman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benthecarman/followers",
         "following_url" : "https://api.github.com/users/benthecarman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benthecarman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benthecarman",
         "id" : 15256660,
         "login" : "benthecarman",
         "node_id" : "MDQ6VXNlcjE1MjU2NjYw",
         "organizations_url" : "https://api.github.com/users/benthecarman/orgs",
         "received_events_url" : "https://api.github.com/users/benthecarman/received_events",
         "repos_url" : "https://api.github.com/users/benthecarman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benthecarman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benthecarman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benthecarman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Expanded the semantics to reject in transaction standardness as well.",
      "created_at" : "2021-09-04T16:29:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#issuecomment-913001038",
      "id" : 913001038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22871",
      "node_id" : "IC_kwDOABII5842a0pO",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-04T16:29:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913001038",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702327593"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702327593"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "adding this `extra_fields` check should result in a fork now, no?",
      "commit_id" : "a1d274d3b22ea8866b85a748b9e50a514d13ab92",
      "created_at" : "2021-09-04T20:56:12Z",
      "diff_hunk" : "@@ -606,8 +606,17 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                     // To provide for future soft-fork extensibility, if the\n                     // operand has the disabled lock-time flag set,\n                     // CHECKSEQUENCEVERIFY behaves as a NOP.\n-                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0)\n+                    // If uninterpreted fields are set, also treat as a NOP.\n+                    // This also covers CTxIn::SEQUENCE_FINAL since all bits are\n+                    // set there.\n+                    const CScriptNum extra_fields = nSequence &\n+                        ~(CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG | CTxIn::SEQUENCE_LOCKTIME_MASK);\n+                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0 || extra_fields != 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702327593",
      "id" : 702327593,
      "line" : 614,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjMyNzU5Mw==",
      "original_commit_id" : "4a63b2ccff7ce5f485e19b75b07ddbfa5c11add5",
      "original_line" : 614,
      "original_position" : 10,
      "original_start_line" : 612,
      "path" : "src/script/interpreter.cpp",
      "position" : 10,
      "pull_request_review_id" : 746594957,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871",
      "side" : "RIGHT",
      "start_line" : 612,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-04T20:56:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702327593",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15256660?v=4",
         "events_url" : "https://api.github.com/users/benthecarman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benthecarman/followers",
         "following_url" : "https://api.github.com/users/benthecarman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benthecarman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benthecarman",
         "id" : 15256660,
         "login" : "benthecarman",
         "node_id" : "MDQ6VXNlcjE1MjU2NjYw",
         "organizations_url" : "https://api.github.com/users/benthecarman/orgs",
         "received_events_url" : "https://api.github.com/users/benthecarman/received_events",
         "repos_url" : "https://api.github.com/users/benthecarman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benthecarman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benthecarman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benthecarman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702333392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702333392"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You're totally right, my bad.\r\n\r\nWe need to handle it separately and still pass it to CheckSequence even though the fields are ignored.",
      "commit_id" : "0ed4272a2c351374d5e69430a0a7e6b967c6050f",
      "created_at" : "2021-09-04T22:02:48Z",
      "diff_hunk" : "@@ -606,8 +606,17 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                     // To provide for future soft-fork extensibility, if the\n                     // operand has the disabled lock-time flag set,\n                     // CHECKSEQUENCEVERIFY behaves as a NOP.\n-                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0)\n+                    // If uninterpreted fields are set, also treat as a NOP.\n+                    // This also covers CTxIn::SEQUENCE_FINAL since all bits are\n+                    // set there.\n+                    const CScriptNum extra_fields = nSequence &\n+                        ~(CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG | CTxIn::SEQUENCE_LOCKTIME_MASK);\n+                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0 || extra_fields != 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702333392",
      "id" : 702333392,
      "in_reply_to_id" : 702327593,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjMzMzM5Mg==",
      "original_commit_id" : "4a63b2ccff7ce5f485e19b75b07ddbfa5c11add5",
      "original_line" : 614,
      "original_position" : 10,
      "original_start_line" : 612,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 746597813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-04T22:02:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702333392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702334685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702334685"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok I think the patch i added properly only checks the extra flags during standardness interpreter rules.",
      "commit_id" : "0ed4272a2c351374d5e69430a0a7e6b967c6050f",
      "created_at" : "2021-09-04T22:19:36Z",
      "diff_hunk" : "@@ -606,8 +606,17 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                     // To provide for future soft-fork extensibility, if the\n                     // operand has the disabled lock-time flag set,\n                     // CHECKSEQUENCEVERIFY behaves as a NOP.\n-                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0)\n+                    // If uninterpreted fields are set, also treat as a NOP.\n+                    // This also covers CTxIn::SEQUENCE_FINAL since all bits are\n+                    // set there.\n+                    const CScriptNum extra_fields = nSequence &\n+                        ~(CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG | CTxIn::SEQUENCE_LOCKTIME_MASK);\n+                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0 || extra_fields != 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702334685",
      "id" : 702334685,
      "in_reply_to_id" : 702327593,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjMzNDY4NQ==",
      "original_commit_id" : "4a63b2ccff7ce5f485e19b75b07ddbfa5c11add5",
      "original_line" : 614,
      "original_position" : 10,
      "original_start_line" : 612,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 746598465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-04T22:19:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702334685",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702340924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702340924"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I was wrong on that; the prior policy.cpp i had was not exempting final sequence. new version should be (hopefully) correct.",
      "commit_id" : "0ed4272a2c351374d5e69430a0a7e6b967c6050f",
      "created_at" : "2021-09-04T23:41:08Z",
      "diff_hunk" : "@@ -606,8 +606,17 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                     // To provide for future soft-fork extensibility, if the\n                     // operand has the disabled lock-time flag set,\n                     // CHECKSEQUENCEVERIFY behaves as a NOP.\n-                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0)\n+                    // If uninterpreted fields are set, also treat as a NOP.\n+                    // This also covers CTxIn::SEQUENCE_FINAL since all bits are\n+                    // set there.\n+                    const CScriptNum extra_fields = nSequence &\n+                        ~(CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG | CTxIn::SEQUENCE_LOCKTIME_MASK);\n+                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0 || extra_fields != 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702340924",
      "id" : 702340924,
      "in_reply_to_id" : 702327593,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjM0MDkyNA==",
      "original_commit_id" : "4a63b2ccff7ce5f485e19b75b07ddbfa5c11add5",
      "original_line" : 614,
      "original_position" : 10,
      "original_start_line" : 612,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 746601292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-09-04T23:41:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702340924",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The plot thickens: I've now set the policy transaction level rule to allow 0xffffffff-2 or greater since it seems that 0xffffffff-1 is used to mean \"no RBF; but allow absolute locktimes\" and 0xffffffff -2 is used to mean \"yes RBF;  allow absolute locktimes and no relative locktimes\" in one script test.\r\n\r\nSince folks might use the script test value as canon for that use case, we should treat it as permitted and reserved.",
      "created_at" : "2021-09-05T02:29:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#issuecomment-913073892",
      "id" : 913073892,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22871",
      "node_id" : "IC_kwDOABII5842bGbk",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-05T02:29:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913073892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "As the original author of this offending code, I concept-ACK this change **if** it turns out that nobody is currently using `nSequence` for any other purpose. However at the time that `CHECKSEQUENCEVERIFY` was implemented, there were was at least one parasitic protocol (Counterparty? Colored coins? I'm sorry I forget which) using `nSequence` for other purposes, and in production too IIRC. They wanted to be able to continue doing what they were doing without interruption, and having `SEQUENCE_LOCKTIME_DISABLE_FLAG` be available for them was the compromise--meaning that it was critically important that setting this flag *not* result in their transactions being excluded from the mempool.\r\n\r\nNow I haven't seen anyone use `nSequence` for anything else since then, but then I don't keep up to date on all the projects in this space. Maybe someone should scan the blockchain and see if `SEQUENCE_LOCKTIME_DISABLE_FLAG` has even been used in the past 6 years?",
      "created_at" : "2021-09-05T06:23:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#issuecomment-913094193",
      "id" : 913094193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22871",
      "node_id" : "IC_kwDOABII5842bLYx",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-05T06:25:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913094193",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Alex Mizrahi confirms it was the EPOBC colored coins protocol which was using nSequence at the time:\r\n\r\nhttps://twitter.com/killerstorm/status/1434412779713220610",
      "created_at" : "2021-09-05T07:13:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#issuecomment-913099077",
      "id" : 913099077,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22871",
      "node_id" : "IC_kwDOABII5842bMlF",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-05T07:13:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913099077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "We *could* add support for the values listed in https://en.bitcoin.it/wiki/Colored_Coins which are 0x25 and 0x33 irrespective of if the DISABLED flag is set? That way, either your coins are slow to move or you can set the DISABLED flag. This is compatible with long standing presigned transactions that might be using this...\r\n\r\nOTOH it's probably a small enough number that a combination of advertising that new standardness rules will go into effect in a new release (or we could change DISCOURAGE_UPGRADABLE_NOPS as DISCOURAGE_UPGRADABLE_SEQUENCE and do a flag day since it's just standardness), and contacting miners one off to include a txn in mempool should be sufficient to cover any holdouts.",
      "created_at" : "2021-09-05T16:04:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#issuecomment-913181590",
      "id" : 913181590,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22871",
      "node_id" : "IC_kwDOABII5842bguW",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-05T16:04:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913181590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702455761"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702455761"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa can you confirm that changing this test like this is OK -- perhaps you'd prefer to preserve the test as is but  set is_standard_tx to false when appropriate?",
      "commit_id" : "19557ee684a20281c68cc3b5a65a1b21b5c77f0c",
      "created_at" : "2021-09-05T17:48:44Z",
      "diff_hunk" : "@@ -1389,7 +1388,7 @@ def test_spenders(self, node, spenders, input_counts):\n             amount = sum(utxo.output.nValue for utxo in input_utxos)\n             fee = min(random.randrange(MIN_FEE * 2, MIN_FEE * 4), amount - DUST_LIMIT)  # 10000-20000 sat fee\n             in_value = amount - fee\n-            tx.vin = [CTxIn(outpoint=utxo.outpoint, nSequence=random.randint(min_sequence, 0xffffffff)) for utxo in input_utxos]\n+            tx.vin = [CTxIn(outpoint=utxo.outpoint, nSequence=random.randint(0xffffffff-2, 0xffffffff)) for utxo in input_utxos]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702455761",
      "id" : 702455761,
      "line" : 1391,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjQ1NTc2MQ==",
      "original_commit_id" : "19557ee684a20281c68cc3b5a65a1b21b5c77f0c",
      "original_line" : 1391,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "test/functional/feature_taproot.py",
      "position" : 13,
      "pull_request_review_id" : 746671341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-05T17:48:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702455761",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702498024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702498024"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wonder if this second discouraging check is safe w.r.t to propagation of CSV'ed inputs ?\r\n\r\nIf the spending wallet has decided to explicitly signal RBF with a range of bits in the uninterpreted fields, this transaction would be rejected as non-standard ? Note, such weird range of bits could be a protocol watermark such as the Lightning obscured commitment number in commitment transactions.\r\n\r\nFurther, I've a second wonder about this discouraging effectiveness w.r.t to hypothetical future semantic. If we assume the upgrade semantics to be well-designed, they will set bit31 to disable bip69 semantic. Doing so, if they need more than the 14 uninterpreted bits, they might reuse the interpreted ones to encode their new field ? If they do so, the SEQUENCE_LOCKTIME_MASK bits might be set and not catch by this discouraging check.\r\n\r\nI think those wonders express a trade-off, if we make this discouraging check more efficient to better preserve upgradeability, we're increasing the risk to silently the broadcast of any Bitcoin software interpreting `nSequence` for a special purpose ?",
      "commit_id" : "19557ee684a20281c68cc3b5a65a1b21b5c77f0c",
      "created_at" : "2021-09-06T00:16:42Z",
      "diff_hunk" : "@@ -606,10 +606,29 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                     // To provide for future soft-fork extensibility, if the\n                     // operand has the disabled lock-time flag set,\n                     // CHECKSEQUENCEVERIFY behaves as a NOP.\n-                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0)\n+                    // This also covers CTxIn::SEQUENCE_FINAL since all bits are\n+                    // set in that case.\n+                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0) {\n+                        // CHECKSEQUENCEVERIFY behaving as NOP, set error appropriately\n+                        if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)\n+                            return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n                         break;\n+                    }\n+\n+                    // Only when discouraging un-upgraded semantics,\n+                    // If uninterpreted fields are set, treat and reject as a NOP.\n+                    if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS &&\n+                        (nSequence & ~(CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG | CTxIn::SEQUENCE_LOCKTIME_MASK)) != 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702498024",
      "id" : 702498024,
      "line" : 621,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjQ5ODAyNA==",
      "original_commit_id" : "1bd2b15d82ebc80b3c30ab247287717a893cb37a",
      "original_line" : 621,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 17,
      "pull_request_review_id" : 746698971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-06T00:39:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702498024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree this isn't a simple patch and see given the risks, but note it is *policy*, so transactions can still be valid in consensus and this behavior could be e.g. conf file disabled safely. I think most discussion should be on the mailing list.\r\n\r\nI have actually been sitting on a draft email on the full RBF stuff, letting it stew before I stick my nose in that. The basics of my thought process is that we should really only be using comitted transaction data for consensus purposes, not to signal mempool policies. This would also let us get rid of the annoying RBF 0xfffffffe and 0xfffffffd check since those have no consensus meaning. So I'm for it from a 'unfuck the code' perspective.\r\n\r\nI think one point that's also worth noting is that there are two different standardness rules here, one applies to transaction nSeq the other to script CSV argument. The policies can (and do in this PR) differ.\r\n\r\nI think it would make sense to merge something like this early in the release cycle (to signal it is going to be released, giving people time to complain) and potentially even activate the standardness rule as a flag day or go full BIP-9 if there is a strong worry about it. It's a standardness flag, not consensus, so we can do whatever we want. But we should be sure that people have time to complain. The only thing I don't want to happen is for someone to see this issue, and then start using nSequence in a way that would limit the upgradability because they can. That would be annoying, so I think we'd want to ensure any arguments are presented in good faith (with e.g. testnet or mainnet examples of the behavior being used before we act). ",
      "created_at" : "2021-09-06T03:04:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#issuecomment-913302253",
      "id" : 913302253,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22871",
      "node_id" : "IC_kwDOABII5842b-Lt",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-06T03:04:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913302253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702534899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702534899"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Well, any time CSV is enabled, RBF is enabled, right? So I'm not sure why they'd add something in the uninterpreted section for that.\r\n\r\nI'm not concerned with the future upgrading checks here. We'll simply need to write new policy/standard rules in the appropriate places to permit those sequences to be used. In the future, we don't want any sequence in our mempool we don't understand because that might make us (if un-upgraded) mine a bad block.\r\n\r\nIf someone is using nSequence for a special purpose they should write a BIP to document it or otherwise communicate the use (e.g., via writing tests and test vectors for core to comply with). Otherwise there are many ways we might accidentally break someones weird software.",
      "commit_id" : "19557ee684a20281c68cc3b5a65a1b21b5c77f0c",
      "created_at" : "2021-09-06T03:08:41Z",
      "diff_hunk" : "@@ -606,10 +606,29 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                     // To provide for future soft-fork extensibility, if the\n                     // operand has the disabled lock-time flag set,\n                     // CHECKSEQUENCEVERIFY behaves as a NOP.\n-                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0)\n+                    // This also covers CTxIn::SEQUENCE_FINAL since all bits are\n+                    // set in that case.\n+                    if ((nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0) {\n+                        // CHECKSEQUENCEVERIFY behaving as NOP, set error appropriately\n+                        if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)\n+                            return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n                         break;\n+                    }\n+\n+                    // Only when discouraging un-upgraded semantics,\n+                    // If uninterpreted fields are set, treat and reject as a NOP.\n+                    if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS &&\n+                        (nSequence & ~(CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG | CTxIn::SEQUENCE_LOCKTIME_MASK)) != 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#discussion_r702534899",
      "id" : 702534899,
      "in_reply_to_id" : 702498024,
      "line" : 621,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjUzNDg5OQ==",
      "original_commit_id" : "1bd2b15d82ebc80b3c30ab247287717a893cb37a",
      "original_line" : 621,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 17,
      "pull_request_review_id" : 746740690,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22871",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-06T03:08:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702534899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "To be clear, the original code isn't a mistake. BIP68-disabled nSequence values are very purposefully allowed by the IsStandard rules. nSequence was always intended as a client-interpreted field to be used when merging or updating transactions, and therefore it would be expected to take on unexpected values. However as we all know this original naive idea didn't work and it took a combination of BIP68 consensus rules and RBF mempool policy to actually implement a useful form of transaction replacement in the mempool. At this time nSequence took on consensus meaning, but there was a lot of push back from 3rd party protocol developers who were already treating nSequence as a 4-byte-per-input private use field. Thus `SEQUENCE_LOCKTIME_DISABLE_FLAG` was added, and in a way that very purposefully did not impact non-consensus use of nSequence.\r\n\r\nThat said, bitcoin is now twice as old as when this decision was made. Does anyone actually use nSequence for non-consensus purposes anymore? If not, then this patch makes some sense.",
      "created_at" : "2021-09-06T07:30:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#issuecomment-913413578",
      "id" : 913413578,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22871",
      "node_id" : "IC_kwDOABII5842cZXK",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-06T07:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913413578",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The original code *is* a mistake IMO since the upgradable semantics issue isn't just in tx relay, but also in the stack values permitted to be passed to CSV. As a brand new opcode, the semantics there can be totally different from the nSeqeuence value in the transaction (e.g., when Disable is set we could add a rule to check a sequence lock in the taproot annex). To underscore that the differing semantics exist: `0x80000000 CSV` script can be used with any txin.nSequence you like.\r\n\r\nAnd as @darosior points out on the mailing list, Lightning does use 0x80<junk>, so we need to accomodate that. I will push some patches shortly.",
      "created_at" : "2021-09-06T09:53:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#issuecomment-913512686",
      "id" : 913512686,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22871",
      "node_id" : "IC_kwDOABII5842cxju",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-06T09:53:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913512686",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Mistake or no, this again was intentional, if I understand you correctly. Allowing values outside of the checked range to pass to CSV allows for soft-fork upgradeability of the CSV opcode itself. But here the case can be more clearly made to treat such stack values as discouraged-NOPs.",
      "created_at" : "2021-09-06T10:04:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#issuecomment-913520464",
      "id" : 913520464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22871",
      "node_id" : "IC_kwDOABII5842czdQ",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-06T10:04:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913520464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes -- the allowing outside values to pass consensus was intention, no doubt there. That it wasn't discouraged was a mistake (the discouraging code predates CSV by a bit) because it impacts the ability to actually use new values with CSV in a soft fork. E.g., the lightning folks could be using uninterpreted fields in CSV stack argument for metadata today and then it'd be bricked for upgrades.",
      "created_at" : "2021-09-06T10:08:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22871#issuecomment-913523373",
      "id" : 913523373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22871",
      "node_id" : "IC_kwDOABII5842c0Kt",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-06T10:08:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913523373",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   }
]
