[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22778](https://github.com/bitcoin/bitcoin/pull/22778) (net processing: Reduce resource usage for inbound block-relay-only connections by jnewbery)\n* [#22777](https://github.com/bitcoin/bitcoin/pull/22777) (net processing: don't request tx relay on feeler connections by jnewbery)\n* [#22766](https://github.com/bitcoin/bitcoin/pull/22766) (refactor: Clarify and disable unused ArgsManager flags by ryanofsky)\n* [#22340](https://github.com/bitcoin/bitcoin/pull/22340) (p2p: Use legacy relaying to download blocks in blocks-only mode by dergoegge)\n* [#21527](https://github.com/bitcoin/bitcoin/pull/21527) (net_processing: lock clean up by ajtowns)\n* [#21160](https://github.com/bitcoin/bitcoin/pull/21160) (net/net processing: Move tx inventory into net_processing by jnewbery)\n* [#20799](https://github.com/bitcoin/bitcoin/pull/20799) (net processing: Only support version 2 compact blocks by jnewbery)\n* [#16545](https://github.com/bitcoin/bitcoin/pull/16545) (refactor: Implement missing error checking for ArgsManager flags by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-08-31T19:43:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22850#issuecomment-909555946",
      "id" : 909555946,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22850",
      "node_id" : "IC_kwDOABII5842Nrjq",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-31T19:43:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/909555946",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22850#discussion_r700952750"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22850"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700952750"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wouldn't the same check be needed for `BLOCKTXN`?",
      "commit_id" : "0e07e48a3b049eaa1c7b779187e56cf7ea85ead9",
      "created_at" : "2021-09-02T10:24:02Z",
      "diff_hunk" : "@@ -3396,8 +3415,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n     if (msg_type == NetMsgType::CMPCTBLOCK)\n     {\n-        // Ignore cmpctblock received while importing\n-        if (fImporting || fReindex) {\n+        // Ignore cmpctblock received while importing, or when there is no mempool\n+        if (fImporting || fReindex || !m_mempool) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22850#discussion_r700952750",
      "id" : 700952750,
      "line" : 3419,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDk1Mjc1MA==",
      "original_commit_id" : "0e07e48a3b049eaa1c7b779187e56cf7ea85ead9",
      "original_line" : 3419,
      "original_position" : 222,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 222,
      "pull_request_review_id" : 744885059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22850",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T10:50:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700952750",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22850#discussion_r700954602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22850"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700954602"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wouldn't it be safer to set the block to nullptr when the mempool is nullptr?",
      "commit_id" : "0e07e48a3b049eaa1c7b779187e56cf7ea85ead9",
      "created_at" : "2021-09-02T10:26:53Z",
      "diff_hunk" : "@@ -867,7 +867,7 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n     RemoveBlockRequest(hash);\n \n     std::list<QueuedBlock>::iterator it = state->vBlocksInFlight.insert(state->vBlocksInFlight.end(),\n-            {&block, std::unique_ptr<PartiallyDownloadedBlock>(pit ? new PartiallyDownloadedBlock(&m_mempool) : nullptr)});\n+            {&block, std::unique_ptr<PartiallyDownloadedBlock>(pit ? new PartiallyDownloadedBlock(m_mempool) : nullptr)});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22850#discussion_r700954602",
      "id" : 700954602,
      "line" : 870,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDk1NDYwMg==",
      "original_commit_id" : "0e07e48a3b049eaa1c7b779187e56cf7ea85ead9",
      "original_line" : 870,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 23,
      "pull_request_review_id" : 744885059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22850",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T10:50:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700954602",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22850#discussion_r700958398"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22850"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700958398"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you pick this suggestion, you can also add a separate commit to document the expectation that `PartiallyDownloadedBlock` assumes a reference (doesn't accept nullptr) and that `InitData` without a pool is UB/Crash.\r\n\r\n```diff\r\ndiff --git a/src/blockencodings.cpp b/src/blockencodings.cpp\r\nindex aa111b5939..8f77c4afd6 100644\r\n--- a/src/blockencodings.cpp\r\n+++ b/src/blockencodings.cpp\r\n@@ -45,8 +45,9 @@ uint64_t CBlockHeaderAndShortTxIDs::GetShortID(const uint256& txhash) const {\r\n }\r\n \r\n \r\n-\r\n-ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, const std::vector<std::pair<uint256, CTransactionRef>>& extra_txn) {\r\n+ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, const std::vector<std::pair<uint256, CTransactionRef>>& extra_txn)\r\n+{\r\n+    Assert(pool);\r\n     if (cmpctblock.header.IsNull() || (cmpctblock.shorttxids.empty() && cmpctblock.prefilledtxn.empty()))\r\n         return READ_STATUS_INVALID;\r\n     if (cmpctblock.shorttxids.size() + cmpctblock.prefilledtxn.size() > MAX_BLOCK_WEIGHT / MIN_SERIALIZABLE_TRANSACTION_WEIGHT)\r\ndiff --git a/src/blockencodings.h b/src/blockencodings.h\r\nindex 326db1b4a7..ce3284bfd5 100644\r\n--- a/src/blockencodings.h\r\n+++ b/src/blockencodings.h\r\n@@ -6,6 +6,7 @@\r\n #define BITCOIN_BLOCKENCODINGS_H\r\n \r\n #include <primitives/block.h>\r\n+#include <util/check.h>\r\n \r\n \r\n class CTxMemPool;\r\n@@ -127,9 +128,10 @@ protected:\r\n     std::vector<CTransactionRef> txn_available;\r\n     size_t prefilled_count = 0, mempool_count = 0, extra_count = 0;\r\n     const CTxMemPool* pool;\r\n+\r\n public:\r\n     CBlockHeader header;\r\n-    explicit PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}\r\n+    explicit PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(Assume(poolIn)) {}\r\n \r\n     // extra_txn is a list of extra transactions to look at, in <witness hash, reference> form\r\n     ReadStatus InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, const std::vector<std::pair<uint256, CTransactionRef>>& extra_txn);\r\n",
      "commit_id" : "0e07e48a3b049eaa1c7b779187e56cf7ea85ead9",
      "created_at" : "2021-09-02T10:32:42Z",
      "diff_hunk" : "@@ -867,7 +867,7 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n     RemoveBlockRequest(hash);\n \n     std::list<QueuedBlock>::iterator it = state->vBlocksInFlight.insert(state->vBlocksInFlight.end(),\n-            {&block, std::unique_ptr<PartiallyDownloadedBlock>(pit ? new PartiallyDownloadedBlock(&m_mempool) : nullptr)});\n+            {&block, std::unique_ptr<PartiallyDownloadedBlock>(pit ? new PartiallyDownloadedBlock(m_mempool) : nullptr)});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22850#discussion_r700958398",
      "id" : 700958398,
      "in_reply_to_id" : 700954602,
      "line" : 870,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDk1ODM5OA==",
      "original_commit_id" : "0e07e48a3b049eaa1c7b779187e56cf7ea85ead9",
      "original_line" : 870,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 23,
      "pull_request_review_id" : 744885059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22850",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T10:50:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700958398",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22850#discussion_r700966796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22850"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700966796"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    if (!Assume(m_mempool)) return false;\r\n```\r\n\r\nIt would be nice if this function wasn't called when no mempool exists. If you agree, I think it makes sense to skip calling this function when txs aren't expected at all:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 3ad34e83ba..68e381db60 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2949,16 +2949,17 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\r\n                     best_block = &inv.hash;\r\n                 }\r\n             } else if (inv.IsGenTxMsg()) {\r\n+                if (fBlocksOnly) {\r\n+                    LogPrint(BCLog::NET, \"transaction (%s) inv sent in violation of protocol, disconnecting peer=%d\\n\", inv.hash.ToString(), pfrom.GetId());\r\n+                    pfrom.fDisconnect = true;\r\n+                    return;\r\n+                }\r\n                 const GenTxid gtxid = ToGenTxid(inv);\r\n                 const bool fAlreadyHave = AlreadyHaveTx(gtxid);\r\n                 LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\r\n \r\n                 pfrom.AddKnownTx(inv.hash);\r\n-                if (fBlocksOnly) {\r\n-                    LogPrint(BCLog::NET, \"transaction (%s) inv sent in violation of protocol, disconnecting peer=%d\\n\", inv.hash.ToString(), pfrom.GetId());\r\n-                    pfrom.fDisconnect = true;\r\n-                    return;\r\n-                } else if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n+                if (!fAlreadyHave && !m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\r\n                     AddTxAnnouncement(pfrom, gtxid, current_time);\r\n                 }\r\n             } else {\r\n```\r\n\r\nShould be done in a separate commit, or even separate pull",
      "commit_id" : "0e07e48a3b049eaa1c7b779187e56cf7ea85ead9",
      "created_at" : "2021-09-02T10:45:02Z",
      "diff_hunk" : "@@ -1632,6 +1640,8 @@ void PeerManagerImpl::BlockChecked(const CBlock& block, const BlockValidationSta\n \n bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n {\n+    if (!m_mempool) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22850#discussion_r700966796",
      "id" : 700966796,
      "line" : 1643,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDk2Njc5Ng==",
      "original_commit_id" : "0e07e48a3b049eaa1c7b779187e56cf7ea85ead9",
      "original_line" : 1643,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 90,
      "pull_request_review_id" : 744885059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22850",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-02T10:50:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700966796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-09-05T12:02:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22850#issuecomment-913141417",
      "id" : 913141417,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22850",
      "node_id" : "IC_kwDOABII5842bW6p",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-05T12:02:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913141417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   }
]
