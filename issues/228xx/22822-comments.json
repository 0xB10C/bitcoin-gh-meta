[
   {
      "author_association" : "MEMBER",
      "body" : "Please add a link from the main README.",
      "created_at" : "2021-08-28T01:48:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-907548252",
      "id" : 907548252,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
      "node_id" : "IC_kwDOABII5842GBZc",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-28T01:48:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907548252",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@fanquake Done.",
      "created_at" : "2021-08-28T01:53:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-907548882",
      "id" : 907548882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
      "node_id" : "IC_kwDOABII5842GBjS",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-28T01:53:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907548882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84432093?v=4",
         "events_url" : "https://api.github.com/users/lsilva01/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lsilva01/followers",
         "following_url" : "https://api.github.com/users/lsilva01/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lsilva01/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lsilva01",
         "id" : 84432093,
         "login" : "lsilva01",
         "node_id" : "MDQ6VXNlcjg0NDMyMDkz",
         "organizations_url" : "https://api.github.com/users/lsilva01/orgs",
         "received_events_url" : "https://api.github.com/users/lsilva01/received_events",
         "repos_url" : "https://api.github.com/users/lsilva01/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lsilva01/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lsilva01"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@harding might be interested too\r\n\r\nUnsure if here or some wiki page is best, but I can step through the tutorial in a bit and give feedback",
      "created_at" : "2021-08-28T23:48:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-907703927",
      "id" : 907703927,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
      "node_id" : "IC_kwDOABII5842GnZ3",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-28T23:52:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907703927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r697960709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697960709"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should we mention about P2TR and `m/86'/1'/0'` here? ",
      "commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "created_at" : "2021-08-29T05:47:16Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r697960709",
      "id" : 697960709,
      "line" : 30,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Nzk2MDcwOQ==",
      "original_commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "original_line" : 30,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "doc/multisig-tutorial.md",
      "position" : 30,
      "pull_request_review_id" : 741077143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-29T05:47:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697960709",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698540741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698540741"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Type-o: \"multig\" => \"multisig\"",
      "commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "created_at" : "2021-08-30T14:33:08Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698540741",
      "id" : 698540741,
      "line" : 3,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU0MDc0MQ==",
      "original_commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "original_line" : 3,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "doc/multisig-tutorial.md",
      "position" : 3,
      "pull_request_review_id" : 741720035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-30T14:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698540741",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 2693a97e51ee527a5e43c1d9c493a43cbd289af8\r\n\r\nThis process is still quite tedious, but it's good to have it documented.",
      "created_at" : "2021-08-30T14:35:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-908396688",
      "id" : 908396688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
      "node_id" : "IC_kwDOABII5842JQiQ",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-30T14:35:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/908396688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698546861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698546861"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Type-o: \"Te\" => \"The\"",
      "commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "created_at" : "2021-08-30T14:40:10Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+Note that this step extracts the `m/84'/1'/0'` account and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).\n+At the time of writing, there is no way to extract a specific path from wallets in Bitcoin Core. For this, an external signer/xpub can be used.\n+\n+[PR #22341](https://github.com/bitcoin/bitcoin/pull/22341), which is still under development, introduces a new wallet RPC `getxpub`. It takes a BIP32 path as an argument and returns the xpub, along with the master key fingerprint.\n+\n+### 1.3 Define the Multisig Descriptors\n+\n+Define the external and internal multisig descriptors, add the checksum and then, join both in a JSON array.\n+\n+```bash\n+external_desc=\"wsh(sortedmulti(2,${xpubs[\"external_xpub_1\"]},${xpubs[\"external_xpub_2\"]},${xpubs[\"external_xpub_3\"]}))\"\n+internal_desc=\"wsh(sortedmulti(2,${xpubs[\"internal_xpub_1\"]},${xpubs[\"internal_xpub_2\"]},${xpubs[\"internal_xpub_3\"]}))\"\n+\n+external_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $external_desc | jq '.descriptor')\n+internal_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $internal_desc | jq '.descriptor')\n+\n+multisig_ext_desc=\"{\\\"desc\\\": $external_desc_sum, \\\"active\\\": true, \\\"internal\\\": false, \\\"timestamp\\\": \\\"now\\\"}\"\n+multisig_int_desc=\"{\\\"desc\\\": $internal_desc_sum, \\\"active\\\": true, \\\"internal\\\": true, \\\"timestamp\\\": \\\"now\\\"}\"\n+\n+multisig_desc=\"[$multisig_ext_desc, $multisig_int_desc]\"\n+```\n+\n+`external_desc` and `internal_desc` specify the output type (`wsh`, in this case) and the xpubs involved. They also use BIP 67 (`sortedmulti`), so the wallet can be recreated without worrying about the order of xpubs. Conceptually, descriptors describe a list of scriptPubKey (along with information for spending from it) [[source](https://github.com/bitcoin/bitcoin/issues/21199#issuecomment-780772418)].\n+\n+Note that at least two descriptors are usually used, one for internal derivation paths and external ones. There are discussions about eliminating this redundancy, as can been seen in the issue [#17190](https://github.com/bitcoin/bitcoin/issues/17190).\n+\n+After creating the descriptors, it is necessary to add the checksum, which is required by the `importdescriptors` RPC.\n+\n+The checksum for a descriptor without one can be computed using the `getdescriptorinfo` RPC. The response has the `descriptor` field, which is the descriptor with the checksum added.\n+\n+There are other fields that can be added to the descriptors:\n+\n+* `active`: Sets the descriptor to be the active one for the corresponding output type (`wsh`, in this case).\n+* `internal`: Indicates whether matching outputs should be treated as something other than incoming payments (e.g. change).\n+* `timestamp`: Sets the time from which to start rescanning the blockchain for the descriptor, in UNIX epoch time.\n+\n+Documentation for these and other parameters can be found by typing `./src/bitcoin-cli help importdescriptors`.\n+\n+`multisig_desc` concatenates external and internal descriptors in a JSON array and then it will be used to create the multisig wallet.\n+\n+### 1.4 Create the Multisig Wallet\n+\n+```bash\n+./src/bitcoin-cli -signet -named createwallet wallet_name=\"multisig_wallet_01\" disable_private_keys=true blank=true descriptors=true\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" importdescriptors \"$multisig_desc\"\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" getwalletinfo\n+```\n+\n+To create the multisig wallet, first create an empty one (no keys, HD seed and private keys disabled).\n+\n+Then import the descriptors created in the previous step using the `importdescriptors` RPC.\n+\n+After that, `getwalletinfo` can be used to check if the wallet was created successfully.\n+\n+### 1.5 Fund the wallet\n+\n+```bash\n+receiving_address=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getnewaddress)\n+\n+./contrib/signet/getcoins.py -a $receiving_address\n+```\n+\n+The wallet can receive signet coins by generating a new address and passing it as parameters to `getcoins.py` script.\n+\n+If the script throws an error such as `Captcha required (reload page)`, the url in the script can be accessed directly.\n+At time of writing, the url is [`https://signetfaucet.com`](https://signetfaucet.com).\n+\n+Coins received by the wallet must have at least 1 confirmation before they can be spent. It is necessary to wait for a new block to be mined before continuing.\n+\n+The `getbalances` RPC may be used to check the balance. Coins with `trusted` status can be spent.\n+\n+```bash\n+./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalances\n+```\n+\n+### 1.6 Create a PSBT\n+\n+```bash\n+balance=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalance)\n+\n+amount=$(echo \"$balance * 0.8\" | bc -l | sed -e 's/^\\./0./' -e 's/^-\\./-0./')\n+\n+destination_addr=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_1\" getnewaddress)\n+\n+funded_psbt=$(./src/bitcoin-cli -signet -named -rpcwallet=\"multisig_wallet_01\" walletcreatefundedpsbt outputs=\"{\\\"$destination_addr\\\": $amount}\" | jq -r '.psbt')\n+```\n+\n+Unlike singlesig wallets, multisig wallets cannot create and sign transactions directly because they require the signatures of the co-signers. Instead they create a Partially Signed Bitcoin Transaction (PSBT).\n+\n+PSBT is a data format that allows wallets and other tools to exchange information about a Bitcoin transaction and the signatures necessary to complete it. [[source](https://bitcoinops.org/en/topics/psbt/)]\n+\n+Te current PSBT version (v0) is defined in [BIP 174](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698546861",
      "id" : 698546861,
      "line" : 153,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU0Njg2MQ==",
      "original_commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "original_line" : 153,
      "original_position" : 153,
      "original_start_line" : null,
      "path" : "doc/multisig-tutorial.md",
      "position" : 153,
      "pull_request_review_id" : 741720035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-30T14:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698546861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698547764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698547764"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Type-o: \".\\\\\" => \".\" at end of line",
      "commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "created_at" : "2021-08-30T14:41:12Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+Note that this step extracts the `m/84'/1'/0'` account and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).\n+At the time of writing, there is no way to extract a specific path from wallets in Bitcoin Core. For this, an external signer/xpub can be used.\n+\n+[PR #22341](https://github.com/bitcoin/bitcoin/pull/22341), which is still under development, introduces a new wallet RPC `getxpub`. It takes a BIP32 path as an argument and returns the xpub, along with the master key fingerprint.\n+\n+### 1.3 Define the Multisig Descriptors\n+\n+Define the external and internal multisig descriptors, add the checksum and then, join both in a JSON array.\n+\n+```bash\n+external_desc=\"wsh(sortedmulti(2,${xpubs[\"external_xpub_1\"]},${xpubs[\"external_xpub_2\"]},${xpubs[\"external_xpub_3\"]}))\"\n+internal_desc=\"wsh(sortedmulti(2,${xpubs[\"internal_xpub_1\"]},${xpubs[\"internal_xpub_2\"]},${xpubs[\"internal_xpub_3\"]}))\"\n+\n+external_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $external_desc | jq '.descriptor')\n+internal_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $internal_desc | jq '.descriptor')\n+\n+multisig_ext_desc=\"{\\\"desc\\\": $external_desc_sum, \\\"active\\\": true, \\\"internal\\\": false, \\\"timestamp\\\": \\\"now\\\"}\"\n+multisig_int_desc=\"{\\\"desc\\\": $internal_desc_sum, \\\"active\\\": true, \\\"internal\\\": true, \\\"timestamp\\\": \\\"now\\\"}\"\n+\n+multisig_desc=\"[$multisig_ext_desc, $multisig_int_desc]\"\n+```\n+\n+`external_desc` and `internal_desc` specify the output type (`wsh`, in this case) and the xpubs involved. They also use BIP 67 (`sortedmulti`), so the wallet can be recreated without worrying about the order of xpubs. Conceptually, descriptors describe a list of scriptPubKey (along with information for spending from it) [[source](https://github.com/bitcoin/bitcoin/issues/21199#issuecomment-780772418)].\n+\n+Note that at least two descriptors are usually used, one for internal derivation paths and external ones. There are discussions about eliminating this redundancy, as can been seen in the issue [#17190](https://github.com/bitcoin/bitcoin/issues/17190).\n+\n+After creating the descriptors, it is necessary to add the checksum, which is required by the `importdescriptors` RPC.\n+\n+The checksum for a descriptor without one can be computed using the `getdescriptorinfo` RPC. The response has the `descriptor` field, which is the descriptor with the checksum added.\n+\n+There are other fields that can be added to the descriptors:\n+\n+* `active`: Sets the descriptor to be the active one for the corresponding output type (`wsh`, in this case).\n+* `internal`: Indicates whether matching outputs should be treated as something other than incoming payments (e.g. change).\n+* `timestamp`: Sets the time from which to start rescanning the blockchain for the descriptor, in UNIX epoch time.\n+\n+Documentation for these and other parameters can be found by typing `./src/bitcoin-cli help importdescriptors`.\n+\n+`multisig_desc` concatenates external and internal descriptors in a JSON array and then it will be used to create the multisig wallet.\n+\n+### 1.4 Create the Multisig Wallet\n+\n+```bash\n+./src/bitcoin-cli -signet -named createwallet wallet_name=\"multisig_wallet_01\" disable_private_keys=true blank=true descriptors=true\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" importdescriptors \"$multisig_desc\"\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" getwalletinfo\n+```\n+\n+To create the multisig wallet, first create an empty one (no keys, HD seed and private keys disabled).\n+\n+Then import the descriptors created in the previous step using the `importdescriptors` RPC.\n+\n+After that, `getwalletinfo` can be used to check if the wallet was created successfully.\n+\n+### 1.5 Fund the wallet\n+\n+```bash\n+receiving_address=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getnewaddress)\n+\n+./contrib/signet/getcoins.py -a $receiving_address\n+```\n+\n+The wallet can receive signet coins by generating a new address and passing it as parameters to `getcoins.py` script.\n+\n+If the script throws an error such as `Captcha required (reload page)`, the url in the script can be accessed directly.\n+At time of writing, the url is [`https://signetfaucet.com`](https://signetfaucet.com).\n+\n+Coins received by the wallet must have at least 1 confirmation before they can be spent. It is necessary to wait for a new block to be mined before continuing.\n+\n+The `getbalances` RPC may be used to check the balance. Coins with `trusted` status can be spent.\n+\n+```bash\n+./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalances\n+```\n+\n+### 1.6 Create a PSBT\n+\n+```bash\n+balance=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalance)\n+\n+amount=$(echo \"$balance * 0.8\" | bc -l | sed -e 's/^\\./0./' -e 's/^-\\./-0./')\n+\n+destination_addr=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_1\" getnewaddress)\n+\n+funded_psbt=$(./src/bitcoin-cli -signet -named -rpcwallet=\"multisig_wallet_01\" walletcreatefundedpsbt outputs=\"{\\\"$destination_addr\\\": $amount}\" | jq -r '.psbt')\n+```\n+\n+Unlike singlesig wallets, multisig wallets cannot create and sign transactions directly because they require the signatures of the co-signers. Instead they create a Partially Signed Bitcoin Transaction (PSBT).\n+\n+PSBT is a data format that allows wallets and other tools to exchange information about a Bitcoin transaction and the signatures necessary to complete it. [[source](https://bitcoinops.org/en/topics/psbt/)]\n+\n+Te current PSBT version (v0) is defined in [BIP 174](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki).\n+\n+For simplicity, the destination address is taken from the `participant_1` wallet in the code above, but it can be any valid bitcoin address.\n+\n+The `walletcreatefundedpsbt` RPC is used to create and fund a transaction in the PSBT format. It is the first step in creating the PSBT.\\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698547764",
      "id" : 698547764,
      "line" : 157,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU0Nzc2NA==",
      "original_commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "original_line" : 157,
      "original_position" : 157,
      "original_start_line" : null,
      "path" : "doc/multisig-tutorial.md",
      "position" : 157,
      "pull_request_review_id" : 741720035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-30T14:47:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698547764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698576475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698576475"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's good to point out this limitation at the top too.",
      "commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "created_at" : "2021-08-30T15:15:39Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+Note that this step extracts the `m/84'/1'/0'` account and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698576475",
      "id" : 698576475,
      "line" : 60,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU3NjQ3NQ==",
      "original_commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "original_line" : 60,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "doc/multisig-tutorial.md",
      "position" : 60,
      "pull_request_review_id" : 741767874,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-30T15:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698576475",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698577295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698577295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In addition, these three wallets should not be used directly for privacy reasons (public key reuse). They should only be used to sign transactions for the (watch-only) multisig wallet.\r\n\r\n(that said, I find this restriction annoying)",
      "commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "created_at" : "2021-08-30T15:16:46Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698577295",
      "id" : 698577295,
      "line" : 19,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU3NzI5NQ==",
      "original_commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "original_line" : 19,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "doc/multisig-tutorial.md",
      "position" : 19,
      "pull_request_review_id" : 741769036,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-30T15:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698577295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r699038799"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699038799"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is `regtest` vs `signet` the main difference? I'd expect the guide to have the same steps regardless of the chain used. \r\n\r\nWhat's the long-term plan for this guide and the guide from #22067? Do we plan to maintain both of them or keep only one?",
      "commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "created_at" : "2021-08-31T06:59:39Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r699038799",
      "id" : 699038799,
      "line" : 5,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTAzODc5OQ==",
      "original_commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/multisig-tutorial.md",
      "position" : 5,
      "pull_request_review_id" : 742346456,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-31T06:59:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699038799",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thank u",
      "created_at" : "2021-08-31T07:46:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-908985319",
      "id" : 908985319,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
      "node_id" : "IC_kwDOABII5842LgPn",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-31T07:46:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/908985319",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/87387449?v=4",
         "events_url" : "https://api.github.com/users/jaysonmald35/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jaysonmald35/followers",
         "following_url" : "https://api.github.com/users/jaysonmald35/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jaysonmald35/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jaysonmald35",
         "id" : 87387449,
         "login" : "jaysonmald35",
         "node_id" : "MDQ6VXNlcjg3Mzg3NDQ5",
         "organizations_url" : "https://api.github.com/users/jaysonmald35/orgs",
         "received_events_url" : "https://api.github.com/users/jaysonmald35/received_events",
         "repos_url" : "https://api.github.com/users/jaysonmald35/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jaysonmald35/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jaysonmald35/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jaysonmald35"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r699178577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699178577"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The \"Basic multisig example\" in 22067 should probably link to this guide, but let's see what gets merged first.",
      "commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "created_at" : "2021-08-31T10:08:40Z",
      "diff_hunk" : "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r699178577",
      "id" : 699178577,
      "in_reply_to_id" : 699038799,
      "line" : 5,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTE3ODU3Nw==",
      "original_commit_id" : "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/multisig-tutorial.md",
      "position" : 5,
      "pull_request_review_id" : 742533102,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-31T10:08:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699178577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
