[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22817#discussion_r697483286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22817"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697483286"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to use `pop` here instead of `get`? (I don't think so, there's no reason to mutate the structure)\r\nAlso: `>= 24` might be more robust; it's clearly wrong if more than one verack gets sent, but it shouldn't hang forever in that case.",
      "commit_id" : "fa04f26aa77d2cf746db4a8a43068b7c5c9cd02b",
      "created_at" : "2021-08-27T14:23:37Z",
      "diff_hunk" : "@@ -560,18 +560,19 @@ def wait_for_node_exit(self, i, timeout):\n         self.nodes[i].process.wait(timeout)\n \n     def connect_nodes(self, a, b):\n-        def connect_nodes_helper(from_connection, node_num):\n-            ip_port = \"127.0.0.1:\" + str(p2p_port(node_num))\n-            from_connection.addnode(ip_port, \"onetry\")\n-            # poll until version handshake complete to avoid race conditions\n-            # with transaction relaying\n-            # See comments in net_processing:\n-            # * Must have a version message before anything else\n-            # * Must have a verack message before anything else\n-            wait_until_helper(lambda: all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n-            wait_until_helper(lambda: all(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()))\n-\n-        connect_nodes_helper(self.nodes[a], b)\n+        from_connection = self.nodes[a]\n+        to_connection = self.nodes[b]\n+        ip_port = \"127.0.0.1:\" + str(p2p_port(b))\n+        from_connection.addnode(ip_port, \"onetry\")\n+        # poll until version handshake complete to avoid race conditions\n+        # with transaction relaying\n+        # See comments in net_processing:\n+        # * Must have a version message before anything else\n+        # * Must have a verack message before anything else\n+        wait_until_helper(lambda: all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n+        wait_until_helper(lambda: all(peer['version'] != 0 for peer in to_connection.getpeerinfo()))\n+        wait_until_helper(lambda: all(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22817#discussion_r697483286",
      "id" : 697483286,
      "line" : 574,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzQ4MzI4Ng==",
      "original_commit_id" : "fa04f26aa77d2cf746db4a8a43068b7c5c9cd02b",
      "original_line" : 574,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 27,
      "pull_request_review_id" : 740580178,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22817",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-27T14:24:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697483286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
