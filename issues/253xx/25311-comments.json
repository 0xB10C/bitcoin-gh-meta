[
   {
      "author_association" : "MEMBER",
      "body" : "This can be tested trivially by adding a construction-by-copy somewhere and verifying the compiler rejects it:\r\n```\r\n% make\r\nMaking all in src\r\nmake[1]: Entering directory '/home/james/src/bitcoin/src'\r\nmake[2]: Entering directory '/home/james/src/bitcoin/src'\r\nmake[3]: Entering directory '/home/james/src/bitcoin'\r\nmake[3]: Leaving directory '/home/james/src/bitcoin'\r\n  CXX      libbitcoin_node_a-validation.o\r\n  CXX      libbitcoin_util_a-clientversion.o\r\n  AR       libbitcoin_util.a\r\n  CXXLD    bitcoin-util\r\n  CXXLD    bitcoin-wallet\r\n  CXXLD    bitcoin-cli\r\n  CXXLD    bitcoin-tx\r\nvalidation.cpp:4170:29: error: calling a protected constructor of class 'CBlockIndex'\r\n            auto newblock = CBlockIndex(*block);\r\n                            ^\r\n./chain.h:369:5: note: declared protected here\r\n    CBlockIndex(const CBlockIndex&) = default;\r\n    ^\r\n1 error generated.\r\n```",
      "created_at" : "2022-06-08T17:01:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#issuecomment-1150168593",
      "id" : 1150168593,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25311",
      "node_id" : "IC_kwDOABII585Eji4R",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1150168593/reactions"
      },
      "updated_at" : "2022-06-08T17:01:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1150168593",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r892642454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892642454"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Pretty sure this will later-on result in a use-after-free? ",
      "commit_id" : "62f6e49b20162f7987a446dc3f20d6ebff61bf54",
      "created_at" : "2022-06-08T17:01:30Z",
      "diff_hunk" : "@@ -57,7 +57,7 @@ FUZZ_TARGET_INIT(pow, initialize_pow)\n             } else {\n                 current_block.nChainWork = ConsumeArithUInt256(fuzzed_data_provider);\n             }\n-            blocks.push_back(current_block);\n+            blocks.push_back(&current_block);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r892642454",
      "id" : 892642454,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841NKSW",
      "original_commit_id" : "28e019236bcfd797e70f59f8a8945e59b0426727",
      "original_line" : 60,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/fuzz/pow.cpp",
      "position" : null,
      "pull_request_review_id" : 1000129389,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892642454/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T17:03:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892642454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r892649186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892649186"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Consider using the rule of five? https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c21-if-you-define-or-delete-any-copy-move-or-destructor-function-define-or-delete-them-all. Example in https://github.com/bitcoin/bitcoin/pull/22481.\r\n\r\nNot sure (haven't tested), would it be better to define these separately in CBlockIndex (= delete) and CDiskBlockIndex (= default)? ",
      "commit_id" : "62f6e49b20162f7987a446dc3f20d6ebff61bf54",
      "created_at" : "2022-06-08T17:09:20Z",
      "diff_hunk" : "@@ -355,6 +355,19 @@ class CBlockIndex\n     //! Efficiently find an ancestor of this block.\n     CBlockIndex* GetAncestor(int height);\n     const CBlockIndex* GetAncestor(int height) const;\n+\n+protected:\n+    //! CBlockIndex should not allow public copy construction because equality\n+    //! comparison via pointer is very common throughout the codebase, making\n+    //! use of copy a footgun. Also, use of copies do not have the benefit\n+    //! of simplifying lifetime considerations due to attributes like pprev and\n+    //! pskip, which are at risk of becoming dangling pointers in a copied\n+    //! instance.\n+    //!\n+    //! We declare these protected instead of simply deleting them so that\n+    //! CDiskBlockIndex can reuse copy construction.\n+    CBlockIndex(const CBlockIndex&) = default;\n+    CBlockIndex& operator=(const CBlockIndex&) = default;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r892649186",
      "id" : 892649186,
      "line" : 370,
      "node_id" : "PRRC_kwDOABII5841NL7i",
      "original_commit_id" : "28e019236bcfd797e70f59f8a8945e59b0426727",
      "original_line" : 370,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 16,
      "pull_request_review_id" : 1000138811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892649186/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T17:11:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892649186",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2022-06-08T17:09:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#issuecomment-1150178297",
      "id" : 1150178297,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25311",
      "node_id" : "IC_kwDOABII585EjlP5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1150178297/reactions"
      },
      "updated_at" : "2022-06-08T17:09:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1150178297",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r892681484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892681484"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Argh, good catch. Thought I'd checked for that. Fixed.",
      "commit_id" : "62f6e49b20162f7987a446dc3f20d6ebff61bf54",
      "created_at" : "2022-06-08T17:40:50Z",
      "diff_hunk" : "@@ -57,7 +57,7 @@ FUZZ_TARGET_INIT(pow, initialize_pow)\n             } else {\n                 current_block.nChainWork = ConsumeArithUInt256(fuzzed_data_provider);\n             }\n-            blocks.push_back(current_block);\n+            blocks.push_back(&current_block);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r892681484",
      "id" : 892681484,
      "in_reply_to_id" : 892642454,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841NT0M",
      "original_commit_id" : "28e019236bcfd797e70f59f8a8945e59b0426727",
      "original_line" : 60,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/fuzz/pow.cpp",
      "position" : null,
      "pull_request_review_id" : 1000182387,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892681484/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T17:40:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892681484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r892684389"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892684389"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm, the CI fuzz run initially passed on this test: https://cirrus-ci.com/task/5646660507271168?logs=ci#L3420 . I wonder why it didn't catch that.",
      "commit_id" : "62f6e49b20162f7987a446dc3f20d6ebff61bf54",
      "created_at" : "2022-06-08T17:44:27Z",
      "diff_hunk" : "@@ -57,7 +57,7 @@ FUZZ_TARGET_INIT(pow, initialize_pow)\n             } else {\n                 current_block.nChainWork = ConsumeArithUInt256(fuzzed_data_provider);\n             }\n-            blocks.push_back(current_block);\n+            blocks.push_back(&current_block);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r892684389",
      "id" : 892684389,
      "in_reply_to_id" : 892642454,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841NUhl",
      "original_commit_id" : "28e019236bcfd797e70f59f8a8945e59b0426727",
      "original_line" : 60,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/fuzz/pow.cpp",
      "position" : null,
      "pull_request_review_id" : 1000186365,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892684389/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T17:44:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892684389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r892706470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892706470"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Rule of 5\r\n\r\nSounds good, fixed.\r\n\r\n> Not sure (haven't tested), would it be better to define these separately in CBlockIndex (= delete) and CDiskBlockIndex (= default)?\r\n\r\nThis doesn't work because to get a default copy constructor, the signature needs to look like `T(const T&) = default;`; because the CDiskBlockIndex constructor in question has a reference to a CBlockIndex pointer, we can't make use of a default copy constructor for CDiskBlockIndex. If we define one, we have to spell out all members from CBlockIndex, which is brittle.",
      "commit_id" : "62f6e49b20162f7987a446dc3f20d6ebff61bf54",
      "created_at" : "2022-06-08T18:03:56Z",
      "diff_hunk" : "@@ -355,6 +355,19 @@ class CBlockIndex\n     //! Efficiently find an ancestor of this block.\n     CBlockIndex* GetAncestor(int height);\n     const CBlockIndex* GetAncestor(int height) const;\n+\n+protected:\n+    //! CBlockIndex should not allow public copy construction because equality\n+    //! comparison via pointer is very common throughout the codebase, making\n+    //! use of copy a footgun. Also, use of copies do not have the benefit\n+    //! of simplifying lifetime considerations due to attributes like pprev and\n+    //! pskip, which are at risk of becoming dangling pointers in a copied\n+    //! instance.\n+    //!\n+    //! We declare these protected instead of simply deleting them so that\n+    //! CDiskBlockIndex can reuse copy construction.\n+    CBlockIndex(const CBlockIndex&) = default;\n+    CBlockIndex& operator=(const CBlockIndex&) = default;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r892706470",
      "id" : 892706470,
      "in_reply_to_id" : 892649186,
      "line" : 370,
      "node_id" : "PRRC_kwDOABII5841NZ6m",
      "original_commit_id" : "28e019236bcfd797e70f59f8a8945e59b0426727",
      "original_line" : 370,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 16,
      "pull_request_review_id" : 1000215190,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892706470/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T18:03:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892706470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r893193685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893193685"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`valgrind` doesn't catch this either. Looks like the compiler will just optimize this UB away and set all objects to the same pointer, even if they are different?\r\n\r\nThis is mildly shocking, as it makes it impossible to catch this kind of bug with any tool.",
      "commit_id" : "62f6e49b20162f7987a446dc3f20d6ebff61bf54",
      "created_at" : "2022-06-09T08:00:39Z",
      "diff_hunk" : "@@ -57,7 +57,7 @@ FUZZ_TARGET_INIT(pow, initialize_pow)\n             } else {\n                 current_block.nChainWork = ConsumeArithUInt256(fuzzed_data_provider);\n             }\n-            blocks.push_back(current_block);\n+            blocks.push_back(&current_block);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r893193685",
      "id" : 893193685,
      "in_reply_to_id" : 892642454,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841PQ3V",
      "original_commit_id" : "28e019236bcfd797e70f59f8a8945e59b0426727",
      "original_line" : 60,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/fuzz/pow.cpp",
      "position" : null,
      "pull_request_review_id" : 1000890206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893193685/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T08:00:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893193685",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r893618339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893618339"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's scary. Glad my fuzz-via-idiocy technique is yielding more novel info about C++ compilers.",
      "commit_id" : "62f6e49b20162f7987a446dc3f20d6ebff61bf54",
      "created_at" : "2022-06-09T15:01:07Z",
      "diff_hunk" : "@@ -57,7 +57,7 @@ FUZZ_TARGET_INIT(pow, initialize_pow)\n             } else {\n                 current_block.nChainWork = ConsumeArithUInt256(fuzzed_data_provider);\n             }\n-            blocks.push_back(current_block);\n+            blocks.push_back(&current_block);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r893618339",
      "id" : 893618339,
      "in_reply_to_id" : 892642454,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841Q4ij",
      "original_commit_id" : "28e019236bcfd797e70f59f8a8945e59b0426727",
      "original_line" : 60,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/fuzz/pow.cpp",
      "position" : null,
      "pull_request_review_id" : 1001496734,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893618339/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T15:01:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893618339",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r893757851"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893757851"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"remove CBlockIndex copy construction\" (62f6e49b20162f7987a446dc3f20d6ebff61bf54)\r\n\r\nThis looks like it is the only virtual method so it is going to add a vtable pointer to every CBlockIndex instance and waste memory. (I also don't see a reason to declare a destructor here, \"rule of 5\" notwithstanding. If there is a reason, more helpful IMO to just say what the reason is instead of citing a 537 page guidelines document!)",
      "commit_id" : "0497d76a944182b739d9abfd963c032a7d1dbd89",
      "created_at" : "2022-06-09T17:07:53Z",
      "diff_hunk" : "@@ -355,6 +355,25 @@ class CBlockIndex\n     //! Efficiently find an ancestor of this block.\n     CBlockIndex* GetAncestor(int height);\n     const CBlockIndex* GetAncestor(int height) const;\n+\n+protected:\n+    //! CBlockIndex should not allow public copy construction because equality\n+    //! comparison via pointer is very common throughout the codebase, making\n+    //! use of copy a footgun. Also, use of copies do not have the benefit\n+    //! of simplifying lifetime considerations due to attributes like pprev and\n+    //! pskip, which are at risk of becoming dangling pointers in a copied\n+    //! instance.\n+    //!\n+    //! We declare these protected instead of simply deleting them so that\n+    //! CDiskBlockIndex can reuse copy construction.\n+    CBlockIndex(const CBlockIndex&) = default;\n+    CBlockIndex& operator=(const CBlockIndex&) = default;\n+    CBlockIndex(CBlockIndex&&) = delete;\n+    CBlockIndex& operator=(CBlockIndex&&) = delete;\n+\n+public:\n+    // Here to satisfy the \"rule of 5,\" but must be public.\n+    virtual ~CBlockIndex() = default;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r893757851",
      "id" : 893757851,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841Ramb",
      "original_commit_id" : "62f6e49b20162f7987a446dc3f20d6ebff61bf54",
      "original_line" : 376,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : null,
      "pull_request_review_id" : 1001705640,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893757851/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T17:07:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893757851",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r893901255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893901255"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ha, well put. Pushed.",
      "commit_id" : "0497d76a944182b739d9abfd963c032a7d1dbd89",
      "created_at" : "2022-06-09T19:54:39Z",
      "diff_hunk" : "@@ -355,6 +355,25 @@ class CBlockIndex\n     //! Efficiently find an ancestor of this block.\n     CBlockIndex* GetAncestor(int height);\n     const CBlockIndex* GetAncestor(int height) const;\n+\n+protected:\n+    //! CBlockIndex should not allow public copy construction because equality\n+    //! comparison via pointer is very common throughout the codebase, making\n+    //! use of copy a footgun. Also, use of copies do not have the benefit\n+    //! of simplifying lifetime considerations due to attributes like pprev and\n+    //! pskip, which are at risk of becoming dangling pointers in a copied\n+    //! instance.\n+    //!\n+    //! We declare these protected instead of simply deleting them so that\n+    //! CDiskBlockIndex can reuse copy construction.\n+    CBlockIndex(const CBlockIndex&) = default;\n+    CBlockIndex& operator=(const CBlockIndex&) = default;\n+    CBlockIndex(CBlockIndex&&) = delete;\n+    CBlockIndex& operator=(CBlockIndex&&) = delete;\n+\n+public:\n+    // Here to satisfy the \"rule of 5,\" but must be public.\n+    virtual ~CBlockIndex() = default;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#discussion_r893901255",
      "id" : 893901255,
      "in_reply_to_id" : 893757851,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841R9nH",
      "original_commit_id" : "62f6e49b20162f7987a446dc3f20d6ebff61bf54",
      "original_line" : 376,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : null,
      "pull_request_review_id" : 1001904320,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25311",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893901255/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T19:54:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893901255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "IIUC correctly, the issue here is that of (or similar to) slicing: a pointer to a derived class implicitly converts to one to its public base class, and with copy operations this becomes a subtle footgun. Looking through various resources, two solutions appear to be:\r\n\r\n- disallow copying of the base class by deleting the copy operations and making them private or protected, and providing a clone() function if needed to allow a user to request a non-slicing copy, or\r\n- disallow converting a pointer to the derived class to a pointer to a base by making the base class a private or protected base\r\n\r\nThis PR opts for the first solution, which seems fine. This approach is also suggested at the bottom of https://en.cppreference.com/w/cpp/language/rule_of_three and in the guideline [\"A polymorphic class should suppress public copy/move\"](https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#Rc-copy-virtual).\r\n\r\nThe last push removing the public virtual destructor in the base class involves some tradeoffs that might be discussed. Not declaring it reduces the size of CBlockIndex and CDiskBlockIndex from 152 to 144 and 184 to 176 bytes, respectively, a saving of 8 bytes due to not needing a hidden vptr class data member (as well as avoiding a vtbl pointer entry and dynamic dispatch in general).  In most cases, those additional costs are considered relatively low, so declaring destructors virtual is a good practice as a safety mechanism for unintended polymorphic destruction (destructing derived class objects through pointers or references of base class types).\r\n\r\nNot declaring the virtual destructor is also only possible due to issues with the current design.  Inherited non-virtual functions should never be redefined to avoid inconsistent behavior (**Scott Meyers, Effective C++, Item 36**), yet that is what we're currently doing with `GetBlockHash()` and `ToString()`, either from oversight or as a hack to avoid making them virtual. Items 34 and 35 in that book suggest alternatives (Template Pattern/NVI Idiom, Strategy Patterns), but as a start it may be prudent and less footgunny for future reviewers and bug avoidance to consider keeping the explicit virtual public destructor in the base and making those two functions `virtual` in CBlockIndex and `override` in the derived CDiskBlockIndex.\r\n\r\nIf the overhead of dynamic dispatch is unacceptable, maybe there is a better/safer design than the current one, but if we intend for CBlockIndex to be inherited from, consider that its destructor and redefined methods ought to be virtual.  If CBlockIndex is not intended to be inherited from, it can be marked as `final` to prevent that in the first place, without imposing any other use restrictions on the class itself.\r\n\r\nI'm not an expert, so have been trying to understand this area better from researching it.  A couple related resources:\r\n\r\nScott Meyers, Effective C++, Item 8: *Polymorphic base classes should declare virtual destructors. If a class has any virtual functions, it should have a virtual destructor. Classes not designed to be base classes or not designed to be used polymorphically should not declare virtual destructors.*\r\n\r\nStroustroup, https://www.stroustrup.com/C++11FAQ.html#default2, *I strongly recommend that if you declare one of these five functions, you explicitly declare all.  Think of copying, moving, and destruction as closely related operations, rather than individual operations that you can freely mix and match - you can specify arbitrary combinations, but only a few combinations make sense semantically.*\r\n\r\nHerb Sutter, http://www.gotw.ca/publications/mill18.htm, *Guideline 4: A base class destructor should be either public and virtual, or protected and nonvirtual. / Don't derive from concrete classes. Or, as Scott Meyers puts it in Item 33 of More Effective C++, \"Make non-leaf classes abstract.\"*",
      "created_at" : "2022-06-10T15:06:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#issuecomment-1152460744",
      "id" : 1152460744,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25311",
      "node_id" : "IC_kwDOABII585EsSfI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152460744/reactions"
      },
      "updated_at" : "2022-06-10T15:30:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152460744",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> IIUC correctly, the issue here is that of (or similar to) slicing: a pointer to a derived class implicitly converts to one to its public base class, and with copy operations this becomes a subtle footgun\r\n\r\n\r\nThis may or may not be a problem, but was not the primary motivation I mentioned. The motivation is simply that creating an exact copy will (obviously) create a new memory location where the copy lives (aka pointer). This is problematic when the value of the pointer is used to check for equality/unequality of objects.\r\n\r\nFor example,\r\n\r\n```cpp\r\nbool IsTip(const CBlockIndex& b) { return &b == ::ActiveTip(); }\r\nint main() {\r\n const CBlockIndex tip{*Assert(::ActiveTip())};\r\n Assert(IsTip(&tip));\r\n}\r\n```\r\n\r\nwill fail.",
      "created_at" : "2022-06-10T15:14:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25311#issuecomment-1152468630",
      "id" : 1152468630,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25311",
      "node_id" : "IC_kwDOABII585EsUaW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152468630/reactions"
      },
      "updated_at" : "2022-06-10T15:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152468630",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
