[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18278 (interfaces: Describe and follow some code conventions by ryanofsky)\n* #18264 (build: Remove Boost Chrono by fanquake)\n* #18239 (wip: gui: Refactor to drop client and wallet models setters by promag)\n* #18149 (build: add --enable-isystem and change --enable-werror to enable -Werror by vasild)\n* #18115 (wallet: Pass in transactions and messages for signing instead of exporting the private keys by achow101)\n* #18077 (net: Add NAT-PMP port forwarding support by hebasto)\n* #18064 (gui: Drop WalletModel dependency to RecentRequestsTableModel by promag)\n* #17938 (Disallow automatic conversion between disparate hash types by Empact)\n* #17877 (qt, refactor: Make enums in BitcoinUnits class scoped by hebasto)\n* #17681 (wallet: Keep inactive seeds after sethdseed and derive keys from them as needed by achow101)\n* #17443 (Drop checkFinalTx and use Median Time Past to check finality of wallet transactions by ariard)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n* #16910 (wallet: reduce loading time by using unordered maps by achow101)\n* #16710 (build: Enable -Wsuggest-override if available by hebasto)\n* #16528 (Native Descriptor Wallets using DescriptorScriptPubKeyMan by achow101)\n* #16440 (BIP-322: Generic signed message format by kallewoof)\n* #16432 (qt: Add privacy to the Overview page by hebasto)\n* #16367 (Multiprocess build support by ryanofsky)\n* #16224 (gui: Bilingual GUI error messages by hebasto)\n* #15421 (torcontrol: Launch a private Tor instance when not already running by luke-jr)\n* #15382 (util: add runCommandParseJSON by Sjors)\n* #12911 (wallet: Show fee in results for signrawtransaction* for segwit inputs by kallewoof)\n* #11413 ([wallet] [rpc] sendtoaddress/sendmany: Add explicit feerate option by kallewoof)\n* #10102 ([experimental] Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-08-04T22:16:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-518040668",
      "id" : 518040668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxODA0MDY2OA==",
      "updated_at" : "2020-03-09T17:43:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518040668",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r310408302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310408302"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This list-of-bools thing seems like a terrible idea...",
      "commit_id" : "0a0d29541535789a4c1d64bbe02dfdc651686c57",
      "created_at" : "2019-08-04T23:24:13Z",
      "diff_hunk" : "@@ -2653,6 +2673,8 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             {\"blank\", RPCArg::Type::BOOL, /* default */ \"false\", \"Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.\"},\n             {\"passphrase\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"Encrypt the wallet with this passphrase.\"},\n             {\"avoid_reuse\", RPCArg::Type::BOOL, /* default */ \"false\", \"Keep track of coin reuse, and treat dirty and clean coins differently with privacy considerations in mind.\"},\n+            {\"descriptors\", RPCArg::Type::BOOL, /* default */ \"false\", \"Create a native descriptor wallet. The wallet will use descriptors internally to handle address creation\"},\n+            {\"external_signer\", RPCArg::Type::BOOL, /* default */ \"false\", \"Use an external signer such as a hardware wallet. Requires -signer to be configured. Wallet creation will fail if keys cannot be fetched. Requires disable_private_keys and descriptors set to true.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r310408302",
      "id" : 310408302,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDQwODMwMg==",
      "original_commit_id" : "10b713dc90c396e850f51c5e6b3d026259b92e54",
      "original_position" : 176,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 32,
      "pull_request_review_id" : 270519353,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546",
      "updated_at" : "2020-01-30T18:05:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310408302",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r310408356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310408356"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What if there are multiple wallets, with different signers?\r\n\r\nIMO `-signer` needs to be replaced with either a wallet-stored path, or a path provided when the wallet is loaded...",
      "commit_id" : "0a0d29541535789a4c1d64bbe02dfdc651686c57",
      "created_at" : "2019-08-04T23:25:27Z",
      "diff_hunk" : "@@ -4132,6 +4211,181 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue send(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    RPCHelpMan{\"send\",\n+        \"\\nSend a transaction.\\n\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"a json array with outputs (key-value pairs), where none of the keys are duplicated.\\n\"\n+                    \"That is, each address can only appear once and there can only be one 'data' object.\\n\"\n+                    \"For convenience, a dictionary, which holds the key-value pairs directly, is also accepted.\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"address\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT + \"\"},\n+                            {\"comment\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"A comment to store the name of the person or organization\\n\"\n+                            \"                              to which you're sending the transaction. This is not part of the \\n\"\n+                            \"                              transaction, just kept in your wallet.\"}\n+                        },\n+                    },\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"data\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\"},\n+                        },\n+                    },\n+                },\n+            },\n+            {\"inputs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"Leave empty to add inputs automatically. A json array of json objects\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                            {\"sequence\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The sequence number\"},\n+                        },\n+                    },\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED_NAMED_ARG, \"\",\n+                {\n+                    {\"add_inputs\", RPCArg::Type::BOOL, /* default */ \"false\", \"If inputs are specified, automatically include more if they are not enough.\"},\n+                    {\"add_to_wallet\", RPCArg::Type::BOOL, /* default */ \"true\", \"When false, returns a serialized transaction which will not be added to the wallet or broadcast\"},\n+                    {\"changeAddress\", RPCArg::Type::STR_HEX, /* default */ \"pool address\", \"The bitcoin address to receive the change\"},\n+                    {\"changePosition\", RPCArg::Type::NUM, /* default */ \"random\", \"The index of the change output\"},\n+                    {\"change_type\", RPCArg::Type::STR, /* default */ \"set by -changetype\", \"The output type to use. Only valid if changeAddress is not specified. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\".\"},\n+                    {\"includeWatching\", RPCArg::Type::BOOL, /* default */ \"false\", \"Also select inputs which are watch only\"},\n+                    {\"locktime\", RPCArg::Type::NUM, /* default */ \"0\", \"Raw locktime. Non-0 value also locktime-activates inputs\"},\n+                    {\"lockUnspents\", RPCArg::Type::BOOL, /* default */ \"false\", \"Lock selected unspent outputs\"},\n+                    {\"feeRate\", RPCArg::Type::AMOUNT, /* default */ \"not set: makes wallet determine the fee\", \"Set a specific fee rate in \" + CURRENCY_UNIT + \"/kB\"},\n+                    {\"subtractFeeFromOutputs\", RPCArg::Type::ARR, /* default */ \"empty array\", \"A json array of integers.\\n\"\n+                    \"                              The fee will be equally deducted from the amount of each specified output.\\n\"\n+                    \"                              Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n+                    \"                              If no outputs are specified here, the sender pays the fee.\",\n+                        {\n+                            {\"vout_index\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED, \"The zero-based output index, before a change output is added.\"},\n+                        },\n+                    },\n+                    {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"false\", \"Marks this transaction as BIP125 replaceable.\\n\"\n+                    \"                              Allows this transaction to be replaced by a transaction with higher fees\"},\n+                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"Fallback to wallet's confirmation target\", \"Confirmation target (in blocks)\"},\n+                    {\"estimate_mode\", RPCArg::Type::STR, /* default */ \"UNSET\", \"The fee estimate mode, must be one of:\\n\"\n+                    \"         \\\"UNSET\\\"\\n\"\n+                    \"         \\\"ECONOMICAL\\\"\\n\"\n+                    \"         \\\"CONSERVATIVE\\\"\"},\n+                },\n+                \"options\"},\n+        },\n+        RPCResult{\n+                    \"{\\n\"\n+                    \"  \\\"complete\\\" : true|false, (boolean) If the transaction has a complete set of signatures\\n\"\n+                    \"  \\\"txid\\\" :                 (string) The transaction id for the send. Only 1 transaction is created regardless of \\n\"\n+                    \"                                      the number of addresses.\\n\",\n+                    \"  \\\"hex\\\" : \\\"value\\\",       (string) If add_to_wallet is false, the hex-encoded raw transaction with signature(s)\\n\"\n+                    \"  \\\"psbt\\\" : \\\"value\\\",      (string) If more signatures are needed, or if add_to_wallet is false, the base64-encoded (partially) signed transaction\\n\"\n+                    \"}\\n\"\n+                        },\n+                        RPCExamples{\n+                    \"\\nCreate a transaction with a specific input\\n\"\n+                    + HelpExampleCli(\"send\", \"'{\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\": 0.1}' '[{\\\"txid\\\":\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\", \\\"vout\\\":1}]'\") +\n+                    \"\\nSpecify the order of outputs, set fee rate to 1 satoshi per byte and return result without adding to wallet or broadcasting to the network\\n\"\n+                    + HelpExampleCli(\"send\", \"'[{\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\": 0.1}, {\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\": 0.1}]' [] '{\\\"feeRate\\\": 0.00001, \\\"add_to_wallet\\\": false}'\")\n+                        },\n+                    }.Check(request);\n+\n+    RPCTypeCheck(request.params, {\n+        UniValueType(), // ARR or OBJ, checked later\n+        UniValue::VARR,\n+        UniValue::VOBJ,\n+        }, true\n+    );\n+\n+    CAmount fee;\n+    int change_position;\n+    bool rbf = pwallet->m_signal_rbf;\n+    const UniValue &replaceable_arg = request.params[2][\"replaceable\"];\n+    if (!replaceable_arg.isNull()) {\n+        RPCTypeCheckArgument(replaceable_arg, UniValue::VBOOL);\n+        rbf = replaceable_arg.isTrue();\n+    }\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[1], request.params[0], request.params[2][\"locktime\"], rbf);\n+    CCoinControl coin_control;\n+    // Automatically select coins, unless at least one is manually selected. Can\n+    // be overriden by options.add_inputs.\n+    coin_control.m_add_inputs = rawTx.vin.size() == 0;\n+    FundTransaction(pwallet, rawTx, fee, change_position, request.params[2], coin_control);\n+\n+    bool add_to_wallet = true;\n+    if (request.params[2].exists(\"add_to_wallet\"))\n+        add_to_wallet = request.params[2][\"add_to_wallet\"].get_bool();\n+\n+    // Make a blank psbt\n+    PartiallySignedTransaction psbtx(rawTx);\n+\n+    // Fill transaction with out data and attempt to sign\n+    bool complete = true;\n+    bool bip32derivs = pwallet->IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER);\n+\n+    const TransactionError err = FillPSBT(pwallet, psbtx, complete, 1, true, bip32derivs);\n+    if (err != TransactionError::OK) {\n+        throw JSONRPCTransactionError(err);\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER)) {\n+        const std::string command = gArgs.GetArg(\"-signer\", DEFAULT_EXTERNAL_SIGNER);\n+        if (command == \"\") throw std::runtime_error(std::string(__func__) + \": restart bitcoind with -signer=<cmd>\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r310408356",
      "id" : 310408356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDQwODM1Ng==",
      "original_commit_id" : "10b713dc90c396e850f51c5e6b3d026259b92e54",
      "original_position" : 693,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 270519418,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546",
      "updated_at" : "2020-01-30T18:05:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310408356",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r310517052"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310517052"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Indeed, I was complaining about that when `blank` was added :-)",
      "commit_id" : "0a0d29541535789a4c1d64bbe02dfdc651686c57",
      "created_at" : "2019-08-05T09:34:30Z",
      "diff_hunk" : "@@ -2653,6 +2673,8 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             {\"blank\", RPCArg::Type::BOOL, /* default */ \"false\", \"Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.\"},\n             {\"passphrase\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"Encrypt the wallet with this passphrase.\"},\n             {\"avoid_reuse\", RPCArg::Type::BOOL, /* default */ \"false\", \"Keep track of coin reuse, and treat dirty and clean coins differently with privacy considerations in mind.\"},\n+            {\"descriptors\", RPCArg::Type::BOOL, /* default */ \"false\", \"Create a native descriptor wallet. The wallet will use descriptors internally to handle address creation\"},\n+            {\"external_signer\", RPCArg::Type::BOOL, /* default */ \"false\", \"Use an external signer such as a hardware wallet. Requires -signer to be configured. Wallet creation will fail if keys cannot be fetched. Requires disable_private_keys and descriptors set to true.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r310517052",
      "id" : 310517052,
      "in_reply_to_id" : 310408302,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDUxNzA1Mg==",
      "original_commit_id" : "10b713dc90c396e850f51c5e6b3d026259b92e54",
      "original_position" : 176,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 32,
      "pull_request_review_id" : 270655920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546",
      "updated_at" : "2020-01-30T18:05:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310517052",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r310517479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310517479"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Storing `signer` in the wallet makes sense, but I also think it can wait for a later PR. In practice afaik the only tool that currently works is HWI and it can handle multiple wallets. In the long run however I do hope that wallet manufactures provide their own software that just uses the same commands / responses. ",
      "commit_id" : "0a0d29541535789a4c1d64bbe02dfdc651686c57",
      "created_at" : "2019-08-05T09:35:33Z",
      "diff_hunk" : "@@ -4132,6 +4211,181 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue send(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    RPCHelpMan{\"send\",\n+        \"\\nSend a transaction.\\n\",\n+        {\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"a json array with outputs (key-value pairs), where none of the keys are duplicated.\\n\"\n+                    \"That is, each address can only appear once and there can only be one 'data' object.\\n\"\n+                    \"For convenience, a dictionary, which holds the key-value pairs directly, is also accepted.\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"address\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT + \"\"},\n+                            {\"comment\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"A comment to store the name of the person or organization\\n\"\n+                            \"                              to which you're sending the transaction. This is not part of the \\n\"\n+                            \"                              transaction, just kept in your wallet.\"}\n+                        },\n+                    },\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"data\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\"},\n+                        },\n+                    },\n+                },\n+            },\n+            {\"inputs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"Leave empty to add inputs automatically. A json array of json objects\",\n+                {\n+                    {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                            {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                            {\"sequence\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The sequence number\"},\n+                        },\n+                    },\n+                },\n+            },\n+            {\"options\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED_NAMED_ARG, \"\",\n+                {\n+                    {\"add_inputs\", RPCArg::Type::BOOL, /* default */ \"false\", \"If inputs are specified, automatically include more if they are not enough.\"},\n+                    {\"add_to_wallet\", RPCArg::Type::BOOL, /* default */ \"true\", \"When false, returns a serialized transaction which will not be added to the wallet or broadcast\"},\n+                    {\"changeAddress\", RPCArg::Type::STR_HEX, /* default */ \"pool address\", \"The bitcoin address to receive the change\"},\n+                    {\"changePosition\", RPCArg::Type::NUM, /* default */ \"random\", \"The index of the change output\"},\n+                    {\"change_type\", RPCArg::Type::STR, /* default */ \"set by -changetype\", \"The output type to use. Only valid if changeAddress is not specified. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\".\"},\n+                    {\"includeWatching\", RPCArg::Type::BOOL, /* default */ \"false\", \"Also select inputs which are watch only\"},\n+                    {\"locktime\", RPCArg::Type::NUM, /* default */ \"0\", \"Raw locktime. Non-0 value also locktime-activates inputs\"},\n+                    {\"lockUnspents\", RPCArg::Type::BOOL, /* default */ \"false\", \"Lock selected unspent outputs\"},\n+                    {\"feeRate\", RPCArg::Type::AMOUNT, /* default */ \"not set: makes wallet determine the fee\", \"Set a specific fee rate in \" + CURRENCY_UNIT + \"/kB\"},\n+                    {\"subtractFeeFromOutputs\", RPCArg::Type::ARR, /* default */ \"empty array\", \"A json array of integers.\\n\"\n+                    \"                              The fee will be equally deducted from the amount of each specified output.\\n\"\n+                    \"                              Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n+                    \"                              If no outputs are specified here, the sender pays the fee.\",\n+                        {\n+                            {\"vout_index\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED, \"The zero-based output index, before a change output is added.\"},\n+                        },\n+                    },\n+                    {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"false\", \"Marks this transaction as BIP125 replaceable.\\n\"\n+                    \"                              Allows this transaction to be replaced by a transaction with higher fees\"},\n+                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"Fallback to wallet's confirmation target\", \"Confirmation target (in blocks)\"},\n+                    {\"estimate_mode\", RPCArg::Type::STR, /* default */ \"UNSET\", \"The fee estimate mode, must be one of:\\n\"\n+                    \"         \\\"UNSET\\\"\\n\"\n+                    \"         \\\"ECONOMICAL\\\"\\n\"\n+                    \"         \\\"CONSERVATIVE\\\"\"},\n+                },\n+                \"options\"},\n+        },\n+        RPCResult{\n+                    \"{\\n\"\n+                    \"  \\\"complete\\\" : true|false, (boolean) If the transaction has a complete set of signatures\\n\"\n+                    \"  \\\"txid\\\" :                 (string) The transaction id for the send. Only 1 transaction is created regardless of \\n\"\n+                    \"                                      the number of addresses.\\n\",\n+                    \"  \\\"hex\\\" : \\\"value\\\",       (string) If add_to_wallet is false, the hex-encoded raw transaction with signature(s)\\n\"\n+                    \"  \\\"psbt\\\" : \\\"value\\\",      (string) If more signatures are needed, or if add_to_wallet is false, the base64-encoded (partially) signed transaction\\n\"\n+                    \"}\\n\"\n+                        },\n+                        RPCExamples{\n+                    \"\\nCreate a transaction with a specific input\\n\"\n+                    + HelpExampleCli(\"send\", \"'{\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\": 0.1}' '[{\\\"txid\\\":\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\", \\\"vout\\\":1}]'\") +\n+                    \"\\nSpecify the order of outputs, set fee rate to 1 satoshi per byte and return result without adding to wallet or broadcasting to the network\\n\"\n+                    + HelpExampleCli(\"send\", \"'[{\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\": 0.1}, {\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\": 0.1}]' [] '{\\\"feeRate\\\": 0.00001, \\\"add_to_wallet\\\": false}'\")\n+                        },\n+                    }.Check(request);\n+\n+    RPCTypeCheck(request.params, {\n+        UniValueType(), // ARR or OBJ, checked later\n+        UniValue::VARR,\n+        UniValue::VOBJ,\n+        }, true\n+    );\n+\n+    CAmount fee;\n+    int change_position;\n+    bool rbf = pwallet->m_signal_rbf;\n+    const UniValue &replaceable_arg = request.params[2][\"replaceable\"];\n+    if (!replaceable_arg.isNull()) {\n+        RPCTypeCheckArgument(replaceable_arg, UniValue::VBOOL);\n+        rbf = replaceable_arg.isTrue();\n+    }\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[1], request.params[0], request.params[2][\"locktime\"], rbf);\n+    CCoinControl coin_control;\n+    // Automatically select coins, unless at least one is manually selected. Can\n+    // be overriden by options.add_inputs.\n+    coin_control.m_add_inputs = rawTx.vin.size() == 0;\n+    FundTransaction(pwallet, rawTx, fee, change_position, request.params[2], coin_control);\n+\n+    bool add_to_wallet = true;\n+    if (request.params[2].exists(\"add_to_wallet\"))\n+        add_to_wallet = request.params[2][\"add_to_wallet\"].get_bool();\n+\n+    // Make a blank psbt\n+    PartiallySignedTransaction psbtx(rawTx);\n+\n+    // Fill transaction with out data and attempt to sign\n+    bool complete = true;\n+    bool bip32derivs = pwallet->IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER);\n+\n+    const TransactionError err = FillPSBT(pwallet, psbtx, complete, 1, true, bip32derivs);\n+    if (err != TransactionError::OK) {\n+        throw JSONRPCTransactionError(err);\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER)) {\n+        const std::string command = gArgs.GetArg(\"-signer\", DEFAULT_EXTERNAL_SIGNER);\n+        if (command == \"\") throw std::runtime_error(std::string(__func__) + \": restart bitcoind with -signer=<cmd>\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r310517479",
      "id" : 310517479,
      "in_reply_to_id" : 310408356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDUxNzQ3OQ==",
      "original_commit_id" : "10b713dc90c396e850f51c5e6b3d026259b92e54",
      "original_position" : 693,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 270656459,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546",
      "updated_at" : "2020-01-30T18:05:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310517479",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-08-06T14:25:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-518692488",
      "id" : 518692488,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxODY5MjQ4OA==",
      "updated_at" : "2019-08-06T14:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518692488",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-09-07T01:12:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-529058300",
      "id" : 529058300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyOTA1ODMwMA==",
      "updated_at" : "2019-09-07T01:12:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529058300",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Can we expect this to be merged and included in 0.19? It's a really useful and requested feature! Thanks to everyone who is working on it.",
      "created_at" : "2019-09-12T11:45:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-530788105",
      "id" : 530788105,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMDc4ODEwNQ==",
      "updated_at" : "2019-09-12T11:45:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/530788105",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/42069389?v=4",
         "events_url" : "https://api.github.com/users/Relaxo143/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Relaxo143/followers",
         "following_url" : "https://api.github.com/users/Relaxo143/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Relaxo143/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Relaxo143",
         "id" : 42069389,
         "login" : "Relaxo143",
         "node_id" : "MDQ6VXNlcjQyMDY5Mzg5",
         "organizations_url" : "https://api.github.com/users/Relaxo143/orgs",
         "received_events_url" : "https://api.github.com/users/Relaxo143/received_events",
         "repos_url" : "https://api.github.com/users/Relaxo143/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Relaxo143/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Relaxo143/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Relaxo143"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Relaxo143 not a chance; this is still work in progress and there's several pull requests that need to be reviewed and merged first. There's also a feature freeze on 0.19. ",
      "created_at" : "2019-09-16T08:54:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-531692625",
      "id" : 531692625,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMTY5MjYyNQ==",
      "updated_at" : "2019-09-16T08:54:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/531692625",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I dropped the dependency on my new `send` RPC proposal #16378, in favor of just tweaking `sendmany` and `sendtoaddress`. It's less powerful, but should reduce the review burden once native descriptors are merged.",
      "created_at" : "2019-09-16T16:27:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-531853388",
      "id" : 531853388,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMTg1MzM4OA==",
      "updated_at" : "2019-09-16T16:27:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/531853388",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-10-29T13:20:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-547415763",
      "id" : 547415763,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzQxNTc2Mw==",
      "updated_at" : "2019-10-29T13:20:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547415763",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-10-30T12:10:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-547871407",
      "id" : 547871407,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzg3MTQwNw==",
      "updated_at" : "2019-10-30T12:10:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547871407",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-11-08T11:05:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-551590239",
      "id" : 551590239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MTU5MDIzOQ==",
      "updated_at" : "2019-11-08T11:05:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551590239",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-12-16T21:54:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-566261512",
      "id" : 566261512,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NjI2MTUxMg==",
      "updated_at" : "2019-12-16T21:54:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/566261512",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-02-04T21:08:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-582115673",
      "id" : 582115673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MjExNTY3Mw==",
      "updated_at" : "2020-02-04T21:08:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582115673",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r375648252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375648252"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't see where we are linking this",
      "commit_id" : "0a0d29541535789a4c1d64bbe02dfdc651686c57",
      "created_at" : "2020-02-06T05:36:02Z",
      "diff_hunk" : "@@ -0,0 +1,121 @@\n+# ===========================================================================\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_process.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_PROCESS\n+#\n+# DESCRIPTION\n+#\n+#   Test for Process library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_PROCESS_LIB)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r375648252",
      "id" : 375648252,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0ODI1Mg==",
      "original_commit_id" : "0a0d29541535789a4c1d64bbe02dfdc651686c57",
      "original_position" : 17,
      "path" : "build-aux/m4/ax_boost_process.m4",
      "position" : 17,
      "pull_request_review_id" : 354209663,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546",
      "updated_at" : "2020-02-06T05:46:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375648252",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r375649913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375649913"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems like it will pull in Boost.Process (and our - in this case dead - wrapper code using it) even with `--disable-external-signer`.\r\n\r\nMaybe not a problem since we plan to use it for other things too?",
      "commit_id" : "0a0d29541535789a4c1d64bbe02dfdc651686c57",
      "created_at" : "2020-02-06T05:44:15Z",
      "diff_hunk" : "@@ -1075,6 +1081,7 @@ AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n AX_BOOST_THREAD\n AX_BOOST_CHRONO\n+AX_BOOST_PROCESS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#discussion_r375649913",
      "id" : 375649913,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0OTkxMw==",
      "original_commit_id" : "0a0d29541535789a4c1d64bbe02dfdc651686c57",
      "original_position" : 24,
      "path" : "configure.ac",
      "position" : 24,
      "pull_request_review_id" : 354209663,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546",
      "updated_at" : "2020-02-06T05:46:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375649913",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebase and big update:\r\n* I dropped #15590 (`GetAddressType() & IsSegWit()`) in favor of `GetOutputType()`\r\n* this PR introduces `ExternalSignerScriptPubKeyMan` as a subclass of `DescriptorScriptPubKeyMan`",
      "created_at" : "2020-02-21T15:33:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-589703948",
      "id" : 589703948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4OTcwMzk0OA==",
      "updated_at" : "2020-02-21T15:33:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589703948",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-02-25T11:19:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-590817689",
      "id" : 590817689,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MDgxNzY4OQ==",
      "updated_at" : "2020-02-25T11:19:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590817689",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/fa733bbd78add587e19f0175ab9c127a8c27e024/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-03-09T21:20:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-596785805",
      "id" : 596785805,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5Njc4NTgwNQ==",
      "updated_at" : "2020-03-09T21:20:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596785805",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on the latest #15764.",
      "created_at" : "2020-03-23T19:50:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-602820101",
      "id" : 602820101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjgyMDEwMQ==",
      "updated_at" : "2020-03-23T19:50:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602820101",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-03-23T22:03:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16546#issuecomment-602880621",
      "id" : 602880621,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjg4MDYyMQ==",
      "updated_at" : "2020-03-23T22:03:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602880621",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
