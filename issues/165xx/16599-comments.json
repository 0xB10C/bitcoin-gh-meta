[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on ASN-based bucketing, no preference at the moment for how updates should work.",
      "created_at" : "2019-08-15T17:51:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-521733745",
      "id" : 521733745,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTczMzc0NQ==",
      "updated_at" : "2019-08-15T17:51:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521733745",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on ASN-based bucketing in addition to legacy /16 bucketing.\r\n\r\nMaking sure peers are diverse both across a.) the AS-number axis (ASN-based bucketing) and b.) the prefix axis (legacy `/16` bucketing) should maximise overall network robustness.\r\n\r\nIn addition to this: given that we'll have a prefix-to-ASN map -- has the wild idea of opening a connection to one peer from within the **same** AS-number as oneself been discussed?",
      "created_at" : "2019-08-15T19:31:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-521767364",
      "id" : 521767364,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTc2NzM2NA==",
      "updated_at" : "2019-08-15T19:31:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521767364",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift I believe so, see IRC discussion from a few days ago: http://www.erisian.com.au/bitcoin-core-dev/log-2019-08-09.html#l-266\r\n\r\nSuch a nearby node can be useful for fetching blocks quickly, but at the same time e.g. creates a privacy risk for transaction broadcast. I believe that's why @TheBlueMatt suggested to connect to them in `blocksonly` mode.",
      "created_at" : "2019-08-15T19:46:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-521772042",
      "id" : 521772042,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTc3MjA0Mg==",
      "updated_at" : "2019-08-15T19:46:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521772042",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Definitely Concept ACK\r\n\r\n> mapping file should be distributed along with the release, instead of becoming part of the binary.\r\n\r\nThere's [GeoLite2 ASN database](https://dev.maxmind.com/geoip/geoip2/geolite2/), which could be updated by the user independently (e.g. from the cron script) from Bitcoin Core updates. Actually, I'm not even sure it should be bundled with Bitcoin Core. If database is unavailable - fallback to old legacy /16 bucketing.\r\n\r\nAnybody planning to actually work on this?",
      "created_at" : "2019-08-15T21:38:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-521806882",
      "id" : 521806882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTgwNjg4Mg==",
      "updated_at" : "2019-08-15T21:38:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521806882",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors The \"connect-to-own-ASN\" idea has another drawback if implemented naÃ¯vely without considering the node's total connectivity in terms of ASN distribution:\r\n\r\nConsider an organisation disallowing Bitcoin traffic at the edge router level. A newly launched `bitcoind` would only be able to connect to ASN-local nodes. The node would risk becoming part of an ASN-local \"Bitcoin network\" which may not be connected to the global network.\r\n\r\nPerhaps we should require `N` connections to prefixes announced by external ASN:s before considering opening connections within our own ASN :-)",
      "created_at" : "2019-08-16T12:14:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-521988842",
      "id" : 521988842,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTk4ODg0Mg==",
      "updated_at" : "2019-08-16T12:14:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521988842",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">Anybody planning to actually work on this?\r\n\r\n@kristapsk I am sketching an implementation.",
      "created_at" : "2019-08-16T12:47:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-521997299",
      "id" : 521997299,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMTk5NzI5OQ==",
      "updated_at" : "2019-08-16T15:16:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521997299",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift alternatively \"blocks only\" in this case would mean only downloading blocks for which you already have the headers (unlike `-blocksonly`). ",
      "created_at" : "2019-08-16T14:03:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-522020110",
      "id" : 522020110,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjAyMDExMA==",
      "updated_at" : "2019-08-16T14:03:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522020110",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kristapsk @naumenkogs and I are working on a way to load a compressed IP-to-ASN map into bitcoind and use it for grouping IPs. The compressed scheme currently needs slightly less than 1 MB for a full map of the Internet.\n\nIt's an open question I think how this map will come to be. Initially I guess it'll just be optional and available for people to experiment with (using a command line flag and a file). Eventually we may want to bundle a map with Bitcoin Core or even make it part of the binary if this approach turns out to be useful.\n\nI wasn't aware of that publicly available GeoLite2 database; that looks useful to experiment with. So far I've been using a BGP router dump I got from somewhere.",
      "created_at" : "2019-08-17T06:06:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-522208698",
      "id" : 522208698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjIwODY5OA==",
      "updated_at" : "2019-08-17T06:06:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522208698",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Relevant background reading: https://erebus-attack.comp.nus.edu.sg\r\n\r\nOne thing this attack leverages is that it can fake ASes \"behind\" it, from the victim node perspective. In light of that, for nodes that know their own IP address, would it make sense to divide AS buckets from an indivudal node perspective rather than from a global perspective?\r\n\r\nFor example if our node is in AS 1 and AS 1 has routes to AS 2 and 3, then for each new peer we check if it will route through AS 2 or AS 3 and spread equally over buckets. When AS 2 connects to AS 5 and 6, we again split the AS2 \"bucket\" between those two. No idea how much number crunching that involves (could wait until after IBD), or if there's even a reasonable algorithm.",
      "created_at" : "2019-08-17T11:04:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-522227679",
      "id" : 522227679,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjIyNzY3OQ==",
      "updated_at" : "2019-08-17T11:04:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522227679",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt wrote in https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524573795:\r\n\r\n> One thing we can play with after we build an initial table is to look at the paths, instead of looking only at the last ASN in the path. eg if, from many vantage points on the internet, a given IP block always passes from AS 1 to AS 2, we could consider it as a part of AS 1 (given it appears to only have one provider - AS 1). In order to avoid Western bias we'd need to do it across geographic regions and from many vantage points (eg maybe contact a Tier 1 and get their full routing table view, not just the selected routes), but once we get the infrastructure in place, further filtering can be played with.\r\n\r\nWould it make sense to `traceroute` some of the nodes we connect to and re-bucket based on the ASNs of the first couple of hops? Or does such active probing draw too much attention?",
      "created_at" : "2019-08-28T09:33:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-525663953",
      "id" : 525663953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNTY2Mzk1Mw==",
      "updated_at" : "2019-08-28T09:33:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/525663953",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors To do the equivalent of what `traceroute` does would require setting time-to-live on outgoing packets (bypassing the socket interface).\r\n\r\nThat would require the end-user to run `bitcoind` as `root` (bad), or having `bitcoind` invoke a third-party SUID root binary such as `traceroute` which is also bad: the various `traceroute`:s were clearly not written with security in mind -- see history of heap overflows, etc.",
      "created_at" : "2019-08-28T14:46:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-525779157",
      "id" : 525779157,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNTc3OTE1Nw==",
      "updated_at" : "2019-08-28T14:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/525779157",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "So there are two parts to this proposal:\r\n- Use ASN information for addrman bucketing.\r\n- Use ASN information for determining which peers to connect to.\r\n\r\nIt seems to me that using ASN information for addrman bucketing is likely to be very beneficial, as it prevents being blinded to peers outside of (eg) ASNs that an attacker might want to divert traffic towards.  I figure we should be able to make addrman large enough (if it's not already) that the increased collisions for AS's that have more nodes should not be a big problem.\r\n\r\nBut it's less clear to me if enforcing ASN-diversity on our outbound peers is beneficial or not, as it might drive connections to a relatively small part of the overall network graph.  For instance if there is an ASN with only 1 node (A) in it, and let's say there are a couple hundred ASNs in total with any nodes at all (fair assumption?), then rather than having a ~1 in 10000 chance of A being selected by a node making an outbound connection, A's chances will be more like 1 in a couple hundred.  This could have unfortunate side effects for other network-graph attacks (and EREBUS might even be easier in some situations as a result, since that attack revolves around using any AS for which the victim would route through the adversary's network to reach).  So this seems like a potentially large effect that I think would be worthy of more careful study before deploying.\r\n\r\nAn alternative approach might be to just aim for node diversity at the addrman level (using ASN information if available, as suggested here), and then use peer rotation or frequent chain-tip-sync with random peers (like #16859) in order to reduce the likelihood of being eclipsed.\r\n\r\nEDIT: I realized I missed the IRC conversation on this, which I just read.  I did misunderstand the sampling effect of randomly sampling from all of addrman, as we do now with our existing /16 group limit, and presumably we would also do if we were to enforce an ASN connection limit as well.  Still, this seems to me like something we should model and study before deployment, as it's not clear at all to me what effect this would have on the network topology.  AS-diversity of our immediate peers is not clearly the thing we should be trying to maximize; if for instance dishonest peers can gain a connectivity advantage by locating themselves in small AS groups, that seems potentially problematic.",
      "created_at" : "2019-09-20T13:04:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-533545858",
      "id" : 533545858,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMzU0NTg1OA==",
      "updated_at" : "2019-09-20T13:12:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/533545858",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar It should also be noted that it is possible for a BGP-speaking attacker to export routes on behalf of an arbitrary number of fake downstream ASN:s (making it look like the attacker is providing transit service to the fake downstream ASN:s). Thereby gaining access to an arbitrary number of tickets in the ASN lottery :)\r\n\r\nAs described more in depth here: https://github.com/bitcoin/bitcoin/pull/16702#issuecomment-524561108\r\n",
      "created_at" : "2019-09-20T16:53:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-533631109",
      "id" : 533631109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMzYzMTEwOQ==",
      "updated_at" : "2019-09-20T16:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/533631109",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "To understand how the proposed asmap solves the problem and affects the topology of the network, I think itâs important to distinguish the physical and logical level.\r\n\r\n### Physical level\r\n\r\n**Legacy /16 bucketing** always attempted to not create more than one connection per node to the same /16 subnet, even if a lot of nodes are located there. \r\nIt turns out that the correlation between location/owner and /16 is much weaker these days.\r\n**Asmap** diversifies by ASN, which is a better representation of a piece of infrastructure than /16 group.\r\nAsmap adjusts bucketing to be robust in more realistic scenarios (large AS gets corrupted, trouble with the particular AS-level infrastructure). I think we can agree that in terms of the physical level, this is an improvement.\r\n\r\nAsmap might make it worse if an attacker manages to spin up fake AS, but that can be handled upon asmap file distribution.\r\n\r\n### Logical level\r\nAny diversification makes certain nodes (placed in rare /16 groups or rare ASes) more likely to be chosen for connection.\r\nThis might make topology look less like a random graph. This is generally not a good sign, as it creates weakly connected components, which are easier to attack. \r\nThe effect on topology be represented by the variation of (AS/netgroup)->nodes] distribution. \r\nIn practice, however, salted hashing + bucketing makes the effect of the uneven distribution less noticeable. (see next message)\r\n",
      "created_at" : "2019-11-21T20:28:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-557258624",
      "id" : 557258624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzI1ODYyNA==",
      "updated_at" : "2019-11-21T20:28:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557258624",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I made [this](https://github.com/naumenkogs/bitcoin_network_analysis/blob/master/asmap/test.py) simulating script (operating over the *real* current list of reachable nodes) to understand two things:\r\n- how much less of a random graph we are getting because of AS/netgroup bucketing\r\n- how much benefit can an attacker get from this non-uniformity\r\n\r\nBoth of these questions can be answered with the same answer: *the probability of choosing a node from the rare [AS/netgroup]*\r\n\r\nThis means that, if we pick 10% of nodes to be placed in the rarest groups, one per group, the probability of choosing them by other nodes (with different salts) in the network should be 10%.\r\n\r\nAs I mentioned before, I believe the result depends on the variation (AS/netgroup)->nodes.\r\nSince for netgroups the variation is low, it does not affect the graph, and the probability, in this case, is around 10%, no matter how many peers every node chooses.\r\n\r\nFor Asmap **it does slightly affect the graph**, and the probability is 11.5% if every node chooses 8 peers.\r\nIf every node chooses 32 peers, the probability is 15%.\r\n \r\nTo reduce this, we can split N top AS into artificial sub-AS, to reduce the variation, and make it evener. \r\nFor instance, if we randomly split top-25 AS each into 20 sub-AS, the probability becomes 10% no matter how many peers every node chooses.\r\nAlternatively, we can bucket small ASes together, which would also reduce the variance.\r\n\r\nOverall, I believe this is a positive result, and asmap should be integrated. But let me know if you would like any other measurements or if you have an opinion on AS-splitting.",
      "created_at" : "2019-11-21T20:28:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-557258753",
      "id" : 557258753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzI1ODc1Mw==",
      "updated_at" : "2019-11-25T16:43:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557258753",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs Thanks for the simulation and analysis.\r\n\r\nIf going the asmap route (which I think is a nice idea) I guess there is the option of using the AS/netgroup bucketing method with probability `p` and using the legacy /16 bucketing with probability `1-p`. Could that make us more robust against adversaries able to game only one of the methods (but not both), and increase the cost of attack for adversaries who have the capability to game both methods? Is it overkill?\r\n\r\nSorry if that has been discussed previously or if I've misunderstood how things are meant to work.",
      "created_at" : "2019-11-21T21:25:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-557278530",
      "id" : 557278530,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzI3ODUzMA==",
      "updated_at" : "2019-11-21T23:26:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557278530",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift I believe that would be overkill. If we think using an AS map is the wrong approach, we should just improve the map. For example we could choose to merge the smallest AS'es until they're all (say) as large as a (random example) /22.",
      "created_at" : "2019-11-25T22:07:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/16599#issuecomment-558361844",
      "id" : 558361844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16599",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1ODM2MTg0NA==",
      "updated_at" : "2019-11-25T22:08:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558361844",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
