{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "This is built on top of #25685 (preset inputs selection process was restructured on it) and #25734 (because redundant code gets cleaned on it).\r\n\r\nWould recommend reviewers to start with #25685 as it provides the basis for this changes. And https://github.com/bitcoin/bitcoin/pull/24845#issuecomment-1130310321 as it's the original idea of this work.\r\n\r\nI still have work to do here, but sharing it so the milestone starts being public.\r\n\r\nNote: would say that the best way to review this is by starting from the last commit to understand how the flow ends up being (knowing that I will be improving the last commit description in the coming days).\r\n\r\n#### How the Inputs Fetch + Selection process roughly works (since #25685):\r\n\r\n```\r\n1. Fetch userâs manually selected inputs.\r\n2. Fetch wallet available coins (walks through the entire wallet txes map) and insert them into a set of vectors (each vector stores outputs from a single type).\r\n3. Coin Selection Process:\r\n   Call `AttemptSelection` 8 times. Each of them expands the coin eligibility filter (accepting a larger subset of coins in the calculation) until it founds a solutions or completely fails if no solutions gets founds after the 8 rounds.\r\n\r\n   Each `AttemptSelection` call performs the following actions:\r\n     - For each output type supported by the wallet (P2SH, P2PK, P2WPKH, P2WSH and a combination of all of them):\r\n       Call âChooseSelectionResultâ providing the respective, filtered by type, coins vector. Which:\r\n           I. Groups the outputs vector twice (one for positive only and a second one who includes the negative ones as well).\r\n              - GroupOutputs walks-through the entire inputted coins vector one time at least, + more if we are avoiding partial spends, to generate a vector of OutputGroups.\r\n           II. Then performs every coin selection algorithm using the recently created vector of OutputGroup: (1) BnB, (2) knapsack and (3) SRD.\r\n           III. Then returns the best solution out of them.\r\n```\r\n\r\nAs can be noticed, we are performing the general operation of gathering outputs, with the same script, into a single container inside:\r\nEach coins selection attempt (8 times â> each coin eligibility filter), for each of the outputs vector who were filtered by type (plus another one joining all the outputs as well if needed), twice (one for the positive only outputs effective value and a second one for all of them).\r\n\r\nSo.. in the worst case scenario of not finding any solution in the 8 AttemptSelection calls. We call `GroupOutputs` a number of 80 times (8 * 5 * 2).\r\n\r\n#### Proposed Improvements:\r\n\r\nThis PR restructures the process so all the OutputGroups, filtered by coin eligibility and output type, are created on a single loop. Outside the Coin Selection Process.\r\n\r\nSo, the process turns into:\r\n\r\n```\r\n1. Fetch userâs manually selected inputs.\r\n2. Fetch wallet available coins.\r\n3. Group outputs by each coin eligibility filter and each different output type found.\r\n4. Coin Selection Process: \r\n   Call AttemptSelection 8 times. Each of them expands the coin eligibility filter (accepting different output groups) until it founds a solutions or completely fails if no solutions gets founds after the 8 rounds.\r\n   \r\n   Each âAttemptSelectionâ call performs the following actions:\r\n      - For each output type supported by the wallet (P2SH, P2PK, P2WPKH, P2WSH and all of them):\r\n          A. Call âChooseSelectionResultâ providing the respective, filtered by type, output group. Which:\r\n             I. Performs every coin selection algorithm using the provided vector of OutputGroup: (1) BnB, (2) knapsack and (3) SRD.\r\n             II. Then returns the best solution out of them.\r\n```\r\n\r\n----------------------------------\r\n\r\nFootnote; this PR is still a WIP:\r\n\r\n* [ ] Add proper commits description.\r\n* [ ] Re-read/review PR description.., make it more \"friendly\" (mention the introduced test cases as well).\r\n* [ ] Add benchmark for the worst case scenario.\r\n* [ ] Measure memory usage.\r\n* [ ] Think on further test cases.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/comments",
   "created_at" : "2022-08-08T21:19:07Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806",
   "id" : 1332409874,
   "labels" : [
      {
         "color" : "08a781",
         "default" : false,
         "description" : null,
         "id" : 149424,
         "name" : "Wallet",
         "node_id" : "MDU6TGFiZWwxNDk0MjQ=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII584817t0",
   "number" : 25806,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/25806.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25806",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/25806.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/timeline",
   "title" : "wallet: single outputs grouping calculation",
   "updated_at" : "2022-08-08T21:32:28Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
      "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
      "followers_url" : "https://api.github.com/users/furszy/followers",
      "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
      "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/furszy",
      "id" : 5377650,
      "login" : "furszy",
      "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
      "organizations_url" : "https://api.github.com/users/furszy/orgs",
      "received_events_url" : "https://api.github.com/users/furszy/received_events",
      "repos_url" : "https://api.github.com/users/furszy/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/furszy"
   }
}
