[
   {
      "body" : "Fixes at least #3966.",
      "created_at" : "2014-05-08T08:30:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-42524757",
      "id" : 42524757,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
      "updated_at" : "2014-05-08T08:30:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/42524757",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12450933"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12450933"
         }
      },
      "body" : "Should we have a `boost::this_thread::interruption_point()` here?\r\n",
      "commit_id" : "18e72167ddfeaea95253b62994c6d64b55b35005",
      "created_at" : "2014-05-08T20:33:04Z",
      "diff_hunk" : "@@ -2073,75 +2083,116 @@ void static FindMostWorkChain() {\n             }\n             pindexTest = pindexTest->pprev;\n         }\n-        if (fInvalidAncestor)\n-            continue;\n-\n-        break;\n+        if (!fInvalidAncestor)\n+            return pindexNew;\n     } while(true);\n-\n-    // Check whether it's actually an improvement.\n-    if (chainMostWork.Tip() && !CBlockIndexWorkComparator()(chainMostWork.Tip(), pindexNew))\n-        return;\n-\n-    // We have a new best.\n-    chainMostWork.SetTip(pindexNew);\n }\n \n-// Try to activate to the most-work chain (thereby connecting it).\n-bool ActivateBestChain(CValidationState &state) {\n-    LOCK(cs_main);\n+// Try to make some progress towards making pindexMostWork the active block.\n+static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork) {\n+    AssertLockHeld(cs_main);\n+    bool fInvalidFound = false;\n     CBlockIndex *pindexOldTip = chainActive.Tip();\n-    bool fComplete = false;\n-    while (!fComplete) {\n-        FindMostWorkChain();\n-        fComplete = true;\n+    CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n \n-        // Check whether we have something to do.\n-        if (chainMostWork.Tip() == NULL) break;\n+    // Disconnect active blocks which are no longer in the best chain.\n+    while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n+        if (!DisconnectTip(state))\n+            return false;\n+    }\n \n-        // Disconnect active blocks which are no longer in the best chain.\n-        while (chainActive.Tip() && !chainMostWork.Contains(chainActive.Tip())) {\n-            if (!DisconnectTip(state))\n-                return false;\n-        }\n+    // Build list of new blocks to connect.\n+    std::vector<CBlockIndex*> vpindexToConnect;\n+    vpindexToConnect.reserve(pindexMostWork->nHeight - (pindexFork ? pindexFork->nHeight : -1));\n+    while (pindexMostWork && pindexMostWork != pindexFork) {\n+        vpindexToConnect.push_back(pindexMostWork);\n+        pindexMostWork = pindexMostWork->pprev;\n+    }\n \n-        // Connect new blocks.\n-        while (!chainActive.Contains(chainMostWork.Tip())) {\n-            CBlockIndex *pindexConnect = chainMostWork[chainActive.Height() + 1];\n-            if (!ConnectTip(state, pindexConnect)) {\n-                if (state.IsInvalid()) {\n-                    // The block violates a consensus rule.\n-                    if (!state.CorruptionPossible())\n-                        InvalidChainFound(chainMostWork.Tip());\n-                    fComplete = false;\n-                    state = CValidationState();\n-                    break;\n-                } else {\n-                    // A system error occurred (disk space, database error, ...).\n-                    return false;\n-                }\n+    // Connect new blocks.\n+    BOOST_REVERSE_FOREACH(CBlockIndex *pindexConnect, vpindexToConnect) {\n+        if (!ConnectTip(state, pindexConnect)) {\n+            if (state.IsInvalid()) {\n+                // The block violates a consensus rule.\n+                if (!state.CorruptionPossible())\n+                    InvalidChainFound(vpindexToConnect.back());\n+                state = CValidationState();\n+                fInvalidFound = true;\n+                break;\n+            } else {\n+                // A system error occurred (disk space, database error, ...).\n+                return false;\n+            }\n+        } else {\n+            if (!pindexOldTip || chainActive.Tip()->nChainWork > pindexOldTip->nChainWork) {\n+                // We're in a better position than we were. Return temporarily to release the lock.\n+                break;\n             }\n         }\n     }\n \n-    if (chainActive.Tip() != pindexOldTip) {\n-        std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-        if (!IsInitialBlockDownload() && !strCmd.empty())\n+    // Callbacks/notifications for a new best chain.\n+    if (fInvalidFound)\n+        CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n+    else\n+        CheckForkWarningConditions();\n+\n+    if (!pblocktree->Flush())\n+        return state.Abort(_(\"Failed to sync block index\"));\n+\n+    return true;\n+}\n+\n+bool ActivateBestChain(CValidationState &state) {\n+    CBlockIndex *pindexNewTip = NULL;\n+    CBlockIndex *pindexMostWork = NULL;\n+    do {\n+        bool fInitialDownload;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12450933",
      "id" : 12450933,
      "original_commit_id" : "ed85993dc12e02f53f32a21d051a268c07876671",
      "original_position" : 211,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148",
      "updated_at" : "2014-06-09T00:21:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12450933",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12454323"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12454323"
         }
      },
      "body" : "Good idea!",
      "commit_id" : "18e72167ddfeaea95253b62994c6d64b55b35005",
      "created_at" : "2014-05-08T21:39:30Z",
      "diff_hunk" : "@@ -2073,75 +2083,116 @@ void static FindMostWorkChain() {\n             }\n             pindexTest = pindexTest->pprev;\n         }\n-        if (fInvalidAncestor)\n-            continue;\n-\n-        break;\n+        if (!fInvalidAncestor)\n+            return pindexNew;\n     } while(true);\n-\n-    // Check whether it's actually an improvement.\n-    if (chainMostWork.Tip() && !CBlockIndexWorkComparator()(chainMostWork.Tip(), pindexNew))\n-        return;\n-\n-    // We have a new best.\n-    chainMostWork.SetTip(pindexNew);\n }\n \n-// Try to activate to the most-work chain (thereby connecting it).\n-bool ActivateBestChain(CValidationState &state) {\n-    LOCK(cs_main);\n+// Try to make some progress towards making pindexMostWork the active block.\n+static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork) {\n+    AssertLockHeld(cs_main);\n+    bool fInvalidFound = false;\n     CBlockIndex *pindexOldTip = chainActive.Tip();\n-    bool fComplete = false;\n-    while (!fComplete) {\n-        FindMostWorkChain();\n-        fComplete = true;\n+    CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n \n-        // Check whether we have something to do.\n-        if (chainMostWork.Tip() == NULL) break;\n+    // Disconnect active blocks which are no longer in the best chain.\n+    while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n+        if (!DisconnectTip(state))\n+            return false;\n+    }\n \n-        // Disconnect active blocks which are no longer in the best chain.\n-        while (chainActive.Tip() && !chainMostWork.Contains(chainActive.Tip())) {\n-            if (!DisconnectTip(state))\n-                return false;\n-        }\n+    // Build list of new blocks to connect.\n+    std::vector<CBlockIndex*> vpindexToConnect;\n+    vpindexToConnect.reserve(pindexMostWork->nHeight - (pindexFork ? pindexFork->nHeight : -1));\n+    while (pindexMostWork && pindexMostWork != pindexFork) {\n+        vpindexToConnect.push_back(pindexMostWork);\n+        pindexMostWork = pindexMostWork->pprev;\n+    }\n \n-        // Connect new blocks.\n-        while (!chainActive.Contains(chainMostWork.Tip())) {\n-            CBlockIndex *pindexConnect = chainMostWork[chainActive.Height() + 1];\n-            if (!ConnectTip(state, pindexConnect)) {\n-                if (state.IsInvalid()) {\n-                    // The block violates a consensus rule.\n-                    if (!state.CorruptionPossible())\n-                        InvalidChainFound(chainMostWork.Tip());\n-                    fComplete = false;\n-                    state = CValidationState();\n-                    break;\n-                } else {\n-                    // A system error occurred (disk space, database error, ...).\n-                    return false;\n-                }\n+    // Connect new blocks.\n+    BOOST_REVERSE_FOREACH(CBlockIndex *pindexConnect, vpindexToConnect) {\n+        if (!ConnectTip(state, pindexConnect)) {\n+            if (state.IsInvalid()) {\n+                // The block violates a consensus rule.\n+                if (!state.CorruptionPossible())\n+                    InvalidChainFound(vpindexToConnect.back());\n+                state = CValidationState();\n+                fInvalidFound = true;\n+                break;\n+            } else {\n+                // A system error occurred (disk space, database error, ...).\n+                return false;\n+            }\n+        } else {\n+            if (!pindexOldTip || chainActive.Tip()->nChainWork > pindexOldTip->nChainWork) {\n+                // We're in a better position than we were. Return temporarily to release the lock.\n+                break;\n             }\n         }\n     }\n \n-    if (chainActive.Tip() != pindexOldTip) {\n-        std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-        if (!IsInitialBlockDownload() && !strCmd.empty())\n+    // Callbacks/notifications for a new best chain.\n+    if (fInvalidFound)\n+        CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n+    else\n+        CheckForkWarningConditions();\n+\n+    if (!pblocktree->Flush())\n+        return state.Abort(_(\"Failed to sync block index\"));\n+\n+    return true;\n+}\n+\n+bool ActivateBestChain(CValidationState &state) {\n+    CBlockIndex *pindexNewTip = NULL;\n+    CBlockIndex *pindexMostWork = NULL;\n+    do {\n+        bool fInitialDownload;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12454323",
      "id" : 12454323,
      "original_commit_id" : "ed85993dc12e02f53f32a21d051a268c07876671",
      "original_position" : 211,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148",
      "updated_at" : "2014-06-09T00:21:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12454323",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Rebased and added an interruption point in ActivateBestChain, as suggested by @laanwj.",
      "created_at" : "2014-05-08T22:26:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-42614112",
      "id" : 42614112,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
      "updated_at" : "2014-05-08T22:26:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/42614112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "ACK on code changes\r\nAlso I've run with this patch for about a week now on my node. No problems.\r\n",
      "created_at" : "2014-05-19T13:22:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43501623",
      "id" : 43501623,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
      "updated_at" : "2014-05-19T13:22:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43501623",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I'm running this patch together with #2784, #4100 and #4177, and I'm seeing occasional segfaults. I believe this patch is the most likely cause, so I'll investigate first.",
      "created_at" : "2014-05-19T13:30:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43502932",
      "id" : 43502932,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
      "updated_at" : "2014-05-19T13:30:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43502932",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "initial review ACK (untested).\r\n\r\nI will try some lock-debug testing later this week.\r\n",
      "created_at" : "2014-05-19T13:46:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43505352",
      "id" : 43505352,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
      "updated_at" : "2014-05-19T13:47:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43505352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12808489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12808489"
         }
      },
      "body" : "Isn't chainActive here and a few lines below accessed without cs_main?",
      "commit_id" : "18e72167ddfeaea95253b62994c6d64b55b35005",
      "created_at" : "2014-05-19T18:24:45Z",
      "diff_hunk" : "@@ -2087,70 +2091,111 @@ void static FindMostWorkChain() {\n             }\n             pindexTest = pindexTest->pprev;\n         }\n-        if (fInvalidAncestor)\n-            continue;\n-\n-        break;\n+        if (!fInvalidAncestor)\n+            return pindexNew;\n     } while(true);\n-\n-    // Check whether it's actually an improvement.\n-    if (chainMostWork.Tip() && !CBlockIndexWorkComparator()(chainMostWork.Tip(), pindexNew))\n-        return;\n-\n-    // We have a new best.\n-    chainMostWork.SetTip(pindexNew);\n }\n \n-// Try to activate to the most-work chain (thereby connecting it).\n-bool ActivateBestChain(CValidationState &state) {\n-    LOCK(cs_main);\n+// Try to make some progress towards making pindexMostWork the active block.\n+static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork) {\n+    AssertLockHeld(cs_main);\n+    bool fInvalidFound = false;\n     CBlockIndex *pindexOldTip = chainActive.Tip();\n-    bool fComplete = false;\n-    while (!fComplete) {\n-        FindMostWorkChain();\n-        fComplete = true;\n+    CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n \n-        // Check whether we have something to do.\n-        if (chainMostWork.Tip() == NULL) break;\n+    // Disconnect active blocks which are no longer in the best chain.\n+    while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n+        if (!DisconnectTip(state))\n+            return false;\n+    }\n \n-        // Disconnect active blocks which are no longer in the best chain.\n-        while (chainActive.Tip() && !chainMostWork.Contains(chainActive.Tip())) {\n-            if (!DisconnectTip(state))\n-                return false;\n-        }\n+    // Build list of new blocks to connect.\n+    std::vector<CBlockIndex*> vpindexToConnect;\n+    vpindexToConnect.reserve(pindexMostWork->nHeight - (pindexFork ? pindexFork->nHeight : -1));\n+    while (pindexMostWork && pindexMostWork != pindexFork) {\n+        vpindexToConnect.push_back(pindexMostWork);\n+        pindexMostWork = pindexMostWork->pprev;\n+    }\n \n-        // Connect new blocks.\n-        while (!chainActive.Contains(chainMostWork.Tip())) {\n-            CBlockIndex *pindexConnect = chainMostWork[chainActive.Height() + 1];\n-            if (!ConnectTip(state, pindexConnect)) {\n-                if (state.IsInvalid()) {\n-                    // The block violates a consensus rule.\n-                    if (!state.CorruptionPossible())\n-                        InvalidChainFound(chainMostWork.Tip());\n-                    fComplete = false;\n-                    state = CValidationState();\n-                    break;\n-                } else {\n-                    // A system error occurred (disk space, database error, ...).\n-                    return false;\n-                }\n+    // Connect new blocks.\n+    BOOST_REVERSE_FOREACH(CBlockIndex *pindexConnect, vpindexToConnect) {\n+        if (!ConnectTip(state, pindexConnect)) {\n+            if (state.IsInvalid()) {\n+                // The block violates a consensus rule.\n+                if (!state.CorruptionPossible())\n+                    InvalidChainFound(vpindexToConnect.back());\n+                state = CValidationState();\n+                fInvalidFound = true;\n+                break;\n+            } else {\n+                // A system error occurred (disk space, database error, ...).\n+                return false;\n+            }\n+        } else {\n+            if (!pindexOldTip || chainActive.Tip()->nChainWork > pindexOldTip->nChainWork) {\n+                // We're in a better position than we were. Return temporarily to release the lock.\n+                break;\n             }\n         }\n     }\n \n-    if (chainActive.Tip() != pindexOldTip) {\n-        std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-        if (!IsInitialBlockDownload() && !strCmd.empty())\n+    // Callbacks/notifications for a new best chain.\n+    if (fInvalidFound)\n+        CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n+    else\n+        CheckForkWarningConditions();\n+\n+    if (!pblocktree->Flush())\n+        return state.Abort(_(\"Failed to sync block index\"));\n+\n+    return true;\n+}\n+\n+bool ActivateBestChain(CValidationState &state) {\n+    CBlockIndex *pindexNewTip = NULL;\n+    CBlockIndex *pindexMostWork = NULL;\n+    do {\n+        boost::this_thread::interruption_point();\n+\n+        bool fInitialDownload;\n         {\n-            boost::replace_all(strCmd, \"%s\", chainActive.Tip()->GetBlockHash().GetHex());\n-            boost::thread t(runCommand, strCmd); // thread runs free\n+            LOCK(cs_main);\n+            pindexMostWork = FindMostWorkChain();\n+\n+            // Whether we have anything to do at all.\n+            if (pindexMostWork == NULL || pindexMostWork == chainActive.Tip())\n+                return true;\n+\n+            if (!ActivateBestChainStep(state, pindexMostWork))\n+                return false;\n+\n+            pindexNewTip = chainActive.Tip();\n+            fInitialDownload = IsInitialBlockDownload();\n         }\n-    }\n+        // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n+\n+        // Notifications/callbacks that can run without cs_main\n+        if (!fInitialDownload) {\n+            uint256 hashNewTip = pindexNewTip->GetBlockHash();\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            int nBlockEstimate = Checkpoints::GetTotalBlocksEstimate();\n+            LOCK(cs_vNodes);\n+            BOOST_FOREACH(CNode* pnode, vNodes)\n+                if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12808489",
      "id" : 12808489,
      "original_commit_id" : "f6a6adcc433dceb89c7875e38ac649bd8e2875a1",
      "original_position" : 202,
      "path" : "src/main.cpp",
      "position" : 202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148",
      "updated_at" : "2014-06-09T00:21:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12808489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12945589"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12945589"
         }
      },
      "body" : "Nice catch. However, chainActive should never be modified anywhere but in the thread calling this method (the message handler), so it can't be the cause for the segfault i observed (perhaps #4204 fixed it, though). I'll fix it.",
      "commit_id" : "18e72167ddfeaea95253b62994c6d64b55b35005",
      "created_at" : "2014-05-22T11:37:16Z",
      "diff_hunk" : "@@ -2087,70 +2091,111 @@ void static FindMostWorkChain() {\n             }\n             pindexTest = pindexTest->pprev;\n         }\n-        if (fInvalidAncestor)\n-            continue;\n-\n-        break;\n+        if (!fInvalidAncestor)\n+            return pindexNew;\n     } while(true);\n-\n-    // Check whether it's actually an improvement.\n-    if (chainMostWork.Tip() && !CBlockIndexWorkComparator()(chainMostWork.Tip(), pindexNew))\n-        return;\n-\n-    // We have a new best.\n-    chainMostWork.SetTip(pindexNew);\n }\n \n-// Try to activate to the most-work chain (thereby connecting it).\n-bool ActivateBestChain(CValidationState &state) {\n-    LOCK(cs_main);\n+// Try to make some progress towards making pindexMostWork the active block.\n+static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork) {\n+    AssertLockHeld(cs_main);\n+    bool fInvalidFound = false;\n     CBlockIndex *pindexOldTip = chainActive.Tip();\n-    bool fComplete = false;\n-    while (!fComplete) {\n-        FindMostWorkChain();\n-        fComplete = true;\n+    CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n \n-        // Check whether we have something to do.\n-        if (chainMostWork.Tip() == NULL) break;\n+    // Disconnect active blocks which are no longer in the best chain.\n+    while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n+        if (!DisconnectTip(state))\n+            return false;\n+    }\n \n-        // Disconnect active blocks which are no longer in the best chain.\n-        while (chainActive.Tip() && !chainMostWork.Contains(chainActive.Tip())) {\n-            if (!DisconnectTip(state))\n-                return false;\n-        }\n+    // Build list of new blocks to connect.\n+    std::vector<CBlockIndex*> vpindexToConnect;\n+    vpindexToConnect.reserve(pindexMostWork->nHeight - (pindexFork ? pindexFork->nHeight : -1));\n+    while (pindexMostWork && pindexMostWork != pindexFork) {\n+        vpindexToConnect.push_back(pindexMostWork);\n+        pindexMostWork = pindexMostWork->pprev;\n+    }\n \n-        // Connect new blocks.\n-        while (!chainActive.Contains(chainMostWork.Tip())) {\n-            CBlockIndex *pindexConnect = chainMostWork[chainActive.Height() + 1];\n-            if (!ConnectTip(state, pindexConnect)) {\n-                if (state.IsInvalid()) {\n-                    // The block violates a consensus rule.\n-                    if (!state.CorruptionPossible())\n-                        InvalidChainFound(chainMostWork.Tip());\n-                    fComplete = false;\n-                    state = CValidationState();\n-                    break;\n-                } else {\n-                    // A system error occurred (disk space, database error, ...).\n-                    return false;\n-                }\n+    // Connect new blocks.\n+    BOOST_REVERSE_FOREACH(CBlockIndex *pindexConnect, vpindexToConnect) {\n+        if (!ConnectTip(state, pindexConnect)) {\n+            if (state.IsInvalid()) {\n+                // The block violates a consensus rule.\n+                if (!state.CorruptionPossible())\n+                    InvalidChainFound(vpindexToConnect.back());\n+                state = CValidationState();\n+                fInvalidFound = true;\n+                break;\n+            } else {\n+                // A system error occurred (disk space, database error, ...).\n+                return false;\n+            }\n+        } else {\n+            if (!pindexOldTip || chainActive.Tip()->nChainWork > pindexOldTip->nChainWork) {\n+                // We're in a better position than we were. Return temporarily to release the lock.\n+                break;\n             }\n         }\n     }\n \n-    if (chainActive.Tip() != pindexOldTip) {\n-        std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-        if (!IsInitialBlockDownload() && !strCmd.empty())\n+    // Callbacks/notifications for a new best chain.\n+    if (fInvalidFound)\n+        CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n+    else\n+        CheckForkWarningConditions();\n+\n+    if (!pblocktree->Flush())\n+        return state.Abort(_(\"Failed to sync block index\"));\n+\n+    return true;\n+}\n+\n+bool ActivateBestChain(CValidationState &state) {\n+    CBlockIndex *pindexNewTip = NULL;\n+    CBlockIndex *pindexMostWork = NULL;\n+    do {\n+        boost::this_thread::interruption_point();\n+\n+        bool fInitialDownload;\n         {\n-            boost::replace_all(strCmd, \"%s\", chainActive.Tip()->GetBlockHash().GetHex());\n-            boost::thread t(runCommand, strCmd); // thread runs free\n+            LOCK(cs_main);\n+            pindexMostWork = FindMostWorkChain();\n+\n+            // Whether we have anything to do at all.\n+            if (pindexMostWork == NULL || pindexMostWork == chainActive.Tip())\n+                return true;\n+\n+            if (!ActivateBestChainStep(state, pindexMostWork))\n+                return false;\n+\n+            pindexNewTip = chainActive.Tip();\n+            fInitialDownload = IsInitialBlockDownload();\n         }\n-    }\n+        // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n+\n+        // Notifications/callbacks that can run without cs_main\n+        if (!fInitialDownload) {\n+            uint256 hashNewTip = pindexNewTip->GetBlockHash();\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            int nBlockEstimate = Checkpoints::GetTotalBlocksEstimate();\n+            LOCK(cs_vNodes);\n+            BOOST_FOREACH(CNode* pnode, vNodes)\n+                if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r12945589",
      "id" : 12945589,
      "original_commit_id" : "f6a6adcc433dceb89c7875e38ac649bd8e2875a1",
      "original_position" : 202,
      "path" : "src/main.cpp",
      "position" : 202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148",
      "updated_at" : "2014-06-09T00:21:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/12945589",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@cozz Updated.",
      "created_at" : "2014-05-23T10:25:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43992875",
      "id" : 43992875,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
      "updated_at" : "2014-05-23T10:25:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43992875",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I haven't seen any segfaults anymore since running on top of #4204.",
      "created_at" : "2014-05-23T10:27:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43993067",
      "id" : 43993067,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
      "updated_at" : "2014-05-23T10:27:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43993067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I still haven't had any segfaults running with this.\r\n",
      "created_at" : "2014-05-23T10:52:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-43994725",
      "id" : 43994725,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
      "updated_at" : "2014-05-23T10:52:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/43994725",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/18e72167ddfeaea95253b62994c6d64b55b35005 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.",
      "created_at" : "2014-06-09T00:38:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-45453396",
      "id" : 45453396,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
      "updated_at" : "2014-06-09T00:38:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45453396",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=3",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "body" : "ACK",
      "created_at" : "2014-06-09T08:11:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#issuecomment-45469636",
      "id" : 45469636,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4148",
      "updated_at" : "2014-06-09T08:11:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45469636",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r14020535"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14020535"
         }
      },
      "body" : "Ahem! #3984 did this!",
      "commit_id" : "18e72167ddfeaea95253b62994c6d64b55b35005",
      "created_at" : "2014-06-20T13:59:23Z",
      "diff_hunk" : "@@ -2649,7 +2664,11 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n         mapOrphanBlocksByPrev.erase(hashPrev);\n     }\n \n-    LogPrintf(\"ProcessBlock: ACCEPTED\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4148#discussion_r14020535",
      "id" : 14020535,
      "original_commit_id" : "18e72167ddfeaea95253b62994c6d64b55b35005",
      "original_position" : 291,
      "path" : "src/main.cpp",
      "position" : 291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4148",
      "updated_at" : "2014-06-20T13:59:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14020535",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   }
]
