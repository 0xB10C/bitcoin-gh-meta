[
   {
      "body" : "Bravo.\r\n",
      "created_at" : "2015-02-27T02:14:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76318654",
      "id" : 76318654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T02:14:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76318654",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/264977?v=3",
         "events_url" : "https://api.github.com/users/joelklabo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/joelklabo/followers",
         "following_url" : "https://api.github.com/users/joelklabo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/joelklabo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/joelklabo",
         "id" : 264977,
         "login" : "joelklabo",
         "organizations_url" : "https://api.github.com/users/joelklabo/orgs",
         "received_events_url" : "https://api.github.com/users/joelklabo/received_events",
         "repos_url" : "https://api.github.com/users/joelklabo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/joelklabo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/joelklabo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/joelklabo"
      }
   },
   {
      "body" : "My recollection was that the prior code was at the level it was at to avoid a DOS attack where you have a transaction with 1000 valid signatures, and one invalid one that you repeat over and over again?\r\n\r\nIs the thinking that the DoS stuff is now adequate to protect against that?\r\n\r\nAny idea from profiling where all that time is going, absent the cache?",
      "created_at" : "2015-02-27T02:14:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76318668",
      "id" : 76318668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T02:16:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76318668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell : From an email I sent to Sergio earlier today to see if he can think of an attack from getting rid of the low-level signature cache:\r\n\r\nIt is easy for an attacker to force a CHECKSIG cache miss; they can just use CODESEPARATOR (at the cost of an extra byte in whatever Script they're using to try to CPU DoS).\r\n\r\nFree-floating p2sh transactions are limited to 15 sigops by AreInputsStandard(), so an attacker can't CPU exhaust the transaction validation code.\r\n\r\nThere is an economic disincentive for attackers to create valid-POW but very-expensive-to-validate blocks (those blocks will propagate very slowly), and, again, the sigops-per-block limit will also mitigate possible attacks.\r\n",
      "created_at" : "2015-02-27T02:17:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76318896",
      "id" : 76318896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T02:17:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76318896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "WRT POW, I was worrying about the lose transaction case, not attacks in blocks.   The attack is the attacker has 1000 valid signatures, 1 invalid signature; the time is wasted on the valid signatures; the invalid is just there to avoid paying fees.  I don't see a way to cheaply invalidate the cache on the valid signatures.\r\n\r\nThe P2SH limit is per signature, I'm pretty sure you can get1000 checksigs in an IsStandard transaction, you'd just use 66 inputs with 15 checksigs each. With unusual script pubkeys (op_dup-ing the signatures) such a transaction would only be under15kb I'd guess.\r\n\r\n[I think at worst this might just mean having a reason to keep a plain signature cache around. (Also) caching at a higher level makes sense if it saves that much time; though I'm surprised at that!]",
      "created_at" : "2015-02-27T02:25:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76319604",
      "id" : 76319604,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T02:27:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76319604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "The 1,000-valid-plus-one-invalid attack will get the attacker DoS-banned for sending an invalid transaction.\r\n\r\nThey would have to Sybil and reconnect to get around that with either the old or new code; with the old code, they would have to pre-generate more valid signatures than the size of the signature cache AND Sybil to succeed in wasting CPU time. You're right, the new code makes the attack slightly easier.\r\n\r\nBut I think getting rid of the low-level cache is the right thing to do just because of the memory savings.\r\n",
      "created_at" : "2015-02-27T02:43:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76321205",
      "id" : 76321205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T02:43:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76321205",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "Hm. So the caching isn't parametrized by the state of CCoinsview cache and validity can be conditional on it, but it's not clear to me that it matters.\r\n\r\nWhat happens with this sequence of events?\r\n\r\nMempool contains transaction B that spends input X.\r\nBlock contains transactions A, B.   Both A and B spend X.   A wasn't in the mempool and will be a cache miss.  B is in the mempool, cached with inputs.HaveInputs(tx) passing.  But it should not pass in the context of a block containing tx A.   This would result in accepting blocks containing double spend pairs where half is in the mempool; but I believe it's currently prevented by a redundant test in ConnectBlock.\r\n\r\nIt would be good to have a test there, I could see this invariant being broken very easily.\r\n",
      "created_at" : "2015-02-27T03:48:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76326232",
      "id" : 76326232,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T03:48:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76326232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "It appears that most of the performance comes from avoiding the /seemingly/ redundant interrogation of the CCoinsViewCache in CheckInputs:\r\n\r\n```\r\ndiff --git a/src/main.cpp b/src/main.cpp\r\nindex b6a61f7..6590b98 100644\r\n--- a/src/main.cpp\r\n+++ b/src/main.cpp\r\n@@ -1436,11 +1436,6 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\r\n         if (pvChecks)\r\n             pvChecks->reserve(tx.vin.size());\r\n \r\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\r\n-        // for an attacker to attempt to split the network.\r\n-        if (!inputs.HaveInputs(tx))\r\n-            return state.Invalid(error(\"CheckInputs(): %s inputs unavailable\", tx.GetHash().ToString()));\r\n-\r\n         // While checking, GetBestBlock() refers to the parent block.\r\n         // This is also true for mempool checks.\r\n         CBlockIndex *pindexPrev = mapBlockIndex.find(inputs.GetBestBlock())->second;\r\n```\r\nResults in going from \"Verify 1730 txins: 187.01ms (0.108ms/txin)\" to \"Verify 1730 txins: 13.29ms (0.008ms/txin)\"\r\n\r\nI've not yet convinced myself that its actually redundant, but if it is, it's good to take it out since it wastes time on mempool acceptance too (where it also appears to be behind an existing HaveInputs test).",
      "created_at" : "2015-02-27T09:08:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76359741",
      "id" : 76359741,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T09:09:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76359741",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Good job Gavin, this will help people complaining about the scalability of Bitcoin a bit. Every optimization bring down either the accessibility of running of full node or the scalability of whole system.",
      "created_at" : "2015-02-27T11:11:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76378312",
      "id" : 76378312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T11:11:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76378312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3308951?v=3",
         "events_url" : "https://api.github.com/users/zyo2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/zyo2012/followers",
         "following_url" : "https://api.github.com/users/zyo2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/zyo2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/zyo2012",
         "id" : 3308951,
         "login" : "zyo2012",
         "organizations_url" : "https://api.github.com/users/zyo2012/orgs",
         "received_events_url" : "https://api.github.com/users/zyo2012/received_events",
         "repos_url" : "https://api.github.com/users/zyo2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/zyo2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/zyo2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/zyo2012"
      }
   }
]
