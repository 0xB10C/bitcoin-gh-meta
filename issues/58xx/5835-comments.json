[
   {
      "body" : "Bravo.\r\n",
      "created_at" : "2015-02-27T02:14:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76318654",
      "id" : 76318654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T02:14:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76318654",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/264977?v=3",
         "events_url" : "https://api.github.com/users/joelklabo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/joelklabo/followers",
         "following_url" : "https://api.github.com/users/joelklabo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/joelklabo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/joelklabo",
         "id" : 264977,
         "login" : "joelklabo",
         "organizations_url" : "https://api.github.com/users/joelklabo/orgs",
         "received_events_url" : "https://api.github.com/users/joelklabo/received_events",
         "repos_url" : "https://api.github.com/users/joelklabo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/joelklabo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/joelklabo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/joelklabo"
      }
   },
   {
      "body" : "My recollection was that the prior code was at the level it was at to avoid a DOS attack where you have a transaction with 1000 valid signatures, and one invalid one that you repeat over and over again?\r\n\r\nIs the thinking that the DoS stuff is now adequate to protect against that?\r\n\r\nAny idea from profiling where all that time is going, absent the cache?",
      "created_at" : "2015-02-27T02:14:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76318668",
      "id" : 76318668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T02:16:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76318668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@gmaxwell : From an email I sent to Sergio earlier today to see if he can think of an attack from getting rid of the low-level signature cache:\r\n\r\nIt is easy for an attacker to force a CHECKSIG cache miss; they can just use CODESEPARATOR (at the cost of an extra byte in whatever Script they're using to try to CPU DoS).\r\n\r\nFree-floating p2sh transactions are limited to 15 sigops by AreInputsStandard(), so an attacker can't CPU exhaust the transaction validation code.\r\n\r\nThere is an economic disincentive for attackers to create valid-POW but very-expensive-to-validate blocks (those blocks will propagate very slowly), and, again, the sigops-per-block limit will also mitigate possible attacks.\r\n",
      "created_at" : "2015-02-27T02:17:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76318896",
      "id" : 76318896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T02:17:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76318896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "WRT POW, I was worrying about the lose transaction case, not attacks in blocks.   The attack is the attacker has 1000 valid signatures, 1 invalid signature; the time is wasted on the valid signatures; the invalid is just there to avoid paying fees.  I don't see a way to cheaply invalidate the cache on the valid signatures.\r\n\r\nThe P2SH limit is per signature, I'm pretty sure you can get1000 checksigs in an IsStandard transaction, you'd just use 66 inputs with 15 checksigs each. With unusual script pubkeys (op_dup-ing the signatures) such a transaction would only be under15kb I'd guess.\r\n\r\n[I think at worst this might just mean having a reason to keep a plain signature cache around. (Also) caching at a higher level makes sense if it saves that much time; though I'm surprised at that!]",
      "created_at" : "2015-02-27T02:25:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76319604",
      "id" : 76319604,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T02:27:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76319604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "The 1,000-valid-plus-one-invalid attack will get the attacker DoS-banned for sending an invalid transaction.\r\n\r\nThey would have to Sybil and reconnect to get around that with either the old or new code; with the old code, they would have to pre-generate more valid signatures than the size of the signature cache AND Sybil to succeed in wasting CPU time. You're right, the new code makes the attack slightly easier.\r\n\r\nBut I think getting rid of the low-level cache is the right thing to do just because of the memory savings.\r\n",
      "created_at" : "2015-02-27T02:43:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76321205",
      "id" : 76321205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T02:43:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76321205",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "Hm. So the caching isn't parametrized by the state of CCoinsview cache and validity can be conditional on it, but it's not clear to me that it matters.\r\n\r\nWhat happens with this sequence of events?\r\n\r\nMempool contains transaction B that spends input X.\r\nBlock contains transactions A, B.   Both A and B spend X.   A wasn't in the mempool and will be a cache miss.  B is in the mempool, cached with inputs.HaveInputs(tx) passing.  But it should not pass in the context of a block containing tx A.   This would result in accepting blocks containing double spend pairs where half is in the mempool; but I believe it's currently prevented by a redundant test in ConnectBlock.\r\n\r\nIt would be good to have a test there, I could see this invariant being broken very easily.\r\n",
      "created_at" : "2015-02-27T03:48:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76326232",
      "id" : 76326232,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T03:48:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76326232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "It appears that most of the performance comes from avoiding the /seemingly/ redundant interrogation of the CCoinsViewCache in CheckInputs:\r\n\r\n```\r\ndiff --git a/src/main.cpp b/src/main.cpp\r\nindex b6a61f7..6590b98 100644\r\n--- a/src/main.cpp\r\n+++ b/src/main.cpp\r\n@@ -1436,11 +1436,6 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\r\n         if (pvChecks)\r\n             pvChecks->reserve(tx.vin.size());\r\n \r\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\r\n-        // for an attacker to attempt to split the network.\r\n-        if (!inputs.HaveInputs(tx))\r\n-            return state.Invalid(error(\"CheckInputs(): %s inputs unavailable\", tx.GetHash().ToString()));\r\n-\r\n         // While checking, GetBestBlock() refers to the parent block.\r\n         // This is also true for mempool checks.\r\n         CBlockIndex *pindexPrev = mapBlockIndex.find(inputs.GetBestBlock())->second;\r\n```\r\nResults in going from \"Verify 1730 txins: 187.01ms (0.108ms/txin)\" to \"Verify 1730 txins: 13.29ms (0.008ms/txin)\"\r\n\r\nI've not yet convinced myself that its actually redundant, but if it is, it's good to take it out since it wastes time on mempool acceptance too (where it also appears to be behind an existing HaveInputs test).",
      "created_at" : "2015-02-27T09:08:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76359741",
      "id" : 76359741,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T09:09:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76359741",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Good job Gavin, this will help people complaining about the scalability of Bitcoin a bit. Every optimization bring down either the accessibility of running of full node or the scalability of whole system.",
      "created_at" : "2015-02-27T11:11:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76378312",
      "id" : 76378312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T11:11:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76378312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3308951?v=3",
         "events_url" : "https://api.github.com/users/zyo2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/zyo2012/followers",
         "following_url" : "https://api.github.com/users/zyo2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/zyo2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/zyo2012",
         "id" : 3308951,
         "login" : "zyo2012",
         "organizations_url" : "https://api.github.com/users/zyo2012/orgs",
         "received_events_url" : "https://api.github.com/users/zyo2012/received_events",
         "repos_url" : "https://api.github.com/users/zyo2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/zyo2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/zyo2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/zyo2012"
      }
   },
   {
      "body" : "@gmaxwell: I agree, a unit and/or regression test for one-double-spend-in-mempool, two-in-a-block is a very good idea.\r\n\r\nRE: removing possibly redundant HaveInputs() :  should be a separate pull request. Thanks for reviewing and looking deeper!\r\n",
      "created_at" : "2015-02-27T13:10:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76391876",
      "id" : 76391876,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T13:10:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76391876",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "I realized this morning memory savings is even better than I thought: it is an extra 4 bytes per transaction in the mempool (not 32 bytes, I was either thinking of sizeof(txid) or confusing 32-bit-integer with 32-bytes).\r\n",
      "created_at" : "2015-02-27T13:14:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76392310",
      "id" : 76392310,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T13:14:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76392310",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "hah. I read it as bits to begin with (and was very confused by your most recent comment.",
      "created_at" : "2015-02-27T13:24:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76393523",
      "id" : 76393523,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T13:24:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76393523",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I responded to Gavin, but now that I see this thread, I copy parts here:\r\n\r\nThe sigcache was added for security reasons and, as a by-product, it increases performance.\r\n\r\nWith a TxId cache you can achieve the performance part, but not the security protection.\r\n\r\nThe problem is described here https://bitcointalk.org/index.php?topic=136422.0 and only affects transactions during free forwarding (not in blocks).\r\n\r\nTo summarize the attack, the idea is that the attacker can send transactions that cost very little to create (can even reuse signatures with SIGHASH_ANYONECANPAY) and fail to verify after a lot of CPU has been wasted, but still the victim peer does not increase the DoS score of the attacker.  For example, re-using 999 good inputs, but failing in the 1000th one. \r\n\r\nThe attacker can prevent DoS score to be increased because, there are two cases where it's not:\r\n- If an input refers to a immature coinbase (even if it's not owned by the attacker)\r\n- If an input has a not standard signature encoding.\r\n\r\nSo removing the sigcache has consequences.\r\n\r\nRegarding performance, take into account that each signature is verified twice in AcceptToMemoryPool(), one with standard flags and another with mandatory flags (for extra security), so if you take out sigcache, then you double signature verification time.\r\n\r\nSeveral solutions are possible:\r\n\r\n1. Add a second level of cache for TxId's and get an additional speedup. This is probably the simplest and best.\r\n\r\n2. Change VerifyInputs() so that it always increases the DoS score on a bad input, but the code explicitly states in one part:\r\n   \" Check whether the failure was caused by a non-mandatory script verification check ...; if so, don't trigger DoS protection to avoid splitting the network between upgraded and non-upgraded nodes. \"\r\n\r\nso you will be breaking this protection.\r\n\r\n3. Add a DoS check that accumulates the amount of CPU wasted by a peer  (e.g. processing good inputs before a bad input) and increase the DoS score if the waste is over a threshold. Node resource encapsulation likes this is something Mike Hearn and I had pushed in the past, and I think M.H. is crowdfounding money for that purpose in his lighthouse project.\r\n\r\nObviously the best is just adding a second level of cache of TxIds, without changing anything security-related. The cache also should cache the block number where the txId can be included, if the transaction uses locktime (if it's not re-verified, of course).",
      "created_at" : "2015-02-27T14:32:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76402802",
      "id" : 76402802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T14:36:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76402802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1752347?v=3",
         "events_url" : "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
         "followers_url" : "https://api.github.com/users/SergioDemianLerner/followers",
         "following_url" : "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
         "gists_url" : "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/SergioDemianLerner",
         "id" : 1752347,
         "login" : "SergioDemianLerner",
         "organizations_url" : "https://api.github.com/users/SergioDemianLerner/orgs",
         "received_events_url" : "https://api.github.com/users/SergioDemianLerner/received_events",
         "repos_url" : "https://api.github.com/users/SergioDemianLerner/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/SergioDemianLerner/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/SergioDemianLerner"
      }
   },
   {
      "body" : "Gavin, were you able to test the effect of this change on overall runtime?  Sergio's observation that signatures are checked twice on entry to the mempool seems like it could plausibly make things slower to take out the signature cache, and I've noticed in my initial testing that when I play back historical data through a node running this pull's code, I am seeing a substantial (nearly 2x) slowdown, although ConnectBlock is about 20% faster.",
      "created_at" : "2015-02-27T14:47:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76405239",
      "id" : 76405239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T14:47:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76405239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "@sdaftuar: thanks for testing!  I'll revert the low-level signature cache removal; it will, indeed, speed up initial download and accept-to-mempool.\r\n\r\nIf this pull is accepted there should be a separate follow-up pull request to make the default signature cache much smaller to save memory; it should only need to be as large as one transaction's worth of signatures, if we're not relying on it to optimize block validation time.",
      "created_at" : "2015-02-27T15:29:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76412185",
      "id" : 76412185,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T16:12:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76412185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "I ran this overnight with -debug=bench to get a sense of how good the assumption of \"blocks contain mostly transactions that are already in our memory pool\" is, and it turns out that is a very good assumption.\r\n\r\nThe last 11 blocks had ALL transactions except the coinbase already in the mempool. The twelfth had 161 of 170 in the memory pool, and I have to go back another 11 blocks to find one that wasn't all cache hits (it had 3 transactions not in my mempool).",
      "created_at" : "2015-02-27T16:19:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76421414",
      "id" : 76421414,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T16:19:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76421414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "Rebased to keep the old signature cache code.\r\n\r\n@SergioDemianLerner : RE locktime transactions: The memory pool does do the right thing with lockTime transactions (a bugfix went into 0.10.0 for that, if I remember correctly).  But even if it didn't, AcceptBlock calls ContextualCheckBlock which makes sure all transactions in the block are final, and  those checks are always done for new blocks.",
      "created_at" : "2015-02-27T16:37:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76424908",
      "id" : 76424908,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-27T16:37:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76424908",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=3",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "body" : "Related #5163: Upon cursory review, still an outstanding optimization.",
      "created_at" : "2015-02-28T00:03:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76495878",
      "id" : 76495878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-28T00:03:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76495878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8286077?v=3",
         "events_url" : "https://api.github.com/users/21E14/events{/privacy}",
         "followers_url" : "https://api.github.com/users/21E14/followers",
         "following_url" : "https://api.github.com/users/21E14/following{/other_user}",
         "gists_url" : "https://api.github.com/users/21E14/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/21E14",
         "id" : 8286077,
         "login" : "21E14",
         "organizations_url" : "https://api.github.com/users/21E14/orgs",
         "received_events_url" : "https://api.github.com/users/21E14/received_events",
         "repos_url" : "https://api.github.com/users/21E14/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/21E14/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/21E14/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/21E14"
      }
   },
   {
      "body" : "@gavinandresen I've been running a version of this code overnight, and I'm curious if your results are similar to mine -- I'm typically seeing Verify times above 15 microseconds per txin, eg:\r\n```\r\n2015-02-28 02:41:57     - Verify 2671 txins: 39.67ms (0.015ms/txin) [443.41s]\r\n```\r\nwhich is an improvement, but still an order of magnitude slower than what you originally posted (1 microsecond/txin), so just want to confirm if my observations are consistent with yours?\r\n\r\nFor reference, my 10 fastest verify times out of the last 50 blocks (reported in milliseconds per txin) are:\r\n\r\n```\r\n0.009\r\n0.011\r\n0.015\r\n0.016\r\n0.016\r\n0.017\r\n0.017\r\n0.017\r\n0.018\r\n0.018\r\n```\r\n(I manually checked, and all but one of those times correspond to blocks with no cache misses; one of those 0.017ms/txin blocks had 1 cache miss.)\r\n\r\n@gmaxwell I'm puzzled by your comment earlier about the substantial gains from commenting out the duplicate HaveInputs call in CheckInputs -- I don't see how that could result in the speedups you mentioned, because the Verify time still includes one call to HaveInputs for every transaction in the block.  So it seems like it shouldn't be possible to get more than a factor of 2 speedup if the only change were to remove the second call, unless I'm missing something?",
      "created_at" : "2015-02-28T11:33:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5835#issuecomment-76522448",
      "id" : 76522448,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5835",
      "updated_at" : "2015-02-28T11:33:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/76522448",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
