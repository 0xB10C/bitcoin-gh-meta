[
   {
      "body" : "Code review ACK, will test.",
      "created_at" : "2016-05-05T17:37:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-217220702",
      "id" : 217220702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7997",
      "updated_at" : "2016-05-05T17:37:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/217220702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "> [This object bimodality is necessary because lookup on a set requires\r\nconstructing an object of the set's key type, an inconvenience corrected in\r\nC++14.]\r\n\r\nI thought we were only at C++11?  Or are you suggesting this is something else that would be corrected by moving to C++14?",
      "created_at" : "2016-05-06T02:51:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-217336579",
      "id" : 217336579,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7997",
      "updated_at" : "2016-05-06T02:52:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/217336579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "I'm just blaming C++<=11 for my tagged union. When we eventually switch to C++14 there's a much cleaner solution that doesn't require putting two things that should be different types in the same class.",
      "created_at" : "2016-05-06T03:36:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7997#issuecomment-217340659",
      "id" : 217340659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7997",
      "updated_at" : "2016-05-06T03:36:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/217340659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1047859?v=3",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7997#discussion_r62286760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7997"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/62286760"
         }
      },
      "body" : "`noexcept`, then a `throw`\r\n\r\nDid I misunderstand the meaning of this qualifier?",
      "commit_id" : "26427666fd17c32a8f5bba0a67e7d896608d90e1",
      "created_at" : "2016-05-06T04:05:54Z",
      "diff_hunk" : "@@ -306,17 +307,41 @@ struct ancestor_score {};\n class CBlockPolicyEstimator;\n \n /** An inpoint - a combination of a transaction and an index n into its vin */\n-class CInPoint\n+struct CInPoint\n {\n+    const CTransaction *const ptx;\n+    const uint32_t n;\n+    constexpr size_t DynamicMemoryUsage() const noexcept { return 0; }\n+    const COutPoint& GetOutPoint() const noexcept { return ptx->vin[n].prevout; }\n+};\n+\n+/* reference to a COutPoint that is either \"free\" or inside a CTransaction spending it\n+ *\n+ * must not outlive the COutPoint\n+ */\n+class CSpendRef\n+{\n+private:\n+    union {\n+    const COutPoint *const spent;\n+    const CTransaction *const spender;\n+    };\n+    const uint32_t n;\n+    const bool haveSpender;\n public:\n-    const CTransaction* ptx;\n-    uint32_t n;\n-\n-    CInPoint() { SetNull(); }\n-    CInPoint(const CTransaction* ptxIn, uint32_t nIn) { ptx = ptxIn; n = nIn; }\n-    void SetNull() { ptx = NULL; n = (uint32_t) -1; }\n-    bool IsNull() const { return (ptx == NULL && n == (uint32_t) -1); }\n-    size_t DynamicMemoryUsage() const { return 0; }\n+    /* COutPoint in a spending CTransaction */\n+    constexpr CSpendRef(const CInPoint& inpoint) noexcept : spender(inpoint.ptx), n(inpoint.n), haveSpender(true) {}\n+    /* \"free\" COutPoint */\n+    constexpr CSpendRef(const COutPoint& outpoint) noexcept : spent(&outpoint), n(0), haveSpender(false) {}\n+    const COutPoint& GetOutPoint() const noexcept {\n+        return haveSpender ? GetInPoint().GetOutPoint() : *spent;\n+    }\n+    constexpr CInPoint GetInPoint() const noexcept {\n+        return haveSpender ? CInPoint{ spender, n } : throw std::logic_error(\"!haveSpender in CSpendRef::GetInPoint()\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7997#discussion_r62286760",
      "id" : 62286760,
      "original_commit_id" : "26427666fd17c32a8f5bba0a67e7d896608d90e1",
      "original_position" : 51,
      "path" : "src/txmempool.h",
      "position" : 51,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7997",
      "updated_at" : "2016-05-06T04:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/62286760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   }
]
