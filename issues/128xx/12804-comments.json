[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12804#discussion_r177723388"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177723388"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does it make sense to add a `time.sleep()` before `getpeerinfo()` so that the two calls might have a better chance of being in sync?\r\n\r\nI am also curious if you have been able to reproduce locally; I have not. I assume this changes the likelihood of failure significantly lower, but I am curious if in the case where the first try fails, might the second also be likely to fail for whatever reason. ",
      "commit_id" : "b7e2619eeaef579e048eab705ddad18041d4ceb8",
      "created_at" : "2018-03-28T11:54:56Z",
      "diff_hunk" : "@@ -33,15 +33,25 @@ def _test_connection_count(self):\n         assert_equal(self.nodes[0].getconnectioncount(), 2)\n \n     def _test_getnettotals(self):\n-        # check that getnettotals totalbytesrecv and totalbytessent\n-        # are consistent with getpeerinfo\n-        peer_info = self.nodes[0].getpeerinfo()\n-        assert_equal(len(peer_info), 2)\n-        net_totals = self.nodes[0].getnettotals()\n-        assert_equal(sum([peer['bytesrecv'] for peer in peer_info]),\n-                     net_totals['totalbytesrecv'])\n-        assert_equal(sum([peer['bytessent'] for peer in peer_info]),\n-                     net_totals['totalbytessent'])\n+        # Check that getnettotals totalbytesrecv and totalbytessent\n+        # are consistent with getpeerinfo. Since the RPC calls are\n+        # not atomic, this may fail. Try up to 3 times.\n+        for i in range(3):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12804#discussion_r177723388",
      "id" : 177723388,
      "original_commit_id" : "b7e2619eeaef579e048eab705ddad18041d4ceb8",
      "original_position" : 16,
      "path" : "test/functional/rpc_net.py",
      "position" : 16,
      "pull_request_review_id" : 107645667,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12804",
      "updated_at" : "2018-03-28T11:54:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177723388",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14220652?v=4",
         "events_url" : "https://api.github.com/users/conscott/events{/privacy}",
         "followers_url" : "https://api.github.com/users/conscott/followers",
         "following_url" : "https://api.github.com/users/conscott/following{/other_user}",
         "gists_url" : "https://api.github.com/users/conscott/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/conscott",
         "id" : 14220652,
         "login" : "conscott",
         "organizations_url" : "https://api.github.com/users/conscott/orgs",
         "received_events_url" : "https://api.github.com/users/conscott/received_events",
         "repos_url" : "https://api.github.com/users/conscott/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/conscott/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/conscott/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/conscott"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ok. I've thought about this some more, and changed the approach. Rather than trying three times and hoping that there'll be equality at some point, I'm now calling `getnettotals` before and after `getpeerinfo` and asserting that the info returned by `getpeerinfo` is bounded above and below by the totals in `getnettotals`. I've also changed some equality tests below to inequality tests, for the same reason - that there may be unexpected network traffic between the two calls.\r\n\r\nWe can't guarantee that there won't be network traffic between two separate RPC calls, so we shouldn't be testing for that.\r\n",
      "created_at" : "2018-03-28T19:40:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12804#issuecomment-377010689",
      "id" : 377010689,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12804",
      "updated_at" : "2018-03-28T19:40:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377010689",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I like the second approach much better than the 3 attempts, utACK https://github.com/bitcoin/bitcoin/pull/12804/commits/5a67c0524e5dc98d0e387f189545bc99863916d4",
      "created_at" : "2018-03-28T21:13:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12804#issuecomment-377038622",
      "id" : 377038622,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12804",
      "updated_at" : "2018-03-28T21:13:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377038622",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   }
]
