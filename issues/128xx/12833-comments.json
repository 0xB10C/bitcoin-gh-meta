[
   {
      "author_association" : "OWNER",
      "body" : "Please, never write to `bitcoin.conf`. It is exceptionally bad form for a daemon to write to its configuration file. If you want to do this, I'd suggest adding an additional file (in the datadir) for read/write settings (as @luke-jr did AFAIK).",
      "created_at" : "2018-03-29T20:25:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-377361599",
      "id" : 377361599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "updated_at" : "2018-03-29T20:27:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377361599",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj two files is indeed what @luke-jr did, but I don't see how that changes anything. It's critical that `bitcoind` uses this second file (for settings like `prune`) and treats it the same as `bitcoin.conf`. So by the same reasoning it shouldn't write to that second file.\r\n\r\nAlso note that only QT needs this ability, so I could refactor it such that `bitcoind` daemon only has read-only access.\r\n\r\nI thought of a completely different approach to handle the `prune` case, so we might be able to kick this shared settings can down the road. Will open a PR for later.",
      "created_at" : "2018-03-30T08:49:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-377480638",
      "id" : 377480638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "updated_at" : "2018-03-30T08:51:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377480638",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> @laanwj two files is indeed what @luke-jr did, but I don't see how that changes anything. \r\n\r\nOne thing is permissions. The data directory is guaranteed writable. The configuration file might be `-conf=/etc/bitcoind.conf`.\r\n\r\n> Also note that only QT needs this ability, so I could refactor it such that bitcoind daemon only has read-only access.\r\n\r\nUnlike QSettings the second file would be used by both the GUI and the daemon. \r\n\r\nAnd it might be useful to edit settings in bitcoind at real-time as well. The GUI shouldn't really be special there, that gets in the way of the whole idea of unifying the settings mechanism.",
      "created_at" : "2018-03-30T10:24:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-377497057",
      "id" : 377497057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "updated_at" : "2018-03-30T10:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377497057",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If `bitcoin.conf` is not writeable, because the user configured a custom read-only directory, the UI elements that change settings this way could be disabled.\r\n\r\n> And it might be useful to edit settings in bitcoind at real-time as well.\r\n\r\nIndeed.\r\n\r\nI thought having two separate files leads to a more complicated implementation than just having one, but I didn't remove that much from the original code so far. It helps that settings can be overridden by repeating them in the new file.\r\n\r\nSo in that case it might more sense to get #11082 merged, in which case this PR just adds QSettings migration code on top of that.",
      "created_at" : "2018-03-30T15:03:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-377543863",
      "id" : 377543863,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "updated_at" : "2018-03-30T15:03:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377543863",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I pushed a new version that uses `bitcoin_rw.conf`. I could probably add some helper functions to make the change more compact.",
      "created_at" : "2018-04-03T16:08:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-378305050",
      "id" : 378305050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "updated_at" : "2018-04-03T16:08:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378305050",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not sure if moving the QT settings from pure QT format in the QT chosen file to the bitcoind compatible `bitcoin_rw.conf` format reduces the complexity. Configuration file complexity can be harmful (-datadir, eventually once config files per network, includes, etc.).\r\n\r\nI also think we could expose prune to the QT layer without sharing the configuration value with bitcoind.\r\n\r\nUsers using bitcoind & QT with the same settings and datadir do probably know the ramification of GUI only settings. A warning when enabling prune in QT (once implemented) that it will not automatically be enabled in daemon mode seems sufficient to me.",
      "created_at" : "2018-04-04T12:24:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-378581605",
      "id" : 378581605,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "updated_at" : "2018-04-04T12:24:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378581605",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonasschnelli in addition to a warning, we can even make `bitcoind` actually handle QT's `prune` elegantly, see my suggestion [here](https://github.com/bitcoin/bitcoin/issues/6461#issuecomment-377485323).\r\n\r\nFor settings other than prune there might be similar workarounds on a case by case basis (other than warning).",
      "created_at" : "2018-04-04T13:06:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-378592828",
      "id" : 378592828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "updated_at" : "2018-04-04T13:06:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378592828",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This and #11082 need a likely non-trivial rebase after #11862. I'm going to try the other approach first though.",
      "created_at" : "2018-04-17T15:03:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-382026069",
      "id" : 382026069,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "updated_at" : "2018-04-17T15:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382026069",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "#11862 has been merged. I'll rebase this once #11082 is rebased.\r\n\r\nQT doesn't have any concept (yet) of network specific configuration though.",
      "created_at" : "2018-05-15T11:09:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-389129420",
      "id" : 389129420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "updated_at" : "2018-05-15T11:12:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389129420",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I like this approach. I think it'd be a simplification to stop using the windows registry and other config backends in `bitcoin-qt`. And it seems like it would be less surprising and error prone if `bitcoin-qt`  and `bitcoind` used the same settings, instead of slightly different but overlapping sources of settings like they do now, so I don't get the objection in https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-378581605.\r\n\r\nOne thing I don't understand about the implementation though is why the \"Active command-line options that override above options\" display is removed. Will command line settings not override config file settings anymore with this change? I think it would be bad if that were the case.",
      "created_at" : "2018-10-06T02:05:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-427538007",
      "id" : 427538007,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNzUzODAwNw==",
      "updated_at" : "2018-10-06T02:05:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/427538007",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky wrote:\r\n> Will command line settings not override config file settings anymore with this change?\r\n\r\nThey will. The phrase \"active command-line options\" actually referred to both `bitcoin.conf` and command line options, either of which can override QT settings, as well as each other.\r\n\r\nAfaik QT can't tell the difference between settings that came from bitcoin.conf and those that came from a command line option, which is why I removed that text. It's also pretty difficult in practice to launch QT with command line options, involving editing desktop shortcuts etc.",
      "created_at" : "2018-10-09T01:46:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-428032410",
      "id" : 428032410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyODAzMjQxMA==",
      "updated_at" : "2018-10-09T01:46:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428032410",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and added pruning to the list of imported settings.\r\n\r\nI changed the meaning of _disabling_ prune in the GUI to mean _stop further pruning_, instead _undo previous pruning_. It just sets `prune=1`, which avoids forcing the user to re-download the chain. We could later add a button to re-download the whole chain.",
      "created_at" : "2018-11-10T12:11:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-437579643",
      "id" : 437579643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzU3OTY0Mw==",
      "updated_at" : "2018-11-10T12:11:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437579643",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485868"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232485868"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"Occurred\" :-)",
      "commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "created_at" : "2018-11-11T12:23:58Z",
      "diff_hunk" : "@@ -420,32 +397,55 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             Q_EMIT coinControlFeaturesChanged(fCoinControlFeatures);\n             break;\n         case Prune:\n-            if (settings.value(\"bPrune\") != value) {\n-                settings.setValue(\"bPrune\", value);\n-                setRestartRequired(true);\n+            if (value.toBool()) {\n+              // When user enables pruning, store the prune size:\n+              nPruneSizeMB = settings.value(\"nPruneSize\").toInt() * 1000;\n+              gArgs.ModifyRWConfigFile(\"prune\",std::to_string(nPruneSizeMB));\n+              gArgs.ForceSetArg(\"-prune\", std::to_string(nPruneSizeMB));\n+            } else {\n+              // When user disables pruning, set prune=1 and store last used prune\n+              // size in settings.\n+              nPruneSizeMB = gArgs.GetArg(\"-prune\", (qint64)nDefaultDbCache);\n+              settings.setValue(\"nPruneSize\", nPruneSizeMB / 1000);\n+              // TODO: check if pruning actually occured, otherwise prune=0 is safe too",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485868",
      "id" : 232485868,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ4NTg2OA==",
      "original_commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "original_position" : 340,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : 340,
      "pull_request_review_id" : 173695833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833",
      "updated_at" : "2018-11-11T12:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232485868",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485909"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232485909"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Missing whitespace after `,` :-)",
      "commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "created_at" : "2018-11-11T12:25:15Z",
      "diff_hunk" : "@@ -420,32 +397,55 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             Q_EMIT coinControlFeaturesChanged(fCoinControlFeatures);\n             break;\n         case Prune:\n-            if (settings.value(\"bPrune\") != value) {\n-                settings.setValue(\"bPrune\", value);\n-                setRestartRequired(true);\n+            if (value.toBool()) {\n+              // When user enables pruning, store the prune size:\n+              nPruneSizeMB = settings.value(\"nPruneSize\").toInt() * 1000;\n+              gArgs.ModifyRWConfigFile(\"prune\",std::to_string(nPruneSizeMB));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485909",
      "id" : 232485909,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ4NTkwOQ==",
      "original_commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "original_position" : 333,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : 333,
      "pull_request_review_id" : 173695833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833",
      "updated_at" : "2018-11-11T12:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232485909",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232485983"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: I believe `(char)current_char` is the preferred form for casting the fundamental types in the project :-)",
      "commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "created_at" : "2018-11-11T12:27:28Z",
      "diff_hunk" : "@@ -979,6 +1028,217 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    bool getline_with_eol(std::istream& stream, std::string& result)\n+    {\n+        int current_char;\n+        current_char = stream.get();\n+        if (current_char == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        result.clear();\n+        result.push_back(char(current_char));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485983",
      "id" : 232485983,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ4NTk4Mw==",
      "original_commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "original_position" : 124,
      "path" : "src/util/system.cpp",
      "position" : 124,
      "pull_request_review_id" : 173695833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833",
      "updated_at" : "2018-11-11T12:39:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232485983",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232485988"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here :-)",
      "commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "created_at" : "2018-11-11T12:27:35Z",
      "diff_hunk" : "@@ -979,6 +1028,217 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    bool getline_with_eol(std::istream& stream, std::string& result)\n+    {\n+        int current_char;\n+        current_char = stream.get();\n+        if (current_char == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        result.clear();\n+        result.push_back(char(current_char));\n+        while (current_char != '\\n') {\n+            current_char = stream.get();\n+            if (current_char == std::char_traits<char>::eof()) {\n+                break;\n+            }\n+            result.push_back(char(current_char));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485988",
      "id" : 232485988,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ4NTk4OA==",
      "original_commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "original_position" : 130,
      "path" : "src/util/system.cpp",
      "position" : 130,
      "pull_request_review_id" : 173695833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833",
      "updated_at" : "2018-11-11T12:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232485988",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232486212"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The scope of `prune` can be limited to the scope of `case Prune` and `case PruneSize` below :-)",
      "commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "created_at" : "2018-11-11T12:34:04Z",
      "diff_hunk" : "@@ -243,6 +171,7 @@ static const QString GetDefaultProxyAddress()\n // read QSettings values and return them\n QVariant OptionsModel::data(const QModelIndex & index, int role) const\n {\n+    int64_t prune = -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486212",
      "id" : 232486212,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ4NjIxMg==",
      "original_commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "original_position" : 120,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : 120,
      "pull_request_review_id" : 173695833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833",
      "updated_at" : "2018-11-11T12:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232486212",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486264"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232486264"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Add parentheses to make precedence obvious :-)",
      "commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "created_at" : "2018-11-11T12:36:12Z",
      "diff_hunk" : "@@ -340,8 +283,16 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n \n         // default proxy\n         case ProxyUse:\n-            if (settings.value(\"fUseProxy\") != value) {\n-                settings.setValue(\"fUseProxy\", value.toBool());\n+            if (value.toBool() ^ gArgs.GetArg(\"-proxy\", \"\") != \"\") {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486264",
      "id" : 232486264,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ4NjI2NA==",
      "original_commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "original_position" : 223,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : 223,
      "pull_request_review_id" : 173695833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833",
      "updated_at" : "2018-11-11T12:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232486264",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232486268"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here :-)",
      "commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "created_at" : "2018-11-11T12:36:25Z",
      "diff_hunk" : "@@ -359,15 +314,27 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             if (!ip_port.is_set || ip_port.port != value.toString()) {\n                 ip_port.port = value.toString();\n                 SetProxySetting(settings, \"addrProxy\", ip_port);\n+                if (gArgs.GetArg(\"-proxy\", \"\") != \"\") {\n+                    gArgs.ModifyRWConfigFile(\"proxy\", settings.value(\"addrProxy\").toString().toStdString());\n+                    gArgs.ForceSetArg(\"-proxy\", settings.value(\"addrProxy\").toString().toStdString());\n+                }\n                 setRestartRequired(true);\n             }\n         }\n         break;\n \n         // separate Tor proxy\n         case ProxyUseTor:\n-            if (settings.value(\"fUseSeparateProxyTor\") != value) {\n-                settings.setValue(\"fUseSeparateProxyTor\", value.toBool());\n+            if (value.toBool() ^ gArgs.GetArg(\"-onion\", \"\") != \"\") {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486268",
      "id" : 232486268,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ4NjI2OA==",
      "original_commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "original_position" : 264,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : 264,
      "pull_request_review_id" : 173695833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833",
      "updated_at" : "2018-11-11T12:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232486268",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486297"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232486297"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this cast to `int64_t` needed?",
      "commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "created_at" : "2018-11-11T12:37:30Z",
      "diff_hunk" : "@@ -420,32 +397,55 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             Q_EMIT coinControlFeaturesChanged(fCoinControlFeatures);\n             break;\n         case Prune:\n-            if (settings.value(\"bPrune\") != value) {\n-                settings.setValue(\"bPrune\", value);\n-                setRestartRequired(true);\n+            if (value.toBool()) {\n+              // When user enables pruning, store the prune size:\n+              nPruneSizeMB = settings.value(\"nPruneSize\").toInt() * 1000;\n+              gArgs.ModifyRWConfigFile(\"prune\",std::to_string(nPruneSizeMB));\n+              gArgs.ForceSetArg(\"-prune\", std::to_string(nPruneSizeMB));\n+            } else {\n+              // When user disables pruning, set prune=1 and store last used prune\n+              // size in settings.\n+              nPruneSizeMB = gArgs.GetArg(\"-prune\", (qint64)nDefaultDbCache);\n+              settings.setValue(\"nPruneSize\", nPruneSizeMB / 1000);\n+              // TODO: check if pruning actually occured, otherwise prune=0 is safe too\n+              gArgs.ModifyRWConfigFile(\"prune\", \"1\");\n+              gArgs.ForceSetArg(\"-prune\", \"1\");\n             }\n+            setRestartRequired(true);\n             break;\n         case PruneSize:\n-            if (settings.value(\"nPruneSize\") != value) {\n+            // Convert prune size to MB:\n+            prune = gArgs.GetArg(\"-prune\", 0);\n+            nPruneSizeMB = value.toInt() * 1000;\n+            if (uint64_t(gArgs.GetArg(\"-prune\", 0)) != nPruneSizeMB) {\n+                // Don't update rw_conf is prune is disabled:\n+                if (!(prune == 0 || prune == 1)) {\n+                  gArgs.ModifyRWConfigFile(\"prune\", std::to_string(nPruneSizeMB));\n+                  gArgs.ForceSetArg(\"-prune\", std::to_string(nPruneSizeMB));\n+                  setRestartRequired(true);\n+                }\n+                // Always update the setting, in case user toggles Prune:\n                 settings.setValue(\"nPruneSize\", value);\n-                setRestartRequired(true);\n             }\n             break;\n         case DatabaseCache:\n-            if (settings.value(\"nDatabaseCache\") != value) {\n-                settings.setValue(\"nDatabaseCache\", value);\n+            if ((int64_t)gArgs.GetArg(\"-dbcache\", (qint64)nDefaultDbCache) != value) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486297",
      "id" : 232486297,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ4NjI5Nw==",
      "original_commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "original_position" : 366,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : 366,
      "pull_request_review_id" : 173695833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833",
      "updated_at" : "2018-11-11T12:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232486297",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232486299"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this cast to `int64_t` needed?",
      "commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "created_at" : "2018-11-11T12:37:38Z",
      "diff_hunk" : "@@ -420,32 +397,55 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             Q_EMIT coinControlFeaturesChanged(fCoinControlFeatures);\n             break;\n         case Prune:\n-            if (settings.value(\"bPrune\") != value) {\n-                settings.setValue(\"bPrune\", value);\n-                setRestartRequired(true);\n+            if (value.toBool()) {\n+              // When user enables pruning, store the prune size:\n+              nPruneSizeMB = settings.value(\"nPruneSize\").toInt() * 1000;\n+              gArgs.ModifyRWConfigFile(\"prune\",std::to_string(nPruneSizeMB));\n+              gArgs.ForceSetArg(\"-prune\", std::to_string(nPruneSizeMB));\n+            } else {\n+              // When user disables pruning, set prune=1 and store last used prune\n+              // size in settings.\n+              nPruneSizeMB = gArgs.GetArg(\"-prune\", (qint64)nDefaultDbCache);\n+              settings.setValue(\"nPruneSize\", nPruneSizeMB / 1000);\n+              // TODO: check if pruning actually occured, otherwise prune=0 is safe too\n+              gArgs.ModifyRWConfigFile(\"prune\", \"1\");\n+              gArgs.ForceSetArg(\"-prune\", \"1\");\n             }\n+            setRestartRequired(true);\n             break;\n         case PruneSize:\n-            if (settings.value(\"nPruneSize\") != value) {\n+            // Convert prune size to MB:\n+            prune = gArgs.GetArg(\"-prune\", 0);\n+            nPruneSizeMB = value.toInt() * 1000;\n+            if (uint64_t(gArgs.GetArg(\"-prune\", 0)) != nPruneSizeMB) {\n+                // Don't update rw_conf is prune is disabled:\n+                if (!(prune == 0 || prune == 1)) {\n+                  gArgs.ModifyRWConfigFile(\"prune\", std::to_string(nPruneSizeMB));\n+                  gArgs.ForceSetArg(\"-prune\", std::to_string(nPruneSizeMB));\n+                  setRestartRequired(true);\n+                }\n+                // Always update the setting, in case user toggles Prune:\n                 settings.setValue(\"nPruneSize\", value);\n-                setRestartRequired(true);\n             }\n             break;\n         case DatabaseCache:\n-            if (settings.value(\"nDatabaseCache\") != value) {\n-                settings.setValue(\"nDatabaseCache\", value);\n+            if ((int64_t)gArgs.GetArg(\"-dbcache\", (qint64)nDefaultDbCache) != value) {\n+                gArgs.ModifyRWConfigFile(\"dbcache\", value.toString().toStdString());\n+                gArgs.ForceSetArg(\"-dbcache\", value.toString().toStdString());\n                 setRestartRequired(true);\n             }\n             break;\n         case ThreadsScriptVerif:\n-            if (settings.value(\"nThreadsScriptVerif\") != value) {\n-                settings.setValue(\"nThreadsScriptVerif\", value);\n+            if ((int64_t)gArgs.GetArg(\"-par\", DEFAULT_SCRIPTCHECK_THREADS) != value) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486299",
      "id" : 232486299,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ4NjI5OQ==",
      "original_commit_id" : "decad6aa9617831e8c46d979b5f10ec03ce3de12",
      "original_position" : 375,
      "path" : "src/qt/optionsmodel.cpp",
      "position" : 375,
      "pull_request_review_id" : 173695833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12833",
      "updated_at" : "2018-11-11T12:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232486299",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14718](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14718.html) (Remove unreferenced boost headers and quieten remaining clang warnings by murrayn)\n* [#14375](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14375.html) (qt: Correct misleading \"overridden options\" label by hebasto)\n* [#14045](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14045.html) (WIP: refactor: Fix the chainparamsbase -> util circular dependency by Empact)\n* [#13818](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13818.html) (More intuitive GUI settings behavior when -proxy is set by Sjors)\n* [#13339](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13339.html) (wallet: Replace %w by wallet name in -walletnotify script by promag)\n* [#11915](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/11915.html) (Qt: Reflect correct dbcache value in options panel. by valentinewallace)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-11-13T20:03:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-438416585",
      "id" : 438416585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12833",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODQxNjU4NQ==",
      "updated_at" : "2018-11-13T20:03:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438416585",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
