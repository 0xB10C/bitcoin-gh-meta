[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK at quick glance. Why add complexity when it can be done outside? What happens to the queue when it restarts? Are the notifications lost? I don't think we should track state on behalf of the client.",
      "created_at" : "2018-03-27T21:36:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-376684018",
      "id" : 376684018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-03-27T21:36:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376684018",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "re recovering state upon restart - if this option is enabled the wallet rescans the last n_confirmations_required blocks to repopulate this queue (see link below): the expectation is that the number of confirmations desired is a number closer to 6 than to 100k - so the rescan shouldn't add tremendous overhead. Of course, the number of confirmations desired is up to the user, and is off by default.\r\nhttps://github.com/bitcoin/bitcoin/pull/12801/commits/d232f62462c6cebf5e03b7cbe7c87469f46ca026#diff-b2bb174788c7409b671c46ccc86034bdR4072\r\n\r\nre the NACK - @laanwj expresses some support for putting this functionality into the daemon in #10021",
      "created_at" : "2018-03-27T21:46:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-376686454",
      "id" : 376686454,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-03-27T21:46:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376686454",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@promag this seems like it could be significantly more efficient than the suggested workaround from https://github.com/bitcoin/bitcoin/issues/10021#issuecomment-287344757 of calling listtransactions. Or did you have a different workaround in mind?\r\n\r\nFrom the original issue, it sounds like lack of a configurable notifications gives wallet users an incentive to only wait for a single confirmation, which seems not great.\r\n\r\nAs for code complexity, I'd have to look more closely, but the new logic might be reusable to update displayed transactions in the gui more efficiently, and the state tracking might be useful in the wallet itself to get rid of some synchronous chainactive lookups.",
      "created_at" : "2018-03-27T22:01:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-376690262",
      "id" : 376690262,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-03-27T22:01:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376690262",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Rebased to latest master (should solve test failures)",
      "created_at" : "2018-03-28T14:27:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-376906771",
      "id" : 376906771,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-03-28T14:27:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376906771",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'll review and test. I understand this feature is very desirable as it can save a lot of code for clients that want the Nth confirmation.",
      "created_at" : "2018-03-30T08:46:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-377480021",
      "id" : 377480021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-03-30T08:46:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377480021",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12801#discussion_r178938513"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12801"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178938513"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Unused symbol (causing the Travis failure). You can catch stuff like this locally by running ` ../../contrib/devtools/lint-python.sh` from within `test/functional`.",
      "commit_id" : "23366c342da278ed8c2e337987be98db80d3871a",
      "created_at" : "2018-04-03T19:37:34Z",
      "diff_hunk" : "@@ -82,5 +83,36 @@ def run_test(self):\n         self.log.info(\"-alertnotify should not continue notifying for more unknown version blocks\")\n         assert_equal(alert_text, alert_text2)\n \n+        self.log.info(\"test -walletnotify with -walletnotifyconfirmations > 1\")\n+        n_confirmations = 6\n+\n+        # first have a different node generate blocks that we shouldn't see confirmations for\n+        self.nodes[0].generate(n_confirmations + 1)\n+        self.sync_all()\n+        os.remove(self.tx_filename)\n+\n+        # now generate some blocks but don't bury any enough to be confirmed (they'll be confirmed later)\n+        generated_before_restart = self.nodes[1].generate(n_confirmations - 2)\n+        confirmed_txids = [t['txid'] for t in self.nodes[1].listtransactions(\"*\", 100) if t['blockhash'] in generated_before_restart]\n+\n+        # restart node with notify on confirmations enabled\n+        self.restart_node(1, [\"-walletnotifyconfirmations=%s\" % n_confirmations,\n+                              \"-walletnotify=echo %%s >> %s\" % self.tx_filename])\n+\n+        # mine some more blocks (we should receive notifications on the ones above plus all but the last n_confirmations - 1 of these)\n+        generated_after_restart = self.nodes[1].generate(block_count + n_confirmations - 1)[:-n_confirmations + 1]\n+        wait_until(lambda: os.path.isfile(self.tx_filename) and os.stat(self.tx_filename).st_size >= (block_count * 65), timeout=10)\n+\n+        # get the list of block hashes that should now be confirmed\n+        buried_blocks = generated_before_restart + generated_after_restart",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#discussion_r178938513",
      "id" : 178938513,
      "original_commit_id" : "8afcf1fa910a5047a15d10015c334249358cc9b4",
      "original_position" : 33,
      "path" : "test/functional/feature_notifications.py",
      "position" : null,
      "pull_request_review_id" : 109088194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12801",
      "updated_at" : "2018-04-04T00:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178938513",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12801#discussion_r178997304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12801"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178997304"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks! Updated",
      "commit_id" : "23366c342da278ed8c2e337987be98db80d3871a",
      "created_at" : "2018-04-04T00:16:17Z",
      "diff_hunk" : "@@ -82,5 +83,36 @@ def run_test(self):\n         self.log.info(\"-alertnotify should not continue notifying for more unknown version blocks\")\n         assert_equal(alert_text, alert_text2)\n \n+        self.log.info(\"test -walletnotify with -walletnotifyconfirmations > 1\")\n+        n_confirmations = 6\n+\n+        # first have a different node generate blocks that we shouldn't see confirmations for\n+        self.nodes[0].generate(n_confirmations + 1)\n+        self.sync_all()\n+        os.remove(self.tx_filename)\n+\n+        # now generate some blocks but don't bury any enough to be confirmed (they'll be confirmed later)\n+        generated_before_restart = self.nodes[1].generate(n_confirmations - 2)\n+        confirmed_txids = [t['txid'] for t in self.nodes[1].listtransactions(\"*\", 100) if t['blockhash'] in generated_before_restart]\n+\n+        # restart node with notify on confirmations enabled\n+        self.restart_node(1, [\"-walletnotifyconfirmations=%s\" % n_confirmations,\n+                              \"-walletnotify=echo %%s >> %s\" % self.tx_filename])\n+\n+        # mine some more blocks (we should receive notifications on the ones above plus all but the last n_confirmations - 1 of these)\n+        generated_after_restart = self.nodes[1].generate(block_count + n_confirmations - 1)[:-n_confirmations + 1]\n+        wait_until(lambda: os.path.isfile(self.tx_filename) and os.stat(self.tx_filename).st_size >= (block_count * 65), timeout=10)\n+\n+        # get the list of block hashes that should now be confirmed\n+        buried_blocks = generated_before_restart + generated_after_restart",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#discussion_r178997304",
      "id" : 178997304,
      "in_reply_to_id" : 178938513,
      "original_commit_id" : "8afcf1fa910a5047a15d10015c334249358cc9b4",
      "original_position" : 33,
      "path" : "test/functional/feature_notifications.py",
      "position" : null,
      "pull_request_review_id" : 109158370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12801",
      "updated_at" : "2018-04-04T00:16:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178997304",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "(will address other comments, re: map/vec)\r\nThe tricky bits here involved being correct around chain re-orgs and I don't think a map makes that any less complex. It also doesn't let you discard the dependency on reliable invocation of the `BlockConnected` signal without introducing a lot more state, inefficient chain scanning, or discarding some of the guarantees about notification:\r\n\r\nHere's an explanation of the circular buffer approach.\r\n\r\n`n`: the number of confirmations needed for notification to occur\r\n\r\nWhen `n==1` we notify as soon as the block is mined so no state is needed.\r\n\r\nWhen `n>1` we need to keep around a state representing blocks with transactions with haven't yet been confirmed: there will be at most `n-1` of these.\r\n\r\nSince `n` is generally chosen to be a small number - and also since any node operating for sufficiently long time to observe `n` blocks will eventually have to store state of length `n-1` - we just pre-allocate a buffer with `n-1` slots. Most of the time (except for re-orgs) we will be adding a new highest height (new block) and removing the lowest height (block that has now received n confirmations and we've notified) - this is a natural fit for a circular buffer.\r\n\r\n`buffer_pos(height)`: maps every block height into a slot in this buffer with simple modulo arithmetic\r\n\r\nIf this buffer is reliably updated every time a block is connected, then it will always contain valid state for **up to** the `n-1` blocks on the active chain tip. **Up to**, and usually, but not always exactly, `n-1` because of re-orgs. In a reorg when the first block on the newly reorged chain gets connected at a height lower than the tip, we do not need to rescan any of the trailing blocks for which we no longer keep state because those have already been appropriately notified previously. We do have to maintain some bounding logic to track min/max height ranges for which we have valid state lest we accidentally send notifications for transactions in higher blocks on the re-orged out chain (b/c of the modulo based indexing into the circular buffer). With a map - you wouldn't need these min/max height bounds - but you trade that for having to explicitly clear the map for heights that are no longer needed. \r\n\r\nIn no case (map or vector) are you able to relax the constraint that `BlockConnected` must be called reliably without adding either more complex state (e.g. block hashes so you don't accidentally notify for re-orged out blocks - you won't send false notifications but you might miss some) or expensive scans of trailing blocks on every update (you wouldn't miss blocks - but it's quite inefficient and you'd either have to rescan the entire chain on startup or persist your last notified height to disk). Also there are a number of other internal components that need to have validation signals invoked reliably - so its not a new dependency.\r\n\r\nThe only other savings in logical complexity you get by substituting a map for a pre-sized vector is indexing into the structure (i.e. `map[height]` instead of `vec[buffer_pos(height)]`. \r\n\r\nOne other note here - this guarantees \"at least once\" notifications. Duplicate notifications can occur when the same blocks are connected more than once (e.g. on node restarts or chain re-orgs).",
      "created_at" : "2018-04-04T20:33:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-378735754",
      "id" : 378735754,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-04-04T20:33:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378735754",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   }
]
