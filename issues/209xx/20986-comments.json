[
   {
      "author_association" : "MEMBER",
      "body" : "Marking as draft for now. I expect people will have **opinions**.",
      "created_at" : "2021-01-22T10:04:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-765292529",
      "id" : 765292529,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20986",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NTI5MjUyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-22T10:04:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/765292529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. And forbid refactoring pulls just to make lines shorter.",
      "created_at" : "2021-01-22T10:48:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-765318270",
      "id" : 765318270,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20986",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NTMxODI3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-22T10:48:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/765318270",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The primary issue I experience as a reviewer is reformatting of lines, especially function signatures or function calls, to make lines shorter. It adds churn, obfuscates the diff and makes review more fatiguing, difficult and error-prone than it otherwise needed to be.\r\n\r\n(The example in the PR description is more readable to me in one line than split into several.)\r\n",
      "created_at" : "2021-01-22T11:27:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-765336808",
      "id" : 765336808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20986",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NTMzNjgwOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-22T11:27:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/765336808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The primary issue I experience as a reviewer is reformatting of lines, especially function signatures or function calls, to make lines shorter.\r\n\r\nMy take on this is that if I need to add an argument to a 230 char wide function declaration, then I'd much prefer to split that line then turn it into a 260 char wide function declaration. The alternative results in lines that just grow without bound.\r\n\r\n> ... obfuscates the diff and makes review more fatiguing, difficult and error-prone than it otherwise needed to be.\r\n\r\nIn my experience, it's pretty easy to see which changes are whitespace only, eg in meld:\r\n\r\n![image](https://user-images.githubusercontent.com/1063656/105488522-ab69d400-5ca9-11eb-940f-2b7d8a6a6245.png)\r\n\r\ncompared to this for adding a new argument to a very long line:\r\n\r\n![image](https://user-images.githubusercontent.com/1063656/105488605-ca686600-5ca9-11eb-917a-b997398726ed.png)\r\n\r\n> The example in the PR description is more readable to me in one line than split into several\r\n\r\nCan you share a screenshot? In my editor, with a column width of 126 chars, it looks like:\r\n\r\n![image](https://user-images.githubusercontent.com/1063656/105489004-71e59880-5caa-11eb-9017-c9d719c6b42d.png)\r\n\r\nwhich I find very difficult to read.",
      "created_at" : "2021-01-22T12:10:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-765355346",
      "id" : 765355346,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20986",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NTM1NTM0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-22T12:10:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/765355346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\nThe long lines have been bothering me for quite some time and I think in the long-term following this guideline will increase code quality. Agree with hebasto though that refactor PRs with the sole goal of line-shortening should be discouraged. (On the other hand, I think many reasonable refactorings _will_ as a side-effect lead to shorter lines.)\r\n\r\nFrom a practical point of view, I personally (and know many people who do) enjoy being able to view two source code files side-by-side without line breaks on a single modern screen, and while 80 is likely too low, decades after 80x25 terminals were widespread (there has been an interesting discussion on the Linux Kernel Mailing List about this subject: https://lkml.org/lkml/2020/5/29/1038), a soft-limit of 100 seems to be a good compromise here. If 100 is still too low for some, the absolute maximum should be a number that is still visible on a single screen without line breaks. Lines longer than 180-200 chars are absolutely inacceptable, IMHO. And unfortunately, we have many instances of those, especially in `src/validation.cpp`.\r\n\r\n> The primary issue I experience as a reviewer is reformatting of lines, especially function signatures or function calls, to make lines shorter. It adds churn, obfuscates the diff and makes review more fatiguing, difficult and error-prone than it otherwise needed to be.\r\n\r\nTend to agree with jnewbery here, that this can be solved by right usage of the diff-tool. In an ideal world the creator of commit would always put review options suggestions in a commit message where the regular diff is hard to read. This is happening already, e.g. \"best reviewed with -w --color-moved=...\" etc. The drawback is that this doesn't work with the rendered diff online on github, but this shouldn't be encouraged anyways.\r\n\r\nIn the long term, after this rule will roughly be followed for quite some time, if there is still many instances where changes introduce line-breaks, there is more likely something wrong with the code. I don't think that having lots of functions/methods with 5+ parameters is desirable. Hence I would hope that in the long-term, with this rule applied the functions/methods are designed in a way that most calls would still likely fit in a single line.",
      "created_at" : "2021-01-22T13:51:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-765411143",
      "id" : 765411143,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20986",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NTQxMTE0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-22T14:02:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/765411143",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I review in buffers or screens of varying widths. For the diff I usually start with gitk (which I believe is widely used), or git in the terminal with -w / colorMoved = dimmed-zebra / colorMovedWs = allow-indentation-change. I'm open to suggestions on diff tooling or how I can use them better.\r\n\r\nAdding a param to a long function without otherwise reformatting it is a trivial diff to review in gitk, but adding reformatting churn makes it more difficult, fatiguing and error-prone as the entire signature has to be reviewed, param by param. This reached the point where I stopped reviewing a couple of pulls lately (one of yours, John, and #20788) because there were several long function signatures being reformatted in a way that needlessly increased the review burden with no benefit. More work for the author, more work for the reviewers. In both cases I gave feedback on that, to no avail...and told myself that to say nothing more and add a caveat to my review that I did not verify (or do not have confidence in my verification of) all the parameters in the reformatted function signatures. I don't see justification or benefit in adding churn that entails the need for that, but this is open source--it's ad hoc and everyone has their point of view.\r\n\r\nAt the end of the day, I suppose it's the author's prerogative to propose churn and the reviewer's prerogative to review or not or give feedback or just shrug and move on. Some authors can get away with it, but I have enough difficulty attracting review (and the situation has not improved over the past two years from my point of view) that I try to make my proposals easy to review (I often don't succeed, but I try).\r\n",
      "created_at" : "2021-01-22T14:33:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-765442344",
      "id" : 765442344,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20986",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NTQ0MjM0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-22T14:33:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/765442344",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
