[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2021-10-05T11:40:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-934329907",
      "id" : 934329907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII5843sL4z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934329907/reactions"
      },
      "updated_at" : "2021-11-10T07:27:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934329907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(this PR is missing in the Assume UTXO project)",
      "created_at" : "2021-10-07T08:42:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-937580719",
      "id" : 937580719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII58434liv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/937580719/reactions"
      },
      "updated_at" : "2021-10-07T08:42:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/937580719",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2021-10-07T19:43:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-938101140",
      "id" : 938101140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII58436kmU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938101140/reactions"
      },
      "updated_at" : "2021-10-07T19:43:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938101140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725089856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725089856"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For `std::tie`\r\n```diff\r\n+++ b/src/validation.cpp\r\n@@ -58,6 +58,7 @@\r\n #include <numeric>\r\n #include <optional>\r\n #include <string>\r\n+#include <tuple>\r\n```\r\n",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-08T15:02:56Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725089856",
      "id" : 725089856,
      "line" : 3643,
      "node_id" : "PRRC_kwDOABII584rN_5A",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3643,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 22,
      "pull_request_review_id" : 775125236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725089856/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-08T15:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725089856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725093367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093367"
         }
      },
      "author_association" : "MEMBER",
      "body" : "- s/an block/a block/\r\n- s/passed the end/past the end/?\r\n\r\nmy editor auto-proposes this\r\n```diff\r\n-                // If we're on an block index entry that is passed the end of the\r\n-                // assumed-valid region of the chain, avoid\r\n-                // adding this as a candidate tip to the background validation\r\n-                // chain, since that would prevent background IBD from happening.\r\n+                // If we're on a block index entry that is past the end of the\r\n+                // assumed-valid region of the chain, avoid adding this as a\r\n+                // candidate tip to the background validation chain, since that\r\n+                // would prevent background IBD from happening.\r\n```\r\n",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-08T15:07:35Z",
      "diff_hunk" : "@@ -3658,7 +3691,18 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                // If we're on an block index entry that is passed the end of the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725093367",
      "id" : 725093367,
      "line" : 3695,
      "node_id" : "PRRC_kwDOABII584rOAv3",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3695,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 67,
      "pull_request_review_id" : 775125236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093367/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-08T15:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725093792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093792"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                const bool is_assumedvalid_end =\r\n```",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-08T15:08:04Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725093792",
      "id" : 725093792,
      "line" : 3659,
      "node_id" : "PRRC_kwDOABII584rOA2g",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3659,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 39,
      "pull_request_review_id" : 775125236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093792/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-08T15:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093792",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725101183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725101183"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit, PascalCase unless there is some reason I'm not aware of here (same for the other `get...` functions introduced here) \r\n ```suggestion\r\n     std::pair<std::optional<uint256>, unsigned int> GetAssumedValidEnd()\r\n```",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-08T15:18:03Z",
      "diff_hunk" : "@@ -1010,6 +1014,12 @@ class ChainstateManager\n     //! ResizeCoinsCaches() as needed.\n     void MaybeRebalanceCaches() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! If some region of the block index is assumed to be valid (as in the case of\n+    //! UTXO snapshot usage), return the last blockhash to be assumed valid (i.e. the\n+    //! base of the snapshot) and the correspondent nChainTx value associated with it.\n+    std::pair<std::optional<uint256>, unsigned int> getAssumedValidEnd()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725101183",
      "id" : 725101183,
      "line" : 1020,
      "node_id" : "PRRC_kwDOABII584rOCp_",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 1020,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 52,
      "pull_request_review_id" : 775125236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725101183/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-08T15:30:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725101183",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r728209676"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728209676"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d):\r\n\r\nWould suggest changing `GetAssumedValidEnd` to `GetLastAssumedValid` because \"end\" does not seem right here. In c++ \"end\" usually refers to the first element after the range, not the last element in the range. \r\n\r\nAlso, it seems like whole return value should be optional, not just the first element of the pair (`optional<tuple<uint256, int>>` not `pair<optional<uint256>, int>`. Changing this would also avoid having having to return a dummy `0` nchaintx value in the implementation if there is no snapshot.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-13T15:49:04Z",
      "diff_hunk" : "@@ -1010,6 +1014,12 @@ class ChainstateManager\n     //! ResizeCoinsCaches() as needed.\n     void MaybeRebalanceCaches() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! If some region of the block index is assumed to be valid (as in the case of\n+    //! UTXO snapshot usage), return the last blockhash to be assumed valid (i.e. the\n+    //! base of the snapshot) and the correspondent nChainTx value associated with it.\n+    std::pair<std::optional<uint256>, unsigned int> getAssumedValidEnd()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r728209676",
      "id" : 728209676,
      "line" : 1020,
      "node_id" : "PRRC_kwDOABII584rZ5kM",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 1020,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 52,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728209676/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728209676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r728812760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728812760"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nThis comment seems a little out of place since it's not describing these variables, but describing how they are used in code below. Would maybe suggest breaking this up and moving it to relevant places below.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-14T09:40:43Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r728812760",
      "id" : 728812760,
      "line" : 3639,
      "node_id" : "PRRC_kwDOABII584rcMzY",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3639,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 18,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728812760/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728812760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732065458"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732065458"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> style nit, PascalCase unless there is some reason I'm not aware of here (same for the other `get...` functions introduced here)\r\n\r\nI always liked the lower/upper method/function convention so you know if some random function call is going to implicitly have access to `*this` as a hidden parameter. Making members or private members lowercase is less verbose than prefixing method calls with `this->` and this convention is already followed other parts of code. Nice to see internal method calls made more obvious in new code, IMO.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T16:52:47Z",
      "diff_hunk" : "@@ -1010,6 +1014,12 @@ class ChainstateManager\n     //! ResizeCoinsCaches() as needed.\n     void MaybeRebalanceCaches() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! If some region of the block index is assumed to be valid (as in the case of\n+    //! UTXO snapshot usage), return the last blockhash to be assumed valid (i.e. the\n+    //! base of the snapshot) and the correspondent nChainTx value associated with it.\n+    std::pair<std::optional<uint256>, unsigned int> getAssumedValidEnd()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732065458",
      "id" : 732065458,
      "in_reply_to_id" : 725101183,
      "line" : 1020,
      "node_id" : "PRRC_kwDOABII584rom6y",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 1020,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 52,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732065458/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732065458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732083694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732083694"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nAnother naming nitpick. Feel free to ignore this naming suggestion and all the other ones, but might suggest inverting this function and calling it something like \"OnlyContainsAssumedValidBlocks\". This seems less handwavy than \"ReliesOnAssumeValid\" because it's not clear what \"relies\" mean or who is relying.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T17:16:13Z",
      "diff_hunk" : "@@ -629,6 +625,10 @@ class CChainState\n      */\n     const std::optional<uint256> m_from_snapshot_blockhash;\n \n+    //! Return true if this chainstate relies on blocks that are assumed-valid. In\n+    //! practice this means it was created based on a UTXO snapshot.\n+    bool ReliesOnAssumeValid() { return m_from_snapshot_blockhash.has_value(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732083694",
      "id" : 732083694,
      "line" : 630,
      "node_id" : "PRRC_kwDOABII584rorXu",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 630,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 29,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732083694/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732083694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732089256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732089256"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nAlso suggested this in another comment, but maybe consider `s/assumedvalid_end/last_assumed_valid/` throughout this function, because \"end\" in c++ usually refers to first element after the range, not the last element in the range",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T17:23:19Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732089256",
      "id" : 732089256,
      "line" : 3641,
      "node_id" : "PRRC_kwDOABII584rosuo",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3641,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 20,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732089256/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732089256",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732090717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732090717"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nCould use structured bindings to save space and avoid potentially dangerous type mismatches:\r\n\r\n```diff\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3638,10 +3638,7 @@ bool BlockManager::LoadBlockIndex(\r\n     // setBlockIndexCandidates of the background chainstate.\r\n     bool saw_end_of_assumedvalid{false};\r\n \r\n-    std::optional<uint256> assumedvalid_end_blockhash;\r\n-    unsigned int assumedvalid_end_nchaintx;\r\n-    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\r\n-        chainman.getAssumedValidEnd();\r\n+    auto [assumedvalid_end_blockhash, assumedvalid_end_nchaintx] = chainman.getAssumedValidEnd();\r\n \r\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\r\n     {\r\n\r\n```\r\n\r\n",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T17:25:18Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732090717",
      "id" : 732090717,
      "line" : 3644,
      "node_id" : "PRRC_kwDOABII584rotFd",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3644,
      "original_position" : 23,
      "original_start_line" : 3641,
      "path" : "src/validation.cpp",
      "position" : 23,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732090717/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 3641,
      "start_side" : "RIGHT",
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732090717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732122417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732122417"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nIt's not so clear why adding blocks to `setBlockIndexCandidates` would prevent IBD from happening. The negative \"avoid doing X so Y doesn't happen\" logic here is a bit twisty, so I would try to describe more positively what this is doing. Something like:\r\n\r\n```c++\r\n// If a chain only supposed to contain assume valid blocks (because it is\r\n// validating them in the background) avoid adding later validated blocks,\r\n// because these would prevent earlier blocks from being downloaded and\r\n// validated.\r\nif (!chainstate->OnlyContainsAssumeValidBlocks() || block_assumed_valid) {\r\n    chainstate->setBlockIndexCandidates.insert(pindex);\r\n}\r\n```",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T18:07:48Z",
      "diff_hunk" : "@@ -3658,7 +3691,18 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                // If we're on an block index entry that is passed the end of the\n+                // assumed-valid region of the chain, avoid\n+                // adding this as a candidate tip to the background validation\n+                // chain, since that would prevent background IBD from happening.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732122417",
      "id" : 732122417,
      "line" : 3698,
      "node_id" : "PRRC_kwDOABII584ro00x",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3698,
      "original_position" : 70,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 70,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732122417/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:07:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732122417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732130569"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732130569"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nIs there a bug here? Comment is saying do not expect assumed valid blocks to have nTx, then the next line immediately skips assume valid logic if `nTx` is `0`",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T18:19:21Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732130569",
      "id" : 732130569,
      "line" : 3657,
      "node_id" : "PRRC_kwDOABII584ro20J",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3657,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 36,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732130569/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732130569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732132238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732132238"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nIt would be good to have a unit test that ensures the function is actually setting this.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T18:21:38Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =\n+                    assumedvalid_end_blockhash &&\n+                    pindex->GetBlockHash() == *assumedvalid_end_blockhash;\n+\n+                if (is_assumedvalid_end) {\n+                    // While starting up with an assumeutxo snapshot chain,\n+                    // we need to manually populate the nChainTx field of the\n+                    // base of the snapshot so that we can add assumed-valid\n+                    // candidate tips to setBlockIndexCandidates below.\n+                    //\n+                    // After the snapshot has completed validation, nChainTx\n+                    // values should compute normally.\n+                    assert(assumedvalid_end_nchaintx > 0);\n+                    pindex->nChainTx = assumedvalid_end_nchaintx;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732132238",
      "id" : 732132238,
      "line" : 3672,
      "node_id" : "PRRC_kwDOABII584ro3OO",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3672,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 52,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732132238/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732132238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732133664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732133664"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nIt would be good to have a unit test that ensure the function is adding the right blocks as candidates in both chains.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T18:23:38Z",
      "diff_hunk" : "@@ -3658,7 +3691,18 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                // If we're on an block index entry that is passed the end of the\n+                // assumed-valid region of the chain, avoid\n+                // adding this as a candidate tip to the background validation\n+                // chain, since that would prevent background IBD from happening.\n+                //\n+                // If there is no assumed-valid region of the chain,\n+                // !saw_end_of_assumedvalid will always be true.\n+                if (!saw_end_of_assumedvalid || chainstate->ReliesOnAssumeValid()) {\n+                    chainstate->setBlockIndexCandidates.insert(pindex);\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732133664",
      "id" : 732133664,
      "line" : 3704,
      "node_id" : "PRRC_kwDOABII584ro3kg",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3704,
      "original_position" : 76,
      "original_start_line" : 3702,
      "path" : "src/validation.cpp",
      "position" : 76,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732133664/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 3702,
      "start_side" : "RIGHT",
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732133664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732153494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732153494"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nMight write to assert when values are inconsistent:\r\n\r\n```c++\r\nif (nchaintx) {\r\n  assert(snapshotblockhash);\r\n  return {snapshotblockhash, *nchaintx};\r\n}\r\nreturn {nullopt, 0};\r\n```",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T18:51:40Z",
      "diff_hunk" : "@@ -5020,3 +5062,41 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{\n+    auto blockhash_op = SnapshotBlockhash();\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);\n+}\n+\n+std::optional<int> ChainstateManager::getSnapshotHeight()\n+{\n+    CBlockIndex* base = getSnapshotBaseBlock();\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}\n+\n+std::optional<unsigned int> ChainstateManager::getSnapshotNChainTx()\n+{\n+    auto height = getSnapshotHeight();\n+    if (!height) return std::nullopt;\n+\n+    auto au_data = ExpectedAssumeutxo(*height, ::Params());\n+    if (!au_data) {\n+        LogPrintf(\"%s: WARNING: no assumeutxo chainparams found for \" /* Continued */\n+            \"active snapshot (%s); something is wrong - please report this\\n\",\n+            __func__, (*this->SnapshotBlockhash()).ToString());\n+        return std::nullopt;\n+    }\n+\n+    return au_data->nChainTx;\n+}\n+\n+std::pair<std::optional<uint256>, unsigned int> ChainstateManager::getAssumedValidEnd()\n+{\n+    std::optional<uint256> snapshotblockhash = SnapshotBlockhash();\n+    std::optional<unsigned int> nchaintx = getSnapshotNChainTx();\n+\n+    if (!snapshotblockhash || !nchaintx) return {std::nullopt, 0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732153494",
      "id" : 732153494,
      "line" : 5100,
      "node_id" : "PRRC_kwDOABII584ro8aW",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 5100,
      "original_position" : 143,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 143,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732153494/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732153494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732182831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732182831"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nThere can be multiple blocks at the same height in vSortedByHeight, right? If so, this behavior seems nondeterministic, because it's sorted by (height, pointer address), so blocks at the assume valid height with pointer addresses _less_ than the assume valid height will be added to `setBlockIndexCandidates` and blocks at the same height with _greater_ pointer addresses will not by added to `setBlockIndexCandidates`.\r\n\r\nHaving this mutable bool variable in the for loop makes this loop more stateful and complicated anyway. I think maybe ideally the GetAssumeValid method should return a (hash, height, nchaintx) tuple instead of a (hash, nchaintx) pair. So the height would be known in advance and the code could look something like:\r\n\r\n```c++\r\nconst auto last_assumed_valid_block = chainman.GetLastAssumedValid();\r\nfor (const auto& [height, pindex] : vSortedByHeight) {\r\n    // Update nChainTx the last assumed valid block\r\n    if (last_assumed_valid_block) {\r\n        const auto& [av_hash, av_height, av_chaintx] = *last_assumed_valid_block;\r\n        if (pindex->GetBlockHash() == av_hash) {\r\n            pindex->nChainTx = av_chaintx;\r\n        }\r\n    }\r\n    ....\r\n    // Add block to chain candidates lists, unless the block is after the assumed valid\r\n    // height and the chain is only supposed to contain assumed valid blocks (if it's a\r\n    // background chain supposed to download and validate them).\r\n    const int av_height = last_assumed_valid_block ? std::get<1>(*last_assumed_valid_block) : std::numeric_limits<int>::max();\r\n    if (!chainstate->OnlyContainsAssumedValidBlocks() || pindex->nHeight <= av_height) {\r\n         chainstate->setBlockIndexCandidates.insert(pindex);\r\n    }\r\n}\r\n```\r\n",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T19:32:46Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =\n+                    assumedvalid_end_blockhash &&\n+                    pindex->GetBlockHash() == *assumedvalid_end_blockhash;\n+\n+                if (is_assumedvalid_end) {\n+                    // While starting up with an assumeutxo snapshot chain,\n+                    // we need to manually populate the nChainTx field of the\n+                    // base of the snapshot so that we can add assumed-valid\n+                    // candidate tips to setBlockIndexCandidates below.\n+                    //\n+                    // After the snapshot has completed validation, nChainTx\n+                    // values should compute normally.\n+                    assert(assumedvalid_end_nchaintx > 0);\n+                    pindex->nChainTx = assumedvalid_end_nchaintx;\n+                    saw_end_of_assumedvalid = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732182831",
      "id" : 732182831,
      "line" : 3673,
      "node_id" : "PRRC_kwDOABII584rpDkv",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3673,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 53,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732182831/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732182831",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Forgot to post this earlier. I wrote up a description of this PR when I started reviewing it that may be useful to others (or helpful to me if I got something wrong):\r\n\r\nCurrently, `BlockManager::LoadBlockIndex` adds all blocks that have downloaded transactions to the _active_ chain state's `setBlockIndexCandidates` set, ignoring the _background_ chain state.\r\n\r\nThis PR changes `ChainstateManager::LoadBlockIndex` to:\r\n\r\n- Update `setBlockIndexCandidates` in the background chain, not just the active chain. In the active chain, all blocks are added as before. In the background chain, only blocks below the snapshot height are added so the background chain will continue to download and validate them.\r\n- Sets `pindex->nChainTx` of the snapshot block to the value from snapshot metadata instead of leaving it 0.\r\n",
      "created_at" : "2021-10-19T20:20:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-947075033",
      "id" : 947075033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII5844czfZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947075033/reactions"
      },
      "updated_at" : "2021-10-19T20:20:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947075033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736021606"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736021606"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can be `auto blockhash_op` ?",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-25T22:50:51Z",
      "diff_hunk" : "@@ -5020,3 +5062,41 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{\n+    auto blockhash_op = SnapshotBlockhash();\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);\n+}\n+\n+std::optional<int> ChainstateManager::getSnapshotHeight()\n+{\n+    CBlockIndex* base = getSnapshotBaseBlock();\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}\n+\n+std::optional<unsigned int> ChainstateManager::getSnapshotNChainTx()\n+{\n+    auto height = getSnapshotHeight();\n+    if (!height) return std::nullopt;\n+\n+    auto au_data = ExpectedAssumeutxo(*height, ::Params());\n+    if (!au_data) {\n+        LogPrintf(\"%s: WARNING: no assumeutxo chainparams found for \" /* Continued */\n+            \"active snapshot (%s); something is wrong - please report this\\n\",\n+            __func__, (*this->SnapshotBlockhash()).ToString());\n+        return std::nullopt;\n+    }\n+\n+    return au_data->nChainTx;\n+}\n+\n+std::pair<std::optional<uint256>, unsigned int> ChainstateManager::getAssumedValidEnd()\n+{\n+    std::optional<uint256> snapshotblockhash = SnapshotBlockhash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736021606",
      "id" : 736021606,
      "line" : 5097,
      "node_id" : "PRRC_kwDOABII584r3sxm",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 5097,
      "original_position" : 140,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 140,
      "pull_request_review_id" : 788689376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736021606/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-25T23:51:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736021606",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736036940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736036940"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree, I think if the new logic seeks to detect the last block of the assumed-valid range but assumed-valid blocks are expected to not have `nTx`, detection success cannot be reached if it's conditional on `nTx` > 0.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-25T23:30:06Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736036940",
      "id" : 736036940,
      "in_reply_to_id" : 732130569,
      "line" : 3657,
      "node_id" : "PRRC_kwDOABII584r3whM",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3657,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 36,
      "pull_request_review_id" : 788689376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736036940/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-25T23:51:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736036940",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736041983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736041983"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't the logical operator be an `&&` ?\r\n\r\nOtherwise I think if the end of the assumed-valid block region has been reached (`saw_end_of_assumevalid`=true) logic still enters this control flow.  And as such block index entries past the assumed-valid region of the chain are added to `setBlockIndexCandidates` (AFAIU from the comment just above).",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-25T23:43:56Z",
      "diff_hunk" : "@@ -3658,7 +3691,18 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                // If we're on an block index entry that is passed the end of the\n+                // assumed-valid region of the chain, avoid\n+                // adding this as a candidate tip to the background validation\n+                // chain, since that would prevent background IBD from happening.\n+                //\n+                // If there is no assumed-valid region of the chain,\n+                // !saw_end_of_assumedvalid will always be true.\n+                if (!saw_end_of_assumedvalid || chainstate->ReliesOnAssumeValid()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736041983",
      "id" : 736041983,
      "line" : 3702,
      "node_id" : "PRRC_kwDOABII584r3xv_",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3702,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 74,
      "pull_request_review_id" : 788689376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736041983/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-25T23:51:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736041983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736042920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736042920"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't see the causality between populating the `nChainTx` and adequately adding assumed-valid and assumed-valid _only_ blocks to `setBlockIndexCandidates` for snapshot chainstates ? I think conditional L3691 isn't pending on `nChainTx`.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-25T23:46:51Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =\n+                    assumedvalid_end_blockhash &&\n+                    pindex->GetBlockHash() == *assumedvalid_end_blockhash;\n+\n+                if (is_assumedvalid_end) {\n+                    // While starting up with an assumeutxo snapshot chain,\n+                    // we need to manually populate the nChainTx field of the\n+                    // base of the snapshot so that we can add assumed-valid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736042920",
      "id" : 736042920,
      "line" : 3666,
      "node_id" : "PRRC_kwDOABII584r3x-o",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3666,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 46,
      "pull_request_review_id" : 788689376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736042920/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-25T23:51:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736042920",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r737666011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737666011"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good points - this is a little confusing; my fault for not being clearer in commentary. `nTx = 1` is set for all block headers during snapshot activation (https://github.com/jamesob/bitcoin/blob/2021-10-au-loadblockindex/src/validation.cpp#L4966-L4970) so this code will be executed for all assumed-valid blocks.\r\n\r\nNow that you've raised the point, I'm wondering if this code is even necessary. The modifications here are redundant with the ones we do during snapshot activation (linked above), and I think I added these here in LoadBlockIndex as a matter of necessity before I [thought to set the entire blockindex to dirty](https://github.com/jamesob/bitcoin/blob/2021-10-au-loadblockindex/src/validation.cpp#L4987) in the activation routine (thereby persisting all changes during FlushStateToDisk).\r\n\r\nI was going to say that having this code here is still valuable, if not a little confusing, in case there is some kind of interruption when writing the block index immediately after snapshot load... but changes to the block index [are batched](https://github.com/jamesob/bitcoin/blob/2021-10-au-loadblockindex/src/validation.cpp#L2022-L2024), so if we fail to write the block index, none of the chain will be considered assumedvalid!\r\n\r\nSo: maybe some of these LoadBlockIndex changes are unnecessary? I'll work to determine this today.",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-10-27T16:51:49Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r737666011",
      "id" : 737666011,
      "in_reply_to_id" : 732130569,
      "line" : 3637,
      "node_id" : "PRRC_kwDOABII584r9-Pb",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3637,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 26,
      "pull_request_review_id" : 790914212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737666011/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-27T16:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737666011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738785918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738785918"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point! Addressed in new changeset.",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-10-28T21:24:39Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =\n+                    assumedvalid_end_blockhash &&\n+                    pindex->GetBlockHash() == *assumedvalid_end_blockhash;\n+\n+                if (is_assumedvalid_end) {\n+                    // While starting up with an assumeutxo snapshot chain,\n+                    // we need to manually populate the nChainTx field of the\n+                    // base of the snapshot so that we can add assumed-valid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738785918",
      "id" : 738785918,
      "in_reply_to_id" : 736042920,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sCPp-",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3666,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 792442090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738785918/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-28T21:24:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738785918",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hey, review works! Thanks to commentary from @ryanofsky @ariard, I've found that a lot of the original patch was unnecessary .I've pushed a much-simplified changeset that addresses the quandary I posted yesterday (https://github.com/bitcoin/bitcoin/pull/23174#discussion_r737666011). \r\n\r\nIt turns out that the earlier version of this patch contained some unnecessary code that was a vestige from before I was persisting changes to the block index during snapshot activation (added in #21526).  The new changeset just ensures that we don't add tip candidates which rely on assumed-valid blocks to the IBD chainstate. I think the changes are much more intuitive to follow, and a decent amount of code was dropped.\r\n\r\nFor anyone who was in doubt: reviewing code pays off!",
      "created_at" : "2021-10-28T21:37:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-954242458",
      "id" : 954242458,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII58444JWa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954242458/reactions"
      },
      "updated_at" : "2021-10-28T22:06:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954242458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738794750"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738794750"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for this comment; this raises a really good point. The LoadBlockIndex() modifications are now no longer stateful, and instead we walk backwards for each pindex to see if any of its ancestors are assumed-valid (which is O(n**2) with chain size, but since LoadBlockIndex() happens once on startup that doesn't really matter).",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-10-28T21:41:04Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =\n+                    assumedvalid_end_blockhash &&\n+                    pindex->GetBlockHash() == *assumedvalid_end_blockhash;\n+\n+                if (is_assumedvalid_end) {\n+                    // While starting up with an assumeutxo snapshot chain,\n+                    // we need to manually populate the nChainTx field of the\n+                    // base of the snapshot so that we can add assumed-valid\n+                    // candidate tips to setBlockIndexCandidates below.\n+                    //\n+                    // After the snapshot has completed validation, nChainTx\n+                    // values should compute normally.\n+                    assert(assumedvalid_end_nchaintx > 0);\n+                    pindex->nChainTx = assumedvalid_end_nchaintx;\n+                    saw_end_of_assumedvalid = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738794750",
      "id" : 738794750,
      "in_reply_to_id" : 732182831,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sCRz-",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3673,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 792453581,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738794750/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-28T21:41:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738794750",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738795942"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738795942"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note that this change is tautological, but done for clarity. `HaveTxsDownloaded()` should probably be removed since its name conflicts with assumed-valid blocks that have had their nChainTx value set during snapshot activation.",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-10-28T21:43:30Z",
      "diff_hunk" : "@@ -3622,17 +3622,21 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n-        // We can link the chain of blocks for which we've received transactions at some point.\n+\n+        // We can link the chain of blocks for which we've received transactions at some point, or\n+        // blocks that are assumed-valid on the basis of snapshot load (see\n+        // PopulateAndValidateSnapshot()).\n         // Pruned nodes may have deleted the block.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                if (pindex->pprev->nChainTx > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738795942",
      "id" : 738795942,
      "line" : 3639,
      "node_id" : "PRRC_kwDOABII584sCSGm",
      "original_commit_id" : "2d7ecfb6e9847a0f0d9072e659a743bd231381cd",
      "original_line" : 3639,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 29,
      "pull_request_review_id" : 792455220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738795942/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-28T21:43:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738795942",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r740230078"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/740230078"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-11-01T13:56:21Z",
      "diff_hunk" : "@@ -3658,7 +3691,18 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                // If we're on an block index entry that is passed the end of the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r740230078",
      "id" : 740230078,
      "in_reply_to_id" : 725093367,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sHwO-",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3695,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 794234225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/740230078/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-01T13:56:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/740230078",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741479471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741479471"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: don't modify genesis during snapshot load\" (cb1d4244806980d31ceaa2307431dd70e6c39fe9)\r\n\r\nThe new comment here seems good, but I think it would be more direct and straightforward to write\r\n\r\n```diff\r\n-for (int i = 0; i <= snapshot_chainstate.m_chain.Height(); ++i) {\r\n+for (int i = 1; i <= snapshot_chainstate.m_chain.Height(); ++i) {\r\n```\r\n\r\nabove than add this extra control flow and indirect `isGenesis()` height check.",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-11-02T21:36:50Z",
      "diff_hunk" : "@@ -4912,6 +4912,14 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = 0; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n+        if (index->isGenesis()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741479471",
      "id" : 741479471,
      "line" : 4928,
      "node_id" : "PRRC_kwDOABII584sMhQv",
      "original_commit_id" : "cb1d4244806980d31ceaa2307431dd70e6c39fe9",
      "original_line" : 4915,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 80,
      "pull_request_review_id" : 795938311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741479471/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-02T23:13:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741479471",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741482214"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741482214"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: don't modify genesis during snapshot load\" (cb1d4244806980d31ceaa2307431dd70e6c39fe9)\r\n\r\nWould be good to have a unit test for this, if changing this could break things.",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-11-02T21:41:52Z",
      "diff_hunk" : "@@ -4912,6 +4912,14 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = 0; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n+        if (index->isGenesis()) {\n+            // Don't make any modifications to the genesis block.\n+            // This is especially important because we don't want to erroneously",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741482214",
      "id" : 741482214,
      "line" : 4930,
      "node_id" : "PRRC_kwDOABII584sMh7m",
      "original_commit_id" : "cb1d4244806980d31ceaa2307431dd70e6c39fe9",
      "original_line" : 4917,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 82,
      "pull_request_review_id" : 795938311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741482214/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-02T23:13:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741482214",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741486651"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741486651"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: add CBlockIndex reliesOnAssumeValid\" (619ada31fdc90f079cb1a6c44df6b76f6a162c1e)\r\n\r\nWould suggest calling method `HasAssumedValidAncestors()` instead of `reliesOnAssumedValid()` to avoid vague \"relies\", to be more consistent with other `IsAssumedValid()` and `GetAncestor()` method names, and to be less confusing in the place where `CBlockIndex::reliesOnAssumedValid` and `CChainState::reliesOnAssumedValid` are both called together.",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-11-02T21:50:28Z",
      "diff_hunk" : "@@ -312,6 +312,10 @@ class CBlockIndex\n     //!   validated by a background chainstate.\n     bool IsAssumedValid() const { return nStatus & BLOCK_ASSUMED_VALID; }\n \n+    // Runtime: O(n) with chain length.\n+    // Returns true if the block specified relies on ancestors which are assumed-valid.\n+    bool reliesOnAssumedValid() const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741486651",
      "id" : 741486651,
      "line" : 317,
      "node_id" : "PRRC_kwDOABII584sMjA7",
      "original_commit_id" : "619ada31fdc90f079cb1a6c44df6b76f6a162c1e",
      "original_line" : 317,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 6,
      "pull_request_review_id" : 795938311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741486651/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-02T23:13:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741486651",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741490463"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741490463"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: add CBlockIndex reliesOnAssumeValid\" (619ada31fdc90f079cb1a6c44df6b76f6a162c1e)\r\n\r\nI was confused what `nHeight` might be referring to, or if it might be a typo for `height`. Maybe say \"If current block height is passed\" or \"If this->nHeight is passed\" instead of \"If nHeight is passed\"",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-11-02T21:57:52Z",
      "diff_hunk" : "@@ -337,7 +341,7 @@ class CBlockIndex\n     //! Build the skiplist pointer for this entry.\n     void BuildSkip();\n \n-    //! Efficiently find an ancestor of this block.\n+    //! Efficiently find an ancestor of this block. If nHeight is passed, this is returned.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741490463",
      "id" : 741490463,
      "line" : 344,
      "node_id" : "PRRC_kwDOABII584sMj8f",
      "original_commit_id" : "619ada31fdc90f079cb1a6c44df6b76f6a162c1e",
      "original_line" : 344,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 21,
      "pull_request_review_id" : 795938311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741490463/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-02T23:13:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741490463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741509474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741509474"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (dbca47ece6b9a3a5e02969270bfab340fce286c0)\r\n\r\nI think I would suggest a few changes here:\r\n\r\n- Consolidate the insert calls, and just focus on one case where blocks shouldn't be added instead of branching for other cases.\r\n- Try to be less vague in comments (\"fitting chainstates\")\r\n- Be a little more efficient avoiding the O(n) pindex call, and mention it explicitly in comment to be clear that it's intentional.\r\n\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex 4af1c7f07a0..eec27f63abb 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3653,15 +3653,15 @@ bool BlockManager::LoadBlockIndex(\r\n         if (pindex->IsAssumedValid() ||\r\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\r\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\r\n+            // Following call is O(n), but should not be a significant slowdown.\r\n+            const bool has_assumed_valid_ancestors = pindex->reliesOnAssumedValid();\r\n+\r\n+            // Fill each chainstate's block candidate set. Add all blocks as\r\n+            // candidates if the chainstate is allowed to rely on assumed-valid\r\n+            // data. Otherwise avoid adding assumed-valid blocks so the\r\n+            // chainstate will download and validate all earlier blocks.\r\n             for (CChainState* chainstate : chainman.GetAll()) {\r\n-                // Only add blocks which are assumed-valid to fitting chainstates, i.e. those\r\n-                // populated on the basis of a UTXO snapshot.\r\n-                if (pindex->reliesOnAssumedValid()) {\r\n-                    if (chainstate->reliesOnAssumedValid()) {\r\n-                        chainstate->setBlockIndexCandidates.insert(pindex);\r\n-                    }\r\n-                } else {\r\n-                    // When blockindex doesn't rely on assumedvalid blocks, add it to all chainstates.\r\n+                if (chainstate->reliesOnAssumedValid() || !has_assumed_valid_ancestors) {\r\n                     chainstate->setBlockIndexCandidates.insert(pindex);\r\n                 }\r\n             }\r\n\r\n```\r\n\r\nAlso it would be good to have unit test coverage for this",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-11-02T22:37:00Z",
      "diff_hunk" : "@@ -3649,7 +3653,18 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                // Only add blocks which are assumed-valid to fitting chainstates, i.e. those\n+                // populated on the basis of a UTXO snapshot.\n+                if (pindex->reliesOnAssumedValid()) {\n+                    if (chainstate->reliesOnAssumedValid()) {\n+                        chainstate->setBlockIndexCandidates.insert(pindex);\n+                    }\n+                } else {\n+                    // When blockindex doesn't rely on assumedvalid blocks, add it to all chainstates.\n+                    chainstate->setBlockIndexCandidates.insert(pindex);\n+                }\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741509474",
      "id" : 741509474,
      "line" : 3667,
      "node_id" : "PRRC_kwDOABII584sMoli",
      "original_commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "original_line" : 3667,
      "original_position" : 49,
      "original_start_line" : 3652,
      "path" : "src/validation.cpp",
      "position" : 49,
      "pull_request_review_id" : 795938311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741509474/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 3652,
      "start_side" : "LEFT",
      "updated_at" : "2021-11-02T23:13:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741509474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741513665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741513665"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: add CBlockIndex reliesOnAssumeValid\" (619ada31fdc90f079cb1a6c44df6b76f6a162c1e)\r\n\r\nWould be good and should be pretty easy add a simple unit test for this. If you want a template, `findearliestatleast_edge_test` is a simple existing test making a chain of blocks and checking some properties.",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-11-02T22:47:00Z",
      "diff_hunk" : "@@ -119,6 +119,15 @@ void CBlockIndex::BuildSkip()\n         pskip = pprev->GetAncestor(GetSkipHeight(nHeight));\n }\n \n+bool CBlockIndex::reliesOnAssumedValid() const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r741513665",
      "id" : 741513665,
      "line" : 122,
      "node_id" : "PRRC_kwDOABII584sMpnB",
      "original_commit_id" : "619ada31fdc90f079cb1a6c44df6b76f6a162c1e",
      "original_line" : 122,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/chain.cpp",
      "position" : 4,
      "pull_request_review_id" : 795938311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741513665/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-02T23:13:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/741513665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r745109360"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745109360"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep, will test this.\r\n\r\nAlso, this change is not mergeable as-is: it turns out invoking this for each CBlockIndex in the chain takes a really. long. time. making startup on mainnet appear as though it is hung. :cry: ",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-11-08T21:33:41Z",
      "diff_hunk" : "@@ -119,6 +119,15 @@ void CBlockIndex::BuildSkip()\n         pskip = pprev->GetAncestor(GetSkipHeight(nHeight));\n }\n \n+bool CBlockIndex::reliesOnAssumedValid() const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r745109360",
      "id" : 745109360,
      "in_reply_to_id" : 741513665,
      "line" : 122,
      "node_id" : "PRRC_kwDOABII584saXdw",
      "original_commit_id" : "619ada31fdc90f079cb1a6c44df6b76f6a162c1e",
      "original_line" : 122,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/chain.cpp",
      "position" : 4,
      "pull_request_review_id" : 800628374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745109360/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-08T21:33:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/745109360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746056082"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056082"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "2833bd0277ac87cd07e98b0a23b73eed97a2e513",
      "created_at" : "2021-11-09T21:21:30Z",
      "diff_hunk" : "@@ -4912,6 +4912,14 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = 0; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n+        if (index->isGenesis()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746056082",
      "id" : 746056082,
      "in_reply_to_id" : 741479471,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sd-mS",
      "original_commit_id" : "cb1d4244806980d31ceaa2307431dd70e6c39fe9",
      "original_line" : 4915,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 801894915,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056082/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T21:21:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746056172"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056172"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "2833bd0277ac87cd07e98b0a23b73eed97a2e513",
      "created_at" : "2021-11-09T21:21:37Z",
      "diff_hunk" : "@@ -4912,6 +4912,14 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = 0; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n+        if (index->isGenesis()) {\n+            // Don't make any modifications to the genesis block.\n+            // This is especially important because we don't want to erroneously",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746056172",
      "id" : 746056172,
      "in_reply_to_id" : 741482214,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sd-ns",
      "original_commit_id" : "cb1d4244806980d31ceaa2307431dd70e6c39fe9",
      "original_line" : 4917,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 801895010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056172/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T21:21:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056172",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746056309"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056309"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed this method altogether, so done.",
      "commit_id" : "2833bd0277ac87cd07e98b0a23b73eed97a2e513",
      "created_at" : "2021-11-09T21:21:52Z",
      "diff_hunk" : "@@ -312,6 +312,10 @@ class CBlockIndex\n     //!   validated by a background chainstate.\n     bool IsAssumedValid() const { return nStatus & BLOCK_ASSUMED_VALID; }\n \n+    // Runtime: O(n) with chain length.\n+    // Returns true if the block specified relies on ancestors which are assumed-valid.\n+    bool reliesOnAssumedValid() const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746056309",
      "id" : 746056309,
      "in_reply_to_id" : 741486651,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sd-p1",
      "original_commit_id" : "619ada31fdc90f079cb1a6c44df6b76f6a162c1e",
      "original_line" : 317,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : null,
      "pull_request_review_id" : 801895182,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056309/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T21:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746056515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056515"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Addressed everything here aside from the unittest, which I will follow up with. ",
      "commit_id" : "2833bd0277ac87cd07e98b0a23b73eed97a2e513",
      "created_at" : "2021-11-09T21:22:15Z",
      "diff_hunk" : "@@ -3649,7 +3653,18 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                // Only add blocks which are assumed-valid to fitting chainstates, i.e. those\n+                // populated on the basis of a UTXO snapshot.\n+                if (pindex->reliesOnAssumedValid()) {\n+                    if (chainstate->reliesOnAssumedValid()) {\n+                        chainstate->setBlockIndexCandidates.insert(pindex);\n+                    }\n+                } else {\n+                    // When blockindex doesn't rely on assumedvalid blocks, add it to all chainstates.\n+                    chainstate->setBlockIndexCandidates.insert(pindex);\n+                }\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746056515",
      "id" : 746056515,
      "in_reply_to_id" : 741509474,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sd-tD",
      "original_commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "original_line" : 3680,
      "original_position" : 49,
      "original_start_line" : 3652,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 801895474,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056515/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2021-11-09T21:22:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746056741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056741"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed - nothing to test anymore.",
      "commit_id" : "2833bd0277ac87cd07e98b0a23b73eed97a2e513",
      "created_at" : "2021-11-09T21:22:37Z",
      "diff_hunk" : "@@ -119,6 +119,15 @@ void CBlockIndex::BuildSkip()\n         pskip = pprev->GetAncestor(GetSkipHeight(nHeight));\n }\n \n+bool CBlockIndex::reliesOnAssumedValid() const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746056741",
      "id" : 746056741,
      "in_reply_to_id" : 741513665,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sd-wl",
      "original_commit_id" : "619ada31fdc90f079cb1a6c44df6b76f6a162c1e",
      "original_line" : 122,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 801895737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056741/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-09T21:22:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746056741",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Man this changeset keeps getting smaller and smaller. Thanks @ryanofsky!\r\n\r\nI've reverted back to doing a stateful approach for assumed-valid detection in LoadBlockIndex since the more holistic approach of scanning ancestors ended up being prohibitively slow when loading the main chain. This has allowed me to drop a few more changes from the original patch.\r\n\r\nThe only remaining item left is to write unittests for the contents of `setBlockIndexCandidates` after calling LoadBlockIndex, which I'll be working on shortly.",
      "created_at" : "2021-11-09T21:24:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-964561176",
      "id" : 964561176,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII5845fgkY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964561176/reactions"
      },
      "updated_at" : "2021-11-09T21:24:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964561176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746966753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746966753"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: don't modify genesis during snapshot load\" (86d48535198724c723370a447f73e134029331c2)\r\n\r\nI still don't think it is good that if there are two blocks at the same height and one is assumed valid, then how the other one is treated depends on whether its _pointer address_ is higher or lower than the assumed valid block pointer address. (Previous comment about this was https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732182831). I get that this only temporarily impacts validation state of the background chainstate, but I don't think validation behavior should be nondeterministic and treat blocks differently based on what addresses malloc returns. Would suggest just doing height comparison directly so order of vSortedByHeight entries with the same height won't matter:\r\n\r\n\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex 02b0f76f7b5..119b9141706 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3623,9 +3623,14 @@ bool BlockManager::LoadBlockIndex(\r\n     }\r\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\r\n \r\n-    // Have we yet seen a pindex->IsAssumedValid()? If so, account for the fact that all subsequent\r\n-    // index entries rely on assumed-valid ancestors.\r\n-    bool seen_assumed_valid{false};\r\n+    // Find start of assumed-valid region.\r\n+    int first_assumed_valid_height = std::numeric_limits<int>::max();\r\n+    for (const auto& [height, block] : vSortedByHeight) {\r\n+        if (block->IsAssumedValid()) {\r\n+            first_assumed_valid_height = height;\r\n+            break;\r\n+        }\r\n+    }\r\n \r\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\r\n     {\r\n@@ -3634,10 +3639,6 @@ bool BlockManager::LoadBlockIndex(\r\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\r\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\r\n \r\n-        if (!seen_assumed_valid && pindex->IsAssumedValid()) {\r\n-            seen_assumed_valid = true;\r\n-        }\r\n-\r\n         // We can link the chain of blocks for which we've received transactions at some point, or\r\n         // blocks that are assumed-valid on the basis of snapshot load (see\r\n         // PopulateAndValidateSnapshot()).\r\n@@ -3674,7 +3675,7 @@ bool BlockManager::LoadBlockIndex(\r\n             // happen because assumed-valid blocks are buried deeply in\r\n             // the valid chain.\r\n             for (CChainState* chainstate : chainman.GetAll()) {\r\n-                if (!seen_assumed_valid || chainstate->reliesOnAssumedValid()) {\r\n+                if (chainstate->reliesOnAssumedValid() || pindex->nHeight < first_assumed_valid_height) {\r\n                     chainstate->setBlockIndexCandidates.insert(pindex);\r\n                 }\r\n             }\r\n\r\n```\r\n",
      "commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "created_at" : "2021-11-10T20:36:54Z",
      "diff_hunk" : "@@ -3622,17 +3622,29 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // Have we yet seen a pindex->IsAssumedValid()? If so, account for the fact that all subsequent\n+    // index entries rely on assumed-valid ancestors.\n+    bool seen_assumed_valid{false};\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n-        // We can link the chain of blocks for which we've received transactions at some point.\n+\n+        if (!seen_assumed_valid && pindex->IsAssumedValid()) {\n+            seen_assumed_valid = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746966753",
      "id" : 746966753,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584shc7h",
      "original_commit_id" : "2833bd0277ac87cd07e98b0a23b73eed97a2e513",
      "original_line" : 3638,
      "original_position" : 27,
      "original_start_line" : 3637,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 803118052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746966753/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-11-10T21:36:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746966753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746975622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746975622"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (2833bd0277ac87cd07e98b0a23b73eed97a2e513)\r\n\r\nI think this note is helpful but a little confusing:\r\n\r\n- It's vague where it refers to \"the way seen_assumed_valid works\" and what \" considering a block\"  means\r\n- It's unclear where the claim that this has to be a very deep fork comes from. IIUC, the fork just has to happen before the first assumed valid block height, and this could be anywhere in between the genesis block and the snapshot height. It could actually be very close to the snapshot height if the background chainstate is almost finished validating.\r\n- It isn't clear about why this behavior is safe. That last sentence \"In practice this will not happen\" seems to imply that this is safe just because the condition is unlikely to happen. But comment is ambiguous whether it is safe regardless. IIUC, it is safe regardless.\r\n\r\nMy attempt to describe this would be \"Note: This is considering all blocks whose height is greater or equal to the first assumed-valid block to be assumed-valid blocks, and excluding them from the background chainstate's setBlockIndexCandidates set. This does mean that some blocks which are not technically assumed-valid (later blocks on a fork beginning before the first assumed-valid block) might not get added to the the background chainstate, but this is ok, because they will still be attached to the active chainstate if they actually contain more work.\"",
      "commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "created_at" : "2021-11-10T20:50:47Z",
      "diff_hunk" : "@@ -3649,7 +3661,23 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            // Fill each chainstate's block candidate set. Add all blocks as\n+            // candidates if the chainstate is allowed to rely on assumed-valid\n+            // blocks. Otherwise avoid adding assumed-valid blocks so the\n+            // chainstate will download and validate all earlier blocks.\n+            //\n+            // Note: given the loop over `vSortedByHeight` and the way\n+            // `seen_assumed_valid` works, it is (in general) possible that we\n+            // are considering a block which has a height higher than the\n+            // assumed-valid region but is not itself reliant on assumed-valid\n+            // ancestors (i.e. a very deep fork). In practice this will not\n+            // happen because assumed-valid blocks are buried deeply in\n+            // the valid chain.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746975622",
      "id" : 746975622,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584shfGG",
      "original_commit_id" : "2833bd0277ac87cd07e98b0a23b73eed97a2e513",
      "original_line" : 3675,
      "original_position" : 57,
      "original_start_line" : 3669,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 803118052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746975622/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-11-10T21:36:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746975622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746977365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746977365"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (2833bd0277ac87cd07e98b0a23b73eed97a2e513)\r\n\r\nI'd maybe swap these conditions and write this as `if (chainstate->reliesOnAssumedValid() || !seen_assumed_valid)` to match the description above \"Add all blocks as candidates if the chainstate is allowed to rely on assumed-valid blocks. Otherwise avoid adding assumed-valid blocks\"\r\n",
      "commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "created_at" : "2021-11-10T20:53:41Z",
      "diff_hunk" : "@@ -3649,7 +3661,23 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            // Fill each chainstate's block candidate set. Add all blocks as\n+            // candidates if the chainstate is allowed to rely on assumed-valid\n+            // blocks. Otherwise avoid adding assumed-valid blocks so the\n+            // chainstate will download and validate all earlier blocks.\n+            //\n+            // Note: given the loop over `vSortedByHeight` and the way\n+            // `seen_assumed_valid` works, it is (in general) possible that we\n+            // are considering a block which has a height higher than the\n+            // assumed-valid region but is not itself reliant on assumed-valid\n+            // ancestors (i.e. a very deep fork). In practice this will not\n+            // happen because assumed-valid blocks are buried deeply in\n+            // the valid chain.\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                if (!seen_assumed_valid || chainstate->reliesOnAssumedValid()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746977365",
      "id" : 746977365,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584shfhV",
      "original_commit_id" : "2833bd0277ac87cd07e98b0a23b73eed97a2e513",
      "original_line" : 3677,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 803118052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746977365/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-10T21:36:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746977365",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746999259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746999259"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (2833bd0277ac87cd07e98b0a23b73eed97a2e513)\r\n\r\nI still think it would be really nice to call this function from a unit test and make sure this set is filled correctly. The logic here is fragile, and testing this part of `LoadBlockIndex` could make it easier to test other parts as well.\r\n\r\nEDIT: Sorry, I see you mentioned working on this in https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-964561176",
      "commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "created_at" : "2021-11-10T21:29:07Z",
      "diff_hunk" : "@@ -3649,7 +3661,23 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            // Fill each chainstate's block candidate set. Add all blocks as\n+            // candidates if the chainstate is allowed to rely on assumed-valid\n+            // blocks. Otherwise avoid adding assumed-valid blocks so the\n+            // chainstate will download and validate all earlier blocks.\n+            //\n+            // Note: given the loop over `vSortedByHeight` and the way\n+            // `seen_assumed_valid` works, it is (in general) possible that we\n+            // are considering a block which has a height higher than the\n+            // assumed-valid region but is not itself reliant on assumed-valid\n+            // ancestors (i.e. a very deep fork). In practice this will not\n+            // happen because assumed-valid blocks are buried deeply in\n+            // the valid chain.\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                if (!seen_assumed_valid || chainstate->reliesOnAssumedValid()) {\n+                    chainstate->setBlockIndexCandidates.insert(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r746999259",
      "id" : 746999259,
      "line" : 3684,
      "node_id" : "PRRC_kwDOABII584shk3b",
      "original_commit_id" : "2833bd0277ac87cd07e98b0a23b73eed97a2e513",
      "original_line" : 3684,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 66,
      "pull_request_review_id" : 803118052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746999259/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-10T21:37:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/746999259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky nice timing. I just pushed a unittest for `LoadBlockIndex()`/`setBlockIndexCandidates`.",
      "created_at" : "2021-11-10T21:37:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-965766954",
      "id" : 965766954,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII5845kG8q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/965766954/reactions"
      },
      "updated_at" : "2021-11-10T21:37:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/965766954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r747012968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747012968"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Great suggestions, all integrated. Thank you!",
      "commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "created_at" : "2021-11-10T21:50:11Z",
      "diff_hunk" : "@@ -3622,17 +3622,29 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // Have we yet seen a pindex->IsAssumedValid()? If so, account for the fact that all subsequent\n+    // index entries rely on assumed-valid ancestors.\n+    bool seen_assumed_valid{false};\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n-        // We can link the chain of blocks for which we've received transactions at some point.\n+\n+        if (!seen_assumed_valid && pindex->IsAssumedValid()) {\n+            seen_assumed_valid = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r747012968",
      "id" : 747012968,
      "in_reply_to_id" : 746966753,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584shoNo",
      "original_commit_id" : "2833bd0277ac87cd07e98b0a23b73eed97a2e513",
      "original_line" : 3638,
      "original_position" : 27,
      "original_start_line" : 3637,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 803181569,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747012968/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-11-10T21:50:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/747012968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r748440394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748440394"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"test: add tests for LoadBlockIndex when using multiple chainstates\" (e35d167682bc527fa9d8734f1cc7558f18d95b09)\r\n\r\nDeclaring these const could make the test a little easier to grok",
      "commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "created_at" : "2021-11-12T16:52:41Z",
      "diff_hunk" : "@@ -312,4 +312,81 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n         loaded_snapshot_blockhash);\n }\n \n+//! Test LoadBlockIndex behavior when multiple chainstates are in use.\n+//!\n+//! - First, verfiy that setBlockIndexCandidates is as expected when using a single,\n+//!   fully-validating chainstate.\n+//!\n+//! - Then mark a region of the chain BLOCK_ASSUMED_VALID and introduce a second chainstate\n+//!   that will tolerate assumed-valid blocks. Run LoadBlockIndex() and ensure that the first\n+//!   chainstate only contains fully validated blocks and the other chainstate contains all blocks,\n+//!   even those assumed-valid.\n+//!\n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n+{\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    CTxMemPool& mempool = *m_node.mempool;\n+    CChainState& cs1 = chainman.ActiveChainstate();\n+\n+    int num_indexes{0};\n+    int num_assumed_valid{0};\n+    int expected_assumed_valid{20};\n+    int last_assumed_valid_idx{40};\n+    int assumed_valid_start_idx = last_assumed_valid_idx - expected_assumed_valid;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r748440394",
      "id" : 748440394,
      "line" : 335,
      "node_id" : "PRRC_kwDOABII584snEtK",
      "original_commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "original_line" : 335,
      "original_position" : 24,
      "original_start_line" : 331,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : 34,
      "pull_request_review_id" : 805023614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748440394/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 331,
      "start_side" : "RIGHT",
      "updated_at" : "2021-11-12T17:02:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748440394",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r748441135"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748441135"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"test: add tests for LoadBlockIndex when using multiple chainstates\" (e35d167682bc527fa9d8734f1cc7558f18d95b09)\r\n\r\nCould simplify `last_assumed_valid_idx - expected_assumed_valid` as `assumed_valid_start_idx`",
      "commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "created_at" : "2021-11-12T16:53:49Z",
      "diff_hunk" : "@@ -312,4 +312,81 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n         loaded_snapshot_blockhash);\n }\n \n+//! Test LoadBlockIndex behavior when multiple chainstates are in use.\n+//!\n+//! - First, verfiy that setBlockIndexCandidates is as expected when using a single,\n+//!   fully-validating chainstate.\n+//!\n+//! - Then mark a region of the chain BLOCK_ASSUMED_VALID and introduce a second chainstate\n+//!   that will tolerate assumed-valid blocks. Run LoadBlockIndex() and ensure that the first\n+//!   chainstate only contains fully validated blocks and the other chainstate contains all blocks,\n+//!   even those assumed-valid.\n+//!\n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n+{\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    CTxMemPool& mempool = *m_node.mempool;\n+    CChainState& cs1 = chainman.ActiveChainstate();\n+\n+    int num_indexes{0};\n+    int num_assumed_valid{0};\n+    int expected_assumed_valid{20};\n+    int last_assumed_valid_idx{40};\n+    int assumed_valid_start_idx = last_assumed_valid_idx - expected_assumed_valid;\n+\n+    CBlockIndex* validated_tip{nullptr};\n+    CBlockIndex* assumed_tip{chainman.ActiveChain().Tip()};\n+\n+    auto reload_all_block_indexes = [&]() {\n+        for (CChainState* cs : chainman.GetAll()) {\n+            LOCK(::cs_main);\n+            cs->UnloadBlockIndex();\n+            BOOST_CHECK(cs->setBlockIndexCandidates.empty());\n+        }\n+\n+        WITH_LOCK(::cs_main, chainman.LoadBlockIndex());\n+    };\n+\n+    // Ensure that without any assumed-valid BlockIndex entries, all entries are considered\n+    // tip candidates.\n+    reload_all_block_indexes();\n+    BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.size(), cs1.m_chain.Height() + 1);\n+\n+    // Mark some region of the chain assumed-valid.\n+    for (int i = 0; i <= cs1.m_chain.Height(); ++i) {\n+        auto index = cs1.m_chain[i];\n+\n+        if (i < last_assumed_valid_idx && i >= (last_assumed_valid_idx - expected_assumed_valid)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r748441135",
      "id" : 748441135,
      "line" : 359,
      "node_id" : "PRRC_kwDOABII584snE4v",
      "original_commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "original_line" : 359,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : 58,
      "pull_request_review_id" : 805023614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748441135/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-12T17:02:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748441135",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r748949388"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748949388"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IIUC any fully validated block beyond the assumed-valid range of blocks shouldn't not be tolerated by the \"fully-validated\" chain, as they're relying on assumed-valid blocks ?\r\n\r\nIf so can you add a `BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.count(m_chain.Height()), 0)` to verify this expected behavior holds ?",
      "commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "created_at" : "2021-11-15T01:15:48Z",
      "diff_hunk" : "@@ -309,4 +312,81 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n         loaded_snapshot_blockhash);\n }\n \n+//! Test LoadBlockIndex behavior when multiple chainstates are in use.\n+//!\n+//! - First, verfiy that setBlockIndexCandidates is as expected when using a single,\n+//!   fully-validating chainstate.\n+//!\n+//! - Then mark a region of the chain BLOCK_ASSUMED_VALID and introduce a second chainstate\n+//!   that will tolerate assumed-valid blocks. Run LoadBlockIndex() and ensure that the first\n+//!   chainstate only contains fully validated blocks and the other chainstate contains all blocks,\n+//!   even those assumed-valid.\n+//!\n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n+{\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    CTxMemPool& mempool = *m_node.mempool;\n+    CChainState& cs1 = chainman.ActiveChainstate();\n+\n+    int num_indexes{0};\n+    int num_assumed_valid{0};\n+    int expected_assumed_valid{20};\n+    int last_assumed_valid_idx{40};\n+    int assumed_valid_start_idx = last_assumed_valid_idx - expected_assumed_valid;\n+\n+    CBlockIndex* validated_tip{nullptr};\n+    CBlockIndex* assumed_tip{chainman.ActiveChain().Tip()};\n+\n+    auto reload_all_block_indexes = [&]() {\n+        for (CChainState* cs : chainman.GetAll()) {\n+            LOCK(::cs_main);\n+            cs->UnloadBlockIndex();\n+            BOOST_CHECK(cs->setBlockIndexCandidates.empty());\n+        }\n+\n+        WITH_LOCK(::cs_main, chainman.LoadBlockIndex());\n+    };\n+\n+    // Ensure that without any assumed-valid BlockIndex entries, all entries are considered\n+    // tip candidates.\n+    reload_all_block_indexes();\n+    BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.size(), cs1.m_chain.Height() + 1);\n+\n+    // Mark some region of the chain assumed-valid.\n+    for (int i = 0; i <= cs1.m_chain.Height(); ++i) {\n+        auto index = cs1.m_chain[i];\n+\n+        if (i < last_assumed_valid_idx && i >= (last_assumed_valid_idx - expected_assumed_valid)) {\n+            index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+        }\n+\n+        ++num_indexes;\n+        if (index->IsAssumedValid()) ++num_assumed_valid;\n+\n+        // Note the last fully-validated block as the expected validated tip.\n+        if (i == (assumed_valid_start_idx - 1)) {\n+            validated_tip = index;\n+            BOOST_CHECK(!index->IsAssumedValid());\n+        }\n+    }\n+\n+    BOOST_CHECK_EQUAL(expected_assumed_valid, num_assumed_valid);\n+\n+    CChainState& cs2 = WITH_LOCK(::cs_main,\n+        return chainman.InitializeChainstate(&mempool, GetRandHash()));\n+\n+    reload_all_block_indexes();\n+\n+    // The fully validated chain only has candidates up to the start of the assumed-valid\n+    // blocks.\n+    BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.count(validated_tip), 1);\n+    BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.count(assumed_tip), 0);\n+    BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.size(), assumed_valid_start_idx);\n+\n+    // The assumed-valid tolerant chain has all blocks as candidates.\n+    BOOST_CHECK_EQUAL(cs2.setBlockIndexCandidates.count(validated_tip), 1);\n+    BOOST_CHECK_EQUAL(cs2.setBlockIndexCandidates.count(assumed_tip), 1);\n+    BOOST_CHECK_EQUAL(cs2.setBlockIndexCandidates.size(), num_indexes);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r748949388",
      "id" : 748949388,
      "line" : 389,
      "node_id" : "PRRC_kwDOABII584spA-M",
      "original_commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "original_line" : 389,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : 88,
      "pull_request_review_id" : 805559521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748949388/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-15T01:24:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748949388",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r748949660"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748949660"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Maybe add a `assert(IsSnapshotActive()` as we shouldn't have assumed-valid blocks in the absence of a snapshot loaded ?",
      "commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "created_at" : "2021-11-15T01:17:19Z",
      "diff_hunk" : "@@ -3622,17 +3622,30 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // Find start of assumed-valid region.\n+    int first_assumed_valid_height = std::numeric_limits<int>::max();\n+    for (const auto& [height, block] : vSortedByHeight) {\n+        if (block->IsAssumedValid()) {\n+            first_assumed_valid_height = height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r748949660",
      "id" : 748949660,
      "line" : 3630,
      "node_id" : "PRRC_kwDOABII584spBCc",
      "original_commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "original_line" : 3630,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 18,
      "pull_request_review_id" : 805559521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748949660/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-15T01:24:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748949660",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r748950124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748950124"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the comment can be slightly modified to mention the descendants of assumed-valid blocks, like in the commit description.\r\n\r\n\"Otherwise avoid adding assumed-valid blocks and their fully-validated descendants therefore inducing the chainstate to download and validate all blocks earlier than the first assumed-valid block\".",
      "commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "created_at" : "2021-11-15T01:19:43Z",
      "diff_hunk" : "@@ -3649,7 +3662,28 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+\n+            // Fill each chainstate's block candidate set. Add all blocks as\n+            // candidates if the chainstate is allowed to rely on assumed-valid\n+            // blocks. Otherwise avoid adding assumed-valid blocks so the\n+            // chainstate will download and validate all earlier blocks.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r748950124",
      "id" : 748950124,
      "line" : 3669,
      "node_id" : "PRRC_kwDOABII584spBJs",
      "original_commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "original_line" : 3669,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 51,
      "pull_request_review_id" : 805559521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748950124/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-15T01:24:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/748950124",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r750592969"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750592969"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Did you mean `cs1.setBlockIndexCandidates.count(m_chain.Height())`? Because the set doesn't contain heights, it contains CBlockIndex*. Also which `m_chain` are you referring to? Because there's one for `c1` and `c2`. \r\n\r\nI think the check you want is already included in `BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.count(assumed_tip), 0);`.",
      "commit_id" : "bc3288b0ba1d949f0004513e250bb21ddfb5b389",
      "created_at" : "2021-11-16T19:25:24Z",
      "diff_hunk" : "@@ -309,4 +312,81 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n         loaded_snapshot_blockhash);\n }\n \n+//! Test LoadBlockIndex behavior when multiple chainstates are in use.\n+//!\n+//! - First, verfiy that setBlockIndexCandidates is as expected when using a single,\n+//!   fully-validating chainstate.\n+//!\n+//! - Then mark a region of the chain BLOCK_ASSUMED_VALID and introduce a second chainstate\n+//!   that will tolerate assumed-valid blocks. Run LoadBlockIndex() and ensure that the first\n+//!   chainstate only contains fully validated blocks and the other chainstate contains all blocks,\n+//!   even those assumed-valid.\n+//!\n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n+{\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    CTxMemPool& mempool = *m_node.mempool;\n+    CChainState& cs1 = chainman.ActiveChainstate();\n+\n+    int num_indexes{0};\n+    int num_assumed_valid{0};\n+    int expected_assumed_valid{20};\n+    int last_assumed_valid_idx{40};\n+    int assumed_valid_start_idx = last_assumed_valid_idx - expected_assumed_valid;\n+\n+    CBlockIndex* validated_tip{nullptr};\n+    CBlockIndex* assumed_tip{chainman.ActiveChain().Tip()};\n+\n+    auto reload_all_block_indexes = [&]() {\n+        for (CChainState* cs : chainman.GetAll()) {\n+            LOCK(::cs_main);\n+            cs->UnloadBlockIndex();\n+            BOOST_CHECK(cs->setBlockIndexCandidates.empty());\n+        }\n+\n+        WITH_LOCK(::cs_main, chainman.LoadBlockIndex());\n+    };\n+\n+    // Ensure that without any assumed-valid BlockIndex entries, all entries are considered\n+    // tip candidates.\n+    reload_all_block_indexes();\n+    BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.size(), cs1.m_chain.Height() + 1);\n+\n+    // Mark some region of the chain assumed-valid.\n+    for (int i = 0; i <= cs1.m_chain.Height(); ++i) {\n+        auto index = cs1.m_chain[i];\n+\n+        if (i < last_assumed_valid_idx && i >= (last_assumed_valid_idx - expected_assumed_valid)) {\n+            index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+        }\n+\n+        ++num_indexes;\n+        if (index->IsAssumedValid()) ++num_assumed_valid;\n+\n+        // Note the last fully-validated block as the expected validated tip.\n+        if (i == (assumed_valid_start_idx - 1)) {\n+            validated_tip = index;\n+            BOOST_CHECK(!index->IsAssumedValid());\n+        }\n+    }\n+\n+    BOOST_CHECK_EQUAL(expected_assumed_valid, num_assumed_valid);\n+\n+    CChainState& cs2 = WITH_LOCK(::cs_main,\n+        return chainman.InitializeChainstate(&mempool, GetRandHash()));\n+\n+    reload_all_block_indexes();\n+\n+    // The fully validated chain only has candidates up to the start of the assumed-valid\n+    // blocks.\n+    BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.count(validated_tip), 1);\n+    BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.count(assumed_tip), 0);\n+    BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.size(), assumed_valid_start_idx);\n+\n+    // The assumed-valid tolerant chain has all blocks as candidates.\n+    BOOST_CHECK_EQUAL(cs2.setBlockIndexCandidates.count(validated_tip), 1);\n+    BOOST_CHECK_EQUAL(cs2.setBlockIndexCandidates.count(assumed_tip), 1);\n+    BOOST_CHECK_EQUAL(cs2.setBlockIndexCandidates.size(), num_indexes);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r750592969",
      "id" : 750592969,
      "in_reply_to_id" : 748949388,
      "line" : 389,
      "node_id" : "PRRC_kwDOABII584svSPJ",
      "original_commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "original_line" : 389,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : 88,
      "pull_request_review_id" : 807741510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750592969/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-16T19:25:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750592969",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r750594454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750594454"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Part of @ryanofsky's overarching (and good) feedback a few months earlier was to avoid leaking knowledge of the idea of \"UTXO snapshots\" in places where it doesn't need to be. Instead we should rely on more fundamental state (like the presence of assumed-valid block index entries). I think referencing snapshots here would be going the other direction.",
      "commit_id" : "bc3288b0ba1d949f0004513e250bb21ddfb5b389",
      "created_at" : "2021-11-16T19:27:24Z",
      "diff_hunk" : "@@ -3622,17 +3622,30 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // Find start of assumed-valid region.\n+    int first_assumed_valid_height = std::numeric_limits<int>::max();\n+    for (const auto& [height, block] : vSortedByHeight) {\n+        if (block->IsAssumedValid()) {\n+            first_assumed_valid_height = height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r750594454",
      "id" : 750594454,
      "in_reply_to_id" : 748949660,
      "line" : 3630,
      "node_id" : "PRRC_kwDOABII584svSmW",
      "original_commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "original_line" : 3630,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 18,
      "pull_request_review_id" : 807743475,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750594454/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-16T19:27:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750594454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r750633848"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750633848"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure I follow your suggested comment, since fully-validated blocks should be added to both chainstates, but I've updated the comment to be try and be clearer.",
      "commit_id" : "bc3288b0ba1d949f0004513e250bb21ddfb5b389",
      "created_at" : "2021-11-16T20:23:51Z",
      "diff_hunk" : "@@ -3649,7 +3662,28 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+\n+            // Fill each chainstate's block candidate set. Add all blocks as\n+            // candidates if the chainstate is allowed to rely on assumed-valid\n+            // blocks. Otherwise avoid adding assumed-valid blocks so the\n+            // chainstate will download and validate all earlier blocks.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r750633848",
      "id" : 750633848,
      "in_reply_to_id" : 748950124,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584svcN4",
      "original_commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "original_line" : 3669,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 807797246,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750633848/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-16T20:23:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750633848",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r750865419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750865419"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/23174#discussion_r748949660\r\n\r\n> nit: Maybe add a `assert(IsSnapshotActive()` as we shouldn't have assumed-valid blocks in the absence of a snapshot loaded ?\r\n\r\nI guess like James said I'd be a little disinclined to add an assert checking for assumeutxo snapshots in validation code that's dealing more abstractly with chainstates. But I could also see the assert being useful as a sanity check, so no strong opinion either way.\r\n\r\nAnother option would be to write the assert a more generically with something like:\r\n\r\n```c++\r\n\r\n// assert that the assumed valid blocks come from some assumed-valid chainstate.\r\nassert(any_of(chainstates, [](auto& chainstate) { return chainstate->reliesOnAssumedValid(); });\r\n\r\n// assert that the assumed valid blocks will be validated by some not assumed-valid chainstate\r\nassert(any_of(chainstates, [](auto& chainstate) { return !chainstate->reliesOnAssumedValid(); });\r\n```",
      "commit_id" : "bc3288b0ba1d949f0004513e250bb21ddfb5b389",
      "created_at" : "2021-11-17T04:03:02Z",
      "diff_hunk" : "@@ -3622,17 +3622,30 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // Find start of assumed-valid region.\n+    int first_assumed_valid_height = std::numeric_limits<int>::max();\n+    for (const auto& [height, block] : vSortedByHeight) {\n+        if (block->IsAssumedValid()) {\n+            first_assumed_valid_height = height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r750865419",
      "id" : 750865419,
      "in_reply_to_id" : 748949660,
      "line" : 3630,
      "node_id" : "PRRC_kwDOABII584swUwL",
      "original_commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "original_line" : 3630,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 18,
      "pull_request_review_id" : 808091891,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750865419/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-17T04:06:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750865419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r752672520"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752672520"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed, thanks",
      "commit_id" : "7b08baf62c17cc9bc4959373de097931a178f65e",
      "created_at" : "2021-11-18T22:26:17Z",
      "diff_hunk" : "@@ -312,4 +312,81 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n         loaded_snapshot_blockhash);\n }\n \n+//! Test LoadBlockIndex behavior when multiple chainstates are in use.\n+//!\n+//! - First, verfiy that setBlockIndexCandidates is as expected when using a single,\n+//!   fully-validating chainstate.\n+//!\n+//! - Then mark a region of the chain BLOCK_ASSUMED_VALID and introduce a second chainstate\n+//!   that will tolerate assumed-valid blocks. Run LoadBlockIndex() and ensure that the first\n+//!   chainstate only contains fully validated blocks and the other chainstate contains all blocks,\n+//!   even those assumed-valid.\n+//!\n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n+{\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    CTxMemPool& mempool = *m_node.mempool;\n+    CChainState& cs1 = chainman.ActiveChainstate();\n+\n+    int num_indexes{0};\n+    int num_assumed_valid{0};\n+    int expected_assumed_valid{20};\n+    int last_assumed_valid_idx{40};\n+    int assumed_valid_start_idx = last_assumed_valid_idx - expected_assumed_valid;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r752672520",
      "id" : 752672520,
      "in_reply_to_id" : 748440394,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584s3N8I",
      "original_commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "original_line" : 335,
      "original_position" : 24,
      "original_start_line" : 331,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 810519220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752672520/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-11-18T22:26:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/752672520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r753429531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753429531"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea! Added.",
      "commit_id" : "7a576ba9d24308e36dcde2b48b34c0676de98daa",
      "created_at" : "2021-11-19T18:34:30Z",
      "diff_hunk" : "@@ -3622,17 +3622,30 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // Find start of assumed-valid region.\n+    int first_assumed_valid_height = std::numeric_limits<int>::max();\n+    for (const auto& [height, block] : vSortedByHeight) {\n+        if (block->IsAssumedValid()) {\n+            first_assumed_valid_height = height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r753429531",
      "id" : 753429531,
      "in_reply_to_id" : 748949660,
      "line" : 3641,
      "node_id" : "PRRC_kwDOABII584s6Gwb",
      "original_commit_id" : "e35d167682bc527fa9d8734f1cc7558f18d95b09",
      "original_line" : 3641,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 29,
      "pull_request_review_id" : 811541105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753429531/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-19T18:34:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/753429531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r757915350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/757915350"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hm, this feels a bit backwards to me. Couldn't we skip the whole loop if we first check that one of the chainstates relies on assume-valid?",
      "commit_id" : "7a576ba9d24308e36dcde2b48b34c0676de98daa",
      "created_at" : "2021-11-28T15:49:23Z",
      "diff_hunk" : "@@ -3622,17 +3622,41 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // Find start of assumed-valid region.\n+    int first_assumed_valid_height = std::numeric_limits<int>::max();\n+\n+    for (const auto& [height, block] : vSortedByHeight) {\n+        if (block->IsAssumedValid()) {\n+            auto chainstates = chainman.GetAll();\n+\n+            // assert that the assumed valid blocks come from some assumed-valid chainstate.\n+            assert(any_of(chainstates.cbegin(), chainstates.cend(),\n+                [](auto chainstate) { return chainstate->reliesOnAssumedValid(); }));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r757915350",
      "id" : 757915350,
      "line" : 3635,
      "node_id" : "PRRC_kwDOABII584tLN7W",
      "original_commit_id" : "e19253f2fd17b01e52950b9e78fcd10251e6e8c0",
      "original_line" : 3635,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 23,
      "pull_request_review_id" : 817231643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/757915350/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-28T17:04:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/757915350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r757922484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/757922484"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this in the right place here? When I set `AFTER_GENESIS_START` to 0 this still doesn't fail for me.",
      "commit_id" : "7a576ba9d24308e36dcde2b48b34c0676de98daa",
      "created_at" : "2021-11-28T16:47:06Z",
      "diff_hunk" : "@@ -184,6 +184,9 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n     BOOST_CHECK(!chainman.ActiveChainstate().m_from_snapshot_blockhash);\n     BOOST_CHECK(!chainman.SnapshotBlockhash());\n \n+    // Ensure that the genesis block was not marked assumed-valid.\n+    BOOST_CHECK(!chainman.ActiveChain().Genesis()->IsAssumedValid());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r757922484",
      "id" : 757922484,
      "line" : 188,
      "node_id" : "PRRC_kwDOABII584tLPq0",
      "original_commit_id" : "86d48535198724c723370a447f73e134029331c2",
      "original_line" : 188,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : 5,
      "pull_request_review_id" : 817231643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/757922484/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-28T17:04:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/757922484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r758160127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758160127"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't understand this comment. If genesis isn't `BLOCK_VALID_SCRIPTS`, then `BLOCK_ASSUMED_VALID` wouldn't be applied, so the workaround isn't needed??",
      "commit_id" : "7a576ba9d24308e36dcde2b48b34c0676de98daa",
      "created_at" : "2021-11-29T09:12:16Z",
      "diff_hunk" : "@@ -4909,7 +4952,14 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     // Fake various pieces of CBlockIndex state:\n     CBlockIndex* index = nullptr;\n-    for (int i = 0; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n+\n+    // Don't make any modifications to the genesis block.\n+    // This is especially important because we don't want to erroneously\n+    // apply BLOCK_ASSUMED_VALID to genesis, which would happen if we didn't skip\n+    // it here (since it apparently isn't BLOCK_VALID_SCRIPTS).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r758160127",
      "id" : 758160127,
      "line" : 4959,
      "node_id" : "PRRC_kwDOABII584tMJr_",
      "original_commit_id" : "7a576ba9d24308e36dcde2b48b34c0676de98daa",
      "original_line" : 4959,
      "original_position" : 115,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 115,
      "pull_request_review_id" : 817521177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758160127/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-29T09:18:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/758160127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
