[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#19888](https://github.com/bitcoin/bitcoin/pull/19888) (rpc, test: Improve getblockstats for unspendables by fjahr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-10-05T11:40:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-934329907",
      "id" : 934329907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII5843sL4z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934329907/reactions"
      },
      "updated_at" : "2021-10-20T05:11:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934329907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(this PR is missing in the Assume UTXO project)",
      "created_at" : "2021-10-07T08:42:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-937580719",
      "id" : 937580719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII58434liv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/937580719/reactions"
      },
      "updated_at" : "2021-10-07T08:42:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/937580719",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2021-10-07T19:43:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-938101140",
      "id" : 938101140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII58436kmU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938101140/reactions"
      },
      "updated_at" : "2021-10-07T19:43:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938101140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725089856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725089856"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For `std::tie`\r\n```diff\r\n+++ b/src/validation.cpp\r\n@@ -58,6 +58,7 @@\r\n #include <numeric>\r\n #include <optional>\r\n #include <string>\r\n+#include <tuple>\r\n```\r\n",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-08T15:02:56Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725089856",
      "id" : 725089856,
      "line" : 3643,
      "node_id" : "PRRC_kwDOABII584rN_5A",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3643,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 22,
      "pull_request_review_id" : 775125236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725089856/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-08T15:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725089856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725093367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093367"
         }
      },
      "author_association" : "MEMBER",
      "body" : "- s/an block/a block/\r\n- s/passed the end/past the end/?\r\n\r\nmy editor auto-proposes this\r\n```diff\r\n-                // If we're on an block index entry that is passed the end of the\r\n-                // assumed-valid region of the chain, avoid\r\n-                // adding this as a candidate tip to the background validation\r\n-                // chain, since that would prevent background IBD from happening.\r\n+                // If we're on a block index entry that is past the end of the\r\n+                // assumed-valid region of the chain, avoid adding this as a\r\n+                // candidate tip to the background validation chain, since that\r\n+                // would prevent background IBD from happening.\r\n```\r\n",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-08T15:07:35Z",
      "diff_hunk" : "@@ -3658,7 +3691,18 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                // If we're on an block index entry that is passed the end of the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725093367",
      "id" : 725093367,
      "line" : 3695,
      "node_id" : "PRRC_kwDOABII584rOAv3",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3695,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 67,
      "pull_request_review_id" : 775125236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093367/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-08T15:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725093792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093792"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                const bool is_assumedvalid_end =\r\n```",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-08T15:08:04Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725093792",
      "id" : 725093792,
      "line" : 3659,
      "node_id" : "PRRC_kwDOABII584rOA2g",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3659,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 39,
      "pull_request_review_id" : 775125236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093792/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-08T15:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725093792",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725101183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725101183"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit, PascalCase unless there is some reason I'm not aware of here (same for the other `get...` functions introduced here) \r\n ```suggestion\r\n     std::pair<std::optional<uint256>, unsigned int> GetAssumedValidEnd()\r\n```",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-08T15:18:03Z",
      "diff_hunk" : "@@ -1010,6 +1014,12 @@ class ChainstateManager\n     //! ResizeCoinsCaches() as needed.\n     void MaybeRebalanceCaches() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! If some region of the block index is assumed to be valid (as in the case of\n+    //! UTXO snapshot usage), return the last blockhash to be assumed valid (i.e. the\n+    //! base of the snapshot) and the correspondent nChainTx value associated with it.\n+    std::pair<std::optional<uint256>, unsigned int> getAssumedValidEnd()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r725101183",
      "id" : 725101183,
      "line" : 1020,
      "node_id" : "PRRC_kwDOABII584rOCp_",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 1020,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 52,
      "pull_request_review_id" : 775125236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725101183/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-08T15:30:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/725101183",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r728209676"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728209676"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d):\r\n\r\nWould suggest changing `GetAssumedValidEnd` to `GetLastAssumedValid` because \"end\" does not seem right here. In c++ \"end\" usually refers to the first element after the range, not the last element in the range. \r\n\r\nAlso, it seems like whole return value should be optional, not just the first element of the pair (`optional<tuple<uint256, int>>` not `pair<optional<uint256>, int>`. Changing this would also avoid having having to return a dummy `0` nchaintx value in the implementation if there is no snapshot.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-13T15:49:04Z",
      "diff_hunk" : "@@ -1010,6 +1014,12 @@ class ChainstateManager\n     //! ResizeCoinsCaches() as needed.\n     void MaybeRebalanceCaches() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! If some region of the block index is assumed to be valid (as in the case of\n+    //! UTXO snapshot usage), return the last blockhash to be assumed valid (i.e. the\n+    //! base of the snapshot) and the correspondent nChainTx value associated with it.\n+    std::pair<std::optional<uint256>, unsigned int> getAssumedValidEnd()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r728209676",
      "id" : 728209676,
      "line" : 1020,
      "node_id" : "PRRC_kwDOABII584rZ5kM",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 1020,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 52,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728209676/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728209676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r728812760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728812760"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nThis comment seems a little out of place since it's not describing these variables, but describing how they are used in code below. Would maybe suggest breaking this up and moving it to relevant places below.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-14T09:40:43Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r728812760",
      "id" : 728812760,
      "line" : 3639,
      "node_id" : "PRRC_kwDOABII584rcMzY",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3639,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 18,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728812760/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728812760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732065458"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732065458"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> style nit, PascalCase unless there is some reason I'm not aware of here (same for the other `get...` functions introduced here)\r\n\r\nI always liked the lower/upper method/function convention so you know if some random function call is going to implicitly have access to `*this` as a hidden parameter. Making members or private members lowercase is less verbose than prefixing method calls with `this->` and this convention is already followed other parts of code. Nice to see internal method calls made more obvious in new code, IMO.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T16:52:47Z",
      "diff_hunk" : "@@ -1010,6 +1014,12 @@ class ChainstateManager\n     //! ResizeCoinsCaches() as needed.\n     void MaybeRebalanceCaches() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! If some region of the block index is assumed to be valid (as in the case of\n+    //! UTXO snapshot usage), return the last blockhash to be assumed valid (i.e. the\n+    //! base of the snapshot) and the correspondent nChainTx value associated with it.\n+    std::pair<std::optional<uint256>, unsigned int> getAssumedValidEnd()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732065458",
      "id" : 732065458,
      "in_reply_to_id" : 725101183,
      "line" : 1020,
      "node_id" : "PRRC_kwDOABII584rom6y",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 1020,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 52,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732065458/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732065458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732083694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732083694"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nAnother naming nitpick. Feel free to ignore this naming suggestion and all the other ones, but might suggest inverting this function and calling it something like \"OnlyContainsAssumedValidBlocks\". This seems less handwavy than \"ReliesOnAssumeValid\" because it's not clear what \"relies\" mean or who is relying.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T17:16:13Z",
      "diff_hunk" : "@@ -629,6 +625,10 @@ class CChainState\n      */\n     const std::optional<uint256> m_from_snapshot_blockhash;\n \n+    //! Return true if this chainstate relies on blocks that are assumed-valid. In\n+    //! practice this means it was created based on a UTXO snapshot.\n+    bool ReliesOnAssumeValid() { return m_from_snapshot_blockhash.has_value(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732083694",
      "id" : 732083694,
      "line" : 630,
      "node_id" : "PRRC_kwDOABII584rorXu",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 630,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 29,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732083694/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732083694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732089256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732089256"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nAlso suggested this in another comment, but maybe consider `s/assumedvalid_end/last_assumed_valid/` throughout this function, because \"end\" in c++ usually refers to first element after the range, not the last element in the range",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T17:23:19Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732089256",
      "id" : 732089256,
      "line" : 3641,
      "node_id" : "PRRC_kwDOABII584rosuo",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3641,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 20,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732089256/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732089256",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732090717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732090717"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nCould use structured bindings to save space and avoid potentially dangerous type mismatches:\r\n\r\n```diff\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3638,10 +3638,7 @@ bool BlockManager::LoadBlockIndex(\r\n     // setBlockIndexCandidates of the background chainstate.\r\n     bool saw_end_of_assumedvalid{false};\r\n \r\n-    std::optional<uint256> assumedvalid_end_blockhash;\r\n-    unsigned int assumedvalid_end_nchaintx;\r\n-    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\r\n-        chainman.getAssumedValidEnd();\r\n+    auto [assumedvalid_end_blockhash, assumedvalid_end_nchaintx] = chainman.getAssumedValidEnd();\r\n \r\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\r\n     {\r\n\r\n```\r\n\r\n",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T17:25:18Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732090717",
      "id" : 732090717,
      "line" : 3644,
      "node_id" : "PRRC_kwDOABII584rotFd",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3644,
      "original_position" : 23,
      "original_start_line" : 3641,
      "path" : "src/validation.cpp",
      "position" : 23,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732090717/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 3641,
      "start_side" : "RIGHT",
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732090717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732122417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732122417"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nIt's not so clear why adding blocks to `setBlockIndexCandidates` would prevent IBD from happening. The negative \"avoid doing X so Y doesn't happen\" logic here is a bit twisty, so I would try to describe more positively what this is doing. Something like:\r\n\r\n```c++\r\n// If a chain only supposed to contain assume valid blocks (because it is\r\n// validating them in the background) avoid adding later validated blocks,\r\n// because these would prevent earlier blocks from being downloaded and\r\n// validated.\r\nif (!chainstate->OnlyContainsAssumeValidBlocks() || block_assumed_valid) {\r\n    chainstate->setBlockIndexCandidates.insert(pindex);\r\n}\r\n```",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T18:07:48Z",
      "diff_hunk" : "@@ -3658,7 +3691,18 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                // If we're on an block index entry that is passed the end of the\n+                // assumed-valid region of the chain, avoid\n+                // adding this as a candidate tip to the background validation\n+                // chain, since that would prevent background IBD from happening.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732122417",
      "id" : 732122417,
      "line" : 3698,
      "node_id" : "PRRC_kwDOABII584ro00x",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3698,
      "original_position" : 70,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 70,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732122417/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:07:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732122417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732130569"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732130569"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nIs there a bug here? Comment is saying do not expect assumed valid blocks to have nTx, then the next line immediately skips assume valid logic if `nTx` is `0`",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T18:19:21Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732130569",
      "id" : 732130569,
      "line" : 3657,
      "node_id" : "PRRC_kwDOABII584ro20J",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3657,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 36,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732130569/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732130569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732132238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732132238"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nIt would be good to have a unit test that ensures the function is actually setting this.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T18:21:38Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =\n+                    assumedvalid_end_blockhash &&\n+                    pindex->GetBlockHash() == *assumedvalid_end_blockhash;\n+\n+                if (is_assumedvalid_end) {\n+                    // While starting up with an assumeutxo snapshot chain,\n+                    // we need to manually populate the nChainTx field of the\n+                    // base of the snapshot so that we can add assumed-valid\n+                    // candidate tips to setBlockIndexCandidates below.\n+                    //\n+                    // After the snapshot has completed validation, nChainTx\n+                    // values should compute normally.\n+                    assert(assumedvalid_end_nchaintx > 0);\n+                    pindex->nChainTx = assumedvalid_end_nchaintx;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732132238",
      "id" : 732132238,
      "line" : 3672,
      "node_id" : "PRRC_kwDOABII584ro3OO",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3672,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 52,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732132238/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732132238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732133664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732133664"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nIt would be good to have a unit test that ensure the function is adding the right blocks as candidates in both chains.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T18:23:38Z",
      "diff_hunk" : "@@ -3658,7 +3691,18 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                // If we're on an block index entry that is passed the end of the\n+                // assumed-valid region of the chain, avoid\n+                // adding this as a candidate tip to the background validation\n+                // chain, since that would prevent background IBD from happening.\n+                //\n+                // If there is no assumed-valid region of the chain,\n+                // !saw_end_of_assumedvalid will always be true.\n+                if (!saw_end_of_assumedvalid || chainstate->ReliesOnAssumeValid()) {\n+                    chainstate->setBlockIndexCandidates.insert(pindex);\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732133664",
      "id" : 732133664,
      "line" : 3704,
      "node_id" : "PRRC_kwDOABII584ro3kg",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3704,
      "original_position" : 76,
      "original_start_line" : 3702,
      "path" : "src/validation.cpp",
      "position" : 76,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732133664/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 3702,
      "start_side" : "RIGHT",
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732133664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732153494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732153494"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nMight write to assert when values are inconsistent:\r\n\r\n```c++\r\nif (nchaintx) {\r\n  assert(snapshotblockhash);\r\n  return {snapshotblockhash, *nchaintx};\r\n}\r\nreturn {nullopt, 0};\r\n```",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T18:51:40Z",
      "diff_hunk" : "@@ -5020,3 +5062,41 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{\n+    auto blockhash_op = SnapshotBlockhash();\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);\n+}\n+\n+std::optional<int> ChainstateManager::getSnapshotHeight()\n+{\n+    CBlockIndex* base = getSnapshotBaseBlock();\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}\n+\n+std::optional<unsigned int> ChainstateManager::getSnapshotNChainTx()\n+{\n+    auto height = getSnapshotHeight();\n+    if (!height) return std::nullopt;\n+\n+    auto au_data = ExpectedAssumeutxo(*height, ::Params());\n+    if (!au_data) {\n+        LogPrintf(\"%s: WARNING: no assumeutxo chainparams found for \" /* Continued */\n+            \"active snapshot (%s); something is wrong - please report this\\n\",\n+            __func__, (*this->SnapshotBlockhash()).ToString());\n+        return std::nullopt;\n+    }\n+\n+    return au_data->nChainTx;\n+}\n+\n+std::pair<std::optional<uint256>, unsigned int> ChainstateManager::getAssumedValidEnd()\n+{\n+    std::optional<uint256> snapshotblockhash = SnapshotBlockhash();\n+    std::optional<unsigned int> nchaintx = getSnapshotNChainTx();\n+\n+    if (!snapshotblockhash || !nchaintx) return {std::nullopt, 0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732153494",
      "id" : 732153494,
      "line" : 5100,
      "node_id" : "PRRC_kwDOABII584ro8aW",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 5100,
      "original_position" : 143,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 143,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732153494/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732153494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732182831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732182831"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"validation: have LoadBlockIndex account for snapshot use\" (51e614fdbc6a23ade324e9bd01228bf97df9bc5d)\r\n\r\nThere can be multiple blocks at the same height in vSortedByHeight, right? If so, this behavior seems nondeterministic, because it's sorted by (height, pointer address), so blocks at the assume valid height with pointer addresses _less_ than the assume valid height will be added to `setBlockIndexCandidates` and blocks at the same height with _greater_ pointer addresses will not by added to `setBlockIndexCandidates`.\r\n\r\nHaving this mutable bool variable in the for loop makes this loop more stateful and complicated anyway. I think maybe ideally the GetAssumeValid method should return a (hash, height, nchaintx) tuple instead of a (hash, nchaintx) pair. So the height would be known in advance and the code could look something like:\r\n\r\n```c++\r\nconst auto last_assumed_valid_block = chainman.GetLastAssumedValid();\r\nfor (const auto& [height, pindex] : vSortedByHeight) {\r\n    // Update nChainTx the last assumed valid block\r\n    if (last_assumed_valid_block) {\r\n        const auto& [av_hash, av_height, av_chaintx] = *last_assumed_valid_block;\r\n        if (pindex->GetBlockHash() == av_hash) {\r\n            pindex->nChainTx = av_chaintx;\r\n        }\r\n    }\r\n    ....\r\n    // Add block to chain candidates lists, unless the block is after the assumed valid\r\n    // height and the chain is only supposed to contain assumed valid blocks (if it's a\r\n    // background chain supposed to download and validate them).\r\n    const int av_height = last_assumed_valid_block ? std::get<1>(*last_assumed_valid_block) : std::numeric_limits<int>::max();\r\n    if (!chainstate->OnlyContainsAssumedValidBlocks() || pindex->nHeight <= av_height) {\r\n         chainstate->setBlockIndexCandidates.insert(pindex);\r\n    }\r\n}\r\n```\r\n",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-19T19:32:46Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =\n+                    assumedvalid_end_blockhash &&\n+                    pindex->GetBlockHash() == *assumedvalid_end_blockhash;\n+\n+                if (is_assumedvalid_end) {\n+                    // While starting up with an assumeutxo snapshot chain,\n+                    // we need to manually populate the nChainTx field of the\n+                    // base of the snapshot so that we can add assumed-valid\n+                    // candidate tips to setBlockIndexCandidates below.\n+                    //\n+                    // After the snapshot has completed validation, nChainTx\n+                    // values should compute normally.\n+                    assert(assumedvalid_end_nchaintx > 0);\n+                    pindex->nChainTx = assumedvalid_end_nchaintx;\n+                    saw_end_of_assumedvalid = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r732182831",
      "id" : 732182831,
      "line" : 3673,
      "node_id" : "PRRC_kwDOABII584rpDkv",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3673,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 53,
      "pull_request_review_id" : 778777785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732182831/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-19T20:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732182831",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Forgot to post this earlier. I wrote up a description of this PR when I started reviewing it that may be useful to others (or helpful to me if I got something wrong):\r\n\r\nCurrently, `BlockManager::LoadBlockIndex` adds all blocks that have downloaded transactions to the _active_ chain state's `setBlockIndexCandidates` set, ignoring the _background_ chain state.\r\n\r\nThis PR changes `ChainstateManager::LoadBlockIndex` to:\r\n\r\n- Update `setBlockIndexCandidates` in the background chain, not just the active chain. In the active chain, all blocks are added as before. In the background chain, only blocks below the snapshot height are added so the background chain will continue to download and validate them.\r\n- Sets `pindex->nChainTx` of the snapshot block to the value from snapshot metadata instead of leaving it 0.\r\n",
      "created_at" : "2021-10-19T20:20:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-947075033",
      "id" : 947075033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII5844czfZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947075033/reactions"
      },
      "updated_at" : "2021-10-19T20:20:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947075033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736021606"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736021606"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can be `auto blockhash_op` ?",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-25T22:50:51Z",
      "diff_hunk" : "@@ -5020,3 +5062,41 @@ void ChainstateManager::MaybeRebalanceCaches()\n         }\n     }\n }\n+\n+CBlockIndex* ChainstateManager::getSnapshotBaseBlock()\n+{\n+    auto blockhash_op = SnapshotBlockhash();\n+    if (!blockhash_op) return nullptr;\n+    return m_blockman.LookupBlockIndex(*blockhash_op);\n+}\n+\n+std::optional<int> ChainstateManager::getSnapshotHeight()\n+{\n+    CBlockIndex* base = getSnapshotBaseBlock();\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}\n+\n+std::optional<unsigned int> ChainstateManager::getSnapshotNChainTx()\n+{\n+    auto height = getSnapshotHeight();\n+    if (!height) return std::nullopt;\n+\n+    auto au_data = ExpectedAssumeutxo(*height, ::Params());\n+    if (!au_data) {\n+        LogPrintf(\"%s: WARNING: no assumeutxo chainparams found for \" /* Continued */\n+            \"active snapshot (%s); something is wrong - please report this\\n\",\n+            __func__, (*this->SnapshotBlockhash()).ToString());\n+        return std::nullopt;\n+    }\n+\n+    return au_data->nChainTx;\n+}\n+\n+std::pair<std::optional<uint256>, unsigned int> ChainstateManager::getAssumedValidEnd()\n+{\n+    std::optional<uint256> snapshotblockhash = SnapshotBlockhash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736021606",
      "id" : 736021606,
      "line" : 5097,
      "node_id" : "PRRC_kwDOABII584r3sxm",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 5097,
      "original_position" : 140,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 140,
      "pull_request_review_id" : 788689376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736021606/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-25T23:51:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736021606",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736036940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736036940"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree, I think if the new logic seeks to detect the last block of the assumed-valid range but assumed-valid blocks are expected to not have `nTx`, detection success cannot be reached if it's conditional on `nTx` > 0.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-25T23:30:06Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736036940",
      "id" : 736036940,
      "in_reply_to_id" : 732130569,
      "line" : 3657,
      "node_id" : "PRRC_kwDOABII584r3whM",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3657,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 36,
      "pull_request_review_id" : 788689376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736036940/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-25T23:51:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736036940",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736041983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736041983"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't the logical operator be an `&&` ?\r\n\r\nOtherwise I think if the end of the assumed-valid block region has been reached (`saw_end_of_assumevalid`=true) logic still enters this control flow.  And as such block index entries past the assumed-valid region of the chain are added to `setBlockIndexCandidates` (AFAIU from the comment just above).",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-25T23:43:56Z",
      "diff_hunk" : "@@ -3658,7 +3691,18 @@ bool BlockManager::LoadBlockIndex(\n         if (pindex->IsAssumedValid() ||\n                 (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                  (pindex->HaveTxsDownloaded() || pindex->pprev == nullptr))) {\n-            block_index_candidates.insert(pindex);\n+            for (CChainState* chainstate : chainman.GetAll()) {\n+                // If we're on an block index entry that is passed the end of the\n+                // assumed-valid region of the chain, avoid\n+                // adding this as a candidate tip to the background validation\n+                // chain, since that would prevent background IBD from happening.\n+                //\n+                // If there is no assumed-valid region of the chain,\n+                // !saw_end_of_assumedvalid will always be true.\n+                if (!saw_end_of_assumedvalid || chainstate->ReliesOnAssumeValid()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736041983",
      "id" : 736041983,
      "line" : 3702,
      "node_id" : "PRRC_kwDOABII584r3xv_",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3702,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 74,
      "pull_request_review_id" : 788689376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736041983/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-25T23:51:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736041983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736042920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736042920"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't see the causality between populating the `nChainTx` and adequately adding assumed-valid and assumed-valid _only_ blocks to `setBlockIndexCandidates` for snapshot chainstates ? I think conditional L3691 isn't pending on `nChainTx`.",
      "commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "created_at" : "2021-10-25T23:46:51Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =\n+                    assumedvalid_end_blockhash &&\n+                    pindex->GetBlockHash() == *assumedvalid_end_blockhash;\n+\n+                if (is_assumedvalid_end) {\n+                    // While starting up with an assumeutxo snapshot chain,\n+                    // we need to manually populate the nChainTx field of the\n+                    // base of the snapshot so that we can add assumed-valid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r736042920",
      "id" : 736042920,
      "line" : 3666,
      "node_id" : "PRRC_kwDOABII584r3x-o",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3666,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 46,
      "pull_request_review_id" : 788689376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736042920/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-25T23:51:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736042920",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r737666011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737666011"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good points - this is a little confusing; my fault for not being clearer in commentary. `nTx = 1` is set for all block headers during snapshot activation (https://github.com/jamesob/bitcoin/blob/2021-10-au-loadblockindex/src/validation.cpp#L4966-L4970) so this code will be executed for all assumed-valid blocks.\r\n\r\nNow that you've raised the point, I'm wondering if this code is even necessary. The modifications here are redundant with the ones we do during snapshot activation (linked above), and I think I added these here in LoadBlockIndex as a matter of necessity before I [thought to set the entire blockindex to dirty](https://github.com/jamesob/bitcoin/blob/2021-10-au-loadblockindex/src/validation.cpp#L4987) in the activation routine (thereby persisting all changes during FlushStateToDisk).\r\n\r\nI was going to say that having this code here is still valuable, if not a little confusing, in case there is some kind of interruption when writing the block index immediately after snapshot load... but changes to the block index [are batched](https://github.com/jamesob/bitcoin/blob/2021-10-au-loadblockindex/src/validation.cpp#L2022-L2024), so if we fail to write the block index, none of the chain will be considered assumedvalid!\r\n\r\nSo: maybe some of these LoadBlockIndex changes are unnecessary? I'll work to determine this today.",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-10-27T16:51:49Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r737666011",
      "id" : 737666011,
      "in_reply_to_id" : 732130569,
      "line" : 3637,
      "node_id" : "PRRC_kwDOABII584r9-Pb",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3637,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 26,
      "pull_request_review_id" : 790914212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737666011/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-27T16:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737666011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738785918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738785918"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point! Addressed in new changeset.",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-10-28T21:24:39Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =\n+                    assumedvalid_end_blockhash &&\n+                    pindex->GetBlockHash() == *assumedvalid_end_blockhash;\n+\n+                if (is_assumedvalid_end) {\n+                    // While starting up with an assumeutxo snapshot chain,\n+                    // we need to manually populate the nChainTx field of the\n+                    // base of the snapshot so that we can add assumed-valid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738785918",
      "id" : 738785918,
      "in_reply_to_id" : 736042920,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sCPp-",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3666,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 792442090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738785918/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-28T21:24:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738785918",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hey, review works! Thanks to commentary from @ryanofsky @ariard, I've found that of the original patch was unnecessary .I've pushed a much-simplified changeset that addresses the quandary I posted yesterday (https://github.com/bitcoin/bitcoin/pull/23174#discussion_r737666011). \r\n\r\nIt turns out that the earlier version of this patch contained some unnecessary code that was a vestige from before I was persisting changes to the block index during snapshot activation (added in #21526).  The new changeset just ensures that we don't add tip candidates which rely on assumed-valid blocks to the IBD chainstate. I think the changes are much more intuitive to follow, and a decent amount of code was dropped.\r\n\r\nFor anyone who was in doubt: reviewing code pays off!",
      "created_at" : "2021-10-28T21:37:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#issuecomment-954242458",
      "id" : 954242458,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23174",
      "node_id" : "IC_kwDOABII58444JWa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954242458/reactions"
      },
      "updated_at" : "2021-10-28T21:37:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/954242458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738794750"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738794750"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for this comment; this raises a really good point. The LoadBlockIndex() modifications are now no longer stateful, and instead we walk backwards for each pindex to see if any of its ancestors are assumed-valid (which is O(n**2) with chain size, but since LoadBlockIndex() happens once on startup that doesn't really matter).",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-10-28T21:41:04Z",
      "diff_hunk" : "@@ -3631,17 +3631,50 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n+    // If we have a historical region of the chain that is assumed-valid, we should\n+    // mark the last assumed-valid block that we see, since we then have to populate\n+    // the final nChainTx as well as prevent inclusion of blocks after that in the\n+    // setBlockIndexCandidates of the background chainstate.\n+    bool saw_end_of_assumedvalid{false};\n+\n+    std::optional<uint256> assumedvalid_end_blockhash;\n+    unsigned int assumedvalid_end_nchaintx;\n+    std::tie(assumedvalid_end_blockhash, assumedvalid_end_nchaintx) =\n+        chainman.getAssumedValidEnd();\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n+\n         // We can link the chain of blocks for which we've received transactions at some point.\n         // Pruned nodes may have deleted the block.\n+        //\n+        // Do not expect assumed-valid blocks to have nTx.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                bool is_assumedvalid_end =\n+                    assumedvalid_end_blockhash &&\n+                    pindex->GetBlockHash() == *assumedvalid_end_blockhash;\n+\n+                if (is_assumedvalid_end) {\n+                    // While starting up with an assumeutxo snapshot chain,\n+                    // we need to manually populate the nChainTx field of the\n+                    // base of the snapshot so that we can add assumed-valid\n+                    // candidate tips to setBlockIndexCandidates below.\n+                    //\n+                    // After the snapshot has completed validation, nChainTx\n+                    // values should compute normally.\n+                    assert(assumedvalid_end_nchaintx > 0);\n+                    pindex->nChainTx = assumedvalid_end_nchaintx;\n+                    saw_end_of_assumedvalid = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738794750",
      "id" : 738794750,
      "in_reply_to_id" : 732182831,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584sCRz-",
      "original_commit_id" : "51e614fdbc6a23ade324e9bd01228bf97df9bc5d",
      "original_line" : 3673,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 792453581,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738794750/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-28T21:41:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738794750",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738795942"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738795942"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note that this change is tautological, but done for clarity. `HaveTxsDownloaded()` should probably be removed since its name conflicts with assumed-valid blocks that have had their nChainTx value set during snapshot activation.",
      "commit_id" : "dbca47ece6b9a3a5e02969270bfab340fce286c0",
      "created_at" : "2021-10-28T21:43:30Z",
      "diff_hunk" : "@@ -3622,17 +3622,21 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n-        // We can link the chain of blocks for which we've received transactions at some point.\n+\n+        // We can link the chain of blocks for which we've received transactions at some point, or\n+        // blocks that are assumed-valid on the basis of snapshot load (see\n+        // PopulateAndValidateSnapshot()).\n         // Pruned nodes may have deleted the block.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->HaveTxsDownloaded()) {\n+                if (pindex->pprev->nChainTx > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23174#discussion_r738795942",
      "id" : 738795942,
      "line" : 3639,
      "node_id" : "PRRC_kwDOABII584sCSGm",
      "original_commit_id" : "2d7ecfb6e9847a0f0d9072e659a743bd231381cd",
      "original_line" : 3639,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 29,
      "pull_request_review_id" : 792455220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738795942/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-28T21:43:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/738795942",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   }
]
