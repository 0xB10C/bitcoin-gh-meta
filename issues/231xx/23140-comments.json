[
   {
      "author_association" : "MEMBER",
      "body" : "concept ACK ",
      "created_at" : "2021-09-29T21:38:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23140#issuecomment-930564175",
      "id" : 930564175,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23140",
      "node_id" : "IC_kwDOABII5843d0hP",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-29T21:38:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930564175",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Okay so here's what I think is happening:\r\n\r\nBefore this PR, we pick bucket+position randomly. If that's empty, we pick bucket+position randomly again.\r\nAfter this PR, we pick bucket+position randomly. If that's empty, we stay in the same bucket and go from randomly_picked_position to the end of the bucket. If haven't found anything, pick bucket+position randomly again.\r\n\r\n\r\n>That does mean that if a bucket has fewer entries, its entries are supposed to be picked more frequently.\r\n\r\nI think this is a good intuitive high-level justification of the proposed change.\r\n\r\nSo, I don't think this can be directly exploited at least easily (because we randomly hash), but it just makes the connectivity better overall, for a given node (and perhaps for the network overall)?\r\nSince a bucket is a means of diversification, making them all equal makes sense.\r\n\r\nBut also, after this change, ending up in a less-populated bucket is \"luckier\" for that node. That probably evens out across all nodes in the network, so that should be fine.\r\n\r\nConcept ACK.\r\n\r\n",
      "created_at" : "2021-09-30T11:10:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23140#issuecomment-931224193",
      "id" : 931224193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23140",
      "node_id" : "IC_kwDOABII5843gVqB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/931224193/reactions"
      },
      "updated_at" : "2021-09-30T11:10:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/931224193",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23140#discussion_r719302637"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23140"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719302637"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I think it's not particularly intuitive that this loop with `nUBucketPos ^ i` exhausts all values [0; ADDRMAN_BUCKET_SIZE). Perhaps we could use something more explicit/readable?",
      "commit_id" : "8fd67d88d181f59f73489ba95da95ce9d08ee08b",
      "created_at" : "2021-09-30T11:13:10Z",
      "diff_hunk" : "@@ -731,13 +736,18 @@ CAddrInfo CAddrMan::Select_(bool newOnly) const\n         // use a new node\n         double fChanceFactor = 1.0;\n         while (1) {\n+            // Pick a new bucket, and an initial position in that bucket.\n             int nUBucket = insecure_rand.randrange(ADDRMAN_NEW_BUCKET_COUNT);\n             int nUBucketPos = insecure_rand.randrange(ADDRMAN_BUCKET_SIZE);\n-            while (vvNew[nUBucket][nUBucketPos] == -1) {\n-                nUBucket = (nUBucket + insecure_rand.randbits(ADDRMAN_NEW_BUCKET_COUNT_LOG2)) % ADDRMAN_NEW_BUCKET_COUNT;\n-                nUBucketPos = (nUBucketPos + insecure_rand.randbits(ADDRMAN_BUCKET_SIZE_LOG2)) % ADDRMAN_BUCKET_SIZE;\n+            // Iterate over the positions of that bucket.\n+            int i;\n+            for (i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+                if (vvNew[nUBucket][nUBucketPos ^ i] != -1) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23140#discussion_r719302637",
      "id" : 719302637,
      "line" : 745,
      "node_id" : "PRRC_kwDOABII584q36_t",
      "original_commit_id" : "8fd67d88d181f59f73489ba95da95ce9d08ee08b",
      "original_line" : 745,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 36,
      "pull_request_review_id" : 767719331,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23140",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719302637/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-30T11:13:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719302637",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23140#discussion_r719514947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23140"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719514947"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It seems to me this operation will iterate over all the elements of a bucket, but not serially. So if a bucket is non empty it will always find an address in that bucket.\r\n\r\nIs the purpose of the above Xor is to add randomness into the search?\r\n\r\n> That does mean that if a bucket has fewer entries, its entries are supposed to be picked more frequently.\r\n\r\nI am also not understanding how the search will ensure the above? It seems irrespective of the bucket size, it will always find an entry if the bucket is non-empty.    ",
      "commit_id" : "8fd67d88d181f59f73489ba95da95ce9d08ee08b",
      "created_at" : "2021-09-30T15:20:05Z",
      "diff_hunk" : "@@ -713,13 +713,18 @@ CAddrInfo CAddrMan::Select_(bool newOnly) const\n         // use a tried node\n         double fChanceFactor = 1.0;\n         while (1) {\n+            // Pick a tried bucket, and an initial position in that bucket.\n             int nKBucket = insecure_rand.randrange(ADDRMAN_TRIED_BUCKET_COUNT);\n             int nKBucketPos = insecure_rand.randrange(ADDRMAN_BUCKET_SIZE);\n-            while (vvTried[nKBucket][nKBucketPos] == -1) {\n-                nKBucket = (nKBucket + insecure_rand.randbits(ADDRMAN_TRIED_BUCKET_COUNT_LOG2)) % ADDRMAN_TRIED_BUCKET_COUNT;\n-                nKBucketPos = (nKBucketPos + insecure_rand.randbits(ADDRMAN_BUCKET_SIZE_LOG2)) % ADDRMAN_BUCKET_SIZE;\n+            // Iterate over the positions of that bucket.\n+            int i;\n+            for (i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+                if (vvTried[nKBucket][nKBucketPos ^ i] != -1) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23140#discussion_r719514947",
      "id" : 719514947,
      "line" : 722,
      "node_id" : "PRRC_kwDOABII584q4u1D",
      "original_commit_id" : "8fd67d88d181f59f73489ba95da95ce9d08ee08b",
      "original_line" : 722,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : 13,
      "pull_request_review_id" : 768011287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23140",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719514947/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-30T15:22:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719514947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/36541669?v=4",
         "events_url" : "https://api.github.com/users/rajarshimaitra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rajarshimaitra/followers",
         "following_url" : "https://api.github.com/users/rajarshimaitra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rajarshimaitra",
         "id" : 36541669,
         "login" : "rajarshimaitra",
         "node_id" : "MDQ6VXNlcjM2NTQxNjY5",
         "organizations_url" : "https://api.github.com/users/rajarshimaitra/orgs",
         "received_events_url" : "https://api.github.com/users/rajarshimaitra/received_events",
         "repos_url" : "https://api.github.com/users/rajarshimaitra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rajarshimaitra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rajarshimaitra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23140#discussion_r719587967"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23140"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719587967"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The xor is just a simple way of iterating over the positions in the bucket. It's not more or less predictable than starting in a random position and incrementing until it wraps around and reaches the starting position again - just less code for doing something similar.\r\n\r\n> I am also not understanding how the search will ensure the above? It seems irrespective of the bucket size, it will always find an entry if the bucket is non-empty.\r\n\r\nThat's exactly what it does. The old code will pick a uniformly random bucket/position combination, among all of those that are non-empty. The new code will pick a uniformly random non-empty *bucket*, and then a random position in that bucket. That means that relatively speaking, if bucket A has 1 entry, and bucket B as 4 entries, and all other buckets are empty, A's entry will have 50% chance of being picked, and B's 4 entries will have 12.5% each. In the old code, each of the 5 entries would have 20%.",
      "commit_id" : "0f47d86f13ba90d9a9f7a6a67d65cefaa70c4303",
      "created_at" : "2021-09-30T16:48:01Z",
      "diff_hunk" : "@@ -713,13 +713,18 @@ CAddrInfo CAddrMan::Select_(bool newOnly) const\n         // use a tried node\n         double fChanceFactor = 1.0;\n         while (1) {\n+            // Pick a tried bucket, and an initial position in that bucket.\n             int nKBucket = insecure_rand.randrange(ADDRMAN_TRIED_BUCKET_COUNT);\n             int nKBucketPos = insecure_rand.randrange(ADDRMAN_BUCKET_SIZE);\n-            while (vvTried[nKBucket][nKBucketPos] == -1) {\n-                nKBucket = (nKBucket + insecure_rand.randbits(ADDRMAN_TRIED_BUCKET_COUNT_LOG2)) % ADDRMAN_TRIED_BUCKET_COUNT;\n-                nKBucketPos = (nKBucketPos + insecure_rand.randbits(ADDRMAN_BUCKET_SIZE_LOG2)) % ADDRMAN_BUCKET_SIZE;\n+            // Iterate over the positions of that bucket.\n+            int i;\n+            for (i = 0; i < ADDRMAN_BUCKET_SIZE; ++i) {\n+                if (vvTried[nKBucket][nKBucketPos ^ i] != -1) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23140#discussion_r719587967",
      "id" : 719587967,
      "in_reply_to_id" : 719514947,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584q5Ap_",
      "original_commit_id" : "8fd67d88d181f59f73489ba95da95ce9d08ee08b",
      "original_line" : 722,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/addrman.cpp",
      "position" : null,
      "pull_request_review_id" : 768109488,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23140",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719587967/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-30T16:50:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719587967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
