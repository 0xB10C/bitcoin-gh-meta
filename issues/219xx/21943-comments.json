[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21878 (Make all networking code mockable by vasild)\n* #21527 (net_processing: lock clean up by ajtowns)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-05-13T15:17:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#issuecomment-840631813",
      "id" : 840631813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21943",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MDYzMTgxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-13T15:17:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840631813",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632150326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632150326"
         }
      },
      "author_association" : "MEMBER",
      "body" : "157674ef213e6329215d1b7eb85dacbc23c468db\r\n\r\nThis snap catches nodes added in the above `AcceptConnection` where the new snap at the beginning doesn't. Is this intentional?",
      "commit_id" : "644726117a0102feac2e150c6dd10fd8bcb88bc0",
      "created_at" : "2021-05-13T22:50:29Z",
      "diff_hunk" : "@@ -1467,8 +1467,6 @@ void CConnman::SocketHandler()\n         }\n     }\n \n-    NodesSnapshot snap{*this};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632150326",
      "id" : 632150326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjE1MDMyNg==",
      "original_commit_id" : "157674ef213e6329215d1b7eb85dacbc23c468db",
      "original_line" : 1470,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 659359605,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-13T22:50:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632150326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632355737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632355737"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, good catch! No, that is not intentional.\r\n\r\nSo, the previous code did:\r\n\r\n1. `SocketEvents()`, adding ready sockets from `vNodes` to `{recv,send,error}_set`.\r\n2. `AcceptConnection()`, adding new entries to `vNodes`.\r\n3. Loop over `vNodes`, for each node:\r\n3.1. Check whether its socket is in one of `{recv,send,error}_set`. Observation - the sockets of nodes that were added in 2. will not be in any of `{recv,send,error}_set`, so for them all of `recvSet`, `sendSet` and `errorSet` will be `false`.\r\n3.2. `InactivityCheck()` - will also be done for nodes added in 2.\r\n\r\nThe new code will skip nodes added in 2. in the 3. loop. That's the same as the old code with respect to 3.1. The only difference is that the new code will not do `InactivityCheck()` for newly accepted nodes. I think that is ok because it is unlikely that a newly accepted peer would be considered inactive. In the rare case where this might have happened in the old code and will not happen in the new code, the new code will do the check on the next call to `SocketHandler()`.\r\n\r\nWhat do you think? Leave it as is or somehow ensure that new and old behave in an identical way?",
      "commit_id" : "644726117a0102feac2e150c6dd10fd8bcb88bc0",
      "created_at" : "2021-05-14T08:01:48Z",
      "diff_hunk" : "@@ -1467,8 +1467,6 @@ void CConnman::SocketHandler()\n         }\n     }\n \n-    NodesSnapshot snap{*this};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632355737",
      "id" : 632355737,
      "in_reply_to_id" : 632150326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjM1NTczNw==",
      "original_commit_id" : "157674ef213e6329215d1b7eb85dacbc23c468db",
      "original_line" : 1470,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 659612587,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-14T08:01:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632355737",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632360108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632360108"
         }
      },
      "author_association" : "MEMBER",
      "body" : "if `InactivityCheck` for new nodes is pointless then maybe move `// Accept new connections` to the end?",
      "commit_id" : "644726117a0102feac2e150c6dd10fd8bcb88bc0",
      "created_at" : "2021-05-14T08:08:49Z",
      "diff_hunk" : "@@ -1467,8 +1467,6 @@ void CConnman::SocketHandler()\n         }\n     }\n \n-    NodesSnapshot snap{*this};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632360108",
      "id" : 632360108,
      "in_reply_to_id" : 632150326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjM2MDEwOA==",
      "original_commit_id" : "157674ef213e6329215d1b7eb85dacbc23c468db",
      "original_line" : 1470,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 659617416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-14T08:08:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632360108",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2021-05-14T09:31:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#issuecomment-841130784",
      "id" : 841130784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21943",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTEzMDc4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-14T09:31:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841130784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632451114"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632451114"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added an explicit commit (a71b3f426) to show the intention. Putting the accept at the end somehow looked strange to me.\r\n\r\nMaybe these two actions deserve to be split in separate functions (ie split `SocketHandler()`): 1. checking which of the listening sockets are ready for IO and accepting connections on them and 2. checking which of the already connected sockets are ready for IO and processing them. Would require even more changes.",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-14T10:58:33Z",
      "diff_hunk" : "@@ -1467,8 +1467,6 @@ void CConnman::SocketHandler()\n         }\n     }\n \n-    NodesSnapshot snap{*this};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632451114",
      "id" : 632451114,
      "in_reply_to_id" : 632150326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjQ1MTExNA==",
      "original_commit_id" : "157674ef213e6329215d1b7eb85dacbc23c468db",
      "original_line" : 1470,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 659736046,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-14T10:58:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632451114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`644726117...92f62d9ea`: add an explicit commit that shows we intentionally don't process newly accepted nodes, as discussed in https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632150326",
      "created_at" : "2021-05-14T11:00:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#issuecomment-841173328",
      "id" : 841173328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21943",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTE3MzMyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-14T11:00:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841173328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632622357"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632622357"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since you are not splitting maybe add a comment for now like `// Take a snapshot of current nodes before acceptation new ones - new nodes are irrelevant below` or something like that.",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-14T15:45:27Z",
      "diff_hunk" : "@@ -1467,8 +1467,6 @@ void CConnman::SocketHandler()\n         }\n     }\n \n-    NodesSnapshot snap{*this};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632622357",
      "id" : 632622357,
      "in_reply_to_id" : 632150326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjYyMjM1Nw==",
      "original_commit_id" : "157674ef213e6329215d1b7eb85dacbc23c468db",
      "original_line" : 1470,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 659968284,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-14T15:45:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632622357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632651133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632651133"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could we move this call to `SocketEvents()` to below the _Accept new connections_ logic? I think it's simpler to reason about if we're not holding the nodes snapshot across the _Accept new connections_ logic.",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-14T16:30:39Z",
      "diff_hunk" : "@@ -1451,8 +1447,10 @@ void CConnman::SocketEvents(std::set<SOCKET> &recv_set, std::set<SOCKET> &send_s\n \n void CConnman::SocketHandler()\n {\n+    NodesSnapshot snap{*this};\n+\n     std::set<SOCKET> recv_set, send_set, error_set;\n-    SocketEvents(recv_set, send_set, error_set);\n+    SocketEvents(snap.Nodes(), recv_set, send_set, error_set);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632651133",
      "id" : 632651133,
      "line" : 1453,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjY1MTEzMw==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1453,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 109,
      "pull_request_review_id" : 660007293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-14T16:30:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632651133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-05-15T07:51:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#issuecomment-841617954",
      "id" : 841617954,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21943",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTYxNzk1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-15T07:51:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841617954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632966401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632966401"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry, ignore this. I've just realized that the _Accept new connections_ logic is using the `recv_set` that's populated by `SocketEvents()`.",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-15T14:58:09Z",
      "diff_hunk" : "@@ -1451,8 +1447,10 @@ void CConnman::SocketEvents(std::set<SOCKET> &recv_set, std::set<SOCKET> &send_s\n \n void CConnman::SocketHandler()\n {\n+    NodesSnapshot snap{*this};\n+\n     std::set<SOCKET> recv_set, send_set, error_set;\n-    SocketEvents(recv_set, send_set, error_set);\n+    SocketEvents(snap.Nodes(), recv_set, send_set, error_set);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632966401",
      "id" : 632966401,
      "in_reply_to_id" : 632651133,
      "line" : 1453,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjk2NjQwMQ==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1453,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 109,
      "pull_request_review_id" : 660365073,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-15T14:58:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632966401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632972362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632972362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm guessing you've defined this class within `CConnman` to enable access to the private members. You could instead define the class in `net.cpp` as a standalone by making `vNodes` and `cs_vNodes` protected & declaring `friend class NodesSnapshot` here. Seems nice to keep this mechanism that's only used internally out of the header file.\r\n\r\ndiff ðð½\r\n(also includes constifying `m_nodes_copy`)\r\n```diff \r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 5fd1bf754d..6040ee86be 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -110,6 +110,39 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\r\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\r\n std::string strSubVersion;\r\n\r\n+/**\r\n+ * RAII helper to atomically create a copy of `vNodes` and add a reference\r\n+ * to each of the nodes. The nodes are released when this object is destroyed.\r\n+ */\r\n+class NodesSnapshot\r\n+{\r\n+    public:\r\n+        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}, m_nodes_copy{m_connman.vNodes}\r\n+        {\r\n+            LOCK(m_connman.cs_vNodes);\r\n+            for (auto& node : m_nodes_copy) {\r\n+                node->AddRef();\r\n+            }\r\n+        }\r\n+\r\n+        ~NodesSnapshot()\r\n+        {\r\n+            LOCK(m_connman.cs_vNodes);\r\n+            for (auto& node : m_nodes_copy) {\r\n+                node->Release();\r\n+            }\r\n+        }\r\n+\r\n+        const std::vector<CNode*>& Nodes() const\r\n+        {\r\n+            return m_nodes_copy;\r\n+        }\r\n+\r\n+    private:\r\n+        const CConnman& m_connman;\r\n+        const CConnman& m_connman;\r\n+        const std::vector<CNode*> m_nodes_copy;\r\n+};\r\n+\r\n void CConnman::AddAddrFetch(const std::string& strDest)\r\n {\r\n     LOCK(m_addr_fetches_mutex);\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 846c4c0ece..f39c46c166 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -1021,6 +1021,10 @@ public:\r\n     /** Return true if we should disconnect the peer for failing an inactivity check. */\r\n     bool ShouldRunInactivityChecks(const CNode& node, std::optional<int64_t> now=std::nullopt) const;\r\n\r\n+protected:\r\n+    std::vector<CNode*> vNodes GUARDED_BY(cs_vNodes);\r\n+    mutable RecursiveMutex cs_vNodes;\r\n+\r\n private:\r\n     struct ListenSocket {\r\n     public:\r\n@@ -1153,9 +1157,7 @@ private:\r\n     RecursiveMutex m_addr_fetches_mutex;\r\n     std::vector<std::string> vAddedNodes GUARDED_BY(cs_vAddedNodes);\r\n     mutable RecursiveMutex cs_vAddedNodes;\r\n-    std::vector<CNode*> vNodes GUARDED_BY(cs_vNodes);\r\n     std::list<CNode*> vNodesDisconnected;\r\n-    mutable RecursiveMutex cs_vNodes;\r\n     std::atomic<NodeId> nLastNodeId{0};\r\n     unsigned int nPrevNodeCount{0};\r\n\r\n@@ -1276,40 +1278,7 @@ private:\r\n      */\r\n     std::vector<CService> m_onion_binds;\r\n\r\n-    /**\r\n-     * RAII helper to atomically create a copy of `vNodes` and add a reference\r\n-     * to each of the nodes. The nodes are released when this object is destroyed.\r\n-     */\r\n-    class NodesSnapshot\r\n-    {\r\n-    public:\r\n-        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}\r\n-        {\r\n-            LOCK(m_connman.cs_vNodes);\r\n-            m_nodes_copy = m_connman.vNodes;\r\n-            for (auto& node : m_nodes_copy) {\r\n-                node->AddRef();\r\n-            }\r\n-        }\r\n-\r\n-        ~NodesSnapshot()\r\n-        {\r\n-            LOCK(m_connman.cs_vNodes);\r\n-            for (auto& node : m_nodes_copy) {\r\n-                node->Release();\r\n-            }\r\n-        }\r\n-\r\n-        const std::vector<CNode*>& Nodes() const\r\n-        {\r\n-            return m_nodes_copy;\r\n-        }\r\n-\r\n-    private:\r\n-        const CConnman& m_connman;\r\n-        std::vector<CNode*> m_nodes_copy;\r\n-    };\r\n-\r\n+    friend class NodesSnapshot;\r\n     friend struct CConnmanTest;\r\n     friend struct ConnmanTestMsg;\r\n };\r\n```",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-15T15:20:46Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632972362",
      "id" : 632972362,
      "line" : 1283,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjk3MjM2Mg==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1283,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 38,
      "pull_request_review_id" : 660366732,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-15T15:49:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632972362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632972531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632972531"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    const NodesSnapshot snap{*this};\r\n```",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-15T15:22:20Z",
      "diff_hunk" : "@@ -1451,8 +1447,10 @@ void CConnman::SocketEvents(std::set<SOCKET> &recv_set, std::set<SOCKET> &send_s\n \n void CConnman::SocketHandler()\n {\n+    NodesSnapshot snap{*this};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632972531",
      "id" : 632972531,
      "line" : 1450,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjk3MjUzMQ==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1450,
      "original_position" : 105,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 105,
      "pull_request_review_id" : 660366732,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-15T15:48:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632972531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632972552"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632972552"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n            const NodesSnapshot snap{*this};\r\n```",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-15T15:22:32Z",
      "diff_hunk" : "@@ -2174,41 +2159,29 @@ void CConnman::ThreadMessageHandler()\n {\n     while (!flagInterruptMsgProc)\n     {\n-        std::vector<CNode*> vNodesCopy;\n-        {\n-            LOCK(cs_vNodes);\n-            vNodesCopy = vNodes;\n-            for (CNode* pnode : vNodesCopy) {\n-                pnode->AddRef();\n-            }\n-        }\n-\n         bool fMoreWork = false;\n \n-        for (CNode* pnode : vNodesCopy)\n         {\n-            if (pnode->fDisconnect)\n-                continue;\n+            NodesSnapshot snap{*this};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632972552",
      "id" : 632972552,
      "line" : 2165,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjk3MjU1Mg==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 2165,
      "original_position" : 161,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 161,
      "pull_request_review_id" : 660366732,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-15T15:48:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632972552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632973688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632973688"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        const std::vector<CNode*> m_nodes_copy;\r\n```\r\n\r\nCan `const` this if you add the constructor assignment to the initializer list (done in https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632972362 diff) ",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-15T15:33:32Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot\n+    {\n+    public:\n+        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            m_nodes_copy = m_connman.vNodes;\n+            for (auto& node : m_nodes_copy) {\n+                node->AddRef();\n+            }\n+        }\n+\n+        ~NodesSnapshot()\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            for (auto& node : m_nodes_copy) {\n+                node->Release();\n+            }\n+        }\n+\n+        const std::vector<CNode*>& Nodes() const\n+        {\n+            return m_nodes_copy;\n+        }\n+\n+    private:\n+        const CConnman& m_connman;\n+        std::vector<CNode*> m_nodes_copy;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632973688",
      "id" : 632973688,
      "line" : 1310,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjk3MzY4OA==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1310,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 65,
      "pull_request_review_id" : 660366732,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-15T15:49:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632973688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632974904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632974904"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I see that you haven't changed the behavior here, but I'm curious about the pre-existing logic: \r\n\r\nIs it necessary for `Release()` to be under the lock? \r\n\r\nIt makes sense that `AddRef` has to be under the lock so there isn't a race between a thread that is trying to operate on the node, and a thread that is evaluating for disconnect. However, with `Release`, I don't think there is actually potential for a race.. if `GetRefCount` returns > 0, `DisconnectNodes` will delay processing it. And since `nRefCount` is atomic, it shouldn't be a problem if multiple threads are trying to increment / decrement at the same time. Does this reasoning seem sound? Am I missing something? \r\n\r\ncc @narula ",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-15T15:44:42Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot\n+    {\n+    public:\n+        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            m_nodes_copy = m_connman.vNodes;\n+            for (auto& node : m_nodes_copy) {\n+                node->AddRef();\n+            }\n+        }\n+\n+        ~NodesSnapshot()\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            for (auto& node : m_nodes_copy) {\n+                node->Release();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632974904",
      "id" : 632974904,
      "line" : 1299,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjk3NDkwNA==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1299,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 54,
      "pull_request_review_id" : 660366732,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-15T16:03:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632974904",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632986434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632986434"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I like this. A few notes:\r\n\r\n- the diff as shown is corrupted (contains the `+        const CConnman& m_connman;` line twice) and so doesn't apply with `git apply`.\r\n- `vNodes` and `cs_vNodes` don't need to change to be protected. Friend classes have access to private members.\r\n- `NodesSnapshot` can be in the unnamed namespace since it's only needed in the net.cpp translation unit.",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-15T17:38:06Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632986434",
      "id" : 632986434,
      "in_reply_to_id" : 632972362,
      "line" : 1283,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjk4NjQzNA==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1283,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 38,
      "pull_request_review_id" : 660376603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-15T17:38:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632986434",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632987235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632987235"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The `m_nodes_copy{m_connman.vNodes}` in the initializer list is accessing `vNodes` without the `cs_vNodes` lock. You could update it to take the lock:\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 6040ee86be..d39aa14b20 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -117,7 +117,9 @@ std::string strSubVersion;\r\n class NodesSnapshot\r\n {\r\n     public:\r\n-        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}, m_nodes_copy{m_connman.vNodes}\r\n+        explicit NodesSnapshot(const CConnman& connman) :\r\n+            m_connman{connman},\r\n+            m_nodes_copy{WITH_LOCK(m_connman.cs_vNodes, return m_connman.vNodes;)}\r\n         {\r\n             LOCK(m_connman.cs_vNodes);\r\n             for (auto& node : m_nodes_copy) {\r\n```\r\n\r\nBut that would introduce a race condition if another thread deleted a node between the initializer list and the ctor being run.\r\n\r\nI think better just to assign `m_nodes_copy` in the ctor.",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-15T17:47:12Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632987235",
      "id" : 632987235,
      "in_reply_to_id" : 632972362,
      "line" : 1283,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjk4NzIzNQ==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1283,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 38,
      "pull_request_review_id" : 660377240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-15T17:47:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632987235",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632987838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632987838"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is correct. There's no need to hold `cs_vNodes` when calling `node->Release();`\r\n\r\nRemoving this lock means that the `m_connman` member is no longer required.",
      "commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "created_at" : "2021-05-15T17:52:59Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot\n+    {\n+    public:\n+        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            m_nodes_copy = m_connman.vNodes;\n+            for (auto& node : m_nodes_copy) {\n+                node->AddRef();\n+            }\n+        }\n+\n+        ~NodesSnapshot()\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            for (auto& node : m_nodes_copy) {\n+                node->Release();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632987838",
      "id" : 632987838,
      "in_reply_to_id" : 632974904,
      "line" : 1299,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjk4NzgzOA==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1299,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 54,
      "pull_request_review_id" : 660377592,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-15T17:52:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632987838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632989196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632989196"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What do you think about just wrapping the m_nodes_copy `begin()` and `end()` functions:\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 6040ee86be..5388af02e3 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -116,6 +116,10 @@ std::string strSubVersion;\r\n  */\r\n class NodesSnapshot\r\n {\r\n+    private:\r\n+        const CConnman& m_connman;\r\n+        const std::vector<CNode*> m_nodes_copy;\r\n+\r\n     public:\r\n         explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}, m_nodes_copy{m_connman.vNodes}\r\n         {\r\n@@ -133,14 +137,18 @@ class NodesSnapshot\r\n             }\r\n         }\r\n \r\n-        const std::vector<CNode*>& Nodes() const\r\n+        using iterator = decltype(m_nodes_copy.begin());\r\n+\r\n+        iterator begin()\r\n         {\r\n-            return m_nodes_copy;\r\n+            return m_nodes_copy.begin();\r\n+        }\r\n+\r\n+        iterator end()\r\n+        {\r\n+            return m_nodes_copy.end();\r\n         }\r\n \r\n-    private:\r\n-        const CConnman& m_connman;\r\n-        const std::vector<CNode*> m_nodes_copy;\r\n };\r\n```\r\n\r\nand then the client code can use a `NodeSnapshot` in range-based loops, eg:\r\n\r\n```diff\r\nâ git d\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 6040ee86be..5388af02e3 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -1501,7 +1509,7 @@ void CConnman::SocketHandler()\r\n     //\r\n     // Service each socket\r\n     //\r\n-    for (CNode* pnode : snap.Nodes()) {\r\n+    for (CNode* pnode : snap) {\r\n         if (interruptNet)\r\n             return;\r\n \r\n```",
      "commit_id" : "00a8c943d7df3e5a58e55928a8600e062c5b4ad5",
      "created_at" : "2021-05-15T18:07:45Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot\n+    {\n+    public:\n+        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            m_nodes_copy = m_connman.vNodes;\n+            for (auto& node : m_nodes_copy) {\n+                node->AddRef();\n+            }\n+        }\n+\n+        ~NodesSnapshot()\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            for (auto& node : m_nodes_copy) {\n+                node->Release();\n+            }\n+        }\n+\n+        const std::vector<CNode*>& Nodes() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r632989196",
      "id" : 632989196,
      "line" : 1302,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjk4OTE5Ng==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1302,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 57,
      "pull_request_review_id" : 660378433,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-15T18:07:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632989196",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633599186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633599186"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, a comment is warranted. Added:\r\n\r\n```cpp\r\n    // Accept new connections. Done after taking a snapshot of the nodes because\r\n    // `AcceptConnection()` will add new entries to `vNodes` which are unwanted\r\n    // in the loop below because:\r\n    // - all of `recvSet`, `sendSet` and `errorSet` will be `false` for them\r\n    // - `InactivityCheck()` will either be a noop or will wrongly command to\r\n    //   disconnect the node before we have tried sending or receiving anything\r\n    //   to it.\r\n```",
      "commit_id" : "00a8c943d7df3e5a58e55928a8600e062c5b4ad5",
      "created_at" : "2021-05-17T14:48:38Z",
      "diff_hunk" : "@@ -1467,8 +1467,6 @@ void CConnman::SocketHandler()\n         }\n     }\n \n-    NodesSnapshot snap{*this};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633599186",
      "id" : 633599186,
      "in_reply_to_id" : 632150326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzU5OTE4Ng==",
      "original_commit_id" : "157674ef213e6329215d1b7eb85dacbc23c468db",
      "original_line" : 1470,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 661060828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T14:48:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633599186",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633613085"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633613085"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm guessing you've defined this class within CConnman to enable access to the private members.\r\n\r\nNo, I did it to minimize the scope of the newly added class.\r\n\r\n> Seems nice to keep this mechanism that's only used internally out of the header file.\r\n\r\nWhy? It is used internally by `CConnman` and is defined in its `private:` section. If defined in `net.cpp` that would broaden its scope unnecessary.",
      "commit_id" : "00a8c943d7df3e5a58e55928a8600e062c5b4ad5",
      "created_at" : "2021-05-17T15:04:40Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633613085",
      "id" : 633613085,
      "in_reply_to_id" : 632972362,
      "line" : 1283,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzYxMzA4NQ==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1283,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 38,
      "pull_request_review_id" : 661079909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T15:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633613085",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633614762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633614762"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "00a8c943d7df3e5a58e55928a8600e062c5b4ad5",
      "created_at" : "2021-05-17T15:06:47Z",
      "diff_hunk" : "@@ -1451,8 +1447,10 @@ void CConnman::SocketEvents(std::set<SOCKET> &recv_set, std::set<SOCKET> &send_s\n \n void CConnman::SocketHandler()\n {\n+    NodesSnapshot snap{*this};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633614762",
      "id" : 633614762,
      "in_reply_to_id" : 632972531,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzYxNDc2Mg==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1450,
      "original_position" : 105,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 661082288,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T15:06:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633614762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633614896"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633614896"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "00a8c943d7df3e5a58e55928a8600e062c5b4ad5",
      "created_at" : "2021-05-17T15:06:57Z",
      "diff_hunk" : "@@ -2174,41 +2159,29 @@ void CConnman::ThreadMessageHandler()\n {\n     while (!flagInterruptMsgProc)\n     {\n-        std::vector<CNode*> vNodesCopy;\n-        {\n-            LOCK(cs_vNodes);\n-            vNodesCopy = vNodes;\n-            for (CNode* pnode : vNodesCopy) {\n-                pnode->AddRef();\n-            }\n-        }\n-\n         bool fMoreWork = false;\n \n-        for (CNode* pnode : vNodesCopy)\n         {\n-            if (pnode->fDisconnect)\n-                continue;\n+            NodesSnapshot snap{*this};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633614896",
      "id" : 633614896,
      "in_reply_to_id" : 632972552,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzYxNDg5Ng==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 2165,
      "original_position" : 161,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 661082490,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T15:06:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633614896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633616340"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633616340"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The copying and `AddRef()` should be done under the lock.",
      "commit_id" : "00a8c943d7df3e5a58e55928a8600e062c5b4ad5",
      "created_at" : "2021-05-17T15:08:39Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot\n+    {\n+    public:\n+        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            m_nodes_copy = m_connman.vNodes;\n+            for (auto& node : m_nodes_copy) {\n+                node->AddRef();\n+            }\n+        }\n+\n+        ~NodesSnapshot()\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            for (auto& node : m_nodes_copy) {\n+                node->Release();\n+            }\n+        }\n+\n+        const std::vector<CNode*>& Nodes() const\n+        {\n+            return m_nodes_copy;\n+        }\n+\n+    private:\n+        const CConnman& m_connman;\n+        std::vector<CNode*> m_nodes_copy;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633616340",
      "id" : 633616340,
      "in_reply_to_id" : 632973688,
      "line" : 1308,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzYxNjM0MA==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1308,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 63,
      "pull_request_review_id" : 661084484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T15:08:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633616340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633617646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633617646"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Is it necessary for `Release()` to be under the lock?\r\n\r\nThe lock has two effects:\r\n* All `Release()`s happen atomically together. If removed, then other threads could observe some nodes from the snapshot released and some not yet released. I think that is ok.\r\n* No memory reordering can happen. The `nRefCount--` on the atomic variable has the same effect because `--` is equivalent to [`fetch_sub()`](https://en.cppreference.com/w/cpp/atomic/atomic/fetch_sub) which uses [`memory_order_seq_cst`](https://en.cppreference.com/w/cpp/atomic/memory_order) by default.\r\n\r\n\r\nRemoved the lock and simplified `NodesSnapshot`, thanks!",
      "commit_id" : "00a8c943d7df3e5a58e55928a8600e062c5b4ad5",
      "created_at" : "2021-05-17T15:10:02Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot\n+    {\n+    public:\n+        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            m_nodes_copy = m_connman.vNodes;\n+            for (auto& node : m_nodes_copy) {\n+                node->AddRef();\n+            }\n+        }\n+\n+        ~NodesSnapshot()\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            for (auto& node : m_nodes_copy) {\n+                node->Release();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633617646",
      "id" : 633617646,
      "in_reply_to_id" : 632974904,
      "line" : 1298,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzYxNzY0Ng==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1298,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 53,
      "pull_request_review_id" : 661087509,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T15:10:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633617646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633625021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633625021"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think both ways would work.\r\n\r\nThe begin/end variant seems to be a bit more code - it saves just `.Nodes()` from the callers but has two methods and is also less friendly to grepping and code navigation - now I can point my \"IDE\" to `Nodes()` on the line `for (CNode* pnode : snap.Nodes()) {` and see what it returns or its definition. Not so with the `for (CNode* pnode : snap) {` line.\r\n\r\nThat said, I am fine either way but have a slight preference for the `.Nodes()` variant.",
      "commit_id" : "00a8c943d7df3e5a58e55928a8600e062c5b4ad5",
      "created_at" : "2021-05-17T15:17:35Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot\n+    {\n+    public:\n+        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            m_nodes_copy = m_connman.vNodes;\n+            for (auto& node : m_nodes_copy) {\n+                node->AddRef();\n+            }\n+        }\n+\n+        ~NodesSnapshot()\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            for (auto& node : m_nodes_copy) {\n+                node->Release();\n+            }\n+        }\n+\n+        const std::vector<CNode*>& Nodes() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633625021",
      "id" : 633625021,
      "in_reply_to_id" : 632989196,
      "line" : 1302,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzYyNTAyMQ==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1302,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 57,
      "pull_request_review_id" : 661096340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T15:17:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633625021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`92f62d9...00a8c94`: address review suggestions",
      "created_at" : "2021-05-17T15:19:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#issuecomment-842411377",
      "id" : 842411377,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21943",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MjQxMTM3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-17T15:19:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842411377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633628981"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633628981"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No strong preference. Just pointing out an alternative. I'll mark this as resolved.",
      "commit_id" : "00a8c943d7df3e5a58e55928a8600e062c5b4ad5",
      "created_at" : "2021-05-17T15:22:19Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot\n+    {\n+    public:\n+        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            m_nodes_copy = m_connman.vNodes;\n+            for (auto& node : m_nodes_copy) {\n+                node->AddRef();\n+            }\n+        }\n+\n+        ~NodesSnapshot()\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            for (auto& node : m_nodes_copy) {\n+                node->Release();\n+            }\n+        }\n+\n+        const std::vector<CNode*>& Nodes() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633628981",
      "id" : 633628981,
      "in_reply_to_id" : 632989196,
      "line" : 1302,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzYyODk4MQ==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1302,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 57,
      "pull_request_review_id" : 661101634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T15:22:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633628981",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633891308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633891308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why `AddRef`? @amitiuttarwar suggestion can be accomplished with\r\n```diff\r\n         explicit NodesSnapshot(const CConnman& connman)\r\n+            : m_nodes_copy(WITH_LOCK(connman.cs_vNodes, return connman.vNodes))\r\n         {\r\n-            LOCK(connman.cs_vNodes);\r\n-            m_nodes_copy = connman.vNodes;\r\n             for (auto& node : m_nodes_copy) {\r\n                 node->AddRef();\r\n             }\r\n@@ -1305,7 +1304,7 @@ private:\r\n         }\r\n\r\n     private:\r\n-        std::vector<CNode*> m_nodes_copy;\r\n+        const std::vector<CNode*> m_nodes_copy;\r\n     };\r\n```\r\n\r\nNever mind, I see why `AddRef` needs to be under the lock. It's still possible to use the `WITH_LOCK` approach so `m_nodes_copy` could be is const, but not worth it IMO.",
      "commit_id" : "00a8c943d7df3e5a58e55928a8600e062c5b4ad5",
      "created_at" : "2021-05-17T21:50:41Z",
      "diff_hunk" : "@@ -1257,6 +1276,40 @@ class CConnman\n      */\n     std::vector<CService> m_onion_binds;\n \n+    /**\n+     * RAII helper to atomically create a copy of `vNodes` and add a reference\n+     * to each of the nodes. The nodes are released when this object is destroyed.\n+     */\n+    class NodesSnapshot\n+    {\n+    public:\n+        explicit NodesSnapshot(const CConnman& connman) : m_connman{connman}\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            m_nodes_copy = m_connman.vNodes;\n+            for (auto& node : m_nodes_copy) {\n+                node->AddRef();\n+            }\n+        }\n+\n+        ~NodesSnapshot()\n+        {\n+            LOCK(m_connman.cs_vNodes);\n+            for (auto& node : m_nodes_copy) {\n+                node->Release();\n+            }\n+        }\n+\n+        const std::vector<CNode*>& Nodes() const\n+        {\n+            return m_nodes_copy;\n+        }\n+\n+    private:\n+        const CConnman& m_connman;\n+        std::vector<CNode*> m_nodes_copy;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21943#discussion_r633891308",
      "id" : 633891308,
      "in_reply_to_id" : 632973688,
      "line" : 1308,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzg5MTMwOA==",
      "original_commit_id" : "92f62d9ea43c6861409916256a403417d80c0932",
      "original_line" : 1308,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 63,
      "pull_request_review_id" : 661454158,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T21:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633891308",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
