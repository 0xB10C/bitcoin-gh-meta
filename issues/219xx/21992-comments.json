[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21875 (doc: fix spelling by jbampton)\n* #21841 (Send fewer feefilter messages (avoid the wobbling number issue) by rebroad)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-05-19T02:38:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21992#issuecomment-843699362",
      "id" : 843699362,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21992",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MzY5OTM2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-19T15:12:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/843699362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21992#discussion_r635043699"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21992"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635043699"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd suggest also moving the conditional logic into the `MaybeSendFeeFilter()` function. The compiler will inline the function anyway, so there's no difference in the compiled code, and keeping all the feefilter logic together makes it easier to understand. Suggested diff:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex cc9e38afbb..2acf4c2d62 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -4226,6 +4226,12 @@ void PeerManagerImpl::MaybeSendFeefilter(CNode& pto, std::chrono::microseconds c\r\n {\r\n     AssertLockHeld(cs_main);\r\n \r\n+    if (m_ignore_incoming_txs) return;\r\n+    if (!pto.m_tx_relay) return;\r\n+    if (pto.GetCommonVersion() < FEEFILTER_VERSION) return;\r\n+    // peers with the forcerelay permission should not filter txs to us\r\n+    if (pto.HasPermission(PF_FORCERELAY)) return;\r\n+\r\n     CAmount currentFilter = m_mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\r\n     static FeeFilterRounder g_filter_rounder{CFeeRate{DEFAULT_MIN_RELAY_TX_FEE}};\r\n \r\n@@ -4745,16 +4751,7 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\r\n         if (!vGetData.empty())\r\n             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\r\n \r\n-        //\r\n-        // Message: feefilter\r\n-        //\r\n-        if (pto->m_tx_relay != nullptr &&\r\n-            !m_ignore_incoming_txs &&\r\n-            pto->GetCommonVersion() >= FEEFILTER_VERSION &&\r\n-            !pto->HasPermission(PF_FORCERELAY) // peers with the forcerelay permission should not filter txs to us\r\n-        ) {\r\n-            MaybeSendFeefilter(*pto, current_time);\r\n-        }\r\n+        MaybeSendFeefilter(*pto, current_time);\r\n     } // release cs_main\r\n     return true;\r\n }\r\n```",
      "commit_id" : "b7311edce96ee64678bc9e8d4c08d253c1a663b9",
      "created_at" : "2021-05-19T08:54:43Z",
      "diff_hunk" : "@@ -4711,39 +4751,9 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         if (pto->m_tx_relay != nullptr &&\n             !m_ignore_incoming_txs &&\n             pto->GetCommonVersion() >= FEEFILTER_VERSION &&\n-            gArgs.GetBoolArg(\"-feefilter\", DEFAULT_FEEFILTER) &&\n             !pto->HasPermission(PF_FORCERELAY) // peers with the forcerelay permission should not filter txs to us\n         ) {\n-            CAmount currentFilter = m_mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n-            static FeeFilterRounder g_filter_rounder{CFeeRate{DEFAULT_MIN_RELAY_TX_FEE}};\n-            if (m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\n-                // Received tx-inv messages are discarded when the active\n-                // chainstate is in IBD, so tell the peer to not send them.\n-                currentFilter = MAX_MONEY;\n-            } else {\n-                static const CAmount MAX_FILTER{g_filter_rounder.round(MAX_MONEY)};\n-                if (pto->m_tx_relay->lastSentFeeFilter == MAX_FILTER) {\n-                    // Send the current filter if we sent MAX_FILTER previously\n-                    // and made it out of IBD.\n-                    pto->m_tx_relay->m_next_send_feefilter = 0us;\n-                }\n-            }\n-            if (current_time > pto->m_tx_relay->m_next_send_feefilter) {\n-                CAmount filterToSend = g_filter_rounder.round(currentFilter);\n-                // We always have a fee filter of at least minRelayTxFee\n-                filterToSend = std::max(filterToSend, ::minRelayTxFee.GetFeePerK());\n-                if (filterToSend != pto->m_tx_relay->lastSentFeeFilter) {\n-                    m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::FEEFILTER, filterToSend));\n-                    pto->m_tx_relay->lastSentFeeFilter = filterToSend;\n-                }\n-                pto->m_tx_relay->m_next_send_feefilter = PoissonNextSend(current_time, AVG_FEEFILTER_BROADCAST_INTERVAL);\n-            }\n-            // If the fee filter has changed substantially and it's still more than MAX_FEEFILTER_CHANGE_DELAY\n-            // until scheduled broadcast, then move the broadcast to within MAX_FEEFILTER_CHANGE_DELAY.\n-            else if (current_time + MAX_FEEFILTER_CHANGE_DELAY < pto->m_tx_relay->m_next_send_feefilter &&\n-                     (currentFilter < 3 * pto->m_tx_relay->lastSentFeeFilter / 4 || currentFilter > 4 * pto->m_tx_relay->lastSentFeeFilter / 3)) {\n-                pto->m_tx_relay->m_next_send_feefilter = current_time + GetRandomDuration<std::chrono::microseconds>(MAX_FEEFILTER_CHANGE_DELAY);\n-            }\n+            MaybeSendFeefilter(*pto, current_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21992#discussion_r635043699",
      "id" : 635043699,
      "line" : 4756,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTA0MzY5OQ==",
      "original_commit_id" : "b7311edce96ee64678bc9e8d4c08d253c1a663b9",
      "original_line" : 4756,
      "original_position" : 91,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 91,
      "pull_request_review_id" : 662935744,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21992",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-19T08:55:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635043699",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-05-19T10:58:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21992#issuecomment-843990256",
      "id" : 843990256,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21992",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0Mzk5MDI1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-19T10:58:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/843990256",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21992#discussion_r635292608"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21992"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635292608"
         }
      },
      "author_association" : "NONE",
      "body" : "Many thanks!\r\nI agree, it's much cleaner. I applied your suggestion (after rebase, `PF_FORCERELAY` is now `NetPermissionFlags::ForceRelay`).",
      "commit_id" : "b0b62138b7b9e27ced562fe4859184f4d9bb94c5",
      "created_at" : "2021-05-19T14:24:40Z",
      "diff_hunk" : "@@ -4711,39 +4751,9 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         if (pto->m_tx_relay != nullptr &&\n             !m_ignore_incoming_txs &&\n             pto->GetCommonVersion() >= FEEFILTER_VERSION &&\n-            gArgs.GetBoolArg(\"-feefilter\", DEFAULT_FEEFILTER) &&\n             !pto->HasPermission(PF_FORCERELAY) // peers with the forcerelay permission should not filter txs to us\n         ) {\n-            CAmount currentFilter = m_mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n-            static FeeFilterRounder g_filter_rounder{CFeeRate{DEFAULT_MIN_RELAY_TX_FEE}};\n-            if (m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\n-                // Received tx-inv messages are discarded when the active\n-                // chainstate is in IBD, so tell the peer to not send them.\n-                currentFilter = MAX_MONEY;\n-            } else {\n-                static const CAmount MAX_FILTER{g_filter_rounder.round(MAX_MONEY)};\n-                if (pto->m_tx_relay->lastSentFeeFilter == MAX_FILTER) {\n-                    // Send the current filter if we sent MAX_FILTER previously\n-                    // and made it out of IBD.\n-                    pto->m_tx_relay->m_next_send_feefilter = 0us;\n-                }\n-            }\n-            if (current_time > pto->m_tx_relay->m_next_send_feefilter) {\n-                CAmount filterToSend = g_filter_rounder.round(currentFilter);\n-                // We always have a fee filter of at least minRelayTxFee\n-                filterToSend = std::max(filterToSend, ::minRelayTxFee.GetFeePerK());\n-                if (filterToSend != pto->m_tx_relay->lastSentFeeFilter) {\n-                    m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::FEEFILTER, filterToSend));\n-                    pto->m_tx_relay->lastSentFeeFilter = filterToSend;\n-                }\n-                pto->m_tx_relay->m_next_send_feefilter = PoissonNextSend(current_time, AVG_FEEFILTER_BROADCAST_INTERVAL);\n-            }\n-            // If the fee filter has changed substantially and it's still more than MAX_FEEFILTER_CHANGE_DELAY\n-            // until scheduled broadcast, then move the broadcast to within MAX_FEEFILTER_CHANGE_DELAY.\n-            else if (current_time + MAX_FEEFILTER_CHANGE_DELAY < pto->m_tx_relay->m_next_send_feefilter &&\n-                     (currentFilter < 3 * pto->m_tx_relay->lastSentFeeFilter / 4 || currentFilter > 4 * pto->m_tx_relay->lastSentFeeFilter / 3)) {\n-                pto->m_tx_relay->m_next_send_feefilter = current_time + GetRandomDuration<std::chrono::microseconds>(MAX_FEEFILTER_CHANGE_DELAY);\n-            }\n+            MaybeSendFeefilter(*pto, current_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21992#discussion_r635292608",
      "id" : 635292608,
      "in_reply_to_id" : 635043699,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTI5MjYwOA==",
      "original_commit_id" : "b7311edce96ee64678bc9e8d4c08d253c1a663b9",
      "original_line" : 4756,
      "original_position" : 91,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 663277604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21992",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-19T14:24:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635292608",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/35263201?v=4",
         "events_url" : "https://api.github.com/users/amadeuszpawlik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amadeuszpawlik/followers",
         "following_url" : "https://api.github.com/users/amadeuszpawlik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amadeuszpawlik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amadeuszpawlik",
         "id" : 35263201,
         "login" : "amadeuszpawlik",
         "node_id" : "MDQ6VXNlcjM1MjYzMjAx",
         "organizations_url" : "https://api.github.com/users/amadeuszpawlik/orgs",
         "received_events_url" : "https://api.github.com/users/amadeuszpawlik/received_events",
         "repos_url" : "https://api.github.com/users/amadeuszpawlik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amadeuszpawlik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amadeuszpawlik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amadeuszpawlik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> net: Remove -feefilter option, as it is debug only and isn't used in any tests\r\n\r\nNot a NACK by any means (I don't know the entire history here) but fwiw, \"debug only\" doesn't necessarily mean test-only. Sometimes obscure options that only make sense in relatively rare conditions, or during development, are labeled as such as well.",
      "created_at" : "2021-05-19T14:46:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21992#issuecomment-844176885",
      "id" : 844176885,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21992",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NDE3Njg4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-19T14:46:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844176885",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It looks like this configuration option was added by @morcos in 9e072a6e66ef: *\"Implement \"feefilter\" P2P message. The \"feefilter\" p2p message is used to inform other nodes of your mempool min fee which is the feerate that any new transaction must meet to be accepted to your mempool.  This will allow them to filter invs to you according to this feerate.\"*\r\n\r\nPer https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-February/012449.html, its goal was to help reduce\r\nunnecessary network traffic.",
      "created_at" : "2021-05-19T14:59:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21992#issuecomment-844189161",
      "id" : 844189161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21992",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NDE4OTE2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-19T15:09:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844189161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21992#discussion_r635333530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21992"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635333530"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`static const MAX_FILTER` seems to only be used in the following line; maybe use it directly in the conditional.\r\n\r\n```diff\r\n-        static const CAmount MAX_FILTER{g_filter_rounder.round(MAX_MONEY)};\r\n-        if (pto.m_tx_relay->lastSentFeeFilter == MAX_FILTER) {\r\n-            // Send the current filter if we sent MAX_FILTER previously\r\n+        if (pto.m_tx_relay->lastSentFeeFilter == g_filter_rounder.round(MAX_MONEY)) {\r\n+            // Send the current filter if we previously sent the maximum filter of MAX_MONEY\r\n```\r\n",
      "commit_id" : "b0b62138b7b9e27ced562fe4859184f4d9bb94c5",
      "created_at" : "2021-05-19T15:06:13Z",
      "diff_hunk" : "@@ -4219,6 +4222,49 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds curre\n     }\n }\n \n+void PeerManagerImpl::MaybeSendFeefilter(CNode& pto, std::chrono::microseconds current_time)\n+{\n+    AssertLockHeld(cs_main);\n+\n+    if (m_ignore_incoming_txs) return;\n+    if (!pto.m_tx_relay) return;\n+    if (pto.GetCommonVersion() < FEEFILTER_VERSION) return;\n+    // peers with the forcerelay permission should not filter txs to us\n+    if (pto.HasPermission(NetPermissionFlags::ForceRelay)) return;\n+\n+    CAmount currentFilter = m_mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n+    static FeeFilterRounder g_filter_rounder{CFeeRate{DEFAULT_MIN_RELAY_TX_FEE}};\n+\n+    if (m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\n+        // Received tx-inv messages are discarded when the active\n+        // chainstate is in IBD, so tell the peer to not send them.\n+        currentFilter = MAX_MONEY;\n+    } else {\n+        static const CAmount MAX_FILTER{g_filter_rounder.round(MAX_MONEY)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21992#discussion_r635333530",
      "id" : 635333530,
      "line" : 4243,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTMzMzUzMA==",
      "original_commit_id" : "b0b62138b7b9e27ced562fe4859184f4d9bb94c5",
      "original_line" : 4243,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 663331789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21992",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-19T15:06:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635333530",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21992#discussion_r635391366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21992"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635391366"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks for the input - this further improves the readability 8741245857b588d73a3f21489470f04bae31e67b",
      "commit_id" : "8741245857b588d73a3f21489470f04bae31e67b",
      "created_at" : "2021-05-19T16:12:40Z",
      "diff_hunk" : "@@ -4219,6 +4222,49 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds curre\n     }\n }\n \n+void PeerManagerImpl::MaybeSendFeefilter(CNode& pto, std::chrono::microseconds current_time)\n+{\n+    AssertLockHeld(cs_main);\n+\n+    if (m_ignore_incoming_txs) return;\n+    if (!pto.m_tx_relay) return;\n+    if (pto.GetCommonVersion() < FEEFILTER_VERSION) return;\n+    // peers with the forcerelay permission should not filter txs to us\n+    if (pto.HasPermission(NetPermissionFlags::ForceRelay)) return;\n+\n+    CAmount currentFilter = m_mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n+    static FeeFilterRounder g_filter_rounder{CFeeRate{DEFAULT_MIN_RELAY_TX_FEE}};\n+\n+    if (m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\n+        // Received tx-inv messages are discarded when the active\n+        // chainstate is in IBD, so tell the peer to not send them.\n+        currentFilter = MAX_MONEY;\n+    } else {\n+        static const CAmount MAX_FILTER{g_filter_rounder.round(MAX_MONEY)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21992#discussion_r635391366",
      "id" : 635391366,
      "in_reply_to_id" : 635333530,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTM5MTM2Ng==",
      "original_commit_id" : "b0b62138b7b9e27ced562fe4859184f4d9bb94c5",
      "original_line" : 4243,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 663409445,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21992",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-19T16:18:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635391366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/35263201?v=4",
         "events_url" : "https://api.github.com/users/amadeuszpawlik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amadeuszpawlik/followers",
         "following_url" : "https://api.github.com/users/amadeuszpawlik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amadeuszpawlik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amadeuszpawlik",
         "id" : 35263201,
         "login" : "amadeuszpawlik",
         "node_id" : "MDQ6VXNlcjM1MjYzMjAx",
         "organizations_url" : "https://api.github.com/users/amadeuszpawlik/orgs",
         "received_events_url" : "https://api.github.com/users/amadeuszpawlik/received_events",
         "repos_url" : "https://api.github.com/users/amadeuszpawlik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amadeuszpawlik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amadeuszpawlik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amadeuszpawlik"
      }
   }
]
