[
   {
      "body" : "What would be the downside of a forced 64bit type on 32bit platform? I guess the performance reduction and the slightly higher memory consumption is totally negligible?\r\n\r\nWould fixing it \"on the other side\" (detect size_t overflow while hashing, force the 32bit reset on 64bit platforms) not involve less risks?",
      "created_at" : "2016-04-11T14:05:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7848#issuecomment-208362634",
      "id" : 208362634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7848",
      "updated_at" : "2016-04-11T14:05:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208362634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "We should replace the utxo hash reported by gettxoutsetinfo by a Merkle\nroot of a tree whose leaves are the UTXO entries in a simple serialized\nformat. That would allow producing short proofs about the existance or\nnon-existance of certain entries to anyone who gets such a hash from a\ntrusted source.\n\nThis isn't hard to do using a variation of the algorithm in\nconsensus/merkle.cpp, but it's not my priority now.\n",
      "created_at" : "2016-04-11T14:23:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7848#issuecomment-208371497",
      "id" : 208371497,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7848",
      "updated_at" : "2016-04-11T14:23:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208371497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@laanwj Nice catches. utACK.\r\n\r\n@jonasschnelli I think it's not worth the trouble. For platforms constrained enough for the change to be significant, I suspect that a separate hashing implementation would've already been patched in.",
      "created_at" : "2016-04-12T07:06:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7848#issuecomment-208741597",
      "id" : 208741597,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7848",
      "updated_at" : "2016-04-12T07:06:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208741597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@sipa I know you have bigger plans for this. Do you disagree, though, that this is an improvement? I'm using `gettxoutsetinfo` a lot so it would really help me if this is fixed.\r\n\r\n@jonasschnelli I'd say doing the hashing as it is supposed to be done, with counters of the appropriate width - as done here - is less risky than trying to hack something with overflow detection? Adding a 64-bit with 32-bit value is cheap on 32-bit architectures as well, it even involves overflow detection (the carry flag) internally.",
      "created_at" : "2016-04-14T07:42:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7848#issuecomment-209810078",
      "id" : 209810078,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7848",
      "updated_at" : "2016-04-14T07:44:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209810078",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "The hash function code should be correct with large inputs regardless of what the utxoset hash stuff returns. utACK.",
      "created_at" : "2016-04-14T08:54:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7848#issuecomment-209835229",
      "id" : 209835229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7848",
      "updated_at" : "2016-04-14T08:54:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209835229",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@laanwj Oops, I just responded to @jonasschnelli's comment, not seeing there was a patch too.\r\n\r\nYes, uint64_t should definitely be used for at least SHA1, SHA256 and RIPEMD160. In theory, we'd need to use a 128-bit integer for SHA512 (as it writes a 128-bit length descriptor in the padding), but I guess we'll never hit that.\r\n",
      "created_at" : "2016-04-14T09:09:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7848#issuecomment-209839963",
      "id" : 209839963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7848",
      "updated_at" : "2016-04-14T09:09:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209839963",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "there can be an assert to catch the overflow in the sha512 case, if we want to be pedantic?",
      "created_at" : "2016-04-14T09:13:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7848#issuecomment-209841643",
      "id" : 209841643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7848",
      "updated_at" : "2016-04-14T09:13:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209841643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "> In theory, we'd need to use a 128-bit integer for SHA512 (as it writes a 128-bit length descriptor in the padding), but I guess we'll never hit that.\r\n\r\nGood catch!\r\n\r\nAlthough implementing actual 128-bit counting is just as much work as adding an overflow assertion, I'd personally say adding an assert is preferable here, as we can never test this behavior.",
      "created_at" : "2016-04-14T10:04:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7848#issuecomment-209861344",
      "id" : 209861344,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7848",
      "updated_at" : "2016-04-14T10:04:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209861344",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "The assert should probably exist for SHA1/256/RIPEMD160 as well, as those are undefined for longer messages.",
      "created_at" : "2016-04-14T10:06:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7848#issuecomment-209862243",
      "id" : 209862243,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7848",
      "updated_at" : "2016-04-14T10:06:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209862243",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
