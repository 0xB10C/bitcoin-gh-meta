[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59065397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59065397"
         }
      },
      "body" : "Perhaps the fee filter access should be hoisted out of this inner loop on transactions, and a local copy of the filter-limit made.",
      "commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "created_at" : "2016-04-08T18:01:59Z",
      "diff_hunk" : "@@ -5808,13 +5786,40 @@ bool SendMessages(CNode* pto)\n             }\n             pto->vInventoryBlockToSend.clear();\n \n-            // Determine transactions to relay\n-            bool fSendTrickle = pto->fWhitelisted;\n-            if (pto->nNextInvSend < nNow) {\n-                fSendTrickle = true;\n-                // Use half the delay for outbound peers, as there is less privacy concern for them.\n-                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    if (pto->minFeeFilter) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        LOCK(pto->cs_feeFilter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59065397",
      "id" : 59065397,
      "original_commit_id" : "906e5c7fdb5bb894ec08bdd9bf683f9689cf8bdc",
      "original_position" : 86,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "updated_at" : "2016-04-10T13:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59065397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "This is a very good idea-- much better than my earlier ones around avoiding mempool requests breaking privacy.\r\n\r\nYour commit message should explain that by eliminating queued entries from the mempool response and responding only at trickle time, this makes the mempool no longer leak transaction arrival order information (as the mempool itself is also sorted)-- at least no more than relay itself leaks it.",
      "created_at" : "2016-04-08T18:06:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-207540552",
      "id" : 207540552,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "updated_at" : "2016-04-08T18:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207540552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59074603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59074603"
         }
      },
      "body" : "\"&& vInv.size() < INVENTORY_BROADCAST_MAX\" perhaps? otherwise when a mempool request has prefilled the INV it will waste time heapifying for no reason.",
      "commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "created_at" : "2016-04-08T19:06:55Z",
      "diff_hunk" : "@@ -5808,13 +5786,40 @@ bool SendMessages(CNode* pto)\n             }\n             pto->vInventoryBlockToSend.clear();\n \n-            // Determine transactions to relay\n-            bool fSendTrickle = pto->fWhitelisted;\n-            if (pto->nNextInvSend < nNow) {\n-                fSendTrickle = true;\n-                // Use half the delay for outbound peers, as there is less privacy concern for them.\n-                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    if (pto->minFeeFilter) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        LOCK(pto->cs_feeFilter);\n+                        if (feeRate.GetFeePerK() < pto->minFeeFilter)\n+                            continue;\n+                    }\n+                    if (pto->vInventoryTxToSend.count(hash)) continue;\n+                    pto->filterInventoryKnown.insert(hash);\n+                    vInv.push_back(inv);\n+                    if (vInv.size() == MAX_INV_SZ) {\n+                        pto->PushMessage(NetMsgType::INV, vInv);\n+                        vInv.clear();\n+                    }\n+                }\n             }\n+\n+            // Determine transactions to relay\n             if (fSendTrickle) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59074603",
      "id" : 59074603,
      "original_commit_id" : "906e5c7fdb5bb894ec08bdd9bf683f9689cf8bdc",
      "original_position" : 101,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "updated_at" : "2016-04-10T13:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59074603",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I have a test-harness now thats sutiable for testing this, a little 13 node network. Seems to work, it caught that the conversion to use the STL heap broke the behavior: the stl heap is a max heap.",
      "created_at" : "2016-04-09T00:32:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-207662361",
      "id" : 207662361,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "updated_at" : "2016-04-09T00:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207662361",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "@Thanks for fixing, looking good so far.\r\n\r\nWe still get a _tiny_ number of orphans in a network the consists of nothing but this code. Here is one reason why node A sends you Tx1. You getdata Tx1  Node B sends you Tx1 and Tx2 and Tx1 is a child of Tx1.  You getdata Tx2 from  node2.  Node2 responds faster. Tx2 is now an orphan.\r\n",
      "created_at" : "2016-04-09T03:15:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-207691938",
      "id" : 207691938,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "updated_at" : "2016-04-09T03:18:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207691938",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59134050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59134050"
         }
      },
      "body" : "Done.",
      "commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "created_at" : "2016-04-10T13:38:11Z",
      "diff_hunk" : "@@ -5808,13 +5786,40 @@ bool SendMessages(CNode* pto)\n             }\n             pto->vInventoryBlockToSend.clear();\n \n-            // Determine transactions to relay\n-            bool fSendTrickle = pto->fWhitelisted;\n-            if (pto->nNextInvSend < nNow) {\n-                fSendTrickle = true;\n-                // Use half the delay for outbound peers, as there is less privacy concern for them.\n-                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    if (pto->minFeeFilter) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        LOCK(pto->cs_feeFilter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59134050",
      "id" : 59134050,
      "original_commit_id" : "906e5c7fdb5bb894ec08bdd9bf683f9689cf8bdc",
      "original_position" : 86,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "updated_at" : "2016-04-10T13:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59134050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59134082"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59134082"
         }
      },
      "body" : "Done.",
      "commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "created_at" : "2016-04-10T13:39:39Z",
      "diff_hunk" : "@@ -5808,13 +5786,40 @@ bool SendMessages(CNode* pto)\n             }\n             pto->vInventoryBlockToSend.clear();\n \n-            // Determine transactions to relay\n-            bool fSendTrickle = pto->fWhitelisted;\n-            if (pto->nNextInvSend < nNow) {\n-                fSendTrickle = true;\n-                // Use half the delay for outbound peers, as there is less privacy concern for them.\n-                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    if (pto->minFeeFilter) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        LOCK(pto->cs_feeFilter);\n+                        if (feeRate.GetFeePerK() < pto->minFeeFilter)\n+                            continue;\n+                    }\n+                    if (pto->vInventoryTxToSend.count(hash)) continue;\n+                    pto->filterInventoryKnown.insert(hash);\n+                    vInv.push_back(inv);\n+                    if (vInv.size() == MAX_INV_SZ) {\n+                        pto->PushMessage(NetMsgType::INV, vInv);\n+                        vInv.clear();\n+                    }\n+                }\n             }\n+\n+            // Determine transactions to relay\n             if (fSendTrickle) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59134082",
      "id" : 59134082,
      "original_commit_id" : "906e5c7fdb5bb894ec08bdd9bf683f9689cf8bdc",
      "original_position" : 101,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "updated_at" : "2016-04-10T13:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59134082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I added a commit to sort the response of mempool requests in dependency order, and renamed the PR to something more general.",
      "created_at" : "2016-04-10T13:41:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-207987070",
      "id" : 207987070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "updated_at" : "2016-04-10T13:41:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207987070",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "concept ACK",
      "created_at" : "2016-04-11T06:48:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-208186907",
      "id" : 208186907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "updated_at" : "2016-04-11T06:48:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208186907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59262462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59262462"
         }
      },
      "body" : "INVENTORY_BROADCAST_MAX is supposed to apply to rate-limited transaction relay, while vInv at this point can be holding blocks, and/or any leftovers from the mempool command.  This seems like it's not the right comparison.",
      "commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "created_at" : "2016-04-11T19:07:12Z",
      "diff_hunk" : "@@ -5779,49 +5770,93 @@ bool SendMessages(CNode* pto)\n         // Message: inventory\n         //\n         vector<CInv> vInv;\n-        vector<CInv> vInvWait;\n         {\n+            // Check whether periodic sends should happen\n             bool fSendTrickle = pto->fWhitelisted;\n             if (pto->nNextInvSend < nNow) {\n                 fSendTrickle = true;\n-                pto->nNextInvSend = PoissonNextSend(nNow, AVG_INVENTORY_BROADCAST_INTERVAL);\n+                // Use half the delay for outbound peers, as there is less privacy concern for them.\n+                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n             }\n+\n             LOCK(pto->cs_inventory);\n-            vInv.reserve(std::min<size_t>(1000, pto->vInventoryToSend.size()));\n-            vInvWait.reserve(pto->vInventoryToSend.size());\n-            BOOST_FOREACH(const CInv& inv, pto->vInventoryToSend)\n-            {\n-                if (inv.type == MSG_TX && pto->filterInventoryKnown.contains(inv.hash))\n-                    continue;\n+            vInv.reserve(std::max<size_t>(pto->vInventoryBlockToSend.size(), INVENTORY_BROADCAST_MAX));\n \n-                // trickle out tx inv to protect privacy\n-                if (inv.type == MSG_TX && !fSendTrickle)\n+            // Add blocks\n+            BOOST_FOREACH(const uint256& hash, pto->vInventoryBlockToSend) {\n+                vInv.push_back(CInv(MSG_BLOCK, hash));\n+            }\n+            pto->vInventoryBlockToSend.clear();\n+\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+                CAmount filterrate = 0;\n                 {\n-                    // 1/4 of tx invs blast to all immediately\n-                    static uint256 hashSalt;\n-                    if (hashSalt.IsNull())\n-                        hashSalt = GetRandHash();\n-                    uint256 hashRand = ArithToUint256(UintToArith256(inv.hash) ^ UintToArith256(hashSalt));\n-                    hashRand = Hash(BEGIN(hashRand), END(hashRand));\n-                    bool fTrickleWait = ((UintToArith256(hashRand) & 3) != 0);\n+                    LOCK(pto->cs_feeFilter);\n+                    filterrate = pto->minFeeFilter;\n+                }\n \n-                    if (fTrickleWait)\n-                    {\n-                        vInvWait.push_back(inv);\n-                        continue;\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    if (pto->vInventoryTxToSend.count(hash)) continue;\n+                    if (filterrate) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        if (feeRate.GetFeePerK() < filterrate)\n+                            continue;\n+                    }\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    pto->filterInventoryKnown.insert(hash);\n+                    vInv.push_back(inv);\n+                    if (vInv.size() == MAX_INV_SZ) {\n+                        pto->PushMessage(NetMsgType::INV, vInv);\n+                        vInv.clear();\n                     }\n                 }\n+            }\n \n-                pto->filterInventoryKnown.insert(inv.hash);\n-\n-                vInv.push_back(inv);\n-                if (vInv.size() >= 1000)\n-                {\n-                    pto->PushMessage(NetMsgType::INV, vInv);\n-                    vInv.clear();\n+            // Determine transactions to relay\n+            if (fSendTrickle && vInv.size() < INVENTORY_BROADCAST_MAX) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59262462",
      "id" : 59262462,
      "original_commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "original_position" : 148,
      "path" : "src/main.cpp",
      "position" : 148,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "updated_at" : "2016-04-11T19:07:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59262462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59265363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59265363"
         }
      },
      "body" : "nit: Perhaps add a comment explaining why the vector is needed for blocks?",
      "commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "created_at" : "2016-04-11T19:27:22Z",
      "diff_hunk" : "@@ -396,14 +396,17 @@ class CNode\n \n     // inventory based relay\n     CRollingBloomFilter filterInventoryKnown;\n-    std::vector<CInv> vInventoryToSend;\n+    std::set<uint256> vInventoryTxToSend;\n+    std::vector<uint256> vInventoryBlockToSend;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59265363",
      "id" : 59265363,
      "original_commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "original_position" : 6,
      "path" : "src/net.h",
      "position" : 6,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "updated_at" : "2016-04-11T19:27:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59265363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Concept ACK, will test.",
      "created_at" : "2016-04-11T19:34:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-208519133",
      "id" : 208519133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "updated_at" : "2016-04-11T19:34:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208519133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59266764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59266764"
         }
      },
      "body" : "\"inventor\" -> \"inventory\"",
      "commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "created_at" : "2016-04-11T19:36:26Z",
      "diff_hunk" : "@@ -99,9 +99,12 @@ static const unsigned int MAX_REJECT_MESSAGE_LENGTH = 111;\n static const unsigned int AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL = 24 * 24 * 60;\n /** Average delay between peer address broadcasts in seconds. */\n static const unsigned int AVG_ADDRESS_BROADCAST_INTERVAL = 30;\n-/** Average delay between trickled inventory broadcasts in seconds.\n- *  Blocks, whitelisted receivers, and a random 25% of transactions bypass this. */\n-static const unsigned int AVG_INVENTORY_BROADCAST_INTERVAL = 5;\n+/** Average delay between trickled inventory transmissions in seconds.\n+ *  Blocks and whitelisted receivers bypass this, outbound peers get half this delay. */\n+static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n+/** Maximum number of inventor items to send per transmission.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59266764",
      "id" : 59266764,
      "original_commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "original_position" : 10,
      "path" : "src/main.h",
      "position" : 10,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "updated_at" : "2016-04-11T19:36:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59266764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Added two commits to address the comments.\r\n\r\nMempool requests are now not filtered by vInventoryTxToSend, but instead every mempool inv sent as a response is removed from vInventoryTxToSend.",
      "created_at" : "2016-04-12T14:40:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-208939536",
      "id" : 208939536,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "updated_at" : "2016-04-12T14:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208939536",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "In a test topology over 48 hours this reduced the addition of orphan transactions from 436/hr to 2.3/hr.",
      "created_at" : "2016-04-12T21:30:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-209110680",
      "id" : 209110680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "updated_at" : "2016-04-12T21:30:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209110680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Also, utack latest improvements.",
      "created_at" : "2016-04-12T21:40:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-209114666",
      "id" : 209114666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "updated_at" : "2016-04-12T21:40:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209114666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   }
]
