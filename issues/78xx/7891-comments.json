[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r59965911"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59965911"
         }
      },
      "body" : "This doesn't look safe without a retry. read() doesn't guarantee the entire buffer gets filled ever, afaik.",
      "commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "created_at" : "2016-04-16T10:56:55Z",
      "diff_hunk" : "@@ -83,6 +84,25 @@ void RandAddSeedPerfmon()\n #endif\n }\n \n+/** Get 32 bytes of system entropy. */\n+static void GetOSRand(unsigned char *ent32)\n+{\n+#ifdef WIN32\n+    HCRYPTPROV hProvider;\n+    int ret = CryptAcquireContextW(&hProvider, NULL, NULL, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT);\n+    assert(ret);\n+    ret = CryptGenRandom(hProvider, 32, ent32);\n+    assert(ret);\n+    CryptReleaseContext(hProvider, 0);\n+#else\n+    int f = open(\"/dev/urandom\", O_RDONLY);\n+    assert(f != -1);\n+    int n = read(f, ent32, 32);\n+    assert(n == 32);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r59965911",
      "id" : 59965911,
      "original_commit_id" : "e5ef17c5b12a43b6e0004af5a27aa755aecf35d5",
      "original_position" : 35,
      "path" : "src/random.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891",
      "updated_at" : "2016-04-16T11:08:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59965911",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r59966007"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59966007"
         }
      },
      "body" : "I believe there are some guarantees for reading from /dev/urandom always providing at least up to some number of bytes when requested, but it's better to be safe. I've replaced it with a loop.",
      "commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "created_at" : "2016-04-16T11:06:44Z",
      "diff_hunk" : "@@ -83,6 +84,25 @@ void RandAddSeedPerfmon()\n #endif\n }\n \n+/** Get 32 bytes of system entropy. */\n+static void GetOSRand(unsigned char *ent32)\n+{\n+#ifdef WIN32\n+    HCRYPTPROV hProvider;\n+    int ret = CryptAcquireContextW(&hProvider, NULL, NULL, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT);\n+    assert(ret);\n+    ret = CryptGenRandom(hProvider, 32, ent32);\n+    assert(ret);\n+    CryptReleaseContext(hProvider, 0);\n+#else\n+    int f = open(\"/dev/urandom\", O_RDONLY);\n+    assert(f != -1);\n+    int n = read(f, ent32, 32);\n+    assert(n == 32);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r59966007",
      "id" : 59966007,
      "original_commit_id" : "e5ef17c5b12a43b6e0004af5a27aa755aecf35d5",
      "original_position" : 35,
      "path" : "src/random.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891",
      "updated_at" : "2016-04-16T11:08:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59966007",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "meta-concept-ack.  A reasonable separation of concerns in the migration off of openssl is time of use addition of OS entropy, a replacement CSPRNG, and replacement seeding. Each of these can be done independently    Taking OS entropy at time of use for long term keys is a basic, sensible thing to do and protects users against flaws in the either the OS rng or the process CSPRNG. \r\n\r\nThe specific combiner used here seems reasonable to me. ",
      "created_at" : "2016-04-16T13:01:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7891#issuecomment-210811528",
      "id" : 210811528,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7891",
      "updated_at" : "2016-04-16T13:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/210811528",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "Concept ACK. Minor point though: should use of /dev/urandom be protected by a HAVE_URANDOM or similar? Or is support for it universal on supported non-Windows systems?",
      "created_at" : "2016-04-17T04:30:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7891#issuecomment-210955077",
      "id" : 210955077,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7891",
      "updated_at" : "2016-04-17T04:30:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/210955077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/17022881?v=3",
         "events_url" : "https://api.github.com/users/kirkalx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kirkalx/followers",
         "following_url" : "https://api.github.com/users/kirkalx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kirkalx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kirkalx",
         "id" : 17022881,
         "login" : "kirkalx",
         "organizations_url" : "https://api.github.com/users/kirkalx/orgs",
         "received_events_url" : "https://api.github.com/users/kirkalx/received_events",
         "repos_url" : "https://api.github.com/users/kirkalx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kirkalx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kirkalx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kirkalx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r59990802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59990802"
         }
      },
      "body" : "We should be doing something stronger than assert here. If the code is compiled with assertions disabled, this code would be incorrect. Assertions should be used for invariants, not error handling.",
      "commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "created_at" : "2016-04-17T19:32:01Z",
      "diff_hunk" : "@@ -83,6 +85,29 @@ void RandAddSeedPerfmon()\n #endif\n }\n \n+/** Get 32 bytes of system entropy. */\n+static void GetOSRand(unsigned char *ent32)\n+{\n+#ifdef WIN32\n+    HCRYPTPROV hProvider;\n+    int ret = CryptAcquireContextW(&hProvider, NULL, NULL, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT);\n+    assert(ret);\n+    ret = CryptGenRandom(hProvider, 32, ent32);\n+    assert(ret);\n+    CryptReleaseContext(hProvider, 0);\n+#else\n+    int f = open(\"/dev/urandom\", O_RDONLY);\n+    assert(f != -1);\n+    int have = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r59990802",
      "id" : 59990802,
      "original_commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "original_position" : 38,
      "path" : "src/random.cpp",
      "position" : 38,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891",
      "updated_at" : "2016-04-17T19:32:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59990802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r60281457"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60281457"
         }
      },
      "body" : "Agree, will fix.",
      "commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "created_at" : "2016-04-19T18:09:57Z",
      "diff_hunk" : "@@ -83,6 +85,29 @@ void RandAddSeedPerfmon()\n #endif\n }\n \n+/** Get 32 bytes of system entropy. */\n+static void GetOSRand(unsigned char *ent32)\n+{\n+#ifdef WIN32\n+    HCRYPTPROV hProvider;\n+    int ret = CryptAcquireContextW(&hProvider, NULL, NULL, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT);\n+    assert(ret);\n+    ret = CryptGenRandom(hProvider, 32, ent32);\n+    assert(ret);\n+    CryptReleaseContext(hProvider, 0);\n+#else\n+    int f = open(\"/dev/urandom\", O_RDONLY);\n+    assert(f != -1);\n+    int have = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r60281457",
      "id" : 60281457,
      "original_commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "original_position" : 38,
      "path" : "src/random.cpp",
      "position" : 38,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891",
      "updated_at" : "2016-04-19T18:09:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60281457",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r60282687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60282687"
         }
      },
      "body" : "Hmm... abort() or raise a C++ exception or depend on ui_interface.h (yuck) to call ThreadSafeMessageBox?",
      "commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "created_at" : "2016-04-19T18:16:43Z",
      "diff_hunk" : "@@ -83,6 +85,29 @@ void RandAddSeedPerfmon()\n #endif\n }\n \n+/** Get 32 bytes of system entropy. */\n+static void GetOSRand(unsigned char *ent32)\n+{\n+#ifdef WIN32\n+    HCRYPTPROV hProvider;\n+    int ret = CryptAcquireContextW(&hProvider, NULL, NULL, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT);\n+    assert(ret);\n+    ret = CryptGenRandom(hProvider, 32, ent32);\n+    assert(ret);\n+    CryptReleaseContext(hProvider, 0);\n+#else\n+    int f = open(\"/dev/urandom\", O_RDONLY);\n+    assert(f != -1);\n+    int have = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r60282687",
      "id" : 60282687,
      "original_commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "original_position" : 38,
      "path" : "src/random.cpp",
      "position" : 38,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891",
      "updated_at" : "2016-04-19T18:16:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60282687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r60400131"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60400131"
         }
      },
      "body" : "There's not really a good way to do a global abort at the moment from this place.\r\n`AbortNode()` is the closest, it shows a message and does a more graceful shutdown, but that would introduce a dependency on main.cpp.\r\n",
      "commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "created_at" : "2016-04-20T12:48:18Z",
      "diff_hunk" : "@@ -83,6 +85,29 @@ void RandAddSeedPerfmon()\n #endif\n }\n \n+/** Get 32 bytes of system entropy. */\n+static void GetOSRand(unsigned char *ent32)\n+{\n+#ifdef WIN32\n+    HCRYPTPROV hProvider;\n+    int ret = CryptAcquireContextW(&hProvider, NULL, NULL, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT);\n+    assert(ret);\n+    ret = CryptGenRandom(hProvider, 32, ent32);\n+    assert(ret);\n+    CryptReleaseContext(hProvider, 0);\n+#else\n+    int f = open(\"/dev/urandom\", O_RDONLY);\n+    assert(f != -1);\n+    int have = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r60400131",
      "id" : 60400131,
      "original_commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "original_position" : 38,
      "path" : "src/random.cpp",
      "position" : 38,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891",
      "updated_at" : "2016-04-20T12:48:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60400131",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r60400219"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60400219"
         }
      },
      "body" : "To avoid the main dependency, and if you want to structure this as a library, maybe add a function to register a fatal error handler? (which we would point to AbortNode, then raise an exception to kill the current thread). It could still call `abort()` if nothing registered.",
      "commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "created_at" : "2016-04-20T12:49:04Z",
      "diff_hunk" : "@@ -83,6 +85,29 @@ void RandAddSeedPerfmon()\n #endif\n }\n \n+/** Get 32 bytes of system entropy. */\n+static void GetOSRand(unsigned char *ent32)\n+{\n+#ifdef WIN32\n+    HCRYPTPROV hProvider;\n+    int ret = CryptAcquireContextW(&hProvider, NULL, NULL, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT);\n+    assert(ret);\n+    ret = CryptGenRandom(hProvider, 32, ent32);\n+    assert(ret);\n+    CryptReleaseContext(hProvider, 0);\n+#else\n+    int f = open(\"/dev/urandom\", O_RDONLY);\n+    assert(f != -1);\n+    int have = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7891#discussion_r60400219",
      "id" : 60400219,
      "original_commit_id" : "3a68c3afb2e2ee14c882a34b3e77099afe54e4e2",
      "original_position" : 38,
      "path" : "src/random.cpp",
      "position" : 38,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7891",
      "updated_at" : "2016-04-20T12:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60400219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
