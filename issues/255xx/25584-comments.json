[
   {
      "author_association" : "MEMBER",
      "body" : "My thoughts:\r\n\r\nDefining \"validation\":\r\n- If thinking about \"validation\" as management of chainstate, applying consensus rules to blocks and block transactions, etc., there is definitely no reason for validation to even know what a mempool is.\r\n- If thinking about \"validation\" as what is currently housed in validation.{h, cpp}, it's really block + mempool validation. It houses `MemPoolAccept`, `ChainstateManager` has a reference to the mempool to call ATMP, etc. So it naturally has a dependency on txmempool.\r\n\r\nDefining \"txmempool\":\r\nSimilarly, I think there's a difference between what we think of conceptually vs where code is located.\r\nI think of these as tightly related but distinct mempool \"modules\":\r\n-  `CTxMemPool`  + `CTxMemPoolEntry` data structures which store transactions but aren't responsible for validation, policy, etc.\r\n- Policy logic and constants (e.g. RBF signals, standard script policy flags, default ancestor limits) and runtime settings (e.g. configured min relay feerate)\r\n- Mempool validation, i.e. `MemPoolAccept`\r\n- Fee estimator, which needs to know when transactions enter/leave the mempool\r\n- Miner `BlockAssembler` (i.e. the ancestor feerate algo which operates on the contents of the mempool, not the PoW part)\r\n- Others?\r\n\r\nI'm not sure if this should all be in txmempool.{h,cpp} (my philosophy in #22677 was that it should just have `CTxMemPool`  + `CTxMemPoolEntry` data structures, and thought it was weird to have `removeForReorg()`  calling `CheckSequenceLocks()`, which is why I went with the direction of passing in a callable). In the future, perhaps we want to move towards having a `MempoolManager` responsible for mempool validation, policy settings, fee estimator, miner/block template building, etc. I imagine replacing `ChainstateManager` and `PeerManager`'s references to `CTxMemPool` with a reference to `MempoolManager`.\r\n\r\nSpoke to @dongcarl about mempool vs validation previously (in the context of what it would look like to remove mempool from libbitcoinkernel), and a few ideas were discussed:\r\n- Have mempool be a client of `CValidationInterface`. This would require quite a few changes, including separating `TransactionAddedToMempool()` and `TransactionRemovedFromMempool` into a separate interface and iirc change the interface for transactions removed for block. I think #11775 does this somewhat?\r\n- As a less invasive step in the direction of making validation not require txmempool, pass callbacks to validation functions doing mempool things synchronously.",
      "created_at" : "2022-07-11T09:23:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25584#issuecomment-1180166083",
      "id" : 1180166083,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25584",
      "node_id" : "IC_kwDOABII585GV-fD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1180166083/reactions"
      },
      "updated_at" : "2022-07-11T09:23:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1180166083",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   }
]
