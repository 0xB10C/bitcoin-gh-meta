{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "Fixes https://github.com/bitcoin/bitcoin/issues/21461\r\n\r\nThis supports whole directory runs of the fuzzing seeds without needing a fuzzing library. A few design decisions that I went with but happy to change: \r\n\r\n1. Very basic 1 arg support\r\n    a. Can have 0 args and continue to feed via file input like before\r\n    b. Can have 1 arg that is a file\r\n    c. Can have 1 arg that is a directory\r\n    d. Additional args are quietly ignored (open to changes if it should be more strict, should treat each consequitive arg as another run through, or flag based args)\r\n2. Based the file reading off of [util/readwritefile.cpp](https://github.com/bitcoin/bitcoin/blob/master/src/util/readwritefile.cpp#L13) with small changes to make it a buffer instead of a string (could reuse that but turn string to buffer?)\r\n3. The new changes are ignored in the `__AFL_LOOP` path or if built without `DPROVIDE_FUZZ_MAIN_FUNCTION`\r\n\r\n<details>\r\n<summary>Testing instructions</summary>\r\n\r\nTo build without libFuzzer, exclude the sanitizers. IE: \r\n\r\n```\r\nCC=clang CXX=clang++ ./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" --without-gui --with-zmq --enable-fuzz\r\n```\r\n\r\nThat should have the `CPPFLAGS` of `-DPROVIDE_FUZZ_MAIN_FUNCTION` to indicicate it was built with the main function to use instead of the libFuzzer `LLVMFuzzerInitialize` & `LLVMFuzzerTestOneInput` methods.\r\n\r\nTests:\r\n\r\n```bash\r\n# clean and build\r\nmake clean\r\nmake -j \"$(($(nproc)+1))\"\r\n\r\n# get qa-assets if you don't have already\r\ngit clone https://github.com/bitcoin-core/qa-assets\r\n\r\n# existing way to feed 1 at a time, still supported\r\nFUZZ=process_message src/test/fuzz/fuzz < qa-assets/fuzz_seed_corpus/process_message/1258dd51f2a5f3221b33a306279ef7290c5fca6d\r\n\r\n# new with this PR: one at a time\r\nFUZZ=process_message src/test/fuzz/fuzz qa-assets/fuzz_seed_corpus/process_message/1258dd51f2a5f3221b33a306279ef7290c5fca6d\r\n\r\n# new with this PR: whole directory at a time\r\nFUZZ=process_message src/test/fuzz/fuzz qa-assets/fuzz_seed_corpus/process_message\r\n\r\n# new with this PR: run all seeds in all targets, one target/directory at a time \r\nfor D in qa-assets/fuzz_seed_corpus/*; do [ -d \"${D}\" ] && echo \"${D##*/}\" && FUZZ=\"${D##*/}\" src/test/fuzz/fuzz qa-assets/fuzz_seed_corpus/\"${D##*/}\"; done\r\n```\r\n</details>\r\n\r\nHappy to make any changes and very much welcome code feedback, my c++ a bit rusty and still figuring out the codebase.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21496/comments",
   "created_at" : "2021-03-21T20:47:56Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21496/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/21496",
   "id" : 837179586,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21496/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NTk3NTYwMzQ1",
   "number" : 21496,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/21496.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21496",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/21496.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21496"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "fuzz: execute each file in dir without fuzz engine",
   "updated_at" : "2021-03-21T20:55:50Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21496",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/10763569?v=4",
      "events_url" : "https://api.github.com/users/AnthonyRonning/events{/privacy}",
      "followers_url" : "https://api.github.com/users/AnthonyRonning/followers",
      "following_url" : "https://api.github.com/users/AnthonyRonning/following{/other_user}",
      "gists_url" : "https://api.github.com/users/AnthonyRonning/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/AnthonyRonning",
      "id" : 10763569,
      "login" : "AnthonyRonning",
      "node_id" : "MDQ6VXNlcjEwNzYzNTY5",
      "organizations_url" : "https://api.github.com/users/AnthonyRonning/orgs",
      "received_events_url" : "https://api.github.com/users/AnthonyRonning/received_events",
      "repos_url" : "https://api.github.com/users/AnthonyRonning/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/AnthonyRonning/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/AnthonyRonning/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/AnthonyRonning"
   }
}
