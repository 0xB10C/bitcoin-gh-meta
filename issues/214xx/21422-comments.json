[
   {
      "author_association" : "MEMBER",
      "body" : "Hey @kiminuo, can you amend the commit and remove my mention? Keep in mind that mentions in commits lead to notifications. Ty.",
      "created_at" : "2021-03-12T10:45:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#issuecomment-797405001",
      "id" : 797405001,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21422",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzQwNTAwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T10:45:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797405001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Hey @kiminuo, can you amend the commit and remove my mention? Keep in mind that mentions in commits lead to notifications. Ty.\r\n\r\nYes, sorry for that.",
      "created_at" : "2021-03-12T10:46:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#issuecomment-797405777",
      "id" : 797405777,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21422",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzQwNTc3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T10:46:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797405777",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for picking this up.",
      "created_at" : "2021-03-12T19:34:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#issuecomment-797707560",
      "id" : 797707560,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21422",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzcwNzU2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T19:34:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797707560",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21366 (refactor: replace util::Ref with std::any (C++17) by theStack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-03-16T11:09:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#issuecomment-800167374",
      "id" : 800167374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21422",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMDE2NzM3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-16T11:09:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800167374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. For the test commit, maybe a more descriptive title that can be understood on its own.\r\n",
      "created_at" : "2021-03-21T10:31:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#issuecomment-803550651",
      "id" : 803550651,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21422",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzU1MDY1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-21T10:31:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803550651",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598258602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598258602"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use a named cast (and can be const)",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-21T10:45:32Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598258602",
      "id" : 598258602,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI1ODYwMg==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1518,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617005701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598258602",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598258707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598258707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n            for (int i = limits.size() - 1; i >= 0; --i) {\r\n```",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-21T10:46:21Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; i--) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598258707",
      "id" : 598258707,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI1ODcwNw==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1532,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617005701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598258707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598258754"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598258754"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                    ++count[i];\r\n```",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-21T10:46:47Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; i--) {\n+                if (feeperbyte >= limits[i].second) {\n+                    sizes[i] += size;\n+                    count[i]++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598258754",
      "id" : 598258754,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI1ODc1NA==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1535,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617005701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598258754",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598259105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598259105"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Are `size`, `asize` and `dsize` guaranteed to be non-zero? Can they be `const`?",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-21T10:49:09Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598259105",
      "id" : 598259105,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI1OTEwNQ==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1527,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617005701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598259105",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598259294"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598259294"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        for (size_t i = 0; i < limits.size(); ++i) {\r\n```",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-21T10:50:32Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; i--) {\n+                if (feeperbyte >= limits[i].second) {\n+                    sizes[i] += size;\n+                    count[i]++;\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        CAmount total_fees = 0; // Track total amount of available fees in mempool\n+        UniValue ranges(UniValue::VOBJ);\n+        for (size_t i = 0; i < limits.size(); i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598259294",
      "id" : 598259294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI1OTI5NA==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1544,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617005701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598259294",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598259362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598259362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        for (unsigned int i = 0; i < feelimits_univalue.size(); ++i) {\r\n```",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-21T10:51:28Z",
      "diff_hunk" : "@@ -1520,15 +1586,43 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"fees\", \"Cumulated fee of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"from_feerate\", \"Group contains transaction with feerates equal or greater than this value\"},\n+                                    {RPCResult::Type::NUM, \"to_feerate\", \"Group contains transaction with feerates less than than this value\"},\n+                                }},\n+                                {RPCResult::Type::NUM, \"total_fees\", \"Total available fees in mempool\"},\n+                            }},\n                     }},\n                 RPCExamples{\n                     HelpExampleCli(\"getmempoolinfo\", \"\")\n             + HelpExampleRpc(\"getmempoolinfo\", \"\")\n                 },\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n {\n-    return MempoolInfoToJSON(EnsureMemPool(request.context));\n+    MempoolHistogramFeeLimits feelimits;\n+    std::optional<MempoolHistogramFeeLimits> feelimits_opt = std::nullopt;\n+\n+    if (!request.params[0].isNull()) {\n+        const UniValue feelimits_univalue = request.params[0].get_array();\n+        for (unsigned int i = 0; i < feelimits_univalue.size(); i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598259362",
      "id" : 598259362,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI1OTM2Mg==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1614,
      "original_position" : 129,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617005701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598259362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598259414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598259414"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you add an example?",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-21T10:52:04Z",
      "diff_hunk" : "@@ -1520,15 +1586,43 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"fees\", \"Cumulated fee of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"from_feerate\", \"Group contains transaction with feerates equal or greater than this value\"},\n+                                    {RPCResult::Type::NUM, \"to_feerate\", \"Group contains transaction with feerates less than than this value\"},\n+                                }},\n+                                {RPCResult::Type::NUM, \"total_fees\", \"Total available fees in mempool\"},\n+                            }},\n                     }},\n                 RPCExamples{\n                     HelpExampleCli(\"getmempoolinfo\", \"\")\n             + HelpExampleRpc(\"getmempoolinfo\", \"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598259414",
      "id" : 598259414,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI1OTQxNA==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1605,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617005701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598259414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598260229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598260229"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The decimal stdlib import should be before the framework imports per PEP8, separated by a blank line ",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-21T10:58:31Z",
      "diff_hunk" : "@@ -0,0 +1,50 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool fee histogram.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_greater_than_or_equal,\n+    assert_no_key,\n+)\n+from decimal import Decimal",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598260229",
      "id" : 598260229,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI2MDIyOQ==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 14,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/mempool_fee_histogram.py",
      "position" : null,
      "pull_request_review_id" : 617005701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598260229",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598260474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598260474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The new test file has incorrect permissions:\r\n```\r\n-rwxr-xr-x 1   5133 Mar 17 15:30 mempool_expiry.py*\r\n-rw-r--r-- 1   1716 Mar 21 11:56 mempool_fee_histogram.py\r\n-rwxr-xr-x 1   3494 Mar  1 11:53 mempool_limit.py*\r\n```\r\nI had to run `sudo chmod 755 test/functional/mempool_fee_histogram.py` to be able to call the test directly, e.g. with `test/functional/mempool_fee_histogram.py`",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-21T11:00:31Z",
      "diff_hunk" : "@@ -225,6 +225,7 @@\n     'feature_nulldummy.py --descriptors',\n     'mempool_accept.py',\n     'mempool_expiry.py',\n+    'mempool_fee_histogram.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598260474",
      "id" : 598260474,
      "line" : 228,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI2MDQ3NA==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 228,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_runner.py",
      "position" : 4,
      "pull_request_review_id" : 617005701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598260474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598261128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598261128"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is the argument a string or a JSON array? (if an array, I think there needs to be another line that specifies the element type, e.g. number, string, or amount, probably the latter).",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-21T11:06:03Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; i--) {\n+                if (feeperbyte >= limits[i].second) {\n+                    sizes[i] += size;\n+                    count[i]++;\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        CAmount total_fees = 0; // Track total amount of available fees in mempool\n+        UniValue ranges(UniValue::VOBJ);\n+        for (size_t i = 0; i < limits.size(); i++) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"sizes\", sizes[i]);\n+            info_sub.pushKV(\"count\", count[i]);\n+            info_sub.pushKV(\"fees\", fees[i]);\n+            info_sub.pushKV(\"from_feerate\", limits[i].first);\n+\n+            if (i == limits.size() - 1) {\n+                info_sub.pushKV(\"to_feerate\", \"Max\"); // TODO.\n+            } else {\n+                info_sub.pushKV(\"to_feerate\", limits[i + 1].first);\n+            }\n+\n+            total_fees += fees[i];\n+            ranges.pushKV(limits[i].first, info_sub);\n+        }\n+\n+        UniValue info(UniValue::VOBJ);\n+        info.pushKV(\"ranges\", ranges);\n+        info.pushKV(\"total_fees\", total_fees);\n+        ret.pushKV(\"fee_histogram\", info);\n+    }\n+\n     return ret;\n }\n \n static RPCHelpMan getmempoolinfo()\n {\n     return RPCHelpMan{\"getmempoolinfo\",\n                 \"\\nReturns details on the active state of the TX memory pool.\\n\",\n-                {},\n+                {\n+                    // {\"with_fee_histogram\", RPCArg::Type::BOOL, /* default */ \"false\", \"True for including the fee histogram in the response\"},\n+                    {\"fee_histogram\", RPCArg::Type::STR, /* default */ \"false\", \"Provide fee limits in format: '1,2,3,5,200,1000'\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598261128",
      "id" : 598261128,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI2MTEyOA==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1576,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617007432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598261128",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonatack Thanks for the superb review! I'm working on incorporating your suggestions.",
      "created_at" : "2021-03-21T20:23:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#issuecomment-803653818",
      "id" : 803653818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21422",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzY1MzgxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-21T20:23:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803653818",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598342760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598342760"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonatack This is a part of the original PR I need to research more.\r\n\r\nDo you possibly have a tip where to learn how to properly compute `feeperbyte` value for a transaction? Or possibly who would know that? \r\n\r\nAnyway, I'm slowly skimming Bitcoin Core codebase so maybe I'll be lucky :-)",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-21T21:46:28Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598342760",
      "id" : 598342760,
      "in_reply_to_id" : 598259105,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODM0Mjc2MA==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1527,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617065184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598342760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598472515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598472515"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed, thanks!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-22T07:20:55Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; i--) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598472515",
      "id" : 598472515,
      "in_reply_to_id" : 598258707,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODQ3MjUxNQ==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1532,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617206365,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598472515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598472588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598472588"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed, thanks!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-22T07:21:09Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; i--) {\n+                if (feeperbyte >= limits[i].second) {\n+                    sizes[i] += size;\n+                    count[i]++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598472588",
      "id" : 598472588,
      "in_reply_to_id" : 598258754,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODQ3MjU4OA==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1535,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617206471,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598472588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598472646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598472646"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed, thanks!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-22T07:21:16Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; i--) {\n+                if (feeperbyte >= limits[i].second) {\n+                    sizes[i] += size;\n+                    count[i]++;\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        CAmount total_fees = 0; // Track total amount of available fees in mempool\n+        UniValue ranges(UniValue::VOBJ);\n+        for (size_t i = 0; i < limits.size(); i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598472646",
      "id" : 598472646,
      "in_reply_to_id" : 598259294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODQ3MjY0Ng==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1544,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617206522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598472646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598472692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598472692"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed, thanks!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-22T07:21:21Z",
      "diff_hunk" : "@@ -1520,15 +1586,43 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"fees\", \"Cumulated fee of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"from_feerate\", \"Group contains transaction with feerates equal or greater than this value\"},\n+                                    {RPCResult::Type::NUM, \"to_feerate\", \"Group contains transaction with feerates less than than this value\"},\n+                                }},\n+                                {RPCResult::Type::NUM, \"total_fees\", \"Total available fees in mempool\"},\n+                            }},\n                     }},\n                 RPCExamples{\n                     HelpExampleCli(\"getmempoolinfo\", \"\")\n             + HelpExampleRpc(\"getmempoolinfo\", \"\")\n                 },\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n {\n-    return MempoolInfoToJSON(EnsureMemPool(request.context));\n+    MempoolHistogramFeeLimits feelimits;\n+    std::optional<MempoolHistogramFeeLimits> feelimits_opt = std::nullopt;\n+\n+    if (!request.params[0].isNull()) {\n+        const UniValue feelimits_univalue = request.params[0].get_array();\n+        for (unsigned int i = 0; i < feelimits_univalue.size(); i++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598472692",
      "id" : 598472692,
      "in_reply_to_id" : 598259362,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODQ3MjY5Mg==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1614,
      "original_position" : 129,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 617206566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598472692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598473434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598473434"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hopefully, it's correct now. ",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-22T07:23:09Z",
      "diff_hunk" : "@@ -0,0 +1,50 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool fee histogram.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_greater_than_or_equal,\n+    assert_no_key,\n+)\n+from decimal import Decimal",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598473434",
      "id" : 598473434,
      "in_reply_to_id" : 598260229,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODQ3MzQzNA==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 14,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/mempool_fee_histogram.py",
      "position" : null,
      "pull_request_review_id" : 617207546,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598473434",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598473687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598473687"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I fixed this. Thanks!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-22T07:23:44Z",
      "diff_hunk" : "@@ -225,6 +225,7 @@\n     'feature_nulldummy.py --descriptors',\n     'mempool_accept.py',\n     'mempool_expiry.py',\n+    'mempool_fee_histogram.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r598473687",
      "id" : 598473687,
      "in_reply_to_id" : 598260474,
      "line" : 228,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODQ3MzY4Nw==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 228,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_runner.py",
      "position" : 4,
      "pull_request_review_id" : 617207865,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598473687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599793002"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599793002"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The argument is a JSON array of amounts (fees). I have fixed it.",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T17:38:39Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; i--) {\n+                if (feeperbyte >= limits[i].second) {\n+                    sizes[i] += size;\n+                    count[i]++;\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        CAmount total_fees = 0; // Track total amount of available fees in mempool\n+        UniValue ranges(UniValue::VOBJ);\n+        for (size_t i = 0; i < limits.size(); i++) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"sizes\", sizes[i]);\n+            info_sub.pushKV(\"count\", count[i]);\n+            info_sub.pushKV(\"fees\", fees[i]);\n+            info_sub.pushKV(\"from_feerate\", limits[i].first);\n+\n+            if (i == limits.size() - 1) {\n+                info_sub.pushKV(\"to_feerate\", \"Max\"); // TODO.\n+            } else {\n+                info_sub.pushKV(\"to_feerate\", limits[i + 1].first);\n+            }\n+\n+            total_fees += fees[i];\n+            ranges.pushKV(limits[i].first, info_sub);\n+        }\n+\n+        UniValue info(UniValue::VOBJ);\n+        info.pushKV(\"ranges\", ranges);\n+        info.pushKV(\"total_fees\", total_fees);\n+        ret.pushKV(\"fee_histogram\", info);\n+    }\n+\n     return ret;\n }\n \n static RPCHelpMan getmempoolinfo()\n {\n     return RPCHelpMan{\"getmempoolinfo\",\n                 \"\\nReturns details on the active state of the TX memory pool.\\n\",\n-                {},\n+                {\n+                    // {\"with_fee_histogram\", RPCArg::Type::BOOL, /* default */ \"false\", \"True for including the fee histogram in the response\"},\n+                    {\"fee_histogram\", RPCArg::Type::STR, /* default */ \"false\", \"Provide fee limits in format: '1,2,3,5,200,1000'\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599793002",
      "id" : 599793002,
      "in_reply_to_id" : 598261128,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTc5MzAwMg==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1576,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 618888213,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599793002",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599832829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599832829"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I added an example.",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T18:31:07Z",
      "diff_hunk" : "@@ -1520,15 +1586,43 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"fees\", \"Cumulated fee of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"from_feerate\", \"Group contains transaction with feerates equal or greater than this value\"},\n+                                    {RPCResult::Type::NUM, \"to_feerate\", \"Group contains transaction with feerates less than than this value\"},\n+                                }},\n+                                {RPCResult::Type::NUM, \"total_fees\", \"Total available fees in mempool\"},\n+                            }},\n                     }},\n                 RPCExamples{\n                     HelpExampleCli(\"getmempoolinfo\", \"\")\n             + HelpExampleRpc(\"getmempoolinfo\", \"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599832829",
      "id" : 599832829,
      "in_reply_to_id" : 598259414,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTgzMjgyOQ==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1605,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 618938369,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599832829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599863046"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599863046"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For computing a fee rate per byte, have a look in `src/policy/feerate.{h, cpp}`. Here's a proposed diff (using the current code) to do explicit casts rather than implicit conversions and narrowing. The size denominators are calling `GetTxSize()`, which should be non-zero, but you can `CHECK_NONFATAL` on these. That said, you may be right that it can be done properly/better, as you asked, by using the `CFeeRate` ctors.\r\n\r\n<details><summary>diff</summary><p>\r\n\r\n```diff\r\n         for (const CTxMemPoolEntry& e : pool.mapTx) {\r\n-            const int size = (int)e.GetTxSize();\r\n-            CAmount fee = e.GetFee();\r\n-            uint64_t asize = e.GetSizeWithAncestors();\r\n-            CAmount afees = e.GetModFeesWithAncestors();\r\n-            uint64_t dsize = e.GetSizeWithDescendants();\r\n-            CAmount dfees = e.GetModFeesWithDescendants();\r\n-\r\n-            CAmount fpb = fee / size; // fee per byte\r\n-            CAmount afpb = afees / asize; // fee per byte including ancestors\r\n-            CAmount dfpb = dfees / dsize; // fee per byte including descendants\r\n-            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\r\n-            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\r\n+            const CAmount fee{e.GetFee()};\r\n+            const CAmount afees{e.GetModFeesWithAncestors()};\r\n+            const CAmount dfees{e.GetModFeesWithDescendants()};\r\n+\r\n+            const int64_t size{static_cast<int64_t>(e.GetTxSize())};\r\n+            const int64_t asize{static_cast<int64_t>(e.GetSizeWithAncestors())};\r\n+            const int64_t dsize{static_cast<int64_t>(e.GetSizeWithDescendants())};\r\n+\r\n+            CHECK_NONFATAL(size > 0);\r\n+            CHECK_NONFATAL(asize > 0);\r\n+            CHECK_NONFATAL(dsize > 0);\r\n+            CHECK_NONFATAL(asize + dsize - size > 0);\r\n+\r\n+            CAmount fpb{fee / size};     // fee per byte\r\n+            CAmount afpb{afees / asize}; // fee per byte including ancestors\r\n+            CAmount dfpb{dfees / dsize}; // fee per byte including descendants\r\n+            CAmount tfpb{(afees + dfees - fee) / (asize + dsize - size)};\r\n+            CAmount feeperbyte{std::max(std::min(dfpb, tfpb), std::min(fpb, afpb))};\r\n```\r\n</p></details>\r\n",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:16:45Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599863046",
      "id" : 599863046,
      "in_reply_to_id" : 598259105,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg2MzA0Ng==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1527,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 618977549,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599863046",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599864037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599864037"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(note, `CAmount` is `int64_t`, see `src/amount.h`)",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:18:20Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599864037",
      "id" : 599864037,
      "in_reply_to_id" : 598259105,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg2NDAzNw==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1527,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 618978887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599864037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599868315"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599868315"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> The argument is a JSON array of amounts (fees). I have fixed it.\r\n\r\nYes, seems better now\r\n```\r\nArguments:\r\n1. fee_histogram    (json array, optional) Fee amounts\r\n     [\r\n       fee,         (numeric or string, required) A fee amount\r\n       ...\r\n     ]\r\n```",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:25:16Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; i--) {\n+                if (feeperbyte >= limits[i].second) {\n+                    sizes[i] += size;\n+                    count[i]++;\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        CAmount total_fees = 0; // Track total amount of available fees in mempool\n+        UniValue ranges(UniValue::VOBJ);\n+        for (size_t i = 0; i < limits.size(); i++) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"sizes\", sizes[i]);\n+            info_sub.pushKV(\"count\", count[i]);\n+            info_sub.pushKV(\"fees\", fees[i]);\n+            info_sub.pushKV(\"from_feerate\", limits[i].first);\n+\n+            if (i == limits.size() - 1) {\n+                info_sub.pushKV(\"to_feerate\", \"Max\"); // TODO.\n+            } else {\n+                info_sub.pushKV(\"to_feerate\", limits[i + 1].first);\n+            }\n+\n+            total_fees += fees[i];\n+            ranges.pushKV(limits[i].first, info_sub);\n+        }\n+\n+        UniValue info(UniValue::VOBJ);\n+        info.pushKV(\"ranges\", ranges);\n+        info.pushKV(\"total_fees\", total_fees);\n+        ret.pushKV(\"fee_histogram\", info);\n+    }\n+\n     return ret;\n }\n \n static RPCHelpMan getmempoolinfo()\n {\n     return RPCHelpMan{\"getmempoolinfo\",\n                 \"\\nReturns details on the active state of the TX memory pool.\\n\",\n-                {},\n+                {\n+                    // {\"with_fee_histogram\", RPCArg::Type::BOOL, /* default */ \"false\", \"True for including the fee histogram in the response\"},\n+                    {\"fee_histogram\", RPCArg::Type::STR, /* default */ \"false\", \"Provide fee limits in format: '1,2,3,5,200,1000'\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599868315",
      "id" : 599868315,
      "in_reply_to_id" : 598261128,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg2ODMxNQ==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1576,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 618984524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599868315",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599873660"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599873660"
         }
      },
      "author_association" : "MEMBER",
      "body" : "New examples look good, thanks.\r\n```\r\n> bitcoin-cli getmempoolinfo \r\n> bitcoin-cli getmempoolinfo [\"0.00000001\",\"0.00000010\",\"0.00000100\",\"0.00000200\",\"0.00000400\",\"0.00000800\"]\r\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"getmempoolinfo\", \"params\": []}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"getmempoolinfo\", \"params\": [[\"0.00000001\",\"0.00000010\",\"0.00000100\",\"0.00000200\",\"0.00000400\",\"0.00000800\"]]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\n```\r\n",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:33:41Z",
      "diff_hunk" : "@@ -1520,15 +1586,43 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"fees\", \"Cumulated fee of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"from_feerate\", \"Group contains transaction with feerates equal or greater than this value\"},\n+                                    {RPCResult::Type::NUM, \"to_feerate\", \"Group contains transaction with feerates less than than this value\"},\n+                                }},\n+                                {RPCResult::Type::NUM, \"total_fees\", \"Total available fees in mempool\"},\n+                            }},\n                     }},\n                 RPCExamples{\n                     HelpExampleCli(\"getmempoolinfo\", \"\")\n             + HelpExampleRpc(\"getmempoolinfo\", \"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599873660",
      "id" : 599873660,
      "in_reply_to_id" : 598259414,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg3MzY2MA==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1605,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 618991407,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599873660",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599875604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599875604"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like the help is missing the \"ranges\" JSON object, returned by the output, that encompasses the feerate groups (tested on signet):\r\n\r\nhelp\r\n```\r\n\"fee_histogram\" : {        (json object)\r\n    \"<feerate-group>\" : {    (json object) Object per feerate group\r\n      \"sizes\" : n,           (numeric) Cumulated size of all transactions in feerate group\r\n      \"count\" : n,           (numeric) Amount of transactions in feerate group\r\n      \"fees\" : n,            (numeric) Cumulated fee of all transactions in feerate group\r\n      \"from_feerate\" : n,    (numeric) Group contains transaction with feerates equal or greater than this value\r\n      \"to_feerate\" : n       (numeric) Group contains transaction with feerates less than than this value\r\n    },\r\n```\r\nactual output\r\n```\r\n  \"fee_histogram\": {\r\n    \"ranges\": {\r\n      \"0.00000001\": {\r\n        \"sizes\": 0,\r\n        \"count\": 0,\r\n        \"fees\": 0,\r\n        \"from_feerate\": \"0.00000001\",\r\n        \"to_feerate\": \"0.0000001\"\r\n      },\r\n      ...\r\n```\r\n",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:36:53Z",
      "diff_hunk" : "@@ -1520,15 +1589,41 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599875604",
      "id" : 599875604,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg3NTYwNA==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1595,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 618993997,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599875604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599877072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599877072"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Great!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:39:12Z",
      "diff_hunk" : "@@ -1520,15 +1586,43 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"fees\", \"Cumulated fee of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"from_feerate\", \"Group contains transaction with feerates equal or greater than this value\"},\n+                                    {RPCResult::Type::NUM, \"to_feerate\", \"Group contains transaction with feerates less than than this value\"},\n+                                }},\n+                                {RPCResult::Type::NUM, \"total_fees\", \"Total available fees in mempool\"},\n+                            }},\n                     }},\n                 RPCExamples{\n                     HelpExampleCli(\"getmempoolinfo\", \"\")\n             + HelpExampleRpc(\"getmempoolinfo\", \"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599877072",
      "id" : 599877072,
      "in_reply_to_id" : 598259414,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg3NzA3Mg==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1605,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 618995866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599877072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599877546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599877546"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks. Will have a look!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:40:01Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599877546",
      "id" : 599877546,
      "in_reply_to_id" : 598259105,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg3NzU0Ng==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1527,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 618996495,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599877546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599877954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599877954"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see. Will fix. Thank you",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:40:40Z",
      "diff_hunk" : "@@ -1520,15 +1589,41 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599877954",
      "id" : 599877954,
      "in_reply_to_id" : 599875604,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg3Nzk1NA==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1595,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 618997026,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599877954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599880561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599880561"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IIUC these should be feerates, not fees\r\n```suggestion\r\n                            {\"fee_rate\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"Fee rate to group the fees by\"},\r\n```",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:44:07Z",
      "diff_hunk" : "@@ -1501,14 +1502,82 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            const int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; --i) {\n+                if (feeperbyte >= limits[i].second) {\n+                    sizes[i] += size;\n+                    ++count[i];\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        CAmount total_fees = 0; // Track total amount of available fees in mempool\n+        UniValue ranges(UniValue::VOBJ);\n+        for (size_t i = 0; i < limits.size(); ++i) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"sizes\", sizes[i]);\n+            info_sub.pushKV(\"count\", count[i]);\n+            info_sub.pushKV(\"fees\", fees[i]);\n+            info_sub.pushKV(\"from_feerate\", limits[i].first);\n+\n+            if (i == limits.size() - 1) {\n+                info_sub.pushKV(\"to_feerate\", \"Max\"); // TODO.\n+            } else {\n+                info_sub.pushKV(\"to_feerate\", limits[i + 1].first);\n+            }\n+\n+            total_fees += fees[i];\n+            ranges.pushKV(limits[i].first, info_sub);\n+        }\n+\n+        UniValue info(UniValue::VOBJ);\n+        info.pushKV(\"ranges\", ranges);\n+        info.pushKV(\"total_fees\", total_fees);\n+        ret.pushKV(\"fee_histogram\", info);\n+    }\n+\n     return ret;\n }\n \n static RPCHelpMan getmempoolinfo()\n {\n     return RPCHelpMan{\"getmempoolinfo\",\n                 \"\\nReturns details on the active state of the TX memory pool.\\n\",\n-                {},\n+                {\n+                    {\"fee_histogram\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"Fee amounts\",\n+                        {\n+                            {\"fee\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"A fee amount\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599880561",
      "id" : 599880561,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg4MDU2MQ==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1577,
      "original_position" : 94,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619000071,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599880561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599884912"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599884912"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If I understand correctly, this should be something like \"Fee statistics grouped by feerate ranges\"",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:50:43Z",
      "diff_hunk" : "@@ -1501,14 +1502,82 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            const int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; --i) {\n+                if (feeperbyte >= limits[i].second) {\n+                    sizes[i] += size;\n+                    ++count[i];\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        CAmount total_fees = 0; // Track total amount of available fees in mempool\n+        UniValue ranges(UniValue::VOBJ);\n+        for (size_t i = 0; i < limits.size(); ++i) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"sizes\", sizes[i]);\n+            info_sub.pushKV(\"count\", count[i]);\n+            info_sub.pushKV(\"fees\", fees[i]);\n+            info_sub.pushKV(\"from_feerate\", limits[i].first);\n+\n+            if (i == limits.size() - 1) {\n+                info_sub.pushKV(\"to_feerate\", \"Max\"); // TODO.\n+            } else {\n+                info_sub.pushKV(\"to_feerate\", limits[i + 1].first);\n+            }\n+\n+            total_fees += fees[i];\n+            ranges.pushKV(limits[i].first, info_sub);\n+        }\n+\n+        UniValue info(UniValue::VOBJ);\n+        info.pushKV(\"ranges\", ranges);\n+        info.pushKV(\"total_fees\", total_fees);\n+        ret.pushKV(\"fee_histogram\", info);\n+    }\n+\n     return ret;\n }\n \n static RPCHelpMan getmempoolinfo()\n {\n     return RPCHelpMan{\"getmempoolinfo\",\n                 \"\\nReturns details on the active state of the TX memory pool.\\n\",\n-                {},\n+                {\n+                    {\"fee_histogram\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"Fee amounts\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599884912",
      "id" : 599884912,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg4NDkxMg==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1575,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619005710,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599884912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599886221"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599886221"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                                    {RPCResult::Type::NUM, \"size\", \"Cumulated size of all transactions in feerate group\"},\r\n```",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:52:15Z",
      "diff_hunk" : "@@ -1520,15 +1589,41 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599886221",
      "id" : 599886221,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg4NjIyMQ==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1597,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619007089,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599886221",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599888505"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599888505"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Probably both should be \"fees\" in this sentence, like in line 1603.",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:56:13Z",
      "diff_hunk" : "@@ -1520,15 +1589,41 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"fees\", \"Cumulated fee of all transactions in feerate group\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599888505",
      "id" : 599888505,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg4ODUwNQ==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1599,
      "original_position" : 113,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619010167,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599888505",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599889272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599889272"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/transaction/transactions/ in both lines 1600 and 1601\r\n\r\ns/than than/than/",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-23T19:57:21Z",
      "diff_hunk" : "@@ -1520,15 +1589,41 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"fees\", \"Cumulated fee of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"from_feerate\", \"Group contains transaction with feerates equal or greater than this value\"},\n+                                    {RPCResult::Type::NUM, \"to_feerate\", \"Group contains transaction with feerates less than than this value\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r599889272",
      "id" : 599889272,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTg4OTI3Mg==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1601,
      "original_position" : 115,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619011160,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/599889272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sorry for the \"rolling\" review comments. My internet can drop out several times an hour, so it's to avoid losing the review in progress.",
      "created_at" : "2021-03-23T19:59:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#issuecomment-805196045",
      "id" : 805196045,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21422",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNTE5NjA0NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-23T19:59:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/805196045",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600210241"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600210241"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, my comment didn't make it through the internet:\r\n\r\nIt would be good to use feerate values in sat/vB for both the user input and the output here, as we are slowly moving from BTC/kvB to sat/vB fee rate units, per user demand.\r\n\r\nCurrently, you can construct a feerate from a sat/vB amount with `CFeeRate{amount, COIN}`. I proposed `CFeeRate::FromSatB` and `FromBtcKb` named constructors in #20790, #20391, #20546 but none of the three are/were merged.",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-24T06:42:11Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600210241",
      "id" : 600210241,
      "in_reply_to_id" : 598259105,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDIxMDI0MQ==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1527,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619369988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600210241",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600210767"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600210767"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed, thanks!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-24T06:43:29Z",
      "diff_hunk" : "@@ -1520,15 +1589,41 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"fees\", \"Cumulated fee of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"from_feerate\", \"Group contains transaction with feerates equal or greater than this value\"},\n+                                    {RPCResult::Type::NUM, \"to_feerate\", \"Group contains transaction with feerates less than than this value\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600210767",
      "id" : 600210767,
      "in_reply_to_id" : 599889272,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDIxMDc2Nw==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1601,
      "original_position" : 115,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619370649,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600210767",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600210809"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600210809"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed, thanks!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-24T06:43:34Z",
      "diff_hunk" : "@@ -1520,15 +1589,41 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                    {RPCResult::Type::NUM, \"fees\", \"Cumulated fee of all transactions in feerate group\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600210809",
      "id" : 600210809,
      "in_reply_to_id" : 599888505,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDIxMDgwOQ==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1599,
      "original_position" : 113,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619370683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600210809",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600210842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600210842"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed, thanks!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-24T06:43:39Z",
      "diff_hunk" : "@@ -1520,15 +1589,41 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                {\n+                                    {RPCResult::Type::NUM, \"sizes\", \"Cumulated size of all transactions in feerate group\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600210842",
      "id" : 600210842,
      "in_reply_to_id" : 599886221,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDIxMDg0Mg==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1597,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619370727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600210842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600210927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600210927"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed, thanks!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-24T06:43:53Z",
      "diff_hunk" : "@@ -1501,14 +1502,82 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            const int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants\n+            CAmount tfpb = (afees + dfees - fee) / (asize + dsize - size);\n+            CAmount feeperbyte = std::max(std::min(dfpb, tfpb), std::min(fpb, afpb));\n+\n+            // Distribute feerates into feelimits\n+            for (int i = limits.size() - 1; i >= 0; --i) {\n+                if (feeperbyte >= limits[i].second) {\n+                    sizes[i] += size;\n+                    ++count[i];\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        CAmount total_fees = 0; // Track total amount of available fees in mempool\n+        UniValue ranges(UniValue::VOBJ);\n+        for (size_t i = 0; i < limits.size(); ++i) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"sizes\", sizes[i]);\n+            info_sub.pushKV(\"count\", count[i]);\n+            info_sub.pushKV(\"fees\", fees[i]);\n+            info_sub.pushKV(\"from_feerate\", limits[i].first);\n+\n+            if (i == limits.size() - 1) {\n+                info_sub.pushKV(\"to_feerate\", \"Max\"); // TODO.\n+            } else {\n+                info_sub.pushKV(\"to_feerate\", limits[i + 1].first);\n+            }\n+\n+            total_fees += fees[i];\n+            ranges.pushKV(limits[i].first, info_sub);\n+        }\n+\n+        UniValue info(UniValue::VOBJ);\n+        info.pushKV(\"ranges\", ranges);\n+        info.pushKV(\"total_fees\", total_fees);\n+        ret.pushKV(\"fee_histogram\", info);\n+    }\n+\n     return ret;\n }\n \n static RPCHelpMan getmempoolinfo()\n {\n     return RPCHelpMan{\"getmempoolinfo\",\n                 \"\\nReturns details on the active state of the TX memory pool.\\n\",\n-                {},\n+                {\n+                    {\"fee_histogram\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"Fee amounts\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600210927",
      "id" : 600210927,
      "in_reply_to_id" : 599884912,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDIxMDkyNw==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1575,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619370843,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600210927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600211868"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600211868"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Originally, fee rates were in sats but then I found https://github.com/bitcoin/bitcoin/pull/12240 which made me think that sats -> BTC is preferred. ",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-24T06:46:19Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600211868",
      "id" : 600211868,
      "in_reply_to_id" : 598259105,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDIxMTg2OA==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1527,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619372049,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600211868",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600213131"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600213131"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "So I will switch it back to use sats. Thanks for the `CFeeRate{amount, COIN}` tip!",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-24T06:49:29Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600213131",
      "id" : 600213131,
      "in_reply_to_id" : 598259105,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDIxMzEzMQ==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1527,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619373626,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600213131",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600213464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600213464"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It should be fixed now. Even though I still think `ranges` is not a good word. `groups`?",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-24T06:50:17Z",
      "diff_hunk" : "@@ -1520,15 +1589,41 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600213464",
      "id" : 600213464,
      "in_reply_to_id" : 599875604,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDIxMzQ2NA==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1595,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 619374017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600213464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600784015"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600784015"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonatack Do I understand correctly that `CAmount fpb = fee / size` is equivalent with `CAmount fpb = CFeeRate(fee, size).GetFee(1)`? Is that what you propose to use?\r\n",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-24T18:57:58Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r600784015",
      "id" : 600784015,
      "in_reply_to_id" : 598259105,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDc4NDAxNQ==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1527,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 620130983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600784015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r601617528"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601617528"
         }
      },
      "author_association" : "MEMBER",
      "body" : "naming style nit, per developer-notes.md \r\n```suggestion\r\n            CAmount fee_per_byte{std::max(std::min(dfpb, tfpb), std::min(fpb, afpb))};\r\n```",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-25T15:53:20Z",
      "diff_hunk" : "@@ -1501,14 +1502,88 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeRates& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            const CAmount fee{e.GetFee()};\n+            const CAmount afees{e.GetModFeesWithAncestors()};\n+            const CAmount dfees{e.GetModFeesWithDescendants()};\n+\n+            const int64_t size{static_cast<int64_t>(e.GetTxSize())};\n+            const int64_t asize{static_cast<int64_t>(e.GetSizeWithAncestors())};\n+            const int64_t dsize{static_cast<int64_t>(e.GetSizeWithDescendants())};\n+\n+            CHECK_NONFATAL(size > 0);\n+            CHECK_NONFATAL(asize > 0);\n+            CHECK_NONFATAL(dsize > 0);\n+            CHECK_NONFATAL(asize + dsize - size > 0);\n+\n+            CAmount fpb{fee / size};     // fee per byte\n+            CAmount afpb{afees / asize}; // fee per byte including ancestors\n+            CAmount dfpb{dfees / dsize}; // fee per byte including descendants\n+            CAmount tfpb{(afees + dfees - fee) / (asize + dsize - size)};\n+            CAmount feeperbyte{std::max(std::min(dfpb, tfpb), std::min(fpb, afpb))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r601617528",
      "id" : 601617528,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTYxNzUyOA==",
      "original_commit_id" : "fb0824ce3c7b9d1b5432da38321ba5b06e74c908",
      "original_line" : 1535,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 621285483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601617528",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r601666661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601666661"
         }
      },
      "author_association" : "MEMBER",
      "body" : "missing quotes in the first example, I think, and perhaps use example fee rates that return more interesting results\r\n```diff\r\n-                    HelpExampleCli(\"getmempoolinfo\", R\"([1, 10, 100, 200, 400, 800])\") +\r\n+                    HelpExampleCli(\"getmempoolinfo\", R\"('[1, 5, 10, 25, 50, 100]')\") +\r\n                     HelpExampleRpc(\"getmempoolinfo\", \"\") +\r\n-                    HelpExampleRpc(\"getmempoolinfo\", R\"([1, 10, 100, 200, 400, 800])\")\r\n+                    HelpExampleRpc(\"getmempoolinfo\", R\"([1, 5, 10, 25, 50, 100])\")\r\n```\r\n",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-25T16:49:15Z",
      "diff_hunk" : "@@ -1520,15 +1595,42 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ_DYN, \"ranges\", \"Feerate groups\",\n+                                {\n+                                    {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                    {\n+                                        {RPCResult::Type::NUM, \"size\", \"Cumulated size of all transactions in feerate group\"},\n+                                        {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                        {RPCResult::Type::NUM, \"fees\", \"Cumulated fees of all transactions in feerate group (in satoshis)\"},\n+                                        {RPCResult::Type::NUM, \"from_feerate\", \"Group contains transactions with feerates equal or greater than this value (in satoshis)\"},\n+                                        {RPCResult::Type::NUM, \"to_feerate\", \"Group contains transactions with feerates less than this value (in satoshis)\"},\n+                                    }}}},\n+                                {RPCResult::Type::NUM, \"total_fees\", \"Total available fees in mempool (in satoshis)\"},\n+                            }},\n                     }},\n                 RPCExamples{\n-                    HelpExampleCli(\"getmempoolinfo\", \"\")\n-            + HelpExampleRpc(\"getmempoolinfo\", \"\")\n+                    HelpExampleCli(\"getmempoolinfo\", \"\") +\n+                    HelpExampleCli(\"getmempoolinfo\", R\"([1, 10, 100, 200, 400, 800])\") +",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r601666661",
      "id" : 601666661,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTY2NjY2MQ==",
      "original_commit_id" : "fb0824ce3c7b9d1b5432da38321ba5b06e74c908",
      "original_line" : 1616,
      "original_position" : 132,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 621285483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601666661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r601711097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601711097"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This field seems to be the same as the `total_fee` field above in the same output (except that it is now in sat/vB instead of BTC/kvB)?",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-25T17:44:17Z",
      "diff_hunk" : "@@ -1520,15 +1595,42 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ_DYN, \"ranges\", \"Feerate groups\",\n+                                {\n+                                    {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",\n+                                    {\n+                                        {RPCResult::Type::NUM, \"size\", \"Cumulated size of all transactions in feerate group\"},\n+                                        {RPCResult::Type::NUM, \"count\", \"Amount of transactions in feerate group\"},\n+                                        {RPCResult::Type::NUM, \"fees\", \"Cumulated fees of all transactions in feerate group (in satoshis)\"},\n+                                        {RPCResult::Type::NUM, \"from_feerate\", \"Group contains transactions with feerates equal or greater than this value (in satoshis)\"},\n+                                        {RPCResult::Type::NUM, \"to_feerate\", \"Group contains transactions with feerates less than this value (in satoshis)\"},\n+                                    }}}},\n+                                {RPCResult::Type::NUM, \"total_fees\", \"Total available fees in mempool (in satoshis)\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r601711097",
      "id" : 601711097,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTcxMTA5Nw==",
      "original_commit_id" : "fb0824ce3c7b9d1b5432da38321ba5b06e74c908",
      "original_line" : 1611,
      "original_position" : 125,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 621285483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601711097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r601729062"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601729062"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can verify this with, for example\r\n```cpp\r\n            assert(fpb == CFeeRate(fee, size).GetFee(1));\r\n            assert(afpb == CFeeRate(afees, asize).GetFee(1));\r\n            assert(dfpb == CFeeRate(dfees, dsize).GetFee(1));\r\n            assert(tfpb == CFeeRate(afees + dfees - fee, asize + dsize - size).GetFee(1));\r\n```\r\n(I left this as a hint in the suggestions in https://github.com/bitcoin/bitcoin/pull/21422#pullrequestreview-621285483, but please remove it and decide what you think is best)",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-25T18:07:44Z",
      "diff_hunk" : "@@ -1501,14 +1502,79 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeLimits& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            int size = (int)e.GetTxSize();\n+            CAmount fee = e.GetFee();\n+            uint64_t asize = e.GetSizeWithAncestors();\n+            CAmount afees = e.GetModFeesWithAncestors();\n+            uint64_t dsize = e.GetSizeWithDescendants();\n+            CAmount dfees = e.GetModFeesWithDescendants();\n+\n+            CAmount fpb = fee / size; // fee per byte\n+            CAmount afpb = afees / asize; // fee per byte including ancestors\n+            CAmount dfpb = dfees / dsize; // fee per byte including descendants",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r601729062",
      "id" : 601729062,
      "in_reply_to_id" : 598259105,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTcyOTA2Mg==",
      "original_commit_id" : "81cd4bb4822ed236fd561c8686f464abb3b1492a",
      "original_line" : 1527,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 621434271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601729062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r601730401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601730401"
         }
      },
      "author_association" : "MEMBER",
      "body" : "maybe `fee rate groups`",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-25T18:09:32Z",
      "diff_hunk" : "@@ -1520,15 +1589,41 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ, \"<feerate-group>\", \"Object per feerate group\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r601730401",
      "id" : 601730401,
      "in_reply_to_id" : 599875604,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTczMDQwMQ==",
      "original_commit_id" : "3d923f4de9a58b5c4cc8365d3d6d9ae94d036ac9",
      "original_line" : 1595,
      "original_position" : 109,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 621435975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601730401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r602114346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602114346"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Applied.",
      "commit_id" : "ccb043c8099f7a4cadd85274221b67dda0731caf",
      "created_at" : "2021-03-26T08:59:39Z",
      "diff_hunk" : "@@ -1501,14 +1502,88 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeRates& limits = feeLimits.value();\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<uint64_t> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            const CAmount fee{e.GetFee()};\n+            const CAmount afees{e.GetModFeesWithAncestors()};\n+            const CAmount dfees{e.GetModFeesWithDescendants()};\n+\n+            const int64_t size{static_cast<int64_t>(e.GetTxSize())};\n+            const int64_t asize{static_cast<int64_t>(e.GetSizeWithAncestors())};\n+            const int64_t dsize{static_cast<int64_t>(e.GetSizeWithDescendants())};\n+\n+            CHECK_NONFATAL(size > 0);\n+            CHECK_NONFATAL(asize > 0);\n+            CHECK_NONFATAL(dsize > 0);\n+            CHECK_NONFATAL(asize + dsize - size > 0);\n+\n+            CAmount fpb{fee / size};     // fee per byte\n+            CAmount afpb{afees / asize}; // fee per byte including ancestors\n+            CAmount dfpb{dfees / dsize}; // fee per byte including descendants\n+            CAmount tfpb{(afees + dfees - fee) / (asize + dsize - size)};\n+            CAmount feeperbyte{std::max(std::min(dfpb, tfpb), std::min(fpb, afpb))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21422#discussion_r602114346",
      "id" : 602114346,
      "in_reply_to_id" : 601617528,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjExNDM0Ng==",
      "original_commit_id" : "fb0824ce3c7b9d1b5432da38321ba5b06e74c908",
      "original_line" : 1535,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 621906152,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21422",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-26T09:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602114346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
         "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kiminuo/followers",
         "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kiminuo",
         "id" : 58662979,
         "login" : "kiminuo",
         "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
         "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
         "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
         "repos_url" : "https://api.github.com/users/kiminuo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kiminuo"
      }
   }
]
