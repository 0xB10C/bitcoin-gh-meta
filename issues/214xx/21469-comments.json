[
   {
      "author_association" : "MEMBER",
      "body" : "utACK 28b3a32060\r\n\r\nI repeated the backport myself and got the same result.\r\n\r\nYou could also pick the `rpc_invalid_address_message.py` functional test, removing the precise error messages (which aren't returned in v0.21):\r\n\r\n<details>\r\n<summary>rpc_invalid_address_message.py</summary>\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n# Copyright (c) 2020 The Bitcoin Core developers\r\n# Distributed under the MIT software license, see the accompanying\r\n# file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n\"\"\"Test error messages for 'getaddressinfo' and 'validateaddress' RPC commands.\"\"\"\r\n\r\nfrom test_framework.test_framework import BitcoinTestFramework\r\n\r\nfrom test_framework.util import (\r\n    assert_equal,\r\n    assert_raises_rpc_error,\r\n)\r\n\r\nBECH32_VALID = 'bcrt1qtmp74ayg7p24uslctssvjm06q5phz4yrxucgnv'\r\nBECH32_INVALID_BECH32 = 'bcrt1p0xlxvlhemja6c4dqv22uapctqupfhlxm9h8z3k2e72q4k9hcz7vqdmchcc'\r\nBECH32_INVALID_BECH32M = 'bcrt1qw508d6qejxtdg4y5r3zarvary0c5xw7k35mrzd'\r\nBECH32_INVALID_VERSION = 'bcrt130xlxvlhemja6c4dqv22uapctqupfhlxm9h8z3k2e72q4k9hcz7vqynjegk'\r\nBECH32_INVALID_SIZE = 'bcrt1s0xlxvlhemja6c4dqv22uapctqupfhlxm9h8z3k2e72q4k9hcz7v8n0nx0muaewav25430mtr'\r\nBECH32_INVALID_V0_SIZE = 'bcrt1qw508d6qejxtdg4y5r3zarvary0c5xw7kqqq5k3my'\r\nBECH32_INVALID_PREFIX = 'bc1pw508d6qejxtdg4y5r3zarvary0c5xw7kw508d6qejxtdg4y5r3zarvary0c5xw7k7grplx'\r\n\r\nBASE58_VALID = 'mipcBbFg9gMiCh81Kj8tqqdgoZub1ZJRfn'\r\nBASE58_INVALID_PREFIX = '17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem'\r\n\r\nINVALID_ADDRESS = 'asfah14i8fajz0123f'\r\n\r\nclass InvalidAddressErrorMessageTest(BitcoinTestFramework):\r\n    def set_test_params(self):\r\n        self.setup_clean_chain = True\r\n        self.num_nodes = 1\r\n\r\n    def skip_test_if_missing_module(self):\r\n        self.skip_if_no_wallet()\r\n\r\n    def test_validateaddress(self):\r\n        node = self.nodes[0]\r\n\r\n        # Bech32\r\n        info = node.validateaddress(BECH32_INVALID_SIZE)\r\n        assert not info['isvalid']\r\n\r\n        info = node.validateaddress(BECH32_INVALID_PREFIX)\r\n        assert not info['isvalid']\r\n\r\n        info = node.validateaddress(BECH32_INVALID_BECH32)\r\n        assert not info['isvalid']\r\n\r\n        info = node.validateaddress(BECH32_INVALID_BECH32M)\r\n        assert not info['isvalid']\r\n\r\n        info = node.validateaddress(BECH32_INVALID_V0_SIZE)\r\n        assert not info['isvalid']\r\n\r\n        info = node.validateaddress(BECH32_VALID)\r\n        assert info['isvalid']\r\n        assert 'error' not in info\r\n\r\n        # Base58\r\n        info = node.validateaddress(BASE58_INVALID_PREFIX)\r\n        assert not info['isvalid']\r\n\r\n        info = node.validateaddress(BASE58_VALID)\r\n        assert info['isvalid']\r\n        assert 'error' not in info\r\n\r\n        # Invalid address format\r\n        info = node.validateaddress(INVALID_ADDRESS)\r\n        assert not info['isvalid']\r\n\r\n    def test_getaddressinfo(self):\r\n        node = self.nodes[0]\r\n\r\n        assert_raises_rpc_error(-5, \"Invalid address\", node.getaddressinfo, BECH32_INVALID_SIZE)\r\n\r\n        assert_raises_rpc_error(-5, \"Invalid address\", node.getaddressinfo, BECH32_INVALID_PREFIX)\r\n\r\n        assert_raises_rpc_error(-5, \"Invalid address\", node.getaddressinfo, BASE58_INVALID_PREFIX)\r\n\r\n        assert_raises_rpc_error(-5, \"Invalid address\", node.getaddressinfo, INVALID_ADDRESS)\r\n\r\n    def run_test(self):\r\n        self.test_validateaddress()\r\n        self.test_getaddressinfo()\r\n\r\n\r\nif __name__ == '__main__':\r\n    InvalidAddressErrorMessageTest().main()\r\n```\r\n\r\n</details>",
      "created_at" : "2021-03-19T09:58:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21469#issuecomment-802704384",
      "id" : 802704384,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21469",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMjcwNDM4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-19T09:58:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/802704384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
