[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99413385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99413385"
         }
      },
      "body" : "Is there some reason not to use exceptions?",
      "commit_id" : "45ec058131e2d0066c2db396e3090a183032b407",
      "created_at" : "2017-02-03T20:09:30Z",
      "diff_hunk" : "@@ -786,6 +786,21 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const std::set<int>& setSubtractFeeFromOutputs, bool keepReserveKey = true, const CTxDestination& destChange = CNoDestination());\n \n     /**\n+     * Bumps the fee of an opt-in-RBF transaction <txid>,\n+     * replacing it with a new transaction <wtxNew>\n+     */\n+    enum BumpFeeResult\n+    {\n+        BumpFeeResult_OK,\n+        BumpFeeResult_INVALID_ADDRESS_OR_KEY,\n+        BumpFeeResult_INVALID_REQUEST,\n+        BumpFeeResult_INVALID_PARAMETER,\n+        BumpFeeResult_WALLET_ERROR,\n+        BumpFeeResult_MISC_ERROR,\n+    };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99413385",
      "id" : 99413385,
      "original_commit_id" : "45ec058131e2d0066c2db396e3090a183032b407",
      "original_position" : 15,
      "path" : "src/wallet/wallet.h",
      "position" : 15,
      "pull_request_review_id" : 20093949,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681",
      "updated_at" : "2017-02-03T20:09:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99413385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99413798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99413798"
         }
      },
      "body" : "I though about using exceptions but came to the conclusion that a simple result state enum will (probably) allow more flexibility for further optimisations. But no strong opinion.",
      "commit_id" : "45ec058131e2d0066c2db396e3090a183032b407",
      "created_at" : "2017-02-03T20:12:01Z",
      "diff_hunk" : "@@ -786,6 +786,21 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const std::set<int>& setSubtractFeeFromOutputs, bool keepReserveKey = true, const CTxDestination& destChange = CNoDestination());\n \n     /**\n+     * Bumps the fee of an opt-in-RBF transaction <txid>,\n+     * replacing it with a new transaction <wtxNew>\n+     */\n+    enum BumpFeeResult\n+    {\n+        BumpFeeResult_OK,\n+        BumpFeeResult_INVALID_ADDRESS_OR_KEY,\n+        BumpFeeResult_INVALID_REQUEST,\n+        BumpFeeResult_INVALID_PARAMETER,\n+        BumpFeeResult_WALLET_ERROR,\n+        BumpFeeResult_MISC_ERROR,\n+    };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99413798",
      "id" : 99413798,
      "original_commit_id" : "45ec058131e2d0066c2db396e3090a183032b407",
      "original_position" : 15,
      "path" : "src/wallet/wallet.h",
      "position" : 15,
      "pull_request_review_id" : 20094408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681",
      "updated_at" : "2017-02-03T20:12:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99413798",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "I prefer an enum here (I'll elaborate if wanted).",
      "created_at" : "2017-02-03T20:13:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9681#issuecomment-277350461",
      "id" : 277350461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9681",
      "updated_at" : "2017-02-03T20:13:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277350461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Concept ACK, it is better to have this in wallet than in the RPC code, especially as the code is going to be used by the GUI.\r\n\r\nNo opinion on how to handle the errors. Though returning an enum is consistent with some other wallet functions that return a status.\r\n\r\nAside: As said earlier on IRC I'm not entirely happy with the current trend of moving everything wallet related to CWallet - we're creating a \"god class\". It would be nice to see if we can parcel up the functionality and separate concerns, to avoid a huge file and exponentially growing complexity.\r\n\r\nBut in any case, this is a step forward...\r\n",
      "created_at" : "2017-02-06T13:26:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9681#issuecomment-277679692",
      "id" : 277679692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9681",
      "updated_at" : "2017-02-06T13:26:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277679692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99681884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99681884"
         }
      },
      "body" : "could use \"enum class\" here to avoid the \"BumpFeeResult_\" prefixes here while still requiring them where the values are referenced.",
      "commit_id" : "45ec058131e2d0066c2db396e3090a183032b407",
      "created_at" : "2017-02-06T20:56:16Z",
      "diff_hunk" : "@@ -786,6 +786,21 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const std::set<int>& setSubtractFeeFromOutputs, bool keepReserveKey = true, const CTxDestination& destChange = CNoDestination());\n \n     /**\n+     * Bumps the fee of an opt-in-RBF transaction <txid>,\n+     * replacing it with a new transaction <wtxNew>\n+     */\n+    enum BumpFeeResult\n+    {\n+        BumpFeeResult_OK,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99681884",
      "id" : 99681884,
      "original_commit_id" : "8993411d7b3e6fe2c4baa917874941ed95c39188",
      "original_position" : 9,
      "path" : "src/wallet/wallet.h",
      "position" : 9,
      "pull_request_review_id" : 20366230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681",
      "updated_at" : "2017-02-06T21:39:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99681884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99683051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99683051"
         }
      },
      "body" : "It appears that you are only copying, not moving the CalculateMaximumSignedTxSize function in this commit (8993411d7b3e6fe2c4baa917874941ed95c39188 `[Move] move bumpfee core logic to CWallet`). Would make more sense to remove it from rpcwallet.cpp in this commit instead of the next one.",
      "commit_id" : "45ec058131e2d0066c2db396e3090a183032b407",
      "created_at" : "2017-02-06T21:01:38Z",
      "diff_hunk" : "@@ -2290,6 +2291,223 @@ bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount&\n     return res;\n }\n \n+// Calculate the size of the transaction assuming all signatures are max size\n+// Use DummySignatureCreator, which inserts 72 byte signatures everywhere.\n+// TODO: re-use this in CWallet::CreateTransaction (right now\n+// CreateTransaction uses the constructed dummy-signed tx to do a priority\n+// calculation, but we should be able to refactor after priority is removed).\n+// NOTE: this requires that all inputs must be in mapWallet (eg the tx should\n+// be IsAllFromMe).\n+int64_t CalculateMaximumSignedTxSize(const CTransaction &tx)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99683051",
      "id" : 99683051,
      "original_commit_id" : "8993411d7b3e6fe2c4baa917874941ed95c39188",
      "original_position" : 19,
      "path" : "src/wallet/wallet.cpp",
      "position" : 19,
      "pull_request_review_id" : 20366230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681",
      "updated_at" : "2017-02-06T21:39:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99683051",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99685109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99685109"
         }
      },
      "body" : "Enum is not being used in this commit (8993411d7b3e6fe2c4baa917874941ed95c39188 `[Move] move bumpfee core logic to CWallet`), would probably make more sense to define in the next commit.",
      "commit_id" : "45ec058131e2d0066c2db396e3090a183032b407",
      "created_at" : "2017-02-06T21:11:50Z",
      "diff_hunk" : "@@ -786,6 +786,21 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const std::set<int>& setSubtractFeeFromOutputs, bool keepReserveKey = true, const CTxDestination& destChange = CNoDestination());\n \n     /**\n+     * Bumps the fee of an opt-in-RBF transaction <txid>,\n+     * replacing it with a new transaction <wtxNew>\n+     */\n+    enum BumpFeeResult",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99685109",
      "id" : 99685109,
      "original_commit_id" : "8993411d7b3e6fe2c4baa917874941ed95c39188",
      "original_position" : 7,
      "path" : "src/wallet/wallet.h",
      "position" : 7,
      "pull_request_review_id" : 20366230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681",
      "updated_at" : "2017-02-06T21:39:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99685109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99686304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99686304"
         }
      },
      "body" : "Can drop \"enum\" in c++.",
      "commit_id" : "45ec058131e2d0066c2db396e3090a183032b407",
      "created_at" : "2017-02-06T21:17:56Z",
      "diff_hunk" : "@@ -2313,71 +2313,85 @@ int64_t CalculateMaximumSignedTxSize(const CTransaction &tx)\n     if (!pwalletMain->DummySignTx(txNew, vCoins)) {\n         // This should never happen, because IsAllFromMe(ISMINE_SPENDABLE)\n         // implies that we can sign for every input.\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction contains inputs that cannot be signed\");\n+        return -1;\n     }\n     return GetVirtualTransactionSize(txNew);\n }\n \n enum CWallet::BumpFeeResult CWallet::BumpFee(uint256 txid, int newConfirmTarget, bool specifiedConfirmTarget, CAmount totalFee, bool newTxReplaceable, CAmount& nOldFee, CAmount& nNewFee, std::shared_ptr<CWalletTx>& wtxNew, std::vector<std::string>& vErrors)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99686304",
      "id" : 99686304,
      "original_commit_id" : "45ec058131e2d0066c2db396e3090a183032b407",
      "original_position" : 10,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 20366230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681",
      "updated_at" : "2017-02-06T21:39:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99686304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99689422"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99689422"
         }
      },
      "body" : "I don't think it's a good idea to return a mutable pointer to a copy of the CWalletTx that isn't actually in mapwallet, because changes a caller makes to this pointer might have unexpected or no effects. Since the shared pointer doesn't appear to be needed here or in #9697, I think it'd be better to return just wtxBumped.tx or wtxBumped.GetHash() instead.",
      "commit_id" : "45ec058131e2d0066c2db396e3090a183032b407",
      "created_at" : "2017-02-06T21:32:56Z",
      "diff_hunk" : "@@ -2469,43 +2487,47 @@ enum CWallet::BumpFeeResult CWallet::BumpFee(uint256 txid, int newConfirmTarget,\n     CTransaction txNewConst(tx);\n     int nIn = 0;\n     for (auto& input : tx.vin) {\n-        std::map<uint256, CWalletTx>::const_iterator mi = pwalletMain->mapWallet.find(input.prevout.hash);\n-        assert(mi != pwalletMain->mapWallet.end() && input.prevout.n < mi->second.tx->vout.size());\n+        std::map<uint256, CWalletTx>::const_iterator mi = mapWallet.find(input.prevout.hash);\n+        assert(mi != mapWallet.end() && input.prevout.n < mi->second.tx->vout.size());\n         const CScript& scriptPubKey = mi->second.tx->vout[input.prevout.n].scriptPubKey;\n         const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n         SignatureData sigdata;\n-        if (!ProduceSignature(TransactionSignatureCreator(pwalletMain, &txNewConst, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Can't sign transaction.\");\n+        if (!ProduceSignature(TransactionSignatureCreator(this, &txNewConst, nIn, amount, SIGHASH_ALL), scriptPubKey, sigdata)) {\n+            vErrors.push_back(\"Can't sign transaction.\");\n+            return CWallet::BumpFeeResult_WALLET_ERROR;\n         }\n         UpdateTransaction(tx, nIn, sigdata);\n         nIn++;\n     }\n \n     // commit/broadcast the tx\n-    CReserveKey reservekey(pwalletMain);\n-    CWalletTx wtxBumped(pwalletMain, MakeTransactionRef(std::move(tx)));\n-    wtxBumped.mapValue[\"replaces_txid\"] = hash.ToString();\n+    CReserveKey reservekey(this);\n+    CWalletTx wtxBumped(this, MakeTransactionRef(std::move(tx)));\n+    wtxBumped.mapValue[\"replaces_txid\"] = txid.ToString();\n     CValidationState state;\n-    if (!pwalletMain->CommitTransaction(wtxBumped, reservekey, g_connman.get(), state)) {\n+    if (!CommitTransaction(wtxBumped, reservekey, g_connman.get(), state)) {\n         // NOTE: CommitTransaction never returns false, so this should never happen.\n-        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Error: The transaction was rejected! Reason given: %s\", state.GetRejectReason()));\n+        vErrors.push_back(strprintf(\"Error: The transaction was rejected! Reason given: %s\", state.GetRejectReason()));\n+        return CWallet::BumpFeeResult_WALLET_ERROR;\n     }\n \n-    UniValue vErrors(UniValue::VARR);\n     if (state.IsInvalid()) {\n         // This can happen if the mempool rejected the transaction.  Report\n         // what happened in the \"errors\" response.\n         vErrors.push_back(strprintf(\"Error: The transaction was rejected: %s\", FormatStateMessage(state)));\n     }\n \n     // mark the original tx as bumped\n-    if (!pwalletMain->MarkReplaced(wtx.GetHash(), wtxBumped.GetHash())) {\n+    if (!MarkReplaced(wtx.GetHash(), wtxBumped.GetHash())) {\n         // TODO: see if JSON-RPC has a standard way of returning a response\n         // along with an exception. It would be good to return information about\n         // wtxBumped to the caller even if marking the original transaction\n         // replaced does not succeed for some reason.\n         vErrors.push_back(\"Error: Created new bumpfee transaction but could not mark the original transaction as replaced.\");\n     }\n+\n+    wtxNew = std::make_shared<CWalletTx>(wtxBumped);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9681#discussion_r99689422",
      "id" : 99689422,
      "original_commit_id" : "45ec058131e2d0066c2db396e3090a183032b407",
      "original_position" : 219,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 20366230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9681",
      "updated_at" : "2017-02-06T21:39:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99689422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
