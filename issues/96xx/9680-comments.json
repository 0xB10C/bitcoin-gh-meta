[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r132828446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132828446"
         }
      },
      "body" : "Isn't this condition taking advantage of the dummy `CWalletTx`? If so replace `.at()` with `.find()` and test the iterator.",
      "commit_id" : "51b93a90a403abed3716782d86dada3d4e92e38e",
      "created_at" : "2017-08-12T22:44:22Z",
      "diff_hunk" : "@@ -578,9 +578,9 @@ void WalletModel::getOutputs(const std::vector<COutPoint>& vOutpoints, std::vect\n     for (const COutPoint& outpoint : vOutpoints)\n     {\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;\n-        int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n+        int nDepth = wallet->mapWallet.at(outpoint.hash).GetDepthInMainChain();\n         if (nDepth < 0) continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r132828446",
      "id" : 132828446,
      "original_commit_id" : "2245b37ea967ca0047766479cd8e85409399fe0a",
      "original_position" : 6,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 53,
      "pull_request_review_id" : 55953348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680",
      "updated_at" : "2017-08-14T18:33:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132828446",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r132828461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132828461"
         }
      },
      "body" : "Another lookup? With the above suggestion it can be avoided.",
      "commit_id" : "51b93a90a403abed3716782d86dada3d4e92e38e",
      "created_at" : "2017-08-12T22:45:15Z",
      "diff_hunk" : "@@ -578,9 +578,9 @@ void WalletModel::getOutputs(const std::vector<COutPoint>& vOutpoints, std::vect\n     for (const COutPoint& outpoint : vOutpoints)\n     {\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;\n-        int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n+        int nDepth = wallet->mapWallet.at(outpoint.hash).GetDepthInMainChain();\n         if (nDepth < 0) continue;\n-        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, nDepth, true /* spendable */, true /* solvable */, true /* safe */);\n+        COutput out(&wallet->mapWallet.at(outpoint.hash), outpoint.n, nDepth, true /* spendable */, true /* solvable */, true /* safe */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r132828461",
      "id" : 132828461,
      "original_commit_id" : "2245b37ea967ca0047766479cd8e85409399fe0a",
      "original_position" : 8,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 55,
      "pull_request_review_id" : 55953348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680",
      "updated_at" : "2017-08-14T18:33:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132828461",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r132828536"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132828536"
         }
      },
      "body" : "Replace with `.find(txid)` above (before `.count()`) and test if exists, also avoids 2nd lookup.",
      "commit_id" : "51b93a90a403abed3716782d86dada3d4e92e38e",
      "created_at" : "2017-08-12T22:48:55Z",
      "diff_hunk" : "@@ -246,7 +246,7 @@ bool CFeeBumper::commit(CWallet *pWallet)\n         currentResult = BumpFeeResult::MISC_ERROR;\n         return false;\n     }\n-    CWalletTx& oldWtx = pWallet->mapWallet[txid];\n+    CWalletTx& oldWtx = pWallet->mapWallet.at(txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r132828536",
      "id" : 132828536,
      "original_commit_id" : "2245b37ea967ca0047766479cd8e85409399fe0a",
      "original_position" : 5,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 5,
      "pull_request_review_id" : 55953348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680",
      "updated_at" : "2017-08-14T18:33:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/132828536",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r133024921"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133024921"
         }
      },
      "body" : "> Isn't this condition taking advantage of the dummy CWalletTx? If so replace .at() with .find() and test the iterator.\r\n\r\nDummy constructor isn't called here because of the count check above.",
      "commit_id" : "51b93a90a403abed3716782d86dada3d4e92e38e",
      "created_at" : "2017-08-14T18:27:19Z",
      "diff_hunk" : "@@ -578,9 +578,9 @@ void WalletModel::getOutputs(const std::vector<COutPoint>& vOutpoints, std::vect\n     for (const COutPoint& outpoint : vOutpoints)\n     {\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;\n-        int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n+        int nDepth = wallet->mapWallet.at(outpoint.hash).GetDepthInMainChain();\n         if (nDepth < 0) continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r133024921",
      "id" : 133024921,
      "original_commit_id" : "2245b37ea967ca0047766479cd8e85409399fe0a",
      "original_position" : 6,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 53,
      "pull_request_review_id" : 56161841,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680",
      "updated_at" : "2017-08-14T18:33:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133024921",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r133025684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133025684"
         }
      },
      "body" : "> Another lookup? With the above suggestion it can be avoided.\r\n\r\nIt looks like this is done in your PR #11039. I'll review that PR, so this PR can be limited to replacing [] lookups with at() lookups.",
      "commit_id" : "51b93a90a403abed3716782d86dada3d4e92e38e",
      "created_at" : "2017-08-14T18:30:10Z",
      "diff_hunk" : "@@ -578,9 +578,9 @@ void WalletModel::getOutputs(const std::vector<COutPoint>& vOutpoints, std::vect\n     for (const COutPoint& outpoint : vOutpoints)\n     {\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;\n-        int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n+        int nDepth = wallet->mapWallet.at(outpoint.hash).GetDepthInMainChain();\n         if (nDepth < 0) continue;\n-        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, nDepth, true /* spendable */, true /* solvable */, true /* safe */);\n+        COutput out(&wallet->mapWallet.at(outpoint.hash), outpoint.n, nDepth, true /* spendable */, true /* solvable */, true /* safe */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r133025684",
      "id" : 133025684,
      "original_commit_id" : "2245b37ea967ca0047766479cd8e85409399fe0a",
      "original_position" : 8,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 55,
      "pull_request_review_id" : 56161841,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680",
      "updated_at" : "2017-08-14T18:33:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133025684",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r133025891"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133025891"
         }
      },
      "body" : "> Replace with .find(txid) above (before .count()) and test if exists, also avoids 2nd lookup.\r\n\r\nAlso seems to be taken care of in #11039.",
      "commit_id" : "51b93a90a403abed3716782d86dada3d4e92e38e",
      "created_at" : "2017-08-14T18:31:05Z",
      "diff_hunk" : "@@ -246,7 +246,7 @@ bool CFeeBumper::commit(CWallet *pWallet)\n         currentResult = BumpFeeResult::MISC_ERROR;\n         return false;\n     }\n-    CWalletTx& oldWtx = pWallet->mapWallet[txid];\n+    CWalletTx& oldWtx = pWallet->mapWallet.at(txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9680#discussion_r133025891",
      "id" : 133025891,
      "original_commit_id" : "2245b37ea967ca0047766479cd8e85409399fe0a",
      "original_position" : 5,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 5,
      "pull_request_review_id" : 56161841,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9680",
      "updated_at" : "2017-08-14T18:33:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133025891",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "> Get rid of CWalletTx default constructor does what is described and eliminates the possibility of empty transaction entries being inadvertently created by mapWallet[hash] accesses.\r\n\r\nGreat! I've always been wary of this projects' gratuitous use of `[]` for retrieval, as we don't want to accidentally create empty objects and because it generates more code. The second is true even when it's shielded with `.count()` or such. `.at`/`.find` is better.\r\n\r\nSo concept ACK at least - haven't been able to review all the changes in detail.",
      "created_at" : "2017-08-18T07:16:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9680#issuecomment-323278892",
      "id" : 323278892,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9680",
      "updated_at" : "2017-08-18T07:16:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323278892",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
