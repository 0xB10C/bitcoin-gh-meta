[
   {
      "body" : "I'm not 100% sure if we want this. If we, we would need at least to updated the `listsinceblock`'s RPC help message to mention that if one requests tx's from a block outside the main-chain, that the result will also contain transactions not in the main chain.",
      "created_at" : "2017-01-24T08:01:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-274734514",
      "id" : 274734514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-01-24T08:01:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274734514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli Updated the help output. I am not sure what the reasons for not wanting this are, unless you're referring to resource consumption. I think it's a rare (but important) enough case to warrant it.\r\n\r\nIt would definitely make it easier for RPC applications checking the validity of existing transactions to explicitly provide these when a reorg affects them. The only other alternative right now is to keep a list of transactions with confirmations less than some arbitrary number (100) and to loop through these every time a reorg is encountered to ensure they're actually still present.\r\n\r\nEdit: one concern of my own is whether a naive implementation would ignore the confirmations value and simply think the transaction existed in the chain, even though the opposite is the case. I wondered if maybe a different key for the returned results should be used, e.g. \"reorged\" or something. I.e. you would get `{\"transactions\": [list of txs that changed], \"reorged\": [list of txs that disappeared], \"lastblock\": <hash>}`...",
      "created_at" : "2017-01-24T08:11:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-274736218",
      "id" : 274736218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-01-24T09:18:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274736218",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "@kallewoof: I missed the point that if you pass in an orphan block to list since, you also get the transactions upwards the chain-fork on the main chain. At first sight, I though you get only tx from the re-orged-off chain in that case.\r\n\r\nConcept ACK (and I think it would be clever to list them in an extra array element `reorged:[]`.",
      "created_at" : "2017-01-24T12:59:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-274796547",
      "id" : 274796547,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-01-24T12:59:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274796547",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli Gotcha. I updated the OP to clarify that it's also including transactions from the fork point to the active chain tip. I also moved the off chain transactions into a new 'reorged' array. (f501acc & 461d5a3)",
      "created_at" : "2017-01-24T13:24:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-274801494",
      "id" : 274801494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-01-24T13:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274801494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97649800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97649800"
         }
      },
      "body" : "I think it would be helpful to add a comment about -depth here. I was staring at this a long time to figure out how it worked. Comment could say: \"Pass -depth as minDepth to prevent any filtering in ListTransactions. (Works because tx can only conflict with transactions after pindex, so GetDepthInMainChain will always return at least (1-depth)).\"",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-01-24T21:03:46Z",
      "diff_hunk" : "@@ -1729,6 +1730,25 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n             ListTransactions(tx, \"*\", 0, true, transactions, filter);\n     }\n \n+    // when a reorg'd block is requested, we also list any relevant transactions\n+    // in the blocks of the chain that was detached\n+    while (paltindex && paltindex != pindex)\n+    {\n+        CBlock block;\n+        if (!ReadBlockFromDisk(block, paltindex, Params().GetConsensus()))\n+        {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");\n+        }\n+        for (const CTransactionRef& tx : block.vtx)\n+        {\n+            if (pwalletMain->mapWallet.count(tx->GetHash()))\n+            {\n+                ListTransactions(pwalletMain->mapWallet[tx->GetHash()], \"*\", -depth, true, transactions, filter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97649800",
      "id" : 97649800,
      "original_commit_id" : "fff58755318c5654d510eb5a5b3482a296eff7e7",
      "original_position" : 36,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 18266370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97649800",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97652282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97652282"
         }
      },
      "body" : "Would s/back to the fork point/from blockhash back to the fork point/ to clarify, because it sounds to me like this is referring to transactions between the active tip and the fork point (making the rest of the sentence confusing).",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-01-24T21:14:15Z",
      "diff_hunk" : "@@ -1641,7 +1641,9 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n     if (request.fHelp)\n         throw runtime_error(\n             \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly)\\n\"\n-            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted\\n\"\n+            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted.\\n\"\n+            \"If \\\"blockhash\\\" is no longer a part of the main chain, all transactions affecting the node wallet back to the fork point are included, as well as those from \\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97652282",
      "id" : 97652282,
      "original_commit_id" : "0c3d1f56f38f7a6cc7fb248804c8c88e53da9c6e",
      "original_position" : 6,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 18266370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97652282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97652701"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97652701"
         }
      },
      "body" : "Need documentation update to accompany this.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-01-24T21:16:20Z",
      "diff_hunk" : "@@ -1756,6 +1757,7 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     UniValue ret(UniValue::VOBJ);\n     ret.push_back(Pair(\"transactions\", transactions));\n+    ret.push_back(Pair(\"reorged\", reorged));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97652701",
      "id" : 97652701,
      "original_commit_id" : "f501acc7b313c309d327546736da5461ea483127",
      "original_position" : 21,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 18266370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97652701",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97654691"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97654691"
         }
      },
      "body" : "Really sending from node 1  here (even if key originally comes from node 2)",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-01-24T21:26:03Z",
      "diff_hunk" : "@@ -76,5 +76,98 @@ def run_test (self):\n                 break\n         assert_equal(found, True)\n \n+    def test_double_spend(self):\n+        '''\n+        This tests the case where the same UTXO is spent twice on two separate\n+        blocks as part of a reorg.\n+\n+             ab0\n+          /       \\\n+        aa1 [tx0]   bb1 [tx1]\n+         |           |\n+        aa2         bb2\n+         |           |\n+        aa3         bb3\n+                     |\n+                    bb4\n+\n+        Problematic case:\n+\n+        1. User 1 receives BTC in tx0 from utxo1 in block aa1.\n+        2. User 2 receives BTC in tx1 from utxo1 (same) in block bb1\n+        3. User 1 sees 2 confirmations at block aa3.\n+        4. Reorg into bb chain.\n+        5. User 1 asks `listsinceblock aa3` and does not see that tx0 is now\n+           invalidated.\n+\n+        Currently the solution to this is to detect that a reorg'd block is\n+        asked for in listsinceblock, and to iterate back over existing blocks up\n+        until the fork point, and to include all transactions that relate to the\n+        node wallet.\n+        '''\n+\n+        assert_equal(self.is_network_split, False)\n+        self.sync_all()\n+\n+        # Split network into two\n+        self.split_network()\n+        assert_equal(self.is_network_split, True)\n+\n+        # share utxo between nodes[1] and nodes[2]\n+        utxos = self.nodes[2].listunspent()\n+        utxo = utxos[0]\n+        privkey = self.nodes[2].dumpprivkey(utxo['address'])\n+        self.nodes[1].importprivkey(privkey)\n+\n+        # send from nodes[2] using utxo to nodes[0]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97654691",
      "id" : 97654691,
      "original_commit_id" : "461d5a37a3d83edbeedb701ed207bc14412dee0d",
      "original_position" : 56,
      "path" : "qa/rpc-tests/listsinceblock.py",
      "position" : null,
      "pull_request_review_id" : 18266370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97654691",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97655014"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97655014"
         }
      },
      "body" : "unused variable",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-01-24T21:27:38Z",
      "diff_hunk" : "@@ -76,5 +76,98 @@ def run_test (self):\n                 break\n         assert_equal(found, True)\n \n+    def test_double_spend(self):\n+        '''\n+        This tests the case where the same UTXO is spent twice on two separate\n+        blocks as part of a reorg.\n+\n+             ab0\n+          /       \\\n+        aa1 [tx0]   bb1 [tx1]\n+         |           |\n+        aa2         bb2\n+         |           |\n+        aa3         bb3\n+                     |\n+                    bb4\n+\n+        Problematic case:\n+\n+        1. User 1 receives BTC in tx0 from utxo1 in block aa1.\n+        2. User 2 receives BTC in tx1 from utxo1 (same) in block bb1\n+        3. User 1 sees 2 confirmations at block aa3.\n+        4. Reorg into bb chain.\n+        5. User 1 asks `listsinceblock aa3` and does not see that tx0 is now\n+           invalidated.\n+\n+        Currently the solution to this is to detect that a reorg'd block is\n+        asked for in listsinceblock, and to iterate back over existing blocks up\n+        until the fork point, and to include all transactions that relate to the\n+        node wallet.\n+        '''\n+\n+        assert_equal(self.is_network_split, False)\n+        self.sync_all()\n+\n+        # Split network into two\n+        self.split_network()\n+        assert_equal(self.is_network_split, True)\n+\n+        # share utxo between nodes[1] and nodes[2]\n+        utxos = self.nodes[2].listunspent()\n+        utxo = utxos[0]\n+        privkey = self.nodes[2].dumpprivkey(utxo['address'])\n+        self.nodes[1].importprivkey(privkey)\n+\n+        # send from nodes[2] using utxo to nodes[0]\n+        change = '%.8f' % (float(utxo['amount']) - 1.0003)\n+        recipientDict = {\n+            self.nodes[0].getnewaddress(): 1,\n+            self.nodes[1].getnewaddress(): change,\n+        }\n+        utxoDicts = [{\n+            'txid': utxo['txid'],\n+            'vout': utxo['vout'],\n+        }]\n+        txid1 = self.nodes[1].sendrawtransaction(\n+            self.nodes[1].signrawtransaction(\n+                self.nodes[1].createrawtransaction(utxoDicts, recipientDict))['hex'])\n+        print('txid1 =', txid1)\n+\n+        # send from nodes[2] using utxo to nodes[3]\n+        recipientDict2 = {\n+            self.nodes[3].getnewaddress(): 1,\n+            self.nodes[2].getnewaddress(): change,\n+        }\n+        txid2 = self.nodes[2].sendrawtransaction(\n+            self.nodes[2].signrawtransaction(\n+                self.nodes[2].createrawtransaction(utxoDicts, recipientDict2))['hex'])\n+        print('txid2 =', txid2)\n+\n+        # generate on both sides\n+        lastblockhash = self.nodes[1].generate(6)[5]\n+        self.nodes[2].generate(7)\n+        print('lastblockhash=%s' % (lastblockhash))\n+\n+        self.sync_all()\n+\n+        self.join_network()\n+\n+        # gettransaction should work for txid1\n+        tmp = self.nodes[0].gettransaction(txid1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97655014",
      "id" : 97655014,
      "original_commit_id" : "461d5a37a3d83edbeedb701ed207bc14412dee0d",
      "original_position" : 91,
      "path" : "qa/rpc-tests/listsinceblock.py",
      "position" : null,
      "pull_request_review_id" : 18266370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97655014",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97656509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97656509"
         }
      },
      "body" : "Maybe condense this block to a single line, and add a check for txid2 (untested)\r\n\r\n```\r\nassert_equal(any(tx['txid'] == txid1 for tx in lsbres['reorged']), True)\r\nassert_equal(any(tx['txid'] == txid2 for tx in lsbres['transactions']), True)\r\n```",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-01-24T21:34:54Z",
      "diff_hunk" : "@@ -76,5 +76,98 @@ def run_test (self):\n                 break\n         assert_equal(found, True)\n \n+    def test_double_spend(self):\n+        '''\n+        This tests the case where the same UTXO is spent twice on two separate\n+        blocks as part of a reorg.\n+\n+             ab0\n+          /       \\\n+        aa1 [tx0]   bb1 [tx1]\n+         |           |\n+        aa2         bb2\n+         |           |\n+        aa3         bb3\n+                     |\n+                    bb4\n+\n+        Problematic case:\n+\n+        1. User 1 receives BTC in tx0 from utxo1 in block aa1.\n+        2. User 2 receives BTC in tx1 from utxo1 (same) in block bb1\n+        3. User 1 sees 2 confirmations at block aa3.\n+        4. Reorg into bb chain.\n+        5. User 1 asks `listsinceblock aa3` and does not see that tx0 is now\n+           invalidated.\n+\n+        Currently the solution to this is to detect that a reorg'd block is\n+        asked for in listsinceblock, and to iterate back over existing blocks up\n+        until the fork point, and to include all transactions that relate to the\n+        node wallet.\n+        '''\n+\n+        assert_equal(self.is_network_split, False)\n+        self.sync_all()\n+\n+        # Split network into two\n+        self.split_network()\n+        assert_equal(self.is_network_split, True)\n+\n+        # share utxo between nodes[1] and nodes[2]\n+        utxos = self.nodes[2].listunspent()\n+        utxo = utxos[0]\n+        privkey = self.nodes[2].dumpprivkey(utxo['address'])\n+        self.nodes[1].importprivkey(privkey)\n+\n+        # send from nodes[2] using utxo to nodes[0]\n+        change = '%.8f' % (float(utxo['amount']) - 1.0003)\n+        recipientDict = {\n+            self.nodes[0].getnewaddress(): 1,\n+            self.nodes[1].getnewaddress(): change,\n+        }\n+        utxoDicts = [{\n+            'txid': utxo['txid'],\n+            'vout': utxo['vout'],\n+        }]\n+        txid1 = self.nodes[1].sendrawtransaction(\n+            self.nodes[1].signrawtransaction(\n+                self.nodes[1].createrawtransaction(utxoDicts, recipientDict))['hex'])\n+        print('txid1 =', txid1)\n+\n+        # send from nodes[2] using utxo to nodes[3]\n+        recipientDict2 = {\n+            self.nodes[3].getnewaddress(): 1,\n+            self.nodes[2].getnewaddress(): change,\n+        }\n+        txid2 = self.nodes[2].sendrawtransaction(\n+            self.nodes[2].signrawtransaction(\n+                self.nodes[2].createrawtransaction(utxoDicts, recipientDict2))['hex'])\n+        print('txid2 =', txid2)\n+\n+        # generate on both sides\n+        lastblockhash = self.nodes[1].generate(6)[5]\n+        self.nodes[2].generate(7)\n+        print('lastblockhash=%s' % (lastblockhash))\n+\n+        self.sync_all()\n+\n+        self.join_network()\n+\n+        # gettransaction should work for txid1\n+        tmp = self.nodes[0].gettransaction(txid1)\n+\n+        # listsinceblock(lastblockhash) should now include txid1, as seen from nodes[0]\n+        lsbres = self.nodes[0].listsinceblock(lastblockhash)\n+        found = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97656509",
      "id" : 97656509,
      "original_commit_id" : "461d5a37a3d83edbeedb701ed207bc14412dee0d",
      "original_position" : 95,
      "path" : "qa/rpc-tests/listsinceblock.py",
      "position" : null,
      "pull_request_review_id" : 18266370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97656509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97709529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97709529"
         }
      },
      "body" : "@ryanofsky Ahh, nice! I didn't know about `any()`.\r\n\r\nSince txid2 is not related to nodes[0], it will not list it anywhere so that second assert_equal will not be true.\r\n\r\nThanks for all the feedback! I believe everything you suggested is in 9caa0ec & 131df5a.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-01-25T04:56:54Z",
      "diff_hunk" : "@@ -76,5 +76,98 @@ def run_test (self):\n                 break\n         assert_equal(found, True)\n \n+    def test_double_spend(self):\n+        '''\n+        This tests the case where the same UTXO is spent twice on two separate\n+        blocks as part of a reorg.\n+\n+             ab0\n+          /       \\\n+        aa1 [tx0]   bb1 [tx1]\n+         |           |\n+        aa2         bb2\n+         |           |\n+        aa3         bb3\n+                     |\n+                    bb4\n+\n+        Problematic case:\n+\n+        1. User 1 receives BTC in tx0 from utxo1 in block aa1.\n+        2. User 2 receives BTC in tx1 from utxo1 (same) in block bb1\n+        3. User 1 sees 2 confirmations at block aa3.\n+        4. Reorg into bb chain.\n+        5. User 1 asks `listsinceblock aa3` and does not see that tx0 is now\n+           invalidated.\n+\n+        Currently the solution to this is to detect that a reorg'd block is\n+        asked for in listsinceblock, and to iterate back over existing blocks up\n+        until the fork point, and to include all transactions that relate to the\n+        node wallet.\n+        '''\n+\n+        assert_equal(self.is_network_split, False)\n+        self.sync_all()\n+\n+        # Split network into two\n+        self.split_network()\n+        assert_equal(self.is_network_split, True)\n+\n+        # share utxo between nodes[1] and nodes[2]\n+        utxos = self.nodes[2].listunspent()\n+        utxo = utxos[0]\n+        privkey = self.nodes[2].dumpprivkey(utxo['address'])\n+        self.nodes[1].importprivkey(privkey)\n+\n+        # send from nodes[2] using utxo to nodes[0]\n+        change = '%.8f' % (float(utxo['amount']) - 1.0003)\n+        recipientDict = {\n+            self.nodes[0].getnewaddress(): 1,\n+            self.nodes[1].getnewaddress(): change,\n+        }\n+        utxoDicts = [{\n+            'txid': utxo['txid'],\n+            'vout': utxo['vout'],\n+        }]\n+        txid1 = self.nodes[1].sendrawtransaction(\n+            self.nodes[1].signrawtransaction(\n+                self.nodes[1].createrawtransaction(utxoDicts, recipientDict))['hex'])\n+        print('txid1 =', txid1)\n+\n+        # send from nodes[2] using utxo to nodes[3]\n+        recipientDict2 = {\n+            self.nodes[3].getnewaddress(): 1,\n+            self.nodes[2].getnewaddress(): change,\n+        }\n+        txid2 = self.nodes[2].sendrawtransaction(\n+            self.nodes[2].signrawtransaction(\n+                self.nodes[2].createrawtransaction(utxoDicts, recipientDict2))['hex'])\n+        print('txid2 =', txid2)\n+\n+        # generate on both sides\n+        lastblockhash = self.nodes[1].generate(6)[5]\n+        self.nodes[2].generate(7)\n+        print('lastblockhash=%s' % (lastblockhash))\n+\n+        self.sync_all()\n+\n+        self.join_network()\n+\n+        # gettransaction should work for txid1\n+        tmp = self.nodes[0].gettransaction(txid1)\n+\n+        # listsinceblock(lastblockhash) should now include txid1, as seen from nodes[0]\n+        lsbres = self.nodes[0].listsinceblock(lastblockhash)\n+        found = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97709529",
      "id" : 97709529,
      "original_commit_id" : "461d5a37a3d83edbeedb701ed207bc14412dee0d",
      "original_position" : 95,
      "path" : "qa/rpc-tests/listsinceblock.py",
      "position" : null,
      "pull_request_review_id" : 18326657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97709529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97799838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97799838"
         }
      },
      "body" : "Maybe change tx0 and tx1 to tx1 and tx2 to match code. Also code is generating 6 and 7 blocks instead of 3 and 4, so maybe that could be changed to match the example.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-01-25T15:18:07Z",
      "diff_hunk" : "@@ -76,5 +76,93 @@ def run_test (self):\n                 break\n         assert_equal(found, True)\n \n+    def test_double_spend(self):\n+        '''\n+        This tests the case where the same UTXO is spent twice on two separate\n+        blocks as part of a reorg.\n+\n+             ab0\n+          /       \\\n+        aa1 [tx0]   bb1 [tx1]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97799838",
      "id" : 97799838,
      "original_commit_id" : "131df5adebca61733ff3a29705140799c16a6294",
      "original_position" : 20,
      "path" : "qa/rpc-tests/listsinceblock.py",
      "position" : null,
      "pull_request_review_id" : 18420780,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97799838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97802387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97802387"
         }
      },
      "body" : "Would remove parentheses since (at minimum -depth) is the important part. Also, technically I believe the minimum is 1-depth. Maybe:\r\n\r\n```\r\n// Use -depth as minDepth parameter to ListTransactions to prevent incoming\r\n// transactions from being filtered. These transactions have negative\r\n// confirmations, but always greater than -depth.\r\n```\r\n",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-01-25T15:28:02Z",
      "diff_hunk" : "@@ -1729,11 +1735,34 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n             ListTransactions(tx, \"*\", 0, true, transactions, filter);\n     }\n \n+    // when a reorg'd block is requested, we also list any relevant transactions\n+    // in the blocks of the chain that was detached\n+    UniValue reorged(UniValue::VARR);\n+    while (paltindex && paltindex != pindex)\n+    {\n+        CBlock block;\n+        if (!ReadBlockFromDisk(block, paltindex, Params().GetConsensus()))\n+        {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");\n+        }\n+        for (const CTransactionRef& tx : block.vtx)\n+        {\n+            if (pwalletMain->mapWallet.count(tx->GetHash()))\n+            {\n+                // Use -depth as minDepth parameter to ListTransactions, as these transactions have\n+                // negative (at minimum -depth) confirmations.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r97802387",
      "id" : 97802387,
      "original_commit_id" : "131df5adebca61733ff3a29705140799c16a6294",
      "original_position" : 61,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 18423488,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97802387",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "@ryanofsky Thanks for all the feedback! Updated.",
      "created_at" : "2017-01-25T22:47:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-275257452",
      "id" : 275257452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-01-25T22:47:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275257452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "Concept ACK.",
      "created_at" : "2017-01-26T07:19:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-275322827",
      "id" : 275322827,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-01-26T07:19:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275322827",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r98338381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98338381"
         }
      },
      "body" : "I dont believe this prevents listing transactions which were on both sides of the fork? I'm pretty sure we dont want to list such transactions in a \"reorged\" list.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-01-28T20:09:46Z",
      "diff_hunk" : "@@ -1729,11 +1735,35 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n             ListTransactions(tx, \"*\", 0, true, transactions, filter);\n     }\n \n+    // when a reorg'd block is requested, we also list any relevant transactions\n+    // in the blocks of the chain that was detached\n+    UniValue reorged(UniValue::VARR);\n+    while (paltindex && paltindex != pindex)\n+    {\n+        CBlock block;\n+        if (!ReadBlockFromDisk(block, paltindex, Params().GetConsensus()))\n+        {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");\n+        }\n+        for (const CTransactionRef& tx : block.vtx)\n+        {\n+            if (pwalletMain->mapWallet.count(tx->GetHash()))\n+            {\n+                // Use -depth as minDepth parameter to ListTransactions to prevent incoming\n+                // transactions from being filtered. These transactions have negative\n+                // confirmations, but always greater than -depth.\n+                ListTransactions(pwalletMain->mapWallet[tx->GetHash()], \"*\", -depth, true, reorged, filter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r98338381",
      "id" : 98338381,
      "original_commit_id" : "d92496cd4d044a248b69e8df4037860221eecc4b",
      "original_position" : 63,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 18980178,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98338381",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt I guess it comes down to what the user expects. I personally expected listsinceblock to show me anything I needed to keep an updated score of what's going on since the given block. In that sense, not showing a transaction vanishing would probably be considered a bug.\r\n\r\nRegarding showing an existing transaction in both reorged and transactions, I patched this by ensuring that any tx shown from the main chain is skipped over in the reorged list. See the new `test_double_send` test.",
      "created_at" : "2017-01-30T01:59:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-275965701",
      "id" : 275965701,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-01-30T01:59:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275965701",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "I agree with Matt, this isn't a bugfix, it's feature :) \r\n\r\nI think I'm in favor of adding this. I would be more supportive of naming them `replaced` rather than reorged if I understand the semantics properly. Strictly speaking, I'd say a reorged txn is any transaction that was between the old tip and the fork point?\r\n\r\nI would also think maybe making this information available with a default false parameter may be a good idea to introduce less changes for current users/legacy code.",
      "created_at" : "2017-01-30T08:45:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-276006681",
      "id" : 276006681,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-01-30T08:45:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/276006681",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "@JeremyRubin Changed as you said, except setting default of `include_replaced` to `true` as I think that will be the most useful case.",
      "created_at" : "2017-01-30T09:05:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-276010275",
      "id" : 276010275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-01-30T09:05:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/276010275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "Moving milestone to 0.15 as this was re-classified as a feature and the feature freeze is long past.",
      "created_at" : "2017-01-30T11:32:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-276040284",
      "id" : 276040284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-01-30T11:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/276040284",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99217146"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99217146"
         }
      },
      "body" : "Not sure this needs to be optional...?",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-02T20:53:33Z",
      "diff_hunk" : "@@ -1640,12 +1657,15 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     if (request.fHelp)\n         throw runtime_error(\n-            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly)\\n\"\n-            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted\\n\"\n+            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly include_replaced )\\n\"\n+            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted.\\n\"\n+            \"If \\\"blockhash\\\" is no longer a part of the main chain, all transactions affecting the node wallet from blockhash back to the fork point are included in the \\\"replaced\\\" array.\\n\"\n+            \"In addition, transactions from the fork point up to the tip of the active chain are included in \\\"transactions\\\".\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"blockhash\\\"            (string, optional) The block hash to list transactions since\\n\"\n             \"2. target_confirmations:    (numeric, optional) The confirmations required, must be 1 or more\\n\"\n             \"3. include_watchonly:       (bool, optional, default=false) Include transactions to watch-only addresses (see 'importaddress')\"\n+            \"4. include_replaced:        (bool, optional, default=true) Show transactions that were replaced due to a reorg in the \\\"replaced\\\" array\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99217146",
      "id" : 99217146,
      "original_commit_id" : "a7d1e2a37d3573e2a4ed9e9a7edb2e510ad24266",
      "original_position" : 66,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 19887655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99217146",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99218487"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99218487"
         }
      },
      "body" : "Why do we need `ListTransactions`'s return value? If it doesn't get inserted here, it won't later-on either, right?",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-02T21:00:08Z",
      "diff_hunk" : "@@ -1717,23 +1741,55 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n+    bool include_replaced = (request.params.size() < 4 || request.params[3].get_bool());\n+\n     int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n \n     UniValue transactions(UniValue::VARR);\n+    std::set<uint256> listed;\n \n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n     {\n         CWalletTx tx = (*it).second;\n \n         if (depth == -1 || tx.GetDepthInMainChain() < depth)\n-            ListTransactions(tx, \"*\", 0, true, transactions, filter);\n+        {\n+            if (ListTransactions(tx, \"*\", 0, true, transactions, filter) && include_replaced)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99218487",
      "id" : 99218487,
      "original_commit_id" : "a7d1e2a37d3573e2a4ed9e9a7edb2e510ad24266",
      "original_position" : 119,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 19887655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99218487",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99218671"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99218671"
         }
      },
      "body" : "IMO this PR doesn't need to modify `ListTransactions`, and this ought to be move to a separate PR.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-02T21:01:06Z",
      "diff_hunk" : "@@ -1334,12 +1334,26 @@ static void MaybePushAddress(UniValue & entry, const CTxDestination &dest)\n         entry.push_back(Pair(\"address\", addr.ToString()));\n }\n \n-void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDepth, bool fLong, UniValue& ret, const isminefilter& filter)\n+/**\n+ * List transactions based on the given criteria. If the criteria applied in\n+ * reference to being sent or received (if the ret UniValue array was appended\n+ * to), the function returns true, otherwise false is returned.\n+ *\n+ * @param  wtx        The wallet transaction.\n+ * @param  strAccount The account, if any, or \"*\" for all.\n+ * @param  nMinDepth  The minimum confirmation depth.\n+ * @param  fLong      Whether to include the JSON version of the transaction.\n+ * @param  ret        The UniValue into which the result is stored.\n+ * @param  filter     The \"is mine\" filter bool.\n+ * @return            true if appends were made to ret, false otherwise.\n+ */\n+bool ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDepth, bool fLong, UniValue& ret, const isminefilter& filter)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99218671",
      "id" : 99218671,
      "original_commit_id" : "a7d1e2a37d3573e2a4ed9e9a7edb2e510ad24266",
      "original_position" : 18,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 18,
      "pull_request_review_id" : 19887655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99218671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99221063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99221063"
         }
      },
      "body" : "For the case where tx0 is in reorged and main chain both (see `test_double_send`), both versions of the transaction will appear in the results (once in 'transactions' and once in 'replaced'). To prevent that, I check if `ListTransactions` appended to the transactions array -- if it did, I need to not include in replaced.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-02T21:13:14Z",
      "diff_hunk" : "@@ -1334,12 +1334,26 @@ static void MaybePushAddress(UniValue & entry, const CTxDestination &dest)\n         entry.push_back(Pair(\"address\", addr.ToString()));\n }\n \n-void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDepth, bool fLong, UniValue& ret, const isminefilter& filter)\n+/**\n+ * List transactions based on the given criteria. If the criteria applied in\n+ * reference to being sent or received (if the ret UniValue array was appended\n+ * to), the function returns true, otherwise false is returned.\n+ *\n+ * @param  wtx        The wallet transaction.\n+ * @param  strAccount The account, if any, or \"*\" for all.\n+ * @param  nMinDepth  The minimum confirmation depth.\n+ * @param  fLong      Whether to include the JSON version of the transaction.\n+ * @param  ret        The UniValue into which the result is stored.\n+ * @param  filter     The \"is mine\" filter bool.\n+ * @return            true if appends were made to ret, false otherwise.\n+ */\n+bool ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDepth, bool fLong, UniValue& ret, const isminefilter& filter)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99221063",
      "id" : 99221063,
      "original_commit_id" : "a7d1e2a37d3573e2a4ed9e9a7edb2e510ad24266",
      "original_position" : 18,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 18,
      "pull_request_review_id" : 19891711,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99221063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99221347"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99221347"
         }
      },
      "body" : "Me neither. It was mostly suggested as a way for legacy code to cope better, but only really crappy legacy code (that would break when a new key was added to an existing dictionary) would be affected I guess.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-02T21:14:38Z",
      "diff_hunk" : "@@ -1640,12 +1657,15 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     if (request.fHelp)\n         throw runtime_error(\n-            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly)\\n\"\n-            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted\\n\"\n+            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly include_replaced )\\n\"\n+            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted.\\n\"\n+            \"If \\\"blockhash\\\" is no longer a part of the main chain, all transactions affecting the node wallet from blockhash back to the fork point are included in the \\\"replaced\\\" array.\\n\"\n+            \"In addition, transactions from the fork point up to the tip of the active chain are included in \\\"transactions\\\".\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"blockhash\\\"            (string, optional) The block hash to list transactions since\\n\"\n             \"2. target_confirmations:    (numeric, optional) The confirmations required, must be 1 or more\\n\"\n             \"3. include_watchonly:       (bool, optional, default=false) Include transactions to watch-only addresses (see 'importaddress')\"\n+            \"4. include_replaced:        (bool, optional, default=true) Show transactions that were replaced due to a reorg in the \\\"replaced\\\" array\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99221347",
      "id" : 99221347,
      "original_commit_id" : "a7d1e2a37d3573e2a4ed9e9a7edb2e510ad24266",
      "original_position" : 66,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 19892012,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99221347",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99221465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99221465"
         }
      },
      "body" : "See above case with a tx being sent on both chains.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-02T21:15:07Z",
      "diff_hunk" : "@@ -1717,23 +1741,55 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n+    bool include_replaced = (request.params.size() < 4 || request.params[3].get_bool());\n+\n     int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n \n     UniValue transactions(UniValue::VARR);\n+    std::set<uint256> listed;\n \n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n     {\n         CWalletTx tx = (*it).second;\n \n         if (depth == -1 || tx.GetDepthInMainChain() < depth)\n-            ListTransactions(tx, \"*\", 0, true, transactions, filter);\n+        {\n+            if (ListTransactions(tx, \"*\", 0, true, transactions, filter) && include_replaced)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r99221465",
      "id" : 99221465,
      "original_commit_id" : "a7d1e2a37d3573e2a4ed9e9a7edb2e510ad24266",
      "original_position" : 119,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 19892117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99221465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "It occurs to me that the key `\"replaced\"` may not be ideal, since there is no guarantee these transactions are now conflicted and won't get re-mined. Perhaps `\"removed\"`?",
      "created_at" : "2017-02-10T07:45:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-278878727",
      "id" : 278878727,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-02-10T07:45:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278878727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "I tried to find actual cases where this happened, but had a hard time finding a case that wasn't the cause of a double spend. It would require that the transaction is NOT in the mempool of the node, or it would appear as normal in `transactions`. There may be a case I haven't thought of though, so you may be right, `removed` is a safer bet for sure.",
      "created_at" : "2017-02-10T08:22:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-278884664",
      "id" : 278884664,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-02-10T08:53:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278884664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r100496476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100496476"
         }
      },
      "body" : "\"replaced\"",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-10T09:18:18Z",
      "diff_hunk" : "@@ -1654,12 +1671,15 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     if (request.fHelp)\n         throw runtime_error(\n-            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly)\\n\"\n-            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted\\n\"\n+            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly include_replaced )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r100496476",
      "id" : 100496476,
      "original_commit_id" : "464f557da97cd61642874158a36a836aa48f6dbc",
      "original_position" : 58,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 21205336,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100496476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r100496490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100496490"
         }
      },
      "body" : "\"replaced\"",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-10T09:18:25Z",
      "diff_hunk" : "@@ -1654,12 +1671,15 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     if (request.fHelp)\n         throw runtime_error(\n-            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly)\\n\"\n-            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted\\n\"\n+            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly include_replaced )\\n\"\n+            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted.\\n\"\n+            \"If \\\"blockhash\\\" is no longer a part of the main chain, all transactions affecting the node wallet from blockhash back to the fork point are included in the \\\"replaced\\\" array.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r100496490",
      "id" : 100496490,
      "original_commit_id" : "464f557da97cd61642874158a36a836aa48f6dbc",
      "original_position" : 60,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 21205336,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100496490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r100543111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100543111"
         }
      },
      "body" : "Done",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-10T14:20:49Z",
      "diff_hunk" : "@@ -1654,12 +1671,15 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     if (request.fHelp)\n         throw runtime_error(\n-            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly)\\n\"\n-            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted\\n\"\n+            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly include_replaced )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r100543111",
      "id" : 100543111,
      "original_commit_id" : "464f557da97cd61642874158a36a836aa48f6dbc",
      "original_position" : 58,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 21255282,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100543111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r100543125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100543125"
         }
      },
      "body" : "Done",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-10T14:20:53Z",
      "diff_hunk" : "@@ -1654,12 +1671,15 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     if (request.fHelp)\n         throw runtime_error(\n-            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly)\\n\"\n-            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted\\n\"\n+            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly include_replaced )\\n\"\n+            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted.\\n\"\n+            \"If \\\"blockhash\\\" is no longer a part of the main chain, all transactions affecting the node wallet from blockhash back to the fork point are included in the \\\"replaced\\\" array.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r100543125",
      "id" : 100543125,
      "original_commit_id" : "464f557da97cd61642874158a36a836aa48f6dbc",
      "original_position" : 60,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 21255298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/100543125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "@luke-jr Sorry about sloppiness, I thought I got all of them in the initial two squashme's.",
      "created_at" : "2017-02-10T14:21:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-278952897",
      "id" : 278952897,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-02-10T14:21:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278952897",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "body" : "utACK ad57cefb6583ab669d8da21d0bf808e2d38ef04a.\r\n\r\nComparing against previously ACKed 461d5a37a3d83edbeedb701ed207bc14412dee0d, the both-sides dedup code and the new API tweaks and comments looked good.",
      "created_at" : "2017-02-23T21:57:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#issuecomment-282134568",
      "id" : 282134568,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9622",
      "updated_at" : "2017-02-23T21:57:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282134568",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102971565"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102971565"
         }
      },
      "body" : "Maybe instead of this and the next line,\r\n\"If \\\"blockhash\\\" is no longer a part of the main chain, transactions from the fork point onward are included.\\n\"\r\n\"Additionally, if include_removed is set, transactions affecting the wallet which were removed are returned in the \\\"removed\\\" array.\\n\"",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-24T16:05:06Z",
      "diff_hunk" : "@@ -1654,12 +1671,15 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     if (request.fHelp)\n         throw runtime_error(\n-            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly)\\n\"\n-            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted\\n\"\n+            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly include_removed )\\n\"\n+            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted.\\n\"\n+            \"If \\\"blockhash\\\" is no longer a part of the main chain, all transactions affecting the node wallet from blockhash back to the fork point are included in the \\\"removed\\\" array.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102971565",
      "id" : 102971565,
      "original_commit_id" : "ad57cefb6583ab669d8da21d0bf808e2d38ef04a",
      "original_position" : 60,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 23747466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102971565",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102975099"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102975099"
         }
      },
      "body" : "Hmm, not sure how I feel about this. For pruning nodes, it may be more useful to return a partial list and a message indicating the results are incomplete rather than throw wholesale.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-24T16:20:47Z",
      "diff_hunk" : "@@ -1731,23 +1755,55 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n+    bool include_removed = (request.params.size() < 4 || request.params[3].get_bool());\n+\n     int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n \n     UniValue transactions(UniValue::VARR);\n+    std::set<uint256> listed;\n \n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n     {\n         CWalletTx tx = (*it).second;\n \n         if (depth == -1 || tx.GetDepthInMainChain() < depth)\n-            ListTransactions(tx, \"*\", 0, true, transactions, filter);\n+        {\n+            if (ListTransactions(tx, \"*\", 0, true, transactions, filter) && include_removed)\n+            {\n+                listed.insert(it->first);\n+            }\n+        }\n+    }\n+\n+    // when a reorg'd block is requested, we also list any relevant transactions\n+    // in the blocks of the chain that was detached\n+    UniValue removed(UniValue::VARR);\n+    while (include_removed && paltindex && paltindex != pindex)\n+    {\n+        CBlock block;\n+        if (!ReadBlockFromDisk(block, paltindex, Params().GetConsensus()))\n+        {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102975099",
      "id" : 102975099,
      "original_commit_id" : "ad57cefb6583ab669d8da21d0bf808e2d38ef04a",
      "original_position" : 134,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 134,
      "pull_request_review_id" : 23747466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102975099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102991590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102991590"
         }
      },
      "body" : "Makes sense. Changed.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-24T17:36:09Z",
      "diff_hunk" : "@@ -1654,12 +1671,15 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     if (request.fHelp)\n         throw runtime_error(\n-            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly)\\n\"\n-            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted\\n\"\n+            \"listsinceblock ( \\\"blockhash\\\" target_confirmations include_watchonly include_removed )\\n\"\n+            \"\\nGet all transactions in blocks since block [blockhash], or all transactions if omitted.\\n\"\n+            \"If \\\"blockhash\\\" is no longer a part of the main chain, all transactions affecting the node wallet from blockhash back to the fork point are included in the \\\"removed\\\" array.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102991590",
      "id" : 102991590,
      "original_commit_id" : "ad57cefb6583ab669d8da21d0bf808e2d38ef04a",
      "original_position" : 60,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 23768813,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102991590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102994237"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102994237"
         }
      },
      "body" : "Isn't that slightly dangerous? I mean, if people don't realize the node only has a subset of all blocks in some cases, they might miss the \"partial\" flag and never realize they potentially missed something. Even if it's their own node. Someone could even time an attack based on that.\r\n\r\nTo take a step back, the situation here is that some software which uses listsinceblock believes the chain is on one chain when it is on another one. Presuming this fork is long, the node ends up pruning beyond the fork point. And/or, the node ends up pruning out the alt chain that was deactivated. It feels like the caller (requester) should blow up at this point and either require manual assistance, or fall back to scanning over all unsafe tx's, effectively \"resetting\" to the current chain tip.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-24T17:49:59Z",
      "diff_hunk" : "@@ -1731,23 +1755,55 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n+    bool include_removed = (request.params.size() < 4 || request.params[3].get_bool());\n+\n     int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n \n     UniValue transactions(UniValue::VARR);\n+    std::set<uint256> listed;\n \n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n     {\n         CWalletTx tx = (*it).second;\n \n         if (depth == -1 || tx.GetDepthInMainChain() < depth)\n-            ListTransactions(tx, \"*\", 0, true, transactions, filter);\n+        {\n+            if (ListTransactions(tx, \"*\", 0, true, transactions, filter) && include_removed)\n+            {\n+                listed.insert(it->first);\n+            }\n+        }\n+    }\n+\n+    // when a reorg'd block is requested, we also list any relevant transactions\n+    // in the blocks of the chain that was detached\n+    UniValue removed(UniValue::VARR);\n+    while (include_removed && paltindex && paltindex != pindex)\n+    {\n+        CBlock block;\n+        if (!ReadBlockFromDisk(block, paltindex, Params().GetConsensus()))\n+        {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102994237",
      "id" : 102994237,
      "original_commit_id" : "ad57cefb6583ab669d8da21d0bf808e2d38ef04a",
      "original_position" : 134,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 134,
      "pull_request_review_id" : 23771633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102994237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102995601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102995601"
         }
      },
      "body" : "True. I'm not sure what the right answer here is...clearly we dont want it to be so easy to miss transactions, but on the other hand, it sucks to not have the option here. A different approach might be to iterate over mapWallet and find all transactions which have a hash of a disconnected block, which I believe is correct as long as the block was, at some point, on the active chain, though might not be if the user is calling listsinceblock on a block that was never the active chain.",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-24T17:56:39Z",
      "diff_hunk" : "@@ -1731,23 +1755,55 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n+    bool include_removed = (request.params.size() < 4 || request.params[3].get_bool());\n+\n     int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n \n     UniValue transactions(UniValue::VARR);\n+    std::set<uint256> listed;\n \n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n     {\n         CWalletTx tx = (*it).second;\n \n         if (depth == -1 || tx.GetDepthInMainChain() < depth)\n-            ListTransactions(tx, \"*\", 0, true, transactions, filter);\n+        {\n+            if (ListTransactions(tx, \"*\", 0, true, transactions, filter) && include_removed)\n+            {\n+                listed.insert(it->first);\n+            }\n+        }\n+    }\n+\n+    // when a reorg'd block is requested, we also list any relevant transactions\n+    // in the blocks of the chain that was detached\n+    UniValue removed(UniValue::VARR);\n+    while (include_removed && paltindex && paltindex != pindex)\n+    {\n+        CBlock block;\n+        if (!ReadBlockFromDisk(block, paltindex, Params().GetConsensus()))\n+        {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102995601",
      "id" : 102995601,
      "original_commit_id" : "ad57cefb6583ab669d8da21d0bf808e2d38ef04a",
      "original_position" : 134,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 134,
      "pull_request_review_id" : 23773056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T17:56:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102995601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102999126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102999126"
         }
      },
      "body" : "Hm.. It almost feels like I can just get the block headers by iterating `altchainindex` up to the fork point and put those in a set and find the removed transactions in the initial mapWallet iteration. That way there's no need to read in the blocks at all and can get rid of `listed` as well. Will try that, thanks for the nudge!",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-24T18:14:51Z",
      "diff_hunk" : "@@ -1731,23 +1755,55 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n+    bool include_removed = (request.params.size() < 4 || request.params[3].get_bool());\n+\n     int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n \n     UniValue transactions(UniValue::VARR);\n+    std::set<uint256> listed;\n \n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n     {\n         CWalletTx tx = (*it).second;\n \n         if (depth == -1 || tx.GetDepthInMainChain() < depth)\n-            ListTransactions(tx, \"*\", 0, true, transactions, filter);\n+        {\n+            if (ListTransactions(tx, \"*\", 0, true, transactions, filter) && include_removed)\n+            {\n+                listed.insert(it->first);\n+            }\n+        }\n+    }\n+\n+    // when a reorg'd block is requested, we also list any relevant transactions\n+    // in the blocks of the chain that was detached\n+    UniValue removed(UniValue::VARR);\n+    while (include_removed && paltindex && paltindex != pindex)\n+    {\n+        CBlock block;\n+        if (!ReadBlockFromDisk(block, paltindex, Params().GetConsensus()))\n+        {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r102999126",
      "id" : 102999126,
      "original_commit_id" : "ad57cefb6583ab669d8da21d0bf808e2d38ef04a",
      "original_position" : 134,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 134,
      "pull_request_review_id" : 23776768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T18:14:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102999126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r103012427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103012427"
         }
      },
      "body" : "Yea, I was heasitant to recommend doing it alone because I'm not confident about how safe it is to make sure the wallet's data is always right, will have to think more and review once you have it coded :).",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-24T19:17:45Z",
      "diff_hunk" : "@@ -1731,23 +1755,55 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n+    bool include_removed = (request.params.size() < 4 || request.params[3].get_bool());\n+\n     int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n \n     UniValue transactions(UniValue::VARR);\n+    std::set<uint256> listed;\n \n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n     {\n         CWalletTx tx = (*it).second;\n \n         if (depth == -1 || tx.GetDepthInMainChain() < depth)\n-            ListTransactions(tx, \"*\", 0, true, transactions, filter);\n+        {\n+            if (ListTransactions(tx, \"*\", 0, true, transactions, filter) && include_removed)\n+            {\n+                listed.insert(it->first);\n+            }\n+        }\n+    }\n+\n+    // when a reorg'd block is requested, we also list any relevant transactions\n+    // in the blocks of the chain that was detached\n+    UniValue removed(UniValue::VARR);\n+    while (include_removed && paltindex && paltindex != pindex)\n+    {\n+        CBlock block;\n+        if (!ReadBlockFromDisk(block, paltindex, Params().GetConsensus()))\n+        {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r103012427",
      "id" : 103012427,
      "original_commit_id" : "ad57cefb6583ab669d8da21d0bf808e2d38ef04a",
      "original_position" : 134,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 134,
      "pull_request_review_id" : 23790621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T19:17:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103012427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r103015587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103015587"
         }
      },
      "body" : "It seems reasonable, but I'm a bit stuck on how to get the block hash for a tx that is not in the main chain. It seems like CMerkleTx's blockHash uint256 is only set if in the main chain...",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-24T19:32:21Z",
      "diff_hunk" : "@@ -1731,23 +1755,55 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n+    bool include_removed = (request.params.size() < 4 || request.params[3].get_bool());\n+\n     int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n \n     UniValue transactions(UniValue::VARR);\n+    std::set<uint256> listed;\n \n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n     {\n         CWalletTx tx = (*it).second;\n \n         if (depth == -1 || tx.GetDepthInMainChain() < depth)\n-            ListTransactions(tx, \"*\", 0, true, transactions, filter);\n+        {\n+            if (ListTransactions(tx, \"*\", 0, true, transactions, filter) && include_removed)\n+            {\n+                listed.insert(it->first);\n+            }\n+        }\n+    }\n+\n+    // when a reorg'd block is requested, we also list any relevant transactions\n+    // in the blocks of the chain that was detached\n+    UniValue removed(UniValue::VARR);\n+    while (include_removed && paltindex && paltindex != pindex)\n+    {\n+        CBlock block;\n+        if (!ReadBlockFromDisk(block, paltindex, Params().GetConsensus()))\n+        {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r103015587",
      "id" : 103015587,
      "original_commit_id" : "ad57cefb6583ab669d8da21d0bf808e2d38ef04a",
      "original_position" : 134,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 134,
      "pull_request_review_id" : 23793840,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T19:32:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103015587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r103039369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103039369"
         }
      },
      "body" : "Oh, sorry, you're right...hashBlock is always something in the main chain (so you would only be able to print conflicted transactions and not transactions which went back to 0conf).",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-24T21:43:15Z",
      "diff_hunk" : "@@ -1731,23 +1755,55 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n+    bool include_removed = (request.params.size() < 4 || request.params[3].get_bool());\n+\n     int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n \n     UniValue transactions(UniValue::VARR);\n+    std::set<uint256> listed;\n \n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n     {\n         CWalletTx tx = (*it).second;\n \n         if (depth == -1 || tx.GetDepthInMainChain() < depth)\n-            ListTransactions(tx, \"*\", 0, true, transactions, filter);\n+        {\n+            if (ListTransactions(tx, \"*\", 0, true, transactions, filter) && include_removed)\n+            {\n+                listed.insert(it->first);\n+            }\n+        }\n+    }\n+\n+    // when a reorg'd block is requested, we also list any relevant transactions\n+    // in the blocks of the chain that was detached\n+    UniValue removed(UniValue::VARR);\n+    while (include_removed && paltindex && paltindex != pindex)\n+    {\n+        CBlock block;\n+        if (!ReadBlockFromDisk(block, paltindex, Params().GetConsensus()))\n+        {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r103039369",
      "id" : 103039369,
      "original_commit_id" : "ad57cefb6583ab669d8da21d0bf808e2d38ef04a",
      "original_position" : 134,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 134,
      "pull_request_review_id" : 23818845,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T21:43:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103039369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r103052921"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103052921"
         }
      },
      "body" : "Options:\r\nÃ¢ÂÂ . Try to respect the path taken which requires the blocks as removed transactions do not track the block they were in, meaning if a node prunes out the block, the operation fails.\r\nÃ¢ÂÂ¡. Ignore the path and simply show all removed transactions between the fork point and the chain tip, which requires NO loading of blocks (faster), but means the caller will get irrelevant removed transactions in reorgs it was never aware of to begin with.\r\n\r\nPros and cons with Ã¢ÂÂ :\r\n1. Pro: Caller gets exactly what they need to update their view of the chain state, and is not confused by irrelevant stuff.\r\n2. Con: Slower due to block read requirement.\r\n3. Con: Fails if blocks involved in the reorg were pruned out.\r\n\r\nPros and cons with Ã¢ÂÂ¡:\r\n1. Pro: Faster due to no block read.\r\n2. Pro: Works fine even if involved blocks were pruned.\r\n3. Con: Does not distinguish between the various forks involved.\r\n",
      "commit_id" : "44be5684bfebed411dd1e1c2c2db3faf5a7c571c",
      "created_at" : "2017-02-24T23:12:05Z",
      "diff_hunk" : "@@ -1731,23 +1755,55 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n+    bool include_removed = (request.params.size() < 4 || request.params[3].get_bool());\n+\n     int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n \n     UniValue transactions(UniValue::VARR);\n+    std::set<uint256> listed;\n \n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n     {\n         CWalletTx tx = (*it).second;\n \n         if (depth == -1 || tx.GetDepthInMainChain() < depth)\n-            ListTransactions(tx, \"*\", 0, true, transactions, filter);\n+        {\n+            if (ListTransactions(tx, \"*\", 0, true, transactions, filter) && include_removed)\n+            {\n+                listed.insert(it->first);\n+            }\n+        }\n+    }\n+\n+    // when a reorg'd block is requested, we also list any relevant transactions\n+    // in the blocks of the chain that was detached\n+    UniValue removed(UniValue::VARR);\n+    while (include_removed && paltindex && paltindex != pindex)\n+    {\n+        CBlock block;\n+        if (!ReadBlockFromDisk(block, paltindex, Params().GetConsensus()))\n+        {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9622#discussion_r103052921",
      "id" : 103052921,
      "original_commit_id" : "ad57cefb6583ab669d8da21d0bf808e2d38ef04a",
      "original_position" : 134,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 134,
      "pull_request_review_id" : 23833050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9622",
      "updated_at" : "2017-02-24T23:12:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/103052921",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=3",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   }
]
