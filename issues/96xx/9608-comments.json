[
   {
      "body" : "This should use a switch statement, not a long if/else cascade. (the extra rescan and whatever checks can be moved inside their respective functions).",
      "created_at" : "2017-01-21T19:31:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274282847",
      "id" : 274282847,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9608",
      "updated_at" : "2017-01-21T19:31:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274282847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "You can't switch/case on strings.\n",
      "created_at" : "2017-01-21T19:35:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274283103",
      "id" : 274283103,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9608",
      "updated_at" : "2017-01-21T19:35:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274283103",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Well damn, I thought it was an enum now.",
      "created_at" : "2017-01-21T19:51:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274284057",
      "id" : 274284057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9608",
      "updated_at" : "2017-01-21T19:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274284057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "I feel like this just obscures the control flow. :-/",
      "created_at" : "2017-01-21T19:53:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274284161",
      "id" : 274284161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9608",
      "updated_at" : "2017-01-21T19:53:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274284161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "body" : "What problem is this PR fixing?",
      "created_at" : "2017-01-23T07:24:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274416901",
      "id" : 274416901,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9608",
      "updated_at" : "2017-01-23T07:24:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274416901",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=3",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "body" : "@rebroad algorithmic readability,  it is simpler to reason about these algorithms,  IMHO,  by these smaller functions than it is otherwise.\r\n\r\nconcept ACK\r\n\r\n> I feel like this just obscures the control flow. :-/\r\n\r\nHow so? ",
      "created_at" : "2017-01-23T12:28:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274476131",
      "id" : 274476131,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9608",
      "updated_at" : "2017-01-23T12:30:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274476131",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "> What problem is this PR fixing?\r\n\r\nRight, readability and maintainability (ie ease of review for later changes on ProcessMessage). As noted, this can be indented later (although that obscures the git blame).\r\nIn other projects, having to read more than X nested control flows in function directly goes against the style and smaller functions can be always a solution to that. Others simply don't allow functions above N lines\r\n\r\nIMO, before this PR ProcessMessage is both too long and has some lines with too many nestings. It is very hard for me to read this function as it, and I suspect I'm not the only one.\r\n\r\n> I feel like this just obscures the control flow. :-/\r\n\r\nYeah, how so?",
      "created_at" : "2017-01-23T14:17:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274498709",
      "id" : 274498709,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9608",
      "updated_at" : "2017-01-23T14:17:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274498709",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "> (although that obscures the git blame).\r\n\r\nUse `git blame -w`.",
      "created_at" : "2017-01-23T16:54:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274545939",
      "id" : 274545939,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9608",
      "updated_at" : "2017-01-23T16:54:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274545939",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9608#discussion_r97379526"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9608"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97379526"
         }
      },
      "body" : "According to our style guideline all those  curly brackets are on the \"wrong\" line. If we want to stick to the current style guideline, new code should not violate it. If we don't want to stick with the current style guide, we should weaken in with regard to new lines. ",
      "commit_id" : "9677569a60040ccbb6aa7dc2b0f0573f09a3816c",
      "created_at" : "2017-01-23T18:09:02Z",
      "diff_hunk" : "@@ -2558,20 +2545,149 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             }\n             LogPrint(\"net\", \"received: feefilter of %s from peer=%d\\n\", CFeeRate(newFeeFilter).ToString(), pfrom->id);\n         }\n+    return true;\n+}\n+\n+bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n+{\n+    LogPrint(\"net\", \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->id);\n+    if (IsArgSet(\"-dropmessagestest\") && GetRand(GetArg(\"-dropmessagestest\", 0)) == 0)\n+    {\n+        LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n+        return true;\n+    }\n+\n+    if (!(pfrom->GetLocalServices() & NODE_BLOOM) &&\n+              (strCommand == NetMsgType::FILTERLOAD ||\n+               strCommand == NetMsgType::FILTERADD))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION) {\n+            LOCK(cs_main);\n+            Misbehaving(pfrom->GetId(), 100);\n+            return false;\n+        } else {\n+            pfrom->fDisconnect = true;\n+            return false;\n+        }\n+    }\n+\n+    if (strCommand == NetMsgType::VERSION)\n+    {\n+        return MsgVersion(pfrom, strCommand, vRecv, connman);\n+    }\n+    else if (pfrom->nVersion == 0)\n+    {\n+        // Must have a version message before anything else\n+        LOCK(cs_main);\n+        Misbehaving(pfrom->GetId(), 1);\n+        return false;\n+    }\n+\n+    // At this point, the outgoing message serialization version can't change.\n+    CNetMsgMaker msgMaker(pfrom->GetSendVersion());\n+    \n+    if (strCommand == NetMsgType::VERACK)\n+    {\n+        return MsgVerack(pfrom, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::ADDR)\n+    {\n+        return MsgAddr(pfrom, vRecv, connman, interruptMsgProc);\n+    }\n+    else if (strCommand == NetMsgType::SENDHEADERS)\n+    {\n+        return MsgSendheaders(pfrom);\n+    }\n+    else if (strCommand == NetMsgType::SENDCMPCT)\n+    {\n+        return MsgSendcmpct(pfrom, vRecv);\n+    }\n+    else if (strCommand == NetMsgType::INV)\n+    {\n+        return MsgInv(pfrom, vRecv, chainparams.GetConsensus(), connman, msgMaker, interruptMsgProc);\n+    }\n+    else if (strCommand == NetMsgType::GETDATA)\n+    {\n+        return MsgGetdata(pfrom, vRecv, chainparams.GetConsensus(), connman, interruptMsgProc);\n+    }\n+    else if (strCommand == NetMsgType::GETBLOCKS)\n+    {\n+        return MsgGetblocks(pfrom, vRecv, chainparams.GetConsensus());\n+    }\n+    else if (strCommand == NetMsgType::GETBLOCKTXN)\n+    {\n+        return MsgGetblocktxn(pfrom, vRecv, chainparams.GetConsensus(), connman, interruptMsgProc);\n+    }\n+    else if (strCommand == NetMsgType::GETHEADERS)\n+    {\n+        return MsgGetheaders(pfrom, vRecv, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::TX)\n+    {\n+        return MsgTx(pfrom, strCommand, vRecv, chainparams, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::CMPCTBLOCK && !fImporting && !fReindex) // Ignore blocks received while importing\n+    {\n+        return MsgCmpctblock(pfrom, vRecv, nTimeReceived, chainparams, connman, interruptMsgProc, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::BLOCKTXN && !fImporting && !fReindex) // Ignore blocks received while importing\n+    {\n+        return MsgBlocktxn(pfrom, vRecv, chainparams, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::HEADERS && !fImporting && !fReindex) // Ignore headers received while importing\n+    {\n+        return MsgHeaders(pfrom, vRecv, chainparams, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::BLOCK && !fImporting && !fReindex) // Ignore blocks received while importing\n+    {\n+        return MsgBlock(pfrom, vRecv, chainparams);\n+    }\n+    else if (strCommand == NetMsgType::GETADDR)\n+    {\n+        return MsgGetaddr(pfrom, connman);\n+    }\n+    else if (strCommand == NetMsgType::MEMPOOL)\n+    {\n+        return MsgMempool(pfrom, connman);\n+    }\n+    else if (strCommand == NetMsgType::PING)\n+    {\n+        return MsgPing(pfrom, vRecv, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::PONG)\n+    {\n+        return MsgPong(pfrom, vRecv, nTimeReceived);\n+    }\n+    else if (strCommand == NetMsgType::FILTERLOAD)\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9608#discussion_r97379526",
      "id" : 97379526,
      "original_commit_id" : "a7e24f29108eeb9c2c3ead054d0a9c2c255fbb26",
      "original_position" : 555,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 17986933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9608",
      "updated_at" : "2017-01-24T01:54:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97379526",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9608#discussion_r97411073"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9608"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97411073"
         }
      },
      "body" : "You are completely right, I'm happy correcting this.",
      "commit_id" : "9677569a60040ccbb6aa7dc2b0f0573f09a3816c",
      "created_at" : "2017-01-23T20:43:13Z",
      "diff_hunk" : "@@ -2558,20 +2545,149 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             }\n             LogPrint(\"net\", \"received: feefilter of %s from peer=%d\\n\", CFeeRate(newFeeFilter).ToString(), pfrom->id);\n         }\n+    return true;\n+}\n+\n+bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n+{\n+    LogPrint(\"net\", \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->id);\n+    if (IsArgSet(\"-dropmessagestest\") && GetRand(GetArg(\"-dropmessagestest\", 0)) == 0)\n+    {\n+        LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n+        return true;\n+    }\n+\n+    if (!(pfrom->GetLocalServices() & NODE_BLOOM) &&\n+              (strCommand == NetMsgType::FILTERLOAD ||\n+               strCommand == NetMsgType::FILTERADD))\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION) {\n+            LOCK(cs_main);\n+            Misbehaving(pfrom->GetId(), 100);\n+            return false;\n+        } else {\n+            pfrom->fDisconnect = true;\n+            return false;\n+        }\n+    }\n+\n+    if (strCommand == NetMsgType::VERSION)\n+    {\n+        return MsgVersion(pfrom, strCommand, vRecv, connman);\n+    }\n+    else if (pfrom->nVersion == 0)\n+    {\n+        // Must have a version message before anything else\n+        LOCK(cs_main);\n+        Misbehaving(pfrom->GetId(), 1);\n+        return false;\n+    }\n+\n+    // At this point, the outgoing message serialization version can't change.\n+    CNetMsgMaker msgMaker(pfrom->GetSendVersion());\n+    \n+    if (strCommand == NetMsgType::VERACK)\n+    {\n+        return MsgVerack(pfrom, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::ADDR)\n+    {\n+        return MsgAddr(pfrom, vRecv, connman, interruptMsgProc);\n+    }\n+    else if (strCommand == NetMsgType::SENDHEADERS)\n+    {\n+        return MsgSendheaders(pfrom);\n+    }\n+    else if (strCommand == NetMsgType::SENDCMPCT)\n+    {\n+        return MsgSendcmpct(pfrom, vRecv);\n+    }\n+    else if (strCommand == NetMsgType::INV)\n+    {\n+        return MsgInv(pfrom, vRecv, chainparams.GetConsensus(), connman, msgMaker, interruptMsgProc);\n+    }\n+    else if (strCommand == NetMsgType::GETDATA)\n+    {\n+        return MsgGetdata(pfrom, vRecv, chainparams.GetConsensus(), connman, interruptMsgProc);\n+    }\n+    else if (strCommand == NetMsgType::GETBLOCKS)\n+    {\n+        return MsgGetblocks(pfrom, vRecv, chainparams.GetConsensus());\n+    }\n+    else if (strCommand == NetMsgType::GETBLOCKTXN)\n+    {\n+        return MsgGetblocktxn(pfrom, vRecv, chainparams.GetConsensus(), connman, interruptMsgProc);\n+    }\n+    else if (strCommand == NetMsgType::GETHEADERS)\n+    {\n+        return MsgGetheaders(pfrom, vRecv, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::TX)\n+    {\n+        return MsgTx(pfrom, strCommand, vRecv, chainparams, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::CMPCTBLOCK && !fImporting && !fReindex) // Ignore blocks received while importing\n+    {\n+        return MsgCmpctblock(pfrom, vRecv, nTimeReceived, chainparams, connman, interruptMsgProc, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::BLOCKTXN && !fImporting && !fReindex) // Ignore blocks received while importing\n+    {\n+        return MsgBlocktxn(pfrom, vRecv, chainparams, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::HEADERS && !fImporting && !fReindex) // Ignore headers received while importing\n+    {\n+        return MsgHeaders(pfrom, vRecv, chainparams, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::BLOCK && !fImporting && !fReindex) // Ignore blocks received while importing\n+    {\n+        return MsgBlock(pfrom, vRecv, chainparams);\n+    }\n+    else if (strCommand == NetMsgType::GETADDR)\n+    {\n+        return MsgGetaddr(pfrom, connman);\n+    }\n+    else if (strCommand == NetMsgType::MEMPOOL)\n+    {\n+        return MsgMempool(pfrom, connman);\n+    }\n+    else if (strCommand == NetMsgType::PING)\n+    {\n+        return MsgPing(pfrom, vRecv, connman, msgMaker);\n+    }\n+    else if (strCommand == NetMsgType::PONG)\n+    {\n+        return MsgPong(pfrom, vRecv, nTimeReceived);\n+    }\n+    else if (strCommand == NetMsgType::FILTERLOAD)\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9608#discussion_r97411073",
      "id" : 97411073,
      "original_commit_id" : "a7e24f29108eeb9c2c3ead054d0a9c2c255fbb26",
      "original_position" : 555,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 18019846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9608",
      "updated_at" : "2017-01-24T01:54:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97411073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Added a couple of commits to hopefully squash.",
      "created_at" : "2017-01-23T21:32:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9608#issuecomment-274623660",
      "id" : 274623660,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9608",
      "updated_at" : "2017-01-23T21:32:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274623660",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   }
]
