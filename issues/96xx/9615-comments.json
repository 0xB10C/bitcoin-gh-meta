[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9615#discussion_r97430520"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9615"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97430520"
         }
      },
      "body" : "Maybe s/should have its own minimum incremental fee/uses a conservative WALLET_INCREMENTAL_RELAY_FEE value/. Saying \"should\" could suggest that the wallet doesn't already do this. ",
      "commit_id" : "ec692cca0b5225d37c81b1d4fb7f450b20d10ce0",
      "created_at" : "2017-01-23T22:19:55Z",
      "diff_hunk" : "@@ -2823,8 +2827,17 @@ UniValue bumpfee(const JSONRPCRequest& request)\n         // new fee rate must be at least old rate + minimum incremental relay rate\n         if (nNewFeeRate.GetFeePerK() < nOldFeeRate.GetFeePerK() + ::incrementalRelayFee.GetFeePerK()) {\n             nNewFeeRate = CFeeRate(nOldFeeRate.GetFeePerK() + ::incrementalRelayFee.GetFeePerK());\n+            if (specifiedConfirmTarget || payTxFee.GetFeePerK() == 0) {\n+                // In the default case where the user is depending on the wallet\n+                // to smartly pick the fee, the wallet should have its own",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9615#discussion_r97430520",
      "id" : 97430520,
      "original_commit_id" : "86e8cca1d2341f7e99ff3179e60775aeba781fe4",
      "original_position" : 23,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 18040231,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9615",
      "updated_at" : "2017-01-23T22:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97430520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9615#discussion_r97435466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9615"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97435466"
         }
      },
      "body" : "Another another way to avoid the ambiguity of having different \"oldfee\" values might be to phrase error message to in terms of fee rates, rather than fees:\r\n\r\n```\r\nnNewFee = totalFee;\r\nnNewFeeRate = CFeeRate(totalFee, maxNewTxSize);\r\nCFeeRate minFeeRate = CFeeRate(nOldFeeRate.GetFeePerK() + ::incrementalRelayFee.GetFeePerK());\r\nif (nNewFeeRate < minFeeRate) {\r\n    CAmount recommendedTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + walletIncrementalRelayFee.GetFee(maxNewTxSize);\r\n    throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Insufficient totalFee rate %s %s/kB, must be at least %s %s/kB (old rate %s %s/kB + incremental rate %s %s/kB), recommended %s %s (incremental fee %s %s)\",\r\n                                                        FormatMoney(nNewFeeRate.GetFeePerK()), CURRENCY_UNIT,\r\n                                                        FormatMoney(minFeeRate.GetFeePerK()), CURRENCY_UNIT,\r\n                                                        FormatMoney(nOldFeeRate.GetFeePerK()), CURRENCY_UNIT,\r\n                                                        FormatMoney(::incrementalRelayFee.GetFeePerK()), CURRENCY_UNIT,\r\n                                                        FormatMoney(recommendedTotalFee), CURRENCY_UNIT,\r\n                                                        walletIncrementalRelayFee.GetFee(maxNewTxSize)));\r\n}\r\n```\r\n\r\nI think this would make more sense anyway, because whatever client code is calling this will probably be deriving totalFee values based on fee rates, and this error message is more explicit about the minimum fee rate required.\r\n\r\n(Also think saying insufficient fee is better than saying invalid fee, to be more specific).",
      "commit_id" : "ec692cca0b5225d37c81b1d4fb7f450b20d10ce0",
      "created_at" : "2017-01-23T22:47:48Z",
      "diff_hunk" : "@@ -2801,11 +2801,15 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     CFeeRate nOldFeeRate(nOldFee, txSize);\n     CAmount nNewFee;\n     CFeeRate nNewFeeRate;\n+    CFeeRate walletIncrementalRelayFee = CFeeRate(WALLET_INCREMENTAL_RELAY_FEE);\n \n     if (totalFee > 0) {\n         CAmount minTotalFee = nOldFeeRate.GetFee(maxNewTxSize) + ::incrementalRelayFee.GetFee(maxNewTxSize);\n         if (totalFee < minTotalFee) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid totalFee, must be at least %s (oldFee %s + relayFee %s)\", FormatMoney(minTotalFee), nOldFeeRate.GetFee(maxNewTxSize), ::incrementalRelayFee.GetFee(maxNewTxSize)));\n+            CAmount recommendedTotalFee =  nOldFeeRate.GetFee(maxNewTxSize) + walletIncrementalRelayFee.GetFee(maxNewTxSize);\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid totalFee, must be at least %s (oldFee %s + incrementalFee %s), recommended %s (incrementalFee %s)\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9615#discussion_r97435466",
      "id" : 97435466,
      "original_commit_id" : "86e8cca1d2341f7e99ff3179e60775aeba781fe4",
      "original_position" : 11,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 18040231,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9615",
      "updated_at" : "2017-01-23T22:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/97435466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
