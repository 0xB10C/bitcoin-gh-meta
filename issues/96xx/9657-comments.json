[
   {
      "body" : "Great! Concept ACK on all of those. I will take a detailed look later.\n",
      "created_at" : "2017-01-31T22:32:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#issuecomment-276514927",
      "id" : 276514927,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9657",
      "updated_at" : "2017-01-31T22:32:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/276514927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98807460"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98807460"
         }
      },
      "body" : "One shouldn't be required to pass --extended to be able to run specific tests from the extended set. You can leave the following here:\r\n```\r\nfor t in BASE_SCRIPTS + EXTENDED_SCRIPTS:\r\n```\r\nMhmm, that would still exclude zmq_test.py because of the other change you made...\r\n",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T00:45:31Z",
      "diff_hunk" : "@@ -184,26 +182,30 @@\n     'replace-by-fee.py',\n ]\n \n-\n def runtests():\n-    test_list = []\n-    if '-extended' in opts:\n-        test_list = testScripts + testScriptsExt\n-    elif len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts):\n-        test_list = testScripts\n+    # Build list of tests\n+    test_scripts = BASE_SCRIPTS\n+    if ENABLE_ZMQ:\n+        test_scripts += ZMQ_SCRIPTS\n+    if args.extended:\n+        test_scripts += EXTENDED_SCRIPTS\n+\n+    if len(tests) == 0:\n+        test_list = test_scripts\n     else:\n-        for t in testScripts + testScriptsExt:\n-            if t in opts or re.sub(\".py$\", \"\", t) in opts:\n+        test_list = []\n+        for t in test_scripts:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98807460",
      "id" : 98807460,
      "original_commit_id" : "553d99c575bfcfdad44dee7c7fec58b8bcde640a",
      "original_position" : 119,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19461719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98807460",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98807825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98807825"
         }
      },
      "body" : "If we are considering changing this around, my vote would be for renaming `--parallel` to be `--jobs` and also giving it a '-j' alias. The advantage is that it matches `make` where most people know what `-j3` means at a glance.",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T00:48:25Z",
      "diff_hunk" : "@@ -30,6 +31,25 @@\n import tempfile\n import re\n \n+# Parse arguments and pass through unrecognised args\n+parser = argparse.ArgumentParser(add_help=False)\n+parser.add_argument('--coverage', action='store_true')\n+parser.add_argument('-extended', action='store_true')\n+parser.add_argument('--help', '-h', '-?', action='store_true')\n+parser.add_argument('--parallel', type=int, default=4)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98807825",
      "id" : 98807825,
      "original_commit_id" : "553d99c575bfcfdad44dee7c7fec58b8bcde640a",
      "original_position" : 17,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19462107,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98807825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/20916903?v=3",
         "events_url" : "https://api.github.com/users/isle2983/events{/privacy}",
         "followers_url" : "https://api.github.com/users/isle2983/followers",
         "following_url" : "https://api.github.com/users/isle2983/following{/other_user}",
         "gists_url" : "https://api.github.com/users/isle2983/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/isle2983",
         "id" : 20916903,
         "login" : "isle2983",
         "organizations_url" : "https://api.github.com/users/isle2983/orgs",
         "received_events_url" : "https://api.github.com/users/isle2983/received_events",
         "repos_url" : "https://api.github.com/users/isle2983/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/isle2983/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/isle2983"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98807845"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98807845"
         }
      },
      "body" : "Suggest doing this chunk with list/iterator comprehension like so:\r\n\r\n```\r\ntests = set(arg for arg in unknown_args if arg[:2] != \"--\")\r\npasson_args = [arg for arg in unknown_args if arg[:2] == \"--\"]\r\n```",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T00:48:32Z",
      "diff_hunk" : "@@ -30,6 +31,25 @@\n import tempfile\n import re\n \n+# Parse arguments and pass through unrecognised args\n+parser = argparse.ArgumentParser(add_help=False)\n+parser.add_argument('--coverage', action='store_true')\n+parser.add_argument('-extended', action='store_true')\n+parser.add_argument('--help', '-h', '-?', action='store_true')\n+parser.add_argument('--parallel', type=int, default=4)\n+parser.add_argument('-win', action='store_true')\n+(args, unknown_args) = parser.parse_known_args()\n+\n+#Create a set to store arguments and create the passon string\n+tests = set()\n+passon_args = []\n+\n+for arg in unknown_args:\n+    if arg[:2] == \"--\":\n+        passon_args.append(arg)\n+    else:\n+        tests.add(arg)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98807845",
      "id" : 98807845,
      "original_commit_id" : "553d99c575bfcfdad44dee7c7fec58b8bcde640a",
      "original_position" : 29,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19462126,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98807845",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/20916903?v=3",
         "events_url" : "https://api.github.com/users/isle2983/events{/privacy}",
         "followers_url" : "https://api.github.com/users/isle2983/followers",
         "following_url" : "https://api.github.com/users/isle2983/following{/other_user}",
         "gists_url" : "https://api.github.com/users/isle2983/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/isle2983",
         "id" : 20916903,
         "login" : "isle2983",
         "organizations_url" : "https://api.github.com/users/isle2983/orgs",
         "received_events_url" : "https://api.github.com/users/isle2983/received_events",
         "repos_url" : "https://api.github.com/users/isle2983/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/isle2983/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/isle2983"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98807866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98807866"
         }
      },
      "body" : "Suggest building test_list with list comprehension:\r\n```\r\ntest_list = [t for t in test_scripts if\r\n             (t in tests or re.sub(\".py$\", \"\", t) in tests)]\r\n```",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T00:48:44Z",
      "diff_hunk" : "@@ -184,26 +182,30 @@\n     'replace-by-fee.py',\n ]\n \n-\n def runtests():\n-    test_list = []\n-    if '-extended' in opts:\n-        test_list = testScripts + testScriptsExt\n-    elif len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts):\n-        test_list = testScripts\n+    # Build list of tests\n+    test_scripts = BASE_SCRIPTS\n+    if ENABLE_ZMQ:\n+        test_scripts += ZMQ_SCRIPTS\n+    if args.extended:\n+        test_scripts += EXTENDED_SCRIPTS\n+\n+    if len(tests) == 0:\n+        test_list = test_scripts\n     else:\n-        for t in testScripts + testScriptsExt:\n-            if t in opts or re.sub(\".py$\", \"\", t) in opts:\n+        test_list = []\n+        for t in test_scripts:\n+            if t in tests or re.sub(\".py$\", \"\", t) in tests:\n                 test_list.append(t)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98807866",
      "id" : 98807866,
      "original_commit_id" : "553d99c575bfcfdad44dee7c7fec58b8bcde640a",
      "original_position" : 121,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19462145,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98807866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/20916903?v=3",
         "events_url" : "https://api.github.com/users/isle2983/events{/privacy}",
         "followers_url" : "https://api.github.com/users/isle2983/followers",
         "following_url" : "https://api.github.com/users/isle2983/following{/other_user}",
         "gists_url" : "https://api.github.com/users/isle2983/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/isle2983",
         "id" : 20916903,
         "login" : "isle2983",
         "organizations_url" : "https://api.github.com/users/isle2983/orgs",
         "received_events_url" : "https://api.github.com/users/isle2983/received_events",
         "repos_url" : "https://api.github.com/users/isle2983/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/isle2983/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/isle2983"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98808021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98808021"
         }
      },
      "body" : "\" and that we should run the tests\" sounds weird to me. Are there special tests only for windows? Otherwise we just should run the tests, as always, just taking into account the windows environment.\r\nIf there's windows specific tests, what about \"signal that this is running in a Windows environment and the windows specific tests sould be run\"?",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T00:49:58Z",
      "diff_hunk" : "@@ -32,12 +24,18 @@\n import re\n \n # Parse arguments and pass through unrecognised args\n-parser = argparse.ArgumentParser(add_help=False)\n-parser.add_argument('--coverage', action='store_true')\n-parser.add_argument('-extended', action='store_true')\n-parser.add_argument('--help', '-h', '-?', action='store_true')\n-parser.add_argument('--parallel', type=int, default=4)\n-parser.add_argument('-win', action='store_true')\n+parser = argparse.ArgumentParser(add_help=False,\n+                                 usage='%(prog)s [rpc-test.py options] [script options] [scripts]',\n+                                 description=__doc__,\n+                                 epilog='''\n+Help text and arguments for individual test script:''',\n+                                 formatter_class=argparse.RawTextHelpFormatter)\n+parser.add_argument('--coverage', action='store_true', help='generate a basic coverage report for the RPC interface')\n+parser.add_argument('--extended', action='store_true', help='run the extended test suite in addition to the basic tests')\n+parser.add_argument('--help', '-h', '-?', action='store_true', help='print help text and exit')\n+parser.add_argument('--nozmq', action='store_true', help='do not run the zmq tests')\n+parser.add_argument('--parallel', type=int, default=4, help='how many test scripts to run in parallel. Default=4.')\n+parser.add_argument('--win', action='store_true', help='signal that this is running in a Windows environment and that we should run the tests')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98808021",
      "id" : 98808021,
      "original_commit_id" : "fa05213775585ac9639b0ddcc07b40e846531c92",
      "original_position" : 43,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19462298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98808021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98808486"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98808486"
         }
      },
      "body" : "NACK on changing the order and removing the time comments (ie reverting #9276 )",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T00:53:44Z",
      "diff_hunk" : "@@ -23,166 +23,144 @@\n import tempfile\n import re\n \n-# Parse arguments and pass through unrecognised args\n-parser = argparse.ArgumentParser(add_help=False,\n-                                 usage='%(prog)s [rpc-test.py options] [script options] [scripts]',\n-                                 description=__doc__,\n-                                 epilog='''\n-Help text and arguments for individual test script:''',\n-                                 formatter_class=argparse.RawTextHelpFormatter)\n-parser.add_argument('--coverage', action='store_true', help='generate a basic coverage report for the RPC interface')\n-parser.add_argument('--extended', action='store_true', help='run the extended test suite in addition to the basic tests')\n-parser.add_argument('--help', '-h', '-?', action='store_true', help='print help text and exit')\n-parser.add_argument('--nozmq', action='store_true', help='do not run the zmq tests')\n-parser.add_argument('--parallel', type=int, default=4, help='how many test scripts to run in parallel. Default=4.')\n-parser.add_argument('--win', action='store_true', help='signal that this is running in a Windows environment and that we should run the tests')\n-(args, unknown_args) = parser.parse_known_args()\n-\n-#Create a set to store arguments and create the passon string\n-tests = set()\n-passon_args = []\n-\n-for arg in unknown_args:\n-    if arg[:2] == \"--\":\n-        passon_args.append(arg)\n-    else:\n-        tests.add(arg)\n-\n-BOLD = (\"\",\"\")\n-if os.name == 'posix':\n-    # primitive formatting on supported\n-    # terminal via ANSI escape sequences:\n-    BOLD = ('\\033[0m', '\\033[1m')\n-\n-# Read config generated by configure.\n-config = configparser.ConfigParser()\n-config.read_file(open(os.path.dirname(__file__) + \"/tests_config.ini\"))\n-\n-ENABLE_WALLET = config[\"components\"][\"ENABLE_WALLET\"] == \"True\"\n-ENABLE_UTILS = config[\"components\"][\"ENABLE_UTILS\"] == \"True\"\n-ENABLE_BITCOIND = config[\"components\"][\"ENABLE_BITCOIND\"] == \"True\"\n-ENABLE_ZMQ = config[\"components\"][\"ENABLE_ZMQ\"] == \"True\" and not args.nozmq\n-\n-RPC_TESTS_DIR = config[\"environment\"][\"SRCDIR\"] + '/qa/rpc-tests/'\n-\n-print_help = args.help\n-run_parallel = args.parallel\n-\n-#Set env vars\n-if \"BITCOIND\" not in os.environ:\n-    os.environ[\"BITCOIND\"] = config[\"environment\"][\"BUILDDIR\"] + '/src/bitcoind' + config[\"environment\"][\"EXEEXT\"]\n-\n-if config[\"environment\"][\"EXEEXT\"] == \".exe\" and not args.win:\n-    # https://github.com/bitcoin/bitcoin/commit/d52802551752140cf41f0d9a225a43e84404d3e9\n-    # https://github.com/bitcoin/bitcoin/pull/5677#issuecomment-136646964\n-    print(\"Win tests currently disabled by default.  Use -win option to enable\")\n-    sys.exit(0)\n-\n-if not (ENABLE_WALLET and ENABLE_UTILS and ENABLE_BITCOIND):\n-    print(\"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\")\n-    sys.exit(0)\n-\n-# python3-zmq may not be installed. Handle this gracefully and with some helpful info\n-if ENABLE_ZMQ:\n-    try:\n-        import zmq\n-    except ImportError:\n-        print(\"ERROR: \\\"import zmq\\\" failed. Use -nozmq to run without the ZMQ tests.\"\n-              \"To run zmq tests, see dependency info in /qa/README.md.\")\n-        raise\n-\n-BASE_SCRIPTS= [\n-    # longest test should go first, to favor running tests in parallel",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98808486",
      "id" : 98808486,
      "original_commit_id" : "b90946a124b3110acd22ae19e5e817b7dcef2498",
      "original_position" : 73,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19462780,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98808486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98809720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98809720"
         }
      },
      "body" : "Maybe stupid question...not sure how main() can call runtests() without having declared it yet.",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T01:03:37Z",
      "diff_hunk" : "@@ -198,30 +176,52 @@ def runtests():\n     if args.help:\n         # Print help for rpc-tests.py, then print help of the first script and exit.\n         parser.print_help()\n-        subprocess.check_call((RPC_TESTS_DIR + test_list[0]).split() + ['-h'])\n+        subprocess.check_call((config[\"environment\"][\"SRCDIR\"] + '/qa/rpc-tests/' + test_list[0]).split() + ['-h'])\n+        sys.exit(0)\n+\n+    if len(test_list) == 0:\n+        print(\"No rpc tests to run. Scripts not found:\")\n+        print(tests)\n         sys.exit(0)\n \n-    coverage = None\n+    runtests(test_list, config[\"environment\"][\"SRCDIR\"], config[\"environment\"][\"BUILDDIR\"], config[\"environment\"][\"EXEEXT\"], args.parallel, args.coverage, passon_args)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98809720",
      "id" : 98809720,
      "original_commit_id" : "b90946a124b3110acd22ae19e5e817b7dcef2498",
      "original_position" : 315,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19464064,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98809720",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Wouldn't f1e8e33 be clearer if https://github.com/bitcoin/bitcoin/blob/master/qa/pull-tester/tests_config.py.in was removed in the same commit?\r\n\r\nutACK modulo comments.\r\n",
      "created_at" : "2017-02-01T01:04:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#issuecomment-276543832",
      "id" : 276543832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9657",
      "updated_at" : "2017-02-01T01:04:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/276543832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816683"
         }
      },
      "body" : "Agree. I've fixed this by adding a new ALL_SCRIPTS variable which is the concatenation of the three other lists.",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T02:04:21Z",
      "diff_hunk" : "@@ -184,26 +182,30 @@\n     'replace-by-fee.py',\n ]\n \n-\n def runtests():\n-    test_list = []\n-    if '-extended' in opts:\n-        test_list = testScripts + testScriptsExt\n-    elif len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts):\n-        test_list = testScripts\n+    # Build list of tests\n+    test_scripts = BASE_SCRIPTS\n+    if ENABLE_ZMQ:\n+        test_scripts += ZMQ_SCRIPTS\n+    if args.extended:\n+        test_scripts += EXTENDED_SCRIPTS\n+\n+    if len(tests) == 0:\n+        test_list = test_scripts\n     else:\n-        for t in testScripts + testScriptsExt:\n-            if t in opts or re.sub(\".py$\", \"\", t) in opts:\n+        test_list = []\n+        for t in test_scripts:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816683",
      "id" : 98816683,
      "original_commit_id" : "553d99c575bfcfdad44dee7c7fec58b8bcde640a",
      "original_position" : 119,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19471007,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816683",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816697"
         }
      },
      "body" : "agree. Changed.",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T02:04:28Z",
      "diff_hunk" : "@@ -30,6 +31,25 @@\n import tempfile\n import re\n \n+# Parse arguments and pass through unrecognised args\n+parser = argparse.ArgumentParser(add_help=False)\n+parser.add_argument('--coverage', action='store_true')\n+parser.add_argument('-extended', action='store_true')\n+parser.add_argument('--help', '-h', '-?', action='store_true')\n+parser.add_argument('--parallel', type=int, default=4)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816697",
      "id" : 98816697,
      "original_commit_id" : "553d99c575bfcfdad44dee7c7fec58b8bcde640a",
      "original_position" : 17,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19471018,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816707"
         }
      },
      "body" : "much nicer. Thanks!",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T02:04:38Z",
      "diff_hunk" : "@@ -30,6 +31,25 @@\n import tempfile\n import re\n \n+# Parse arguments and pass through unrecognised args\n+parser = argparse.ArgumentParser(add_help=False)\n+parser.add_argument('--coverage', action='store_true')\n+parser.add_argument('-extended', action='store_true')\n+parser.add_argument('--help', '-h', '-?', action='store_true')\n+parser.add_argument('--parallel', type=int, default=4)\n+parser.add_argument('-win', action='store_true')\n+(args, unknown_args) = parser.parse_known_args()\n+\n+#Create a set to store arguments and create the passon string\n+tests = set()\n+passon_args = []\n+\n+for arg in unknown_args:\n+    if arg[:2] == \"--\":\n+        passon_args.append(arg)\n+    else:\n+        tests.add(arg)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816707",
      "id" : 98816707,
      "original_commit_id" : "553d99c575bfcfdad44dee7c7fec58b8bcde640a",
      "original_position" : 29,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19471032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816726"
         }
      },
      "body" : "yep. Fixed.",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T02:04:46Z",
      "diff_hunk" : "@@ -184,26 +182,30 @@\n     'replace-by-fee.py',\n ]\n \n-\n def runtests():\n-    test_list = []\n-    if '-extended' in opts:\n-        test_list = testScripts + testScriptsExt\n-    elif len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts):\n-        test_list = testScripts\n+    # Build list of tests\n+    test_scripts = BASE_SCRIPTS\n+    if ENABLE_ZMQ:\n+        test_scripts += ZMQ_SCRIPTS\n+    if args.extended:\n+        test_scripts += EXTENDED_SCRIPTS\n+\n+    if len(tests) == 0:\n+        test_list = test_scripts\n     else:\n-        for t in testScripts + testScriptsExt:\n-            if t in opts or re.sub(\".py$\", \"\", t) in opts:\n+        test_list = []\n+        for t in test_scripts:\n+            if t in tests or re.sub(\".py$\", \"\", t) in tests:\n                 test_list.append(t)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816726",
      "id" : 98816726,
      "original_commit_id" : "553d99c575bfcfdad44dee7c7fec58b8bcde640a",
      "original_position" : 121,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19471054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816825"
         }
      },
      "body" : "I haven't changed the text in this argument (the text was previously in the docstring for the module). There are no windows specific tests - this argument simply means \"I know I'm running on windows and I definitely want to run the tests.\" I haven't dug into why this argument was added originally, but feel free to open a new PR if you think it can be removed.",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T02:06:04Z",
      "diff_hunk" : "@@ -32,12 +24,18 @@\n import re\n \n # Parse arguments and pass through unrecognised args\n-parser = argparse.ArgumentParser(add_help=False)\n-parser.add_argument('--coverage', action='store_true')\n-parser.add_argument('-extended', action='store_true')\n-parser.add_argument('--help', '-h', '-?', action='store_true')\n-parser.add_argument('--parallel', type=int, default=4)\n-parser.add_argument('-win', action='store_true')\n+parser = argparse.ArgumentParser(add_help=False,\n+                                 usage='%(prog)s [rpc-test.py options] [script options] [scripts]',\n+                                 description=__doc__,\n+                                 epilog='''\n+Help text and arguments for individual test script:''',\n+                                 formatter_class=argparse.RawTextHelpFormatter)\n+parser.add_argument('--coverage', action='store_true', help='generate a basic coverage report for the RPC interface')\n+parser.add_argument('--extended', action='store_true', help='run the extended test suite in addition to the basic tests')\n+parser.add_argument('--help', '-h', '-?', action='store_true', help='print help text and exit')\n+parser.add_argument('--nozmq', action='store_true', help='do not run the zmq tests')\n+parser.add_argument('--parallel', type=int, default=4, help='how many test scripts to run in parallel. Default=4.')\n+parser.add_argument('--win', action='store_true', help='signal that this is running in a Windows environment and that we should run the tests')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816825",
      "id" : 98816825,
      "original_commit_id" : "fa05213775585ac9639b0ddcc07b40e846531c92",
      "original_position" : 43,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19471169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816902"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816902"
         }
      },
      "body" : "Oops. This was a bad manual merge from a old branch.\r\n\r\nThanks for catching this. I've fixed this so #9276 is included.",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T02:06:57Z",
      "diff_hunk" : "@@ -23,166 +23,144 @@\n import tempfile\n import re\n \n-# Parse arguments and pass through unrecognised args\n-parser = argparse.ArgumentParser(add_help=False,\n-                                 usage='%(prog)s [rpc-test.py options] [script options] [scripts]',\n-                                 description=__doc__,\n-                                 epilog='''\n-Help text and arguments for individual test script:''',\n-                                 formatter_class=argparse.RawTextHelpFormatter)\n-parser.add_argument('--coverage', action='store_true', help='generate a basic coverage report for the RPC interface')\n-parser.add_argument('--extended', action='store_true', help='run the extended test suite in addition to the basic tests')\n-parser.add_argument('--help', '-h', '-?', action='store_true', help='print help text and exit')\n-parser.add_argument('--nozmq', action='store_true', help='do not run the zmq tests')\n-parser.add_argument('--parallel', type=int, default=4, help='how many test scripts to run in parallel. Default=4.')\n-parser.add_argument('--win', action='store_true', help='signal that this is running in a Windows environment and that we should run the tests')\n-(args, unknown_args) = parser.parse_known_args()\n-\n-#Create a set to store arguments and create the passon string\n-tests = set()\n-passon_args = []\n-\n-for arg in unknown_args:\n-    if arg[:2] == \"--\":\n-        passon_args.append(arg)\n-    else:\n-        tests.add(arg)\n-\n-BOLD = (\"\",\"\")\n-if os.name == 'posix':\n-    # primitive formatting on supported\n-    # terminal via ANSI escape sequences:\n-    BOLD = ('\\033[0m', '\\033[1m')\n-\n-# Read config generated by configure.\n-config = configparser.ConfigParser()\n-config.read_file(open(os.path.dirname(__file__) + \"/tests_config.ini\"))\n-\n-ENABLE_WALLET = config[\"components\"][\"ENABLE_WALLET\"] == \"True\"\n-ENABLE_UTILS = config[\"components\"][\"ENABLE_UTILS\"] == \"True\"\n-ENABLE_BITCOIND = config[\"components\"][\"ENABLE_BITCOIND\"] == \"True\"\n-ENABLE_ZMQ = config[\"components\"][\"ENABLE_ZMQ\"] == \"True\" and not args.nozmq\n-\n-RPC_TESTS_DIR = config[\"environment\"][\"SRCDIR\"] + '/qa/rpc-tests/'\n-\n-print_help = args.help\n-run_parallel = args.parallel\n-\n-#Set env vars\n-if \"BITCOIND\" not in os.environ:\n-    os.environ[\"BITCOIND\"] = config[\"environment\"][\"BUILDDIR\"] + '/src/bitcoind' + config[\"environment\"][\"EXEEXT\"]\n-\n-if config[\"environment\"][\"EXEEXT\"] == \".exe\" and not args.win:\n-    # https://github.com/bitcoin/bitcoin/commit/d52802551752140cf41f0d9a225a43e84404d3e9\n-    # https://github.com/bitcoin/bitcoin/pull/5677#issuecomment-136646964\n-    print(\"Win tests currently disabled by default.  Use -win option to enable\")\n-    sys.exit(0)\n-\n-if not (ENABLE_WALLET and ENABLE_UTILS and ENABLE_BITCOIND):\n-    print(\"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\")\n-    sys.exit(0)\n-\n-# python3-zmq may not be installed. Handle this gracefully and with some helpful info\n-if ENABLE_ZMQ:\n-    try:\n-        import zmq\n-    except ImportError:\n-        print(\"ERROR: \\\"import zmq\\\" failed. Use -nozmq to run without the ZMQ tests.\"\n-              \"To run zmq tests, see dependency info in /qa/README.md.\")\n-        raise\n-\n-BASE_SCRIPTS= [\n-    # longest test should go first, to favor running tests in parallel",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816902",
      "id" : 98816902,
      "original_commit_id" : "b90946a124b3110acd22ae19e5e817b7dcef2498",
      "original_position" : 73,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19471252,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816902",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816984"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816984"
         }
      },
      "body" : "Not a stupid question :)\r\n\r\n`main()` is called in the final line of the module:\r\n\r\n```\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nby which point all the functions have been declared. I believe this is a fairly common python module structure.",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T02:08:00Z",
      "diff_hunk" : "@@ -198,30 +176,52 @@ def runtests():\n     if args.help:\n         # Print help for rpc-tests.py, then print help of the first script and exit.\n         parser.print_help()\n-        subprocess.check_call((RPC_TESTS_DIR + test_list[0]).split() + ['-h'])\n+        subprocess.check_call((config[\"environment\"][\"SRCDIR\"] + '/qa/rpc-tests/' + test_list[0]).split() + ['-h'])\n+        sys.exit(0)\n+\n+    if len(test_list) == 0:\n+        print(\"No rpc tests to run. Scripts not found:\")\n+        print(tests)\n         sys.exit(0)\n \n-    coverage = None\n+    runtests(test_list, config[\"environment\"][\"SRCDIR\"], config[\"environment\"][\"BUILDDIR\"], config[\"environment\"][\"EXEEXT\"], args.parallel, args.coverage, passon_args)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98816984",
      "id" : 98816984,
      "original_commit_id" : "b90946a124b3110acd22ae19e5e817b7dcef2498",
      "original_position" : 315,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19471339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98816984",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "@isle2983 @jtimon thanks for the reviews. I've addressed all comments in rebased/squashed commits.\r\n\r\n@jtimon - I've removed tests_config.py.in in the first commit (which changes all the commit hashes).",
      "created_at" : "2017-02-01T02:09:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#issuecomment-276553878",
      "id" : 276553878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9657",
      "updated_at" : "2017-02-01T02:09:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/276553878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98939477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98939477"
         }
      },
      "body" : "This is incorrect and it prevents you from running a single test at a time e.g. `$ qa/pull-tester/rpc-tests.py segwit`\r\n\r\n`test_scripts` can only be made up of `BASE_SCRIPTS`, `ZMQ_SCRIPTS`, and `EXTENDED_SCRIPTS`. `ALL_SCRIPTS` is all of those, so `test_list` will then always be set to all of `test_scripts`.\r\n\r\nI believe it should be:\r\n```\r\ntest_list = [t for t in test_scripts if (t in tests or re.sub(\".py$\", \"\", t) in tests)]\r\n```",
      "commit_id" : "958bbc70ccd32ba200c243de214d7db560aea122",
      "created_at" : "2017-02-01T16:51:48Z",
      "diff_hunk" : "@@ -179,49 +118,125 @@\n     'replace-by-fee.py',\n ]\n \n-def runtests():\n+ALL_SCRIPTS = BASE_SCRIPTS + ZMQ_SCRIPTS + EXTENDED_SCRIPTS\n+\n+def main():\n+    # Parse arguments and pass through unrecognised args\n+    parser = argparse.ArgumentParser(add_help=False,\n+                                     usage='%(prog)s [rpc-test.py options] [script options] [scripts]',\n+                                     description=__doc__,\n+                                     epilog='''\n+    Help text and arguments for individual test script:''',\n+                                     formatter_class=argparse.RawTextHelpFormatter)\n+    parser.add_argument('--coverage', action='store_true', help='generate a basic coverage report for the RPC interface')\n+    parser.add_argument('--extended', action='store_true', help='run the extended test suite in addition to the basic tests')\n+    parser.add_argument('--help', '-h', '-?', action='store_true', help='print help text and exit')\n+    parser.add_argument('--nozmq', action='store_true', help='do not run the zmq tests')\n+    parser.add_argument('--parallel', type=int, default=4, help='how many test scripts to run in parallel. Default=4.')\n+    parser.add_argument('--win', action='store_true', help='signal that this is running in a Windows environment and that we should run the tests')\n+    (args, unknown_args) = parser.parse_known_args()\n+\n+    # Create a set to store arguments and create the passon string\n+    tests = set()\n+    passon_args = []\n+\n+    for arg in unknown_args:\n+        if arg[:2] == \"--\":\n+            passon_args.append(arg)\n+        else:\n+            tests.add(arg)\n+\n+    # Read config generated by configure.\n+    config = configparser.ConfigParser()\n+    config.read_file(open(os.path.dirname(__file__) + \"/tests_config.ini\"))\n+\n+    enable_wallet = config[\"components\"][\"ENABLE_WALLET\"] == \"True\"\n+    enable_utils = config[\"components\"][\"ENABLE_UTILS\"] == \"True\"\n+    enable_bitcoind = config[\"components\"][\"ENABLE_BITCOIND\"] == \"True\"\n+    enable_zmq = config[\"components\"][\"ENABLE_ZMQ\"] == \"True\" and not args.nozmq\n+\n+    if config[\"environment\"][\"EXEEXT\"] == \".exe\" and not args.win:\n+        # https://github.com/bitcoin/bitcoin/commit/d52802551752140cf41f0d9a225a43e84404d3e9\n+        # https://github.com/bitcoin/bitcoin/pull/5677#issuecomment-136646964\n+        print(\"Win tests currently disabled by default.  Use -win option to enable\")\n+        sys.exit(0)\n+\n+    if not (enable_wallet and enable_utils and enable_bitcoind):\n+        print(\"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\")\n+        print(\"Rerun `configure` with -enable-wallet, -with-utils and -with-daemon and rerun make\")\n+        sys.exit(0)\n+\n+    # python3-zmq may not be installed. Handle this gracefully and with some helpful info\n+    if enable_zmq:\n+        try:\n+            import zmq\n+        except ImportError:\n+            print(\"ERROR: \\\"import zmq\\\" failed. Use -nozmq to run without the ZMQ tests.\"\n+                  \"To run zmq tests, see dependency info in /qa/README.md.\")\n+            raise\n+\n     # Build list of tests\n     test_scripts = BASE_SCRIPTS\n-    if ENABLE_ZMQ:\n+    if enable_zmq:\n         test_scripts += ZMQ_SCRIPTS\n     if args.extended:\n         test_scripts += EXTENDED_SCRIPTS\n \n     if len(tests) == 0:\n         test_list = test_scripts\n     else:\n-        test_list = []\n-        for t in test_scripts:\n-            if t in tests or re.sub(\".py$\", \"\", t) in tests:\n-                test_list.append(t)\n+        test_list = [t for t in test_scripts if \n+                     (t in ALL_SCRIPTS or re.sub(\".py$\", \"\", t) in ALL_SCRIPTS)]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9657#discussion_r98939477",
      "id" : 98939477,
      "original_commit_id" : "0a49a419099372f1271b0b0bd923f8e4d847669a",
      "original_position" : 172,
      "path" : "qa/pull-tester/rpc-tests.py",
      "position" : null,
      "pull_request_review_id" : 19597679,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9657",
      "updated_at" : "2017-02-02T15:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/98939477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/20916903?v=3",
         "events_url" : "https://api.github.com/users/isle2983/events{/privacy}",
         "followers_url" : "https://api.github.com/users/isle2983/followers",
         "following_url" : "https://api.github.com/users/isle2983/following{/other_user}",
         "gists_url" : "https://api.github.com/users/isle2983/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/isle2983",
         "id" : 20916903,
         "login" : "isle2983",
         "organizations_url" : "https://api.github.com/users/isle2983/orgs",
         "received_events_url" : "https://api.github.com/users/isle2983/received_events",
         "repos_url" : "https://api.github.com/users/isle2983/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/isle2983/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/isle2983/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/isle2983"
      }
   }
]
