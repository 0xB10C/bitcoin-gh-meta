[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r99691757"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99691757"
         }
      },
      "body" : "wtx && SignalsOptInRBF(*wtx)",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-02-06T21:43:36Z",
      "diff_hunk" : "@@ -692,6 +694,34 @@ bool WalletModel::abandonTransaction(uint256 hash) const\n     return wallet->AbandonTransaction(hash);\n }\n \n+bool WalletModel::transactionSignalsRBF(uint256 hash) const\n+{\n+    LOCK2(cs_main, wallet->cs_wallet);\n+    const CWalletTx *wtx = wallet->GetWalletTx(hash);\n+    if (wtx || SignalsOptInRBF(*wtx))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r99691757",
      "id" : 99691757,
      "original_commit_id" : "8d7bbff188cec1bcbe57293bc25626e6443dafd4",
      "original_position" : 24,
      "path" : "src/qt/walletmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 20376313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-02-14T08:49:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99691757",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r99693542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99693542"
         }
      },
      "body" : "I'm surprised it's ok to be holding onto the cs_main and cs_wallet locks while waiting for user input from a confirmation dialog, since it would seem to grind the whole bitcoin node to a halt. But maybe there are other precedents for doing this.\r\n\r\nIf you wanted to avoid it, though, I think you easily could by splitting bumpfee into two functions: one which creates the new transaction, and the other which commits this.",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-02-06T21:52:28Z",
      "diff_hunk" : "@@ -692,6 +694,34 @@ bool WalletModel::abandonTransaction(uint256 hash) const\n     return wallet->AbandonTransaction(hash);\n }\n \n+bool WalletModel::transactionSignalsRBF(uint256 hash) const\n+{\n+    LOCK2(cs_main, wallet->cs_wallet);\n+    const CWalletTx *wtx = wallet->GetWalletTx(hash);\n+    if (wtx || SignalsOptInRBF(*wtx))\n+        return true;\n+    return false;\n+}\n+\n+bool WalletModel::bumpFee(uint256 hash, const std::function<bool(const CTransaction& tx, const CAmount& oldFee, const CAmount& newFee)> verificationCallback) const\n+{\n+    LOCK2(cs_main, wallet->cs_wallet);\n+    CAmount nOldFee(0);\n+    CAmount nNewFee(0);\n+    std::shared_ptr<CWalletTx> wtxRef;\n+    std::vector<std::string> vErrors;\n+\n+    // do a simple feebump with default confirmation target\n+    CWallet::BumpFeeResult res = wallet->BumpFee(hash, 0, false, 0, true, nOldFee, nNewFee, wtxRef, vErrors, verificationCallback);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r99693542",
      "id" : 99693542,
      "original_commit_id" : "8d7bbff188cec1bcbe57293bc25626e6443dafd4",
      "original_position" : 38,
      "path" : "src/qt/walletmodel.cpp",
      "position" : null,
      "pull_request_review_id" : 20378202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-02-14T08:49:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/99693542",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Thanks for the review @ryanofsky. Yes. The current situation with holding cs_main/cs_wallet during the QMessageBox must be avoided. Using `LEAVE_CRITICAL_SECTION` and `ENTER_CRITICAL_SECTION` would be another alternative, but I'd like your idea about splitting bumpFee into a part where we create the tx and a part where we sign and commit.\r\nThe signing part could potentially be shared with `CreateTransaction` in future.",
      "created_at" : "2017-02-07T08:12:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#issuecomment-277929191",
      "id" : 277929191,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9697",
      "updated_at" : "2017-02-07T08:12:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277929191",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Rebased on top of #9681.\r\nFixed the `cs_main` & `cs_wallet` lock problems mentioned by @ryanofsky.",
      "created_at" : "2017-02-14T08:51:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#issuecomment-279644561",
      "id" : 279644561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9697",
      "updated_at" : "2017-02-14T08:51:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/279644561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r102968464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102968464"
         }
      },
      "body" : "Doesn't look like lock is needed here (GetWalletTx acquires lock internally). ",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-02-24T15:51:56Z",
      "diff_hunk" : "@@ -692,6 +697,65 @@ bool WalletModel::abandonTransaction(uint256 hash) const\n     return wallet->AbandonTransaction(hash);\n }\n \n+bool WalletModel::transactionSignalsRBF(uint256 hash) const\n+{\n+    LOCK2(cs_main, wallet->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r102968464",
      "id" : 102968464,
      "original_commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "original_position" : 35,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 35,
      "pull_request_review_id" : 23744146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-02-24T16:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102968464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r102968986"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102968986"
         }
      },
      "body" : "I'd slightly prefer SignalsOptInRBF(wtx->tx), because the implicit CWalletTx -> CTransaction conversion seems kind of hacky to me.\r\n\r\nMaybe also get rid of if statement and just `return wtx && SignalsOptInRBF(wtx->tx)`;",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-02-24T15:54:03Z",
      "diff_hunk" : "@@ -692,6 +697,65 @@ bool WalletModel::abandonTransaction(uint256 hash) const\n     return wallet->AbandonTransaction(hash);\n }\n \n+bool WalletModel::transactionSignalsRBF(uint256 hash) const\n+{\n+    LOCK2(cs_main, wallet->cs_wallet);\n+    const CWalletTx *wtx = wallet->GetWalletTx(hash);\n+    if (wtx && SignalsOptInRBF(*wtx))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r102968986",
      "id" : 102968986,
      "original_commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "original_position" : 37,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 37,
      "pull_request_review_id" : 23744146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-02-24T16:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102968986",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r102969834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102969834"
         }
      },
      "body" : "Maybe prefer unique_ptr to shared_ptr since pointer isn't being shared.",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-02-24T15:57:33Z",
      "diff_hunk" : "@@ -692,6 +697,65 @@ bool WalletModel::abandonTransaction(uint256 hash) const\n     return wallet->AbandonTransaction(hash);\n }\n \n+bool WalletModel::transactionSignalsRBF(uint256 hash) const\n+{\n+    LOCK2(cs_main, wallet->cs_wallet);\n+    const CWalletTx *wtx = wallet->GetWalletTx(hash);\n+    if (wtx && SignalsOptInRBF(*wtx))\n+        return true;\n+    return false;\n+}\n+\n+bool WalletModel::bumpFee(uint256 hash)\n+{\n+    std::shared_ptr<CFeeBumper> feeBump;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r102969834",
      "id" : 102969834,
      "original_commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "original_position" : 44,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 44,
      "pull_request_review_id" : 23744146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-02-24T16:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102969834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r102971669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102971669"
         }
      },
      "body" : "Are we able to write unit tests to exercise our qt interface code? I don't know very much about qt, but googling around it seems to be possible: http://doc.qt.io/qt-5/qttestlib-tutorial3-example.html\r\n\r\nAsking because the logic here isn't totally trivial, and this seems like something we would want automated testing for to ensure it doesn't break in the future, especially if there will be more refactorings.",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-02-24T16:05:29Z",
      "diff_hunk" : "@@ -692,6 +697,65 @@ bool WalletModel::abandonTransaction(uint256 hash) const\n     return wallet->AbandonTransaction(hash);\n }\n \n+bool WalletModel::transactionSignalsRBF(uint256 hash) const\n+{\n+    LOCK2(cs_main, wallet->cs_wallet);\n+    const CWalletTx *wtx = wallet->GetWalletTx(hash);\n+    if (wtx && SignalsOptInRBF(*wtx))\n+        return true;\n+    return false;\n+}\n+\n+bool WalletModel::bumpFee(uint256 hash)\n+{\n+    std::shared_ptr<CFeeBumper> feeBump;\n+    {\n+        LOCK2(cs_main, wallet->cs_wallet);\n+        feeBump = std::make_shared<CFeeBumper>(CFeeBumper(wallet, hash, 0, false, 0, true));\n+    }\n+    if (feeBump->getResult() != CFeeBumper::BumpFeeResult::OK)\n+    {\n+        QMessageBox::critical(0, tr(\"Fee bump error\"), tr(\"Increasing transaction fee failed\") + \"<br />(\" +\n+            (feeBump->getErrors().size() ? QString::fromStdString(feeBump->getErrors()[0]) : \"\") +\")\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r102971669",
      "id" : 102971669,
      "original_commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "original_position" : 52,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 52,
      "pull_request_review_id" : 23744146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-02-24T16:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102971669",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r102974487"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102974487"
         }
      },
      "body" : "Seems like it would be nice for this code if CFeeBumper constructor, wallet SignTransaction method, and CFeeBumper commit could acquire the locks they need themselves. Not asking for a change, since I don't want to hold up #9697, but curious if there was something that got in the way of doing this.",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-02-24T16:18:03Z",
      "diff_hunk" : "@@ -692,6 +697,65 @@ bool WalletModel::abandonTransaction(uint256 hash) const\n     return wallet->AbandonTransaction(hash);\n }\n \n+bool WalletModel::transactionSignalsRBF(uint256 hash) const\n+{\n+    LOCK2(cs_main, wallet->cs_wallet);\n+    const CWalletTx *wtx = wallet->GetWalletTx(hash);\n+    if (wtx && SignalsOptInRBF(*wtx))\n+        return true;\n+    return false;\n+}\n+\n+bool WalletModel::bumpFee(uint256 hash)\n+{\n+    std::shared_ptr<CFeeBumper> feeBump;\n+    {\n+        LOCK2(cs_main, wallet->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r102974487",
      "id" : 102974487,
      "original_commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "original_position" : 46,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 46,
      "pull_request_review_id" : 23744146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-02-24T16:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/102974487",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r105293825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105293825"
         }
      },
      "body" : "I started writing unit tests for this change: https://github.com/ryanofsky/bitcoin/commit/9bfbdd88dd0f1e11f06403e81f39fd8df1d047c7\r\n\r\nThey are mostly complete, but have a few things I want to fix up. They also required changes to the testing framework which I'm going to split off and make a separate PR.",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-03-09T23:08:34Z",
      "diff_hunk" : "@@ -692,6 +697,65 @@ bool WalletModel::abandonTransaction(uint256 hash) const\n     return wallet->AbandonTransaction(hash);\n }\n \n+bool WalletModel::transactionSignalsRBF(uint256 hash) const\n+{\n+    LOCK2(cs_main, wallet->cs_wallet);\n+    const CWalletTx *wtx = wallet->GetWalletTx(hash);\n+    if (wtx && SignalsOptInRBF(*wtx))\n+        return true;\n+    return false;\n+}\n+\n+bool WalletModel::bumpFee(uint256 hash)\n+{\n+    std::shared_ptr<CFeeBumper> feeBump;\n+    {\n+        LOCK2(cs_main, wallet->cs_wallet);\n+        feeBump = std::make_shared<CFeeBumper>(CFeeBumper(wallet, hash, 0, false, 0, true));\n+    }\n+    if (feeBump->getResult() != CFeeBumper::BumpFeeResult::OK)\n+    {\n+        QMessageBox::critical(0, tr(\"Fee bump error\"), tr(\"Increasing transaction fee failed\") + \"<br />(\" +\n+            (feeBump->getErrors().size() ? QString::fromStdString(feeBump->getErrors()[0]) : \"\") +\")\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r105293825",
      "id" : 105293825,
      "original_commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "original_position" : 52,
      "path" : "src/qt/walletmodel.cpp",
      "position" : 52,
      "pull_request_review_id" : 26168832,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-03-09T23:08:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/105293825",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "Adding milestone for 0.15",
      "created_at" : "2017-03-14T08:12:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#issuecomment-286350160",
      "id" : 286350160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9697",
      "updated_at" : "2017-03-14T08:12:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/286350160",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r106788916"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106788916"
         }
      },
      "body" : "The function doesn't seem to return anything and the enum is not used anywhere it seems.\r\nPerhaps the function could start as void in this code movement and change it afterwards?",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-03-18T19:23:50Z",
      "diff_hunk" : "@@ -791,6 +791,21 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const std::set<int>& setSubtractFeeFromOutputs, bool keepReserveKey = true, const CTxDestination& destChange = CNoDestination());\n \n     /**\n+     * Bumps the fee of an opt-in-RBF transaction <txid>,\n+     * replacing it with a new transaction <wtxNew>\n+     */\n+    enum BumpFeeResult\n+    {\n+        BumpFeeResult_OK,\n+        BumpFeeResult_INVALID_ADDRESS_OR_KEY,\n+        BumpFeeResult_INVALID_REQUEST,\n+        BumpFeeResult_INVALID_PARAMETER,\n+        BumpFeeResult_WALLET_ERROR,\n+        BumpFeeResult_MISC_ERROR,\n+    };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r106788916",
      "id" : 106788916,
      "original_commit_id" : "641c99cb6f96afa166a293917f36f3cf8f28a08a",
      "original_position" : 15,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 27732033,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-03-18T19:23:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106788916",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r106789031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106789031"
         }
      },
      "body" : "Did the previous commit compile without hash?\r\nI though we wanted every commit to compile and pass tests (for git bisect but also for general history cleanness).",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-03-18T19:29:05Z",
      "diff_hunk" : "@@ -2313,71 +2313,85 @@ int64_t CalculateMaximumSignedTxSize(const CTransaction &tx)\n     if (!pwalletMain->DummySignTx(txNew, vCoins)) {\n         // This should never happen, because IsAllFromMe(ISMINE_SPENDABLE)\n         // implies that we can sign for every input.\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction contains inputs that cannot be signed\");\n+        return -1;\n     }\n     return GetVirtualTransactionSize(txNew);\n }\n \n enum CWallet::BumpFeeResult CWallet::BumpFee(uint256 txid, int newConfirmTarget, bool specifiedConfirmTarget, CAmount totalFee, bool newTxReplaceable, CAmount& nOldFee, CAmount& nNewFee, std::shared_ptr<CWalletTx>& wtxNew, std::vector<std::string>& vErrors)\n {\n-    if (!pwalletMain->mapWallet.count(hash)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r106789031",
      "id" : 106789031,
      "original_commit_id" : "f0c98b9bfa763fbef87f1d9d37853f28e9451c87",
      "original_position" : 12,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 27732159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-03-18T19:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106789031",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r106789092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106789092"
         }
      },
      "body" : "This could be done when making nOldFee a parameter of this function too (ie the function doesn't need to start in his final form).",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-03-18T19:31:37Z",
      "diff_hunk" : "@@ -2313,71 +2313,85 @@ int64_t CalculateMaximumSignedTxSize(const CTransaction &tx)\n     if (!pwalletMain->DummySignTx(txNew, vCoins)) {\n         // This should never happen, because IsAllFromMe(ISMINE_SPENDABLE)\n         // implies that we can sign for every input.\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction contains inputs that cannot be signed\");\n+        return -1;\n     }\n     return GetVirtualTransactionSize(txNew);\n }\n \n enum CWallet::BumpFeeResult CWallet::BumpFee(uint256 txid, int newConfirmTarget, bool specifiedConfirmTarget, CAmount totalFee, bool newTxReplaceable, CAmount& nOldFee, CAmount& nNewFee, std::shared_ptr<CWalletTx>& wtxNew, std::vector<std::string>& vErrors)\n {\n-    if (!pwalletMain->mapWallet.count(hash)) {\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid or non-wallet transaction id\");\n+    vErrors.clear();\n+    AssertLockHeld(cs_wallet);\n+    if (!mapWallet.count(txid)) {\n+        vErrors.push_back(\"Invalid or non-wallet transaction id\");\n+        return CWallet::BumpFeeResult_INVALID_ADDRESS_OR_KEY;\n     }\n-    CWalletTx& wtx = pwalletMain->mapWallet[hash];\n+    CWalletTx& wtx = mapWallet[txid];\n \n-    if (pwalletMain->HasWalletSpend(hash)) {\n-        throw JSONRPCError(RPC_MISC_ERROR, \"Transaction has descendants in the wallet\");\n+    if (HasWalletSpend(txid)) {\n+        vErrors.push_back(\"Transaction has descendants in the wallet\");\n+        return CWallet::BumpFeeResult_MISC_ERROR;\n     }\n \n     {\n         LOCK(mempool.cs);\n-        auto it = mempool.mapTx.find(hash);\n+        auto it = mempool.mapTx.find(txid);\n         if (it != mempool.mapTx.end() && it->GetCountWithDescendants() > 1) {\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Transaction has descendants in the mempool\");\n+            vErrors.push_back(\"Transaction has descendants in the mempool\");\n+            return CWallet::BumpFeeResult_MISC_ERROR;\n         }\n     }\n \n     if (wtx.GetDepthInMainChain() != 0) {\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction has been mined, or is conflicted with a mined transaction\");\n+        vErrors.push_back(\"Transaction has been mined, or is conflicted with a mined transaction\");\n+        return CWallet::BumpFeeResult_INVALID_ADDRESS_OR_KEY;\n     }\n \n     if (!SignalsOptInRBF(wtx)) {\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction is not BIP 125 replaceable\");\n+        vErrors.push_back(\"Transaction is not BIP 125 replaceable\");\n+        return CWallet::BumpFeeResult_INVALID_ADDRESS_OR_KEY;\n     }\n \n     if (wtx.mapValue.count(\"replaced_by_txid\")) {\n-        throw JSONRPCError(RPC_INVALID_REQUEST, strprintf(\"Cannot bump transaction %s which was already bumped by transaction %s\", hash.ToString(), wtx.mapValue.at(\"replaced_by_txid\")));\n+        vErrors.push_back(strprintf(\"Cannot bump transaction %s which was already bumped by transaction %s\", txid.ToString(), wtx.mapValue.at(\"replaced_by_txid\")));\n+        return CWallet::BumpFeeResult_INVALID_REQUEST;\n     }\n \n     // check that original tx consists entirely of our inputs\n     // if not, we can't bump the fee, because the wallet has no way of knowing the value of the other inputs (thus the fee)\n-    if (!pwalletMain->IsAllFromMe(wtx, ISMINE_SPENDABLE)) {\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction contains inputs that don't belong to this wallet\");\n+    if (!IsAllFromMe(wtx, ISMINE_SPENDABLE)) {\n+        vErrors.push_back(\"Transaction contains inputs that don't belong to this wallet\");\n+        return CWallet::BumpFeeResult_INVALID_ADDRESS_OR_KEY;\n     }\n \n     // figure out which output was change\n     // if there was no change output or multiple change outputs, fail\n     int nOutput = -1;\n     for (size_t i = 0; i < wtx.tx->vout.size(); ++i) {\n-        if (pwalletMain->IsChange(wtx.tx->vout[i])) {\n+        if (IsChange(wtx.tx->vout[i])) {\n             if (nOutput != -1) {\n-                throw JSONRPCError(RPC_MISC_ERROR, \"Transaction has multiple change outputs\");\n+                vErrors.push_back(\"Transaction has multiple change outputs\");\n+                return CWallet::BumpFeeResult_MISC_ERROR;\n             }\n             nOutput = i;\n         }\n     }\n     if (nOutput == -1) {\n-        throw JSONRPCError(RPC_MISC_ERROR, \"Transaction does not have a change output\");\n+        vErrors.push_back(\"Transaction does not have a change output\");\n+        return CWallet::BumpFeeResult_MISC_ERROR;\n     }\n \n     // Calculate the expected size of the new transaction.\n     int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n     const int64_t maxNewTxSize = CalculateMaximumSignedTxSize(*wtx.tx);\n+    if (maxNewTxSize < 0) {\n+        vErrors.push_back(\"Transaction contains inputs that cannot be signed\");\n+        return CWallet::BumpFeeResult_INVALID_ADDRESS_OR_KEY;\n+    }\n \n     // calculate the old fee and fee-rate\n-    CAmount nOldFee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r106789092",
      "id" : 106789092,
      "original_commit_id" : "f0c98b9bfa763fbef87f1d9d37853f28e9451c87",
      "original_position" : 97,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 27732210,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-03-18T19:32:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106789092",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r106789188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106789188"
         }
      },
      "body" : "Seems weird and unnecessary to move this to wallet and then move it back here. Perhaps SignTransaction/BumpFeePrepare/BumpFeeCommit should be created before BumpFee (ie BumpFee never being created to just remove it in the same PR) ?",
      "commit_id" : "f7132c3b14cf714f71a2fe59241223fc30520814",
      "created_at" : "2017-03-18T19:38:09Z",
      "diff_hunk" : "@@ -2749,37 +2749,46 @@ UniValue bumpfee(const JSONRPCRequest& request)\n         }\n     }\n \n-    // retrieve the original tx from the wallet\n     LOCK2(cs_main, pwalletMain->cs_wallet);\n     EnsureWalletIsUnlocked();\n \n     CAmount nOldFee(0);\n     CAmount nNewFee(0);\n-    std::shared_ptr<CWalletTx> wtxRef;\n+    std::shared_ptr<CMutableTransaction> txRef;\n     std::vector<std::string> vErrors;\n-    CWallet::BumpFeeResult res = pwalletMain->BumpFee(hash, newConfirmTarget, specifiedConfirmTarget, totalFee, replaceable, nOldFee, nNewFee, wtxRef, vErrors);\n-    if (res != CWallet::BumpFeeResult_OK)\n+    CWallet::BumpFeeResult res = pwalletMain->BumpFeePrepare(hash, newConfirmTarget, specifiedConfirmTarget, totalFee, replaceable, nOldFee, nNewFee, txRef, vErrors);\n+    if (res != CWallet::BumpFeeResult::OK)\n     {\n         switch(res) {\n-            case CWallet::BumpFeeResult_INVALID_ADDRESS_OR_KEY:\n+            case CWallet::BumpFeeResult::INVALID_ADDRESS_OR_KEY:\n                 throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, vErrors[0]);\n                 break;\n-            case CWallet::BumpFeeResult_INVALID_REQUEST:\n+            case CWallet::BumpFeeResult::INVALID_REQUEST:\n                 throw JSONRPCError(RPC_INVALID_REQUEST, vErrors[0]);\n                 break;\n-            case CWallet::BumpFeeResult_INVALID_PARAMETER:\n+            case CWallet::BumpFeeResult::INVALID_PARAMETER:\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, vErrors[0]);\n                 break;\n-            case CWallet::BumpFeeResult_WALLET_ERROR:\n-                throw JSONRPCError(RPC_WALLET_ERROR, vErrors[0]);\n-                break;\n             default:\n                 throw JSONRPCError(RPC_MISC_ERROR, vErrors[0]);\n                 break;\n         }\n     }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#discussion_r106789188",
      "id" : 106789188,
      "original_commit_id" : "65e2e0085a608d9f570bc911349a5953a6ca88ee",
      "original_position" : 39,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 27732348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9697",
      "updated_at" : "2017-03-18T19:38:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/106789188",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "utACK individual commits: 8c6316038e8ebb1877d712f29171afc4bb76a159 641c99cb6f96afa166a293917f36f3cf8f28a08a (without fully verifying code movements, but look ok) f0c98b9bfa763fbef87f1d9d37853f28e9451c87\r\nFast review 65e2e0085a608d9f570bc911349a5953a6ca88ee\r\nIt seems to me that the history in this PR is unnecessarily complicated and not very clean (and I believe it doesn't compile commit by commit, but I haven't checked).\r\nNeeds rebase.",
      "created_at" : "2017-03-18T19:39:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#issuecomment-287569595",
      "id" : 287569595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9697",
      "updated_at" : "2017-03-18T19:39:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/287569595",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon, if you are interested in reviewing this PR, the only commit worth looking at is the final one: \"[Qt] simple fee bumper with user verification\" (f7132c3b14cf714f71a2fe59241223fc30520814). The preceding commits which you reviewed were just pulled in from an old version of #9681, and they will disappear after #9681 is merged and this is rebased.\r\n\r\nIf you want to review the latest version of the feebumper code in #9681, that would be very helpful. #9681 is fully up to date and its commit history has been simplified.\r\n\r\n\r\n",
      "created_at" : "2017-03-18T20:31:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9697#issuecomment-287572727",
      "id" : 287572727,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9697",
      "updated_at" : "2017-03-18T20:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/287572727",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
