[
   {
      "body" : "It seems somewhat strange that this is set per-run and not per-wallet. Indeed, if it were set per-wallet, an easy way to get the intended behavior here is to simply encrypt your wallet with a garbage passphrase such that it can no longer be opened (not to say we shouldn't do this, better UX around that is good, but it might be easier to review/write if it re-used that infrastructure).",
      "created_at" : "2017-02-01T21:23:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-276786662",
      "id" : 276786662,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9662",
      "updated_at" : "2017-02-01T21:24:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/276786662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Concept ACK. I agree that this would be better as a mode on the wallet instead of yet another startup option.",
      "created_at" : "2017-02-02T08:03:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-276891978",
      "id" : 276891978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9662",
      "updated_at" : "2017-02-02T08:03:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/276891978",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I would like to rebase on top of that for https://github.com/bitcoin/bitcoin/pull/9728, can you rebase?\r\nI would switch that on if hdwatchonly is used.",
      "created_at" : "2017-02-16T01:53:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-280205031",
      "id" : 280205031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9662",
      "updated_at" : "2017-02-16T01:54:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280205031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=3",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "body" : "Added two commit.\r\n* First commit adds a facility to store and check wallet flags (64bit). Made DISABLE_PRIVATE_KEYS the first flag.\r\n* Second commit makes the disablehot function per wallet (no longer a global state)\r\n\r\nDisabling private keys on a wallet that already contains private keys is not possible (also the other way around).",
      "created_at" : "2017-02-17T09:11:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-280596351",
      "id" : 280596351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9662",
      "updated_at" : "2017-02-17T09:11:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/280596351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9662#discussion_r101719386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9662"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101719386"
         }
      },
      "body" : "@MarcoFalke: any idea how I can make this pass? Right now, staring bitcoind in this case with this setup will cause bitcoind to write to stderr (and halt) which then result in pass=false in `rpc-tests.py`. But it's actually the correct behaviour.",
      "commit_id" : "e581d843f06d5fe71a4662b122f94577e5dccd55",
      "created_at" : "2017-02-17T09:37:35Z",
      "diff_hunk" : "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class DisableHotKeysTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, [[], ['-disablehot']])\n+\n+        connect_nodes_bi(self.nodes,0,1)\n+\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def run_test(self):\n+        assert_equal(self.nodes[1].getwalletinfo()['keypoolsize'], 0)\n+\n+        print(\"Mining blocks...\")\n+        self.sync_all()\n+        self.nodes[0].generate(101)\n+        self.sync_all()\n+\n+        n0addrR = self.nodes[0].getnewaddress()\n+        n0pubkR = self.nodes[0].validateaddress(n0addrR)['pubkey']\n+        n0addrC = self.nodes[0].getnewaddress()\n+        n0pubkC = self.nodes[0].validateaddress(n0addrC)['pubkey']\n+        n0addr  = self.nodes[0].getnewaddress()\n+        self.nodes[0].sendtoaddress(n0addrR, 10);\n+        self.nodes[0].generate(6)\n+        self.sync_all()\n+\n+        try:\n+            self.nodes[1].getnewaddress()\n+            raise AssertionError(\"Wallet can derive private keys while -disablehot is enabled\")\n+        except JSONRPCException as e:\n+            assert('Hot key' in e.error['message'])\n+\n+        try:\n+            self.nodes[1].getrawchangeaddress()\n+            raise AssertionError(\"Wallet can derive private keys while -disablehot is enabled\")\n+        except JSONRPCException as e:\n+            assert('Hot key' in e.error['message'])\n+\n+        self.nodes[1].importpubkey(n0pubkR) #TODO switch to importmulti\n+        self.nodes[1].importpubkey(n0pubkC)\n+        assert_equal(self.nodes[1].getbalance(\"*\", 1, True), 10)\n+        rawtx = self.nodes[1].createrawtransaction([], {n0addr: 1.0})\n+        frawtx= self.nodes[1].fundrawtransaction(rawtx, {\"changeAddress\": n0addrC, \"includeWatching\": True})\n+\n+        # check if we can re-enable private keys\n+        assert_equal(self.nodes[1].signrawtransaction(frawtx['hex'])['complete'], False)\n+        print(\"restarting node with disablehot=0 (try to re-enable private keys which must not be possible)\")\n+        stop_nodes(self.nodes)\n+        try:\n+            self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, [[], ['-disablehot=0']])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9662#discussion_r101719386",
      "id" : 101719386,
      "original_commit_id" : "cd93c2da629fd35eea2ac83a7d8c0eeaaa640bae",
      "original_position" : 64,
      "path" : "qa/rpc-tests/disablehot.py",
      "position" : 64,
      "pull_request_review_id" : 22456345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9662",
      "updated_at" : "2017-02-17T09:40:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101719386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9662#discussion_r101880736"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9662"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101880736"
         }
      },
      "body" : "We might create a `assert_start_raises_init_error()` method. I will take a look at this tomorrow.",
      "commit_id" : "e581d843f06d5fe71a4662b122f94577e5dccd55",
      "created_at" : "2017-02-18T02:10:13Z",
      "diff_hunk" : "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class DisableHotKeysTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, [[], ['-disablehot']])\n+\n+        connect_nodes_bi(self.nodes,0,1)\n+\n+        self.is_network_split=False\n+        self.sync_all()\n+\n+    def run_test(self):\n+        assert_equal(self.nodes[1].getwalletinfo()['keypoolsize'], 0)\n+\n+        print(\"Mining blocks...\")\n+        self.sync_all()\n+        self.nodes[0].generate(101)\n+        self.sync_all()\n+\n+        n0addrR = self.nodes[0].getnewaddress()\n+        n0pubkR = self.nodes[0].validateaddress(n0addrR)['pubkey']\n+        n0addrC = self.nodes[0].getnewaddress()\n+        n0pubkC = self.nodes[0].validateaddress(n0addrC)['pubkey']\n+        n0addr  = self.nodes[0].getnewaddress()\n+        self.nodes[0].sendtoaddress(n0addrR, 10);\n+        self.nodes[0].generate(6)\n+        self.sync_all()\n+\n+        try:\n+            self.nodes[1].getnewaddress()\n+            raise AssertionError(\"Wallet can derive private keys while -disablehot is enabled\")\n+        except JSONRPCException as e:\n+            assert('Hot key' in e.error['message'])\n+\n+        try:\n+            self.nodes[1].getrawchangeaddress()\n+            raise AssertionError(\"Wallet can derive private keys while -disablehot is enabled\")\n+        except JSONRPCException as e:\n+            assert('Hot key' in e.error['message'])\n+\n+        self.nodes[1].importpubkey(n0pubkR) #TODO switch to importmulti\n+        self.nodes[1].importpubkey(n0pubkC)\n+        assert_equal(self.nodes[1].getbalance(\"*\", 1, True), 10)\n+        rawtx = self.nodes[1].createrawtransaction([], {n0addr: 1.0})\n+        frawtx= self.nodes[1].fundrawtransaction(rawtx, {\"changeAddress\": n0addrC, \"includeWatching\": True})\n+\n+        # check if we can re-enable private keys\n+        assert_equal(self.nodes[1].signrawtransaction(frawtx['hex'])['complete'], False)\n+        print(\"restarting node with disablehot=0 (try to re-enable private keys which must not be possible)\")\n+        stop_nodes(self.nodes)\n+        try:\n+            self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, [[], ['-disablehot=0']])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9662#discussion_r101880736",
      "id" : 101880736,
      "original_commit_id" : "cd93c2da629fd35eea2ac83a7d8c0eeaaa640bae",
      "original_position" : 64,
      "path" : "qa/rpc-tests/disablehot.py",
      "position" : 64,
      "pull_request_review_id" : 22626838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9662",
      "updated_at" : "2017-02-18T02:10:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/101880736",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
