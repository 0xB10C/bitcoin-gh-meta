[
   {
      "body" : "I dont think we should be using an RC4-based stream cipher for our crypto random stuff. Possibly in conjunction with /dev/urandom and other sources, but not by itself. Given this is only used in conjunction with OpenSSL's rand, its likely fine, but I super dont trust OpenSSL's rand either, so I'd say NACK.",
      "created_at" : "2017-02-03T15:35:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277278760",
      "id" : 277278760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-03T15:35:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277278760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Please do not submit incomplete patches, certainly not one-liners. No one is just suddenly going to do your work for you, that's not how open source works, sorry.",
      "created_at" : "2017-02-03T16:13:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277289741",
      "id" : 277289741,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-03T16:13:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277289741",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@TheBlueMatt The arc4random functioms are the way to obtain kernel\nrandomness in some (all?) BSDs, even though they've stopped using the RC4\nmethod internally.\n\nOP, you'll need to make your patch work though.\n",
      "created_at" : "2017-02-03T17:38:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277311848",
      "id" : 277311848,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-03T17:38:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277311848",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa ahh, that was not at all clear to me from man pages I saw, thanks.",
      "created_at" : "2017-02-03T18:43:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277327919",
      "id" : 277327919,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-03T18:43:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277327919",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=3",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Hi, sorry for the incomplete patch, will fix that.\r\n\r\narc4random() is the primary randomness interface on OpenBSD and all programs use it for everything.\r\n\r\nI submitted this so that BitcoinD will function even if there's no \"/dev/urandom\" device. BitcoinD's current behavior is to terminate if that device not exists, which is a disaster as there are situations when it's totally untrivial or/and unsuitable to create such a device. (Also, why depend on the device's existence when it's technically unnecessary in the first place.)\r\n\r\nPerhaps the very simplest approach would be to apply the arc4random() interface specifically to OpenBSD. Anyhow i'll intend to come up with a complete patch and refer to it here. Be back in a bit.",
      "created_at" : "2017-02-04T03:02:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277413837",
      "id" : 277413837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-04T03:02:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277413837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13404679?v=3",
         "events_url" : "https://api.github.com/users/mlmikael/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mlmikael/followers",
         "following_url" : "https://api.github.com/users/mlmikael/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mlmikael/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mlmikael",
         "id" : 13404679,
         "login" : "mlmikael",
         "organizations_url" : "https://api.github.com/users/mlmikael/orgs",
         "received_events_url" : "https://api.github.com/users/mlmikael/received_events",
         "repos_url" : "https://api.github.com/users/mlmikael/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mlmikael/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mlmikael/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mlmikael"
      }
   },
   {
      "body" : "> Also, why depend on the device's existence when it's technically unnecessary in the first place\r\n\r\nWe're relying on the availability of strong randomness, and won't run without. I'm perfectly fine with using a specific kernel interface instead of /dev/random if that's available.",
      "created_at" : "2017-02-04T03:13:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277414501",
      "id" : 277414501,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-04T03:13:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277414501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Great. Before crafting the patch: Do you guys prefer that arc4random is used on all platforms where it's supported, or specifically on OpenBSD?\r\n\r\nAs soon as that has been clarified, we just need to ensure that a properly scoped define is in the code, and then commit the code patch I suggested (but depending on the proper define), that's all.",
      "created_at" : "2017-02-04T03:34:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277415533",
      "id" : 277415533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-04T03:34:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277415533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13404679?v=3",
         "events_url" : "https://api.github.com/users/mlmikael/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mlmikael/followers",
         "following_url" : "https://api.github.com/users/mlmikael/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mlmikael/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mlmikael",
         "id" : 13404679,
         "login" : "mlmikael",
         "organizations_url" : "https://api.github.com/users/mlmikael/orgs",
         "received_events_url" : "https://api.github.com/users/mlmikael/received_events",
         "repos_url" : "https://api.github.com/users/mlmikael/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mlmikael/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mlmikael/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mlmikael"
      }
   },
   {
      "body" : "One approach here would be to use arc4random() on any arc4random-supported platform, as failover when /dev/urandom not is existent. That would make the risk profile in BitcoinD's entropy sampling unnecessarily complex though.\r\n\r\narc4random seems to not be solid since long on other platforms than OpenBSD, so that would be FreeBSD and Mac OS X.\r\n\r\nFor that reason, for the time being, and for the sake of code conciseness, adding an OpenBSD-specific clause where on OpenBSD specifically arc4random() is used only, may be preferable.\r\n\r\nLooking through the code, I do not see any OpenBSD-specific DEFINE - there is \"LEVELDB_TARGET_FLAGS\" but that one should be used by LevelDB code only, I guess.\r\n\r\nThen there is \"TARGET_OS\" which only has the options \"linux\", \"windows\" and \"darwin\" currently.\r\n\r\nIf I read configure.ac right, there are TARGET_WINDOWS and TARGET_DARWIN defines (and no TARGET_LINUX), but, they are not use anywhere in the code.\r\n\r\nAn OpenBSD-specific define could be introduced in the OpenBSD detection code in configure.ac, that is here: https://github.com/bitcoin/bitcoin/blob/be31a2b3635b893930c731a2929bb593dae9847e/configure.ac#L380 .\r\n\r\nFrom my place with limited insight, I would guess just adding a TARGET_OPENBSD define there in configure.ac would be sensible, and then use that one in src/random.cpp GetOSRand().\r\n\r\nThoughts?\r\n",
      "created_at" : "2017-02-04T04:04:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277416996",
      "id" : 277416996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-04T04:04:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277416996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13404679?v=3",
         "events_url" : "https://api.github.com/users/mlmikael/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mlmikael/followers",
         "following_url" : "https://api.github.com/users/mlmikael/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mlmikael/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mlmikael",
         "id" : 13404679,
         "login" : "mlmikael",
         "organizations_url" : "https://api.github.com/users/mlmikael/orgs",
         "received_events_url" : "https://api.github.com/users/mlmikael/received_events",
         "repos_url" : "https://api.github.com/users/mlmikael/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mlmikael/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mlmikael/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mlmikael"
      }
   },
   {
      "body" : "@theuni could you comment on the build system question ^^",
      "created_at" : "2017-02-06T11:02:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277650424",
      "id" : 277650424,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-06T11:02:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277650424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@mlmikael Generally we don't run platform-specific tests, rather we run feature-tests. That way if another platform just happens to implement the thing, it will just work without us having to keep up with a list.\r\n\r\nSee the check for MSG_NOSIGNAL in configure.ac for example.\r\n\r\nYou'll want to do something like:\r\n```bash\r\nAC_MSG_CHECKING(for arc4random)\r\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdlib.h>]],\r\n [[ uint32_t f = arc4random(); ]])],\r\n [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_ARC4RANDOM, 1,[Define this symbol if you have arc4random]) ],\r\n [ AC_MSG_RESULT(no)]\r\n)\r\n```\r\nThen in the code, you can use ```#ifdef HAVE_ARC4RANDOM```.\r\n\r\nAll that ignores the \"should we\" part. I'm not sure if we actually want to use it unconditionally if it's found, in this case, we might actually want it whitelisted to certain platforms.",
      "created_at" : "2017-02-06T22:17:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277832142",
      "id" : 277832142,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-06T22:17:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277832142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@theuni , noted and understood the parts about how to bring in the HAVE_ARC4RANDOM define.\r\n\r\nThe finishing part \"All that ignores the \"should we\" part. I'm not sure if we actually want to use it unconditionally if it's found, in this case, we might actually want it whitelisted to certain platforms.\", do you mean that we also should make a \"TARGET_OPENBSD\" DEFINE or alike as a way to whitelist OpenBSD for arc4random use?\r\n\r\nWhen I looked around among platforms with arc4random support, I ran into OpenBSD, FreeBSD and Mac OS X, and it seems that it's only well developed and \"a big deal\" on OpenBSD, whereas FreeBSD and Mac OS X ran with an obsolete algorithm at least until recently, not sure.\r\n\r\nDepending on how good entropy GetOSRand() needs, the arc4random() could either be used exclusively on all platforms where it's implemented, or, it could be used as a failover for when opening /dev/urandom fails.\r\n\r\nThoughts?\r\n\r\n",
      "created_at" : "2017-02-07T01:27:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277872200",
      "id" : 277872200,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-07T01:27:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277872200",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13404679?v=3",
         "events_url" : "https://api.github.com/users/mlmikael/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mlmikael/followers",
         "following_url" : "https://api.github.com/users/mlmikael/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mlmikael/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mlmikael",
         "id" : 13404679,
         "login" : "mlmikael",
         "organizations_url" : "https://api.github.com/users/mlmikael/orgs",
         "received_events_url" : "https://api.github.com/users/mlmikael/received_events",
         "repos_url" : "https://api.github.com/users/mlmikael/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mlmikael/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mlmikael/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mlmikael"
      }
   },
   {
      "body" : "@theuni im not sure there's anyway to do a proper feature test here, arc4random is no longer arc4 on openbsd and other systems which implement it; however it was at one point so the feature test would have to be for a secure arc4random implementation and not just arc4random",
      "created_at" : "2017-02-07T01:45:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-277875228",
      "id" : 277875228,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-07T01:45:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277875228",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : ">  arc4random is no longer arc4 on openbsd and other systems which implement it\r\n\r\nSo we only want \"non-arc4 that's called arc4random\". That's horribly confusing, and sounds like a really dangerous situation for something this critical. \r\n\r\n> Depending on how good entropy GetOSRand() needs, the arc4random() could either be used exclusively on all platforms where it's implemented, or, it could be used as a failover for when opening /dev/urandom fails.\r\n\r\nIt's used for the wallet so entropy is *extremely* important. Erroring out is 100x preferable to producing reproducible or insecure keys.\r\n\r\n(on the flip side, if the wallet is disabled, there's nothing that secure randomness is very important for in bitcoind)",
      "created_at" : "2017-02-07T14:10:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-278010165",
      "id" : 278010165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-07T14:20:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278010165",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I've [read about this a bit](https://lwn.net/Articles/625506/) deeper: `arc4random` as a kernel-supported cryptographic randomness source is indeed *OpenBSD specific*. Internally it uses the [getentropy(2)](http://man.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man2/getentropy.2?query=getentropy%26sec=2) system call (which we could also use directly. It is also available on [solaris](https://blogs.oracle.com/darren/entry/solaris_new_system_calls_getentropy) ).\r\n\r\nOn other OSes with the arc4random function in libc (such as FreeBSD) it's really arc 4 random, and we **really don't want to use it**.\r\n\r\nSo all in all, I'd prefer making this strictly OpenBSD specific and not have it depend on availability of the function.\r\n",
      "created_at" : "2017-02-07T15:29:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-278034695",
      "id" : 278034695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-07T15:31:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278034695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I guess it would make sense to make arc4random use OpenBSD-specific. What do you think?\r\n\r\nIn that case, we need some define for #ifdef-ing the OpenBSD target. @theuni and others, how do you suggest we do this, introduce a TARGET_OPENBSD define?? (e.g. here https://github.com/bitcoin/bitcoin/blob/be31a2b3635b893930c731a2929bb593dae9847e/configure.ac#L382 )",
      "created_at" : "2017-02-09T10:33:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9677#issuecomment-278604775",
      "id" : 278604775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9677",
      "updated_at" : "2017-02-09T10:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/278604775",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13404679?v=3",
         "events_url" : "https://api.github.com/users/mlmikael/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mlmikael/followers",
         "following_url" : "https://api.github.com/users/mlmikael/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mlmikael/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mlmikael",
         "id" : 13404679,
         "login" : "mlmikael",
         "organizations_url" : "https://api.github.com/users/mlmikael/orgs",
         "received_events_url" : "https://api.github.com/users/mlmikael/received_events",
         "repos_url" : "https://api.github.com/users/mlmikael/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mlmikael/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mlmikael/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mlmikael"
      }
   }
]
