[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-01-25T10:58:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#issuecomment-1021061595",
      "id" : 1021061595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24149",
      "node_id" : "IC_kwDOABII58483Cnb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021061595/reactions"
      },
      "updated_at" : "2022-01-25T10:58:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021061595",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24043](https://github.com/bitcoin/bitcoin/pull/24043) (Add (sorted)multi_a descriptor for k-of-n multisig inside tr by sipa)\n* [#23578](https://github.com/bitcoin/bitcoin/pull/23578) (Add external signer taproot support by Sjors)\n* [#23502](https://github.com/bitcoin/bitcoin/pull/23502) (wallet: Avoid underpaying transaction fees when signing taproot spends by achow101)\n* [#23480](https://github.com/bitcoin/bitcoin/pull/23480) (Add rawtr() descriptor for P2TR with specified (tweaked) output key by sipa)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n* [#22793](https://github.com/bitcoin/bitcoin/pull/22793) (Simplify BaseSignatureChecker virtual functions and GenericTransactionSignatureChecker constructors by achow101)\n* [#22558](https://github.com/bitcoin/bitcoin/pull/22558) (psbt: Taproot fields for PSBT by achow101)\n* [#21702](https://github.com/bitcoin/bitcoin/pull/21702) (Implement BIP-119 Validation (CheckTemplateVerify) by JeremyRubin)\n* [#13062](https://github.com/bitcoin/bitcoin/pull/13062) (Make script interpreter independent from storage type CScript by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-01-26T00:17:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#issuecomment-1021731369",
      "id" : 1021731369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24149",
      "node_id" : "IC_kwDOABII58485mIp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021731369/reactions"
      },
      "updated_at" : "2022-02-24T14:31:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021731369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-01-26T08:11:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#issuecomment-1021959878",
      "id" : 1021959878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24149",
      "node_id" : "IC_kwDOABII58486d7G",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021959878/reactions"
      },
      "updated_at" : "2022-01-26T08:11:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021959878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r806178300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806178300"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In b2e3582323b1e3dfded7eb0a2597fd74ba52e4df \"miniscript: satisfaction support\"\r\n\r\nI think these should be named with a `Set` prefix as otherwise they read like they are functions to check these properties rather than setting them.",
      "commit_id" : "c226ee3075ed059060051276d3ef815f756602e9",
      "created_at" : "2022-02-14T19:38:43Z",
      "diff_hunk" : "@@ -225,6 +230,54 @@ size_t ComputeScriptLen(NodeType nodetype, Type sub0typ, size_t subsize, uint32_\n //! A helper sanitizer/checker for the output of CalcType.\n Type SanitizeType(Type x);\n \n+//! An object representing a sequence of witness stack elements.\n+struct InputStack {\n+    /** Whether this stack is valid for its intended purpose (satisfaction or dissatisfaction of a Node).\n+     *  The MAYBE value is used for size estimation, when keys/preimages may actually be unavailable,\n+     *  but may be available at signing time. This makes the InputStack structure and signing logic,\n+     *  filled with dummy signatures/preimages usable for witness size estimation.\n+     */\n+    Availability available = Availability::YES;\n+    //! Whether this stack contains a digital signature.\n+    bool has_sig = false;\n+    //! Whether this stack is malleable (can be turned into an equally valid other stack by a third party).\n+    bool malleable = false;\n+    //! Whether this stack is non-canonical (using a construction known to be unnecessary for satisfaction).\n+    bool non_canon = false;\n+    //! Serialized witness size.\n+    size_t size = 0;\n+    //! Data elements.\n+    std::vector<std::vector<unsigned char>> stack;\n+    //! Construct an empty stack (valid).\n+    InputStack() {}\n+    //! Construct a valid single-element stack (with an element up to 75 bytes).\n+    InputStack(std::vector<unsigned char> in) : size(in.size() + 1), stack(Vector(std::move(in))) {}\n+    //! Change availability\n+    InputStack& Available(Availability avail);\n+    //! Mark this input stack as having a signature.\n+    InputStack& WithSig();\n+    //! Mark this input stack as non-canonical (known to not be necessary in non-malleable satisfactions).\n+    InputStack& NonCanon();\n+    //! Mark this input stack as malleable.\n+    InputStack& Malleable(bool x = true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r806178300",
      "id" : 806178300,
      "line" : 262,
      "node_id" : "PRRC_kwDOABII584wDU38",
      "original_commit_id" : "b2e3582323b1e3dfded7eb0a2597fd74ba52e4df",
      "original_line" : 262,
      "original_position" : 45,
      "original_start_line" : 256,
      "path" : "src/script/miniscript.h",
      "position" : 45,
      "pull_request_review_id" : 882103227,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806178300/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 256,
      "start_side" : "RIGHT",
      "updated_at" : "2022-02-14T20:49:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806178300",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r806183392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806183392"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In b2e3582323b1e3dfded7eb0a2597fd74ba52e4df \"miniscript: satisfaction support\"\r\n\r\nIs there a doc somewhere that defines \"weak\" and \"strong\" in this context?",
      "commit_id" : "c226ee3075ed059060051276d3ef815f756602e9",
      "created_at" : "2022-02-14T19:45:41Z",
      "diff_hunk" : "@@ -282,6 +282,77 @@ size_t ComputeScriptLen(NodeType nodetype, Type sub0typ, size_t subsize, uint32_\n     return 0;\n }\n \n+InputStack& InputStack::Available(Availability avail) {\n+    available = avail;\n+    if (avail == Availability::NO) {\n+        stack.clear();\n+        size = std::numeric_limits<size_t>::max();\n+        has_sig = false;\n+        malleable = false;\n+        non_canon = false;\n+    }\n+    return *this;\n+}\n+\n+InputStack& InputStack::WithSig() {\n+    has_sig = true;\n+    return *this;\n+}\n+\n+InputStack& InputStack::NonCanon() {\n+    non_canon = true;\n+    return *this;\n+}\n+\n+InputStack& InputStack::Malleable(bool x) {\n+    malleable = x;\n+    return *this;\n+}\n+\n+InputStack operator+(InputStack a, InputStack b) {\n+    a.stack = Cat(std::move(a.stack), std::move(b.stack));\n+    a.size += b.size;\n+    a.has_sig |= b.has_sig;\n+    a.malleable |= b.malleable;\n+    a.non_canon |= b.non_canon;\n+    if (a.available == Availability::NO || b.available == Availability::NO) {\n+        a.Available(Availability::NO);\n+    } else if (a.available == Availability::MAYBE || b.available == Availability::MAYBE) {\n+        a.Available(Availability::MAYBE);\n+    }\n+    return a;\n+}\n+\n+InputStack Choose(InputStack a, InputStack b, bool nonmalleable) {\n+    // If only one (or neither) is valid, pick the other one.\n+    if (a.available == Availability::NO) return b;\n+    if (b.available == Availability::NO) return a;\n+    // If both are valid, they must be distinct.\n+    if (nonmalleable) {\n+        // If both options are weak, any result is fine; it just needs the malleable marker.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r806183392",
      "id" : 806183392,
      "line" : 332,
      "node_id" : "PRRC_kwDOABII584wDWHg",
      "original_commit_id" : "b2e3582323b1e3dfded7eb0a2597fd74ba52e4df",
      "original_line" : 332,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/script/miniscript.cpp",
      "position" : 51,
      "pull_request_review_id" : 882103227,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806183392/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-14T20:49:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806183392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r806197176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806197176"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In b2e3582323b1e3dfded7eb0a2597fd74ba52e4df \"miniscript: satisfaction support\"\r\n\r\nThis line appears to not be doing anything.",
      "commit_id" : "c226ee3075ed059060051276d3ef815f756602e9",
      "created_at" : "2022-02-14T20:05:09Z",
      "diff_hunk" : "@@ -676,6 +744,166 @@ struct Node {\n         return {{}, {}};\n     }\n \n+\n+    template<typename Ctx>\n+    internal::InputResult ProduceInput(const Ctx& ctx, bool nonmal) const {\n+        using namespace internal;\n+\n+        auto helper = [&ctx, nonmal](const Node& node, Span<InputResult> subres) -> InputResult {\n+            switch (node.nodetype) {\n+                case NodeType::PK_K: {\n+                    std::vector<unsigned char> sig;\n+                    Availability avail = ctx.Sign(node.keys[0], sig);\n+                    return InputResult(ZERO, InputStack(std::move(sig)).WithSig().Available(avail));\n+                }\n+                case NodeType::PK_H: {\n+                    std::vector<unsigned char> key = ctx.ToPKBytes(node.keys[0]), sig;\n+                    Availability avail = ctx.Sign(node.keys[0], sig);\n+                    return InputResult(ZERO + InputStack(key), (InputStack(std::move(sig)).WithSig() + InputStack(key)).Available(avail));\n+                }\n+                case NodeType::MULTI: {\n+                    std::vector<InputStack> sats = Vector(ZERO);\n+                    for (size_t i = 0; i < node.keys.size(); ++i) {\n+                        std::vector<unsigned char> sig;\n+                        Availability avail = ctx.Sign(node.keys[i], sig);\n+                        auto sat = InputStack(std::move(sig)).WithSig().Available(avail);\n+                        std::vector<InputStack> next_sats;\n+                        next_sats.push_back(sats[0]);\n+                        for (size_t j = 1; j < sats.size(); ++j) next_sats.push_back(Choose(sats[j], std::move(sats[j - 1]) + sat, nonmal));\n+                        next_sats.push_back(std::move(sats[sats.size() - 1]) + std::move(sat));\n+                        sats = std::move(next_sats);\n+                    }\n+                    InputStack nsat = ZERO;\n+                    for (size_t i = 0; i < node.k; ++i) nsat = std::move(nsat) + ZERO;\n+                    assert(node.k <= sats.size());\n+                    return InputResult(std::move(nsat), std::move(sats[node.k]));\n+                }\n+                case NodeType::THRESH: {\n+                    std::vector<InputStack> sats = Vector(EMPTY);\n+                    for (size_t i = 0; i < subres.size(); ++i) {\n+                        auto& res = subres[subres.size() - i - 1];\n+                        std::vector<InputStack> next_sats;\n+                        next_sats.push_back(sats[0] + res.nsat);\n+                        for (size_t j = 1; j < sats.size(); ++j) next_sats.push_back(Choose(sats[j] + res.nsat, std::move(sats[j - 1]) + res.sat, nonmal));\n+                        next_sats.push_back(std::move(sats[sats.size() - 1]) + std::move(res.sat));\n+                        sats = std::move(next_sats);\n+                    }\n+                    InputStack nsat = INVALID;\n+                    for (size_t i = 0; i < sats.size(); ++i) {\n+                        if (i != node.k) nsat = Choose(std::move(nsat), std::move(sats[i]), nonmal);\n+                    }\n+                    assert(node.k <= sats.size());\n+                    return InputResult(std::move(nsat), std::move(sats[node.k]));\n+                }\n+                case NodeType::OLDER: {\n+                    return InputResult(INVALID, ctx.CheckOlder(node.k) ? EMPTY : INVALID);\n+                }\n+                case NodeType::AFTER: {\n+                    return InputResult(INVALID, ctx.CheckAfter(node.k) ? EMPTY : INVALID);\n+                }\n+                case NodeType::SHA256: {\n+                    std::vector<unsigned char> preimage;\n+                    Availability avail = ctx.SatSHA256(node.data, preimage);\n+                    return InputResult(ZERO32, InputStack(std::move(preimage)).Available(avail));\n+                }\n+                case NodeType::RIPEMD160: {\n+                    std::vector<unsigned char> preimage;\n+                    Availability avail = ctx.SatRIPEMD160(node.data, preimage);\n+                    return InputResult(ZERO32, InputStack(std::move(preimage)).Available(avail));\n+                }\n+                case NodeType::HASH256: {\n+                    std::vector<unsigned char> preimage;\n+                    Availability avail = ctx.SatHASH256(node.data, preimage);\n+                    return InputResult(ZERO32, InputStack(std::move(preimage)).Available(avail));\n+                }\n+                case NodeType::HASH160: {\n+                    std::vector<unsigned char> preimage;\n+                    Availability avail = ctx.SatHASH160(node.data, preimage);\n+                    return InputResult(ZERO32, InputStack(std::move(preimage)).Available(avail));\n+                }\n+                case NodeType::AND_V: {\n+                    auto& x = subres[0], &y = subres[1];\n+                    return InputResult((y.nsat + x.sat).NonCanon(), y.sat + x.sat);\n+                }\n+                case NodeType::AND_B: {\n+                    auto& x = subres[0], &y = subres[1];\n+                    return InputResult(Choose(Choose(y.nsat + x.nsat, (y.sat + x.nsat).NonCanon(), nonmal), (y.nsat + x.sat).NonCanon(), nonmal), y.sat + x.sat);\n+                }\n+                case NodeType::OR_B: {\n+                    auto& x = subres[0], &z = subres[1];\n+                    return InputResult(z.nsat + x.nsat, Choose(Choose(z.nsat + x.sat, z.sat + x.nsat, nonmal), (z.sat + x.sat).NonCanon(), nonmal));\n+                }\n+                case NodeType::OR_C: {\n+                    auto& x = subres[0], &z = subres[1];\n+                    return InputResult(INVALID, Choose(std::move(x.sat), z.sat + x.nsat, nonmal));\n+                }\n+                case NodeType::OR_D: {\n+                    auto& x = subres[0], &z = subres[1];\n+                    auto nsat = z.nsat + x.nsat, sat_l = x.sat, sat_r = z.sat + x.nsat;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r806197176",
      "id" : 806197176,
      "line" : 842,
      "node_id" : "PRRC_kwDOABII584wDZe4",
      "original_commit_id" : "b2e3582323b1e3dfded7eb0a2597fd74ba52e4df",
      "original_line" : 842,
      "original_position" : 188,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 188,
      "pull_request_review_id" : 882103227,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806197176/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-14T20:49:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806197176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r806216748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806216748"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 96e9de9304edf5feec87adf5ee56ad0f526459b8 \"script/sign: signing support for Miniscript with timelocks\"\r\n\r\nIn `DoCheck`, `spender_nsequence` is `CTxIn::SEQUENCE_FINAL`, should it be that here as well (instead of 0)?",
      "commit_id" : "c226ee3075ed059060051276d3ef815f756602e9",
      "created_at" : "2022-02-14T20:33:12Z",
      "diff_hunk" : "@@ -297,29 +302,39 @@ void DoCheck(const std::string& prv, const std::string& pub, const std::string&\n     BOOST_CHECK_MESSAGE(left_paths.empty(), \"Not all expected key paths found: \" + prv);\n }\n \n-void Check(const std::string& prv, const std::string& pub, const std::string& norm_prv, const std::string& norm_pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::optional<OutputType>& type, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void Check(const std::string& prv, const std::string& pub, const std::string& norm_prv, const std::string& norm_pub,\n+           int flags, const std::vector<std::vector<std::string>>& scripts, const std::optional<OutputType>& type,\n+           const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY, uint32_t spender_nlocktime=0, uint32_t spender_nsequence=0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r806216748",
      "id" : 806216748,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584wDeQs",
      "original_commit_id" : "96e9de9304edf5feec87adf5ee56ad0f526459b8",
      "original_line" : 307,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/test/descriptor_tests.cpp",
      "position" : 44,
      "pull_request_review_id" : 882103227,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806216748/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-14T20:49:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/806216748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r811146800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811146800"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The website defines it as `HASSIG`. That a satisfaction is weak means that it isn't protected by a signature, strong is the opposite. Note this property can be analyzed statically on the Witness Script: it is the 's' property (`NeedsSignature()`, a requirement to be `IsSaneTopLevel()`).",
      "commit_id" : "8e268cc3c016a94964c1cc3f933a64651848c5d4",
      "created_at" : "2022-02-21T13:49:15Z",
      "diff_hunk" : "@@ -282,6 +282,77 @@ size_t ComputeScriptLen(NodeType nodetype, Type sub0typ, size_t subsize, uint32_\n     return 0;\n }\n \n+InputStack& InputStack::Available(Availability avail) {\n+    available = avail;\n+    if (avail == Availability::NO) {\n+        stack.clear();\n+        size = std::numeric_limits<size_t>::max();\n+        has_sig = false;\n+        malleable = false;\n+        non_canon = false;\n+    }\n+    return *this;\n+}\n+\n+InputStack& InputStack::WithSig() {\n+    has_sig = true;\n+    return *this;\n+}\n+\n+InputStack& InputStack::NonCanon() {\n+    non_canon = true;\n+    return *this;\n+}\n+\n+InputStack& InputStack::Malleable(bool x) {\n+    malleable = x;\n+    return *this;\n+}\n+\n+InputStack operator+(InputStack a, InputStack b) {\n+    a.stack = Cat(std::move(a.stack), std::move(b.stack));\n+    a.size += b.size;\n+    a.has_sig |= b.has_sig;\n+    a.malleable |= b.malleable;\n+    a.non_canon |= b.non_canon;\n+    if (a.available == Availability::NO || b.available == Availability::NO) {\n+        a.Available(Availability::NO);\n+    } else if (a.available == Availability::MAYBE || b.available == Availability::MAYBE) {\n+        a.Available(Availability::MAYBE);\n+    }\n+    return a;\n+}\n+\n+InputStack Choose(InputStack a, InputStack b, bool nonmalleable) {\n+    // If only one (or neither) is valid, pick the other one.\n+    if (a.available == Availability::NO) return b;\n+    if (b.available == Availability::NO) return a;\n+    // If both are valid, they must be distinct.\n+    if (nonmalleable) {\n+        // If both options are weak, any result is fine; it just needs the malleable marker.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r811146800",
      "id" : 811146800,
      "in_reply_to_id" : 806183392,
      "line" : 332,
      "node_id" : "PRRC_kwDOABII584wWR4w",
      "original_commit_id" : "b2e3582323b1e3dfded7eb0a2597fd74ba52e4df",
      "original_line" : 332,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/script/miniscript.cpp",
      "position" : 332,
      "pull_request_review_id" : 888708611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811146800/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-21T13:49:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811146800",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r811170683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811170683"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, both work. I'm putting `CTxIn::SEQUENCE_FINAL`.",
      "commit_id" : "8e268cc3c016a94964c1cc3f933a64651848c5d4",
      "created_at" : "2022-02-21T14:15:26Z",
      "diff_hunk" : "@@ -297,29 +302,39 @@ void DoCheck(const std::string& prv, const std::string& pub, const std::string&\n     BOOST_CHECK_MESSAGE(left_paths.empty(), \"Not all expected key paths found: \" + prv);\n }\n \n-void Check(const std::string& prv, const std::string& pub, const std::string& norm_prv, const std::string& norm_pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::optional<OutputType>& type, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void Check(const std::string& prv, const std::string& pub, const std::string& norm_prv, const std::string& norm_pub,\n+           int flags, const std::vector<std::vector<std::string>>& scripts, const std::optional<OutputType>& type,\n+           const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY, uint32_t spender_nlocktime=0, uint32_t spender_nsequence=0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r811170683",
      "id" : 811170683,
      "in_reply_to_id" : 806216748,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584wWXt7",
      "original_commit_id" : "96e9de9304edf5feec87adf5ee56ad0f526459b8",
      "original_line" : 307,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/test/descriptor_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 888742766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811170683/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-21T14:15:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811170683",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r811183472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811183472"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "8e268cc3c016a94964c1cc3f933a64651848c5d4",
      "created_at" : "2022-02-21T14:29:28Z",
      "diff_hunk" : "@@ -225,6 +230,54 @@ size_t ComputeScriptLen(NodeType nodetype, Type sub0typ, size_t subsize, uint32_\n //! A helper sanitizer/checker for the output of CalcType.\n Type SanitizeType(Type x);\n \n+//! An object representing a sequence of witness stack elements.\n+struct InputStack {\n+    /** Whether this stack is valid for its intended purpose (satisfaction or dissatisfaction of a Node).\n+     *  The MAYBE value is used for size estimation, when keys/preimages may actually be unavailable,\n+     *  but may be available at signing time. This makes the InputStack structure and signing logic,\n+     *  filled with dummy signatures/preimages usable for witness size estimation.\n+     */\n+    Availability available = Availability::YES;\n+    //! Whether this stack contains a digital signature.\n+    bool has_sig = false;\n+    //! Whether this stack is malleable (can be turned into an equally valid other stack by a third party).\n+    bool malleable = false;\n+    //! Whether this stack is non-canonical (using a construction known to be unnecessary for satisfaction).\n+    bool non_canon = false;\n+    //! Serialized witness size.\n+    size_t size = 0;\n+    //! Data elements.\n+    std::vector<std::vector<unsigned char>> stack;\n+    //! Construct an empty stack (valid).\n+    InputStack() {}\n+    //! Construct a valid single-element stack (with an element up to 75 bytes).\n+    InputStack(std::vector<unsigned char> in) : size(in.size() + 1), stack(Vector(std::move(in))) {}\n+    //! Change availability\n+    InputStack& Available(Availability avail);\n+    //! Mark this input stack as having a signature.\n+    InputStack& WithSig();\n+    //! Mark this input stack as non-canonical (known to not be necessary in non-malleable satisfactions).\n+    InputStack& NonCanon();\n+    //! Mark this input stack as malleable.\n+    InputStack& Malleable(bool x = true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r811183472",
      "id" : 811183472,
      "in_reply_to_id" : 806178300,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584wWa1w",
      "original_commit_id" : "b2e3582323b1e3dfded7eb0a2597fd74ba52e4df",
      "original_line" : 262,
      "original_position" : 45,
      "original_start_line" : 256,
      "path" : "src/script/miniscript.h",
      "position" : null,
      "pull_request_review_id" : 888760739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811183472/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-02-21T14:29:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811183472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased, addressed Andrew's comments, added some cleanups from @sipa, and added a `miniscript_random` fuzz target which generates a random Miniscript node based on a binary encoding. We might eventually add another one which tries to be smart, either here or in a follow-up.\r\n\r\n> I don't think it would be particularly hard considering that you're already using SignatureData for non-wallet data lookups. I think all that would really need to be done is to update FillSignatureData to include the preimages from the PSBT.\r\n\r\nYeah, but i figured it would be cleaner to have this as part of a PR which'd also update the various PSBT RPCs and test it using those.",
      "created_at" : "2022-02-21T14:35:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#issuecomment-1046944178",
      "id" : 1046944178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24149",
      "node_id" : "IC_kwDOABII584-Zxmy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1046944178/reactions"
      },
      "updated_at" : "2022-02-21T14:35:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1046944178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the fuzzer crash on integer overflow, and pushed another bunch of updates to the satisfaction code:\r\n- merge the malleable and non-malleable satisfaction\r\n- rename `Choose` to `operator|`\r\n- many improvements to the unit and fuzz tests\r\n\r\nSee https://github.com/sipa/miniscript/pull/102 for details.\r\n\r\nI also pushed an initial corpus for `miniscript_random` fuzz target at https://github.com/bitcoin-core/qa-assets/pull/87",
      "created_at" : "2022-02-24T15:25:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#issuecomment-1049973037",
      "id" : 1049973037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24149",
      "node_id" : "IC_kwDOABII584-lVEt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1049973037/reactions"
      },
      "updated_at" : "2022-03-17T13:57:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1049973037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-04T13:30:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#issuecomment-1059164161",
      "id" : 1059164161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24149",
      "node_id" : "IC_kwDOABII584_IZAB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059164161/reactions"
      },
      "updated_at" : "2022-03-04T13:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059164161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased.",
      "created_at" : "2022-03-17T17:49:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#issuecomment-1071145456",
      "id" : 1071145456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24149",
      "node_id" : "IC_kwDOABII584_2GHw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1071145456/reactions"
      },
      "updated_at" : "2022-03-17T17:49:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1071145456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r844983186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844983186"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    DoCheck(prv, pub, norm_prv, norm_pub, flags, scripts, type, paths, /*replace_apostrophe_with_h_in_prv=*/false,\r\n```\r\nAnywhere you are adding / touching named args, please use the [style from the developer docs](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c-named-arguments).",
      "commit_id" : "8cd2c3c45ecefdd6659b81c9a5dd6a85a2711b01",
      "created_at" : "2022-04-07T10:37:37Z",
      "diff_hunk" : "@@ -342,29 +350,40 @@ void DoCheck(const std::string& prv, const std::string& pub, const std::string&\n     BOOST_CHECK_MESSAGE(left_paths.empty(), \"Not all expected key paths found: \" + prv);\n }\n \n-void Check(const std::string& prv, const std::string& pub, const std::string& norm_prv, const std::string& norm_pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::optional<OutputType>& type, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void Check(const std::string& prv, const std::string& pub, const std::string& norm_prv, const std::string& norm_pub,\n+           int flags, const std::vector<std::vector<std::string>>& scripts, const std::optional<OutputType>& type,\n+           const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY, uint32_t spender_nlocktime=0,\n+           uint32_t spender_nsequence=CTxIn::SEQUENCE_FINAL, std::map<std::vector<uint8_t>, std::vector<uint8_t>> preimages={})\n {\n     bool found_apostrophes_in_prv = false;\n     bool found_apostrophes_in_pub = false;\n \n     // Do not replace apostrophes with 'h' in prv and pub\n-    DoCheck(prv, pub, norm_prv, norm_pub, flags, scripts, type, paths);\n+    DoCheck(prv, pub, norm_prv, norm_pub, flags, scripts, type, paths, /* replace_apostrophe_with_h_in_prv = */false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24149#discussion_r844983186",
      "id" : 844983186,
      "line" : 362,
      "node_id" : "PRRC_kwDOABII584yXWuS",
      "original_commit_id" : "8cd2c3c45ecefdd6659b81c9a5dd6a85a2711b01",
      "original_line" : 362,
      "original_position" : 95,
      "original_start_line" : null,
      "path" : "src/test/descriptor_tests.cpp",
      "position" : 95,
      "pull_request_review_id" : 934850577,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844983186/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-07T10:37:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844983186",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
