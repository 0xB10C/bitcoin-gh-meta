[
   {
      "author_association" : "MEMBER",
      "body" : "See discussion in #21106, eg https://github.com/bitcoin/bitcoin/pull/21106#issuecomment-790834342",
      "created_at" : "2022-01-26T21:30:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24171#issuecomment-1022620930",
      "id" : 1022620930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24171",
      "node_id" : "IC_kwDOABII58488_UC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1022620930/reactions"
      },
      "updated_at" : "2022-01-26T21:30:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1022620930",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24008](https://github.com/bitcoin/bitcoin/pull/24008) (assumeutxo: net_processing changes by jamesob)\n* [#23807](https://github.com/bitcoin/bitcoin/pull/23807) (p2p: Remove GetAdjustedTime() from AddrMan by w0xlt)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-01-26T23:03:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24171#issuecomment-1022682328",
      "id" : 1022682328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24171",
      "node_id" : "IC_kwDOABII58489OTY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1022682328/reactions"
      },
      "updated_at" : "2022-01-26T23:03:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1022682328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24171#discussion_r793348531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24171"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/793348531"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I think this can be removed, since `self.generate` already calls this internally (and fails if the sync fails).\r\n\r\nIt might also be good to explain why three nodes are needed and why node0->node1 isn't sufficient to test this.\r\n\r\nMy understanding is that this is setting up `node1` as the subject under test. Having an outbound and an inbound connection, of which the outbound is selected for block download, but fails to provide any data. The test would pass with just `node0->node1` setup which means that we already sync from inbound peers if there are no outbounds at all?",
      "commit_id" : "4fdd7fe3ea347efc6e6b16c9dd9e2ea9950e6936",
      "created_at" : "2022-01-27T08:10:15Z",
      "diff_hunk" : "@@ -0,0 +1,33 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test block download\n+\n+Ensure that even in IBD, we'll eventually sync chain from inbound peers\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class BlockSyncTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(1, 2)\n+\n+    def run_test(self):\n+        self.log.info(\"Setup network: node0->node1->node2\")\n+        self.log.info(\"Mining one block on node0\")\n+        self.generate(self.nodes[0], 1)\n+        self.log.info(\"Check that all nodes synced\")\n+        self.sync_all()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24171#discussion_r793348531",
      "id" : 793348531,
      "line" : 28,
      "node_id" : "PRRC_kwDOABII584vSYmz",
      "original_commit_id" : "4fdd7fe3ea347efc6e6b16c9dd9e2ea9950e6936",
      "original_line" : 28,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "test/functional/p2p_block_sync.py",
      "position" : 28,
      "pull_request_review_id" : 864503932,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24171",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/793348531/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-27T08:12:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/793348531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24171#discussion_r793374177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24171"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/793374177"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I would prefer combining this smth like \r\n```suggestion\r\n        } else if (!pto->fClient && !pto->IsAddrFetchConn()) &&\r\n                  (nPreferredDownload == 0 || mapBlocksInFlight.empty())) {\r\n            // Typically this is an inbound peer. If we don't have any outbound\r\n            // peers, or if we aren't downloading any blocks from such peers,\r\n            // then allow block downloads from this peer, too.\r\n            // We prefer downloading blocks from outbound peers to avoid\r\n            // putting undue load on (say) some home user who is just making\r\n            // outbound connections to the network, but if our only source of\r\n            // the latest blocks is from an inbound peer, we have to be sure to\r\n            // eventually download it (and not just wait indefinitely for an\r\n            // outbound peer to have it).\r\n```",
      "commit_id" : "4fdd7fe3ea347efc6e6b16c9dd9e2ea9950e6936",
      "created_at" : "2022-01-27T08:44:39Z",
      "diff_hunk" : "@@ -4599,10 +4599,31 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Start block sync\n         if (pindexBestHeader == nullptr)\n             pindexBestHeader = m_chainman.ActiveChain().Tip();\n-        bool fFetch = state.fPreferredDownload || (nPreferredDownload == 0 && !pto->fClient && !pto->IsAddrFetchConn()); // Download if this is a nice peer, or we have no nice peers and this one might do.\n+\n+        // Determine whether we might try initial headers sync or parallel\n+        // block download from this peer -- this mostly affects behavior while\n+        // in IBD (once out of IBD, we sync from all peers).\n+        bool sync_blocks_and_headers_from_peer = false;\n+        if (state.fPreferredDownload) {\n+            sync_blocks_and_headers_from_peer = true;\n+        } else if (!pto->fClient && !pto->IsAddrFetchConn()) {\n+            // Typically this is an inbound peer. If we don't have any outbound\n+            // peers, or if we aren't downloading any blocks from such peers,\n+            // then allow block downloads from this peer, too.\n+            // We prefer downloading blocks from outbound peers to avoid\n+            // putting undue load on (say) some home user who is just making\n+            // outbound connections to the network, but if our only source of\n+            // the latest blocks is from an inbound peer, we have to be sure to\n+            // eventually download it (and not just wait indefinitely for an\n+            // outbound peer to have it).\n+            if (nPreferredDownload == 0 || mapBlocksInFlight.empty()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24171#discussion_r793374177",
      "id" : 793374177,
      "line" : 4619,
      "node_id" : "PRRC_kwDOABII584vSe3h",
      "original_commit_id" : "4fdd7fe3ea347efc6e6b16c9dd9e2ea9950e6936",
      "original_line" : 4619,
      "original_position" : 22,
      "original_start_line" : 4609,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 864539444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24171",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/793374177/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 4609,
      "start_side" : "RIGHT",
      "updated_at" : "2022-01-27T08:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/793374177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6443210?v=4",
         "events_url" : "https://api.github.com/users/PastaPastaPasta/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PastaPastaPasta/followers",
         "following_url" : "https://api.github.com/users/PastaPastaPasta/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PastaPastaPasta/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PastaPastaPasta",
         "id" : 6443210,
         "login" : "PastaPastaPasta",
         "node_id" : "MDQ6VXNlcjY0NDMyMTA=",
         "organizations_url" : "https://api.github.com/users/PastaPastaPasta/orgs",
         "received_events_url" : "https://api.github.com/users/PastaPastaPasta/received_events",
         "repos_url" : "https://api.github.com/users/PastaPastaPasta/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PastaPastaPasta/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PastaPastaPasta/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PastaPastaPasta"
      }
   }
]
