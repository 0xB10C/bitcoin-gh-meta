[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25540](https://github.com/bitcoin/bitcoin/pull/25540) (miniscript: Permit delaying duplicate key check in `miniscript::Node` construction by darosior)\n* [#24897](https://github.com/bitcoin/bitcoin/pull/24897) ([Draft / POC] Silent Payments by w0xlt)\n* [#24361](https://github.com/bitcoin/bitcoin/pull/24361) (Descriptor unit tests and simplifications by sipa)\n* [#23480](https://github.com/bitcoin/bitcoin/pull/23480) (Add rawtr() descriptor for P2TR with specified (tweaked) output key by sipa)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-01-26T00:22:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1021733605",
      "id" : 1021733605,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII58485mrl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021733605/reactions"
      },
      "updated_at" : "2022-07-04T23:23:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021733605",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-01-26T08:11:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1021959898",
      "id" : 1021959898,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII58486d7a",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021959898/reactions"
      },
      "updated_at" : "2022-01-26T08:11:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021959898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased.",
      "created_at" : "2022-02-11T12:06:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1036147958",
      "id" : 1036147958,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII5849wlz2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1036147958/reactions"
      },
      "updated_at" : "2022-02-11T12:06:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1036147958",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-04T13:30:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1059164190",
      "id" : 1059164190,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII584_IZAe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059164190/reactions"
      },
      "updated_at" : "2022-03-04T13:30:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059164190",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased.",
      "created_at" : "2022-03-17T17:09:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1071101724",
      "id" : 1071101724,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII584_17cc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1071101724/reactions"
      },
      "updated_at" : "2022-03-17T17:09:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1071101724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I (slightly) messed up the last rebase here, but there was some updates in the meantime so i'll push a fix along with those soon.",
      "created_at" : "2022-04-05T13:50:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1088728549",
      "id" : 1088728549,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585A5K3l",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088728549/reactions"
      },
      "updated_at" : "2022-04-05T13:50:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1088728549",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on top of #24860. I've made some cleanups and added more comments. I've also merged the unit tests of the Miniscript descriptors with the commit introducing the feature. I've changed the author of the commit to myself from Pieter as it was modified quite a lot from [his original one](https://github.com/bitcoin/bitcoin/pull/16800/commits/037e55adc005e9d8253d3d35e7a30b2e8521389c)  and i don't want to wrongly attribute him my own mistakes :p (of course, the co-author credits were switched accordingly).",
      "created_at" : "2022-04-20T12:37:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1103883337",
      "id" : 1103883337,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585By-xJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103883337/reactions"
      },
      "updated_at" : "2022-04-20T12:37:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103883337",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hmm, so the use of `uint32_t` as key types makes the check for duplicate keys void. I need to look into it.",
      "created_at" : "2022-05-16T13:05:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1127647494",
      "id" : 1127647494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585DNokG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1127647494/reactions"
      },
      "updated_at" : "2022-05-16T13:05:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1127647494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@darosior Perhaps add an KeyCompare(Key, Key) function to contexts, and use that as set ordering in the duplicate check, rather than Key::operator< ?",
      "created_at" : "2022-05-16T13:19:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1127664730",
      "id" : 1127664730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585DNsxa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1127664730/reactions"
      },
      "updated_at" : "2022-05-16T13:19:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1127664730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r881898835"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881898835"
         }
      },
      "author_association" : "NONE",
      "body" : "Naming could be improved. The name `duplicate_key` might suggest that the variable holds the value or reference of the key that is duplicated, when in fact it can only hold either `true` or `false`âand there could be multiple duplicated keys. It'd be best to name this variable `has_duplicate_keys` instead, which would go nicely along the naming scheme of `IsNonMalleable` and `IsSane`.",
      "commit_id" : "ec72f351134bed229baaefc8ffaa1f72688c5435",
      "created_at" : "2022-05-25T16:53:02Z",
      "diff_hunk" : "@@ -298,6 +298,8 @@ struct Node {\n     const Type typ;\n     //! Cached script length (computed by CalcScriptLen).\n     const size_t scriptlen;\n+    //! Whether a public key appears more than once in this node.\n+    const bool duplicate_key;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r881898835",
      "id" : 881898835,
      "line" : 302,
      "node_id" : "PRRC_kwDOABII5840kLVT",
      "original_commit_id" : "22b2171c48b5cbb1f293182f25e24ed5a3939bc1",
      "original_line" : 302,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 5,
      "pull_request_review_id" : 985172194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881898835/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-25T16:53:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881898835",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84942996?v=4",
         "events_url" : "https://api.github.com/users/OliverOffing/events{/privacy}",
         "followers_url" : "https://api.github.com/users/OliverOffing/followers",
         "following_url" : "https://api.github.com/users/OliverOffing/following{/other_user}",
         "gists_url" : "https://api.github.com/users/OliverOffing/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/OliverOffing",
         "id" : 84942996,
         "login" : "OliverOffing",
         "node_id" : "MDQ6VXNlcjg0OTQyOTk2",
         "organizations_url" : "https://api.github.com/users/OliverOffing/orgs",
         "received_events_url" : "https://api.github.com/users/OliverOffing/received_events",
         "repos_url" : "https://api.github.com/users/OliverOffing/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/OliverOffing/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/OliverOffing/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/OliverOffing"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r882552673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882552673"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> The name duplicate_key might suggest that the variable holds the value or reference of the key that is duplicated, when in fact it can only hold either true or false\r\n\r\nI don't think it's worth making the variable name even longer. The `bool` type should be enough for one to get that this value holds, well, a boolean and not a reference to the key.\r\nAlso note this commit is part of https://github.com/bitcoin/bitcoin/pull/24860 which features a `ContainsDuplicateKey()` public API in the same spirit as `IsNonMalleable` and `IsSane`.\r\n\r\n> and there could be multiple duplicated keys\r\n\r\nThe detection algorithm cuts through and wouldn't know that, it just knows that \"there exists one duplicate key\".",
      "commit_id" : "1d145ec1e5b62d9b4385ca7a63fa468d6708fe46",
      "created_at" : "2022-05-26T10:56:52Z",
      "diff_hunk" : "@@ -298,6 +298,8 @@ struct Node {\n     const Type typ;\n     //! Cached script length (computed by CalcScriptLen).\n     const size_t scriptlen;\n+    //! Whether a public key appears more than once in this node.\n+    const bool duplicate_key;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r882552673",
      "id" : 882552673,
      "in_reply_to_id" : 881898835,
      "line" : 305,
      "node_id" : "PRRC_kwDOABII5840mq9h",
      "original_commit_id" : "22b2171c48b5cbb1f293182f25e24ed5a3939bc1",
      "original_line" : 305,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/miniscript.h",
      "position" : 53,
      "pull_request_review_id" : 986051532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882552673/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-26T10:56:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882552673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on top of #24860 to integrate the `IsSane` renaming and key duplicate check using a `KeyCompare` method. I added a unit test for duplicate key check when parsing a Miniscript descriptor and took the opportunity to rework a bit the error messages to make them consistent (Now always \"is not sane: [reason]\").",
      "created_at" : "2022-05-26T11:10:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1138418715",
      "id" : 1138418715,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585D2uQb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138418715/reactions"
      },
      "updated_at" : "2022-05-26T11:10:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138418715",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-06-04T20:33:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1146681755",
      "id" : 1146681755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585EWPmb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1146681755/reactions"
      },
      "updated_at" : "2022-06-04T20:33:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1146681755",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@darosior Needs rebase! (wheeee)",
      "created_at" : "2022-06-06T14:49:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1147534116",
      "id" : 1147534116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585EZfsk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1147534116/reactions"
      },
      "updated_at" : "2022-06-06T14:49:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1147534116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased. :)",
      "created_at" : "2022-06-06T16:20:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1147634271",
      "id" : 1147634271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585EZ4Jf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1147634271/reactions"
      },
      "updated_at" : "2022-06-06T16:20:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1147634271",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892575319"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892575319"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Add LIFETIMEBOUND attribute to `keys`?",
      "commit_id" : "a042854c0f97f9553155f37696040e8f2a491faf",
      "created_at" : "2022-06-08T16:07:05Z",
      "diff_hunk" : "@@ -917,6 +918,89 @@ class TRDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/* We instantiate Miniscript here with a simple integer as key type.\n+ * The value of these key integers are an index in the\n+ * DescriptorImpl::m_pubkey_args vector.\n+ */\n+\n+/**\n+ * The context for converting a Miniscript descriptor into a Script.\n+ */\n+class ScriptMaker {\n+    //! Keys contained in the Miniscript (the evaluation of DescriptorImpl::m_pubkey_args).\n+    const std::vector<CPubKey>& m_keys;\n+\n+public:\n+    ScriptMaker(const std::vector<CPubKey>& keys) : m_keys(keys) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892575319",
      "id" : 892575319,
      "line" : 934,
      "node_id" : "PRRC_kwDOABII5841M55X",
      "original_commit_id" : "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "original_line" : 934,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 49,
      "pull_request_review_id" : 1000039762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892575319/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T16:25:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892575319",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892576514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892576514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Add LIFETIMEBOUND attribute to `arg` and to `pubkeys`?",
      "commit_id" : "a042854c0f97f9553155f37696040e8f2a491faf",
      "created_at" : "2022-06-08T16:08:17Z",
      "diff_hunk" : "@@ -917,6 +918,89 @@ class TRDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/* We instantiate Miniscript here with a simple integer as key type.\n+ * The value of these key integers are an index in the\n+ * DescriptorImpl::m_pubkey_args vector.\n+ */\n+\n+/**\n+ * The context for converting a Miniscript descriptor into a Script.\n+ */\n+class ScriptMaker {\n+    //! Keys contained in the Miniscript (the evaluation of DescriptorImpl::m_pubkey_args).\n+    const std::vector<CPubKey>& m_keys;\n+\n+public:\n+    ScriptMaker(const std::vector<CPubKey>& keys) : m_keys(keys) {}\n+\n+    std::vector<unsigned char> ToPKBytes(uint32_t key) const {\n+        return {m_keys[key].begin(), m_keys[key].end()};\n+    }\n+\n+    std::vector<unsigned char> ToPKHBytes(uint32_t key) const {\n+        auto id = m_keys[key].GetID();\n+        return {id.begin(), id.end()};\n+    }\n+};\n+\n+/**\n+ * The context for converting a Miniscript descriptor to its textual form.\n+ */\n+class StringMaker {\n+    //! To convert private keys for private descriptors.\n+    const SigningProvider* m_arg;\n+    //! Keys contained in the Miniscript (a reference to DescriptorImpl::m_pubkey_args).\n+    const std::vector<std::unique_ptr<PubkeyProvider>>& m_pubkeys;\n+    //! Whether to serialize keys as private or public.\n+    bool m_private;\n+\n+public:\n+    StringMaker(const SigningProvider* arg, const std::vector<std::unique_ptr<PubkeyProvider>>& pubkeys, bool priv)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892576514",
      "id" : 892576514,
      "line" : 958,
      "node_id" : "PRRC_kwDOABII5841M6MC",
      "original_commit_id" : "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "original_line" : 958,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 73,
      "pull_request_review_id" : 1000039762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892576514/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T16:25:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892576514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892584175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892584175"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Add LIFETIMEBOUND here to `out` and `in` as well?",
      "commit_id" : "a042854c0f97f9553155f37696040e8f2a491faf",
      "created_at" : "2022-06-08T16:15:10Z",
      "diff_hunk" : "@@ -1058,6 +1142,93 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out, const SigningProvider* in) : m_out(out), m_in(in) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892584175",
      "id" : 892584175,
      "line" : 1183,
      "node_id" : "PRRC_kwDOABII5841M8Dv",
      "original_commit_id" : "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "original_line" : 1183,
      "original_position" : 164,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 164,
      "pull_request_review_id" : 1000039762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892584175/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T16:25:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892584175",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892587808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892587808"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That sounds pretty slow. Perhaps it's worth adding generic comparison operators to the PubkeyProvider classes? Could be left as a TODO.",
      "commit_id" : "a042854c0f97f9553155f37696040e8f2a491faf",
      "created_at" : "2022-06-08T16:18:18Z",
      "diff_hunk" : "@@ -1058,6 +1142,93 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out, const SigningProvider* in) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return m_keys[a]->ToString() < m_keys[b]->ToString();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892587808",
      "id" : 892587808,
      "line" : 1186,
      "node_id" : "PRRC_kwDOABII5841M88g",
      "original_commit_id" : "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "original_line" : 1186,
      "original_position" : 167,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 167,
      "pull_request_review_id" : 1000039762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892587808/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T16:25:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892587808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892589520"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892589520"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think `{&*begin, &*end}` can be used instead of `Span<const char>(&*begin, &*end)`.",
      "commit_id" : "a042854c0f97f9553155f37696040e8f2a491faf",
      "created_at" : "2022-06-08T16:20:04Z",
      "diff_hunk" : "@@ -1058,6 +1142,93 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out, const SigningProvider* in) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return m_keys[a]->ToString() < m_keys[b]->ToString();\n+    }\n+\n+    template<typename I> std::optional<Key> FromString(I begin, I end) const\n+    {\n+        assert(m_out);\n+        Key key = m_keys.size();\n+        auto pk = ParsePubkey(key, Span<const char>(&*begin, &*end), ParseScriptContext::P2WSH, *m_out, m_key_parsing_error);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892589520",
      "id" : 892589520,
      "line" : 1193,
      "node_id" : "PRRC_kwDOABII5841M9XQ",
      "original_commit_id" : "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "original_line" : 1193,
      "original_position" : 174,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 174,
      "pull_request_review_id" : 1000039762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892589520/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T16:25:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892589520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892590971"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892590971"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Constructing a vector just to turn it into a `uint160` sounds a bit inefficient. I think this works too:\r\n\r\n```c++\r\nuint160 hash;\r\nstd::copy(begin, end, hash.begin());\r\n```\r\n",
      "commit_id" : "a042854c0f97f9553155f37696040e8f2a491faf",
      "created_at" : "2022-06-08T16:21:33Z",
      "diff_hunk" : "@@ -1058,6 +1142,93 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out, const SigningProvider* in) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return m_keys[a]->ToString() < m_keys[b]->ToString();\n+    }\n+\n+    template<typename I> std::optional<Key> FromString(I begin, I end) const\n+    {\n+        assert(m_out);\n+        Key key = m_keys.size();\n+        auto pk = ParsePubkey(key, Span<const char>(&*begin, &*end), ParseScriptContext::P2WSH, *m_out, m_key_parsing_error);\n+        if (!pk) return {};\n+        m_keys.push_back(std::move(pk));\n+        return key;\n+    }\n+\n+    std::optional<std::string> ToString(const Key& key) const\n+    {\n+        return m_keys[key]->ToString();\n+    }\n+\n+    template<typename I> std::optional<Key> FromPKBytes(I begin, I end) const\n+    {\n+        assert(m_in);\n+        CPubKey pubkey(begin, end);\n+        if (pubkey.IsValid()) {\n+            Key key = m_keys.size();\n+            m_keys.push_back(InferPubkey(pubkey, ParseScriptContext::P2WSH, *m_in));\n+            return key;\n+        }\n+        return {};\n+    }\n+\n+    template<typename I> std::optional<Key> FromPKHBytes(I begin, I end) const\n+    {\n+        assert(end - begin == 20);\n+        assert(m_in);\n+        uint160 hash(std::vector<unsigned char>(begin, end));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892590971",
      "id" : 892590971,
      "line" : 1220,
      "node_id" : "PRRC_kwDOABII5841M9t7",
      "original_commit_id" : "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "original_line" : 1220,
      "original_position" : 201,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 201,
      "pull_request_review_id" : 1000039762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892590971/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T16:25:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892590971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892593226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892593226"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps for a follow-up PR, but maybe we want to change the `FromString` methods (in miniscript code, but also descriptors in general) to take `std::string_view`s? That would avoid intermediary string objects like here.",
      "commit_id" : "a042854c0f97f9553155f37696040e8f2a491faf",
      "created_at" : "2022-06-08T16:23:48Z",
      "diff_hunk" : "@@ -1279,6 +1450,38 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         error = \"Can only have raw() at top level\";\n         return nullptr;\n     }\n+    // Process miniscript expressions.\n+    {\n+        KeyParser parser(&out, nullptr);\n+        auto node = miniscript::FromString(std::string(expr.begin(), expr.end()), parser);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892593226",
      "id" : 892593226,
      "line" : 1456,
      "node_id" : "PRRC_kwDOABII5841M-RK",
      "original_commit_id" : "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "original_line" : 1456,
      "original_position" : 223,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 223,
      "pull_request_review_id" : 1000039762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892593226/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T16:25:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892593226",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892594100"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892594100"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use braces and separate lines, unless for single-line \"then\" statements without \"else\"s.",
      "commit_id" : "a042854c0f97f9553155f37696040e8f2a491faf",
      "created_at" : "2022-06-08T16:24:43Z",
      "diff_hunk" : "@@ -1279,6 +1450,38 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         error = \"Can only have raw() at top level\";\n         return nullptr;\n     }\n+    // Process miniscript expressions.\n+    {\n+        KeyParser parser(&out, nullptr);\n+        auto node = miniscript::FromString(std::string(expr.begin(), expr.end()), parser);\n+        if (node) {\n+            if (ctx != ParseScriptContext::P2WSH) {\n+                error = \"Miniscript expressions can only be used in wsh\";\n+                return nullptr;\n+            }\n+            if (parser.m_key_parsing_error != \"\") {\n+                error = std::move(parser.m_key_parsing_error);\n+                return nullptr;\n+            }\n+            if (!node->IsSane()) {\n+                // Try to find the first insane sub for better error reporting.\n+                auto insane_node = node.get();\n+                if (const auto sub = node->FindInsaneSub()) insane_node = sub;\n+                if (const auto str = insane_node->ToString(parser)) error = *str;\n+                if (!insane_node->IsValid()) { error += \" is invalid\";}\n+                else {\n+                    error += \" is not sane\";\n+                    if (!insane_node->IsNonMalleable()) error += \": malleable witnesses exist\";\n+                    else if (insane_node == node.get() && !insane_node->NeedsSignature()) error += \": witnesses without signature exist\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r892594100",
      "id" : 892594100,
      "line" : 1475,
      "node_id" : "PRRC_kwDOABII5841M-e0",
      "original_commit_id" : "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "original_line" : 1475,
      "original_position" : 242,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 242,
      "pull_request_review_id" : 1000039762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892594100/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-08T16:25:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/892594100",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r893844202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893844202"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, it's also slightly incorrect. For instance if a user -for whatever reason- has a descriptor with 2 xpubs with the same key but different chaincodes, this would not detect them as duplicates (same with same key but diff origins). I wanted to revisit that but it slipped my mind.\r\n\r\nI added an `operator<`Â to `PubkeyProvider`:\r\n```patch\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex 94c9071999..66c4e1cba9 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -162,6 +162,20 @@ public:\r\n \r\n     virtual ~PubkeyProvider() = default;\r\n \r\n+    /** Compare two public keys represented by this provider.\r\n+     * Used by the Miniscript descriptors to check for duplicate keys in the script.\r\n+     */\r\n+    bool operator<(PubkeyProvider& other) const {\r\n+        CPubKey a, b;\r\n+        SigningProvider dummy;\r\n+        KeyOriginInfo dummy_info;\r\n+\r\n+        GetPubKey(0, dummy, a, dummy_info);\r\n+        other.GetPubKey(0, dummy, b, dummy_info);\r\n+\r\n+        return a < b;\r\n+    }\r\n+\r\n     /** Derive a public key.\r\n      *  read_cache is the cache to read keys from (if not nullptr)\r\n      *  write_cache is the cache to write keys to (if not nullptr)\r\n@@ -1183,7 +1197,7 @@ struct KeyParser {\r\n     KeyParser(FlatSigningProvider* out LIFETIMEBOUND, const SigningProvider* in LIFETIMEBOUND) : m_out(out), m_in(in) {}\r\n \r\n     bool KeyCompare(const Key& a, const Key& b) const {\r\n-        return m_keys[a]->ToString() < m_keys[b]->ToString();\r\n+        return *m_keys[a] < *m_keys[b];\r\n     }\r\n \r\n     template<typename I> std::optional<Key> FromString(I begin, I end) const\r\n```",
      "commit_id" : "faa6f2176e487f7992557a1620923ebfaf60f432",
      "created_at" : "2022-06-09T18:41:11Z",
      "diff_hunk" : "@@ -1058,6 +1142,93 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<c\n     return std::make_unique<OriginPubkeyProvider>(key_exp_index, std::move(info), std::move(provider));\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, false);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<PubkeyProvider> InferXOnlyPubkey(const XOnlyPubKey& xkey, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    unsigned char full_key[CPubKey::COMPRESSED_SIZE] = {0x02};\n+    std::copy(xkey.begin(), xkey.end(), full_key + 1);\n+    CPubKey pubkey(full_key);\n+    std::unique_ptr<PubkeyProvider> key_provider = std::make_unique<ConstPubkeyProvider>(0, pubkey, true);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOriginByXOnly(xkey, info)) {\n+        return std::make_unique<OriginPubkeyProvider>(0, std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+/**\n+ * The context for parsing a Miniscript descriptor (either from Script or from its textual representation).\n+ */\n+struct KeyParser {\n+    //! The Key type is an index in DescriptorImpl::m_pubkey_args\n+    using Key = uint32_t;\n+    //! Must not be nullptr if parsing from string.\n+    FlatSigningProvider* m_out;\n+    //! Must not be nullptr if parsing from Script.\n+    const SigningProvider* m_in;\n+    //! List of keys contained in the Miniscript.\n+    mutable std::vector<std::unique_ptr<PubkeyProvider>> m_keys;\n+    //! Used to detect key parsing errors within a Miniscript.\n+    mutable std::string m_key_parsing_error;\n+\n+    KeyParser(FlatSigningProvider* out, const SigningProvider* in) : m_out(out), m_in(in) {}\n+\n+    bool KeyCompare(const Key& a, const Key& b) const {\n+        return m_keys[a]->ToString() < m_keys[b]->ToString();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r893844202",
      "id" : 893844202,
      "in_reply_to_id" : 892587808,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841Rvrq",
      "original_commit_id" : "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "original_line" : 1186,
      "original_position" : 167,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 1001822948,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893844202/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T18:41:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893844202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r893847338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893847338"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since it's going to touch the Miniscript code again, i'd prefer to keep this as a follow-up if you don't mind.",
      "commit_id" : "faa6f2176e487f7992557a1620923ebfaf60f432",
      "created_at" : "2022-06-09T18:45:20Z",
      "diff_hunk" : "@@ -1279,6 +1450,38 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         error = \"Can only have raw() at top level\";\n         return nullptr;\n     }\n+    // Process miniscript expressions.\n+    {\n+        KeyParser parser(&out, nullptr);\n+        auto node = miniscript::FromString(std::string(expr.begin(), expr.end()), parser);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r893847338",
      "id" : 893847338,
      "in_reply_to_id" : 892593226,
      "line" : 1471,
      "node_id" : "PRRC_kwDOABII5841Rwcq",
      "original_commit_id" : "32eb838c00c8f47b62e3056c99aa6a72527b2e8d",
      "original_line" : 1471,
      "original_position" : 223,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 245,
      "pull_request_review_id" : 1001827549,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893847338/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-09T18:45:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893847338",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r901976005"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901976005"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In e9cac52614d11e30d1f6fec33efce3d00953bd70 \"Miniscript support in output descriptors\"\r\n\r\nnit: `m_name` does not need to be `protected`.",
      "commit_id" : "faa6f2176e487f7992557a1620923ebfaf60f432",
      "created_at" : "2022-06-20T20:14:30Z",
      "diff_hunk" : "@@ -493,12 +508,12 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n /** Base class for all Descriptor implementations. */\n class DescriptorImpl : public Descriptor\n {\n-    //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size for Multisig).\n+protected:\n+    //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size for WSH and Multisig).\n     const std::vector<std::unique_ptr<PubkeyProvider>> m_pubkey_args;\n     //! The string name of the descriptor function.\n     const std::string m_name;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r901976005",
      "id" : 901976005,
      "line" : 515,
      "node_id" : "PRRC_kwDOABII5841ww_F",
      "original_commit_id" : "e9cac52614d11e30d1f6fec33efce3d00953bd70",
      "original_line" : 515,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 38,
      "pull_request_review_id" : 1012714706,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901976005/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T20:28:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901976005",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @achow101.\r\n\r\nRegarding `FindInsaneSub`, you are right. I should rename the commit. The intention here is to find the first insane sub that is closest to be a leaf.\r\n\r\n`Key` can't be aÂ `PubkeyProvider` because we instanciate `Key`s. Neither can it be a `unique_ptr` since we may copy it. Following Pieter's comment last month (https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1127664730) i tried making it a `shared_ptr` in order to avoid adding a `KeyCompare`Â requirement on all contexts. Unfortunately it quickly becomes unmanageable.",
      "created_at" : "2022-06-21T17:53:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1162100884",
      "id" : 1162100884,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585FRECU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162100884/reactions"
      },
      "updated_at" : "2022-06-21T17:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162100884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r902922083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902922083"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, but \r\n```patch\r\ndiff --git a/src/script/descriptor.cpp b/src/script/descriptor.cpp\r\nindex 66c4e1cba9..b40e330f67 100644\r\n--- a/src/script/descriptor.cpp\r\n+++ b/src/script/descriptor.cpp\r\n@@ -508,11 +508,12 @@ public:\r\n /** Base class for all Descriptor implementations. */\r\n class DescriptorImpl : public Descriptor\r\n {\r\n+    //! The string name of the descriptor function.\r\n+    const std::string m_name;\r\n+\r\n protected:\r\n     //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size for WSH and Multisig).\r\n     const std::vector<std::unique_ptr<PubkeyProvider>> m_pubkey_args;\r\n-    //! The string name of the descriptor function.\r\n-    const std::string m_name;\r\n \r\n     //! The sub-descriptor arguments (empty for everything but SH and WSH).\r\n     //! In doc/descriptors.m this is referred to as SCRIPT expressions sh(SCRIPT)\r\n```\r\n\r\nWould make me reorder the initializer list of all classes heriting from `DescriptorImpl`, so i guess it's not so bad if it's just `protected` instead of `private`? Happy to change if you prefer, still. (This or doing `protectred:` then `private:` then `protected:` again.)",
      "commit_id" : "faa6f2176e487f7992557a1620923ebfaf60f432",
      "created_at" : "2022-06-21T18:08:57Z",
      "diff_hunk" : "@@ -493,12 +508,12 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n /** Base class for all Descriptor implementations. */\n class DescriptorImpl : public Descriptor\n {\n-    //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size for Multisig).\n+protected:\n+    //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size for WSH and Multisig).\n     const std::vector<std::unique_ptr<PubkeyProvider>> m_pubkey_args;\n     //! The string name of the descriptor function.\n     const std::string m_name;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r902922083",
      "id" : 902922083,
      "in_reply_to_id" : 901976005,
      "line" : 515,
      "node_id" : "PRRC_kwDOABII58410X9j",
      "original_commit_id" : "e9cac52614d11e30d1f6fec33efce3d00953bd70",
      "original_line" : 515,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 38,
      "pull_request_review_id" : 1014038644,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902922083/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-21T18:08:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902922083",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK faa6f2176e487f7992557a1620923ebfaf60f432",
      "created_at" : "2022-06-23T21:59:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1164921615",
      "id" : 1164921615,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585Fb0sP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164921615/reactions"
      },
      "updated_at" : "2022-06-23T21:59:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164921615",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa: could you give this another look when you have a minute?",
      "created_at" : "2022-07-04T13:25:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1173820796",
      "id" : 1173820796,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585F9xV8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1173820796/reactions"
      },
      "updated_at" : "2022-07-04T13:25:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1173820796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've got a decent fuzzing coverage of this PR with the corpus at https://github.com/bitcoin-core/qa-assets/pull/92 (using this branch along with #25540 to avoid memory blowups). A coverage report is available [here](http://download.darosior.ninja/dump/coverage_descriptor_parse_miniscript_2205/src/script/index.html).",
      "created_at" : "2022-07-05T08:21:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#issuecomment-1174763670",
      "id" : 1174763670,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
      "node_id" : "IC_kwDOABII585GBXiW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1174763670/reactions"
      },
      "updated_at" : "2022-07-05T08:21:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1174763670",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r916011953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/916011953"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What is supposed to happen here if we have a descriptor with 1 private key and otherwise only public keys?",
      "commit_id" : "faa6f2176e487f7992557a1620923ebfaf60f432",
      "created_at" : "2022-07-07T15:30:53Z",
      "diff_hunk" : "@@ -917,6 +932,89 @@ class TRDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/* We instantiate Miniscript here with a simple integer as key type.\n+ * The value of these key integers are an index in the\n+ * DescriptorImpl::m_pubkey_args vector.\n+ */\n+\n+/**\n+ * The context for converting a Miniscript descriptor into a Script.\n+ */\n+class ScriptMaker {\n+    //! Keys contained in the Miniscript (the evaluation of DescriptorImpl::m_pubkey_args).\n+    const std::vector<CPubKey>& m_keys;\n+\n+public:\n+    ScriptMaker(const std::vector<CPubKey>& keys LIFETIMEBOUND) : m_keys(keys) {}\n+\n+    std::vector<unsigned char> ToPKBytes(uint32_t key) const {\n+        return {m_keys[key].begin(), m_keys[key].end()};\n+    }\n+\n+    std::vector<unsigned char> ToPKHBytes(uint32_t key) const {\n+        auto id = m_keys[key].GetID();\n+        return {id.begin(), id.end()};\n+    }\n+};\n+\n+/**\n+ * The context for converting a Miniscript descriptor to its textual form.\n+ */\n+class StringMaker {\n+    //! To convert private keys for private descriptors.\n+    const SigningProvider* m_arg;\n+    //! Keys contained in the Miniscript (a reference to DescriptorImpl::m_pubkey_args).\n+    const std::vector<std::unique_ptr<PubkeyProvider>>& m_pubkeys;\n+    //! Whether to serialize keys as private or public.\n+    bool m_private;\n+\n+public:\n+    StringMaker(const SigningProvider* arg LIFETIMEBOUND, const std::vector<std::unique_ptr<PubkeyProvider>>& pubkeys LIFETIMEBOUND, bool priv)\n+        : m_arg(arg), m_pubkeys(pubkeys), m_private(priv) {}\n+\n+    std::optional<std::string> ToString(uint32_t key) const\n+    {\n+        std::string ret;\n+        if (m_private) {\n+            if (!m_pubkeys[key]->ToPrivateString(*m_arg, ret)) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r916011953",
      "id" : 916011953,
      "line" : 979,
      "node_id" : "PRRC_kwDOABII5842mTux",
      "original_commit_id" : "e9cac52614d11e30d1f6fec33efce3d00953bd70",
      "original_line" : 979,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 101,
      "pull_request_review_id" : 1031776846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/916011953/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-07T15:30:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/916011953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r917821024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/917821024"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The same as for existing descriptors, a failure:\r\n```diff\r\ndiff --git a/src/test/descriptor_tests.cpp b/src/test/descriptor_tests.cpp\r\nindex a8c666079d..668cddfbba 100644\r\n--- a/src/test/descriptor_tests.cpp\r\n+++ b/src/test/descriptor_tests.cpp\r\n@@ -488,6 +488,13 @@ Check(\"sh(wsh(multi(20,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGN\r\n \r\n     // Miniscript tests\r\n \r\n+    FlatSigningProvider prov;\r\n+    std::string err, out;\r\n+    const auto multi_desc = Parse(\"wsh(multi(1,L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd,032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0))\", prov, err, false);\r\n+    assert(multi_desc && !multi_desc->ToPrivateString(prov, out));\r\n+    const auto ms_desc = Parse(\"wsh(or_i(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0)))\", prov, err, false);\r\n+    assert(ms_desc && !ms_desc->ToPrivateString(prov, out));\r\n+\r\n     // Invalid checksum\r\n     CheckUnparsable(\"wsh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))#abcdef12\", \"wsh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))#abcdef12\", \"Provided checksum 'abcdef12' does not match computed checksum 'tyzp6a7p'\");\r\n     // Only p2wsh context is valid\r\n```\r\n\r\nIt is certainly suboptimal for certain usecases (like importing a partially private desc and calling `listdescriptors true`), but it's the existing behaviour and i don't think it should be fixed in this PR.",
      "commit_id" : "faa6f2176e487f7992557a1620923ebfaf60f432",
      "created_at" : "2022-07-11T11:22:46Z",
      "diff_hunk" : "@@ -917,6 +932,89 @@ class TRDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/* We instantiate Miniscript here with a simple integer as key type.\n+ * The value of these key integers are an index in the\n+ * DescriptorImpl::m_pubkey_args vector.\n+ */\n+\n+/**\n+ * The context for converting a Miniscript descriptor into a Script.\n+ */\n+class ScriptMaker {\n+    //! Keys contained in the Miniscript (the evaluation of DescriptorImpl::m_pubkey_args).\n+    const std::vector<CPubKey>& m_keys;\n+\n+public:\n+    ScriptMaker(const std::vector<CPubKey>& keys LIFETIMEBOUND) : m_keys(keys) {}\n+\n+    std::vector<unsigned char> ToPKBytes(uint32_t key) const {\n+        return {m_keys[key].begin(), m_keys[key].end()};\n+    }\n+\n+    std::vector<unsigned char> ToPKHBytes(uint32_t key) const {\n+        auto id = m_keys[key].GetID();\n+        return {id.begin(), id.end()};\n+    }\n+};\n+\n+/**\n+ * The context for converting a Miniscript descriptor to its textual form.\n+ */\n+class StringMaker {\n+    //! To convert private keys for private descriptors.\n+    const SigningProvider* m_arg;\n+    //! Keys contained in the Miniscript (a reference to DescriptorImpl::m_pubkey_args).\n+    const std::vector<std::unique_ptr<PubkeyProvider>>& m_pubkeys;\n+    //! Whether to serialize keys as private or public.\n+    bool m_private;\n+\n+public:\n+    StringMaker(const SigningProvider* arg LIFETIMEBOUND, const std::vector<std::unique_ptr<PubkeyProvider>>& pubkeys LIFETIMEBOUND, bool priv)\n+        : m_arg(arg), m_pubkeys(pubkeys), m_private(priv) {}\n+\n+    std::optional<std::string> ToString(uint32_t key) const\n+    {\n+        std::string ret;\n+        if (m_private) {\n+            if (!m_pubkeys[key]->ToPrivateString(*m_arg, ret)) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24148#discussion_r917821024",
      "id" : 917821024,
      "in_reply_to_id" : 916011953,
      "line" : 979,
      "node_id" : "PRRC_kwDOABII5842tNZg",
      "original_commit_id" : "e9cac52614d11e30d1f6fec33efce3d00953bd70",
      "original_line" : 979,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 101,
      "pull_request_review_id" : 1034182664,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/917821024/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-11T11:22:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/917821024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   }
]
