[
   {
      "author_association" : "MEMBER",
      "body" : "Concept NACK. Prefer recursive locks over fragile assumptions about the rest of the codebase.",
      "created_at" : "2022-01-31T03:58:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025353705",
      "id" : 1025353705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII5849Hafp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025353705/reactions"
      },
      "updated_at" : "2022-01-31T03:58:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025353705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Concept NACK. Prefer recursive locks over fragile assumptions about the rest of the codebase.\r\n\r\nMy point was that the lock isn't needed to be recursively taken during serialization since the data is copied before serialization.",
      "created_at" : "2022-01-31T07:54:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025464313",
      "id" : 1025464313,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII5849H1f5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025464313/reactions"
      },
      "updated_at" : "2022-01-31T07:54:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025464313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Specifically, I don't think we should need `NO_THREAD_SAFETY_ANALYSIS` - surely there's a better way?",
      "created_at" : "2022-01-31T08:16:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025479698",
      "id" : 1025479698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII5849H5QS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025479698/reactions"
      },
      "updated_at" : "2022-01-31T08:16:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025479698",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I agree but didn't see how to update the fuzz tests to do it -- happy to update with suggestions.",
      "created_at" : "2022-01-31T08:20:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025482990",
      "id" : 1025482990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII5849H6Du",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025482990/reactions"
      },
      "updated_at" : "2022-01-31T08:20:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1025482990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "To me it looks like that it is not just the tests that would be problematic:\r\n\r\n1. This `CDBBatch::Write()` call would internally invoke the `CDiskBlockIndex` serialization method:\r\nhttps://github.com/bitcoin/bitcoin/blob/5e49b2a2529adc737175ebdcbf312635c52b05f6/src/txdb.cpp#L280\r\n\r\n2. This `CDBIterator::GetValue()` call would internally invoke the `CDiskBlockIndex` deserialization method:\r\nhttps://github.com/bitcoin/bitcoin/blob/5e49b2a2529adc737175ebdcbf312635c52b05f6/src/txdb.cpp#L309\r\n\r\nBoth `Write()` and `GetValue()` are too generic and we can't tag them as requiring `cs_main` or acquire `cs_main` from within them.\r\n\r\nSo, we have some methods in the (non-test) code that invoke `CDiskBlockIndex` ser/deser and can't acquire `cs_main` or require their callers to acquire it.",
      "created_at" : "2022-03-07T14:49:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1060769137",
      "id" : 1060769137,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24199",
      "node_id" : "IC_kwDOABII584_Og1x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1060769137/reactions"
      },
      "updated_at" : "2022-03-07T14:49:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1060769137",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r821942074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821942074"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Drop lock and thread safety analysis in CDiskBlockIndex serialization\" (0e052eb04fa07fc4915c11faa8866ab759365dc4)\r\n\r\nIt'd be nice to do this without disabling thread safety checks. Though I can see it would require more work, and maybe better to do separately or as a followup. (IMO ideally we would have a linter to make sure every `NO_THREAD_SAFETY_ANALYSIS` usage was accompanied by a link to a github issue where we could discuss the plan to reenable thread safety checks.)\r\n\r\nIn this case it looks like most obvious way of removing `NO_THREAD_SAFETY_ANALYSIS` would be to replace public guarded variables with private unguarded variables, changing:\r\n\r\n```c++\r\npublic:\r\n    int nFile GUARDED_BY(::cs_main){0};\r\n    unsigned int nDataPos GUARDED_BY(::cs_main){0};\r\n    unsigned int nUndoPos GUARDED_BY(::cs_main){0};\r\n    uint32_t nStatus GUARDED_BY(::cs_main){0};\r\n```\r\n\r\nto:\r\n\r\n```c++\r\nprivate:\r\n    int m_file_num = 0;\r\n    unsigned int m_data_pos = 0;\r\n    unsigned int m_undo_pos = 0;\r\n    uint32_t m_status = 0;\r\n```\r\n\r\nAnd add `EXCLUSIVE_LOCKS_REQUIRED` accessor methods as needed to ensure variables are always accessed with the right locks held.",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-08T18:16:41Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r821942074",
      "id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584w_dc6",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 903405458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821942074/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-08T18:43:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/821942074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822371673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822371673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, how would that be different than the current code?\r\n\r\ncurrent: `LOCK(cs_main); read nStatus`\r\nproposed: `LOCK(cs_main); call GetNStatus()`\r\n\r\nand the ser/deser methods would still need to acquire `cs_main`, no?\r\n\r\nThe access to all `nStatus`/`nDataPos`/`nUndoPos` from within ser/deser has to happen in one atomic block. I mean that this is not ok:\r\n```\r\nlock\r\nread nStatus\r\nunlock\r\nlock\r\nread nDataPos\r\nunlock\r\n```\r\nit has to be\r\n```\r\nlock\r\nread nStatus\r\nread nDataPos\r\nunlock\r\n```",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-09T07:54:18Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822371673",
      "id" : 822371673,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xBGVZ",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 903977548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822371673/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T07:54:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822371673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822390873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822390873"
         }
      },
      "author_association" : "MEMBER",
      "body" : "All `CDiskBlockIndex` are short-lived copied data on the stack, shared with no other thread, so they don't need any locks. If there is a missing lock then it can at most be missed while copying the data.",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-09T08:20:54Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822390873",
      "id" : 822390873,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xBLBZ",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 904004358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822390873/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T08:20:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822390873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822470287"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822470287"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky, now I see your point - to change the members of the parent class `CBlockIndex` to be not-tagged as guarded by `cs_main` and change them to private, in the hopes that the methods that touch them respect the implicit guarding. Then, access them without guarding from the child class `CDiskBlockIndex`. I do not like this much because the members in `CBlockIndex` need to be guarded, but will be without a `GUARDED_BY()` tag. Hmm...\r\n\r\n@MarcoFalke, I did not realize this before, thanks for pointing it out!\r\n> If there is a missing lock then it can at most be missed while copying the data\r\n\r\nthere is not - both users of `CDiskBlockIndex` own `cs_main` when creating such objects.",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-09T09:52:14Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822470287",
      "id" : 822470287,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xBeaP",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 904113356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822470287/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T09:53:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822470287",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822473212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822473212"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> @MarcoFalke, I did not realize this before, thanks for pointing it out!\r\n\r\nI pointed it only out thrice up to now :sweat_smile: . https://github.com/bitcoin/bitcoin/pull/24199#issuecomment-1025464313 and https://github.com/bitcoin/bitcoin/pull/22932#discussion_r794493058",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-09T09:55:11Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822473212",
      "id" : 822473212,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xBfH8",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 904117238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822473212/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T09:55:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822473212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822528035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822528035"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yeah, I needed a few days to grasp that :exploding_head: ",
      "commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "created_at" : "2022-03-09T10:57:54Z",
      "diff_hunk" : "@@ -380,9 +380,13 @@ class CDiskBlockIndex : public CBlockIndex\n         hashPrev = (pprev ? pprev->GetBlockHash() : uint256());\n     }\n \n-    SERIALIZE_METHODS(CDiskBlockIndex, obj)\n+    // Thread safety analysis is disabled because (a) CDiskBlockIndex creates a\n+    // copy of the data to serialize a struct that is subsequently discarded,\n+    // and (b) if the analysis is enabled the nStatus compiler warnings are only\n+    // generated by the tests, as the callers in the codebase that invoke this\n+    // serialization hold cs_main and have lock annotations and assertions.\n+    SERIALIZE_METHODS(CDiskBlockIndex, obj) NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24199#discussion_r822528035",
      "id" : 822528035,
      "in_reply_to_id" : 821942074,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII584xBsgj",
      "original_commit_id" : "0e052eb04fa07fc4915c11faa8866ab759365dc4",
      "original_line" : 388,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 10,
      "pull_request_review_id" : 904192009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24199",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822528035/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T10:57:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822528035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
