[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24007](https://github.com/bitcoin/bitcoin/pull/24007) ([mempool] allow tx replacement by smaller witness by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-01-26T00:08:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1021726430",
      "id" : 1021726430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII58485k7e",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021726430/reactions"
      },
      "updated_at" : "2022-01-26T00:08:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1021726430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802669892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802669892"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fee-bump **for** transaction B",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T13:38:53Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802669892",
      "id" : 802669892,
      "line" : 85,
      "node_id" : "PRRC_kwDOABII584v18VE",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 85,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 29,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802669892/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802669892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802723149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802723149"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's not really clear at this point of the document what \"deduplication\" means - I think both removal of transaction already in the mempool, and removal of package txs that would also get accepted individually. The *Rationale* section on this only mentions the first. Maybe add an explanation/pointer to the following section.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T14:31:46Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802723149",
      "id" : 802723149,
      "line" : 64,
      "node_id" : "PRRC_kwDOABII584v2JVN",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 64,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 8,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802723149/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802723149",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802799166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802799166"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Now that a PackageMempoolAcceptResult with empty `m_tx_results` is returned if the fee is too low, the `tx_pool_standard` fuzz test needs an update, because it [asserts](https://github.com/bitcoin/bitcoin/blob/5e8e0b3d7f6055e326bda61e60712b530e8920f0/src/test/fuzz/tx_pool.cpp#L242) non-emptiness.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T15:39:09Z",
      "diff_hunk" : "@@ -1199,6 +1211,21 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n         m_viewmempool.PackageAddTransaction(ws.m_ptx);\n     }\n \n+    // Transactions must meet two minimum feerates: the mempool minimum fee and min relay fee.\n+    // For transactions consisting of exactly one child and its parents, it suffices to use the\n+    // package feerate (total modified fees / total virtual size) to check this requirement.\n+    m_total_vsize = std::accumulate(workspaces.cbegin(), workspaces.cend(), 0,\n+        [](int64_t sum, auto& ws) { return sum + ws.m_vsize; });\n+    m_total_modified_fees = std::accumulate(workspaces.cbegin(), workspaces.cend(), 0,\n+        [](CAmount sum, auto& ws) { return sum + ws.m_modified_fees; });\n+    const CFeeRate package_feerate(m_total_modified_fees, m_total_vsize);\n+    TxValidationState placeholder_state;\n+    if (args.m_package_feerates &&\n+        !CheckFeeRate(m_total_vsize, m_total_modified_fees, placeholder_state)) {\n+        package_state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-fee-too-low\");\n+        return PackageMempoolAcceptResult(package_state, package_feerate, {});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802799166",
      "id" : 802799166,
      "line" : 1240,
      "node_id" : "PRRC_kwDOABII584v2b4-",
      "original_commit_id" : "f90b6c52681c4a7968c2467641a383f1fc1991d2",
      "original_line" : 1226,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 76,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802799166/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802799166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802851282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802851282"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "this sentence confused me at first because it seems to describe the very use case of CPFP where a high fee of a child does impact the consideration of a parent - maybe \"insufficient fees of children should...\"",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T16:24:46Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.\n+Package feerate, as defined above, does not consider the fees and relationships between all\n+transactions in the package. We want to prevent \"parents pay for children\" behavior; fees of",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802851282",
      "id" : 802851282,
      "line" : 87,
      "node_id" : "PRRC_kwDOABII584v2onS",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 87,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 31,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802851282/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802851282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802858141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802858141"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "shouldn't this be \"A's fees cannot help B\"?",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T16:29:52Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.\n+Package feerate, as defined above, does not consider the fees and relationships between all\n+transactions in the package. We want to prevent \"parents pay for children\" behavior; fees of\n+children should have no impact on the consideration of their parents, since they are not necessary\n+for the parents to be mined. More generally, if transaction B is not needed in order for transaction\n+A to be mined, B's fees cannot help A. In a child-with-parents package, simply excluding any parent",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802858141",
      "id" : 802858141,
      "line" : 90,
      "node_id" : "PRRC_kwDOABII584v2qSd",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 90,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 34,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802858141/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802858141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802872913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802872913"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could `m_total_modified_fees` and  `m_total_vsize` just be local variables? They seem to be used only in `MemPoolAccept::AcceptMultipleTransactions`.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T16:43:22Z",
      "diff_hunk" : "@@ -649,6 +656,10 @@ class MemPoolAccept\n \n     CChainState& m_active_chainstate;\n \n+    // Used to calculate package feerate.\n+    CAmount m_total_modified_fees;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802872913",
      "id" : 802872913,
      "line" : 674,
      "node_id" : "PRRC_kwDOABII584v2t5R",
      "original_commit_id" : "f90b6c52681c4a7968c2467641a383f1fc1991d2",
      "original_line" : 660,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 40,
      "pull_request_review_id" : 877471788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802872913/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802872913",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802952279"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802952279"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit, most examples seem to designate a parent as A and its child as B (which I like, because that corresponds to time-order, first A, then B), but this seems to be reversed? I believe a few lines below, the convention I'm suggesting is followed, (A is parent, B is child). Also, should \"transaction B\" be \"transaction for B\"?",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T18:07:18Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802952279",
      "id" : 802952279,
      "line" : 85,
      "node_id" : "PRRC_kwDOABII584v3BRX",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 85,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 29,
      "pull_request_review_id" : 877867313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802952279/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:19:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802952279",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802954740"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802954740"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is okay, but when I first read this, I had no idea what \"modified\" meant (only learning later that the `prioritisetransaction` RPC does the modifying); perhaps \"modified\" can be dropped? I think it's implicit. Or maybe briefly mention the RPC here.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T18:10:16Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802954740",
      "id" : 802954740,
      "line" : 63,
      "node_id" : "PRRC_kwDOABII584v3B30",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 63,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 7,
      "pull_request_review_id" : 877867313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802954740/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:19:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802954740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802955759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802955759"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's unclear to me what \"deduplication\" means here. I thought a package, by definition, contains no duplicate transactions.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T18:11:30Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r802955759",
      "id" : 802955759,
      "line" : 64,
      "node_id" : "PRRC_kwDOABII584v3CHv",
      "original_commit_id" : "486cd4cfb1b66897cf3a414953b160faaeaafe0c",
      "original_line" : 64,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 8,
      "pull_request_review_id" : 877867313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802955759/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T18:19:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/802955759",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803135521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803135521"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"However, this should not allow parents to pay for children\"\r\n\r\nThis reads to me like \"parents must not pay for children\". When it is more (to my understanding), parents must be validated first before considering children. If the parent(s) is accepted into the mempool first a low fee child can later join them as part of a sufficient fee package but a low fee child must not prevent a sufficient fee parent from being accepted into the mempool. That's right yeah?",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-09T22:17:13Z",
      "diff_hunk" : "@@ -557,6 +577,182 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package\n+    const CAmount coinbase_value{50 * COIN};\n+    const CAmount parent_value{coinbase_value - 0};\n+    const CAmount child_value{parent_value - COIN};\n+\n+    Package package_cpfp;\n+    auto mtx_parent = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[0], /*vout=*/ 0,\n+                                                    /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                    /*output_destination=*/ parent_spk,\n+                                                    /*output_amount=*/ parent_value, /*submit=*/ false);\n+    CTransactionRef tx_parent = MakeTransactionRef(mtx_parent);\n+    package_cpfp.push_back(tx_parent);\n+\n+    auto mtx_child = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent, /*vout=*/ 0,\n+                                                   /*input_height=*/ 101, /*input_signing_key=*/ child_key,\n+                                                   /*output_destination=*/ child_spk,\n+                                                   /*output_amount=*/ child_value, /*submit=*/ false);\n+    CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+    package_cpfp.push_back(tx_child);\n+\n+    // Even though the parent pays 0 absolute fees, the child pays 1 BTC which is enough for the\n+    // package feerate to meet the threshold.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_cpfp = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_cpfp, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_cpfp.m_state.GetRejectReason());\n+        auto it_parent = submit_cpfp.m_tx_results.find(tx_parent->GetWitnessHash());\n+        auto it_child = submit_cpfp.m_tx_results.find(tx_child->GetWitnessHash());\n+        BOOST_CHECK(it_parent != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_parent->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_parent->second.m_base_fees.value() == 0);\n+        BOOST_CHECK(it_child != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_child->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_child->second.m_base_fees.value() == COIN);\n+\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n+\n+        const CFeeRate expected_feerate(coinbase_value - child_value,\n+                                        GetVirtualTransactionSize(*tx_parent) + GetVirtualTransactionSize(*tx_child));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() > 1000);\n+        BOOST_CHECK(submit_cpfp.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_cpfp.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Just because we allow low-fee parents doesn't mean we allow low-feerate packages.\n+    // This package just pays 200 satoshis total. This would be enough to pay for the child alone,\n+    // but isn't enough for the entire package to meet the 1sat/vbyte minimum.\n+    Package package_still_too_low;\n+    auto mtx_parent_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[1], /*vout=*/ 0,\n+                                                          /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                          /*output_destination=*/ parent_spk,\n+                                                          /*output_amount=*/ coinbase_value, /*submit=*/ false);\n+    CTransactionRef tx_parent_cheap = MakeTransactionRef(mtx_parent_cheap);\n+    package_still_too_low.push_back(tx_parent_cheap);\n+\n+    auto mtx_child_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent_cheap, /*vout=*/ 0,\n+                                                         /*input_height=*/ 101, /* input_signing_key */ child_key,\n+                                                         /*output_destination=*/ child_spk,\n+                                                         /*output_amount=*/ coinbase_value - 200, /*submit=*/ false);\n+    CTransactionRef tx_child_cheap = MakeTransactionRef(mtx_child_cheap);\n+    package_still_too_low.push_back(tx_child_cheap);\n+\n+    // Cheap package should fail with package-fee-too-low.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_package_too_low = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_still_too_low, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_state.IsInvalid(), \"Package validation unexpectedly succeeded\");\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetRejectReason(), \"package-fee-too-low\");\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const CFeeRate child_feerate(200, GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(child_feerate.GetFeePerK() > 1000);\n+        const CFeeRate expected_feerate(200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() < 1000);\n+        BOOST_CHECK(submit_package_too_low.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_package_too_low.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate includes the modified fees of the transactions.\n+    // This means a child with its fee delta from prioritisetransaction can pay for a parent.\n+    m_node.mempool->PrioritiseTransaction(tx_child_cheap->GetHash(), 1 * COIN);\n+    // Now that the child's fees have \"increased\" by 1 BTC, the cheap package should succeed.\n+    {\n+        const auto submit_prioritised_package = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                                  package_still_too_low, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_state.IsValid(),\n+                \"Package validation unexpectedly failed\" << submit_prioritised_package.m_state.GetRejectReason());\n+        const CFeeRate expected_feerate(1 * COIN + 200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(submit_prioritised_package.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_prioritised_package.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_prioritised_package.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate is calculated without topology in mind; it's just aggregating fees and sizes.\n+    // However, this should not allow parents to pay for children. Each transaction should be",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803135521",
      "id" : 803135521,
      "line" : 710,
      "node_id" : "PRRC_kwDOABII584v3uAh",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 710,
      "original_position" : 249,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 249,
      "pull_request_review_id" : 878118993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803135521/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-09T22:17:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803135521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nBuilt on MacOS Big Sur, ran unit tests (diagrams from [PR review club](https://bitcoincore.reviews/24152) are helpful here illustrating each unit test). Ideally I'd play around with these but just read through and ran them today. Didn't run the fuzz tests but the fuzzer seems to be failing on the CI.\r\n\r\nI asked about DoS vectors for CPFP in today's PR review club as that seems the greatest hurdle to get over for updated RBF rules and package RBF but seem to be less of a concern with CPFP (?). Not sure whether the CPFP carve out rule needs to be tweaked when CPFPing within a package?\r\n\r\nGreat to see this series of PRs progress. \r\n\r\n",
      "created_at" : "2022-02-09T22:50:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#issuecomment-1034278526",
      "id" : 1034278526,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24152",
      "node_id" : "IC_kwDOABII5849pdZ-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034278526/reactions"
      },
      "updated_at" : "2022-02-09T22:51:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1034278526",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803207380"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803207380"
         }
      },
      "author_association" : "MEMBER",
      "body" : "i agree as a design principle that backwards-compatibility of transaction relay policy is worthwhile.\r\n\r\nThat said, we might have in the future to make exceptions to that principle, where a transaction/package might be relayed across non-upgraded nodes though rejected by upgraded nodes. E.g I'm thinking if replace-by-feerate is deployed instead of replace-by-fee, you might have a (2000 sats; 10 sat/vB) transaction replacing a (5000 sats; 5 sat/vB) already-in-mempool one (even if we can envision some transition period with dual-support).\r\n\r\nThus I'm suggesting to enlighten the wording here, \"As a principle, backwards-compatibility of transaction relay policy is prioritized\", \"we prevent non-programmed restriction of policy\". Especially as all those questions of policy loosening/tightening and how the project operates them are relatively young, I think it's cautious to be more formal in the phrasing. Thereby avoiding in the future ecosystems users to claim an adamant stability of Core policy rules, like in the zero-conf/full-rbf past polemics.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-10T00:39:42Z",
      "diff_hunk" : "@@ -57,3 +57,40 @@ test accepts):\n \n    - Warning: Batched fee-bumping may be unsafe for some use cases. Users and application developers\n      should take caution if utilizing multi-parent packages.\n+\n+### Package Fees and Feerate\n+\n+*Package Feerate* is the total modified fees divided by the total virtual size of all transactions\n+in the package after deduplication.\n+\n+To meet the two feerate requirements of a mempool, i.e., the pre-configured minimum relay feerate\n+(`minRelayTxFee`) and dynamic mempool minimum feerate, the total package feerate is used instead of\n+the individual feerate. The individual transactions are allowed to be below feerate requirements if\n+the package meets the feerate requirements. For example, the parent(s) in the package can have 0\n+fees but be paid for by the child.\n+\n+*Rationale*: This can be thought of as \"CPFP within a package,\" solving the issue of a parent not\n+meeting minimum fees on its own. This allows L2 applications to adjust their fees at broadcast time\n+instead of overshooting or risking getting stuck/pinned.\n+\n+*Rationale*: It would be incorrect to use the fees of transactions that are already in the mempool, as\n+we do not want a transaction's fees to be double-counted.\n+\n+### Transactions Are Always Submitted Individually First\n+\n+Transactions within a package are always validated individually first, and package validation is\n+used for the transactions that failed.\n+\n+*Rationale*: Packages are intended for incentive-compatible fee-bumping. That is, transaction A is a\n+\"legitimate\" fee-bump transaction B only if A is a descendant of B and has a higher feerate.\n+Package feerate, as defined above, does not consider the fees and relationships between all\n+transactions in the package. We want to prevent \"parents pay for children\" behavior; fees of\n+children should have no impact on the consideration of their parents, since they are not necessary\n+for the parents to be mined. More generally, if transaction B is not needed in order for transaction\n+A to be mined, B's fees cannot help A. In a child-with-parents package, simply excluding any parent\n+transactions that meet feerate requirements individually is sufficient to ensure this.\n+\n+*Rationale*: For backwards-compatibility of transaction relay policy, it's important that package",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803207380",
      "id" : 803207380,
      "line" : 93,
      "node_id" : "PRRC_kwDOABII584v3_jU",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 93,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "doc/policy/packages.md",
      "position" : 37,
      "pull_request_review_id" : 878210505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803207380/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T00:54:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803207380",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803208009"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803208009"
         }
      },
      "author_association" : "MEMBER",
      "body" : "From checking `prioritisetransaction` documentation, I think it's a valid behavior to subtract fees from a transaction, thus altering `ProcessNewPackage` result. If you think it's a case worthy to cover.",
      "commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "created_at" : "2022-02-10T00:41:05Z",
      "diff_hunk" : "@@ -557,6 +577,182 @@ BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n         BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_parent2_v1->GetWitnessHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent3->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_mixed_child->GetHash())));\n+\n+        // package feerate should include parent3 and child. It should not include parent1 or parent2_v1.\n+        BOOST_CHECK(mixed_result.m_package_feerate != std::nullopt);\n+        CFeeRate expected_feerate(1 * COIN, GetVirtualTransactionSize(*ptx_parent3) + GetVirtualTransactionSize(*ptx_mixed_child));\n+        BOOST_CHECK_MESSAGE(mixed_result.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      mixed_result.m_package_feerate.value().ToString()));\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(package_cpfp_tests, TestChain100Setup)\n+{\n+    mineBlocks(5);\n+    LOCK(cs_main);\n+    unsigned int expected_pool_size = m_node.mempool->size();\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript parent_spk = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript child_spk = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+\n+    // zero-fee parent and child package\n+    const CAmount coinbase_value{50 * COIN};\n+    const CAmount parent_value{coinbase_value - 0};\n+    const CAmount child_value{parent_value - COIN};\n+\n+    Package package_cpfp;\n+    auto mtx_parent = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[0], /*vout=*/ 0,\n+                                                    /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                    /*output_destination=*/ parent_spk,\n+                                                    /*output_amount=*/ parent_value, /*submit=*/ false);\n+    CTransactionRef tx_parent = MakeTransactionRef(mtx_parent);\n+    package_cpfp.push_back(tx_parent);\n+\n+    auto mtx_child = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent, /*vout=*/ 0,\n+                                                   /*input_height=*/ 101, /*input_signing_key=*/ child_key,\n+                                                   /*output_destination=*/ child_spk,\n+                                                   /*output_amount=*/ child_value, /*submit=*/ false);\n+    CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+    package_cpfp.push_back(tx_child);\n+\n+    // Even though the parent pays 0 absolute fees, the child pays 1 BTC which is enough for the\n+    // package feerate to meet the threshold.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_cpfp = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_cpfp, /*test_accept=*/ false);\n+        expected_pool_size += 2;\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_cpfp.m_state.GetRejectReason());\n+        auto it_parent = submit_cpfp.m_tx_results.find(tx_parent->GetWitnessHash());\n+        auto it_child = submit_cpfp.m_tx_results.find(tx_child->GetWitnessHash());\n+        BOOST_CHECK(it_parent != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_parent->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_parent->second.m_base_fees.value() == 0);\n+        BOOST_CHECK(it_child != submit_cpfp.m_tx_results.end());\n+        BOOST_CHECK(it_child->second.m_result_type == MempoolAcceptResult::ResultType::VALID);\n+        BOOST_CHECK(it_child->second.m_base_fees.value() == COIN);\n+\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n+\n+        const CFeeRate expected_feerate(coinbase_value - child_value,\n+                                        GetVirtualTransactionSize(*tx_parent) + GetVirtualTransactionSize(*tx_child));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() > 1000);\n+        BOOST_CHECK(submit_cpfp.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_cpfp.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_cpfp.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Just because we allow low-fee parents doesn't mean we allow low-feerate packages.\n+    // This package just pays 200 satoshis total. This would be enough to pay for the child alone,\n+    // but isn't enough for the entire package to meet the 1sat/vbyte minimum.\n+    Package package_still_too_low;\n+    auto mtx_parent_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ m_coinbase_txns[1], /*vout=*/ 0,\n+                                                          /*input_height=*/ 0, /*input_signing_key=*/ coinbaseKey,\n+                                                          /*output_destination=*/ parent_spk,\n+                                                          /*output_amount=*/ coinbase_value, /*submit=*/ false);\n+    CTransactionRef tx_parent_cheap = MakeTransactionRef(mtx_parent_cheap);\n+    package_still_too_low.push_back(tx_parent_cheap);\n+\n+    auto mtx_child_cheap = CreateValidMempoolTransaction(/*input_transaction=*/ tx_parent_cheap, /*vout=*/ 0,\n+                                                         /*input_height=*/ 101, /* input_signing_key */ child_key,\n+                                                         /*output_destination=*/ child_spk,\n+                                                         /*output_amount=*/ coinbase_value - 200, /*submit=*/ false);\n+    CTransactionRef tx_child_cheap = MakeTransactionRef(mtx_child_cheap);\n+    package_still_too_low.push_back(tx_child_cheap);\n+\n+    // Cheap package should fail with package-fee-too-low.\n+    {\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const auto submit_package_too_low = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                   package_still_too_low, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_state.IsInvalid(), \"Package validation unexpectedly succeeded\");\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n+        BOOST_CHECK_EQUAL(submit_package_too_low.m_state.GetRejectReason(), \"package-fee-too-low\");\n+        BOOST_CHECK_EQUAL(m_node.mempool->size(), expected_pool_size);\n+        const CFeeRate child_feerate(200, GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(child_feerate.GetFeePerK() > 1000);\n+        const CFeeRate expected_feerate(200,\n+            GetVirtualTransactionSize(*tx_parent_cheap) + GetVirtualTransactionSize(*tx_child_cheap));\n+        BOOST_CHECK(expected_feerate.GetFeePerK() < 1000);\n+        BOOST_CHECK(submit_package_too_low.m_package_feerate != std::nullopt);\n+        BOOST_CHECK_MESSAGE(submit_package_too_low.m_package_feerate.value() == expected_feerate,\n+                            strprintf(\"Expected package feerate %s, got %s\", expected_feerate.ToString(),\n+                                      submit_package_too_low.m_package_feerate.value().ToString()));\n+    }\n+\n+    // Package feerate includes the modified fees of the transactions.\n+    // This means a child with its fee delta from prioritisetransaction can pay for a parent.\n+    m_node.mempool->PrioritiseTransaction(tx_child_cheap->GetHash(), 1 * COIN);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24152#discussion_r803208009",
      "id" : 803208009,
      "line" : 693,
      "node_id" : "PRRC_kwDOABII584v3_tJ",
      "original_commit_id" : "7daf3d08b48669305574bc306d42a243ff1a25fb",
      "original_line" : 693,
      "original_position" : 232,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 232,
      "pull_request_review_id" : 878210505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24152",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803208009/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-10T00:54:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/803208009",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
