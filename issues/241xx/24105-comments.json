[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24105#discussion_r788180423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24105"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/788180423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps it is cleaner to not make this `mutable`, but instead make the places where `ScriptExecutionData` is used non-`const`? That'd make it also clear that it is not safe for concurrent modification.",
      "commit_id" : "4a8fd0af4e6df47252d994ce47e94fc59f5ea4cf",
      "created_at" : "2022-01-19T21:57:22Z",
      "diff_hunk" : "@@ -215,6 +216,9 @@ struct ScriptExecutionData\n     bool m_validation_weight_left_init = false;\n     //! How much validation weight is left (decremented for every successful non-empty signature check).\n     int64_t m_validation_weight_left;\n+\n+    //! The hash of the corresponding output\n+    mutable std::optional<uint256> m_output_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24105#discussion_r788180423",
      "id" : 788180423,
      "line" : 221,
      "node_id" : "PRRC_kwDOABII584u-q3H",
      "original_commit_id" : "4a8fd0af4e6df47252d994ce47e94fc59f5ea4cf",
      "original_line" : 221,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : 14,
      "pull_request_review_id" : 857407031,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24105",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/788180423/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-19T21:57:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/788180423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24105#discussion_r788191295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24105"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/788191295"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "i think that seems reasonable, but it is a little bit of a tradeoff because you really ought not to be modifying the fields after creation except in this case, and non-consting it would make that unclear.\r\n\r\ni'd also (ideally) make the m_output_hash retrieved through a getter function rather than inline logic, but I didn't want to make this PR more complex of an interface change.\r\n\r\nmaybe in a followup PR we could do some refactors to make it gotten through a Getter and rename the class to MutableScriptExecutionData? Or break out the Mutable and Immutable part as two separate caches? Also an option to just always pre-cache this, but that violates 'dont pay for what you dont use'",
      "commit_id" : "4a8fd0af4e6df47252d994ce47e94fc59f5ea4cf",
      "created_at" : "2022-01-19T22:15:08Z",
      "diff_hunk" : "@@ -215,6 +216,9 @@ struct ScriptExecutionData\n     bool m_validation_weight_left_init = false;\n     //! How much validation weight is left (decremented for every successful non-empty signature check).\n     int64_t m_validation_weight_left;\n+\n+    //! The hash of the corresponding output\n+    mutable std::optional<uint256> m_output_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24105#discussion_r788191295",
      "id" : 788191295,
      "in_reply_to_id" : 788180423,
      "line" : 221,
      "node_id" : "PRRC_kwDOABII584u-tg_",
      "original_commit_id" : "4a8fd0af4e6df47252d994ce47e94fc59f5ea4cf",
      "original_line" : 221,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : 14,
      "pull_request_review_id" : 857421908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24105",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/788191295/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-19T22:15:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/788191295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24105#discussion_r788198006"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24105"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/788198006"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's a simple struct with some state data. As long as there is no benefit to actually having anything immutable, I don't think there is much of a problem with just making it non-const everywhere. `m_validation_weight_left` is also changed at runtime.",
      "commit_id" : "4a8fd0af4e6df47252d994ce47e94fc59f5ea4cf",
      "created_at" : "2022-01-19T22:26:36Z",
      "diff_hunk" : "@@ -215,6 +216,9 @@ struct ScriptExecutionData\n     bool m_validation_weight_left_init = false;\n     //! How much validation weight is left (decremented for every successful non-empty signature check).\n     int64_t m_validation_weight_left;\n+\n+    //! The hash of the corresponding output\n+    mutable std::optional<uint256> m_output_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24105#discussion_r788198006",
      "id" : 788198006,
      "in_reply_to_id" : 788180423,
      "line" : 221,
      "node_id" : "PRRC_kwDOABII584u-vJ2",
      "original_commit_id" : "4a8fd0af4e6df47252d994ce47e94fc59f5ea4cf",
      "original_line" : 221,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/script/interpreter.h",
      "position" : 14,
      "pull_request_review_id" : 857430940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24105",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/788198006/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-19T22:34:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/788198006",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
