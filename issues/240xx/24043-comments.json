[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782616034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782616034"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 9966b84894801879cda1d2639ab3da7f29be55e7:\r\n\r\nWe are actually limited by starting witness stack size. So the number of keys should be <= 1000 (excluding control block and script itself). 512 seems like a good choice. But the above comment can be updated",
      "commit_id" : "2f247330f7e93a4d4d29bd8fbe18751d5f47c49f",
      "created_at" : "2022-01-12T00:07:54Z",
      "diff_hunk" : "@@ -23,6 +23,13 @@\n \n namespace {\n \n+/** Current maximum number of accepted public keys in a multi_a descriptor.\n+ *  The theoretical limit of what fits in 100000 vbytes is around 11418,\n+ *  but limit to a significantly smaller number to avoid running into\n+ *  transaction size limits when multiple of these occur in a transaction,\n+ *  and to keep descriptor strings of reasonable length. */\n+static constexpr unsigned int MAX_PUBKEYS_PER_MULTI_A = 512;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782616034",
      "id" : 782616034,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584upcXi",
      "original_commit_id" : "9966b84894801879cda1d2639ab3da7f29be55e7",
      "original_line" : 31,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 849852341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782616034/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-12T01:04:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782616034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6881849?v=4",
         "events_url" : "https://api.github.com/users/sanket1729/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sanket1729/followers",
         "following_url" : "https://api.github.com/users/sanket1729/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sanket1729/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sanket1729",
         "id" : 6881849,
         "login" : "sanket1729",
         "node_id" : "MDQ6VXNlcjY4ODE4NDk=",
         "organizations_url" : "https://api.github.com/users/sanket1729/orgs",
         "received_events_url" : "https://api.github.com/users/sanket1729/received_events",
         "repos_url" : "https://api.github.com/users/sanket1729/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sanket1729/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sanket1729"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782622388"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782622388"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 9966b84:\r\nshould this be `keyspans.size() > MAX_PUBKEYS_PER_MULTI_A`?",
      "commit_id" : "2f247330f7e93a4d4d29bd8fbe18751d5f47c49f",
      "created_at" : "2022-01-12T00:24:32Z",
      "diff_hunk" : "@@ -130,17 +131,53 @@ static bool MatchMultisig(const CScript& script, int& required_sigs, std::vector\n     CScript::const_iterator it = script.begin();\n     if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n \n-    if (!script.GetOp(it, opcode, data) || !GetMultisigKeyCount(opcode, data, required_sigs)) return false;\n+    if (!script.GetOp(it, opcode, data)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, required_sigs, MAX_PUBKEYS_PER_MULTISIG)) return false;\n     while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n         pubkeys.emplace_back(std::move(data));\n     }\n-    if (!GetMultisigKeyCount(opcode, data, num_keys)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, num_keys, MAX_PUBKEYS_PER_MULTISIG)) return false;\n \n     if (pubkeys.size() != static_cast<unsigned long>(num_keys) || num_keys < required_sigs) return false;\n \n     return (it + 1 == script.end());\n }\n \n+std::optional<std::pair<int, std::vector<Span<const unsigned char>>>> MatchMultiA(const CScript& script)\n+{\n+    std::vector<Span<const unsigned char>> keyspans;\n+\n+    // Redundant, but very fast and selective test.\n+    if (script.size() == 0 || script[0] != 32 || script.back() != OP_NUMEQUAL) return {};\n+\n+    // Parse keys\n+    auto it = script.begin();\n+    while (script.end() - it >= 34) {\n+        if (*it != 32) return {};\n+        ++it;\n+        keyspans.emplace_back(&*it, 32);\n+        it += 32;\n+        if (*it != (keyspans.size() == 1 ? OP_CHECKSIG : OP_CHECKSIGADD)) return {};\n+        ++it;\n+    }\n+    if (keyspans.size() == 0 || keyspans.size() > (MAX_BLOCK_WEIGHT / 34)) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782622388",
      "id" : 782622388,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584upd60",
      "original_commit_id" : "9966b84894801879cda1d2639ab3da7f29be55e7",
      "original_line" : 163,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 849852341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782622388/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-12T01:04:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782622388",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6881849?v=4",
         "events_url" : "https://api.github.com/users/sanket1729/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sanket1729/followers",
         "following_url" : "https://api.github.com/users/sanket1729/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sanket1729/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sanket1729",
         "id" : 6881849,
         "login" : "sanket1729",
         "node_id" : "MDQ6VXNlcjY4ODE4NDk=",
         "organizations_url" : "https://api.github.com/users/sanket1729/orgs",
         "received_events_url" : "https://api.github.com/users/sanket1729/received_events",
         "repos_url" : "https://api.github.com/users/sanket1729/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sanket1729/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sanket1729"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782626168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782626168"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 9966b84:\r\n\r\nnit: It is slightly confusing that the function named `GetMultisigKeyCount` is being used to decode the threshold and check that threshold is within limits. Can't think of a clear better name",
      "commit_id" : "2f247330f7e93a4d4d29bd8fbe18751d5f47c49f",
      "created_at" : "2022-01-12T00:35:07Z",
      "diff_hunk" : "@@ -130,17 +131,53 @@ static bool MatchMultisig(const CScript& script, int& required_sigs, std::vector\n     CScript::const_iterator it = script.begin();\n     if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n \n-    if (!script.GetOp(it, opcode, data) || !GetMultisigKeyCount(opcode, data, required_sigs)) return false;\n+    if (!script.GetOp(it, opcode, data)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, required_sigs, MAX_PUBKEYS_PER_MULTISIG)) return false;\n     while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n         pubkeys.emplace_back(std::move(data));\n     }\n-    if (!GetMultisigKeyCount(opcode, data, num_keys)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, num_keys, MAX_PUBKEYS_PER_MULTISIG)) return false;\n \n     if (pubkeys.size() != static_cast<unsigned long>(num_keys) || num_keys < required_sigs) return false;\n \n     return (it + 1 == script.end());\n }\n \n+std::optional<std::pair<int, std::vector<Span<const unsigned char>>>> MatchMultiA(const CScript& script)\n+{\n+    std::vector<Span<const unsigned char>> keyspans;\n+\n+    // Redundant, but very fast and selective test.\n+    if (script.size() == 0 || script[0] != 32 || script.back() != OP_NUMEQUAL) return {};\n+\n+    // Parse keys\n+    auto it = script.begin();\n+    while (script.end() - it >= 34) {\n+        if (*it != 32) return {};\n+        ++it;\n+        keyspans.emplace_back(&*it, 32);\n+        it += 32;\n+        if (*it != (keyspans.size() == 1 ? OP_CHECKSIG : OP_CHECKSIGADD)) return {};\n+        ++it;\n+    }\n+    if (keyspans.size() == 0 || keyspans.size() > (MAX_BLOCK_WEIGHT / 34)) return {};\n+\n+    // Parse threshold.\n+    opcodetype opcode;\n+    std::vector<unsigned char> data;\n+    if (!script.GetOp(it, opcode, data)) return {};\n+    if (it == script.end()) return {};\n+    if (*it != OP_NUMEQUAL) return {};\n+    ++it;\n+    if (it != script.end()) return {};\n+    int threshold;\n+    if (!GetMultisigKeyCount(opcode, data, threshold, (int)keyspans.size())) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782626168",
      "id" : 782626168,
      "line" : 173,
      "node_id" : "PRRC_kwDOABII584upe14",
      "original_commit_id" : "9966b84894801879cda1d2639ab3da7f29be55e7",
      "original_line" : 173,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : 75,
      "pull_request_review_id" : 849852341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782626168/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-12T01:04:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782626168",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6881849?v=4",
         "events_url" : "https://api.github.com/users/sanket1729/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sanket1729/followers",
         "following_url" : "https://api.github.com/users/sanket1729/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sanket1729/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sanket1729",
         "id" : 6881849,
         "login" : "sanket1729",
         "node_id" : "MDQ6VXNlcjY4ODE4NDk=",
         "organizations_url" : "https://api.github.com/users/sanket1729/orgs",
         "received_events_url" : "https://api.github.com/users/sanket1729/received_events",
         "repos_url" : "https://api.github.com/users/sanket1729/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sanket1729/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sanket1729"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782627474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782627474"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 9966b84:\r\nThis line is redundant because the above `GetMultiSigKeyCount` would check that threshold is less than keyspans.size()",
      "commit_id" : "2f247330f7e93a4d4d29bd8fbe18751d5f47c49f",
      "created_at" : "2022-01-12T00:38:45Z",
      "diff_hunk" : "@@ -130,17 +131,53 @@ static bool MatchMultisig(const CScript& script, int& required_sigs, std::vector\n     CScript::const_iterator it = script.begin();\n     if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n \n-    if (!script.GetOp(it, opcode, data) || !GetMultisigKeyCount(opcode, data, required_sigs)) return false;\n+    if (!script.GetOp(it, opcode, data)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, required_sigs, MAX_PUBKEYS_PER_MULTISIG)) return false;\n     while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n         pubkeys.emplace_back(std::move(data));\n     }\n-    if (!GetMultisigKeyCount(opcode, data, num_keys)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, num_keys, MAX_PUBKEYS_PER_MULTISIG)) return false;\n \n     if (pubkeys.size() != static_cast<unsigned long>(num_keys) || num_keys < required_sigs) return false;\n \n     return (it + 1 == script.end());\n }\n \n+std::optional<std::pair<int, std::vector<Span<const unsigned char>>>> MatchMultiA(const CScript& script)\n+{\n+    std::vector<Span<const unsigned char>> keyspans;\n+\n+    // Redundant, but very fast and selective test.\n+    if (script.size() == 0 || script[0] != 32 || script.back() != OP_NUMEQUAL) return {};\n+\n+    // Parse keys\n+    auto it = script.begin();\n+    while (script.end() - it >= 34) {\n+        if (*it != 32) return {};\n+        ++it;\n+        keyspans.emplace_back(&*it, 32);\n+        it += 32;\n+        if (*it != (keyspans.size() == 1 ? OP_CHECKSIG : OP_CHECKSIGADD)) return {};\n+        ++it;\n+    }\n+    if (keyspans.size() == 0 || keyspans.size() > (MAX_BLOCK_WEIGHT / 34)) return {};\n+\n+    // Parse threshold.\n+    opcodetype opcode;\n+    std::vector<unsigned char> data;\n+    if (!script.GetOp(it, opcode, data)) return {};\n+    if (it == script.end()) return {};\n+    if (*it != OP_NUMEQUAL) return {};\n+    ++it;\n+    if (it != script.end()) return {};\n+    int threshold;\n+    if (!GetMultisigKeyCount(opcode, data, threshold, (int)keyspans.size())) return {};\n+    if ((size_t)threshold > keyspans.size()) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782627474",
      "id" : 782627474,
      "line" : 174,
      "node_id" : "PRRC_kwDOABII584upfKS",
      "original_commit_id" : "9966b84894801879cda1d2639ab3da7f29be55e7",
      "original_line" : 174,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : 76,
      "pull_request_review_id" : 849852341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782627474/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-12T01:04:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782627474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6881849?v=4",
         "events_url" : "https://api.github.com/users/sanket1729/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sanket1729/followers",
         "following_url" : "https://api.github.com/users/sanket1729/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sanket1729/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sanket1729",
         "id" : 6881849,
         "login" : "sanket1729",
         "node_id" : "MDQ6VXNlcjY4ODE4NDk=",
         "organizations_url" : "https://api.github.com/users/sanket1729/orgs",
         "received_events_url" : "https://api.github.com/users/sanket1729/received_events",
         "repos_url" : "https://api.github.com/users/sanket1729/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sanket1729/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sanket1729"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23578](https://github.com/bitcoin/bitcoin/pull/23578) (Add external signer taproot support by Sjors)\n* [#23502](https://github.com/bitcoin/bitcoin/pull/23502) (wallet: Avoid underpaying transaction fees when signing taproot spends by achow101)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n* [#22558](https://github.com/bitcoin/bitcoin/pull/22558) (psbt: Taproot fields for PSBT by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-01-12T03:17:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#issuecomment-1010590949",
      "id" : 1010590949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24043",
      "node_id" : "IC_kwDOABII5848PGTl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1010590949/reactions"
      },
      "updated_at" : "2022-01-12T03:17:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1010590949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782696209"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782696209"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, good point. That's possibly a reason to set the limit to 999 instead (so that the first pubkey pushed doesn't push it past 1000).",
      "commit_id" : "2f247330f7e93a4d4d29bd8fbe18751d5f47c49f",
      "created_at" : "2022-01-12T04:13:05Z",
      "diff_hunk" : "@@ -23,6 +23,13 @@\n \n namespace {\n \n+/** Current maximum number of accepted public keys in a multi_a descriptor.\n+ *  The theoretical limit of what fits in 100000 vbytes is around 11418,\n+ *  but limit to a significantly smaller number to avoid running into\n+ *  transaction size limits when multiple of these occur in a transaction,\n+ *  and to keep descriptor strings of reasonable length. */\n+static constexpr unsigned int MAX_PUBKEYS_PER_MULTI_A = 512;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782696209",
      "id" : 782696209,
      "in_reply_to_id" : 782616034,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584upv8R",
      "original_commit_id" : "9966b84894801879cda1d2639ab3da7f29be55e7",
      "original_line" : 31,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 849955226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782696209/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-12T04:13:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782696209",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782697309"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782697309"
         }
      },
      "author_association" : "MEMBER",
      "body" : "With your comment above, probably.\n\nBut my thinking here was that the matching code shouldn't be as strict as the descriptors (in that signing should work if you happen to have a script that happens to exceed those policy-informed limits).\n\nBut if we set the limit to just 999, which appears to be the *consensus* limit, that's something the matcher should also use.",
      "commit_id" : "2f247330f7e93a4d4d29bd8fbe18751d5f47c49f",
      "created_at" : "2022-01-12T04:17:13Z",
      "diff_hunk" : "@@ -130,17 +131,53 @@ static bool MatchMultisig(const CScript& script, int& required_sigs, std::vector\n     CScript::const_iterator it = script.begin();\n     if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n \n-    if (!script.GetOp(it, opcode, data) || !GetMultisigKeyCount(opcode, data, required_sigs)) return false;\n+    if (!script.GetOp(it, opcode, data)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, required_sigs, MAX_PUBKEYS_PER_MULTISIG)) return false;\n     while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n         pubkeys.emplace_back(std::move(data));\n     }\n-    if (!GetMultisigKeyCount(opcode, data, num_keys)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, num_keys, MAX_PUBKEYS_PER_MULTISIG)) return false;\n \n     if (pubkeys.size() != static_cast<unsigned long>(num_keys) || num_keys < required_sigs) return false;\n \n     return (it + 1 == script.end());\n }\n \n+std::optional<std::pair<int, std::vector<Span<const unsigned char>>>> MatchMultiA(const CScript& script)\n+{\n+    std::vector<Span<const unsigned char>> keyspans;\n+\n+    // Redundant, but very fast and selective test.\n+    if (script.size() == 0 || script[0] != 32 || script.back() != OP_NUMEQUAL) return {};\n+\n+    // Parse keys\n+    auto it = script.begin();\n+    while (script.end() - it >= 34) {\n+        if (*it != 32) return {};\n+        ++it;\n+        keyspans.emplace_back(&*it, 32);\n+        it += 32;\n+        if (*it != (keyspans.size() == 1 ? OP_CHECKSIG : OP_CHECKSIGADD)) return {};\n+        ++it;\n+    }\n+    if (keyspans.size() == 0 || keyspans.size() > (MAX_BLOCK_WEIGHT / 34)) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r782697309",
      "id" : 782697309,
      "in_reply_to_id" : 782622388,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584upwNd",
      "original_commit_id" : "9966b84894801879cda1d2639ab3da7f29be55e7",
      "original_line" : 163,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 849956695,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782697309/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-12T04:17:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782697309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It seems like the distinction between the normal and `_a` variants is likely to cause confusion. Can we not support `multi` being smart enough to pick the right script? Is there a reason not to do that? How bad of a situation can exist if someone uses the wrong one?",
      "created_at" : "2022-01-12T08:02:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#issuecomment-1010748114",
      "id" : 1010748114,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24043",
      "node_id" : "IC_kwDOABII5848PsrS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1010748114/reactions"
      },
      "updated_at" : "2022-01-12T08:02:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1010748114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r783243411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/783243411"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've renamed/refactored this function in a new initial commit.",
      "commit_id" : "4828d53eccd52a67631c64cef0ba7df90dff138d",
      "created_at" : "2022-01-12T16:30:49Z",
      "diff_hunk" : "@@ -130,17 +131,53 @@ static bool MatchMultisig(const CScript& script, int& required_sigs, std::vector\n     CScript::const_iterator it = script.begin();\n     if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n \n-    if (!script.GetOp(it, opcode, data) || !GetMultisigKeyCount(opcode, data, required_sigs)) return false;\n+    if (!script.GetOp(it, opcode, data)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, required_sigs, MAX_PUBKEYS_PER_MULTISIG)) return false;\n     while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n         pubkeys.emplace_back(std::move(data));\n     }\n-    if (!GetMultisigKeyCount(opcode, data, num_keys)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, num_keys, MAX_PUBKEYS_PER_MULTISIG)) return false;\n \n     if (pubkeys.size() != static_cast<unsigned long>(num_keys) || num_keys < required_sigs) return false;\n \n     return (it + 1 == script.end());\n }\n \n+std::optional<std::pair<int, std::vector<Span<const unsigned char>>>> MatchMultiA(const CScript& script)\n+{\n+    std::vector<Span<const unsigned char>> keyspans;\n+\n+    // Redundant, but very fast and selective test.\n+    if (script.size() == 0 || script[0] != 32 || script.back() != OP_NUMEQUAL) return {};\n+\n+    // Parse keys\n+    auto it = script.begin();\n+    while (script.end() - it >= 34) {\n+        if (*it != 32) return {};\n+        ++it;\n+        keyspans.emplace_back(&*it, 32);\n+        it += 32;\n+        if (*it != (keyspans.size() == 1 ? OP_CHECKSIG : OP_CHECKSIGADD)) return {};\n+        ++it;\n+    }\n+    if (keyspans.size() == 0 || keyspans.size() > (MAX_BLOCK_WEIGHT / 34)) return {};\n+\n+    // Parse threshold.\n+    opcodetype opcode;\n+    std::vector<unsigned char> data;\n+    if (!script.GetOp(it, opcode, data)) return {};\n+    if (it == script.end()) return {};\n+    if (*it != OP_NUMEQUAL) return {};\n+    ++it;\n+    if (it != script.end()) return {};\n+    int threshold;\n+    if (!GetMultisigKeyCount(opcode, data, threshold, (int)keyspans.size())) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r783243411",
      "id" : 783243411,
      "in_reply_to_id" : 782626168,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ur1iT",
      "original_commit_id" : "9966b84894801879cda1d2639ab3da7f29be55e7",
      "original_line" : 173,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 850722387,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/783243411/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-12T16:30:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/783243411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r783243569"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/783243569"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "4828d53eccd52a67631c64cef0ba7df90dff138d",
      "created_at" : "2022-01-12T16:30:58Z",
      "diff_hunk" : "@@ -130,17 +131,53 @@ static bool MatchMultisig(const CScript& script, int& required_sigs, std::vector\n     CScript::const_iterator it = script.begin();\n     if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n \n-    if (!script.GetOp(it, opcode, data) || !GetMultisigKeyCount(opcode, data, required_sigs)) return false;\n+    if (!script.GetOp(it, opcode, data)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, required_sigs, MAX_PUBKEYS_PER_MULTISIG)) return false;\n     while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n         pubkeys.emplace_back(std::move(data));\n     }\n-    if (!GetMultisigKeyCount(opcode, data, num_keys)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, num_keys, MAX_PUBKEYS_PER_MULTISIG)) return false;\n \n     if (pubkeys.size() != static_cast<unsigned long>(num_keys) || num_keys < required_sigs) return false;\n \n     return (it + 1 == script.end());\n }\n \n+std::optional<std::pair<int, std::vector<Span<const unsigned char>>>> MatchMultiA(const CScript& script)\n+{\n+    std::vector<Span<const unsigned char>> keyspans;\n+\n+    // Redundant, but very fast and selective test.\n+    if (script.size() == 0 || script[0] != 32 || script.back() != OP_NUMEQUAL) return {};\n+\n+    // Parse keys\n+    auto it = script.begin();\n+    while (script.end() - it >= 34) {\n+        if (*it != 32) return {};\n+        ++it;\n+        keyspans.emplace_back(&*it, 32);\n+        it += 32;\n+        if (*it != (keyspans.size() == 1 ? OP_CHECKSIG : OP_CHECKSIGADD)) return {};\n+        ++it;\n+    }\n+    if (keyspans.size() == 0 || keyspans.size() > (MAX_BLOCK_WEIGHT / 34)) return {};\n+\n+    // Parse threshold.\n+    opcodetype opcode;\n+    std::vector<unsigned char> data;\n+    if (!script.GetOp(it, opcode, data)) return {};\n+    if (it == script.end()) return {};\n+    if (*it != OP_NUMEQUAL) return {};\n+    ++it;\n+    if (it != script.end()) return {};\n+    int threshold;\n+    if (!GetMultisigKeyCount(opcode, data, threshold, (int)keyspans.size())) return {};\n+    if ((size_t)threshold > keyspans.size()) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r783243569",
      "id" : 783243569,
      "in_reply_to_id" : 782627474,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ur1kx",
      "original_commit_id" : "9966b84894801879cda1d2639ab3da7f29be55e7",
      "original_line" : 174,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 850722609,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/783243569/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-12T16:30:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/783243569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r783243772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/783243772"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "4828d53eccd52a67631c64cef0ba7df90dff138d",
      "created_at" : "2022-01-12T16:31:11Z",
      "diff_hunk" : "@@ -130,17 +131,53 @@ static bool MatchMultisig(const CScript& script, int& required_sigs, std::vector\n     CScript::const_iterator it = script.begin();\n     if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n \n-    if (!script.GetOp(it, opcode, data) || !GetMultisigKeyCount(opcode, data, required_sigs)) return false;\n+    if (!script.GetOp(it, opcode, data)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, required_sigs, MAX_PUBKEYS_PER_MULTISIG)) return false;\n     while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n         pubkeys.emplace_back(std::move(data));\n     }\n-    if (!GetMultisigKeyCount(opcode, data, num_keys)) return false;\n+    if (!GetMultisigKeyCount(opcode, data, num_keys, MAX_PUBKEYS_PER_MULTISIG)) return false;\n \n     if (pubkeys.size() != static_cast<unsigned long>(num_keys) || num_keys < required_sigs) return false;\n \n     return (it + 1 == script.end());\n }\n \n+std::optional<std::pair<int, std::vector<Span<const unsigned char>>>> MatchMultiA(const CScript& script)\n+{\n+    std::vector<Span<const unsigned char>> keyspans;\n+\n+    // Redundant, but very fast and selective test.\n+    if (script.size() == 0 || script[0] != 32 || script.back() != OP_NUMEQUAL) return {};\n+\n+    // Parse keys\n+    auto it = script.begin();\n+    while (script.end() - it >= 34) {\n+        if (*it != 32) return {};\n+        ++it;\n+        keyspans.emplace_back(&*it, 32);\n+        it += 32;\n+        if (*it != (keyspans.size() == 1 ? OP_CHECKSIG : OP_CHECKSIGADD)) return {};\n+        ++it;\n+    }\n+    if (keyspans.size() == 0 || keyspans.size() > (MAX_BLOCK_WEIGHT / 34)) return {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#discussion_r783243772",
      "id" : 783243772,
      "in_reply_to_id" : 782622388,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ur1n8",
      "original_commit_id" : "9966b84894801879cda1d2639ab3da7f29be55e7",
      "original_line" : 163,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 850722900,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/783243772/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-12T16:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/783243772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr I like to keep the invariant that every \"function\" in descriptors (and later, miniscript) refer to the same opcode construction.\r\n\r\nThe reason is that while for this example it's unambiguous (multi only in toplevel/sh/wsh, multi_a only in tr), that's not going to be the case for all (or in the case of miniscript, even most) functions. So there will inevitably be constructions with variants which cannot be derived from the context, and given that it seems more consistent to keep the contextual smartness out of this.",
      "created_at" : "2022-01-12T16:35:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#issuecomment-1011234971",
      "id" : 1011234971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24043",
      "node_id" : "IC_kwDOABII5848Rjib",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011234971/reactions"
      },
      "updated_at" : "2022-01-12T16:44:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011234971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "How about erroring if they're used in the wrong context?",
      "created_at" : "2022-01-12T18:06:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#issuecomment-1011316120",
      "id" : 1011316120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24043",
      "node_id" : "IC_kwDOABII5848R3WY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011316120/reactions"
      },
      "updated_at" : "2022-01-12T18:06:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011316120",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr They do (even before this PR).",
      "created_at" : "2022-01-12T18:08:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#issuecomment-1011317017",
      "id" : 1011317017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24043",
      "node_id" : "IC_kwDOABII5848R3kZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011317017/reactions"
      },
      "updated_at" : "2022-01-12T18:14:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011317017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The multi_a script construction is (slightly) suboptimal for n-of-n (where...\r\n\r\nIsn't it also suboptimal for m-of-n where the permutations are sufficiently tractable to go in separate leaves? There may even be a privacy benefit to never revealing N. Neither is an objection to this descriptor though.",
      "created_at" : "2022-01-12T18:35:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24043#issuecomment-1011339595",
      "id" : 1011339595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24043",
      "node_id" : "IC_kwDOABII5848R9FL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011339595/reactions"
      },
      "updated_at" : "2022-01-12T18:35:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1011339595",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
