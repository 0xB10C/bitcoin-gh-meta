[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730313233"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730313233"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`if line and bail_line.lower() in line.lower()` and `(time.time() - start) > MAX_SECS_TO_WAIT` sigterm_node() will be called twice, is this the intention? ",
      "commit_id" : "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "created_at" : "2021-10-16T21:00:56Z",
      "diff_hunk" : "@@ -0,0 +1,161 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+                    sigterm_node()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730313233",
      "id" : 730313233,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII584rh7IR",
      "original_commit_id" : "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "test/functional/stress_init.py",
      "position" : 84,
      "pull_request_review_id" : 781389546,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730313233/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-16T21:00:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730313233",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730390464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730390464"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this would be called `feature_init`, no?",
      "commit_id" : "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "created_at" : "2021-10-17T10:19:26Z",
      "diff_hunk" : "@@ -275,6 +275,7 @@\n     'wallet_taproot.py',\n     'p2p_fingerprint.py',\n     'feature_uacomment.py',\n+    'stress_init.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730390464",
      "id" : 730390464,
      "line" : 278,
      "node_id" : "PRRC_kwDOABII584riN_A",
      "original_commit_id" : "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "original_line" : 278,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_runner.py",
      "position" : 4,
      "pull_request_review_id" : 781432011,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730390464/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-17T10:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730390464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Strong Concept ACK\r\n\r\nFunctional testing, unit testing, fuzz testing and now stress testing: great to see!\r\n\r\nFault injection testing and mutation testing next in line? :)",
      "created_at" : "2021-10-17T19:30:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-945181371",
      "id" : 945181371,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23289",
      "node_id" : "IC_kwDOABII5844VlK7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/945181371/reactions"
      },
      "updated_at" : "2021-10-17T19:30:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/945181371",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730579472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730579472"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it won't happen, as there is a `break` after these conditions.",
      "commit_id" : "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "created_at" : "2021-10-18T05:27:49Z",
      "diff_hunk" : "@@ -0,0 +1,161 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+                    sigterm_node()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730579472",
      "id" : 730579472,
      "in_reply_to_id" : 730313233,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII584ri8IQ",
      "original_commit_id" : "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "test/functional/stress_init.py",
      "position" : 84,
      "pull_request_review_id" : 781599853,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730579472/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-18T05:30:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730579472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84432093?v=4",
         "events_url" : "https://api.github.com/users/lsilva01/events{/privacy}",
         "followers_url" : "https://api.github.com/users/lsilva01/followers",
         "following_url" : "https://api.github.com/users/lsilva01/following{/other_user}",
         "gists_url" : "https://api.github.com/users/lsilva01/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/lsilva01",
         "id" : 84432093,
         "login" : "lsilva01",
         "node_id" : "MDQ6VXNlcjg0NDMyMDkz",
         "organizations_url" : "https://api.github.com/users/lsilva01/orgs",
         "received_events_url" : "https://api.github.com/users/lsilva01/received_events",
         "repos_url" : "https://api.github.com/users/lsilva01/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/lsilva01/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/lsilva01"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r731096739"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/731096739"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep sure, will change.",
      "commit_id" : "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "created_at" : "2021-10-18T16:11:30Z",
      "diff_hunk" : "@@ -275,6 +275,7 @@\n     'wallet_taproot.py',\n     'p2p_fingerprint.py',\n     'feature_uacomment.py',\n+    'stress_init.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r731096739",
      "id" : 731096739,
      "in_reply_to_id" : 730390464,
      "line" : 278,
      "node_id" : "PRRC_kwDOABII584rk6aj",
      "original_commit_id" : "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "original_line" : 278,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_runner.py",
      "position" : 4,
      "pull_request_review_id" : 782291751,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/731096739/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-18T16:11:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/731096739",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r731168310"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/731168310"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "True! Thanks! missed that break",
      "commit_id" : "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "created_at" : "2021-10-18T17:44:09Z",
      "diff_hunk" : "@@ -0,0 +1,161 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+                    sigterm_node()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r731168310",
      "id" : 731168310,
      "in_reply_to_id" : 730313233,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII584rlL42",
      "original_commit_id" : "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "original_line" : 84,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "test/functional/stress_init.py",
      "position" : 84,
      "pull_request_review_id" : 782388382,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/731168310/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-18T17:44:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/731168310",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code Review ACK 71ba24a724556af02901d2aa06a71d24e18f6f3c\r\n\r\nThis is great, and is very helpful for testing initialization! Thank you James!\r\n\r\n<details>\r\n <summary>Naive idea</summary>\r\n Since GDB has a Python API, perhaps someone can use that for more granular stress testing (shouldn't be in this PR since it seems like quite a large undertaking)\r\n</details>",
      "created_at" : "2021-10-19T16:30:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-946896373",
      "id" : 946896373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23289",
      "node_id" : "IC_kwDOABII5844cH31",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/946896373/reactions"
      },
      "updated_at" : "2021-10-19T16:30:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/946896373",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   }
]
