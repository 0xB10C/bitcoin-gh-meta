[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24804#discussion_r845794437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845794437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The CI whitespace linter needs appeasing by removing the extra spaces here. You can test this locally on the command line by running `test/lint/lint-whitespace.sh` in this branch from your local bitcoin repo root.",
      "commit_id" : "d29764983605ddc27d81cbd7df6f18df2f75ccb0",
      "created_at" : "2022-04-08T07:00:11Z",
      "diff_hunk" : "@@ -446,16 +446,17 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     BOOST_CHECK(CheckFinalTxAtTip(m_node.chainman->ActiveChain().Tip(), CTransaction{tx})); // Locktime passes\n     BOOST_CHECK(!TestSequenceLocks(CTransaction{tx})); // Sequence locks fail\n \n-    for (int i = 0; i < CBlockIndex::nMedianTimeSpan; i++)\n-        m_node.chainman->ActiveChain().Tip()->GetAncestor(m_node.chainman->ActiveChain().Tip()->nHeight - i)->nTime += 512; //Trick the MedianTimePast\n-\n+    const int SEQUENCE_LOCK_TIME = 512; // Sequence locks pass 512 seconds later\n+    for (int i = 0; i < CBlockIndex::nMedianTimeSpan; ++i)\n+        m_node.chainman->ActiveChain().Tip()->GetAncestor(m_node.chainman->ActiveChain().Tip()->nHeight - i)->nTime += SEQUENCE_LOCK_TIME; //Trick the MedianTimePast\n+        ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24804#discussion_r845794437",
      "id" : 845794437,
      "line" : 452,
      "node_id" : "PRRC_kwDOABII584yacyF",
      "original_commit_id" : "d29764983605ddc27d81cbd7df6f18df2f75ccb0",
      "original_line" : 452,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/test/miner_tests.cpp",
      "position" : 10,
      "pull_request_review_id" : 935981169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845794437/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-08T07:12:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845794437",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24804#discussion_r845796626"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845796626"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please use clang-format for the bracket here (like in the previous version of this pull).",
      "commit_id" : "d29764983605ddc27d81cbd7df6f18df2f75ccb0",
      "created_at" : "2022-04-08T07:03:38Z",
      "diff_hunk" : "@@ -501,8 +502,12 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     // For now these will still generate a valid template until BIP68 soft fork\n     BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 3U);\n     // However if we advance height by 1 and time by 512, all of them should be mined\n-    for (int i = 0; i < CBlockIndex::nMedianTimeSpan; i++)\n-        m_node.chainman->ActiveChain().Tip()->GetAncestor(m_node.chainman->ActiveChain().Tip()->nHeight - i)->nTime += 512; //Trick the MedianTimePast\n+    for (int i = 0; i < CBlockIndex::nMedianTimeSpan; ++i)\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24804#discussion_r845796626",
      "id" : 845796626,
      "line" : 506,
      "node_id" : "PRRC_kwDOABII584yadUS",
      "original_commit_id" : "d29764983605ddc27d81cbd7df6f18df2f75ccb0",
      "original_line" : 506,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/test/miner_tests.cpp",
      "position" : 30,
      "pull_request_review_id" : 935981169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845796626/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-08T07:06:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845796626",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24804#discussion_r845901951"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845901951"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It looks like these 4 lines were superceded in a7469bcd356 and can be removed here",
      "commit_id" : "d29764983605ddc27d81cbd7df6f18df2f75ccb0",
      "created_at" : "2022-04-08T09:03:28Z",
      "diff_hunk" : "@@ -109,6 +109,10 @@ BIP9Stats AbstractThresholdConditionChecker::GetStateStatisticsFor(const CBlockI\n \n     // Find how many blocks are in the current period\n     int blocks_in_period = 1 + (pindex->nHeight % stats.period);\n+    // Find beginning of period\n+    const CBlockIndex* pindexEndOfPrevPeriod = pindex->GetAncestor(pindex->nHeight - ((pindex->nHeight + 1) % stats.period));\n+    assert(pindexEndOfPrevPeriod != nullptr);\n+    stats.elapsed = pindex->nHeight - pindexEndOfPrevPeriod->nHeight;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24804#discussion_r845901951",
      "id" : 845901951,
      "line" : 115,
      "node_id" : "PRRC_kwDOABII584ya3B_",
      "original_commit_id" : "d29764983605ddc27d81cbd7df6f18df2f75ccb0",
      "original_line" : 115,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/versionbits.cpp",
      "position" : 7,
      "pull_request_review_id" : 936141051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845901951/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-08T09:04:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/845901951",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK with some suggestions for the lines touched here\r\n\r\n<details><summary>suggested diff for your perusal</summary><p>\r\n\r\n```diff\r\ndiff --git a/src/consensus/tx_verify.cpp b/src/consensus/tx_verify.cpp\r\nindex 4f00d6e094..eb731ba205 100644\r\n--- a/src/consensus/tx_verify.cpp\r\n+++ b/src/consensus/tx_verify.cpp\r\n@@ -76,7 +80,7 @@ std::pair<int, int64_t> CalculateSequenceLocks(const CTransaction &tx, int flags\r\n             assert(ancestor != nullptr);\r\n-            int64_t nCoinTime = ancestor->GetMedianTimePast();\r\n+            const int64_t nCoinTime = ancestor->GetMedianTimePast();\r\n             // NOTE: Subtract 1 to maintain nLockTime semantics\r\ndiff --git a/src/consensus/tx_verify.h b/src/consensus/tx_verify.h\r\nindex 1209c0faa5..1386b029f5 100644\r\n--- a/src/consensus/tx_verify.h\r\n+++ b/src/consensus/tx_verify.h\r\n@@ -446,17 +446,16 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\r\n     BOOST_CHECK(!TestSequenceLocks(CTransaction{tx})); // Sequence locks fail\r\n \r\n-    const int SEQUENCE_LOCK_TIME = 512; // Sequence locks pass 512 seconds later\r\n-    for (int i = 0; i < CBlockIndex::nMedianTimeSpan; ++i)\r\n-        m_node.chainman->ActiveChain().Tip()->GetAncestor(m_node.chainman->ActiveChain().Tip()->nHeight - i)->nTime += SEQUENCE_LOCK_TIME; //Trick the MedianTimePast\r\n-        \r\n-    {\r\n+    const int SEQUENCE_LOCK_TIME{512}; // Sequence locks pass 512 seconds later\r\n+    for (int i = 0; i < CBlockIndex::nMedianTimeSpan; ++i) {\r\n+        m_node.chainman->ActiveChain().Tip()->GetAncestor(m_node.chainman->ActiveChain().Tip()->nHeight - i)->nTime += SEQUENCE_LOCK_TIME; // Trick the MedianTimePast\r\n         CBlockIndex* active_chain_tip = m_node.chainman->ActiveChain().Tip();\r\n-        BOOST_CHECK(SequenceLocks(CTransaction(tx), flags, prevheights, CreateBlockIndex(active_chain_tip->nHeight + 1, active_chain_tip))); // Sequence locks pass 512 seconds later\r\n+        BOOST_CHECK(SequenceLocks(CTransaction(tx), flags, prevheights, CreateBlockIndex(active_chain_tip->nHeight + 1, active_chain_tip)));\r\n     }\r\n \r\n-    for (int i = 0; i < CBlockIndex::nMedianTimeSpan; ++i)\r\n-        m_node.chainman->ActiveChain().Tip()->GetAncestor(m_node.chainman->ActiveChain().Tip()->nHeight - i)->nTime -= SEQUENCE_LOCK_TIME; //undo tricked MTP\r\n+    for (int i = 0; i < CBlockIndex::nMedianTimeSpan; ++i) {\r\n+        m_node.chainman->ActiveChain().Tip()->GetAncestor(m_node.chainman->ActiveChain().Tip()->nHeight - i)->nTime -= SEQUENCE_LOCK_TIME; // undo tricked MTP\r\n+    }\r\n \r\n     // absolute height locked\r\n@@ -501,9 +500,9 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\r\n     BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 3U);\r\n-    // However if we advance height by 1 and time by 512, all of them should be mined\r\n-    for (int i = 0; i < CBlockIndex::nMedianTimeSpan; ++i)\r\n-    {\r\n+    // However, if we advance height by 1 and time by SEQUENCE_LOCK_TIME, all of\r\n+    // them should be mined.\r\n+    for (int i = 0; i < CBlockIndex::nMedianTimeSpan; ++i) {\r\n         CBlockIndex* ancestor = m_node.chainman->ActiveChain().Tip()->GetAncestor(m_node.chainman->ActiveChain().Tip()->nHeight - i);\r\n         assert(ancestor != nullptr);\r\n         ancestor->nTime += SEQUENCE_LOCK_TIME; // Trick the MedianTimePast\r\ndiff --git a/src/versionbits.cpp b/src/versionbits.cpp\r\nindex 9218c6bf26..934bfb015f 100644\r\n--- a/src/versionbits.cpp\r\n+++ b/src/versionbits.cpp\r\n@@ -109,10 +109,6 @@ BIP9Stats AbstractThresholdConditionChecker::GetStateStatisticsFor(const CBlockI\r\n \r\n     // Find how many blocks are in the current period\r\n     int blocks_in_period = 1 + (pindex->nHeight % stats.period);\r\n-    // Find beginning of period\r\n-    const CBlockIndex* pindexEndOfPrevPeriod = pindex->GetAncestor(pindex->nHeight - ((pindex->nHeight + 1) % stats.period));\r\n-    assert(pindexEndOfPrevPeriod != nullptr);\r\n-    stats.elapsed = pindex->nHeight - pindexEndOfPrevPeriod->nHeight;\r\n \r\n     // Reset signalling_blocks\r\n```\r\n</p></details>\r\n",
      "created_at" : "2022-04-08T09:08:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24804#issuecomment-1092630122",
      "id" : 1092630122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24804",
      "node_id" : "IC_kwDOABII585BIDZq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092630122/reactions"
      },
      "updated_at" : "2022-04-08T09:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092630122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
