[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r851517641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517641"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\nfrom test_framework.blocktools import create_coinbase\r\n```",
      "commit_id" : "35432901b42c27e0ee0abe2a32a4d13e10ab14cc",
      "created_at" : "2022-04-15T21:13:32Z",
      "diff_hunk" : "@@ -0,0 +1,161 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import (\n+    assert_raises_rpc_error,\n+)\n+\n+from test_framework.blocktools import (create_coinbase)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r851517641",
      "id" : 851517641,
      "line" : 13,
      "node_id" : "PRRC_kwDOABII584ywSDJ",
      "original_commit_id" : "35432901b42c27e0ee0abe2a32a4d13e10ab14cc",
      "original_line" : 13,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 13,
      "pull_request_review_id" : 943745563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517641/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-15T21:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/17150045?v=4",
         "events_url" : "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vincenzopalazzo/followers",
         "following_url" : "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vincenzopalazzo",
         "id" : 17150045,
         "login" : "vincenzopalazzo",
         "node_id" : "MDQ6VXNlcjE3MTUwMDQ1",
         "organizations_url" : "https://api.github.com/users/vincenzopalazzo/orgs",
         "received_events_url" : "https://api.github.com/users/vincenzopalazzo/received_events",
         "repos_url" : "https://api.github.com/users/vincenzopalazzo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vincenzopalazzo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vincenzopalazzo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r851517958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517958"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n\r\n\r\nclass WalletPruningTest(BitcoinTestFramework):\r\n```\r\n\r\nUsualy in python there are two spaces between class and the last import declaration",
      "commit_id" : "35432901b42c27e0ee0abe2a32a4d13e10ab14cc",
      "created_at" : "2022-04-15T21:14:13Z",
      "diff_hunk" : "@@ -0,0 +1,161 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import (\n+    assert_raises_rpc_error,\n+)\n+\n+from test_framework.blocktools import (create_coinbase)\n+from test_framework.messages import CBlock\n+from test_framework.script import (\n+    CScript,\n+    OP_NOP,\n+    OP_RETURN,\n+)\n+from test_framework.wallet_util import (\n+    get_key,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class WalletPruningTest(BitcoinTestFramework):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r851517958",
      "id" : 851517958,
      "line" : 25,
      "node_id" : "PRRC_kwDOABII584ywSIG",
      "original_commit_id" : "35432901b42c27e0ee0abe2a32a4d13e10ab14cc",
      "original_line" : 25,
      "original_position" : 25,
      "original_start_line" : 24,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 25,
      "pull_request_review_id" : 943745563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517958/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 24,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-15T21:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851517958",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/17150045?v=4",
         "events_url" : "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vincenzopalazzo/followers",
         "following_url" : "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vincenzopalazzo",
         "id" : 17150045,
         "login" : "vincenzopalazzo",
         "node_id" : "MDQ6VXNlcjE3MTUwMDQ1",
         "organizations_url" : "https://api.github.com/users/vincenzopalazzo/orgs",
         "received_events_url" : "https://api.github.com/users/vincenzopalazzo/received_events",
         "repos_url" : "https://api.github.com/users/vincenzopalazzo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vincenzopalazzo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vincenzopalazzo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2022-04-16T06:33:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1100586603",
      "id" : 1100586603,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585BmZ5r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100586603/reactions"
      },
      "updated_at" : "2022-04-27T10:38:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100586603",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r885807339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885807339"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If we're reusing helper functions, perhaps we should extract them to a single place in a follow-up PR.",
      "commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "created_at" : "2022-05-31T15:47:11Z",
      "diff_hunk" : "@@ -0,0 +1,157 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.script import (\n+    CScript,\n+    OP_NOP,\n+    OP_RETURN,\n+)\n+from test_framework.wallet_util import get_key\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Taken from test/functional/feature_pruning.py",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r885807339",
      "id" : 885807339,
      "line" : 24,
      "node_id" : "PRRC_kwDOABII5840zFjr",
      "original_commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "original_line" : 24,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 24,
      "pull_request_review_id" : 990700101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885807339/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T16:00:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885807339",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r885820729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885820729"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This looks good to me, but perhaps it would be more comprehensive to learn the birthheight or first transaction's height from the wallet, and check/assert here that the corresponding block has been pruned.",
      "commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "created_at" : "2022-05-31T15:59:51Z",
      "diff_hunk" : "@@ -0,0 +1,157 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test wallet import on pruned node.\"\"\"\n+import os\n+\n+from test_framework.util import assert_raises_rpc_error\n+from test_framework.blocktools import create_coinbase\n+from test_framework.messages import CBlock\n+from test_framework.script import (\n+    CScript,\n+    OP_NOP,\n+    OP_RETURN,\n+)\n+from test_framework.wallet_util import get_key\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class WalletPruningTest(BitcoinTestFramework):\n+    nTime = 0\n+    def mine_large_blocks(self, node, n):\n+        # Taken from test/functional/feature_pruning.py\n+\n+        # Make a large scriptPubKey for the coinbase transaction. This is OP_RETURN\n+        # followed by 950k of OP_NOP. This would be non-standard in a non-coinbase\n+        # transaction but is consensus valid.\n+\n+        # Get the block parameters for the first block\n+        big_script = CScript([OP_RETURN] + [OP_NOP] * 950000)\n+        best_block = node.getblock(node.getbestblockhash())\n+        height = int(best_block[\"height\"]) + 1\n+        self.nTime = max(self.nTime, int(best_block[\"time\"])) + 1\n+        previousblockhash = int(best_block[\"hash\"], 16)\n+\n+        for _ in range(n):\n+            # Build the coinbase transaction (with large scriptPubKey)\n+            coinbase_tx = create_coinbase(height)\n+            coinbase_tx.vin[0].nSequence = 2 ** 32 - 1\n+            coinbase_tx.vout[0].scriptPubKey = big_script\n+            coinbase_tx.rehash()\n+\n+            # Build the block\n+            block = CBlock()\n+            block.nVersion = best_block[\"version\"]\n+            block.hashPrevBlock = previousblockhash\n+            block.nTime = self.nTime\n+            block.nBits = int('207fffff', 16)\n+            block.nNonce = 0\n+            block.vtx = [coinbase_tx]\n+            block.hashMerkleRoot = block.calc_merkle_root()\n+            block.solve()\n+\n+            # Submit to the node\n+            node.submitblock(block.serialize().hex())\n+\n+            previousblockhash = block.sha256\n+            height += 1\n+\n+            # Simulate 10 minutes of work time per block\n+            # Important for matching a timestamp with a block +- some window\n+            self.nTime += 600\n+            for n in self.nodes:\n+                n.setmocktime(self.nTime) # Update nodes' time to accept future blocks\n+\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [], # node dedicated to mining\n+            ['-prune=550'], # node dedicated to testing pruning\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        self.connect_nodes(0, 1)\n+        self.sync_all(self.nodes)\n+\n+    def create_big_chain(self):\n+        self.log.info(\"Generating a long chain of blocks...\")\n+        # Generate 288 light blocks, the minimum required to stay on disk with prune enabled\n+        self.generate(self.nodes[0], 288, sync_fun=lambda: self.sync_all(self.nodes))\n+\n+        # Generate large blocks to make sure we have enough to test chain pruning\n+        self.mine_large_blocks(self.nodes[0], 610)\n+        self.sync_all(self.nodes)\n+\n+    def wallet_import_pruned_test(self):\n+        self.log.info(\"Make sure we can import wallet when pruned and required blocks are still available\")\n+\n+        wname = \"wallet_pruned.dat\"\n+\n+        # export wallet\n+        self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, wname))\n+        # import wallet\n+        self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, wname))\n+\n+        timestamp = self.nodes[1].getblock(self.nodes[1].getbestblockhash())['mediantime']\n+\n+        # Test importmulti\n+        key = get_key(self.nodes[1])\n+        self.nodes[1].importmulti([{\"scriptPubKey\": {\"address\": key.p2pkh_addr},\n+                               \"timestamp\": 'now'}])\n+\n+        self.nodes[1].importmulti([{\"scriptPubKey\": {\"address\": key.p2pkh_addr},\n+                               \"timestamp\": timestamp}])\n+\n+        # mine some blocks, pruning should not have removed the block\n+        self.mine_large_blocks(self.nodes[0], 5)\n+        self.sync_all(self.nodes)\n+\n+        # import wallet, should still work\n+        self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, wname))\n+\n+        # test with importmulti\n+        self.nodes[1].importmulti([{\"scriptPubKey\": {\"address\": key.p2pkh_addr},\n+                               \"timestamp\": timestamp}])\n+\n+        self.log.info(\"Wallet successfully imported on pruned node\")\n+\n+    def wallet_import_pruned_missing_blocks(self):\n+        self.log.info(\"Make sure we cannot import wallet when pruned and required blocks are not available\")\n+\n+        wname = \"wallet_pruned_missing_blocks.dat\"\n+        # export wallet\n+        self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, wname))\n+\n+        # mine large blocks, blocks will be pruned automatically\n+        self.mine_large_blocks(self.nodes[0], 150)\n+        self.sync_all(self.nodes)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r885820729",
      "id" : 885820729,
      "line" : 136,
      "node_id" : "PRRC_kwDOABII5840zI05",
      "original_commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "original_line" : 136,
      "original_position" : 136,
      "original_start_line" : null,
      "path" : "test/functional/wallet_pruning.py",
      "position" : 136,
      "pull_request_review_id" : 990700101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885820729/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T16:00:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885820729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r901998188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901998188"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 46b7f731b1e98b0836c5b97cd99c0887d6173a17 \"rpc: Enable wallet import on pruned nodes and add test\"\r\n\r\nWe don't want to do this for `importmulti`. `importmulti` can have some imports succeed, and others fail. Just because one import has an out of range timestamp does not mean the entire import should fail the RPC. This check would result in a JSONRPCError which is not what we expect from `importmulti` - rather there should be an error per import that has a too old timestamp.\r\n\r\nFurthermore, we already handle the pruned node case. If the rescan reports a time that is more recent than the timestamp for a given import, we will give an error for that import with more details about what happened, maybe why it happened, and how the user can resolve it.",
      "commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "created_at" : "2022-06-20T21:06:17Z",
      "diff_hunk" : "@@ -1383,6 +1388,8 @@ RPCHelpMan importmulti()\n                 nLowestTimestamp = timestamp;\n             }\n         }\n+\n+        EnsureBlockDataFromTime(pwallet->chain(), nLowestTimestamp);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#discussion_r901998188",
      "id" : 901998188,
      "line" : 1392,
      "node_id" : "PRRC_kwDOABII5841w2Zs",
      "original_commit_id" : "46b7f731b1e98b0836c5b97cd99c0887d6173a17",
      "original_line" : 1392,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 78,
      "pull_request_review_id" : 1012746916,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24865",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901998188/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T21:09:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901998188",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you for your thorough review @kouloumos !\r\nI believe I have addressed all of your comments.",
      "created_at" : "2022-07-20T07:25:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24865#issuecomment-1189924780",
      "id" : 1189924780,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24865",
      "node_id" : "IC_kwDOABII585G7M-s",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1189924780/reactions"
      },
      "updated_at" : "2022-07-20T07:25:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1189924780",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   }
]
