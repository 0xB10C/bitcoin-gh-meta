[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [Fi3](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587152706) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26966](https://github.com/bitcoin/bitcoin/pull/26966) (index: blockfilter initial sync speedup, parallelize process by furszy)\n* [#24539](https://github.com/bitcoin/bitcoin/pull/24539) (Add a \"tx output spender\" index by sstone)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-06-11T08:54:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1586080747",
      "id" : 1586080747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585eiavr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1586080747/reactions"
      },
      "updated_at" : "2023-06-12T11:35:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1586080747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "What are the reasons for not having this as a separate piece of software that calls the Bitcoin Core RPCs? From glancing at the code here it seems like `getblocktemplate` and `submitblock` would be the only needed RPCs. I've seen the discussion about separation (multi-process) in https://github.com/bitcoin/bitcoin/pull/23049 but wasn't convinced by the arguments there (e.g. https://github.com/bitcoin/bitcoin/pull/23049#issuecomment-926009122). I am worried about the maintenance burden of this and would prefer it being a separate thing.\r\n\r\nIf stratumv3 or \"some other cool new mining protocol\" comes out tomorrow, are we gonna add support for that too? In my opinion, Bitcoin Core's interfaces should accommodate projects like this but direct integration should be reserved for strictly necessary things.",
      "created_at" : "2023-06-12T09:53:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1586988190",
      "id" : 1586988190,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585el4Se",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1586988190/reactions"
      },
      "updated_at" : "2023-06-12T09:53:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1586988190",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "One reason is that `getblocktemplate` require polling bitcoind where `NewTemplate` will be pushed by bitcoind. What you call stratumV3 would likely be an extension of Sv2 and will likley use the same binary data format and framing of Sv2.\r\n\r\n",
      "created_at" : "2023-06-12T11:01:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587095727",
      "id" : 1587095727,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585emSiv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587095727/reactions"
      },
      "updated_at" : "2023-06-12T11:01:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587095727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6207037?v=4",
         "events_url" : "https://api.github.com/users/Fi3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Fi3/followers",
         "following_url" : "https://api.github.com/users/Fi3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Fi3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Fi3",
         "id" : 6207037,
         "login" : "Fi3",
         "node_id" : "MDQ6VXNlcjYyMDcwMzc=",
         "organizations_url" : "https://api.github.com/users/Fi3/orgs",
         "received_events_url" : "https://api.github.com/users/Fi3/received_events",
         "repos_url" : "https://api.github.com/users/Fi3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Fi3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Fi3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Fi3"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> One reason is that getblocktemplate require polling bitcoind where NewTemplate will be pushed by bitcoind.\r\n\r\nI'm imagining a separate process `stratumv2d` that implements the server from this PR but polls the block template through `getblocktemplate` instead of using the BlockAssembler directly (which is equivalent to a poll, minus the rpc roundtrip). stratumv2d could then still push template updates after polling from bitcoind.\r\n\r\n> What you call stratumV3 would likely be an extension of Sv2 and will likley use the same binary data format and framing of Sv2.\r\n\r\nI was just trying to make a point about Bitcoin Core probably not wanting to support every mining protocol that will ever exist.",
      "created_at" : "2023-06-12T11:12:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587116056",
      "id" : 1587116056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585emXgY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587116056/reactions"
      },
      "updated_at" : "2023-06-12T11:12:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587116056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> I'm imagining a separate process stratumv2d that implements the server from this PR but polls the block template through getblocktemplate instead of using the BlockAssembler directly (which is equivalent to a poll, minus the rpc roundtrip). stratumv2d could then still push template updates after polling from bitcoind.\r\n\r\nhaving it implemented into bitcoind is not a big change and will allow more flexibility  when templates are pushed respect to just poll  `getblocktemplate`\r\n\r\n> I was just trying to make a point about Bitcoin Core probably not wanting to support every mining protocol that will ever exist.\r\n\r\nSure, and I agree. What I want to say is that in the case of an improvement of Sv2 that needs new/different messages to be supported by bitcoind these messages will use the same data format and framing' proposed here. So there wont be the need to support a completely new protocol.  \r\n\r\n' please note that the framing implemented if this PR is not the one on the spec so when I say the one proposed here I mean the one that is specified in the Sv2 spec.  The framing will be updated if there will be sufficient support for an concept ACK\r\n\r\n",
      "created_at" : "2023-06-12T11:35:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587152706",
      "id" : 1587152706,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585emgdC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587152706/reactions"
      },
      "updated_at" : "2023-06-12T12:32:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587152706",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6207037?v=4",
         "events_url" : "https://api.github.com/users/Fi3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Fi3/followers",
         "following_url" : "https://api.github.com/users/Fi3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Fi3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Fi3",
         "id" : 6207037,
         "login" : "Fi3",
         "node_id" : "MDQ6VXNlcjYyMDcwMzc=",
         "organizations_url" : "https://api.github.com/users/Fi3/orgs",
         "received_events_url" : "https://api.github.com/users/Fi3/received_events",
         "repos_url" : "https://api.github.com/users/Fi3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Fi3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Fi3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Fi3"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> having it implemented into bitcoind is not a big change and will allow more flexibility in when templates are pushed respect to just poll getblocktemplate\r\n\r\nWhat are you thinking of in terms of flexibility that the current interfaces do not offer? I can't think of anything that would not work by using the current interfaces or exposing extra functionality through them. For example, looking at Matt's comment https://github.com/bitcoin/bitcoin/pull/23049#issuecomment-926009122:\r\n\r\n> do things like pre-construct next-next-block templates in advance and push them out quicker\r\n\r\nThis is not something we currently support and would (afaik) require significant changes to our mining/mempool logic (entirely separate of any stratum v2 changes). Once we have that functionality we should expose it through our interfaces (e.g. zmq, rpc, rest) such that applications like stratum v2 can make use of it.\r\n\r\n> the inefficiencies of getblocktemplate have been a real source of pain for pool operators for some time, I'm excited its going away.\r\n\r\nCorrect me if I'm wrong but the inefficiencies of `getblocktemplate` (for the most part) stem from the underlying mining algorithm's runtime complexity. This is not something that stratum v2 magically solves.",
      "created_at" : "2023-06-12T13:08:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587311912",
      "id" : 1587311912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585enHUo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587311912/reactions"
      },
      "updated_at" : "2023-06-12T13:08:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587311912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Can not answer about Matt comment. (@TheBlueMatt maybe can clarify?)\r\n\r\nWhat I intended is  for example create a new template as soon as txs in mempool allow creations of new template with a fee amount that is bigger than x than the one of last created template. Or create a future template based on the one that miner is mining (next-next-block). \r\n\r\n> This is not something we currently support and would (afaik) require significant changes to our mining/mempool logic (entirely separate of any stratum v2 changes). Once we have that functionality we should expose it through our interfaces (e.g. zmq, rpc, rest) such that applications like stratum v2 can make use of it.\r\n\r\nIt make sense to me. But I would like to know also Matt opinion on that. ",
      "created_at" : "2023-06-12T13:28:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587347653",
      "id" : 1587347653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585enQDF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587347653/reactions"
      },
      "updated_at" : "2023-06-12T13:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587347653",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6207037?v=4",
         "events_url" : "https://api.github.com/users/Fi3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Fi3/followers",
         "following_url" : "https://api.github.com/users/Fi3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Fi3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Fi3",
         "id" : 6207037,
         "login" : "Fi3",
         "node_id" : "MDQ6VXNlcjYyMDcwMzc=",
         "organizations_url" : "https://api.github.com/users/Fi3/orgs",
         "received_events_url" : "https://api.github.com/users/Fi3/received_events",
         "repos_url" : "https://api.github.com/users/Fi3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Fi3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Fi3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Fi3"
      }
   }
]
