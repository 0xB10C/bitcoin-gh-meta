[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/27884#pullrequestreview-1483187680), [willcl-ark](https://github.com/bitcoin/bitcoin/pull/27884#issuecomment-1594548189) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#20892](https://github.com/bitcoin/bitcoin/pull/20892) (tests: Run both descriptor and legacy tests within a single test invocation by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-06-14T10:31:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27884#issuecomment-1590934093",
      "id" : 1590934093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27884",
      "node_id" : "IC_kwDOABII585e07pN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1590934093/reactions"
      },
      "updated_at" : "2023-06-16T11:45:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1590934093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks",
      "created_at" : "2023-06-16T11:28:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27884#issuecomment-1594530245",
      "id" : 1594530245,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27884",
      "node_id" : "IC_kwDOABII585fCpnF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1594530245/reactions"
      },
      "updated_at" : "2023-06-16T11:28:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1594530245",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/85792632?v=4",
         "events_url" : "https://api.github.com/users/Dadudidas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Dadudidas/followers",
         "following_url" : "https://api.github.com/users/Dadudidas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Dadudidas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Dadudidas",
         "id" : 85792632,
         "login" : "Dadudidas",
         "node_id" : "MDQ6VXNlcjg1NzkyNjMy",
         "organizations_url" : "https://api.github.com/users/Dadudidas/orgs",
         "received_events_url" : "https://api.github.com/users/Dadudidas/received_events",
         "repos_url" : "https://api.github.com/users/Dadudidas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Dadudidas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Dadudidas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Dadudidas"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\n\r\nIn addition to those highlighted by TheStack, there are also quite a few other places we could update to use this, e.g. some of these matches:\r\n\r\n```sh\r\n$ git grep -n \"os.path\" test/functional | rg -e '.*\\.chain*'\r\ntest/functional/feature_addrman.py:56:        peers_dat = os.path.join(self.nodes[0].datadir, self.chain, \"peers.dat\")\r\ntest/functional/feature_asmap.py:116:        self.datadir = os.path.join(self.node.datadir, self.chain)\r\ntest/functional/feature_blocksdir.py:33:        assert os.path.isfile(os.path.join(blocksdir_path, self.chain, \"blocks\", \"blk00000.dat\"))\r\ntest/functional/feature_blocksdir.py:34:        assert os.path.isdir(os.path.join(self.nodes[0].datadir, self.chain, \"blocks\", \"index\"))\r\ntest/functional/feature_config_args.py:418:        assert os.path.exists(os.path.join(new_data_dir, self.chain, 'blocks'))\r\ntest/functional/feature_config_args.py:424:        assert os.path.exists(os.path.join(new_data_dir_2, self.chain, 'blocks'))\r\ntest/functional/feature_fee_estimation.py:323:        fee_dat = os.path.join(self.nodes[0].datadir, self.chain, \"fee_estimates.dat\")\r\ntest/functional/feature_filelock.py:27:        datadir = os.path.join(self.nodes[0].datadir, self.chain)\r\ntest/functional/feature_loadblock.py:40:        blocks_dir = os.path.join(data_dir, self.chain, \"blocks\")\r\ntest/functional/feature_logging.py:19:        return os.path.join(self.nodes[0].datadir, self.chain, name)\r\ntest/functional/feature_posix_fs_permissions.py:34:        datadir = os.path.join(self.nodes[0].datadir, self.chain)\r\ntest/functional/feature_pruning.py:94:        self.prunedir = os.path.join(self.nodes[2].datadir, self.chain, 'blocks', '')\r\ntest/functional/feature_pruning.py:293:            return os.path.isfile(os.path.join(self.nodes[node_number].datadir, self.chain, \"blocks\", f\"blk{index:05}.dat\"))\r\ntest/functional/feature_reindex.py:42:        blk0 = os.path.join(self.nodes[0].datadir, self.nodes[0].chain, 'blocks', 'blk00000.dat')\r\ntest/functional/feature_remove_pruned_files_on_startup.py:23:        blk0 = os.path.join(self.nodes[0].datadir, self.nodes[0].chain, 'blocks', 'blk00000.dat')\r\ntest/functional/feature_remove_pruned_files_on_startup.py:24:        rev0 = os.path.join(self.nodes[0].datadir, self.nodes[0].chain, 'blocks', 'rev00000.dat')\r\ntest/functional/feature_remove_pruned_files_on_startup.py:25:        blk1 = os.path.join(self.nodes[0].datadir, self.nodes[0].chain, 'blocks', 'blk00001.dat')\r\ntest/functional/feature_remove_pruned_files_on_startup.py:26:        rev1 = os.path.join(self.nodes[0].datadir, self.nodes[0].chain, 'blocks', 'rev00001.dat')\r\ntest/functional/feature_txindex_compatibility.py:53:        legacy_chain_dir = os.path.join(self.nodes[0].datadir, self.chain)\r\ntest/functional/feature_txindex_compatibility.py:56:        migrate_chain_dir = os.path.join(self.nodes[2].datadir, self.chain)\r\ntest/functional/feature_txindex_compatibility.py:67:        drop_index_chain_dir = os.path.join(self.nodes[1].datadir, self.chain)\r\ntest/functional/interface_rpc.py:49:        assert_equal(info['logpath'], os.path.join(self.nodes[0].datadir, self.chain, 'debug.log'))\r\ntest/functional/mempool_compatibility.py:58:        old_node_mempool = os.path.join(old_node.datadir, self.chain, 'mempool.dat')\r\ntest/functional/mempool_compatibility.py:59:        new_node_mempool = os.path.join(new_node.datadir, self.chain, 'mempool.dat')\r\ntest/functional/mempool_persist.py:146:        mempooldat0 = os.path.join(self.nodes[0].datadir, self.chain, 'mempool.dat')\r\ntest/functional/mempool_persist.py:147:        mempooldat1 = os.path.join(self.nodes[1].datadir, self.chain, 'mempool.dat')\r\ntest/functional/test_framework/test_framework.py:826:                return os.path.join(cache_node_dir, self.chain, *paths)\r\ntest/functional/tool_wallet.py:404:        self.wallet_path = os.path.join(self.nodes[0].datadir, self.chain, 'wallets', self.default_wallet_name, self.wallet_data_filename)\r\ntest/functional/wallet_backup.py:112:        os.remove(os.path.join(self.nodes[0].datadir, self.chain, 'wallets', self.default_wallet_name, self.wallet_data_filename))\r\ntest/functional/wallet_backup.py:113:        os.remove(os.path.join(self.nodes[1].datadir, self.chain, 'wallets', self.default_wallet_name, self.wallet_data_filename))\r\ntest/functional/wallet_backup.py:114:        os.remove(os.path.join(self.nodes[2].datadir, self.chain, 'wallets', self.default_wallet_name, self.wallet_data_filename))\r\ntest/functional/wallet_backup.py:121:        not_created_wallet_file = os.path.join(node.datadir, self.chain, 'wallets', wallet_name)\r\ntest/functional/wallet_backup.py:131:        not_created_wallet_file = os.path.join(node.datadir, self.chain, 'wallets', wallet_name)\r\ntest/functional/wallet_backup.py:138:        wallet_file = os.path.join(node.datadir, self.chain, 'wallets', wallet_name)\r\ntest/functional/wallet_backup.py:209:        assert os.path.exists(os.path.join(self.nodes[3].datadir, self.chain, 'wallets', \"res0\"))\r\ntest/functional/wallet_backup.py:210:        assert os.path.exists(os.path.join(self.nodes[3].datadir, self.chain, 'wallets', \"res1\"))\r\ntest/functional/wallet_backup.py:211:        assert os.path.exists(os.path.join(self.nodes[3].datadir, self.chain, 'wallets', \"res2\"))\r\ntest/functional/wallet_backup.py:229:            shutil.rmtree(os.path.join(self.nodes[2].datadir, self.chain, 'blocks'))\r\ntest/functional/wallet_backup.py:230:            shutil.rmtree(os.path.join(self.nodes[2].datadir, self.chain, 'chainstate'))\r\ntest/functional/wallet_backup.py:251:            os.path.join(self.nodes[0].datadir, self.chain, 'wallets', self.default_wallet_name, self.wallet_data_filename),\r\ntest/functional/wallet_backup.py:252:            os.path.join(self.nodes[0].datadir, self.chain, '.', 'wallets', self.default_wallet_name, self.wallet_data_filename),\r\ntest/functional/wallet_backup.py:253:            os.path.join(self.nodes[0].datadir, self.chain, 'wallets', self.default_wallet_name),\r\ntest/functional/wallet_backup.py:254:            os.path.join(self.nodes[0].datadir, self.chain, 'wallets')]\r\ntest/functional/wallet_descriptor.py:237:        wallet_db = os.path.join(self.nodes[0].datadir, self.chain, \"wallets\", \"crashme\", self.wallet_data_filename)\r\ntest/functional/wallet_hd.py:90:        shutil.rmtree(os.path.join(self.nodes[1].datadir, self.chain, \"blocks\"))\r\ntest/functional/wallet_hd.py:91:        shutil.rmtree(os.path.join(self.nodes[1].datadir, self.chain, \"chainstate\"))\r\ntest/functional/wallet_hd.py:94:            os.path.join(self.nodes[1].datadir, self.chain, 'wallets', self.default_wallet_name, self.wallet_data_filename),\r\ntest/functional/wallet_hd.py:118:        shutil.rmtree(os.path.join(self.nodes[1].datadir, self.chain, \"blocks\"))\r\ntest/functional/wallet_hd.py:119:        shutil.rmtree(os.path.join(self.nodes[1].datadir, self.chain, \"chainstate\"))\r\ntest/functional/wallet_hd.py:122:            os.path.join(self.nodes[1].datadir, self.chain, \"wallets\", self.default_wallet_name, self.wallet_data_filename),\r\ntest/functional/wallet_keypool_topup.py:36:        wallet_path = os.path.join(self.nodes[1].datadir, self.chain, \"wallets\", self.default_wallet_name, self.wallet_data_filename)\r\ntest/functional/wallet_listtransactions.py:237:        wallet0 = os.path.join(self.nodes[0].datadir, self.chain, self.default_wallet_name, \"wallet.dat\")\r\ntest/functional/wallet_listtransactions.py:238:        wallet2 = os.path.join(self.nodes[2].datadir, self.chain, self.default_wallet_name, \"wallet.dat\")\r\ntest/functional/wallet_multiwallet.py:65:        data_dir = lambda *p: os.path.join(node.datadir, self.chain, *p)\r\ntest/functional/wallet_pruning.py:109:        return os.path.isfile(os.path.join(self.nodes[1].datadir, self.chain, \"blocks\", f\"blk{block_index:05}.dat\"))\r\ntest/functional/wallet_reorgsrestore.py:92:        shutil.copyfile(os.path.join(self.nodes[0].datadir, 'wallet.bak'), os.path.join(self.nodes[1].datadir, self.chain, self.default_wallet_name, self.wallet_data_filename))\r\n```\r\n\r\n...although, changing some of these occurences does require additional changes for example when watching logs.\r\n\r\nAre we looking to change all of these out and switch to the os.Path operator syntax throughout?\r\n",
      "created_at" : "2023-06-16T11:45:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27884#issuecomment-1594548189",
      "id" : 1594548189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27884",
      "node_id" : "IC_kwDOABII585fCt_d",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1594548189/reactions"
      },
      "updated_at" : "2023-06-16T11:45:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1594548189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   }
]
