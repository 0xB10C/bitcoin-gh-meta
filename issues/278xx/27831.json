{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "Address #27380 (and similar future issues) by handling failed `assert_equal()` assertions in bcc callback functions   \r\n\r\n### Problem\r\n\r\nExceptions are not propagated in ctype callback functions used by bcc. This means an AssertionError exception raised by `assert_equal()` to signal a failed assertion is not getting caught and properly logged. Instead, the error is logged to stdout and execution of the callback stops.\r\n\r\nThe current workaround to check whether all `assert_equal()` assertions in a callback succeeded is to increment a success counter after the assertions (which only gets incremented if none exception is raised and stops execution). Then, outside the callback, the success counter can be used to check whether a callback executed successfully.\r\n\r\nOne issue with the described workaround is that when an exception occurs, there is no way of telling which of the `assert_equal()` statements caused the exception; moreover, there is no way of inspecting how the pieces of data that got compared in `assert_equal()` differed (often a crucial clue when debugging what went wrong).\r\n\r\nThis problem is happening in #27380: Sporadically, in the `mempool:rejected` test, execution does not reach the end of the callback function and the success counter is not incremented. Thus, the test fails when comparing the counter to its expected value of one. Without knowing which of the asserts failed any why it failed, this issue is hard to debug.\r\n\r\n### Solution\r\n\r\nTwo fixes come to mind. The first involves having the callback function make event data accessible outside the callback and inspecting the event using `assert_equal()` outside the callback. This solution still requires a counter in the callback in order  to tell whether a callback was actually executed or if instead the call to perf_buffer_poll() timed out.\r\n\r\nThe second fix entails wrapping all relevant `assert_equal()` statements inside callback functions into try-catch blocks and manually logging AssertionErrors. While not as elegant in terms of design, this approach can be more pragmatic for more complex tests (e.g., ones involving multiple events, events of different types, or the order of events).\r\n\r\nThe solution proposed here is to select the most pragmatic fix on a case-by-case basis: Tests in `interface_usdt_net.py`, `interface_usdt_mempool.py` and `interface_usdt_validation.py` have been refactored to use the first approach, while the second approach was chosen for `interface_usdt_utxocache.py` (partly to provide a reference for the second approach, but mainly because the utxocache tests are the most intricate tests, and refactoring them to use the first approach would negatively impact their readability). Lastly, `interface_usdt_coinselection.py` was kept unchanged because it does not use `assert_equal()` statements inside callback functions.\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 3,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27831/comments",
   "created_at" : "2023-06-06T08:33:47Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27831/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/27831",
   "id" : 1743365630,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      },
      {
         "color" : "cccccc",
         "default" : false,
         "description" : "",
         "id" : 5334691551,
         "name" : "CI failed",
         "node_id" : "LA_kwDOABII588AAAABPfju3w",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27831/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585SR3zO",
   "number" : 27831,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/27831.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27831",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/27831.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27831"
   },
   "reactions" : {
      "+1" : 1,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 1,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27831/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27831/timeline",
   "title" : "test: handle failed `assert_equal()` assertions in bcc callback functions",
   "updated_at" : "2023-06-06T09:40:51Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27831",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/72414353?v=4",
      "events_url" : "https://api.github.com/users/virtu/events{/privacy}",
      "followers_url" : "https://api.github.com/users/virtu/followers",
      "following_url" : "https://api.github.com/users/virtu/following{/other_user}",
      "gists_url" : "https://api.github.com/users/virtu/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/virtu",
      "id" : 72414353,
      "login" : "virtu",
      "node_id" : "MDQ6VXNlcjcyNDE0MzUz",
      "organizations_url" : "https://api.github.com/users/virtu/orgs",
      "received_events_url" : "https://api.github.com/users/virtu/received_events",
      "repos_url" : "https://api.github.com/users/virtu/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/virtu/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/virtu/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/virtu"
   }
}
