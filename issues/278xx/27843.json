{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "- The i2p accept code is in `ThreadI2PAcceptIncoming`, instead of in `ThreadSocketHandler` like the non-i2p accept code.\r\n- When accepting non-i2p connections, a connection is accepted in `AcceptConnection` and if there are more than `maxInbound` outstanding connections, one is marked for disconnect. The next iteration of the loop in `ThreadSocketHandler` will call `DisconnectNodes` and remove it.\r\n-  Since the i2p code resides in its own thread, it's possible for i2p connections to stack up past 125 (I was able to hit 190 outstanding connections when running a local script to connect to my bitcoind i2p address). I think the higher numbered fd's could cause a slight slowdown in `select`.\r\n- How many connections it can go past 125 is a race between `DisconnectNodes` and `ThreadI2PAcceptIncoming`.\r\n\r\n<details>\r\n<summary>Local test</summary>\r\n<br>\r\n\r\n```\r\ndiff --git a/src/test/i2p_tests.cpp b/src/test/i2p_tests.cpp\r\nindex b2e1ae43b..f1f0b2a60 100644\r\n--- a/src/test/i2p_tests.cpp\r\n+++ b/src/test/i2p_tests.cpp\r\n@@ -10,14 +10,52 @@\r\n #include <test/util/net.h>\r\n #include <test/util/setup_common.h>\r\n #include <util/threadinterrupt.h>\r\n+#include <netbase.h>\r\n+#include <protocol.h>\r\n+\r\n+#include <chrono>\r\n+#include <thread>\r\n \r\n #include <boost/test/unit_test.hpp>\r\n \r\n #include <memory>\r\n #include <string>\r\n+#include <stdio.h>\r\n \r\n BOOST_FIXTURE_TEST_SUITE(i2p_tests, BasicTestingSetup)\r\n \r\n+BOOST_AUTO_TEST_CASE(spam)\r\n+{\r\n+    CThreadInterrupt interrupt;\r\n+\r\n+    in_addr ipv4Addr;\r\n+    ipv4Addr.s_addr = inet_addr(\"127.0.0.1\");\r\n+\r\n+    Proxy p = Proxy(CService(ipv4Addr, 7656), false);\r\n+\r\n+    auto i2p_transient_session = std::make_unique<i2p::sam::Session>(p.proxy, &interrupt);\r\n+\r\n+    const char* pszDest = \"tfshhokzifn2g46dc6dxwrwwxwbeo4l5eeepequ52kpvrflm3foq.b32.i2p\";\r\n+\r\n+    const std::vector<CService> resolved{Lookup(pszDest, 0, false, 256)};\r\n+\r\n+    CAddress addrConnect = CAddress(resolved[0], NODE_NONE);\r\n+\r\n+    std::vector<std::unique_ptr<Sock>> v;\r\n+    v.reserve(1000);\r\n+\r\n+    for (int i = 0; i < 1000; i++) {\r\n+        i2p::Connection conn;\r\n+        bool proxy_error;\r\n+        auto connected = i2p_transient_session->Connect(addrConnect, conn, proxy_error);\r\n+        if (connected) {\r\n+            v.push_back(std::move(conn.sock));\r\n+        }\r\n+    }\r\n+\r\n+    std::this_thread::sleep_for(std::chrono::milliseconds(50000));\r\n+}\r\n+\r\n BOOST_AUTO_TEST_CASE(unlimited_recv)\r\n {\r\n     const auto prev_log_level{LogInstance().LogLevel()};\r\n```\r\n\r\nI then called it from a script:\r\n```\r\n#!/bin/bash\r\n#\r\nfor i in {1..10}\r\ndo\r\n\t./src/test/test_bitcoin --log_level=all --run_test=i2p_tests/spam &\r\ndone\r\n```\r\n\r\n</details>\r\n\r\nWhen testing this, I also ran into another reproducible error when simultaneously using `bitcoin-cli`:\r\n```\r\nerror: timeout on transient error: Could not connect to the server 127.0.0.1:18443 (error code 1 - \"EOF reached\")\r\n\r\nMake sure the bitcoind server is running and that you are connecting to the correct RPC port.\r\n```\r\n\r\nIt happened when the i2p sam bridge ran out of memory, but as far as I can tell the rpc server should be totally unaffected by that. This error message also appeared in bitcoind's logs at the same time:\r\n `2023-06-09T15:02:58Z connect() to 127.0.0.1:7656 failed: Can't assign requested address (49)`\r\nWireshark shows that a TCP port was reused which led to a RST being sent back to bitcoin-cli.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27843/comments",
   "created_at" : "2023-06-09T14:52:59Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27843/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/27843",
   "id" : 1750050240,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27843/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585oT6XA",
   "number" : 27843,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27843/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27843/timeline",
   "title" : "ThreadI2PAcceptIncoming temporarily bypasses 125 connection ceiling",
   "updated_at" : "2023-06-09T15:49:47Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27843",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
      "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
      "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
      "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
      "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/Crypt-iQ",
      "id" : 15145615,
      "login" : "Crypt-iQ",
      "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
      "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
      "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
      "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/Crypt-iQ"
   }
}
