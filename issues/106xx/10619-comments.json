[
   {
      "body" : "Under which circumstances can Tip() be NULL? \r\nIsn't there always at least the genesis block? \r\n\r\nIf it is NULL, it crashes anyway as there are many more instances  of Tip() dereferences without NULL checks in the same function alone (i.e. for `bestblockhash`, chainwork`, etc.).\r\n \r\nIf it can be NULL, then we should define how the rpc output should look like in this case, and fix all instances / make the output consistent.\r\n\r\nIf it can't be null, we should ensure that in the Tip() function.",
      "created_at" : "2017-06-17T12:15:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309211611",
      "id" : 309211611,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T12:15:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309211611",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "If Tip() never returns NULL, then checking `block` for nullness in the following statment:\r\n`while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))`\r\n is redundant.\r\n\r\nDo you think this should become:\r\n`while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))`\r\nwith the rest of the code remaining as is?\r\n\r\nSince Tip() can theoretically return NULL, I think that the best coding practice is to check for nullness somehow.",
      "created_at" : "2017-06-17T12:23:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309211996",
      "id" : 309211996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T12:30:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309211996",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "> If Tip() never returns NULL [...] Do you think this should become:\r\n`while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))`\r\nwith the rest of the code remaining as is?\r\n\r\nIn that case, yes.\r\n\r\nAs I said, if tip actually returns null, the function will crash as it is today, so we should either fix all of that (and document/test it), or have tip() not return null (and work backwards to ensure correctness).\r\n ",
      "created_at" : "2017-06-17T12:31:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309212366",
      "id" : 309212366,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T12:31:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309212366",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "I think that checking the return value of a function that returns a pointer for nullness is a good practice that will safeguard the code from dereferencing a null pointer either under the current or under any other future implementation of Tip().\r\n\r\nActually, I see that in other parts of the code the return value of Tip() is checked for nullness. \r\nDo you think this PR should be merged to ensure consistency with that, before a more generic solution is investigated?\r\n",
      "created_at" : "2017-06-17T12:38:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309212741",
      "id" : 309212741,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T12:38:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309212741",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "C++ has the problem that pointers are used for two orthogonal reasons: 1) to avoid unneeded copies, and 2) to encode the possibility of NULL. If a function can't return NULL but still returns a pointer (for the first reason), I don't think callers need to check, as it complicates the code for no good reason. If someone changes the function to return null in the future, it's an API change (unfortunately not caught by the compiler) and they need to fix the callsites.\r\n\r\nThere are probably edge cases in which Tip() returns NULL (on startup and shutdown, and maybe one can even mark the genesis block as invalid via an rpc command?).\r\n\r\nWhat about throwing an `JSONRPCError` in the beginning of the function? If Tip is null and the chain is empty, the whole call doesn't make a lot of sense.\r\n",
      "created_at" : "2017-06-17T12:54:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309213569",
      "id" : 309213569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T12:54:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309213569",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "I have modified the commit for this PR.\r\nNow an `JSONRPCError` is thrown before any return value of Tip() is used.",
      "created_at" : "2017-06-17T13:25:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309215052",
      "id" : 309215052,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T13:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309215052",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "Thank you.\r\n\r\nutACK cf67a3c64d0813e1131bc30e7f628b7bfd21fc96 for the code.\r\n\r\nAs for the concept, I'd rather have more people confirm if this makes sense.",
      "created_at" : "2017-06-17T13:39:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309215717",
      "id" : 309215717,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T13:39:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309215717",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "body" : "Concept ACK.\r\n\r\nIn addition to the check you added I suggest adding an assertion before accessing `block->nHeight`:\r\n\r\n```c++\r\n         CBlockIndex *block = chainActive.Tip();\r\n         while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\r\n             block = block->pprev;\r\n+        assert(block && \"An empty blockchain should not be possible here.\");\r\n         obj.push_back(Pair(\"pruneheight\",        block->nHeight));\r\n```\r\n\r\nI'm assuming a state transition from `chainActive.Tip() != nullptr` (blockchain non-empty) to `chainActive.Tip() == nullptr` (blockchain empty)  is impossible in the current code? If so I think it makes sense to make that clear (via an assertion) since the code here appears to be working under that assumption. It will have the added benefit of silencing this NULL pointer dereference warning for static analysis tools that don't pick up this subtle state change limitation (if such a limitation exists).\r\n\r\nThanks for reporting this @pavlosantoniou. You beat me to reporting it! :-) I had this in my backlog of possible NULL pointer dereferences to report, but as I try to limit the number of open PR:s pertaining to the same class of issues I figured I'd await the merge of a similar issue I reported in #9549:\r\n> [[net] Avoid possibility of NULL pointer dereference in MarkBlockAsInFlight(...)](https://github.com/bitcoin/bitcoin/pull/9549)",
      "created_at" : "2017-06-17T14:26:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309218195",
      "id" : 309218195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T14:27:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309218195",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "Thank you all for your comments, I have added the assertion in the commit for this PR.",
      "created_at" : "2017-06-17T14:43:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309219195",
      "id" : 309219195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T14:43:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309219195",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14562480?v=3",
         "events_url" : "https://api.github.com/users/pavlosantoniou/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pavlosantoniou/followers",
         "following_url" : "https://api.github.com/users/pavlosantoniou/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pavlosantoniou/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pavlosantoniou",
         "id" : 14562480,
         "login" : "pavlosantoniou",
         "organizations_url" : "https://api.github.com/users/pavlosantoniou/orgs",
         "received_events_url" : "https://api.github.com/users/pavlosantoniou/received_events",
         "repos_url" : "https://api.github.com/users/pavlosantoniou/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pavlosantoniou/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pavlosantoniou/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pavlosantoniou"
      }
   },
   {
      "body" : "@pavlosantoniou Oh, I forgot to mention: I think you should restore the null check in the while loop too:\r\n\r\n```diff\r\n-        while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\r\n+        while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\r\n```",
      "created_at" : "2017-06-17T16:44:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309225990",
      "id" : 309225990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T16:45:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309225990",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7826565?v=3",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "@practicalswift that shouldn't be necessary with the check before that the tip is not null?\r\n\r\nIf you are afraid that the return value changes between two calls of Tip() in that function, the result should just be stored in a variable in the beginning and reused.",
      "created_at" : "2017-06-17T16:56:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#issuecomment-309226828",
      "id" : 309226828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10619",
      "updated_at" : "2017-06-17T16:57:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/309226828",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1225267?v=3",
         "events_url" : "https://api.github.com/users/benma/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benma/followers",
         "following_url" : "https://api.github.com/users/benma/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benma/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benma",
         "id" : 1225267,
         "login" : "benma",
         "organizations_url" : "https://api.github.com/users/benma/orgs",
         "received_events_url" : "https://api.github.com/users/benma/received_events",
         "repos_url" : "https://api.github.com/users/benma/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benma/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benma/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benma"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10619#discussion_r122573305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10619"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122573305"
         }
      },
      "body" : "This can be an assert too; RPC isn't available before the `InitBlockIndex` call, after which chainActive cannot be empty.",
      "commit_id" : "2d51f41ed21fc7fd9f0052d6b33c554b5b563524",
      "created_at" : "2017-06-17T17:37:06Z",
      "diff_hunk" : "@@ -1165,6 +1165,11 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getblockchaininfo\", \"\")\n         );\n \n+    if (!chainActive.Tip())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10619#discussion_r122573305",
      "id" : 122573305,
      "original_commit_id" : "2d51f41ed21fc7fd9f0052d6b33c554b5b563524",
      "original_position" : 4,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 4,
      "pull_request_review_id" : 44704662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10619",
      "updated_at" : "2017-06-17T17:37:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122573305",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
