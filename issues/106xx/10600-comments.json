[
   {
      "body" : "Why bother with the class?\r\nPractically a namespace at this point?",
      "created_at" : "2017-06-16T03:58:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10600#issuecomment-308926888",
      "id" : 308926888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10600",
      "updated_at" : "2017-06-16T03:58:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308926888",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/413395?v=3",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "body" : "> Why bother with the class?\r\n> Practically a namespace at this point?\r\n\r\nI don't see a problem with using a class as a namespace, but happy to change if you think it is in bad taste and have a different suggestion. Note that the files are called feebumper.h/cpp so if you want to replace the class with something else, it might involve file renames. This PR is really more concerned with simplifying Qt code and moving code that doesn't belong there out.",
      "created_at" : "2017-06-16T10:02:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10600#issuecomment-308986463",
      "id" : 308986463,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10600",
      "updated_at" : "2017-06-16T10:02:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308986463",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/7133040?v=3",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "I agree that if all of a class's methods have become `static` it's better to turn it into a namespace of functions, but don't care strongly. If so, I don't think a file rename is necessary.",
      "created_at" : "2017-08-27T20:06:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10600#issuecomment-325221081",
      "id" : 325221081,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10600",
      "updated_at" : "2017-08-27T20:06:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325221081",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> I agree that if all of a class's methods have become static it's better to turn it into a namespace of functions, but don't care strongly. If so, I don't think a file rename is necessary.\r\n\r\nThanks @sipa, removed class without renaming file.\r\n\r\nAdded commit 1ea35974529622eb16fe5710bee6719dfc205c31 -> 47c5601d5f6a992d9c46d8300de248374d6eb066 ([pr/ipc-bump.6](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bump.6) -> [pr/ipc-bump.7](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bump.7), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-bump.6...pr/ipc-bump.7))",
      "created_at" : "2017-08-28T14:21:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10600#issuecomment-325367202",
      "id" : 325367202,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10600",
      "updated_at" : "2017-08-28T14:21:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325367202",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "body" : "> because it means the feebumper object either has to be serialized back and forth between Qt and wallet processes between fee bump calls\r\n\r\nThat is a problem or inconvenient?",
      "created_at" : "2017-08-28T14:38:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10600#issuecomment-325372001",
      "id" : 325372001,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10600",
      "updated_at" : "2017-08-28T14:38:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325372001",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : ">> because it means the feebumper object either has to be serialized back and forth between Qt and wallet processes between fee bump calls\r\n\r\n> That is a problem or inconvenient?\r\n\r\nThese should just be plain function calls because there are no advantages to having a stateful FeeBumper object. Making the feebumper class serializable is dumb because it will add new code that send extra data that isn't always needed.",
      "created_at" : "2017-08-28T14:55:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10600#issuecomment-325377110",
      "id" : 325377110,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10600",
      "updated_at" : "2017-08-28T14:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325377110",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10600#discussion_r135639557"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135639557"
         }
      },
      "body" : "It's in the original code, but is it necessary to lock `cs_main`? The same applies for other functions.",
      "commit_id" : "47c5601d5f6a992d9c46d8300de248374d6eb066",
      "created_at" : "2017-08-28T21:25:48Z",
      "diff_hunk" : "@@ -43,70 +44,75 @@ int64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *pWal\n     return GetVirtualTransactionSize(txNew);\n }\n \n-bool CFeeBumper::preconditionChecks(const CWallet *pWallet, const CWalletTx& wtx) {\n+BumpFeeResult PreconditionChecks(const CWallet* pWallet, const CWalletTx& wtx, std::vector<std::string>& vErrors)\n+{\n     if (pWallet->HasWalletSpend(wtx.GetHash())) {\n         vErrors.push_back(\"Transaction has descendants in the wallet\");\n-        currentResult = BumpFeeResult::INVALID_PARAMETER;\n-        return false;\n+        return BumpFeeResult::INVALID_PARAMETER;\n     }\n \n     {\n         LOCK(mempool.cs);\n         auto it_mp = mempool.mapTx.find(wtx.GetHash());\n         if (it_mp != mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1) {\n             vErrors.push_back(\"Transaction has descendants in the mempool\");\n-            currentResult = BumpFeeResult::INVALID_PARAMETER;\n-            return false;\n+            return BumpFeeResult::INVALID_PARAMETER;\n         }\n     }\n \n     if (wtx.GetDepthInMainChain() != 0) {\n         vErrors.push_back(\"Transaction has been mined, or is conflicted with a mined transaction\");\n-        currentResult = BumpFeeResult::WALLET_ERROR;\n-        return false;\n+        return BumpFeeResult::WALLET_ERROR;\n     }\n-    return true;\n+    return BumpFeeResult::OK;\n }\n+} // namespace\n \n-CFeeBumper::CFeeBumper(const CWallet *pWallet, const uint256 txidIn, const CCoinControl& coin_control, CAmount totalFee)\n-    :\n-    txid(std::move(txidIn)),\n-    nOldFee(0),\n-    nNewFee(0)\n+bool TransactionCanBeBumped(CWallet* pWallet, const uint256& txid)\n {\n+    LOCK2(cs_main, pWallet->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10600#discussion_r135639557",
      "id" : 135639557,
      "original_commit_id" : "47c5601d5f6a992d9c46d8300de248374d6eb066",
      "original_position" : 51,
      "path" : "src/wallet/feebumper.cpp",
      "position" : 51,
      "pull_request_review_id" : 59071434,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10600",
      "updated_at" : "2017-08-28T21:37:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135639557",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10600#discussion_r135641158"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135641158"
         }
      },
      "body" : "At least in the headers we could fix to snake_case, it doesn't make the patch bigger. WDYT?",
      "commit_id" : "47c5601d5f6a992d9c46d8300de248374d6eb066",
      "created_at" : "2017-08-28T21:32:47Z",
      "diff_hunk" : "@@ -23,39 +23,34 @@ enum class BumpFeeResult\n     MISC_ERROR,\n };\n \n-class CFeeBumper\n-{\n-public:\n-    CFeeBumper(const CWallet *pWalletIn, const uint256 txidIn, const CCoinControl& coin_control, CAmount totalFee);\n-    BumpFeeResult getResult() const { return currentResult; }\n-    const std::vector<std::string>& getErrors() const { return vErrors; }\n-    CAmount getOldFee() const { return nOldFee; }\n-    CAmount getNewFee() const { return nNewFee; }\n-    uint256 getBumpedTxId() const { return bumpedTxid; }\n-\n-    /* signs the new transaction,\n-     * returns false if the tx couldn't be found or if it was\n-     * impossible to create the signature(s)\n-     */\n-    bool signTransaction(CWallet *pWallet);\n-\n-    /* commits the fee bump,\n-     * returns true, in case of CWallet::CommitTransaction was successful\n-     * but, eventually sets vErrors if the tx could not be added to the mempool (will try later)\n-     * or if the old transaction could not be marked as replaced\n-     */\n-    bool commit(CWallet *pWalletNonConst);\n-\n-private:\n-    bool preconditionChecks(const CWallet *pWallet, const CWalletTx& wtx);\n-\n-    const uint256 txid;\n-    uint256 bumpedTxid;\n-    CMutableTransaction mtx;\n-    std::vector<std::string> vErrors;\n-    BumpFeeResult currentResult;\n-    CAmount nOldFee;\n-    CAmount nNewFee;\n-};\n+/* return whether transaction can be bumped */\n+bool TransactionCanBeBumped(CWallet* pWallet, const uint256& txid);\n+\n+/* create bumpfee transaction */\n+BumpFeeResult CreateBumpFeeTransaction(const CWallet* pWallet,\n+    const uint256& txid,\n+    const CCoinControl& coin_control,\n+    CAmount totalFee,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10600#discussion_r135641158",
      "id" : 135641158,
      "original_commit_id" : "47c5601d5f6a992d9c46d8300de248374d6eb066",
      "original_position" : 45,
      "path" : "src/wallet/feebumper.h",
      "position" : 45,
      "pull_request_review_id" : 59071434,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10600",
      "updated_at" : "2017-08-28T21:37:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135641158",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10600#discussion_r135641342"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135641342"
         }
      },
      "body" : "Use doxygen compatible comments as per developer notes?",
      "commit_id" : "47c5601d5f6a992d9c46d8300de248374d6eb066",
      "created_at" : "2017-08-28T21:33:40Z",
      "diff_hunk" : "@@ -23,39 +23,34 @@ enum class BumpFeeResult\n     MISC_ERROR,\n };\n \n-class CFeeBumper\n-{\n-public:\n-    CFeeBumper(const CWallet *pWalletIn, const uint256 txidIn, const CCoinControl& coin_control, CAmount totalFee);\n-    BumpFeeResult getResult() const { return currentResult; }\n-    const std::vector<std::string>& getErrors() const { return vErrors; }\n-    CAmount getOldFee() const { return nOldFee; }\n-    CAmount getNewFee() const { return nNewFee; }\n-    uint256 getBumpedTxId() const { return bumpedTxid; }\n-\n-    /* signs the new transaction,\n-     * returns false if the tx couldn't be found or if it was\n-     * impossible to create the signature(s)\n-     */\n-    bool signTransaction(CWallet *pWallet);\n-\n-    /* commits the fee bump,\n-     * returns true, in case of CWallet::CommitTransaction was successful\n-     * but, eventually sets vErrors if the tx could not be added to the mempool (will try later)\n-     * or if the old transaction could not be marked as replaced\n-     */\n-    bool commit(CWallet *pWalletNonConst);\n-\n-private:\n-    bool preconditionChecks(const CWallet *pWallet, const CWalletTx& wtx);\n-\n-    const uint256 txid;\n-    uint256 bumpedTxid;\n-    CMutableTransaction mtx;\n-    std::vector<std::string> vErrors;\n-    BumpFeeResult currentResult;\n-    CAmount nOldFee;\n-    CAmount nNewFee;\n-};\n+/* return whether transaction can be bumped */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10600#discussion_r135641342",
      "id" : 135641342,
      "original_commit_id" : "47c5601d5f6a992d9c46d8300de248374d6eb066",
      "original_position" : 38,
      "path" : "src/wallet/feebumper.h",
      "position" : 38,
      "pull_request_review_id" : 59071434,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10600",
      "updated_at" : "2017-08-28T21:37:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135641342",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10600#discussion_r135641866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135641866"
         }
      },
      "body" : "One line?",
      "commit_id" : "47c5601d5f6a992d9c46d8300de248374d6eb066",
      "created_at" : "2017-08-28T21:36:01Z",
      "diff_hunk" : "@@ -23,39 +23,34 @@ enum class BumpFeeResult\n     MISC_ERROR,\n };\n \n-class CFeeBumper\n-{\n-public:\n-    CFeeBumper(const CWallet *pWalletIn, const uint256 txidIn, const CCoinControl& coin_control, CAmount totalFee);\n-    BumpFeeResult getResult() const { return currentResult; }\n-    const std::vector<std::string>& getErrors() const { return vErrors; }\n-    CAmount getOldFee() const { return nOldFee; }\n-    CAmount getNewFee() const { return nNewFee; }\n-    uint256 getBumpedTxId() const { return bumpedTxid; }\n-\n-    /* signs the new transaction,\n-     * returns false if the tx couldn't be found or if it was\n-     * impossible to create the signature(s)\n-     */\n-    bool signTransaction(CWallet *pWallet);\n-\n-    /* commits the fee bump,\n-     * returns true, in case of CWallet::CommitTransaction was successful\n-     * but, eventually sets vErrors if the tx could not be added to the mempool (will try later)\n-     * or if the old transaction could not be marked as replaced\n-     */\n-    bool commit(CWallet *pWalletNonConst);\n-\n-private:\n-    bool preconditionChecks(const CWallet *pWallet, const CWalletTx& wtx);\n-\n-    const uint256 txid;\n-    uint256 bumpedTxid;\n-    CMutableTransaction mtx;\n-    std::vector<std::string> vErrors;\n-    BumpFeeResult currentResult;\n-    CAmount nOldFee;\n-    CAmount nNewFee;\n-};\n+/* return whether transaction can be bumped */\n+bool TransactionCanBeBumped(CWallet* pWallet, const uint256& txid);\n+\n+/* create bumpfee transaction */\n+BumpFeeResult CreateBumpFeeTransaction(const CWallet* pWallet,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10600#discussion_r135641866",
      "id" : 135641866,
      "original_commit_id" : "47c5601d5f6a992d9c46d8300de248374d6eb066",
      "original_position" : 42,
      "path" : "src/wallet/feebumper.h",
      "position" : 42,
      "pull_request_review_id" : 59071434,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10600",
      "updated_at" : "2017-08-28T21:37:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/135641866",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
