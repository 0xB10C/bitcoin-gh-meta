[
   {
      "author_association" : "MEMBER",
      "body" : "## Merge Plan & Next Steps:\r\nAll of the functionality in this PR is hidden behind a configuration switch that defaults to off, and the wallet rebroadcast logic is currently untouched. The idea is to make these changes as safe as possible to merge into master, and allow reviewers to easily enable and observe the new rebroadcast mechanism in todayâs network conditions. \r\n\r\nIf we build confidence that these changes are safe and desirable, we can default enable this new node rebroadcast logic and disable the legacy wallet rebroadcast logic. This is the desired end goal. \r\n\r\n## Project History: \r\nA version of these changes were originally proposed in #16698. \r\n\r\n#18038 broke out a subset of the functionality, enabling the node to provide a guarantee around minimal initial broadcast & reducing the frequency of the existing wallet rebroadcast functionality (unbroadcast set) \r\n\r\nSince #16698, there have been some changes in approach, and all of the unbroadcast conversation is no longer relevant. So, to help with review, I've decided to open a new PR. To preserve the relevant feedback and concerns, I've tried my best to capture the history of conversations in the following write-up: https://github.com/amitiuttarwar/bitcoin-notes/blob/main/rebroadcast-history.md. warning: it goes quite in depth.\r\n\r\n\r\nðð½ Huge shout out to the village of core contributors who have provided feedback & guidance on this project so far. Honestly too many to name, but this project is much better for it. Thank you :) \r\n",
      "created_at" : "2021-02-02T07:23:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-771426879",
      "id" : 771426879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MTQyNjg3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-08T17:50:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/771426879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21525 ([Bundle 4.5/n] Followup fixups to bundle 4 by dongcarl)\n* #21515 (Erlay: bandwidth-efficient transaction relay protocol by naumenkogs)\n* #21391 ([Bundle 5/n] Prune g_chainman usage in RPC modules by dongcarl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-02-02T08:05:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-771448221",
      "id" : 771448221,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MTQ0ODIyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-25T00:37:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/771448221",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "marking as draft until I resolve CI issues",
      "created_at" : "2021-02-03T03:32:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-772195305",
      "id" : 772195305,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MjE5NTMwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-03T03:32:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/772195305",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r572243729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572243729"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm importing this file so I can use the default key extractors in the `indexed_rebroadcast_set` multi_index: 1. https://github.com/bitcoin/bitcoin/pull/21061/files#diff-eccf6b88ae8b612dbdbdb92c110b66e4e7e3ffa665ccdc1acf08093aadc66b82R49 2. https://github.com/bitcoin/bitcoin/pull/21061/files#diff-eccf6b88ae8b612dbdbdb92c110b66e4e7e3ffa665ccdc1acf08093aadc66b82R55\r\n\r\nThe contents of the boost header file can be found [here](https://www.boost.org/doc/libs/1_71_0/boost/multi_index/member.hpp).\r\n\r\nIf we'd rather not import another boost header, I can avoid by writing custom key extractors.",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-02-08T17:44:59Z",
      "diff_hunk" : "@@ -57,6 +57,7 @@ EXPECTED_BOOST_INCLUDES=(\n     boost/filesystem.hpp\n     boost/filesystem/fstream.hpp\n     boost/multi_index/hashed_index.hpp\n+    boost/multi_index/member.hpp",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r572243729",
      "id" : 572243729,
      "line" : 60,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjI0MzcyOQ==",
      "original_commit_id" : "3766479d7924358f9c3b0d53fca1ca2e218e66fb",
      "original_line" : 60,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/lint/lint-includes.sh",
      "position" : 4,
      "pull_request_review_id" : 585760946,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-12T02:02:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572243729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased master, added a functional test, some small fixups. \r\n\r\nthis PR is ready for review! ð",
      "created_at" : "2021-02-10T02:44:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-776398956",
      "id" : 776398956,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NjM5ODk1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-10T02:44:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/776398956",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r574281895"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574281895"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's fine to add a boost multi_index header dependency, it's the only submodule of boost that we really need and for which there is no replacement on the horizon. So just use what you need IMO, re-implementing anything from multi-index without a good plan would be a waste of time, I think. ",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-02-11T06:58:44Z",
      "diff_hunk" : "@@ -57,6 +57,7 @@ EXPECTED_BOOST_INCLUDES=(\n     boost/filesystem.hpp\n     boost/filesystem/fstream.hpp\n     boost/multi_index/hashed_index.hpp\n+    boost/multi_index/member.hpp",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r574281895",
      "id" : 574281895,
      "in_reply_to_id" : 572243729,
      "line" : 60,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDI4MTg5NQ==",
      "original_commit_id" : "3766479d7924358f9c3b0d53fca1ca2e218e66fb",
      "original_line" : 60,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/lint/lint-includes.sh",
      "position" : 4,
      "pull_request_review_id" : 588280404,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-12T02:02:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574281895",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-02-16T20:20:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-780093975",
      "id" : 780093975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MDA5Mzk3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-16T20:20:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780093975",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2021-02-16T20:27:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-780097794",
      "id" : 780097794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MDA5Nzc5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-16T20:27:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780097794",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased to include #21121",
      "created_at" : "2021-02-17T23:29:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-780922203",
      "id" : 780922203,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MDkyMjIwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-17T23:29:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780922203",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems like a big win, both for privacy and for quality of service. There are a lot of nodes out there with larger-than-default mempools, and if this were the default, they would serve as reservoirs for transactions that were dropped from the default mempool, eventually rebroadcasting them when they noticed that they had a chance of getting confirmed. This would save users from sometimes having to manually intervene to unstick stuck transactions.\r\n\r\nIt might be a good idea to log whenever this logic kicks in and rebroadcast transactions. Perhaps just the number of transactions that it's rebroadcasting, i.e. `Rebroadcasting 23 transactions`, and maybe also the individual transaction IDs.\r\n\r\nI'd like to run this code on mainnet, and having logging statements would be very helpful for tracking how it actually behaves.",
      "created_at" : "2021-02-28T00:52:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-787211962",
      "id" : 787211962,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4NzIxMTk2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-28T00:52:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787211962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1945?v=4",
         "events_url" : "https://api.github.com/users/casey/events{/privacy}",
         "followers_url" : "https://api.github.com/users/casey/followers",
         "following_url" : "https://api.github.com/users/casey/following{/other_user}",
         "gists_url" : "https://api.github.com/users/casey/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/casey",
         "id" : 1945,
         "login" : "casey",
         "node_id" : "MDQ6VXNlcjE5NDU=",
         "organizations_url" : "https://api.github.com/users/casey/orgs",
         "received_events_url" : "https://api.github.com/users/casey/received_events",
         "repos_url" : "https://api.github.com/users/casey/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/casey/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/casey/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/casey"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Can you help do this\n\nOn Sun, 28 Feb 2021, 11:55 Casey Rodarmor, <notifications@github.com> wrote:\n\n> This seems like a big win, both for privacy and for quality of service.\n> There are a lot of nodes out there with larger-than-default mempools, and\n> if this were the default, they would serve as reservoirs for transactions\n> that were dropped from the default mempool, eventually rebroadcasting them\n> when they noticed that they had a chance of getting confirmed. This would\n> save users from sometimes having to manually intervene to unstick stuck\n> transactions.\n>\n> It might be a good idea to log whenever this logic kicks in and\n> rebroadcast transactions. Perhaps just the number of transactions that it's\n> rebroadcasting, i.e. Rebroadcasting 23 transactions, and maybe also the\n> individual transaction IDs.\n>\n> I'd like to run this code on mainnet, and having logging statements would\n> be very helpful for tracking how it actually behaves.\n>\n> â\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-787211962>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ATAD2EYMMKQOW2CLWSDRZNLTBGH6LANCNFSM4W5YT4HA>\n> .\n>\n",
      "created_at" : "2021-02-28T00:57:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-787212349",
      "id" : 787212349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4NzIxMjM0OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-28T00:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787212349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/79707411?v=4",
         "events_url" : "https://api.github.com/users/schuie2528/events{/privacy}",
         "followers_url" : "https://api.github.com/users/schuie2528/followers",
         "following_url" : "https://api.github.com/users/schuie2528/following{/other_user}",
         "gists_url" : "https://api.github.com/users/schuie2528/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/schuie2528",
         "id" : 79707411,
         "login" : "schuie2528",
         "node_id" : "MDQ6VXNlcjc5NzA3NDEx",
         "organizations_url" : "https://api.github.com/users/schuie2528/orgs",
         "received_events_url" : "https://api.github.com/users/schuie2528/received_events",
         "repos_url" : "https://api.github.com/users/schuie2528/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/schuie2528/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/schuie2528/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/schuie2528"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@casey thanks for taking a look! \r\n\r\nThe current code does have some logging, the most relevant statement firing here: https://github.com/bitcoin/bitcoin/pull/21061/files?file-filters%5B%5D=.cpp&file-filters%5B%5D=.h&file-filters%5B%5D=.py&file-filters%5B%5D=.sh#diff-7dff50848db96bdb8edffc4d21daeca6d9050ec0e67d96072780ea5751e7df06R90. This prints the transactions hashes where a rebroadcast will be attempted for all peers. Those candidates will go through additional per-peer filters (see SendMessages code that copies `setInventoryTxToSend` and `filterInventoryKnown`), so might not actually make it to every peer, but should be sufficient signal for us to monitor the frequency of rebroadcast. \r\n\r\nI've also added logs to monitor how long it takes to calculate rebroadcast blocks. The logs are all in the `NET` & `BENCH` categories. I'm currently running a node with this patch, but I'd love to gather more data so It'd be helpful if you are willing to run the patch and share your findings. \r\n\r\nSo far, I ran a node for 1 week with default mempool settings & 0 transactions were selected for rebroadcast. That seems reasonable. I'm now running a node with a larger mempool, and also want to tinker with making low fee rate wallet transactions to monitor node rebroadcast logic.\r\n\r\nIf you've intended to request more logging than what's currently there, I'm open to suggestions. ",
      "created_at" : "2021-02-28T22:17:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-787533629",
      "id" : 787533629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4NzUzMzYyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-28T22:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787533629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The current code does have some logging, the most relevant statement firing here:\r\n\r\nAh, excellent! I was looking where the transactions are actually rebroadcast, so I missed that. What's there looks good, I can't think of anything else I'd want.\r\n\r\n> â¦but I'd love to gather more data so It'd be helpful if you are willing to run the patch and share your findings.\r\n\r\nI was thinking about running a node with a very large max mempool size, as well as no mempool expiration time, to try to maximize transaction rebroadcasting. (Those are the only two settings I can think of that would affect this, but let me know if you can think of others.) I'll definitely share the logs if I wind up doing this!",
      "created_at" : "2021-03-01T06:09:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-787673640",
      "id" : 787673640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4NzY3MzY0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-01T06:09:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787673640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1945?v=4",
         "events_url" : "https://api.github.com/users/casey/events{/privacy}",
         "followers_url" : "https://api.github.com/users/casey/followers",
         "following_url" : "https://api.github.com/users/casey/following{/other_user}",
         "gists_url" : "https://api.github.com/users/casey/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/casey",
         "id" : 1945,
         "login" : "casey",
         "node_id" : "MDQ6VXNlcjE5NDU=",
         "organizations_url" : "https://api.github.com/users/casey/orgs",
         "received_events_url" : "https://api.github.com/users/casey/received_events",
         "repos_url" : "https://api.github.com/users/casey/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/casey/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/casey/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/casey"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@casey \r\n\r\n> I was thinking about running a node with a very large max mempool size, as well as no mempool expiration time, to try to maximize transaction rebroadcasting\r\n\r\nyup, that's exactly what I did, I also minimized the `feefilter` and `minrelaytxfee` to ensure I'd get all the transactions. \r\n\r\n> I'll definitely share the logs if I wind up doing this!\r\n\r\nsounds good, thanks :) ",
      "created_at" : "2021-03-02T05:15:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-788594423",
      "id" : 788594423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4ODU5NDQyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-02T05:15:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788594423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2021-03-04T22:27:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-790989016",
      "id" : 790989016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5MDk4OTAxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-04T22:27:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/790989016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-11T12:46:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-796710682",
      "id" : 796710682,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NjcxMDY4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-11T12:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796710682",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2021-03-11T23:34:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-797121429",
      "id" : 797121429,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzEyMTQyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-11T23:34:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797121429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Motivation and PR overview looks interesting. Couldn't compile though. Maybe I should have checked CI results.\r\n\r\n![image](https://user-images.githubusercontent.com/13405205/110874750-525a0c00-82fa-11eb-9a14-e632f0084574.png)\r\n\r\n\r\n",
      "created_at" : "2021-03-12T00:45:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-797153844",
      "id" : 797153844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzE1Mzg0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T00:45:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797153844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@prayank23 Thanks for taking a look. I missed the tests in a recent rebase. It should be fixed now",
      "created_at" : "2021-03-12T18:39:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-797676411",
      "id" : 797676411,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzY3NjQxMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-12T18:39:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797676411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. Have few questions about the approach and will mention them below. Compiled successfully on Ubuntu. Tests passed.\r\n\r\n> Conceptually, we want to rebroadcast transactions that we believe âshouldâ have been mined by now.\r\n\r\nNot sure about this part. Can we randomly rebroadcast different transactions to make it difficult for spy nodes to notice any pattern?\r\n\r\nI used below `bitcoin.conf`:\r\n```\r\ntestnet=1\r\nrebroadcast=1\r\ndebug=1\r\n```\r\n\r\nHad 1 incoming and 1 outgoing transaction pending associated with my wallet (segwit,rbf,1sat/vB). Node was connected to 10 peers.\r\n\r\n![image](https://user-images.githubusercontent.com/13405205/111013015-f22f9c80-83c3-11eb-9183-76d8d62f66f5.png)\r\n\r\nStill trying to understand if I can find something relevant in logs. Only one line related to `rebroadcast`:\r\n\r\n`2021-03-13T00:34:03Z Caching minimum fee for rebroadcast to 1.000 sat/vB, took 122 Âµs to calculate.`\r\n\r\n> After we process a block, invoke the rebroadcast module to identify if there\r\nare any transactions we would have expected to be included, and queue them up\r\nfor relay to our peers.\r\n\r\nMaybe it couldn't find any transactions that should be rebroadcasted based on fee rate and other things.\r\n\r\n> In order to prevent spam, we need to carefully select which transactions to rebroadcast. As of this commit, we select the transactions in the mempool that have the highest feerate.\r\n\r\nCan you explain the SPAM part mentioned in https://github.com/bitcoin/bitcoin/pull/21061/commits/b86f6d90a844dd71008f7c8a5fb92a1ac8673891? \r\n\r\nChecked unit tests and functional test included in this PR. It would be helpful if you can suggest more ways to experiment with `rebroadcast` and check different things? \r\n\r\n",
      "created_at" : "2021-03-13T00:58:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-797836751",
      "id" : 797836751,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc5NzgzNjc1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-14T21:51:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797836751",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r593968023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593968023"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Any reasons for 30 minutes? Less than 30 minutes might have issues. What if we use more than 30 minutes or user can define this in `bitcoin.conf`?",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-14T22:03:37Z",
      "diff_hunk" : "@@ -7,17 +7,22 @@\n #include <miner.h>\n #include <script/script.h>\n #include <txrebroadcast.h>\n+#include <util/time.h>\n \n /** We rebroadcast 3/4 of max block weight to reduce noise due to circumstances\n  *  such as miners mining priority transactions. */\n static constexpr unsigned int MAX_REBROADCAST_WEIGHT = 3 * MAX_BLOCK_WEIGHT / 4;\n \n+/** Default minimum age for a transaction to be rebroadcast */\n+static constexpr std::chrono::minutes REBROADCAST_MIN_TX_AGE = 30min;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r593968023",
      "id" : 593968023,
      "line" : 18,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzk2ODAyMw==",
      "original_commit_id" : "24e7415aeb248f5df3ca3492d5a6b75a213f978d",
      "original_line" : 17,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/txrebroadcast.cpp",
      "position" : 18,
      "pull_request_review_id" : 611742673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-14T22:04:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593968023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594660140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594660140"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Prefer default initialization when a member will always be initialized to the same value.\r\n\r\n```suggestion\r\n    int m_count{1};\r\n```\r\n\r\nAnd remove `m_count` from the initializer list.",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-15T20:27:25Z",
      "diff_hunk" : "@@ -0,0 +1,95 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXREBROADCAST_H\n+#define BITCOIN_TXREBROADCAST_H\n+\n+#include <policy/feerate.h>\n+#include <tuple>\n+#include <txmempool.h>\n+#include <util/hasher.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/multi_index/hashed_index.hpp>\n+#include <boost/multi_index/member.hpp>\n+#include <boost/multi_index/ordered_index.hpp>\n+#include <boost/multi_index_container.hpp>\n+\n+struct TxIds {\n+    TxIds(uint256 txid, uint256 wtxid) : m_txid(txid), m_wtxid(wtxid) {}\n+\n+    const uint256 m_txid;\n+    const uint256 m_wtxid;\n+};\n+\n+struct RebroadcastEntry {\n+    RebroadcastEntry(std::chrono::microseconds now_time, uint256 wtxid)\n+        : m_last_attempt(now_time),\n+          m_wtxid(wtxid),\n+          m_count(1) {}\n+\n+    std::chrono::microseconds m_last_attempt;\n+    const uint256 m_wtxid;\n+    int m_count;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594660140",
      "id" : 594660140,
      "line" : 35,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY2MDE0MA==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 35,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/txrebroadcast.h",
      "position" : 35,
      "pull_request_review_id" : 612614556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T20:55:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594660140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594661183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594661183"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is unused.",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-15T20:28:58Z",
      "diff_hunk" : "@@ -0,0 +1,95 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXREBROADCAST_H\n+#define BITCOIN_TXREBROADCAST_H\n+\n+#include <policy/feerate.h>\n+#include <tuple>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594661183",
      "id" : 594661183,
      "line" : 9,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY2MTE4Mw==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 9,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/txrebroadcast.h",
      "position" : 9,
      "pull_request_review_id" : 612614556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T20:55:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594661183",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594666637"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594666637"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It seems unnecessary to define a type here. `GetRebroadcastTransactions()` could just return a vector of std::pairs, and the one caller (`UpdatedBlockTip()`) can unpack that vector of pairs using :sparkle: s t r u c t u t e d :sparkle: b i n d i n g s :sparkle:. Here's what the caller would look like:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 7811e3ca40..e5a425b4c1 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -1393,12 +1393,12 @@ void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlock\r\n \r\n     // Rebroadcast selected mempool transactions\r\n     if (gArgs.GetArg(\"-rebroadcast\", DEFAULT_REBROADCAST_ENABLED)) {\r\n-        std::vector<TxIds> rebroadcast_txs = m_txrebroadcast.GetRebroadcastTransactions();\r\n+        auto rebroadcast_txs = m_txrebroadcast.GetRebroadcastTransactions();\r\n \r\n         LOCK(cs_main);\r\n \r\n-        for (auto ids : rebroadcast_txs) {\r\n-            RelayTransaction(ids.m_txid, ids.m_wtxid, m_connman);\r\n+        for (auto [txid, wtxid] : rebroadcast_txs) {\r\n+            RelayTransaction(txid, wtxid, m_connman);\r\n         }\r\n     }\r\n```\r\n\r\nThat client code works whether you return a vector of `TxIds` or a vector of `std::pair<uint256, uint256>>`s (which is as it should be :slightly_smiling_face: )",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-15T20:38:08Z",
      "diff_hunk" : "@@ -0,0 +1,95 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXREBROADCAST_H\n+#define BITCOIN_TXREBROADCAST_H\n+\n+#include <policy/feerate.h>\n+#include <tuple>\n+#include <txmempool.h>\n+#include <util/hasher.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/multi_index/hashed_index.hpp>\n+#include <boost/multi_index/member.hpp>\n+#include <boost/multi_index/ordered_index.hpp>\n+#include <boost/multi_index_container.hpp>\n+\n+struct TxIds {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594666637",
      "id" : 594666637,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY2NjYzNw==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 20,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/txrebroadcast.h",
      "position" : 20,
      "pull_request_review_id" : 612614556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T20:55:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594666637",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594670252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594670252"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps make this a unique_ptr, and then pass in a boolean to the PeerManagerImpl ctor to indicate whether you want to enable tx rebroadcast and initialize the pointer.\r\n\r\nThen, in `UpdatedBlockTip`:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 7811e3ca40..8bb5e8f87f 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -1392,8 +1392,8 @@ void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlock\r\n     }\r\n \r\n     // Rebroadcast selected mempool transactions\r\n-    if (gArgs.GetArg(\"-rebroadcast\", DEFAULT_REBROADCAST_ENABLED)) {\r\n-        std::vector<TxIds> rebroadcast_txs = m_txrebroadcast.GetRebroadcastTransactions();\r\n+    if (m_txrebroadcast) {\r\n+        std::vector<TxIds> rebroadcast_txs = m_txrebroadcast->GetRebroadcastTransactions();\r\n \r\n         LOCK(cs_main);\r\n```\r\n\r\nparametrizing whether the TxRebroadcastHandler is initialized avoids having to read the global args every block, and should make it the code path more obviously isolated and testable.",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-15T20:44:21Z",
      "diff_hunk" : "@@ -325,6 +326,7 @@ class PeerManagerImpl final : public PeerManager\n     ChainstateManager& m_chainman;\n     CTxMemPool& m_mempool;\n     TxRequestTracker m_txrequest GUARDED_BY(::cs_main);\n+    TxRebroadcastHandler m_txrebroadcast;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594670252",
      "id" : 594670252,
      "line" : 329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY3MDI1Mg==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 329,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 12,
      "pull_request_review_id" : 612614556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T20:55:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594670252",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594671707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594671707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Prefer default initialization in the declaration, rather than setting these in the ctor.",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-15T20:46:39Z",
      "diff_hunk" : "@@ -53,6 +53,8 @@ void RegenerateCommitments(CBlock& block, BlockManager& blockman)\n BlockAssembler::Options::Options() {\n     blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n     nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n+    m_skip_inclusion_until = std::chrono::microseconds::max();\n+    check_block_validity = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594671707",
      "id" : 594671707,
      "line" : 57,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY3MTcwNw==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 57,
      "original_position" : 5,
      "original_start_line" : 56,
      "path" : "src/miner.cpp",
      "position" : 5,
      "pull_request_review_id" : 612614556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-15T20:55:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594671707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594672688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594672688"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These aren't doing anything. They already get set in the `Options` constructor.",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-15T20:48:04Z",
      "diff_hunk" : "@@ -76,6 +80,9 @@ static BlockAssembler::Options DefaultOptions()\n     } else {\n         options.blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n     }\n+\n+    options.m_skip_inclusion_until = std::chrono::microseconds::max();\n+    options.check_block_validity = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594672688",
      "id" : 594672688,
      "line" : 85,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY3MjY4OA==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 85,
      "original_position" : 24,
      "original_start_line" : 84,
      "path" : "src/miner.cpp",
      "position" : 24,
      "pull_request_review_id" : 612614556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : 84,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-15T20:55:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594672688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594673886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594673886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "not needed!",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-15T20:49:54Z",
      "diff_hunk" : "@@ -0,0 +1,193 @@\n+// Copyright (c) 2011-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <amount.h>\n+#include <boost/test/unit_test.hpp>\n+#include <clientversion.h>\n+#include <consensus/tx_check.h>\n+#include <consensus/validation.h>\n+#include <core_io.h>\n+#include <key_io.h>\n+#include <rpc/util.h>\n+#include <script/interpreter.h>\n+#include <script/script.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+#include <tuple>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594673886",
      "id" : 594673886,
      "line" : 17,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY3Mzg4Ng==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 17,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/test/txrebroadcast_tests.cpp",
      "position" : 17,
      "pull_request_review_id" : 612614556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T20:55:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594673886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594674279"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594674279"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Separate library imports from local project imports:\r\n\r\n```suggestion\r\n#include <boost/test/unit_test.hpp>\r\n\r\n#include <amount.h>\r\n```",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-15T20:50:31Z",
      "diff_hunk" : "@@ -0,0 +1,193 @@\n+// Copyright (c) 2011-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <amount.h>\n+#include <boost/test/unit_test.hpp>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594674279",
      "id" : 594674279,
      "line" : 6,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY3NDI3OQ==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 6,
      "original_position" : 6,
      "original_start_line" : 5,
      "path" : "src/test/txrebroadcast_tests.cpp",
      "position" : 6,
      "pull_request_review_id" : 612614556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : 5,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-15T20:55:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594674279",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594677303"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594677303"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It'd be really nice to avoid including these boost headers in a header that will transitively be included in a lot of translation units. Could you hide the `indexed_rebroadcast_set` inside the .cpp file to avoid this?",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-15T20:55:29Z",
      "diff_hunk" : "@@ -0,0 +1,95 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXREBROADCAST_H\n+#define BITCOIN_TXREBROADCAST_H\n+\n+#include <policy/feerate.h>\n+#include <tuple>\n+#include <txmempool.h>\n+#include <util/hasher.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/multi_index/hashed_index.hpp>\n+#include <boost/multi_index/member.hpp>\n+#include <boost/multi_index/ordered_index.hpp>\n+#include <boost/multi_index_container.hpp>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r594677303",
      "id" : 594677303,
      "line" : 18,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDY3NzMwMw==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 18,
      "original_position" : 18,
      "original_start_line" : 15,
      "path" : "src/txrebroadcast.h",
      "position" : 18,
      "pull_request_review_id" : 612614556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : 15,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-15T20:55:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594677303",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r595033242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595033242"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A quick and easy way to do this is to make `indexed_rebroadcast_set` a class that inherits from the `boost::multi_index_container` template class (defined in .cpp), forward declare it in .h and make `m_attempt_tracker` a unique pointer to `indexed_rebroadcast_set`. A few other things need to be shuffled around to make that work, but here's a rough implementation:\r\n\r\n<details>\r\n<summary>Diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/test/txrebroadcast_tests.cpp b/src/test/txrebroadcast_tests.cpp\r\nindex 6fdd5deb8f..d10a962ab3 100644\r\n--- a/src/test/txrebroadcast_tests.cpp\r\n+++ b/src/test/txrebroadcast_tests.cpp\r\n@@ -27,34 +27,13 @@ public:\r\n \r\n     bool CheckRecordedAttempt(uint256 txhsh, int expected_count, std::chrono::microseconds expected_timestamp)\r\n     {\r\n-        const auto it = m_attempt_tracker.find(txhsh);\r\n-        if (it == m_attempt_tracker.end()) return false;\r\n-        if (it->m_count != expected_count) return false;\r\n-\r\n-        // Check the recorded timestamp is within 2 seconds of the param passed in\r\n-        std::chrono::microseconds delta = expected_timestamp - it->m_last_attempt;\r\n-        if (delta.count() > 2) return false;\r\n-\r\n-        return true;\r\n-    };\r\n+        return TxRebroadcastHandler::CheckRecordedAttempt(txhsh, expected_count, expected_timestamp);\r\n+    }\r\n \r\n     void UpdateAttempt(uint256 txhsh, int count)\r\n     {\r\n-        auto it = m_attempt_tracker.find(txhsh);\r\n-        for (int i = 0; i < count; ++i) {\r\n-            RecordAttempt(it);\r\n-        }\r\n-    };\r\n-\r\n-    void RecordAttempt(indexed_rebroadcast_set::index<index_by_wtxid>::type::iterator& entry_it)\r\n-    {\r\n-        auto UpdateRebroadcastEntry = [](RebroadcastEntry& rebroadcast_entry) {\r\n-            rebroadcast_entry.m_last_attempt = GetTime<std::chrono::microseconds>() - 4h;\r\n-            ++rebroadcast_entry.m_count;\r\n-        };\r\n-\r\n-        m_attempt_tracker.modify(entry_it, UpdateRebroadcastEntry);\r\n-    };\r\n+        TxRebroadcastHandler::UpdateAttempt(txhsh, count);\r\n+    }\r\n \r\n     void UpdateCachedFeeRate(CFeeRate new_fee_rate)\r\n     {\r\ndiff --git a/src/txrebroadcast.cpp b/src/txrebroadcast.cpp\r\nindex 3cb9abaf69..49050c0d39 100644\r\n--- a/src/txrebroadcast.cpp\r\n+++ b/src/txrebroadcast.cpp\r\n@@ -10,6 +10,11 @@\r\n #include <txrebroadcast.h>\r\n #include <validation.h>\r\n \r\n+#include <boost/multi_index/hashed_index.hpp>\r\n+#include <boost/multi_index/member.hpp>\r\n+#include <boost/multi_index/ordered_index.hpp>\r\n+#include <boost/multi_index_container.hpp>\r\n+\r\n /** We rebroadcast 3/4 of max block weight to reduce noise due to circumstances\r\n  *  such as miners mining priority transactions. */\r\n static constexpr unsigned int MAX_REBROADCAST_WEIGHT = 3 * MAX_BLOCK_WEIGHT / 4;\r\n@@ -30,6 +35,46 @@ static constexpr int MAX_ENTRIES = 500;\r\n /** The maximum age of an entry ~3 months */\r\n static constexpr std::chrono::hours MAX_ENTRY_AGE = std::chrono::hours(3 * 30 * 24);\r\n \r\n+/** Used for multi_index tag  */\r\n+struct index_by_last_attempt {};\r\n+\r\n+struct RebroadcastEntry {\r\n+    RebroadcastEntry(std::chrono::microseconds now_time, uint256 wtxid)\r\n+        : m_last_attempt(now_time),\r\n+          m_wtxid(wtxid),\r\n+          m_count(1) {}\r\n+\r\n+    std::chrono::microseconds m_last_attempt;\r\n+    const uint256 m_wtxid;\r\n+    int m_count;\r\n+};\r\n+\r\n+class indexed_rebroadcast_set : public\r\n+boost::multi_index_container<\r\n+    RebroadcastEntry,\r\n+    boost::multi_index::indexed_by<\r\n+        // sorted by wtxid\r\n+        boost::multi_index::hashed_unique<\r\n+            boost::multi_index::tag<index_by_wtxid>,\r\n+            boost::multi_index::member<RebroadcastEntry, const uint256, &RebroadcastEntry::m_wtxid>,\r\n+            SaltedTxidHasher\r\n+        >,\r\n+        // sorted by last rebroadcast time\r\n+        boost::multi_index::ordered_non_unique<\r\n+            boost::multi_index::tag<index_by_last_attempt>,\r\n+            boost::multi_index::member<RebroadcastEntry, std::chrono::microseconds, &RebroadcastEntry::m_last_attempt>\r\n+        >\r\n+    >\r\n+> {};\r\n+\r\n+TxRebroadcastHandler::TxRebroadcastHandler(CTxMemPool& mempool, ChainstateManager& chainman)\r\n+    : m_attempt_tracker{std::make_unique<indexed_rebroadcast_set>()}\r\n+    , m_mempool{mempool}\r\n+    , m_chainman{chainman}\r\n+{}\r\n+\r\n+TxRebroadcastHandler::~TxRebroadcastHandler() = default;\r\n+\r\n std::vector<TxIds> TxRebroadcastHandler::GetRebroadcastTransactions()\r\n {\r\n     std::vector<TxIds> rebroadcast_txs;\r\n@@ -58,12 +103,12 @@ std::vector<TxIds> TxRebroadcastHandler::GetRebroadcastTransactions()\r\n \r\n         // Check if we have previously rebroadcasted, decide if we will this\r\n         // round, and if so, record the attempt.\r\n-        auto entry_it = m_attempt_tracker.find(wtxid);\r\n+        auto entry_it = m_attempt_tracker->find(wtxid);\r\n \r\n-        if (entry_it == m_attempt_tracker.end()) {\r\n+        if (entry_it == m_attempt_tracker->end()) {\r\n             // No existing entry, we will rebroadcast, so create a new one\r\n             RebroadcastEntry entry(start_time, wtxid);\r\n-            m_attempt_tracker.insert(entry);\r\n+            m_attempt_tracker->insert(entry);\r\n         } else if (entry_it->m_count >= MAX_REBROADCAST_COUNT) {\r\n             // We have already rebroadcast this transaction the maximum number\r\n             // of times permitted, so skip rebroadcasting.\r\n@@ -76,7 +121,12 @@ std::vector<TxIds> TxRebroadcastHandler::GetRebroadcastTransactions()\r\n         } else {\r\n             // We have rebroadcasted this transaction before, but will try\r\n             // again now.\r\n-            RecordAttempt(entry_it);\r\n+            auto UpdateRebroadcastEntry = [](RebroadcastEntry& rebroadcast_entry) {\r\n+                rebroadcast_entry.m_last_attempt = GetTime<std::chrono::microseconds>();\r\n+                ++rebroadcast_entry.m_count;\r\n+            };\r\n+\r\n+            m_attempt_tracker->modify(entry_it, UpdateRebroadcastEntry);\r\n         }\r\n \r\n         // Add to set of rebroadcast candidates\r\n@@ -97,6 +147,32 @@ std::vector<TxIds> TxRebroadcastHandler::GetRebroadcastTransactions()\r\n     return rebroadcast_txs;\r\n };\r\n \r\n+void TxRebroadcastHandler::UpdateAttempt(uint256 txhsh, int count)\r\n+{\r\n+    auto it = m_attempt_tracker->find(txhsh);\r\n+    for (int i = 0; i < count; ++i) {\r\n+        auto UpdateRebroadcastEntry = [](RebroadcastEntry& rebroadcast_entry) {\r\n+            rebroadcast_entry.m_last_attempt = GetTime<std::chrono::microseconds>() - 4h;\r\n+            ++rebroadcast_entry.m_count;\r\n+        };\r\n+\r\n+        m_attempt_tracker->modify(it, UpdateRebroadcastEntry);\r\n+    }\r\n+};\r\n+\r\n+bool TxRebroadcastHandler::CheckRecordedAttempt(uint256 txhsh, int expected_count, std::chrono::microseconds expected_timestamp)\r\n+{\r\n+    const auto it = m_attempt_tracker->find(txhsh);\r\n+    if (it == m_attempt_tracker->end()) return false;\r\n+    if (it->m_count != expected_count) return false;\r\n+\r\n+    // Check the recorded timestamp is within 2 seconds of the param passed in\r\n+    std::chrono::microseconds delta = expected_timestamp - it->m_last_attempt;\r\n+    if (delta.count() > 2) return false;\r\n+\r\n+    return true;\r\n+};\r\n+\r\n void TxRebroadcastHandler::CacheMinRebroadcastFee()\r\n {\r\n     // Update stamp of chain tip on cache run\r\n@@ -109,33 +185,23 @@ void TxRebroadcastHandler::CacheMinRebroadcastFee()\r\n     LogPrint(BCLog::BENCH, \"Caching minimum fee for rebroadcast to %s, took %d Âµs to calculate.\\n\", m_cached_fee_rate.ToString(FeeEstimateMode::SAT_VB), delta_time.count());\r\n };\r\n \r\n-void TxRebroadcastHandler::RecordAttempt(indexed_rebroadcast_set::index<index_by_wtxid>::type::iterator& entry_it)\r\n-{\r\n-    auto UpdateRebroadcastEntry = [](RebroadcastEntry& rebroadcast_entry) {\r\n-        rebroadcast_entry.m_last_attempt = GetTime<std::chrono::microseconds>();\r\n-        ++rebroadcast_entry.m_count;\r\n-    };\r\n-\r\n-    m_attempt_tracker.modify(entry_it, UpdateRebroadcastEntry);\r\n-};\r\n-\r\n void TxRebroadcastHandler::TrimMaxRebroadcast()\r\n {\r\n     // Delete any entries that are older than MAX_ENTRY_AGE\r\n     std::chrono::microseconds min_age = GetTime<std::chrono::microseconds>() - MAX_ENTRY_AGE;\r\n \r\n-    while (!m_attempt_tracker.empty()) {\r\n-        auto it = m_attempt_tracker.get<index_by_last_attempt>().begin();\r\n+    while (!m_attempt_tracker->empty()) {\r\n+        auto it = m_attempt_tracker->get<index_by_last_attempt>().begin();\r\n         if (it->m_last_attempt < min_age) {\r\n-            m_attempt_tracker.get<index_by_last_attempt>().erase(it);\r\n+            m_attempt_tracker->get<index_by_last_attempt>().erase(it);\r\n         } else {\r\n             break;\r\n         }\r\n     }\r\n \r\n     // If there are still too many entries, delete the oldest ones\r\n-    while (m_attempt_tracker.size() > MAX_ENTRIES) {\r\n-        auto it = m_attempt_tracker.get<index_by_last_attempt>().begin();\r\n-        m_attempt_tracker.get<index_by_last_attempt>().erase(it);\r\n+    while (m_attempt_tracker->size() > MAX_ENTRIES) {\r\n+        auto it = m_attempt_tracker->get<index_by_last_attempt>().begin();\r\n+        m_attempt_tracker->get<index_by_last_attempt>().erase(it);\r\n     }\r\n };\r\ndiff --git a/src/txrebroadcast.h b/src/txrebroadcast.h\r\nindex 8a176a08bc..ec3ea34ed7 100644\r\n--- a/src/txrebroadcast.h\r\n+++ b/src/txrebroadcast.h\r\n@@ -12,11 +12,6 @@\r\n #include <util/time.h>\r\n #include <validation.h>\r\n \r\n-#include <boost/multi_index/hashed_index.hpp>\r\n-#include <boost/multi_index/member.hpp>\r\n-#include <boost/multi_index/ordered_index.hpp>\r\n-#include <boost/multi_index_container.hpp>\r\n-\r\n struct TxIds {\r\n     TxIds(uint256 txid, uint256 wtxid) : m_txid(txid), m_wtxid(wtxid) {}\r\n \r\n@@ -24,43 +19,15 @@ struct TxIds {\r\n     const uint256 m_wtxid;\r\n };\r\n \r\n-struct RebroadcastEntry {\r\n-    RebroadcastEntry(std::chrono::microseconds now_time, uint256 wtxid)\r\n-        : m_last_attempt(now_time),\r\n-          m_wtxid(wtxid),\r\n-          m_count(1) {}\r\n-\r\n-    std::chrono::microseconds m_last_attempt;\r\n-    const uint256 m_wtxid;\r\n-    int m_count;\r\n-};\r\n-\r\n-/** Used for multi_index tag  */\r\n-struct index_by_last_attempt {};\r\n-\r\n-using indexed_rebroadcast_set = boost::multi_index_container<\r\n-    RebroadcastEntry,\r\n-    boost::multi_index::indexed_by<\r\n-        // sorted by wtxid\r\n-        boost::multi_index::hashed_unique<\r\n-            boost::multi_index::tag<index_by_wtxid>,\r\n-            boost::multi_index::member<RebroadcastEntry, const uint256, &RebroadcastEntry::m_wtxid>,\r\n-            SaltedTxidHasher\r\n-        >,\r\n-        // sorted by last rebroadcast time\r\n-        boost::multi_index::ordered_non_unique<\r\n-            boost::multi_index::tag<index_by_last_attempt>,\r\n-            boost::multi_index::member<RebroadcastEntry, std::chrono::microseconds, &RebroadcastEntry::m_last_attempt>\r\n-        >\r\n-    >\r\n->;\r\n+class indexed_rebroadcast_set;\r\n \r\n class TxRebroadcastHandler\r\n {\r\n public:\r\n-    TxRebroadcastHandler(CTxMemPool& mempool, ChainstateManager& chainman)\r\n-        : m_mempool(mempool),\r\n-          m_chainman(chainman){};\r\n+    TxRebroadcastHandler(CTxMemPool& mempool, ChainstateManager& chainman);\r\n+    ~TxRebroadcastHandler();\r\n+\r\n+    TxRebroadcastHandler(const TxRebroadcastHandler& other) = delete;\r\n \r\n     std::vector<TxIds> GetRebroadcastTransactions();\r\n \r\n@@ -75,10 +42,13 @@ protected:\r\n     CFeeRate m_cached_fee_rate;\r\n \r\n     /** Keep track of previous rebroadcast attempts */\r\n-    indexed_rebroadcast_set m_attempt_tracker;\r\n+    std::unique_ptr<indexed_rebroadcast_set> m_attempt_tracker;\r\n+\r\n+    /** Test only */\r\n+    void UpdateAttempt(uint256 txhsh, int count);\r\n \r\n-    /** Update an existing RebroadcastEntry - increment count and update timestamp */\r\n-    void RecordAttempt(indexed_rebroadcast_set::index<index_by_wtxid>::type::iterator& entry_it);\r\n+    /** Test only */\r\n+    bool CheckRecordedAttempt(uint256 txhsh, int expected_count, std::chrono::microseconds expected_timestamp);\r\n \r\n private:\r\n     const CTxMemPool& m_mempool;\r\n```\r\n\r\n</details>",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-16T10:20:02Z",
      "diff_hunk" : "@@ -0,0 +1,95 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXREBROADCAST_H\n+#define BITCOIN_TXREBROADCAST_H\n+\n+#include <policy/feerate.h>\n+#include <tuple>\n+#include <txmempool.h>\n+#include <util/hasher.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/multi_index/hashed_index.hpp>\n+#include <boost/multi_index/member.hpp>\n+#include <boost/multi_index/ordered_index.hpp>\n+#include <boost/multi_index_container.hpp>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r595033242",
      "id" : 595033242,
      "in_reply_to_id" : 594677303,
      "line" : 18,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTAzMzI0Mg==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 18,
      "original_position" : 18,
      "original_start_line" : 15,
      "path" : "src/txrebroadcast.h",
      "position" : 18,
      "pull_request_review_id" : 613068719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : 15,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-16T10:20:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595033242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r596515495"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596515495"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could keep the old cached fee rate here, so that if you try end up doing `UpdateTip / CacheMinRebroadcastFee / RebroadcatTxs` you can do something sensible?\r\n\r\n```c++\r\n   new_tip = ::ChainActive().Tip();\r\n   if (new_tip != m_tip_at_cache_time) {\r\n       m_last_cached_fee_rate = m_cached_fee_rate;\r\n   } else {\r\n       m_last_cached_fee_rate = max; // ?\r\n   }\r\n   m_tip_at_cache_time = new_tip;\r\n```   ",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-18T02:50:16Z",
      "diff_hunk" : "@@ -0,0 +1,141 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <miner.h>\n+#include <script/script.h>\n+#include <txrebroadcast.h>\n+#include <validation.h>\n+\n+/** We rebroadcast 3/4 of max block weight to reduce noise due to circumstances\n+ *  such as miners mining priority transactions. */\n+static constexpr unsigned int MAX_REBROADCAST_WEIGHT = 3 * MAX_BLOCK_WEIGHT / 4;\n+\n+/** Default minimum age for a transaction to be rebroadcast */\n+static constexpr std::chrono::minutes REBROADCAST_MIN_TX_AGE = 30min;\n+\n+/** Maximum number of times we will rebroadcast a tranasaction */\n+static constexpr int MAX_REBROADCAST_COUNT = 6;\n+\n+/** Minimum amount of time between returning the same transaction for\n+ * rebroadcast */\n+static constexpr std::chrono::hours MIN_REATTEMPT_INTERVAL = 4h;\n+\n+/** The maximum number of entries permitted in m_attempt_tracker */\n+static constexpr int MAX_ENTRIES = 500;\n+\n+/** The maximum age of an entry ~3 months */\n+static constexpr std::chrono::hours MAX_ENTRY_AGE = std::chrono::hours(3 * 30 * 24);\n+\n+std::vector<TxIds> TxRebroadcastHandler::GetRebroadcastTransactions()\n+{\n+    std::vector<TxIds> rebroadcast_txs;\n+    std::chrono::microseconds start_time = GetTime<std::chrono::microseconds>();\n+\n+    // If there has not been a cache run since the last block, the fee rate\n+    // condition will not filter out any transactions, so skip this run.\n+    if (m_tip_at_cache_time == ::ChainActive().Tip()) return rebroadcast_txs;\n+\n+    BlockAssembler::Options options;\n+    options.nBlockMaxWeight = MAX_REBROADCAST_WEIGHT;\n+    options.m_skip_inclusion_until = start_time - REBROADCAST_MIN_TX_AGE;\n+    options.check_block_validity = false;\n+    options.blockMinFeeRate = m_cached_fee_rate;\n+\n+    // Use CreateNewBlock to identify rebroadcast candidates\n+    auto block_template = BlockAssembler(m_mempool, Params(), options)\n+                          .CreateNewBlock(m_chainman.ActiveChainstate(), CScript());\n+    std::chrono::microseconds after_CNB_time = GetTime<std::chrono::microseconds>();\n+\n+    for (const CTransactionRef& tx : block_template->block.vtx) {\n+        if (tx->IsCoinBase()) continue;\n+\n+        uint256 txid = tx->GetHash();\n+        uint256 wtxid = tx->GetWitnessHash();\n+\n+        // Check if we have previously rebroadcasted, decide if we will this\n+        // round, and if so, record the attempt.\n+        auto entry_it = m_attempt_tracker.find(wtxid);\n+\n+        if (entry_it == m_attempt_tracker.end()) {\n+            // No existing entry, we will rebroadcast, so create a new one\n+            RebroadcastEntry entry(start_time, wtxid);\n+            m_attempt_tracker.insert(entry);\n+        } else if (entry_it->m_count >= MAX_REBROADCAST_COUNT) {\n+            // We have already rebroadcast this transaction the maximum number\n+            // of times permitted, so skip rebroadcasting.\n+            continue;\n+        } else if (entry_it->m_last_attempt > start_time - MIN_REATTEMPT_INTERVAL) {\n+            // We already rebroadcasted this in the past 4 hours. Even if we\n+            // added it to the set, it would probably not get INVed to most\n+            // peers due to filterInventoryKnown.\n+            continue;\n+        } else {\n+            // We have rebroadcasted this transaction before, but will try\n+            // again now.\n+            RecordAttempt(entry_it);\n+        }\n+\n+        // Add to set of rebroadcast candidates\n+        rebroadcast_txs.push_back(TxIds(txid, wtxid));\n+    }\n+\n+    TrimMaxRebroadcast();\n+\n+    std::chrono::microseconds delta1 = after_CNB_time - start_time;\n+    std::chrono::microseconds delta2 = GetTime<std::chrono::microseconds>() - start_time;\n+    LogPrint(BCLog::BENCH, \"GetRebroadcastTransactions(): %d Âµs total, %d Âµs spent in CreateNewBlock.\\n\", delta1.count(), delta2.count());\n+    LogPrint(BCLog::NET, \"Queued %d transactions for attempted rebroadcast, filtered from %d candidates with cached fee rate of %s.\\n\", rebroadcast_txs.size(), block_template->block.vtx.size() - 1, m_cached_fee_rate.ToString(FeeEstimateMode::SAT_VB));\n+\n+    for (TxIds ids : rebroadcast_txs) {\n+        LogPrint(BCLog::NET, \"Attempting to rebroadcast txid: %s, wtxid: %s\\n\", ids.m_txid.ToString(), ids.m_wtxid.ToString());\n+    }\n+\n+    return rebroadcast_txs;\n+};\n+\n+void TxRebroadcastHandler::CacheMinRebroadcastFee()\n+{\n+    // Update stamp of chain tip on cache run\n+    m_tip_at_cache_time = ::ChainActive().Tip();\n+\n+    // Update cache fee rate\n+    std::chrono::microseconds start_time = GetTime<std::chrono::microseconds>();\n+    m_cached_fee_rate = BlockAssembler(m_mempool, Params()).minTxFeeRate();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r596515495",
      "id" : 596515495,
      "line" : 107,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjUxNTQ5NQ==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 107,
      "original_position" : 107,
      "original_start_line" : null,
      "path" : "src/txrebroadcast.cpp",
      "position" : 107,
      "pull_request_review_id" : 614939135,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-18T02:50:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596515495",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r596516729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596516729"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "txrebroadcast.h is only included from net_processing and txrebroadcast.cpp itself, and net_processing already includes txmempool.h so there's not much saving to be had here I think",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-18T02:54:33Z",
      "diff_hunk" : "@@ -0,0 +1,95 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXREBROADCAST_H\n+#define BITCOIN_TXREBROADCAST_H\n+\n+#include <policy/feerate.h>\n+#include <tuple>\n+#include <txmempool.h>\n+#include <util/hasher.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/multi_index/hashed_index.hpp>\n+#include <boost/multi_index/member.hpp>\n+#include <boost/multi_index/ordered_index.hpp>\n+#include <boost/multi_index_container.hpp>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r596516729",
      "id" : 596516729,
      "in_reply_to_id" : 594677303,
      "line" : 18,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjUxNjcyOQ==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 18,
      "original_position" : 18,
      "original_start_line" : 15,
      "path" : "src/txrebroadcast.h",
      "position" : 18,
      "pull_request_review_id" : 614940621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : 15,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-18T02:54:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596516729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sorry to bring bad news but this needs rebase. There is a silent merge conflict (with 680eb56d828ce358b4e000c140f5b247ff5e6179 part of #21162). Merged on top of master the following build error appears:\r\n```\r\n  CXX      libbitcoin_server_a-net_processing.o\r\nnet_processing.cpp:1396:55: error: too many arguments to function call, expected 2, have 3\r\n            RelayTransaction(ids.m_txid, ids.m_wtxid, m_connman);\r\n            ~~~~~~~~~~~~~~~~                          ^~~~~~~~~\r\nnet_processing.cpp:251:5: note: 'RelayTransaction' declared here\r\n    void RelayTransaction(const uint256& txid, const uint256& wtxid) override;\r\n    ^\r\n1 error generated.\r\n```",
      "created_at" : "2021-03-24T09:15:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-805633642",
      "id" : 805633642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNTYzMzY0Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-24T09:15:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/805633642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r600423847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600423847"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not currently, but I think a long-term it'd be good to remove the boost header dependencies from modules that aren't using boost multi_index. That'd involve refactoring the txmempool interface so it's not exposing multi_index objects.\r\n\r\nTo be honest, I'm not entirely sure how much actual benefit this would have on build times and binary size. I think that boost multi_index is almost entirely templates, so if they're not being instantiated in a translation unit, then it's probably minimal. Still, I think it's a good goal in itself to minimize where third party libraries are exposed within our code structure.",
      "commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "created_at" : "2021-03-24T12:17:30Z",
      "diff_hunk" : "@@ -0,0 +1,95 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXREBROADCAST_H\n+#define BITCOIN_TXREBROADCAST_H\n+\n+#include <policy/feerate.h>\n+#include <tuple>\n+#include <txmempool.h>\n+#include <util/hasher.h>\n+#include <util/time.h>\n+#include <validation.h>\n+\n+#include <boost/multi_index/hashed_index.hpp>\n+#include <boost/multi_index/member.hpp>\n+#include <boost/multi_index/ordered_index.hpp>\n+#include <boost/multi_index_container.hpp>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#discussion_r600423847",
      "id" : 600423847,
      "in_reply_to_id" : 594677303,
      "line" : 18,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDQyMzg0Nw==",
      "original_commit_id" : "038f751e9ce27f885f0baa87cd13d89fe71fa3d5",
      "original_line" : 18,
      "original_position" : 18,
      "original_start_line" : 15,
      "path" : "src/txrebroadcast.h",
      "position" : 18,
      "pull_request_review_id" : 619647027,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061",
      "side" : "RIGHT",
      "start_line" : 15,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-24T12:17:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/600423847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "~~NACK if:~~\r\n\r\n~~1. Not random\r\nhttps://github.com/bitcoin/bitcoin/pull/21061#issuecomment-797836751~~\r\n\r\n~~2.  User cannot decide REBROADCAST_MIN_TX_AGE https://github.com/bitcoin/bitcoin/pull/21061#discussion_r593968023~~\r\n\r\n~~Because, then it does not achieve things mentioned in  motivation: _This is bad for privacy because it leaks information that allows spy nodes to link bitcoin addresses with IP addresses, a relationship we aim to obfuscate._~~\r\n\r\n~~We should not change the way spy nodes work. There will be a pattern here which can be followed.~~\r\n\r\nI changed my opinion and shared things below: https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-808026799",
      "created_at" : "2021-03-25T00:01:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-806259991",
      "id" : 806259991,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNjI1OTk5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-26T08:14:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/806259991",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@prayank23 I think you're confused about the goal of this PR. The current problem is that rebroadcasting is something that _only_ happens for your own transactions. Any peer that observes rebroadcasting knows for a fact that it is yours. This PR changes things so that rebroadcasting is done uniformly for *all* transactions, without special treatment of your own. By definition, if the fact whether a transaction is yours is no longer used in the decision to rebroadcast or not, there is no signal any peer can infer anything from.\r\n\r\nThat obviously does not prevent spy nodes from learning other things (like observing which nodes broadcast first to infer origin), but it categorically removes rebroadcasting behavior from the set of leaks.",
      "created_at" : "2021-03-25T00:07:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-806262328",
      "id" : 806262328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNjI2MjMyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-25T00:10:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/806262328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> This PR changes things so that rebroadcasting is done **uniformly for all transactions**, **without special treatment** of your own. By definition, if the fact whether a transaction is yours is no longer used in the decision to rebroadcast or not, there is no signal any peer can infer anything from.\r\n\r\nThis PR improves on 1 thing: They are not all mine\r\nThis PR adds 1 thing: New pattern (fee rate and time in mempool)\r\n\r\nIt makes things different but not difficult for spy nodes \r\n\r\nWhat is wrong with my comments? Random txs and time decided by users\r\n\r\nNobody knows what \"should\" be mined except miners and that 30 minutes time frame is weird for Bitcoin",
      "created_at" : "2021-03-25T00:44:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-806276155",
      "id" : 806276155,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNjI3NjE1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-25T00:45:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/806276155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This PR adds 1 thing: New pattern (fee rate and time in mempool)\r\n\r\nI see what you mean now. Indeed, it does, but I think this is completely negligible. What it leaks about the mempool is on a scale of 30 minutes to hours. Within such amounts of time, we already reveal the transactions we've learned (simply by telling other nodes in the process of normal relay, every few seconds). The concern about privacy here is on the scale of seconds or less - by knowing which nodes see a transaction first an attacker can infer its origin. Revealing what was in your mempool 30 minutes ago is a non-issue.\r\n\r\nFeerate is already revealed (infrequently & quantized) through BIP133 feefilter messages.\r\n\r\n> It makes things different but not difficult for spy nodes.\r\n\r\nI disagree here. This change completely removes the issue of learning which transactions belong to a node based on rebroadcasting behavior, which is an enormous leak.\r\n\r\n> What is wrong with my comments? Random txs and time decided by users\r\n\r\nWhat do you mean by \"random txs\"?\r\n\r\nTime decided by users: generally the criterion for deciding whether a parameter should be configurable is whether you can also give advice under which cases users should be changing it, and how. I don't know what advice I'd give users except not to touch it; setting it very low could become a privacy issue (using the mechanism you point out), setting it very high may make it useless; things in between probably hardly matter. Do you have a scenario in mind under which you'd suggest changing it?\r\n\r\n> Nobody knows what \"should\" be mined except miners\r\n\r\nThat is literally what the mempool is: a node's prediction of what will be mined in the near future. It doesn't matter that this prediction is sometimes wrong.\r\n\r\n> and that 30 minutes time frame is weird for Bitcoin\r\n\r\nReal world protocol implementations are full of arbitrary-seeming constants.",
      "created_at" : "2021-03-25T01:09:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-806284509",
      "id" : 806284509,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNjI4NDUwOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-25T01:25:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/806284509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I thought of different scenarios including weekends when we see less transactions but couldn't find anything that supports my argument. So I change my opinion for now and maybe need to do more research. This PR improves things and if there is any need for further changes to improve privacy it can be done in follow up PRs.\r\n\r\nBelow is a diagram in which I was trying to visualize what happens in A(this PR) and B(things I suggested). I agree with you this change completely removes the issue of learning which transactions belong to a node based on rebroadcasting behavior, which is an enormous leak.\r\n\r\n![image](https://user-images.githubusercontent.com/13405205/112599666-41e77c80-8e36-11eb-8cea-b487903dc4ae.png)\r\n\r\n> What do you mean by \"random txs\"?\r\n\r\nRandomization can be done using different algorithms. But a basic random rebroadcast would ignore filtering based on fee rate. Example: Mempool has 10 txs. A,B,C,D,E,F,G,H,I,J. Using this PR, ABCD are rebroadcasted but in my case AB rebroadcasted once and maybe AED next time if still not confirmed and almost same mempool. Again this suggestion can be ignored and I saw 1sat/vByte being used for filtering when I tried on testnet. Maybe need to do more tests and use mainnet as well.\r\n\r\n> Real world protocol implementations are full of arbitrary-seeming constants.\r\n\r\nI was suggesting to use either a default value like 30 minutes and user can change it if required. Or decide a MIN and MAX so that anything between this range can be used else default 30 minutes will be used.\r\n\r\nSometimes we don't see any blocks for more than 30 minutes in Bitcoin and few blocks are mined in couple of minutes gap. Considering this it would have been better if there was some algorithm that could adjust the value for us automatically within a range based on last N blocks. But it can also be done manually or we could just ignore this suggestion and do in follow up PRs if required.\r\n\r\n![image](https://user-images.githubusercontent.com/13405205/112601480-8411bd80-8e38-11eb-814a-78dfd6f2bf62.png)\r\n\r\n",
      "created_at" : "2021-03-26T08:14:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061#issuecomment-808026799",
      "id" : 808026799,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwODAyNjc5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-26T08:14:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/808026799",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   }
]
