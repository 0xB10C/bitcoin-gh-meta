{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "## TLDR\r\nThis PR is a revamp of #16698\r\n\r\n**Status:** \r\n- ready for review, seeking approach feedback \r\n- `bitcoind` code & unit tests included. functional tests to be added soon.\r\n\r\n## Motivation:\r\nOur legacy rebroadcast mechanism lives in the wallet code. It rebroadcasts only & all transactions which are âmineâ, not discerning if the fee rate indicates the transaction should actually have been confirmed by now. This is bad for privacy because it leaks information that allows spy nodes to link bitcoin addresses with IP addresses, a relationship we aim to obfuscate. \r\n\r\n## PR Overview:\r\nThis PR introduces a rebroadcast mechanism in the node. Instead of only rebroadcasting our own transactions, we will notify the network about _any_ transactions we identified as missing from blocks based on fee rate expectations in our own mempool. \r\n\r\nThe new module is currently behind a configuration flag that defaults to off.\r\n\r\nThe end goal is to enable node rebroadcast by default, and remove wallet rebroadcast. This would improve privacy for a few main reasons: \r\n1. We would no longer eagerly rebroadcast all of our wallet transactions regardless of fee-rate. We add logic to rebroadcast the ones which have a competitive rate according to the current blocks being mined. \r\n2. If a spy observes a bitcoin core node rebroadcasting a transaction, it would no longer know that the node has wallet enabled. \r\n3. If a spy observed a bitcoin core node rebroadcasting a transaction, it would no longer be able to deduce with high confidence that the associated wallet is participating in that transaction.\r\n\r\n## Approach: \r\nConceptually, we want to rebroadcast transactions that we believe âshouldâ have been mined by now.  Since we expect miners to prioritize transactions with the highest package fee rates, we select high fee rate transactions that have been in our mempool for some time, but have not yet been mined. \r\n\r\nThis PR introduces a `txrebroadcast` module that encapsulates the selection logic. When `PeerManager` gets notified that we have received and processed a block, we trigger the rebroadcast logic. The module calculates the highest fee rate mempool packages that meet some additional conditions- the transaction must be > 30 minutes old, and surpass a fee threshold. This threshold is calculated by periodically (every minute) identifying the top block of transactions in our mempool, and caching the fee rate for a package to be included. We eliminate any of these candidates that we have rebroadcasted recently (last 4 hours), or already rebroadcast more than a maximum amount of times (6). We store any remaining candidates on each peerâs `setInventoryTxToSend`, which they will potentially relay next time we hit `SendMessages` for that peer (subject to general transaction relay conditions). \r\n\r\n## Merge Plan & Next Steps:\r\nAll of the functionality in this PR is hidden behind a configuration switch that defaults to off, and the wallet rebroadcast logic is currently untouched. The idea is to make these changes as safe as possible to merge into master, and allow reviewers to easily enable and observe the new rebroadcast mechanism in todayâs network conditions. \r\n\r\nIf we build confidence that these changes are safe and desirable, we can default enable this new node rebroadcast logic and disable the legacy wallet rebroadcast logic. This is the desired end goal. \r\n\r\n## Project History: \r\nA version of these changes were originally proposed in #16698. \r\n\r\n#18038 broke out a subset of the functionality, enabling the node to provide a guarantee around minimal initial broadcast & reducing the frequency of the existing wallet rebroadcast functionality (unbroadcast set) \r\n\r\nSince #16698, there have been some changes in approach, and all of the unbroadcast conversation is no longer relevant. So, to help with review, I've decided to open a new PR. To preserve the relevant feedback and concerns, I've tried my best to capture the history of conversations in a write-up [here](https://github.com/amitiuttarwar/bitcoin-notes/blob/main/rebroadcast-history.md).\r\n\r\n\r\nðð½ Huge shout out to the village of core contributors who have provided feedback & guidance on this project so far. Honestly too many to name, but this project is much better for it. Thank you :) \r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061/comments",
   "created_at" : "2021-02-02T01:28:53Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061",
   "id" : 798844282,
   "labels" : [
      {
         "color" : "006b75",
         "default" : false,
         "description" : null,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NTY1NTkwNjcw",
   "number" : 21061,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/21061.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21061",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/21061.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21061"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "[p2p] Introduce node rebroadcast module ",
   "updated_at" : "2021-02-02T01:29:45Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21061",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
      "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
      "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/amitiuttarwar",
      "id" : 1500952,
      "login" : "amitiuttarwar",
      "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
      "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
      "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
      "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/amitiuttarwar"
   }
}
