[
   {
      "author_association" : "MEMBER",
      "body" : "Please add some explanation, why is \"wallets\" a special name? Wallets are created, by default, in a directory named \"wallets\" but I don't see how creating a sub-directory in that named wallet should be problematic?\r\n\r\n(and if so, isn't that a bug to be fixed and a functional test added for instead of worked around?)",
      "created_at" : "2021-02-03T10:07:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21073#issuecomment-772390803",
      "id" : 772390803,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21073",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MjM5MDgwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-03T10:09:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/772390803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\r\n\r\n> Please add some explanation, why is \"wallets\" a special name? Wallets are created, by default, in a directory named \"wallets\" but I don't see how creating a sub-directory in that named wallet should be problematic?\r\n> \r\n> (and if so, isn't that a bug to be fixed and a functional test added for instead of worked around?)\r\n\r\nSorry, but afaics u can not test this with regtest,signet or testnet that effects only mainnet nodes.\r\nedit@saibato\r\nIf the node has no wallets dir i.e old and run with a new version  or just a pure  mainnet` `bitcoind or bitcoin-qt-datadir=somewhere node. `\r\nthe wallets subdir since 0.17 and above is not created by default and on node restart u can run in an unexpected situation.\r\n",
      "created_at" : "2021-02-03T10:15:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21073#issuecomment-772395597",
      "id" : 772395597,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21073",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MjM5NTU5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-03T10:28:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/772395597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21073#discussion_r569624122"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21073"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569624122"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n        error = Untranslated(\"Please use a different walletname \\\"\") + Untranslated(name) + Untranslated(\"\\\" - wallets is a reserved word.\") + Untranslated(\" \") + error;\r\n```",
      "commit_id" : "4504fabe10dfc208af7d5b168cd7072e6cf2cc42",
      "created_at" : "2021-02-03T17:53:00Z",
      "diff_hunk" : "@@ -249,6 +249,13 @@ std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const std::strin\n     uint64_t wallet_creation_flags = options.create_flags;\n     const SecureString& passphrase = options.create_passphrase;\n \n+    // Sanity check bitcoin internal reserved\n+    if (std::memcmp(name.c_str(), \"wallets\", 7) == 0) {\n+        error = Untranslated(\"Please use a different walletname \\\"\") + Untranslated(name) + Untranslated(\"\\\" - wallets is an reserved word.\") + Untranslated(\" \") + error;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21073#discussion_r569624122",
      "id" : 569624122,
      "line" : 254,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTYyNDEyMg==",
      "original_commit_id" : "4504fabe10dfc208af7d5b168cd7072e6cf2cc42",
      "original_line" : 254,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 6,
      "pull_request_review_id" : 582642054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21073",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-03T17:53:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569624122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/78498290?v=4",
         "events_url" : "https://api.github.com/users/zoltan-konder/events{/privacy}",
         "followers_url" : "https://api.github.com/users/zoltan-konder/followers",
         "following_url" : "https://api.github.com/users/zoltan-konder/following{/other_user}",
         "gists_url" : "https://api.github.com/users/zoltan-konder/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/zoltan-konder",
         "id" : 78498290,
         "login" : "zoltan-konder",
         "node_id" : "MDQ6VXNlcjc4NDk4Mjkw",
         "organizations_url" : "https://api.github.com/users/zoltan-konder/orgs",
         "received_events_url" : "https://api.github.com/users/zoltan-konder/received_events",
         "repos_url" : "https://api.github.com/users/zoltan-konder/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/zoltan-konder/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/zoltan-konder/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/zoltan-konder"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21073#discussion_r569691208"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21073"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569691208"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n        error = Untranslated(\"Please use a different walletname \\\"\") + Untranslated(name) + Untranslated(\"\\\" - wallets is reserved from use.\") + Untranslated(\" \") + error;\r\n```",
      "commit_id" : "4504fabe10dfc208af7d5b168cd7072e6cf2cc42",
      "created_at" : "2021-02-03T19:32:06Z",
      "diff_hunk" : "@@ -249,6 +249,13 @@ std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const std::strin\n     uint64_t wallet_creation_flags = options.create_flags;\n     const SecureString& passphrase = options.create_passphrase;\n \n+    // Sanity check bitcoin internal reserved\n+    if (std::memcmp(name.c_str(), \"wallets\", 7) == 0) {\n+        error = Untranslated(\"Please use a different walletname \\\"\") + Untranslated(name) + Untranslated(\"\\\" - wallets is an reserved word.\") + Untranslated(\" \") + error;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21073#discussion_r569691208",
      "id" : 569691208,
      "line" : 254,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTY5MTIwOA==",
      "original_commit_id" : "4504fabe10dfc208af7d5b168cd7072e6cf2cc42",
      "original_line" : 254,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 6,
      "pull_request_review_id" : 582728070,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21073",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-03T19:35:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569691208",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/78498290?v=4",
         "events_url" : "https://api.github.com/users/zoltan-konder/events{/privacy}",
         "followers_url" : "https://api.github.com/users/zoltan-konder/followers",
         "following_url" : "https://api.github.com/users/zoltan-konder/following{/other_user}",
         "gists_url" : "https://api.github.com/users/zoltan-konder/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/zoltan-konder",
         "id" : 78498290,
         "login" : "zoltan-konder",
         "node_id" : "MDQ6VXNlcjc4NDk4Mjkw",
         "organizations_url" : "https://api.github.com/users/zoltan-konder/orgs",
         "received_events_url" : "https://api.github.com/users/zoltan-konder/received_events",
         "repos_url" : "https://api.github.com/users/zoltan-konder/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/zoltan-konder/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/zoltan-konder/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/zoltan-konder"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj \r\nhere a patch to test also mainnet nodes and this issue with our framework, that could be adapted to a full functional test :-)\r\n \r\n```Diff\r\ndiff --git a/test/functional/test_framework/test_framework.py b/test/functional/test_framework/test_framework.py\r\nindex 4bda73599..440ff2672 100755\r\n--- a/test/functional/test_framework/test_framework.py\r\n+++ b/test/functional/test_framework/test_framework.py\r\n@@ -403,7 +403,10 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\r\n             n = self.nodes[i]\r\n             if wallet_name is not None:\r\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\r\n-            n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase')\r\n+            if self.PRIV_KEYS is None:\r\n+                n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase')\r\n+            else:\r\n+                n.importprivkey(privkey=self.PRIV_KEYS[i].key, label='coinbase')\r\n \r\n     def run_test(self):\r\n         \"\"\"Tests must override this method to define test logic\"\"\"\r\ndiff --git a/test/functional/test_framework/util.py b/test/functional/test_framework/util.py\r\nindex 123c48852..b5d334ffc 100644\r\n--- a/test/functional/test_framework/util.py\r\n+++ b/test/functional/test_framework/util.py\r\n@@ -399,7 +399,10 @@ def get_auth_cookie(datadir, chain):\r\n                     assert password is None  # Ensure that there is only one rpcpassword line\r\n                     password = line.split(\"=\")[1].strip(\"\\n\")\r\n     try:\r\n-        with open(os.path.join(datadir, chain, \".cookie\"), 'r', encoding=\"ascii\") as f:\r\n+        sub = chain\r\n+        if sub == \"main\" :\r\n+            sub = \"\"\r\n+        with open(os.path.join(datadir, sub, \".cookie\"), 'r', encoding=\"ascii\") as f:\r\n             userpass = f.read()\r\n             split_userpass = userpass.split(':')\r\n             user = split_userpass[0]\r\n@@ -413,7 +416,10 @@ def get_auth_cookie(datadir, chain):\r\n \r\n # If a cookie file exists in the given datadir, delete it.\r\n def delete_cookie_file(datadir, chain):\r\n-    if os.path.isfile(os.path.join(datadir, chain, \".cookie\")):\r\n+    sub = chain\r\n+    if chain == \"main\":\r\n+        sub = \"\"\r\n+    if os.path.isfile(os.path.join(datadir, sub, \".cookie\")):\r\n         logger.debug(\"Deleting leftover cookie file\")\r\n         os.remove(os.path.join(datadir, chain, \".cookie\"))\r\n \r\ndiff --git a/test/functional/wallet_test.py b/test/functional/wallet_test.py\r\nnew file mode 100755\r\nindex 000000000..07d55fb83\r\n--- /dev/null\r\n+++ b/test/functional/wallet_test.py\r\n@@ -0,0 +1,58 @@\r\n+#!/usr/bin/env python3\r\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\r\n+# Distributed under the MIT software license, see the accompanying\r\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n+\"\"\"Test wallet load on startup.\r\n+\r\n+Verify that a bitcoind node can maintain list of wallets loading on startup\r\n+\"\"\"\r\n+from test_framework.test_framework import BitcoinTestFramework\r\n+from test_framework.util import (\r\n+    assert_equal,\r\n+    assert_raises_rpc_error,\r\n+)\r\n+import collections\r\n+\r\n+class WalletStartupTest(BitcoinTestFramework):\r\n+\r\n+    AddressKeyPair = collections.namedtuple('AddressKeyPair', ['address', 'key'])\r\n+    MAIN_DET_PRIV_KEYS = [\r\n+        # address , privkey\r\n+        AddressKeyPair('bc1q4s7uj8djf97wp0z8ela90jz2wejfs5jy4e630t', 'KzNYJxz4SsNKpLeqtMcQ6gNfZv6GMdxAP6y8q8W5JtqUpBC2WWYw'),\r\n+        AddressKeyPair('bc1q4adkrm53zvruavgsygnswtywrq04s8cslsnpjh', 'Kwc3y7M9P7Jewqmvh1XBqVhCUtMR4x49qGowxjDciFtB41aNHKyE'),\r\n+    ]\r\n+\r\n+    def set_test_params(self):\r\n+        self.chain = 'main'\r\n+        self.num_nodes = 2\r\n+        self.setup_clean_chain = True\r\n+        self.PRIV_KEYS = self.MAIN_DET_PRIV_KEYS\r\n+\r\n+    def run_test(self):\r\n+        self.log.info('test if we still hve the orginal wallets key')\r\n+        self.nodes[0].createwallet(\"w1\")\r\n+        self.nodes[0].createwallet(\"w2\")\r\n+        assert_equal(self.nodes[0].listwallets(), ['', 'w1', 'w2'])\r\n+        print(self.nodes[0].listwallets())\r\n+        n = self.nodes[0].get_wallet_rpc('')\r\n+        address = n.getnewaddress()\r\n+        print(address)\r\n+        print(n.dumpprivkey(address))\r\n+        print(self.nodes[0].createwallet(\"wallets\"))\r\n+        n = self.nodes[0].get_wallet_rpc('')\r\n+        print(n.dumpprivkey(address))\r\n+        self.log.info('key still there')\r\n+        print(address)\r\n+        print(self.nodes[0].listwallets())\r\n+        self.log.info('now restart node')\r\n+        self.restart_node(0)\r\n+        print(self.nodes[0].listwallets())\r\n+        self.log.info('where is wallet w1 and w2 and where is the key from the default wallet?')\r\n+        n = self.nodes[0].get_wallet_rpc('')\r\n+        #oops\r\n+        assert_raises_rpc_error(-4, \" is not known\", n.dumpprivkey, address)\r\n+        self.log.info('oops')\r\n+        #oops\r\n+\r\n+if __name__ == '__main__':\r\n+    WalletStartupTest().main()\r\n\r\n```\r\n\r\njust patch and run\r\ntest/functional/wallet_test.py \r\n",
      "created_at" : "2021-02-04T00:12:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21073#issuecomment-772917852",
      "id" : 772917852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21073",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MjkxNzg1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-04T00:12:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/772917852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   }
]
