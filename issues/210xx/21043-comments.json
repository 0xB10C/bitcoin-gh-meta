[
   {
      "author_association" : "MEMBER",
      "body" : "\r\n\r\n<details><summary>patch</summary>\r\n\r\n```diff\r\ncommit eea2bf75949fd3b391711b9092e01a1843245db2\r\nAuthor: MarcoFalke <falke.marco@gmail.com>\r\nDate:   Mon Feb 1 08:03:24 2021 +0100\r\n\r\n    util: Disallow negative mocktime\r\n\r\ndiff --git a/src/rpc/misc.cpp b/src/rpc/misc.cpp\r\nindex b75a7b8d26..38a0bddddb 100644\r\n--- a/src/rpc/misc.cpp\r\n+++ b/src/rpc/misc.cpp\r\n@@ -365,13 +365,13 @@ static RPCHelpMan signmessagewithprivkey()\r\n static RPCHelpMan setmocktime()\r\n {\r\n     return RPCHelpMan{\"setmocktime\",\r\n-                \"\\nSet the local time to given timestamp (-regtest only)\\n\",\r\n-                {\r\n-                    {\"timestamp\", RPCArg::Type::NUM, RPCArg::Optional::NO, UNIX_EPOCH_TIME + \"\\n\"\r\n-            \"   Pass 0 to go back to using the system time.\"},\r\n-                },\r\n-                RPCResult{RPCResult::Type::NONE, \"\", \"\"},\r\n-                RPCExamples{\"\"},\r\n+        \"\\nSet the local time to given timestamp (-regtest only)\\n\",\r\n+        {\r\n+            {\"timestamp\", RPCArg::Type::NUM, RPCArg::Optional::NO, UNIX_EPOCH_TIME + \"\\n\"\r\n+             \"Pass 0 to go back to using the system time.\"},\r\n+        },\r\n+        RPCResult{RPCResult::Type::NONE, \"\", \"\"},\r\n+        RPCExamples{\"\"},\r\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\r\n {\r\n     if (!Params().IsMockableChain()) {\r\n@@ -386,7 +386,10 @@ static RPCHelpMan setmocktime()\r\n     LOCK(cs_main);\r\n \r\n     RPCTypeCheck(request.params, {UniValue::VNUM});\r\n-    int64_t time = request.params[0].get_int64();\r\n+    const int64_t time{request.params[0].get_int64()};\r\n+    if (time < 0) {\r\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Mocktime can not be negative: %s.\", time));\r\n+    }\r\n     SetMockTime(time);\r\n     if (request.context.Has<NodeContext>()) {\r\n         for (const auto& chain_client : request.context.Get<NodeContext>().chain_clients) {\r\ndiff --git a/src/util/time.cpp b/src/util/time.cpp\r\nindex e96972fe12..d130e4e4d4 100644\r\n--- a/src/util/time.cpp\r\n+++ b/src/util/time.cpp\r\n@@ -9,6 +9,8 @@\r\n \r\n #include <util/time.h>\r\n \r\n+#include <util/check.h>\r\n+\r\n #include <atomic>\r\n #include <boost/date_time/posix_time/posix_time.hpp>\r\n #include <ctime>\r\n@@ -18,7 +20,7 @@\r\n \r\n void UninterruptibleSleep(const std::chrono::microseconds& n) { std::this_thread::sleep_for(n); }\r\n \r\n-static std::atomic<int64_t> nMockTime(0); //!< For unit testing\r\n+static std::atomic<int64_t> nMockTime(0); //!< For testing\r\n \r\n int64_t GetTime()\r\n {\r\n@@ -46,6 +48,7 @@ template std::chrono::microseconds GetTime();\r\n \r\n void SetMockTime(int64_t nMockTimeIn)\r\n {\r\n+    Assert(nMockTimeIn >= 0);\r\n     nMockTime.store(nMockTimeIn, std::memory_order_relaxed);\r\n }\r\n \r\ndiff --git a/test/functional/rpc_uptime.py b/test/functional/rpc_uptime.py\r\nindex e86f91b1d0..6177970872 100755\r\n--- a/test/functional/rpc_uptime.py\r\n+++ b/test/functional/rpc_uptime.py\r\n@@ -10,6 +10,7 @@ Test corresponds to code in rpc/server.cpp.\r\n import time\r\n \r\n from test_framework.test_framework import BitcoinTestFramework\r\n+from test_framework.util import assert_raises_rpc_error\r\n \r\n \r\n class UptimeTest(BitcoinTestFramework):\r\n@@ -18,8 +19,12 @@ class UptimeTest(BitcoinTestFramework):\r\n         self.setup_clean_chain = True\r\n \r\n     def run_test(self):\r\n+        self._test_negative_time()\r\n         self._test_uptime()\r\n \r\n+    def _test_negative_time(self):\r\n+        assert_raises_rpc_error(-8, \"Mocktime can not be negative: -1.\", self.nodes[0].setmocktime, -1)\r\n+\r\n     def _test_uptime(self):\r\n         wait_time = 10\r\n         self.nodes[0].setmocktime(int(time.time() + wait_time))\r\n```\r\n\r\n</details>",
      "created_at" : "2021-02-01T07:09:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21043#issuecomment-770626451",
      "id" : 770626451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21043",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MDYyNjQ1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-01T07:09:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/770626451",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This assumes that time is negatable, which holds for system time, but not for mocktime?\r\n> \r\n> I think we should disallow negative mocktime (either here or in a follow up).\r\n\r\nGood point! I've now added your patch as a second commit. Thanks!",
      "created_at" : "2021-02-01T15:00:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21043#issuecomment-770919844",
      "id" : 770919844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21043",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MDkxOTg0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-01T15:00:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/770919844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 3ddbf22ed179a2db733af4b521bec5d2b13ebf4b only change is adding patch written by me",
      "created_at" : "2021-02-02T12:41:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21043#issuecomment-771608316",
      "id" : 771608316,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21043",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MTYwODMxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-02T12:41:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/771608316",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
