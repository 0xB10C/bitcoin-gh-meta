[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9503#discussion_r95469601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95469601"
         }
      },
      "body" : "Why set minconf to 5 here? Can you just set it to 0 to match the call to listreceivedbyaddress() above?",
      "commit_id" : "5bb78f976dc0aaf4e4a55861456dd5e879a710d9",
      "created_at" : "2017-01-10T22:12:07Z",
      "diff_hunk" : "@@ -65,10 +65,24 @@ def run_test(self):\n         assert_array_result(self.nodes[1].listreceivedbyaddress(11),{\"address\":addr},{ },True)\n \n         #Empty Tx\n-        addr = self.nodes[1].getnewaddress()\n+        empty_addr = self.nodes[1].getnewaddress()\n         assert_array_result(self.nodes[1].listreceivedbyaddress(0,True),\n-                           {\"address\":addr},\n-                           {\"address\":addr, \"account\":\"\", \"amount\":0, \"confirmations\":0, \"txids\":[]})\n+                           {\"address\":empty_addr},\n+                           {\"address\":empty_addr, \"account\":\"\", \"amount\":0, \"confirmations\":0, \"txids\":[]})\n+\n+        #Test Address filtering\n+        #Only on addr\n+        expected = {\"address\":addr, \"account\":\"\", \"amount\":Decimal(\"0.1\"), \"confirmations\":10, \"txids\":[txid,]}\n+        res = self.nodes[1].listreceivedbyaddress(0, True, True, addr)\n+        assert_array_result(res, {\"address\":addr}, expected)\n+        if len(res) != 1:\n+            raise AssertionError(\"listreceivedbyaddress expected only 1 result\")\n+\n+        #Not on addr\n+        other_addr = self.nodes[0].getnewaddress() # note on node[0]! just a random addr\n+        res = self.nodes[1].listreceivedbyaddress(5, True, True, other_addr)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9503#discussion_r95469601",
      "id" : 95469601,
      "original_commit_id" : "ea19f790d2a348725f1dcbcfc07ec144792bde3f",
      "original_position" : 22,
      "path" : "qa/rpc-tests/receivedby.py",
      "position" : null,
      "pull_request_review_id" : 16023597,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9503",
      "updated_at" : "2017-01-13T15:52:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95469601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9503#discussion_r95470091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95470091"
         }
      },
      "body" : "nit: I think it's clearer to move these two lines below the `if(params.size() > 2)` block, so the params are being tested in order. I also have a slight preference to change this to a `if(params.size() > 3)` block to match the other tests.\r\n",
      "commit_id" : "5bb78f976dc0aaf4e4a55861456dd5e879a710d9",
      "created_at" : "2017-01-10T22:14:40Z",
      "diff_hunk" : "@@ -1133,6 +1133,9 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n     if (params.size() > 0)\n         nMinDepth = params[0].get_int();\n \n+    bool fFilterAddress = !fByAccounts && params.size() > 3;\n+    const CBitcoinAddress filterAddress = fFilterAddress ?  CBitcoinAddress(params[3].get_str()) : CBitcoinAddress{};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9503#discussion_r95470091",
      "id" : 95470091,
      "original_commit_id" : "ea19f790d2a348725f1dcbcfc07ec144792bde3f",
      "original_position" : 5,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 16023597,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9503",
      "updated_at" : "2017-01-13T15:52:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95470091",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9503#discussion_r95470098"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95470098"
         }
      },
      "body" : "nit: prefer not to have two blank lines in the middle of a function. Perhaps you can move one of them to between the if block and for block below.",
      "commit_id" : "5bb78f976dc0aaf4e4a55861456dd5e879a710d9",
      "created_at" : "2017-01-10T22:14:42Z",
      "diff_hunk" : "@@ -1178,10 +1185,22 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n     // Reply\n     UniValue ret(UniValue::VARR);\n     map<string, tallyitem> mapAccountTally;\n-    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9503#discussion_r95470098",
      "id" : 95470098,
      "original_commit_id" : "ea19f790d2a348725f1dcbcfc07ec144792bde3f",
      "original_position" : 27,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 16023597,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9503",
      "updated_at" : "2017-01-13T15:52:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95470098",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "body" : "A couple of general comments:\r\n\r\n- How large are the results from the `listreceivedbyaddress` rpc expected to be? If the rpc only ever returns a small number of addresses, it should be easy enough for the client to receive the full list of balances and then filter the list itself?\r\n- if there's a chance that this functionality needs to be extended further to filter on a list of addresses rather than a single address, it'd be better to include that now. Since #8811 , the arguments to the RPCs are part of the API, so changing them later becomes more troublesome. Perhaps change the `only_address` string to a `filter_addresses` array?\r\n\r\nI've also added a few nits.",
      "created_at" : "2017-01-10T22:22:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-271717096",
      "id" : 271717096,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9503",
      "updated_at" : "2017-01-10T22:22:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271717096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=3",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9503#discussion_r96014158"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96014158"
         }
      },
      "body" : "Ã°ÂÂÂ \r\n",
      "commit_id" : "5bb78f976dc0aaf4e4a55861456dd5e879a710d9",
      "created_at" : "2017-01-13T15:17:27Z",
      "diff_hunk" : "@@ -65,10 +65,24 @@ def run_test(self):\n         assert_array_result(self.nodes[1].listreceivedbyaddress(11),{\"address\":addr},{ },True)\n \n         #Empty Tx\n-        addr = self.nodes[1].getnewaddress()\n+        empty_addr = self.nodes[1].getnewaddress()\n         assert_array_result(self.nodes[1].listreceivedbyaddress(0,True),\n-                           {\"address\":addr},\n-                           {\"address\":addr, \"account\":\"\", \"amount\":0, \"confirmations\":0, \"txids\":[]})\n+                           {\"address\":empty_addr},\n+                           {\"address\":empty_addr, \"account\":\"\", \"amount\":0, \"confirmations\":0, \"txids\":[]})\n+\n+        #Test Address filtering\n+        #Only on addr\n+        expected = {\"address\":addr, \"account\":\"\", \"amount\":Decimal(\"0.1\"), \"confirmations\":10, \"txids\":[txid,]}\n+        res = self.nodes[1].listreceivedbyaddress(0, True, True, addr)\n+        assert_array_result(res, {\"address\":addr}, expected)\n+        if len(res) != 1:\n+            raise AssertionError(\"listreceivedbyaddress expected only 1 result\")\n+\n+        #Not on addr\n+        other_addr = self.nodes[0].getnewaddress() # note on node[0]! just a random addr\n+        res = self.nodes[1].listreceivedbyaddress(5, True, True, other_addr)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9503#discussion_r96014158",
      "id" : 96014158,
      "original_commit_id" : "ea19f790d2a348725f1dcbcfc07ec144792bde3f",
      "original_position" : 22,
      "path" : "qa/rpc-tests/receivedby.py",
      "position" : null,
      "pull_request_review_id" : 16588462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9503",
      "updated_at" : "2017-01-13T15:52:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96014158",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/9503#discussion_r96019576"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9503"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96019576"
         }
      },
      "body" : "I agree that it's important for the style to be consistent. I opted to convert the other argument parsing in ListReceived to match this style, at the expense of a larger diff, for the benefit of declaring the input parameters const.",
      "commit_id" : "5bb78f976dc0aaf4e4a55861456dd5e879a710d9",
      "created_at" : "2017-01-13T15:44:39Z",
      "diff_hunk" : "@@ -1133,6 +1133,9 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n     if (params.size() > 0)\n         nMinDepth = params[0].get_int();\n \n+    bool fFilterAddress = !fByAccounts && params.size() > 3;\n+    const CBitcoinAddress filterAddress = fFilterAddress ?  CBitcoinAddress(params[3].get_str()) : CBitcoinAddress{};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9503#discussion_r96019576",
      "id" : 96019576,
      "original_commit_id" : "ea19f790d2a348725f1dcbcfc07ec144792bde3f",
      "original_position" : 5,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 16594325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/9503",
      "updated_at" : "2017-01-13T15:52:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/96019576",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "@jnewbery addressed nits.\r\n\r\n1. I think it could be quite large? And then you end up sending a bunch of extra crap over the network.\r\n2. I don't think it would need to be extended as such, but I'll let others chime in.\r\n",
      "created_at" : "2017-01-13T16:38:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-272483656",
      "id" : 272483656,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9503",
      "updated_at" : "2017-01-13T16:38:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272483656",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "body" : "I think (2) isn't really needed since if you need more than a small number you can just do un-filtered or a few repeated calls. I'm no expert on this use-case though.",
      "created_at" : "2017-01-13T18:03:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-272504877",
      "id" : 272504877,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9503",
      "updated_at" : "2017-01-13T18:03:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272504877",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=3",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "body" : "@EthanHeilman thoughts?\r\n\r\n\r\nAnother optimization would be to allow for caching of this table on construction (maybe keep_cache/clear_cache parameters). This could reduce the O(n*m) complexity for making m repeated calls to O(n + m).",
      "created_at" : "2017-01-13T19:18:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-272523114",
      "id" : 272523114,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/9503",
      "updated_at" : "2017-01-13T19:18:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/272523114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=3",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   }
]
