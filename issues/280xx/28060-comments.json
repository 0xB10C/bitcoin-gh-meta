[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [Crypt-iQ](https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1644517170) |\n| Concept ACK | [sipa](https://github.com/bitcoin/bitcoin/pull/28060#pullrequestreview-1526966730) |\n| Stale ACK | [jamesob](https://github.com/bitcoin/bitcoin/pull/28060#pullrequestreview-1528767782) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28052](https://github.com/bitcoin/bitcoin/pull/28052) (blockstorage: XOR blocksdir *.dat files by MarcoFalke)\n* [#26606](https://github.com/bitcoin/bitcoin/pull/26606) (wallet: Implement independent BDB parser by achow101)\n* [#26596](https://github.com/bitcoin/bitcoin/pull/26596) (wallet: Migrate legacy wallets to descriptor wallets without requiring BDB by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-07-10T10:39:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1628685701",
      "id" : 1628685701,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28060",
      "node_id" : "IC_kwDOABII585hE8WF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1628685701/reactions"
      },
      "updated_at" : "2023-07-20T19:56:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1628685701",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260227191"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260227191"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fa2276355889ff7bcad95aa978863107c36a89f7\r\n\r\nMinor: new function is called `detail_fread` but commit and commit message mention `detail_read`.",
      "commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "created_at" : "2023-07-11T20:08:59Z",
      "diff_hunk" : "@@ -526,14 +528,16 @@ class AutoFile\n      */\n     bool IsNull() const         { return (file == nullptr); }\n \n+    /** Implementation detail, only used internally. */\n+    std::size_t detail_fread(Span<std::byte> dst);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260227191",
      "id" : 1260227191,
      "line" : 592,
      "node_id" : "PRRC_kwDOABII585LHYp3",
      "original_commit_id" : "fa2276355889ff7bcad95aa978863107c36a89f7",
      "original_line" : 532,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : 144,
      "pull_request_review_id" : 1525080853,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260227191/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-11T20:50:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260227191",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260249626"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260249626"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d\r\n\r\nShould these serialization methods have similar `if (!m_file)` guards as `AutoFile` does?",
      "commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "created_at" : "2023-07-11T20:31:35Z",
      "diff_hunk" : "@@ -477,6 +477,66 @@ class BitStreamWriter\n     }\n };\n \n+/**\n+ * Like an AutoFile whose data is XOR'd.\n+ */\n+class XorFile\n+{\n+private:\n+    std::FILE* m_file;\n+    const int m_version;\n+    const std::vector<std::byte> m_xor;\n+\n+public:\n+    //\n+    // AutoFile subset\n+    //\n+    explicit XorFile(std::FILE* file, int ver, std::vector<std::byte> data_xor)\n+        : m_file{file},\n+          m_version{ver},\n+          m_xor{std::move(data_xor)} {}\n+    ~XorFile() { fclose(); }\n+    XorFile(const XorFile&) = delete;\n+    XorFile& operator=(const XorFile&) = delete;\n+    int GetVersion() const { return m_version; }\n+    bool feof() const { return std::feof(m_file); }\n+    int fclose()\n+    {\n+        if (std::FILE * file{release()}) return std::fclose(file);\n+        return 0;\n+    }\n+    std::FILE* release()\n+    {\n+        std::FILE* ret = m_file;\n+        m_file = nullptr;\n+        return ret;\n+    }\n+    std::FILE* Get() const { return m_file; }\n+    bool IsNull() const { return m_file == nullptr; }\n+    std::size_t detail_fread(Span<std::byte> dst);\n+\n+    //\n+    // Stream subset\n+    //\n+    void read(Span<std::byte> dst);\n+    void ignore(size_t num_bytes);\n+    void write(Span<const std::byte> src);\n+\n+    template <typename T>\n+    XorFile& operator<<(const T& obj)\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260249626",
      "id" : 1260249626,
      "line" : 527,
      "node_id" : "PRRC_kwDOABII585LHeIa",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 527,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : 115,
      "pull_request_review_id" : 1525080853,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260249626/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-11T20:50:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260249626",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260252291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260252291"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d\r\n\r\nWhy not throw a `std::ios_base::failure()` here? From what I can tell, we'd never expect to get back a negative error value.",
      "commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "created_at" : "2023-07-11T20:34:34Z",
      "diff_hunk" : "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260252291",
      "id" : 1260252291,
      "line" : 14,
      "node_id" : "PRRC_kwDOABII585LHeyD",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 14,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 14,
      "pull_request_review_id" : 1525080853,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260252291/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-11T20:50:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260252291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260260590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260260590"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d\r\n\r\nMight be interesting to see how statically allocating a buffer (say, as a member of `XorFile`) and reusing it might affect performance; may avoid some reallocations. Not sure how frequently this is actually called though. I expect this probably won't make a difference though, because I guess `XorFile::write()` will be called on the order of once per block.",
      "commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "created_at" : "2023-07-11T20:43:54Z",
      "diff_hunk" : "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260260590",
      "id" : 1260260590,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII585LHgzu",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 43,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 43,
      "pull_request_review_id" : 1525080853,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260260590/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-11T20:50:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260260590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think you could really cut down on the amount of code here\r\n\r\nThanks, rewritten from scratch to reduce the lines of code.",
      "created_at" : "2023-07-12T08:00:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632034090",
      "id" : 1632034090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28060",
      "node_id" : "IC_kwDOABII585hRt0q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632034090/reactions"
      },
      "updated_at" : "2023-07-12T08:00:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632034090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260766631"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260766631"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, fixed commit message",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-12T08:01:30Z",
      "diff_hunk" : "@@ -526,14 +528,16 @@ class AutoFile\n      */\n     bool IsNull() const         { return (file == nullptr); }\n \n+    /** Implementation detail, only used internally. */\n+    std::size_t detail_fread(Span<std::byte> dst);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260766631",
      "id" : 1260766631,
      "in_reply_to_id" : 1260227191,
      "line" : 526,
      "node_id" : "PRRC_kwDOABII585LJcWn",
      "original_commit_id" : "fa2276355889ff7bcad95aa978863107c36a89f7",
      "original_line" : 526,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : 175,
      "pull_request_review_id" : 1525751236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260766631/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-12T08:01:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260766631",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260767429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260767429"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd say no, so I went ahead and removed them everywhere. Refer to the commit message for rationale.",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-12T08:02:08Z",
      "diff_hunk" : "@@ -477,6 +477,66 @@ class BitStreamWriter\n     }\n };\n \n+/**\n+ * Like an AutoFile whose data is XOR'd.\n+ */\n+class XorFile\n+{\n+private:\n+    std::FILE* m_file;\n+    const int m_version;\n+    const std::vector<std::byte> m_xor;\n+\n+public:\n+    //\n+    // AutoFile subset\n+    //\n+    explicit XorFile(std::FILE* file, int ver, std::vector<std::byte> data_xor)\n+        : m_file{file},\n+          m_version{ver},\n+          m_xor{std::move(data_xor)} {}\n+    ~XorFile() { fclose(); }\n+    XorFile(const XorFile&) = delete;\n+    XorFile& operator=(const XorFile&) = delete;\n+    int GetVersion() const { return m_version; }\n+    bool feof() const { return std::feof(m_file); }\n+    int fclose()\n+    {\n+        if (std::FILE * file{release()}) return std::fclose(file);\n+        return 0;\n+    }\n+    std::FILE* release()\n+    {\n+        std::FILE* ret = m_file;\n+        m_file = nullptr;\n+        return ret;\n+    }\n+    std::FILE* Get() const { return m_file; }\n+    bool IsNull() const { return m_file == nullptr; }\n+    std::size_t detail_fread(Span<std::byte> dst);\n+\n+    //\n+    // Stream subset\n+    //\n+    void read(Span<std::byte> dst);\n+    void ignore(size_t num_bytes);\n+    void write(Span<const std::byte> src);\n+\n+    template <typename T>\n+    XorFile& operator<<(const T& obj)\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260767429",
      "id" : 1260767429,
      "in_reply_to_id" : 1260249626,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LJcjF",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 527,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 1525752349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260767429/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-12T08:02:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260767429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260770110"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260770110"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No idea, but my blind guess would be that calling `std::fwrite` takes longer than anything else in this function. :thinking: ",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-12T08:04:22Z",
      "diff_hunk" : "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260770110",
      "id" : 1260770110,
      "in_reply_to_id" : 1260260590,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LJdM-",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 43,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1525756169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260770110/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-12T08:04:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260770110",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1261190985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261190985"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, looks like you are right. Thanks, done.",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-12T13:35:06Z",
      "diff_hunk" : "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1261190985",
      "id" : 1261190985,
      "in_reply_to_id" : 1260252291,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LLD9J",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 17,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1526380289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261190985/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-12T13:35:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261190985",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(Slight tangent, not necessarily for this PR)\r\n\r\nI was wondering if it wouldn't be better to XOR with a proper (but non-cryptographic) RNG output instead of a fixed byte pattern, as it'd avoid repetitive patterns remaining in the file, or weak keys that could accidentally be selected.\r\n\r\nE.g. Xoshiro256++ is extremely fast (multiple GiB per second), see https://prng.di.unimi.it/. However, it's nontrivial to seek in, which would be needed here. I got a bit carried away and [wrote code](https://gist.github.com/sipa/52d4dced79abdddfa83beb559531fbc0) to do that, but it's a bit slower and more complex than what I'd like (~9 microseconds for seeking anywhere within the first 128 MiB of output, ~14 microseconds for the first 4 GiB).\r\n\r\nAn alternative is concatenating multiple Xoshiro256++ outputs together, e.g. 4 KiB from Xoshiro256++(key=SipHash(key || 0)), 4 KiB from Xoshiro++(key=SipHash(key || 1)), ... etc; that'd offer faster, simpler seeking.",
      "created_at" : "2023-07-12T17:10:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632907785",
      "id" : 1632907785,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28060",
      "node_id" : "IC_kwDOABII585hVDIJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632907785/reactions"
      },
      "updated_at" : "2023-07-12T17:34:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632907785",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Interesting. Right now, it is trivial to undo the XOR in python with something like:\r\n\r\n```py\r\n        def util_xor(data):\r\n            with open(\"xor.key\", \"rb\") as xor_f:\r\n                key = deser_string(xor_f)\r\n            for i in range(len(data)):\r\n                data[i] ^= key[i % len(key)]\r\n            return bytes(data)\r\n```\r\n\r\nIf it requires users to instead implement a PRNG in python, they (who want to read the dat files for whatever reason) would most likely disable the XOR feature. (Probably an edge-case, so not sure if it matters, but I wanted to mention it)",
      "created_at" : "2023-07-12T17:28:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632931622",
      "id" : 1632931622,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28060",
      "node_id" : "IC_kwDOABII585hVI8m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632931622/reactions"
      },
      "updated_at" : "2023-07-12T17:28:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632931622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If the motivating reason for this feature is to prevent systematized, spurious detection of things in blocks (whether via antivirus software or human), isn't it sufficient to keep the XOR key very simple? Especially, as Marco says, anything more sophisticated would complicate consuming blockfiles from external software.",
      "created_at" : "2023-07-12T17:31:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632935482",
      "id" : 1632935482,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28060",
      "node_id" : "IC_kwDOABII585hVJ46",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632935482/reactions"
      },
      "updated_at" : "2023-07-12T17:31:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632935482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It's fair that this is perhaps not a real concern right now; I don't know. I find it slightly unsatisfying that we can't break any 8-byte repetitive pattern (see e.g. the picture [here](https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Electronic_codebook_(ECB)) for a visual illustration), while computationally speaking doing so should not be any concern. I bring it up here and now, because trying to support both RNG and constant XORing later would be more code than just RNG.\r\n\r\nRegarding external software... I'm not sure. It wouldn't surprise me that literally everyone who is interested in reading these files will stick to supporting only non-XOR regardless of whether it's with a constant or an RNG. If not, can easily have Python code at least to read through the XORing (which we may want for functional tests anyway), but for other languages things would involve more complexity.\r\n\r\n",
      "created_at" : "2023-07-12T17:48:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632959304",
      "id" : 1632959304,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28060",
      "node_id" : "IC_kwDOABII585hVPtI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632959304/reactions"
      },
      "updated_at" : "2023-07-12T17:50:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632959304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I could write the 128MiB XOR data to the key file in full. Complexity would be 2x, because each `std::fread` will be done twice (once to read the XOR key section, and once to read the XOR'd data section)?",
      "created_at" : "2023-07-12T18:05:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632985858",
      "id" : 1632985858,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28060",
      "node_id" : "IC_kwDOABII585hVWMC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632985858/reactions"
      },
      "updated_at" : "2023-07-12T18:05:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632985858",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1261559740"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261559740"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This reads to me like a multiplication between `std::FILE` and `rel`.\r\n\r\nHow about `if (auto rel{release()}) return std::fclose(rel);` ?",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-12T18:14:06Z",
      "diff_hunk" : "@@ -480,73 +480,74 @@ class BitStreamWriter\n class AutoFile\n {\n protected:\n-    FILE* file;\n+    std::FILE* m_file;\n \n public:\n-    explicit AutoFile(FILE* filenew) : file{filenew} {}\n+    explicit AutoFile(std::FILE* file) : m_file{file} {}\n \n-    ~AutoFile()\n-    {\n-        fclose();\n-    }\n+    ~AutoFile() { fclose(); }\n \n     // Disallow copies\n     AutoFile(const AutoFile&) = delete;\n     AutoFile& operator=(const AutoFile&) = delete;\n \n+    bool feof() const { return std::feof(m_file); }\n+\n     int fclose()\n     {\n-        int retval{0};\n-        if (file) {\n-            retval = ::fclose(file);\n-            file = nullptr;\n-        }\n-        return retval;\n+        if (std::FILE * rel{release()}) return std::fclose(rel);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1261559740",
      "id" : 1261559740,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LMd-8",
      "original_commit_id" : "faa0ab757de28411a0ccf480b78f29a7639ef37c",
      "original_line" : 498,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 1526966730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261559740/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-12T18:17:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261559740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1261583878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261583878"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, it is a clang-format-16 bug. Someone should try to fix or report it.",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-12T18:32:41Z",
      "diff_hunk" : "@@ -480,73 +480,74 @@ class BitStreamWriter\n class AutoFile\n {\n protected:\n-    FILE* file;\n+    std::FILE* m_file;\n \n public:\n-    explicit AutoFile(FILE* filenew) : file{filenew} {}\n+    explicit AutoFile(std::FILE* file) : m_file{file} {}\n \n-    ~AutoFile()\n-    {\n-        fclose();\n-    }\n+    ~AutoFile() { fclose(); }\n \n     // Disallow copies\n     AutoFile(const AutoFile&) = delete;\n     AutoFile& operator=(const AutoFile&) = delete;\n \n+    bool feof() const { return std::feof(m_file); }\n+\n     int fclose()\n     {\n-        int retval{0};\n-        if (file) {\n-            retval = ::fclose(file);\n-            file = nullptr;\n-        }\n-        return retval;\n+        if (std::FILE * rel{release()}) return std::fclose(rel);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1261583878",
      "id" : 1261583878,
      "in_reply_to_id" : 1261559740,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LMj4G",
      "original_commit_id" : "faa0ab757de28411a0ccf480b78f29a7639ef37c",
      "original_line" : 498,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 1527017124,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261583878/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-12T18:32:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261583878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1262340617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262340617"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(See https://github.com/llvm/llvm-project/commit/104cd749f5cca609a79303c0dad22bc041b5448a )\r\n\r\nSwitched to `auto` in any case.",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-13T10:10:49Z",
      "diff_hunk" : "@@ -480,73 +480,74 @@ class BitStreamWriter\n class AutoFile\n {\n protected:\n-    FILE* file;\n+    std::FILE* m_file;\n \n public:\n-    explicit AutoFile(FILE* filenew) : file{filenew} {}\n+    explicit AutoFile(std::FILE* file) : m_file{file} {}\n \n-    ~AutoFile()\n-    {\n-        fclose();\n-    }\n+    ~AutoFile() { fclose(); }\n \n     // Disallow copies\n     AutoFile(const AutoFile&) = delete;\n     AutoFile& operator=(const AutoFile&) = delete;\n \n+    bool feof() const { return std::feof(m_file); }\n+\n     int fclose()\n     {\n-        int retval{0};\n-        if (file) {\n-            retval = ::fclose(file);\n-            file = nullptr;\n-        }\n-        return retval;\n+        if (std::FILE * rel{release()}) return std::fclose(rel);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1262340617",
      "id" : 1262340617,
      "in_reply_to_id" : 1261559740,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LPcoJ",
      "original_commit_id" : "faa0ab757de28411a0ccf480b78f29a7639ef37c",
      "original_line" : 498,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 1528094689,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262340617/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-13T10:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262340617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I find it slightly unsatisfying that we can't break any 8-byte repetitive pattern.\r\n\r\nI just find it difficult to think about without a use-case. The only thing it may affect is that it makes transparent on-disk compression harder, but 8-byte XOR already makes that hard, so I don't think this is an argument (for or against) either? ",
      "created_at" : "2023-07-13T13:03:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1634208153",
      "id" : 1634208153,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28060",
      "node_id" : "IC_kwDOABII585haAmZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1634208153/reactions"
      },
      "updated_at" : "2023-07-13T14:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1634208153",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1267299659"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267299659"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I haven't run benchmarks against statically allocating a buffer, but it may be useful since `AutoFile::write` is called many times per block. Basically every time the pattern `CAutoFile << x` is used which happens for every element of the block header, each transaction input, output, etc. I also ran a small unit test through `perf` where there were many writes and found that `std::ftell` dominated with `std::fwrite` close behind.",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-18T20:57:59Z",
      "diff_hunk" : "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1267299659",
      "id" : 1267299659,
      "in_reply_to_id" : 1260260590,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LiXVL",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 43,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1535895567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267299659/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-18T20:57:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267299659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1267302191"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267302191"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It may be good to have a heat-map  (Percent of time spent in each line) for this function for IBD, or a unit test that writes a block. ",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-18T21:01:18Z",
      "diff_hunk" : "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1267302191",
      "id" : 1267302191,
      "in_reply_to_id" : 1260260590,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LiX8v",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 43,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1535899632,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267302191/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-18T21:01:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267302191",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1267304093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267304093"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I _think_ you can move this `std::ftell` to right before the loop and then use the result from `std::fwrite` to increment `current_pos` each loop iteration since from https://en.cppreference.com/w/cpp/io/c/fwrite: \"The file position indicator for the stream is advanced by the number of characters written.\".  I ran some tests and it gives a performance improvement if `src.size()` is ever > 4096 bytes (though I'm not sure that is ever the case currently with block serialization hitting this function incrementally?)",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-18T21:03:45Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1267304093",
      "id" : 1267304093,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII585LiYad",
      "original_commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 56,
      "pull_request_review_id" : 1535902756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267304093/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-18T21:03:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267304093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268194341"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268194341"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I also ran a small unit test through perf where there were many writes and found that std::ftell dominated with std::fwrite close behind\r\n\r\nFor me fwrite dominated over ftell, but the most time was spent on XOR:\r\n\r\n\r\n```\r\nROUTINE ====================== AutoFile::write in src/streams.cpp\r\n    49    100 Total samples (flat / cumulative)\r\n     .      .   40:         nSize -= nNow;\r\n     .      .   41:     }\r\n     .      .   42: }\r\n     .      .   43: \r\n     .      .   44: void AutoFile::write(Span<const std::byte> src)\r\n---\r\n     .      .   45: {\r\n     .      .   46:     if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\r\n     .      .   47:     if (m_xor.empty()) {\r\n     .      .   48:         if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\r\n     .      .   49:             throw std::ios_base::failure(\"AutoFile::write: write failed\");\r\n     .      .   50:         }\r\n     .      .   51:     } else {\r\n     .      .   52:         std::array<std::byte, 4096> buf;\r\n     .      .   53:         while (src.size() > 0) {\r\n     .      .   54:             auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\r\n     .      2   55:             std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\r\n     .     16   56:             const auto current_pos{std::ftell(m_file)};\r\n    49     49   57:             util::Xor(buf_now, m_xor, current_pos);\r\n     .     33   58:             if (current_pos < 0 || std::fwrite(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\r\n     .      .   59:                 throw std::ios_base::failure{\"XorFile::write: failed\"};\r\n     .      .   60:             }\r\n     .      .   61:             src = src.subspan(buf_now.size());\r\n     .      .   62:         }\r\n     .      .   63:     }\r\n     .      .   64: }\r\n---\r\n",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-19T14:51:32Z",
      "diff_hunk" : "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268194341",
      "id" : 1268194341,
      "in_reply_to_id" : 1260260590,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Llxwl",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 43,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1537290723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268194341/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T14:51:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268194341",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268195960"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268195960"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I am hoping to nuke `ftell` completely, but that would require removing the `Get` member function",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-19T14:52:37Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268195960",
      "id" : 1268195960,
      "in_reply_to_id" : 1267304093,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII585LlyJ4",
      "original_commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 56,
      "pull_request_review_id" : 1537293197,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268195960/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T14:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268195960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268239265"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268239265"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it must have been a fluke because when I synced up to a little past block ~200K, `fwrite` was in the lead and `ftell` and xor were about tied at ~3% each of the total time spent. I wrote a test here https://github.com/Crypt-iQ/bitcoin/commit/bf924d6d2d4020e799796c0751ac64c892ae8e6b that requires the benchmarks to be compiled but is not a benchmark.  I made a patch in the following commit (https://github.com/Crypt-iQ/bitcoin/commit/be07dbc6f26638f7ec187e42144ccc5dab90c0a7) that reduced the number of `ftell` calls to 1 for `AutoFile` and it gave a noticeable performance improvement.  I think it's ok to track the file position this way, but I might be wrong",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-19T15:24:14Z",
      "diff_hunk" : "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268239265",
      "id" : 1268239265,
      "in_reply_to_id" : 1260260590,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ll8uh",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 43,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1537362183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268239265/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T15:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268239265",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268245361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268245361"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the calls to `ftell` in `WriteBlockToDisk` and `UndoWriteToDisk` can be removed since the file position is known before the call and the number of bytes written is also known in the success case (in the failure case the writes will throw), so it should just be possible to increment the initial file position used in `OpenBlockFile` / `OpenUndoFile` ?",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-19T15:28:52Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268245361",
      "id" : 1268245361,
      "in_reply_to_id" : 1267304093,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII585Ll-Nx",
      "original_commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 56,
      "pull_request_review_id" : 1537371729,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268245361/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T15:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268245361",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268252629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268252629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I guess it depends on the data written. My benchmark was for 1MB written. With 33 bytes written, `ftell` is the dominant:\r\n\r\n\r\n```\r\nROUTINE ====================== AutoFile::write in src/streams.cpp\r\n     2     28 Total samples (flat / cumulative)\r\n     .      .   40:         nSize -= nNow;\r\n     .      .   41:     }\r\n     .      .   42: }\r\n     .      .   43: \r\n     .      .   44: void AutoFile::write(Span<const std::byte> src)\r\n---\r\n     .      .   45: {\r\n     .      .   46:     if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\r\n     .      .   47:     if (m_xor.empty()) {\r\n     .      .   48:         if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\r\n     .      .   49:             throw std::ios_base::failure(\"AutoFile::write: write failed\");\r\n     .      .   50:         }\r\n     .      .   51:     } else {\r\n     .      .   52:         std::array<std::byte, 4096> buf;\r\n     .      .   53:         while (src.size() > 0) {\r\n     .      .   54:             auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\r\n     .      .   55:             std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\r\n     .     23   56:             const auto current_pos{std::ftell(m_file)};\r\n     1      1   57:             util::Xor(buf_now, m_xor, current_pos);\r\n     1      4   58:             if (current_pos < 0 || std::fwrite(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\r\n     .      .   59:                 throw std::ios_base::failure{\"XorFile::write: failed\"};\r\n     .      .   60:             }\r\n     .      .   61:             src = src.subspan(buf_now.size());\r\n     .      .   62:         }\r\n     .      .   63:     }\r\n     .      .   64: }\r\n---\r\n",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-19T15:34:33Z",
      "diff_hunk" : "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268252629",
      "id" : 1268252629,
      "in_reply_to_id" : 1260260590,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ll__V",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 43,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1537383422,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268252629/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T15:34:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268252629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268255975"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268255975"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I mean I am happy to make the change, but it seems brittle if someone calls `std::fseek` after the constructor?",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-19T15:37:12Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268255975",
      "id" : 1268255975,
      "in_reply_to_id" : 1267304093,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII585LmAzn",
      "original_commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 56,
      "pull_request_review_id" : 1537388450,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268255975/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T15:37:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268255975",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268272983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268272983"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hm good point, I didn't think about that -- it does seem like those functions are pretty contained since they open the file at the start and then close it at exit, but it does seem brittle",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-19T15:45:27Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268272983",
      "id" : 1268272983,
      "in_reply_to_id" : 1267304093,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII585LmE9X",
      "original_commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : 56,
      "pull_request_review_id" : 1537413860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268272983/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T15:45:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268272983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268286275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268286275"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In any case the bottleneck doesn't seem to be `std::array<std::byte, 4096> buf;`, so I think this thread can be closed?",
      "commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "created_at" : "2023-07-19T15:56:31Z",
      "diff_hunk" : "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268286275",
      "id" : 1268286275,
      "in_reply_to_id" : 1260260590,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LmIND",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 43,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1537434011,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268286275/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T15:56:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268286275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268291011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268291011"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yeah I didn't see allocations come up at all in perf",
      "commit_id" : "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "created_at" : "2023-07-19T16:00:23Z",
      "diff_hunk" : "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268291011",
      "id" : 1268291011,
      "in_reply_to_id" : 1260260590,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LmJXD",
      "original_commit_id" : "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "original_line" : 43,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1537441276,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268291011/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T16:00:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268291011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268305587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268305587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe I'll pick up https://github.com/bitcoin/bitcoin/pull/28006 again and remove `Get`?",
      "commit_id" : "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "created_at" : "2023-07-19T16:12:55Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268305587",
      "id" : 1268305587,
      "in_reply_to_id" : 1267304093,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LmM6z",
      "original_commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1537464093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268305587/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T16:12:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268305587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pushed a small change to call `std::ftell` less often if a large data span is written. In a follow-up, changes can be made to call it less often when small data spans are written. ",
      "created_at" : "2023-07-19T16:27:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1642398008",
      "id" : 1642398008,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28060",
      "node_id" : "IC_kwDOABII585h5QE4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642398008/reactions"
      },
      "updated_at" : "2023-07-19T16:27:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642398008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268324286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268324286"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "happy to review if you do",
      "commit_id" : "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "created_at" : "2023-07-19T16:30:24Z",
      "diff_hunk" : "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268324286",
      "id" : 1268324286,
      "in_reply_to_id" : 1267304093,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LmRe-",
      "original_commit_id" : "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "original_line" : 56,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/streams.cpp",
      "position" : null,
      "pull_request_review_id" : 1537495615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268324286/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-19T16:30:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268324286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "crACK fa633aa",
      "created_at" : "2023-07-20T19:56:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1644517170",
      "id" : 1644517170,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28060",
      "node_id" : "IC_kwDOABII585iBVcy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644517170/reactions"
      },
      "updated_at" : "2023-07-20T19:56:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644517170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   }
]
