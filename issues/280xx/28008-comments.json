[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27993](https://github.com/bitcoin/bitcoin/pull/27993) (Make poly1305 support incremental computation + modernize by sipa)\n* [#27985](https://github.com/bitcoin/bitcoin/pull/27985) (Add support for RFC8439 variant of ChaCha20 by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-06-29T22:00:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28008#issuecomment-1613858567",
      "id" : 1613858567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28008",
      "node_id" : "IC_kwDOABII585gMYcH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613858567/reactions"
      },
      "updated_at" : "2023-07-07T21:25:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613858567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-07-12T18:07:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28008#issuecomment-1632988853",
      "id" : 1632988853,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28008",
      "node_id" : "IC_kwDOABII585hVW61",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632988853/reactions"
      },
      "updated_at" : "2023-07-12T18:07:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632988853",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28008#discussion_r1269911157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28008"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269911157"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "(in commit c61fa6ab5917f3745a917f4fc2f3a9e96629d5d9)\r\nnit: these refactoring changes in `UpdateTag` seem to be unrelated to FSChaCha20Poly1305, I think they can be already included the commit that introduces the ChaCha20Poly1305 AEAD (to avoid touching it again later and keep the diff small)? Also, `aad_padding` and `cipher_padding` could be const.",
      "commit_id" : "b0b6d11f16f65ce9b0d106372ce131eb6f179fe9",
      "created_at" : "2023-07-20T20:03:29Z",
      "diff_hunk" : "@@ -46,11 +47,11 @@ void UpdateTag(Poly1305& poly1305, Span<const std::byte> aad, Span<const std::by\n {\n     static const std::byte PADDING[16] = {{}};\n     // Process the padded AAD with Poly1305.\n-    poly1305.Update(aad);\n-    poly1305.Update(Span{PADDING}.first((16 - (aad.size() % 16)) % 16));\n+    unsigned aad_padding = (16 - (aad.size() % 16)) % 16;\n+    poly1305.Update(aad).Update(Span{PADDING}.first(aad_padding));\n     // Process the padded ciphertext with Poly1305.\n-    poly1305.Update(cipher);\n-    poly1305.Update(Span{PADDING}.first((16 - (cipher.size() % 16)) % 16));\n+    unsigned cipher_padding = (16 - (cipher.size() % 16)) % 16;\n+    poly1305.Update(cipher).Update(Span{PADDING}.first(cipher_padding));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28008#discussion_r1269911157",
      "id" : 1269911157,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LsU51",
      "original_commit_id" : "c61fa6ab5917f3745a917f4fc2f3a9e96629d5d9",
      "original_line" : 54,
      "original_position" : 20,
      "original_start_line" : 49,
      "path" : "src/crypto/chacha20poly1305.cpp",
      "position" : null,
      "pull_request_review_id" : 1539997888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28008",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269911157/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2023-07-20T21:32:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269911157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28008#discussion_r1269960092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28008"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269960092"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could encrypt _after_ generating the poly1305 key to avoid having to `Seek64` twice, as the chacha20 object is already at the desired block count 1 after the `Keystream` call below (I think generate-poly1305-key -> encrypt -> compute tag is also the order as described in RFC8439). On the other hand, performance-wise it shouldn't make a difference as `Seek64` is quite cheap, and maybe it's even preferred to be explicit about the block counter instead. I haven't looked at any other ChaCha20Poly1305 AEAD implementation yet, so no idea what is common practice here. Just an idea.",
      "commit_id" : "b0b6d11f16f65ce9b0d106372ce131eb6f179fe9",
      "created_at" : "2023-07-20T21:03:01Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/chacha20poly1305.h>\n+\n+#include <crypto/common.h>\n+#include <crypto/chacha20.h>\n+#include <crypto/poly1305.h>\n+#include <span.h>\n+\n+#include <assert.h>\n+#include <cstdint>\n+#include <cstddef>\n+#include <iterator>\n+\n+AEADChaCha20Poly1305::AEADChaCha20Poly1305(Span<const std::byte> key) noexcept : m_chacha20(UCharCast(key.data()))\n+{\n+    assert(key.size() == KEYLEN);\n+}\n+\n+void AEADChaCha20Poly1305::SetKey(Span<const std::byte> key) noexcept\n+{\n+    assert(key.size() == KEYLEN);\n+    m_chacha20.SetKey32(UCharCast(key.data()));\n+}\n+\n+namespace {\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+#define HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char* b1, const unsigned char* b2, size_t n) noexcept\n+{\n+    const unsigned char *p1 = b1, *p2 = b2;\n+    int ret = 0;\n+    for (; n > 0; n--)\n+        ret |= *p1++ ^ *p2++;\n+    return (ret != 0);\n+}\n+\n+#endif\n+\n+/** Write all tag data to poly1305 for an AEADChaCha20Poly1305 tag. */\n+void UpdateTag(Poly1305& poly1305, Span<const std::byte> aad, Span<const std::byte> cipher) noexcept\n+{\n+    static const std::byte PADDING[16] = {{}};\n+    // Process the padded AAD with Poly1305.\n+    poly1305.Update(aad);\n+    poly1305.Update(Span{PADDING}.first((16 - (aad.size() % 16)) % 16));\n+    // Process the padded ciphertext with Poly1305.\n+    poly1305.Update(cipher);\n+    poly1305.Update(Span{PADDING}.first((16 - (cipher.size() % 16)) % 16));\n+    // Process the AAD and plaintext length with Poly1305.\n+    std::byte length_desc[16];\n+    WriteLE64(UCharCast(length_desc), aad.size());\n+    WriteLE64(UCharCast(length_desc + 8), cipher.size());\n+    poly1305.Update(length_desc);\n+}\n+\n+} // namespace\n+\n+void AEADChaCha20Poly1305::Encrypt(Span<const std::byte> plain, Span<const std::byte> aad, Nonce96 nonce, Span<std::byte> cipher) noexcept\n+{\n+    assert(cipher.size() == plain.size() + EXPANSION);\n+\n+    // Encrypt using ChaCha20 (starting at index 1).\n+    m_chacha20.Seek64(nonce, 1);\n+    m_chacha20.Crypt(UCharCast(plain.data()), UCharCast(cipher.data()), plain.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28008#discussion_r1269960092",
      "id" : 1269960092,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Lsg2c",
      "original_commit_id" : "26a7c254dcb49a92070c88cc7963e4996cd9e7c7",
      "original_line" : 69,
      "original_position" : 69,
      "original_start_line" : 67,
      "path" : "src/crypto/chacha20poly1305.cpp",
      "position" : null,
      "pull_request_review_id" : 1539997888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28008",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269960092/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-07-20T21:32:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269960092",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28008#discussion_r1269973943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28008"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269973943"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: it might be worth introducing a generate-poly1305-key helper (or even one that also does the tag computation already, given also aad and ciphertext) that can be called in Encrypt and Decrypt, to deduplicate code?",
      "commit_id" : "b0b6d11f16f65ce9b0d106372ce131eb6f179fe9",
      "created_at" : "2023-07-20T21:14:19Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/chacha20poly1305.h>\n+\n+#include <crypto/common.h>\n+#include <crypto/chacha20.h>\n+#include <crypto/poly1305.h>\n+#include <span.h>\n+\n+#include <assert.h>\n+#include <cstdint>\n+#include <cstddef>\n+#include <iterator>\n+\n+AEADChaCha20Poly1305::AEADChaCha20Poly1305(Span<const std::byte> key) noexcept : m_chacha20(UCharCast(key.data()))\n+{\n+    assert(key.size() == KEYLEN);\n+}\n+\n+void AEADChaCha20Poly1305::SetKey(Span<const std::byte> key) noexcept\n+{\n+    assert(key.size() == KEYLEN);\n+    m_chacha20.SetKey32(UCharCast(key.data()));\n+}\n+\n+namespace {\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+#define HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char* b1, const unsigned char* b2, size_t n) noexcept\n+{\n+    const unsigned char *p1 = b1, *p2 = b2;\n+    int ret = 0;\n+    for (; n > 0; n--)\n+        ret |= *p1++ ^ *p2++;\n+    return (ret != 0);\n+}\n+\n+#endif\n+\n+/** Write all tag data to poly1305 for an AEADChaCha20Poly1305 tag. */\n+void UpdateTag(Poly1305& poly1305, Span<const std::byte> aad, Span<const std::byte> cipher) noexcept\n+{\n+    static const std::byte PADDING[16] = {{}};\n+    // Process the padded AAD with Poly1305.\n+    poly1305.Update(aad);\n+    poly1305.Update(Span{PADDING}.first((16 - (aad.size() % 16)) % 16));\n+    // Process the padded ciphertext with Poly1305.\n+    poly1305.Update(cipher);\n+    poly1305.Update(Span{PADDING}.first((16 - (cipher.size() % 16)) % 16));\n+    // Process the AAD and plaintext length with Poly1305.\n+    std::byte length_desc[16];\n+    WriteLE64(UCharCast(length_desc), aad.size());\n+    WriteLE64(UCharCast(length_desc + 8), cipher.size());\n+    poly1305.Update(length_desc);\n+}\n+\n+} // namespace\n+\n+void AEADChaCha20Poly1305::Encrypt(Span<const std::byte> plain, Span<const std::byte> aad, Nonce96 nonce, Span<std::byte> cipher) noexcept\n+{\n+    assert(cipher.size() == plain.size() + EXPANSION);\n+\n+    // Encrypt using ChaCha20 (starting at index 1).\n+    m_chacha20.Seek64(nonce, 1);\n+    m_chacha20.Crypt(UCharCast(plain.data()), UCharCast(cipher.data()), plain.size());\n+\n+    // Get first block of keystream.\n+    std::byte first_block[64];\n+    m_chacha20.Seek64(nonce, 0);\n+    m_chacha20.Keystream(UCharCast(first_block), sizeof(first_block));\n+    // Use the first 32 bytes of the first keystream block as poly1305 key.\n+    Poly1305 poly1305{Span{first_block}.first(Poly1305::KEYLEN)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28008#discussion_r1269973943",
      "id" : 1269973943,
      "line" : 78,
      "node_id" : "PRRC_kwDOABII585LskO3",
      "original_commit_id" : "26a7c254dcb49a92070c88cc7963e4996cd9e7c7",
      "original_line" : 76,
      "original_position" : 76,
      "original_start_line" : 71,
      "path" : "src/crypto/chacha20poly1305.cpp",
      "position" : 78,
      "pull_request_review_id" : 1539997888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28008",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269973943/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 73,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-07-20T21:32:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269973943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   }
]
