[
   {
      "body" : "For some time there has been some party connecting to every node on the network (sometimes multiple times) and fetching the mempool over and over again at high speed.  This wastes a ton of node's bandwidth. These fetches are also an information leak, as the frequent polling bypasses the trickle logic.\r\n\r\nJgarzik suggested removing the mempool command entirely, but it's used by some lite clients to display unconfirmed transactions that arrived before they connected. This change is more polite, preserving the usecase for lite wallets without making the call an attractive nuisance for third parties to waste a nodes' bandwidth with various information gathering attacks.\r\n\r\nWe should also look to see if we've created other trickle bypassing bugs (e.g. responding to a getdata on a tx we've never INVed), and consider limiting the maximum size of the mempool response. Now that we get the result back in feerate order, it would be pretty reasonable to return only the next couple blocks worth. Anyone know a reason we shouldn't?\r\n",
      "created_at" : "2015-11-24T22:05:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159419652",
      "id" : 159419652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-24T22:29:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159419652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45814457"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45814457"
         }
      },
      "body" : "We've been using std::numeric_limits<int64_t>::max() elsewhere (also INT64_MAX seems to fail on arm?)",
      "commit_id" : "0d5fb2ffc0ba31506be8bceaf724f73bd052e9f8",
      "created_at" : "2015-11-25T00:14:31Z",
      "diff_hunk" : "@@ -218,7 +218,7 @@ UniValue mempoolToJSON(bool fVerbose = false)\n     else\n     {\n         vector<uint256> vtxid;\n-        mempool.queryHashes(vtxid);\n+        mempool.queryHashes(vtxid, 0, INT64_MAX);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45814457",
      "id" : 45814457,
      "original_commit_id" : "f91fe537cb9bede93d4ec7cfc4263bee724bdddb",
      "original_position" : 5,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093",
      "updated_at" : "2015-11-25T01:59:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45814457",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45815956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45815956"
         }
      },
      "body" : "I can see this confusing someone in the future (I had to stop and think about it).\r\n\r\nNeeds a comment like \"equivalent to int64_t rounded_time = (GetTime() - 16); rounded_time = rounded_time - (rounded_time  % 16) but faster\"",
      "commit_id" : "0d5fb2ffc0ba31506be8bceaf724f73bd052e9f8",
      "created_at" : "2015-11-25T00:33:53Z",
      "diff_hunk" : "@@ -4617,26 +4617,31 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n     else if (strCommand == \"mempool\")\n     {\n-        LOCK2(cs_main, pfrom->cs_filter);\n \n-        std::vector<uint256> vtxid;\n-        mempool.queryHashes(vtxid);\n-        vector<CInv> vInv;\n-        BOOST_FOREACH(uint256& hash, vtxid) {\n-            CInv inv(MSG_TX, hash);\n-            CTransaction tx;\n-            bool fInMemPool = mempool.lookup(hash, tx);\n-            if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n-            if ((pfrom->pfilter && pfrom->pfilter->IsRelevantAndUpdate(tx)) ||\n-               (!pfrom->pfilter))\n-                vInv.push_back(inv);\n-            if (vInv.size() == MAX_INV_SZ) {\n-                pfrom->PushMessage(\"inv\", vInv);\n-                vInv.clear();\n+        //Put the mempool on a 16 to 32 second quantized time delay to suppress the arrival time information leak.\n+        int64_t rounded_time = (GetTime() - 16) & 0x7ffffffffffffff0LL;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#discussion_r45815956",
      "id" : 45815956,
      "original_commit_id" : "f91fe537cb9bede93d4ec7cfc4263bee724bdddb",
      "original_position" : 21,
      "path" : "src/main.cpp",
      "position" : 21,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7093",
      "updated_at" : "2015-11-25T01:59:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/45815956",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/620611?v=3",
         "events_url" : "https://api.github.com/users/pstratem/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pstratem/followers",
         "following_url" : "https://api.github.com/users/pstratem/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pstratem/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pstratem",
         "id" : 620611,
         "login" : "pstratem",
         "organizations_url" : "https://api.github.com/users/pstratem/orgs",
         "received_events_url" : "https://api.github.com/users/pstratem/received_events",
         "repos_url" : "https://api.github.com/users/pstratem/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pstratem/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pstratem"
      }
   },
   {
      "body" : "Pulltester fails because of known inadvisable stuff it does with the mempool command. I'm not sure what to do about that.\r\n\r\nI updated the patch so that the filter commands would reset the starting time to zero, allowing re-filtering of already filtered stuff.  I did this after observing breadwallet making multiple mempool requests (after keys were added). The downside of this is that no leaves open a DOS vector when bloom filtering is enabled, but there are so many of those that I don't know if its worth worrying about.",
      "created_at" : "2015-11-25T05:17:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7093#issuecomment-159494355",
      "id" : 159494355,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7093",
      "updated_at" : "2015-11-25T05:17:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159494355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=3",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   }
]
