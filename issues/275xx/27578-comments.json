[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept NACK | [sdaftuar](https://github.com/bitcoin/bitcoin/pull/27578#issuecomment-1535568784) |\n| Concept ACK | [TalasDigital](https://github.com/bitcoin/bitcoin/pull/27578#issuecomment-1535777823) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27576](https://github.com/bitcoin/bitcoin/pull/27576) (kernel: Remove args, chainparams, chainparamsbase from kernel library by TheCharlatan)\n* [#27491](https://github.com/bitcoin/bitcoin/pull/27491) (refactor: Move chain constants to the util library by TheCharlatan)\n* [#27302](https://github.com/bitcoin/bitcoin/pull/27302) (init: Error if ignored bitcoin.conf file is found by ryanofsky)\n* [#25977](https://github.com/bitcoin/bitcoin/pull/25977) (refactor: Replace `std::optional<bilingual_str>` with `util::Result` by ryanofsky)\n* [#20892](https://github.com/bitcoin/bitcoin/pull/20892) (tests: Run both descriptor and legacy tests within a single test invocation by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-05-04T23:12:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27578#issuecomment-1535516517",
      "id" : 1535516517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27578",
      "node_id" : "IC_kwDOABII585bhh9l",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1535516517/reactions"
      },
      "updated_at" : "2023-05-05T06:32:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1535516517",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept NACK.\r\n\r\nIf there's a standardness rule that is interfering with someone's use case, we should discuss it and figure out whether the rule can be relaxed to accommodate the use case, or whether the use case can be adapted to comply with the standardness rules.  Generally speaking, our policy rules are designed to prevent various kinds of denial-of-service attacks, or to help make sure the network runs smoothly -- so if users are trying to bypass them, there's a good chance that there's insufficient understanding of why rules are in place (or possibly the rules are more restrictive than they need to be).\r\n\r\nMoreover, while running with different policies is not something that we can prevent on the network, we should be mindful that if the prevailing network policy is different than what a use case needs, that the use case will likely not be met anyway without some sort of preferential peering with other nodes running the same policy.  So this approach strikes me as insufficient to even achieve the goal it is aiming for.",
      "created_at" : "2023-05-05T00:56:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27578#issuecomment-1535568784",
      "id" : 1535568784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27578",
      "node_id" : "IC_kwDOABII585bhuuQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1535568784/reactions"
      },
      "updated_at" : "2023-05-05T00:56:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1535568784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Presumed related issue: #27490",
      "created_at" : "2023-05-05T06:30:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27578#issuecomment-1535776017",
      "id" : 1535776017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27578",
      "node_id" : "IC_kwDOABII585bihUR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1535776017/reactions"
      },
      "updated_at" : "2023-05-05T06:30:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1535776017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK.\r\n\r\nI agree that this is seriously worth considering in light of risks related to mempool divergence and mining centralization if non-standard transaction usage grows in popularity.",
      "created_at" : "2023-05-05T06:32:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27578#issuecomment-1535777823",
      "id" : 1535777823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27578",
      "node_id" : "IC_kwDOABII585bihwf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1535777823/reactions"
      },
      "updated_at" : "2023-05-05T06:32:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1535777823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/132539706?v=4",
         "events_url" : "https://api.github.com/users/TalasDigital/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TalasDigital/followers",
         "following_url" : "https://api.github.com/users/TalasDigital/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TalasDigital/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TalasDigital",
         "id" : 132539706,
         "login" : "TalasDigital",
         "node_id" : "U_kgDOB-ZlOg",
         "organizations_url" : "https://api.github.com/users/TalasDigital/orgs",
         "received_events_url" : "https://api.github.com/users/TalasDigital/received_events",
         "repos_url" : "https://api.github.com/users/TalasDigital/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TalasDigital/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TalasDigital/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TalasDigital"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> If there's a standardness rule that is interfering with someone's use case, we should discuss it and figure out whether the rule can be relaxed to accommodate the use case, or whether the use case can be adapted to comply with the standardness rules. Generally speaking, our policy rules are designed to prevent various kinds of denial-of-service attacks, or to help make sure the network runs smoothly -- so if users are trying to bypass them, there's a good chance that there's insufficient understanding of why rules are in place (or possibly the rules are more restrictive than they need to be).\r\n\r\nI think it is kinda ridiculous to have to come and try and lobby bitcoin core to relay their transaction. This is just a waste of everyone's time on both sides and accomplishes nothing. If people want to accept non standard transactions, we should let them. \r\n\r\nBitcoin core moves extremely slow (for good reason) and application devs move much faster (also for good reason), there will always be a contention here and giving application devs tools to not have to interfere with bitcoin core's process should be the goal. If someone builds something but then needs to convince bitcoin core to allow it to be relayed, then create a patch and get it code reviewed, then finally merged and wait for a release, it will be months to years before their transaction can be relayed. In that amount of time they will have just built a relationship with mining pools and circumvented the mempool completely, and everyone will be worse off for it. And this is happening today! Allowing a flag like this provides a solution so nodes and users can opt into supporting different use cases that haven't yet made it through the process of becoming a standard transaction.\r\n\r\n> Moreover, while running with different policies is not something that we can prevent on the network, we should be mindful that if the prevailing network policy is different than what a use case needs, that the use case will likely not be met anyway without some sort of preferential peering with other nodes running the same policy. So this approach strikes me as insufficient to even achieve the goal it is aiming for.\r\n\r\nYes, this isn't the 100% perfect solution because there is no perfect solution, but this is an extremely simple change that is a step in the right direction.\r\n",
      "created_at" : "2023-05-05T07:20:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27578#issuecomment-1535832559",
      "id" : 1535832559,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27578",
      "node_id" : "IC_kwDOABII585bivHv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1535832559/reactions"
      },
      "updated_at" : "2023-05-05T07:29:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1535832559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15256660?v=4",
         "events_url" : "https://api.github.com/users/benthecarman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benthecarman/followers",
         "following_url" : "https://api.github.com/users/benthecarman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benthecarman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benthecarman",
         "id" : 15256660,
         "login" : "benthecarman",
         "node_id" : "MDQ6VXNlcjE1MjU2NjYw",
         "organizations_url" : "https://api.github.com/users/benthecarman/orgs",
         "received_events_url" : "https://api.github.com/users/benthecarman/received_events",
         "repos_url" : "https://api.github.com/users/benthecarman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benthecarman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benthecarman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benthecarman"
      }
   }
]
