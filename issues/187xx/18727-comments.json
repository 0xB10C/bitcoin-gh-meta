[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #16549 ([WIP] UI external signer support (e.g. hardware wallet) by Sjors)\n* #16546 ([WIP] External signer support - Wallet Box edition by Sjors)\n* #16528 (Native Descriptor Wallets using DescriptorScriptPubKeyMan by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-04-22T00:42:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-617482557",
      "id" : 617482557,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNzQ4MjU1Nw==",
      "updated_at" : "2020-04-23T20:49:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/617482557",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413439175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413439175"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Transactions contained by stale blockConnected and transactionAddedToMempool should be processed twice ? May we assert that their `nTimeReceived` hasn't change between duplicate processing?",
      "commit_id" : "f9cea7231dfec9c75b206899c818301401d8c0d4",
      "created_at" : "2020-04-23T01:16:53Z",
      "diff_hunk" : "@@ -634,4 +666,80 @@ BOOST_FIXTURE_TEST_CASE(dummy_input_size_test, TestChain100Setup)\n     BOOST_CHECK_EQUAL(CalculateNestedKeyhashInputSize(true), DUMMY_NESTED_P2WPKH_INPUT_SIZE);\n }\n \n+//! Test CreateWalletFromFile function and its behavior handling potential race\n+//! conditions if it's called the same time an incoming transaction shows up in\n+//! the mempool or a new block.\n+//!\n+//! It isn't possible for a unit test to totally verify there aren't race\n+//! conditions without hooking into the implementation more, so this test just\n+//! verifies that new transactions are detected during loading without any\n+//! notifications at all, to infer that timing of notifications shouldn't\n+//! matter. The test could be extended to cover other scenarios in the future.\n+BOOST_FIXTURE_TEST_CASE(CreateWalletFromFile, TestChain100Setup)\n+{\n+    // Create new wallet with known key and unload it.\n+    auto chain = interfaces::MakeChain(m_node);\n+    auto wallet = TestLoadWallet(*chain);\n+    CKey key;\n+    key.MakeNewKey(true);\n+    AddKey(*wallet, key);\n+    TestUnloadWallet(std::move(wallet));\n+\n+    // Add log hook to detect AddToWallet events from rescans, blockConnected,\n+    // and transactionAddedToMempool notifications\n+    int addtx_count = 0;\n+    DebugLogHelper addtx_counter(\"[default wallet] AddToWallet\", [&](const std::string* s) {\n+        if (s) ++addtx_count;\n+        return false;\n+    });\n+\n+    bool rescan_completed = false;\n+    DebugLogHelper rescan_check(\"[default wallet] Rescan completed\", [&](const std::string* s) {\n+        if (s) {\n+            // For now, just assert that cs_main is being held during the\n+            // rescan, ensuring that a new block couldn't be connected\n+            // that the wallet would miss. After\n+            // https://github.com/bitcoin/bitcoin/pull/16426 when cs_main is no\n+            // longer held, the test can be extended to append a new block here\n+            // and check it's handled correctly.\n+            AssertLockHeld(::cs_main);\n+            rescan_completed = true;\n+        }\n+        return false;\n+    });\n+\n+    // Block the queue to prevent the wallet receiving blockConnected and\n+    // transactionAddedToMempool notifications, and create block and mempool\n+    // transactions paying to the wallet\n+    std::promise<void> promise;\n+    CallFunctionInValidationInterfaceQueue([&promise] {\n+        promise.get_future().wait();\n+    });\n+    std::string error;\n+    m_coinbase_txns.push_back(CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n+    auto block_tx = TestSimpleSpend(*m_coinbase_txns[0], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\n+    m_coinbase_txns.push_back(CreateAndProcessBlock({block_tx}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n+    auto mempool_tx = TestSimpleSpend(*m_coinbase_txns[1], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\n+    BOOST_CHECK(chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, false, error));\n+\n+    // Reload wallet and make sure new transactions are detected despite events\n+    // being blocked\n+    wallet = TestLoadWallet(*chain);\n+    BOOST_CHECK(rescan_completed);\n+    BOOST_CHECK_EQUAL(addtx_count, 2);\n+    {\n+        LOCK(wallet->cs_wallet);\n+        BOOST_CHECK_EQUAL(wallet->mapWallet.count(block_tx.GetHash()), 1);\n+        BOOST_CHECK_EQUAL(wallet->mapWallet.count(mempool_tx.GetHash()), 1);\n+    }\n+\n+    // Unblock notification queue and make sure stale blockConnected and\n+    // transactionAddedToMempool events are processed",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413439175",
      "id" : 413439175,
      "line" : 737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzOTE3NQ==",
      "original_commit_id" : "f9cea7231dfec9c75b206899c818301401d8c0d4",
      "original_line" : 737,
      "original_position" : 125,
      "original_start_line" : null,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : 125,
      "pull_request_review_id" : 398695333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-23T01:22:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413439175",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413440418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413440418"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think you can just copy-paste actual new comment in d6d6632, which is originally yours (IIRC), I found it clearer",
      "commit_id" : "f9cea7231dfec9c75b206899c818301401d8c0d4",
      "created_at" : "2020-04-23T01:20:50Z",
      "diff_hunk" : "@@ -634,4 +666,80 @@ BOOST_FIXTURE_TEST_CASE(dummy_input_size_test, TestChain100Setup)\n     BOOST_CHECK_EQUAL(CalculateNestedKeyhashInputSize(true), DUMMY_NESTED_P2WPKH_INPUT_SIZE);\n }\n \n+//! Test CreateWalletFromFile function and its behavior handling potential race\n+//! conditions if it's called the same time an incoming transaction shows up in\n+//! the mempool or a new block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413440418",
      "id" : 413440418,
      "line" : 671,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0MDQxOA==",
      "original_commit_id" : "f9cea7231dfec9c75b206899c818301401d8c0d4",
      "original_line" : 671,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : 59,
      "pull_request_review_id" : 398695333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-23T01:22:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413440418",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-04-27T00:34:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-619650599",
      "id" : 619650599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTY1MDU5OQ==",
      "updated_at" : "2020-04-27T00:34:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619650599",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
