[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18698 (Make g_chainman internal to validation by MarcoFalke)\n* #17479 (Return BlockValidationState from ProcessNewBlock if CheckBlock/AcceptBlock fails by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-04-22T19:34:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18742#issuecomment-617987356",
      "id" : 617987356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18742",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNzk4NzM1Ng==",
      "updated_at" : "2020-04-22T19:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/617987356",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Oh, great find!\r\n\r\nHow did you find this one and in what commit was it introduced? :)",
      "created_at" : "2020-04-22T19:54:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18742#issuecomment-618000451",
      "id" : 618000451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18742",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxODAwMDQ1MQ==",
      "updated_at" : "2020-04-22T19:54:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618000451",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "\r\n<details><summary>Good question. This is the traceback:</summary>\r\n\r\n\r\n\r\n\r\n```\r\n118/145 - rpc_getblockstats.py failed, Duration: 3 s\r\n\r\nstdout:\r\n\r\n2020-04-15T15:10:09.960000Z TestFramework (INFO): Initializing test directory /home/travis/build/bitcoin/bitcoin/ci/scratch/test_runner/test_runner_â¿_ð_20200415_145914/rpc_getblockstats_25\r\n\r\n2020-04-15T15:10:12.198000Z TestFramework (ERROR): Unexpected exception caught during testing\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py\", line 108, in _request\r\n\r\n    return self._get_response()\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py\", line 166, in _get_response\r\n\r\n    http_response = self.__conn.getresponse()\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1346, in getresponse\r\n\r\n    response.begin()\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 307, in begin\r\n\r\n    version, status, reason = self._read_status()\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 276, in _read_status\r\n\r\n    raise RemoteDisconnected(\"Remote end closed connection without\"\r\n\r\nhttp.client.RemoteDisconnected: Remote end closed connection without response\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 112, in main\r\n\r\n    self.run_test()\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/rpc_getblockstats.py\", line 97, in run_test\r\n\r\n    self.load_test_data(test_data)\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/rpc_getblockstats.py\", line 89, in load_test_data\r\n\r\n    self.nodes[0].submitblock(b)\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py\", line 142, in __call__\r\n\r\n    response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py\", line 113, in _request\r\n\r\n    self.__conn.request(method, path, postdata, headers)\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1254, in request\r\n\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1300, in _send_request\r\n\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1249, in endheaders\r\n\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1036, in _send_output\r\n\r\n    self.send(msg)\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 974, in send\r\n\r\n    self.connect()\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 946, in connect\r\n\r\n    (self.host,self.port), self.timeout, self.source_address)\r\n\r\n  File \"/usr/lib/python3.6/socket.py\", line 724, in create_connection\r\n\r\n    raise err\r\n\r\n  File \"/usr/lib/python3.6/socket.py\", line 713, in create_connection\r\n\r\n    sock.connect(sa)\r\n\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n\r\n2020-04-15T15:10:12.261000Z TestFramework (INFO): Stopping nodes\r\n\r\n2020-04-15T15:10:12.261000Z TestFramework.node0 (ERROR): Unable to stop node.\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_node.py\", line 266, in stop_node\r\n\r\n    self.stop(wait=wait)\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py\", line 142, in __call__\r\n\r\n    response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py\", line 107, in _request\r\n\r\n    self.__conn.request(method, path, postdata, headers)\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1254, in request\r\n\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1265, in _send_request\r\n\r\n    self.putrequest(method, url, **skips)\r\n\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1118, in putrequest\r\n\r\n    raise CannotSendRequest(self.__state)\r\n\r\nhttp.client.CannotSendRequest: Request-sent\r\n\r\n[node 0] Cleaning up leftover process\r\n\r\nstderr:\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/rpc_getblockstats.py\", line 165, in <module>\r\n\r\n    GetblockstatsTest().main()\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 135, in main\r\n\r\n    exit_code = self.shutdown()\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 242, in shutdown\r\n\r\n    self.stop_nodes()\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 453, in stop_nodes\r\n\r\n    node.stop_node(wait=wait)\r\n\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_node.py\", line 280, in stop_node\r\n\r\n    raise AssertionError(\"Unexpected stderr {} != {}\".format(stderr, expected_stderr))\r\n\r\nAssertionError: Unexpected stderr =================================================================\r\n\r\n==3550==ERROR: AddressSanitizer: stack-use-after-return on address 0x7fdbfbb7dc40 at pc 0x5567a688f34f bp 0x7fdbfee66f10 sp 0x7fdbfee66f08\r\n\r\nREAD of size 8 at 0x7fdbfbb7dc40 thread T4 (b-httpworker.0)\r\n\r\n    #0 0x5567a688f34e in CMainSignals::NewPoWValidBlock(CBlockIndex const*, std::shared_ptr<CBlock const> const&)::$_15::operator()(CValidationInterface&) const /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/validationinterface.cpp:246:75\r\n\r\n    #1 0x5567a688f34e in void MainSignalsInstance::Iterate<CMainSignals::NewPoWValidBlock(CBlockIndex const*, std::shared_ptr<CBlock const> const&)::$_15>(CMainSignals::NewPoWValidBlock(CBlockIndex const*, std::shared_ptr<CBlock const> const&)::$_15&&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/validationinterface.cpp:83\r\n\r\n    #2 0x5567a688f34e in CMainSignals::NewPoWValidBlock(CBlockIndex const*, std::shared_ptr<CBlock const> const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/validationinterface.cpp:246\r\n\r\n    #3 0x5567a67a6cf1 in CChainState::AcceptBlock(std::shared_ptr<CBlock const> const&, BlockValidationState&, CChainParams const&, CBlockIndex**, bool, FlatFilePos const*, bool*) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/validation.cpp:3758:26\r\n\r\n    #4 0x5567a67aa38c in ProcessNewBlock(CChainParams const&, std::shared_ptr<CBlock const>, bool, bool*) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/validation.cpp:3798:40\r\n\r\n    #5 0x5567a64467b6 in submitblock(JSONRPCRequest const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/mining.cpp:947:21\r\n\r\n    #6 0x5567a63fe3e6 in CRPCCommand::CRPCCommand(char const*, char const*, UniValue (*)(JSONRPCRequest const&), std::initializer_list<char const*>)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/./rpc/server.h:104:94\r\n\r\n    #7 0x5567a63fdce8 in std::_Function_handler<bool (JSONRPCRequest const&, UniValue&, bool), CRPCCommand::CRPCCommand(char const*, char const*, UniValue (*)(JSONRPCRequest const&), std::initializer_list<char const*>)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>::_M_invoke(std::_Any_data const&, JSONRPCRequest const&, UniValue&, bool&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/std_function.h:301:9\r\n\r\n    #8 0x5567a602f02e in std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/std_function.h:706:14\r\n\r\n    #9 0x5567a654f18f in ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:452:20\r\n\r\n    #10 0x5567a654ea20 in CRPCTable::execute(JSONRPCRequest const&) const /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/server.cpp:435:17\r\n\r\n    #11 0x5567a6942a88 in HTTPReq_JSONRPC(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/httprpc.cpp:208:40\r\n\r\n    #12 0x5567a6386af0 in std::_Function_handler<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&), bool (*)(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_invoke(std::_Any_data const&, HTTPRequest*&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/std_function.h:301:9\r\n\r\n    #13 0x5567a69631e9 in std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/std_function.h:706:14\r\n\r\n    #14 0x5567a6962e2b in HTTPWorkItem::operator()() /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:55:9\r\n\r\n    #15 0x5567a696c777 in WorkQueue<HTTPClosure>::Run() /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:114:13\r\n\r\n    #16 0x5567a695507f in HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/httpserver.cpp:342:12\r\n\r\n    #17 0x5567a6972c29 in void std::__invoke_impl<void, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(std::__invoke_other, void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/invoke.h:60:14\r\n\r\n    #18 0x5567a6972aba in std::__invoke_result<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>::type std::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/invoke.h:95:14\r\n\r\n    #19 0x5567a6972881 in decltype(std::__invoke(_S_declval<0ul>(), _S_declval<1ul>(), _S_declval<2ul>())) std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/thread:234:13\r\n\r\n    #20 0x5567a6971fe1 in std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/thread:243:11\r\n\r\n    #21 0x5567a6971fe1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> > >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/thread:186\r\n\r\n    #22 0x7fdc0a3a76de  (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0xbd6de)\r\n\r\n    #23 0x7fdc0b3436da in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76da)\r\n\r\n    #24 0x7fdc0965888e in clone (/lib/x86_64-linux-gnu/libc.so.6+0x12188e)\r\n\r\nAddress 0x7fdbfbb7dc40 is located in stack of thread T6 (b-httpworker.2) at offset 3136 in frame\r\n\r\n    #0 0x5567a6445a2f in submitblock(JSONRPCRequest const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/mining.cpp:896\r\n\r\n  This frame has 57 object(s):\r\n\r\n    [32, 33) 'ref.tmp.i'\r\n\r\n    [48, 192) 'ref.tmp' (line 898)\r\n\r\n    [256, 288) 'agg.tmp'\r\n\r\n    [320, 321) 'ref.tmp1' (line 898)\r\n\r\n    [336, 368) 'agg.tmp6'\r\n\r\n    [400, 401) 'ref.tmp7' (line 898)\r\n\r\n    [416, 440) 'agg.tmp16'\r\n\r\n    [480, 864) 'ref.tmp18' (line 898)\r\n\r\n    [928, 960) 'agg.tmp19'\r\n\r\n    [992, 993) 'ref.tmp20' (line 898)\r\n\r\n    [1008, 1048) 'agg.tmp29'\r\n\r\n    [1088, 1092) 'ref.tmp30' (line 898)\r\n\r\n    [1104, 1136) 'agg.tmp37'\r\n\r\n    [1168, 1169) 'ref.tmp38' (line 898)\r\n\r\n    [1184, 1216) 'agg.tmp47'\r\n\r\n    [1248, 1249) 'ref.tmp48' (line 898)\r\n\r\n    [1264, 1288) 'agg.tmp57'\r\n\r\n    [1328, 1360) 'agg.tmp64'\r\n\r\n    [1392, 1393) 'ref.tmp65' (line 898)\r\n\r\n    [1408, 1448) 'agg.tmp74'\r\n\r\n    [1488, 1520) 'agg.tmp81'\r\n\r\n    [1552, 1553) 'ref.tmp82' (line 898)\r\n\r\n    [1568, 1600) 'agg.tmp91'\r\n\r\n    [1632, 1633) 'ref.tmp92' (line 898)\r\n\r\n    [1648, 1672) 'agg.tmp101'\r\n\r\n    [1712, 1713) 'ref.tmp108' (line 898)\r\n\r\n    [1728, 1752) 'agg.tmp117'\r\n\r\n    [1792, 1928) 'agg.tmp118'\r\n\r\n    [2000, 2032) 'agg.tmp119'\r\n\r\n    [2064, 2065) 'ref.tmp120' (line 898)\r\n\r\n    [2080, 2112) 'agg.tmp129'\r\n\r\n    [2144, 2145) 'ref.tmp130' (line 898)\r\n\r\n    [2160, 2184) 'agg.tmp139'\r\n\r\n    [2224, 2256) 'agg.tmp150'\r\n\r\n    [2288, 2320) 'agg.tmp151'\r\n\r\n    [2352, 2384) 'ref.tmp152' (line 898)\r\n\r\n    [2416, 2448) 'ref.tmp153' (line 898)\r\n\r\n    [2480, 2481) 'ref.tmp154' (line 898)\r\n\r\n    [2496, 2528) 'ref.tmp165' (line 898)\r\n\r\n    [2560, 2561) 'ref.tmp166' (line 898)\r\n\r\n    [2576, 2608) 'ref.tmp181' (line 898)\r\n\r\n    [2640, 2672) 'ref.tmp182' (line 898)\r\n\r\n    [2704, 2705) 'ref.tmp183' (line 898)\r\n\r\n    [2720, 2752) 'ref.tmp194' (line 898)\r\n\r\n    [2784, 2785) 'ref.tmp195' (line 898)\r\n\r\n    [2800, 2816) 'blockptr' (line 912)\r\n\r\n    [2832, 2864) 'ref.tmp326' (line 915)\r\n\r\n    [2896, 2897) 'ref.tmp327' (line 915)\r\n\r\n    [2912, 2944) 'ref.tmp369' (line 919)\r\n\r\n    [2976, 2977) 'ref.tmp370' (line 919)\r\n\r\n    [2992, 3024) 'hash' (line 922)\r\n\r\n    [3056, 3072) 'criticalblock37' (line 924)\r\n\r\n    [3088, 3104) 'criticalblock38' (line 937)\r\n\r\n    [3120, 3121) 'new_block' (line 944)\r\n\r\n    [3136, 3256) 'sc' (line 945) <== Memory access at offset 3136 is inside this variable\r\n\r\n    [3296, 3328) 'ref.tmp469' (line 945)\r\n\r\n    [3360, 3376) 'agg.tmp491'\r\n\r\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\r\n\r\n      (longjmp and C++ exceptions *are* supported)\r\n\r\nThread T6 (b-httpworker.2) created by T0 here:\r\n\r\n    #0 0x5567a5fbe02d in pthread_create (/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind+0x1bc202d)\r\n\r\n    #1 0x7fdc0a3a7994 in std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0xbd994)\r\n\r\n    #2 0x5567a69717a0 in void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&>(std::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:136:23\r\n\r\n    #3 0x5567a695c31b in void std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/vector.tcc:105:4\r\n\r\nSUMMARY: AddressSanitizer: stack-use-after-return /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/validationinterface.cpp:246:75 in CMainSignals::NewPoWValidBlock(CBlockIndex const*, std::shared_ptr<CBlock const> const&)::$_15::operator()(CValidationInterface&) const\r\n\r\nShadow bytes around the buggy address:\r\n\r\n  0x0ffbff767b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\r\n\r\n  0x0ffbff767b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\r\n\r\n  0x0ffbff767b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\r\n\r\n  0x0ffbff767b60: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\r\n\r\n  0x0ffbff767b70: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\r\n\r\n=>0x0ffbff767b80: f5 f5 f5 f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5\r\n\r\n  0x0ffbff767b90: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\r\n\r\n  0x0ffbff767ba0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\r\n\r\n  0x0ffbff767bb0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\r\n\r\n  0x0ffbff767bc0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\r\n\r\n  0x0ffbff767bd0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\r\n\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n\r\n  Addressable:           00\r\n\r\n  Partially addressable: 01 02 03 04 05 06 07 \r\n\r\n  Heap left redzone:       fa\r\n\r\n  Freed heap region:       fd\r\n\r\n  Stack left redzone:      f1\r\n\r\n  Stack mid redzone:       f2\r\n\r\n  Stack right redzone:     f3\r\n\r\n  Stack after return:      f5\r\n\r\n  Stack use after scope:   f8\r\n\r\n  Global redzone:          f9\r\n\r\n  Global init order:       f6\r\n\r\n  Poisoned by user:        f7\r\n\r\n  Container overflow:      fc\r\n\r\n  Array cookie:            ac\r\n\r\n  Intra object redzone:    bb\r\n\r\n  ASan internal:           fe\r\n\r\n  Left alloca redzone:     ca\r\n\r\n  Right alloca redzone:    cb\r\n\r\n  Shadow gap:              cc\r\n\r\nThread T4 (b-httpworker.0) created by T0 here:\r\n\r\n    #0 0x5567a5fbe02d in pthread_create (/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind+0x1bc202d)\r\n\r\n    #1 0x7fdc0a3a7994 in std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0xbd994)\r\n\r\n    #2 0x5567a69717a0 in void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&>(std::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:136:23\r\n\r\n    #3 0x5567a695c31b in void std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&, int&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/vector.tcc:105:4\r\n\r\n==3550==ABORTING != \r\n```\r\n\r\n\r\n</details>",
      "created_at" : "2020-04-22T20:39:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18742#issuecomment-618027664",
      "id" : 618027664,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18742",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxODAyNzY2NA==",
      "updated_at" : "2020-04-22T20:40:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618027664",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I might write a test tomorrow with steps to reproduce",
      "created_at" : "2020-04-22T20:54:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18742#issuecomment-618035042",
      "id" : 618035042,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18742",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxODAzNTA0Mg==",
      "updated_at" : "2020-04-22T20:54:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618035042",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift This is a race, so I couldn't find a test that is reproducible. Though, I have attached a unit test, that fails when run long enough in a loop.\r\n\r\nAll you need to do is `./configure  --with-sanitizers=address` and then run the tests with\r\n\r\n```\r\nexport ASAN_OPTIONS=detect_leaks=0\r\nmake\r\nwhile ./src/test/test_bitcoin -t validationinterface_tests/unregister_validation_interface_race --catch_system_errors=no  ; do true; done",
      "created_at" : "2020-04-23T18:24:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18742#issuecomment-618569936",
      "id" : 618569936,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18742",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxODU2OTkzNg==",
      "updated_at" : "2020-04-23T18:24:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618569936",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
