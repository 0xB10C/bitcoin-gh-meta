[
   {
      "author_association" : "MEMBER",
      "body" : "I think it may make sense to export some notion of standardness from libconsensus, but I don't think exporting every individual script flag of the interpreter makes sense.\r\n\r\nWould it be sufficient for your use case if there was just a catch-all libconsensus_SCRIPT_VERIFY_STANDARD (which would always refer to whatever the current version's policy was, with no guarantees for consistency between versions).",
      "created_at" : "2020-04-28T08:20:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-620456111",
      "id" : 620456111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMDQ1NjExMQ==",
      "updated_at" : "2020-04-28T08:20:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620456111",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa note I don't target specifically one use case even if issue has been raised in LN context. It should be a good practice to verify any transaction against current version's policy, even for application with lower requirement, to avoid any surprise for user.\r\n\r\nSCRIPT_VERIFY_STANDARD would be fine and that was my intention by defining a SCRIPT_FLAGS_VERIFY_STANDARD. But I'm not sure if such global opaque flag would work everytime as some rule may be either standard or consensus following transaction/witness version. Like MINIMALIF between segwit v0 and v1 and therefore you may need access for flag granularity ?\r\n\r\nYou do want to avoid some application evaluating transaction as non-standard when it's in fact invalid, even when it's malleable and can be corrected like MINIMALIF (\"sending directly your taproot spending to a miner and not being able to respond to its rejection\")",
      "created_at" : "2020-04-28T08:40:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-620466453",
      "id" : 620466453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMDQ2NjQ1Mw==",
      "updated_at" : "2020-04-28T08:47:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620466453",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ariard I guess a hypothetical SCRIPT_VERIFY_STANDARD flag would automatically also enable all consensus rules. If you care about whether your transaction will be acceptable to full nodes similar to the one whose libconsensus you're using, it doesn't make sense to disable certain consensus checks but still enable standardness ones.\r\n\r\nI don't understand what you're trying to distinguish in your second comment.",
      "created_at" : "2020-04-28T21:30:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-620866175",
      "id" : 620866175,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMDg2NjE3NQ==",
      "updated_at" : "2020-04-28T21:30:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620866175",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r416950736"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416950736"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[policy] Extend bitcoinconsensus library with standard script flags\" (e07ecdedc70ea045f98b592d36fdbf543696db28)\r\n\r\nIt seems like the name `VERIFY_ALL` is going to be misleading if it isn't actually going to include every verify flag. Would maybe suggest calling it `VERIFY_CONSENSUS` and changing VERIFY_ALL into a deprecated alias for VERIFY_CONSENSUS",
      "commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "created_at" : "2020-04-28T22:02:05Z",
      "diff_hunk" : "@@ -48,16 +48,34 @@ typedef enum bitcoinconsensus_error_t\n /** Script verification flags */\n enum\n {\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE                = 0,\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH                = (1U << 0), // evaluate P2SH (BIP16) subscripts\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG              = (1U << 2), // enforce strict DER (BIP66) compliance\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY           = (1U << 4), // enforce NULLDUMMY (BIP147)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9), // enable CHECKLOCKTIMEVERIFY (BIP65)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10), // enable CHECKSEQUENCEVERIFY (BIP112)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS             = (1U << 11), // enable WITNESS (BIP141)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL                 = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE                                  = 0,\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH                                  = (1U << 0), // evaluate P2SH (BIP16) subscripts\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_STRICTENC                             = (1U << 1), // enforce strict adhererence to pubkey/sig encoding standards\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG                                = (1U << 2), // enforce strict DER (BIP66) compliance\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_LOW_S                                 = (1U << 3), // enforce low-S value in ECDSA sig (BIP 62 rule 5)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY                             = (1U << 4), // enforce NULLDUMMY (BIP147)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_SIGPUSHONLY                           = (1U << 5), // enforce non-push ops in scriptSig (BIP 62 rule 2)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_MINIMALDATA                           = (1U << 6), // enforce minimal push (BIP 62 rules 3 and 4)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DISCOURAGE_UPGRADABLE_NOPS            = (1U << 7), // discourage use of reserved NOPs for upgrades\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CLEANSTACK                            = (1U << 8), // enforce non-superfluous scriptSig ops (BIP 62 rule 6)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY                   = (1U << 9), // enable CHECKLOCKTIMEVERIFY (BIP65)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY                   = (1U << 10), // enable CHECKSEQUENCEVERIFY (BIP112)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS                               = (1U << 11), // enable WITNESS (BIP141)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM = (1U << 12), // discourage use of v1-v16 witness program\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_MINIMALIF                             = (1U << 13), // enforce MINIMALIF (BIP342)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLFAIL                              = (1U << 14), // enforce NULLFAIL (BIP146)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS_PUBKEYTYPE                    = (1U << 15), // enforce compression of pubkey in segwit scripts\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CONST_SCRIPTCODE                      = (1U << 16), // enforce constant scriptCode policy in non-segwit scripts\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL                                   = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG |",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r416950736",
      "id" : 416950736,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1MDczNg==",
      "original_commit_id" : "e07ecdedc70ea045f98b592d36fdbf543696db28",
      "original_line" : 58,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/script/bitcoinconsensus.h",
      "position" : null,
      "pull_request_review_id" : 402244233,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-14T09:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416950736",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> it doesn't make sense to disable certain consensus checks but still enable standardness ones.\r\n\r\nYes right, you would need to call verify function twice to dissociate between standard/consensus in case of failure but that's acceptable. Let's do a global standard flag.\r\n\r\n> in case there are concerns like keeping the flag up to date with future standardness changes\r\n\r\nYes it should be easy to keep in check exported standard flags with regards to future changes, we can make available `STANDARD_SCRIPT_VERIFY_FLAGS` from `policy.h`?\r\n",
      "created_at" : "2020-04-29T06:07:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-621008975",
      "id" : 621008975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMTAwODk3NQ==",
      "updated_at" : "2020-04-29T06:15:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621008975",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r417085948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417085948"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I would like but this may break upstream libraries using exported flag? So need an API bump, we can do this.",
      "commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "created_at" : "2020-04-29T06:09:35Z",
      "diff_hunk" : "@@ -48,16 +48,34 @@ typedef enum bitcoinconsensus_error_t\n /** Script verification flags */\n enum\n {\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE                = 0,\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH                = (1U << 0), // evaluate P2SH (BIP16) subscripts\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG              = (1U << 2), // enforce strict DER (BIP66) compliance\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY           = (1U << 4), // enforce NULLDUMMY (BIP147)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9), // enable CHECKLOCKTIMEVERIFY (BIP65)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10), // enable CHECKSEQUENCEVERIFY (BIP112)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS             = (1U << 11), // enable WITNESS (BIP141)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL                 = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE                                  = 0,\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH                                  = (1U << 0), // evaluate P2SH (BIP16) subscripts\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_STRICTENC                             = (1U << 1), // enforce strict adhererence to pubkey/sig encoding standards\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG                                = (1U << 2), // enforce strict DER (BIP66) compliance\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_LOW_S                                 = (1U << 3), // enforce low-S value in ECDSA sig (BIP 62 rule 5)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY                             = (1U << 4), // enforce NULLDUMMY (BIP147)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_SIGPUSHONLY                           = (1U << 5), // enforce non-push ops in scriptSig (BIP 62 rule 2)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_MINIMALDATA                           = (1U << 6), // enforce minimal push (BIP 62 rules 3 and 4)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DISCOURAGE_UPGRADABLE_NOPS            = (1U << 7), // discourage use of reserved NOPs for upgrades\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CLEANSTACK                            = (1U << 8), // enforce non-superfluous scriptSig ops (BIP 62 rule 6)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY                   = (1U << 9), // enable CHECKLOCKTIMEVERIFY (BIP65)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY                   = (1U << 10), // enable CHECKSEQUENCEVERIFY (BIP112)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS                               = (1U << 11), // enable WITNESS (BIP141)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM = (1U << 12), // discourage use of v1-v16 witness program\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_MINIMALIF                             = (1U << 13), // enforce MINIMALIF (BIP342)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLFAIL                              = (1U << 14), // enforce NULLFAIL (BIP146)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS_PUBKEYTYPE                    = (1U << 15), // enforce compression of pubkey in segwit scripts\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CONST_SCRIPTCODE                      = (1U << 16), // enforce constant scriptCode policy in non-segwit scripts\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL                                   = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG |",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r417085948",
      "id" : 417085948,
      "in_reply_to_id" : 416950736,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA4NTk0OA==",
      "original_commit_id" : "e07ecdedc70ea045f98b592d36fdbf543696db28",
      "original_line" : 58,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/script/bitcoinconsensus.h",
      "position" : null,
      "pull_request_review_id" : 402384380,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-14T09:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417085948",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r417241166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417241166"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not suggesting API bump. Suggestion is to use `VERIFY_CONSENSUS` instead of `VERIFY_ALL` in main definition for clarity in new code and add `VERIFY_ALL = VERIFY_CONSENSUS /* deprecated */` at the bottom for backwards compatibility with old code",
      "commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "created_at" : "2020-04-29T11:21:31Z",
      "diff_hunk" : "@@ -48,16 +48,34 @@ typedef enum bitcoinconsensus_error_t\n /** Script verification flags */\n enum\n {\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE                = 0,\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH                = (1U << 0), // evaluate P2SH (BIP16) subscripts\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG              = (1U << 2), // enforce strict DER (BIP66) compliance\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY           = (1U << 4), // enforce NULLDUMMY (BIP147)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9), // enable CHECKLOCKTIMEVERIFY (BIP65)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10), // enable CHECKSEQUENCEVERIFY (BIP112)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS             = (1U << 11), // enable WITNESS (BIP141)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL                 = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE                                  = 0,\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH                                  = (1U << 0), // evaluate P2SH (BIP16) subscripts\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_STRICTENC                             = (1U << 1), // enforce strict adhererence to pubkey/sig encoding standards\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG                                = (1U << 2), // enforce strict DER (BIP66) compliance\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_LOW_S                                 = (1U << 3), // enforce low-S value in ECDSA sig (BIP 62 rule 5)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY                             = (1U << 4), // enforce NULLDUMMY (BIP147)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_SIGPUSHONLY                           = (1U << 5), // enforce non-push ops in scriptSig (BIP 62 rule 2)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_MINIMALDATA                           = (1U << 6), // enforce minimal push (BIP 62 rules 3 and 4)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DISCOURAGE_UPGRADABLE_NOPS            = (1U << 7), // discourage use of reserved NOPs for upgrades\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CLEANSTACK                            = (1U << 8), // enforce non-superfluous scriptSig ops (BIP 62 rule 6)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY                   = (1U << 9), // enable CHECKLOCKTIMEVERIFY (BIP65)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY                   = (1U << 10), // enable CHECKSEQUENCEVERIFY (BIP112)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS                               = (1U << 11), // enable WITNESS (BIP141)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM = (1U << 12), // discourage use of v1-v16 witness program\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_MINIMALIF                             = (1U << 13), // enforce MINIMALIF (BIP342)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLFAIL                              = (1U << 14), // enforce NULLFAIL (BIP146)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS_PUBKEYTYPE                    = (1U << 15), // enforce compression of pubkey in segwit scripts\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CONST_SCRIPTCODE                      = (1U << 16), // enforce constant scriptCode policy in non-segwit scripts\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL                                   = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG |",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r417241166",
      "id" : 417241166,
      "in_reply_to_id" : 416950736,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0MTE2Ng==",
      "original_commit_id" : "e07ecdedc70ea045f98b592d36fdbf543696db28",
      "original_line" : 58,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/script/bitcoinconsensus.h",
      "position" : null,
      "pull_request_review_id" : 402574352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-14T09:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417241166",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept NACK.\r\n\r\nNode policy is a per-node decision. It should not be assumed to have any global consistency, and users should always be able to easily modify it (libconsensus should definitely not read bitcoin.conf!).\r\n\r\nFurthermore, libconsensus is for consensus logic. This is strictly not that.",
      "created_at" : "2020-04-30T17:56:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-622008886",
      "id" : 622008886,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjAwODg4Ng==",
      "updated_at" : "2020-04-30T17:56:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622008886",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I strongly feel we should not be exporting all the nitty details of how Bitcoin Core implements standardness. There is no requirement that the various standardness VERIFY flags have any consistency across versions.\r\n\r\nEither you ask for consensus-validity, and specify which consensus rules you want to enable; or you ask for standardness without the ability to select what parts of it.",
      "created_at" : "2020-04-30T18:04:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-622012813",
      "id" : 622012813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjAxMjgxMw==",
      "updated_at" : "2020-04-30T18:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622012813",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "To help provide clarity: libconsensus is supposed to be just raw *Bitcoin*, not *Bitcoin Core* (implementation details aside).",
      "created_at" : "2020-04-30T18:57:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-622040439",
      "id" : 622040439,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjA0MDQzOQ==",
      "updated_at" : "2020-04-30T18:57:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622040439",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I tend to agree with @sipa here, we definitely shouldn't be trying to export all of the internal flags in Bitcoin Core as a reasonably-supported interface, but at the same time, not exporting some basic concept of \"will this transaction likely be accepted by the network\" limits the utility of libbitcoinconsensus as it exists today to...very little. Certainly it wasn't the initial goal of libbitcoinconsensus, and makes the name somewhat of a misnomer, but it makes libbitcoinconsensus a pretty useful primitive for checking a standalone transaction.",
      "created_at" : "2020-04-30T20:13:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-622084237",
      "id" : 622084237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjA4NDIzNw==",
      "updated_at" : "2020-04-30T20:13:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622084237",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK to expose this as a cheap sanity pre-check for testmempoolaccept, but for a full policy check you'll have to ask the mempool of a full node",
      "created_at" : "2020-04-30T20:24:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-622090392",
      "id" : 622090392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjA5MDM5Mg==",
      "updated_at" : "2020-04-30T20:24:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622090392",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated with only exporting a simple `verify_script_standard_with_amount` method, without flags passing, therefore making standard opaque to caller.\r\n\r\nI'm making the point again that this export isn't only useful for testing cases but also for production. Time-sensitive protocols like LN or Coinswap rely on confirming onchain transaction before some time-lock expiration. Doing so means they need to guarantee that these transactions broadcast smoothly on the currently deployed network, therefore have a higher concern with regards to policy. A flaw to adhere to standardness hinders their security.\r\n\r\nIt has been made the argument during the IRC meeting, that for these protocols, they have well-defined transactions format and also witnessScript, which is true. But standard rules don't scope themselves only on this in scriptPubKey validation, they may cover witness element not part of the script and not known before production. A rule like SCRIPT_VERIFY_WITNESS_PUBKEYTYPE  concerning pubkeys in witness v0 is such example.\r\n\r\nThese witness elements, unknown before protocol running, may be provided by a counterparty while a _cooperative_ witness construction to allow a spend of a multisig output. If this spent is time-sensitive, and therefore its good propagation a requirement, this counterparty input must be sanitized. A counterparty may have interest in your transaction not confirming.\r\n\r\nThat's where having a function like `verify_script_standard` is useful for applications. It's a better remedy than developers directly copy-pasting standard flags (like https://github.com/ACINQ/bitcoin-lib/blob/master/src/main/scala/fr/acinq/bitcoin/Script.scala), and taking the risk of non-updating for conformity at policy upgrade.\r\n\r\nA call to `testmempoolaccept` wouldn't fit for different reasons, given that an offchain transaction you're verifying may have an offchain parent too, and would be considered as an orphan by the mempool hindering other policy rule violation you're interested too. Fees is another issue as a minimal transaction feerate may be pre-agreed between parties and planned to be unilaterally RBF/CPFP'ed at broadcast.\r\n\r\nFor these reasons, I think enabling standardness verification at the script level make sense, as its correctness, disentangled from more-dynamic policy rules like packages size or fees, already avoid some issues for this class of applications.",
      "created_at" : "2020-05-03T09:11:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-623079298",
      "id" : 623079298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzA3OTI5OA==",
      "updated_at" : "2020-05-03T09:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623079298",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r421199004"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421199004"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[policy] Extend bitcoinconsensus library with standard script flags\" (a7a0c4c7612efbf95849cd70c28497d27b3386c2)\r\n\r\nShould drop the whitespace changes here. Assuming they are unintentional",
      "commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "created_at" : "2020-05-07T02:15:03Z",
      "diff_hunk" : "@@ -48,16 +48,16 @@ typedef enum bitcoinconsensus_error_t\n /** Script verification flags */\n enum\n {\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE                = 0,\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH                = (1U << 0), // evaluate P2SH (BIP16) subscripts\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG              = (1U << 2), // enforce strict DER (BIP66) compliance\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY           = (1U << 4), // enforce NULLDUMMY (BIP147)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9), // enable CHECKLOCKTIMEVERIFY (BIP65)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10), // enable CHECKSEQUENCEVERIFY (BIP112)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS             = (1U << 11), // enable WITNESS (BIP141)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL                 = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE                                  = 0,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r421199004",
      "id" : 421199004,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE5OTAwNA==",
      "original_commit_id" : "a7a0c4c7612efbf95849cd70c28497d27b3386c2",
      "original_line" : 51,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/script/bitcoinconsensus.h",
      "position" : null,
      "pull_request_review_id" : 407106427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-14T09:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421199004",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r421202268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421202268"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[policy] Extend bitcoinconsensus library with standard script flags\" (a7a0c4c7612efbf95849cd70c28497d27b3386c2)\r\n\r\nMaybe extend comment to say something about limitations of this function, e.g. that it only reflects default policy in the current release, actual policy can vary between nodes, software versions",
      "commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "created_at" : "2020-05-07T02:28:17Z",
      "diff_hunk" : "@@ -72,6 +72,14 @@ EXPORT_SYMBOL int bitcoinconsensus_verify_script_with_amount(const unsigned char\n                                     const unsigned char *txTo        , unsigned int txToLen,\n                                     unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err);\n \n+/// Returns 1 if the input nIn of the serialized transaction pointed to by\n+/// txTo correctly spends the scriptPubKey pointed to by scriptPubKey under\n+/// the current standardness constraints.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r421202268",
      "id" : 421202268,
      "line" : 77,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIwMjI2OA==",
      "original_commit_id" : "a7a0c4c7612efbf95849cd70c28497d27b3386c2",
      "original_line" : 77,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/script/bitcoinconsensus.h",
      "position" : 6,
      "pull_request_review_id" : 407106427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-14T09:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421202268",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r421202844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421202844"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[doc] Document shared-libraries.md on standard verification\" (4ea5e6d18203f1c45fa68b8f5585c7fc96e5677b)\r\n\r\nMaybe standardize on standardness: s/correctness/standardness/ and s/standard/standardness/",
      "commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "created_at" : "2020-05-07T02:30:23Z",
      "diff_hunk" : "@@ -5,6 +5,11 @@ Shared Libraries\n \n The purpose of this library is to make the verification functionality that is critical to Bitcoin's consensus available to other applications, e.g. to language bindings.\n \n+Policy correctness as enforced by latest software version is also made available. To dissociate between invalidity reasons, either consensus or standard, an application",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r421202844",
      "id" : 421202844,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIwMjg0NA==",
      "original_commit_id" : "4ea5e6d18203f1c45fa68b8f5585c7fc96e5677b",
      "original_line" : 8,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/shared-libraries.md",
      "position" : null,
      "pull_request_review_id" : 407106427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-14T09:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421202844",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r421364823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421364823"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh right, they weren't disclosed by `git show -b` locally.",
      "commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "created_at" : "2020-05-07T09:24:16Z",
      "diff_hunk" : "@@ -48,16 +48,16 @@ typedef enum bitcoinconsensus_error_t\n /** Script verification flags */\n enum\n {\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE                = 0,\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH                = (1U << 0), // evaluate P2SH (BIP16) subscripts\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG              = (1U << 2), // enforce strict DER (BIP66) compliance\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY           = (1U << 4), // enforce NULLDUMMY (BIP147)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9), // enable CHECKLOCKTIMEVERIFY (BIP65)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10), // enable CHECKSEQUENCEVERIFY (BIP112)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS             = (1U << 11), // enable WITNESS (BIP141)\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL                 = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE                                  = 0,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r421364823",
      "id" : 421364823,
      "in_reply_to_id" : 421199004,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2NDgyMw==",
      "original_commit_id" : "a7a0c4c7612efbf95849cd70c28497d27b3386c2",
      "original_line" : 51,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/script/bitcoinconsensus.h",
      "position" : null,
      "pull_request_review_id" : 407298479,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-14T09:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421364823",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks Russ for review, took your points, specially call-up on better documentation.",
      "created_at" : "2020-05-07T09:26:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-625138849",
      "id" : 625138849,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTEzODg0OQ==",
      "updated_at" : "2020-05-07T09:26:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625138849",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r421458613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421458613"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[policy] Extend bitcoinconsensus library with standard script flags\" (e68badd2ccc2fbced8663127f2f3d94d8029e903)\r\n\r\nThere are still extra whitespace changes here that could be reverted",
      "commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "created_at" : "2020-05-07T12:17:57Z",
      "diff_hunk" : "@@ -56,8 +56,8 @@ enum\n     bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10), // enable CHECKSEQUENCEVERIFY (BIP112)\n     bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS             = (1U << 11), // enable WITNESS (BIP141)\n     bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL                 = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS\n+                                                             bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY |",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r421458613",
      "id" : 421458613,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ1ODYxMw==",
      "original_commit_id" : "e68badd2ccc2fbced8663127f2f3d94d8029e903",
      "original_line" : 59,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/script/bitcoinconsensus.h",
      "position" : null,
      "pull_request_review_id" : 407413976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-14T09:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421458613",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code Review ACK 9f0a6f36b5ccf08e054af63d242c8b98344676b0\r\nI do believe that even though standardness is an implementation detail in practice it's important to follow if you want your transactions to actually make their way to miners through the p2p, so you'll want to follow it even if you don't use bitcoin core.",
      "created_at" : "2020-05-26T17:57:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-634181443",
      "id" : 634181443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNDE4MTQ0Mw==",
      "updated_at" : "2020-06-04T19:07:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634181443",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r440917334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440917334"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit-ish: This whole block seems to be weirdly placed. Shouldn't this be below `Script validation`? Or at least under `API`. It is documenting a new part of the API...",
      "commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "created_at" : "2020-06-16T14:57:04Z",
      "diff_hunk" : "@@ -5,6 +5,12 @@ Shared Libraries\n \n The purpose of this library is to make the verification functionality that is critical to Bitcoin's consensus available to other applications, e.g. to language bindings.\n \n+Policy standardness as enforced by latest software version is also made available. To dissociate between invalidity reasons, either consensus or standardness, an",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r440917334",
      "id" : 440917334,
      "line" : 8,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxNzMzNA==",
      "original_commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "original_line" : 8,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/shared-libraries.md",
      "position" : 4,
      "pull_request_review_id" : 431593920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-16T15:06:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440917334",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r441683651"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441683651"
         }
      },
      "author_association" : "MEMBER",
      "body" : "API is really about where to find its definition in the codebase. New documentation is about explaining how to use API and its limitations, but I agree I should add `bitcoinconsensus_verify_script_standard_with_amount` in `Script Validation`. Will do if I have to rebase/modify PR.",
      "commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "created_at" : "2020-06-17T16:44:51Z",
      "diff_hunk" : "@@ -5,6 +5,12 @@ Shared Libraries\n \n The purpose of this library is to make the verification functionality that is critical to Bitcoin's consensus available to other applications, e.g. to language bindings.\n \n+Policy standardness as enforced by latest software version is also made available. To dissociate between invalidity reasons, either consensus or standardness, an",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r441683651",
      "id" : 441683651,
      "in_reply_to_id" : 440917334,
      "line" : 8,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY4MzY1MQ==",
      "original_commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "original_line" : 8,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/shared-libraries.md",
      "position" : 4,
      "pull_request_review_id" : 432585253,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-17T16:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441683651",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr If you still have concerns on this can you raise them before PR moves forward ? See https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-623079298 as a motivation.",
      "created_at" : "2020-06-17T16:45:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-645489345",
      "id" : 645489345,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTQ4OTM0NQ==",
      "updated_at" : "2020-06-17T16:46:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645489345",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">I'm making the point again that this export isn't only useful for testing cases but also for production. Time-sensitive protocols like LN or Coinswap rely on confirming onchain transaction before some time-lock expiration. Doing so means they need to guarantee that these transactions broadcast smoothly on the currently deployed network, therefore have a higher concern with regards to policy. A flaw to adhere to standardness hinders their security.\r\n\r\nPolicy can never be guaranteed, and shouldn't be trusted to be uniform. Acting on policy is almost(?) always a design flaw.\r\n\r\nCore's policies also do not define what is a standard (they tolerate various non-standard things). If you want to check what conforms to standards, you would need entirely new code, which makes more sense as an entirely separate library.\r\n\r\nProtocols like Lightning need to, and AFAIK already do, define strict transaction templates in hopes they will be accepted by node policies.\r\n\r\n> It has been made the argument during the IRC meeting, that for these protocols, they have well-defined transactions format and also witnessScript, which is true. But standard rules don't scope themselves only on this in scriptPubKey validation, they may cover witness element not part of the script and not known before production. A rule like SCRIPT_VERIFY_WITNESS_PUBKEYTYPE concerning pubkeys in witness v0 is such example.\r\n\r\nSeems like more of an argument for a key validity check, which can optionally check expected future rules too (presumably overlapping with policy in such matters).\r\n\r\n>A call to testmempoolaccept wouldn't fit for different reasons, given that an offchain transaction you're verifying may have an offchain parent too, and would be considered as an orphan by the mempool hindering other policy rule violation you're interested too.\r\n\r\nSounds like an argument for enabling a chain of txs in testmempoolaccept :)\r\n\r\n>Fees is another issue as a minimal transaction feerate may be pre-agreed between parties and planned to be unilaterally RBF/CPFP'ed at broadcast.\r\n\r\nTest the highest-fee variant?",
      "created_at" : "2020-06-17T17:59:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#issuecomment-645530045",
      "id" : 645530045,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18797",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTUzMDA0NQ==",
      "updated_at" : "2020-06-17T17:59:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645530045",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r442241237"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442241237"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tend to agree here. This is an introductory paragraph and while you could add one sentence mentioning that there's also a policy function, it shouldn't describe the details. That can be done separately in a new section, for example.",
      "commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "created_at" : "2020-06-18T13:50:46Z",
      "diff_hunk" : "@@ -5,6 +5,12 @@ Shared Libraries\n \n The purpose of this library is to make the verification functionality that is critical to Bitcoin's consensus available to other applications, e.g. to language bindings.\n \n+Policy standardness as enforced by latest software version is also made available. To dissociate between invalidity reasons, either consensus or standardness, an",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18797#discussion_r442241237",
      "id" : 442241237,
      "in_reply_to_id" : 440917334,
      "line" : 8,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI0MTIzNw==",
      "original_commit_id" : "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "original_line" : 8,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/shared-libraries.md",
      "position" : 4,
      "pull_request_review_id" : 433303523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18797",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-18T13:51:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442241237",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
