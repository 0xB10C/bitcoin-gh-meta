[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If no one else is taking a look at this, I'd like to take this one.",
      "created_at" : "2022-11-03T02:12:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1301567393",
      "id" : 1301567393,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585NlFeh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301567393/reactions"
      },
      "updated_at" : "2022-11-03T02:12:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301567393",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@satsie, I am not currently. Would be happy to review.",
      "created_at" : "2022-11-03T07:45:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1301742596",
      "id" : 1301742596,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585NlwQE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301742596/reactions"
      },
      "updated_at" : "2022-11-03T07:45:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301742596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@vasild I've been working on this and noticed message types missing from the suggested RPC response you provided. Specifically, these message types are not there:\r\n\r\n- addr\r\n- merkleblock\r\n- getblocks\r\n- block\r\n- mempool\r\n- filterload\r\n- filteradd\r\n- filterclear\r\n- cmpctblock\r\n- getblocktxn\r\n- blocktxn\r\n- getcfilters\r\n- cfilter\r\n- getcfheaders\r\n- cfheaders\r\n- getcfcheckpt\r\n- sendtxrncl\r\n\r\nHave they intentionally been left out? I'm very new to the code base so I wasn't able to identify if there is something special or different about these types. \r\n",
      "created_at" : "2022-11-09T20:39:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1309348945",
      "id" : 1309348945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OCxRR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1309348945/reactions"
      },
      "updated_at" : "2022-11-09T20:39:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1309348945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@satsie I assume @vasild is just giving an example, and there can always be messages that are never actually used. Presumably he means that messages that were never seen could be omitted from the RPC output, rather than be listed with value 0.\r\n\r\nIn any case, Concept ACK about having such statistics. I'd go even further and also add:\r\n* Broken down per connection type (as well as a total which has them all summed up like suggested above).\r\n* Also have statistics for counts of messages (not just how many bytes they were).",
      "created_at" : "2022-11-09T22:36:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1309479144",
      "id" : 1309479144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585ODRDo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1309479144/reactions"
      },
      "updated_at" : "2022-11-09T22:36:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1309479144",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I did not intentionally leave them out, sorry! I just copy pasted an output from my screen. I missed the fact that if some value is 0 it would not be in the output. I guess some global analogue of `CNode::mapSendBytesPerMsgType` and `CNode::mapRecvBytesPerMsgType` should do it. Every time the numbers in those `CNode` maps are incremented, also increment the newly added, global ones. I guess the new maps should be added to the `CConnman` class.\r\n\r\n> Broken down per connection type\r\n\r\nAha! I was thinking about the same and also per network type, but couldn't figure a nice way to visualize that. So we would have something like the following (using only some values for clarity):\r\n\r\n```json\r\n\"bytessent_per_msg\": {\r\n    \"outbound_full_relay\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    },\r\n    \"inbound\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    },\r\n    \"block_relay\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    }\r\n},\r\n\"bytesrecv_per_msg\": {\r\n    \"outbound_full_relay\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    },\r\n    \"inbound\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    },\r\n    \"block_relay\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    }\r\n}\r\n```\r\n\r\n@sipa, is this what you suggested? If broken down also per network:\r\n\r\n```json\r\n\"bytessent_per_msg\": {\r\n    \"outbound_full_relay\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    },\r\n    \"inbound\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    },\r\n    \"block_relay\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    }\r\n},\r\n\"bytesrecv_per_msg\": {\r\n    \"outbound_full_relay\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    },\r\n    \"inbound\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    },\r\n    \"block_relay\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI think that the information would be useful but is the presentation too ugly/cumbersome?\r\n\r\n> Also have statistics for counts of messages\r\n\r\nYes, please! :) I guess then e.g. `\"addr\": 555` would become `\"addr\": { \"count\": 5, \"bytes\": 555 }` or `\"addr\": [5, 555]`.\r\n",
      "created_at" : "2022-11-10T11:34:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1310148776",
      "id" : 1310148776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OF0io",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310148776/reactions"
      },
      "updated_at" : "2022-11-10T11:34:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310148776",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you both for the clarification! And thank you @vasild for the sample JSON for what a response might look like with connection types included. It does look busy, but what you've laid out makes sense to me. \r\n\r\nI'm not quite to the point where I'm ready to add connection type. I'm still working on the regular breakdown by message type (need to update/write a test). The good news is my implementation is right in line with what you said about new maps in `CConnman` that are similar to `CNode::mapSendBytesPerMsgType` and `CNode::mapRecvBytesPerMsgType` :) \r\n\r\nAdding message count also sounds like a great improvement. I like the `\"addr\": { \"count\": 5, \"bytes\": 555 }` proposal a lot.\r\n\r\nI'll be back when I have actual code to show!",
      "created_at" : "2022-11-10T12:34:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1310216661",
      "id" : 1310216661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OGFHV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310216661/reactions"
      },
      "updated_at" : "2022-11-10T12:34:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310216661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild Yeah, I think a breakdown by network is useful too. This does make me wonder whether all combinations should be provided:\r\n* number of messages sent in total\r\n* number of messages sent, per message type\r\n* number of messages sent, per network\r\n* number of messages sent, per connection type\r\n* number of messages sent, per message type and network\r\n* number of messages sent, per message type and connection type\r\n* number of messages sent, per network and connection type\r\n* number of messages sent, per message type, network, and connection type\r\n* ... all the above repeated for bytes instead of messages, and for received instead of sent\r\n\r\nThat's 32 distinct sets of data (each keyed by whatever they're broken down by), which is probably excessive. But only giving the most-broken-down version is far less usable (as I expect most users to be more interested in more-aggregated results than broken-down ones).",
      "created_at" : "2022-11-10T15:06:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1310431611",
      "id" : 1310431611,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OG5l7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310431611/reactions"
      },
      "updated_at" : "2022-11-10T15:07:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310431611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Might be better to provide a new `getnetworkmsgstats` rpc that you invoke with up to three parameters: whether to split up per msgtype/conntype/network; whether to do msgs or bytes (or average bytes/msg?); whether to do received or sent (or combined?). Then just leave `getnettotals` for the actual totals.",
      "created_at" : "2022-11-11T04:23:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1311213890",
      "id" : 1311213890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OJ4lC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1311213890/reactions"
      },
      "updated_at" : "2022-11-11T04:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1311213890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ajtowns I like your proposal for a new `getnetworkmsgstats` RPC, and it's seems like a intriguing design challenge that I'd love to dive into more.\r\n\r\nTo your last comment about leaving `getnettotals` for the actual totals, are you proposing to leave `getnettotals` alone entirely? To refrain from making any changes to it in favor of a new `getnetworkmsgstats` RPC?\r\n\r\nI like the symmetry of adding the breakdown by msgtype in `getnettotals` because it aligns with what `getpeerinfo` is returning. It also seems useful to me for node operators to have some kind of breakdown that they can get \"for free\" (i.e. without the need to make a second RPC call), which may spark curiosity and lead them to use a future `getnetworkmsgstats`.",
      "created_at" : "2022-11-15T20:43:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1315840376",
      "id" : 1315840376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585ObiF4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315840376/reactions"
      },
      "updated_at" : "2022-11-15T20:43:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315840376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@satsie Don't really have an opinion. What I had in mind was not changing what `getnettotals` reported, and just letting you get all the combinations from `getnetmsgstats`, but having the totals match the per-active-peer report from `getpeerinfo` makes sense too.",
      "created_at" : "2022-11-16T13:34:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1317030972",
      "id" : 1317030972,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OgEw8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1317030972/reactions"
      },
      "updated_at" : "2022-11-16T13:34:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1317030972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "- concept ACK to adding per message stats to the RPC interface\r\n- I like the idea of introducing `getnetmsgstats` to allow users to retrieve stats broken down along different categories (message type, connection type, network) & (sent vs received)",
      "created_at" : "2022-11-30T19:32:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1332642057",
      "id" : 1332642057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585PboEJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1332642057/reactions"
      },
      "updated_at" : "2022-11-30T19:32:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1332642057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hi all! I spent some time thinking about this. I actually implemented the breakdown of bytes by message type in `getnettotals` as the issue description suggests, but ultimately decided against making a PR for it.\r\n\r\n**Why I think these stats donât belong in getnettotals**\r\n\r\n`getnettotals` implies that the response will be totals only.\r\n\r\n**Why I think these stats could maybe go in getnetworkinfo**\r\n\r\nDoing so would mirror the `getpeerinfo` RPC. Since these two calls are so similarly named, it makes sense for their responses to align where possible.\r\n\r\n**Why I think these stats actually belong in a totally new RPC**\r\n\r\nBased on aj's comment, and the ones leading up to it, there is support for a new RPC to get network message stats, which can handle a number of different breakdowns. From a usability perspective, this seems preferable to the 32 distinct sets of data that sipa mentioned :) As a side note, if a new RPC is going to be the permanent solution, the question of adding one very specific type of breakdown in an existing RPC like `getnetinfo` doesn't necessarily need to be solved now.\r\n\r\nItâs also been brought to my attention that RPCs have a high maintenance cost. If a message type breakdown becomes available in two places (`getnetinfo` and a new RPC), it can not only add potential complexity, but it would be very difficult to deprecate from one of the calls later. \r\n\r\nLastly, a sticking point for me had originally been this idea of getting some kind of message stats for free with an RPC that you may already be making. The need to specify parameters, something that youâd have to do with a new get network message stats RPC, was friction I didnât want to add (I know itâs small but developers are lazy!). Then I realized having a default set of parameters on a new RPC provided the same easy ârun this one commandâ developer experience. \r\n\r\n**Conclusion**\r\n\r\nAt the end of the day, the only argument I had for only adding message stats to an existing RPC was to make the responses of `getnetworkinfo` and `getpeerinfo` more symmetric. By itself, that doesnât seem like enough to decide against a new RPC. These stats can also be added to `getnetworkinfo` at a later time if it seems like the right thing to do.\r\n\r\nHowever I acknowledge that there is a lot I donât know! If there are any holes in my reasoning, I want to talk about them.\r\n\r\n## **Proposal for a new RPC**\r\n\r\nFor the reasons above, Iâve decided to focus on a new RPC. Here, I present the design for feedback:\r\n\r\n**New RPC name:** `getnetworkmsgstats`\r\n**Notes:** I considered abbreviating ânetworkâ to ânetâ (aka `getnetmsgstats`) but saw three RPCs use ânetworkâ (`getnetworkhashps`, `getnetworkinfo`,  and `setnetworkactive`) as opposed to the one that used ânetâ (`getnettotals`)\r\n\r\n### **Arguments in**\r\n\r\n**Argument 1: breakdown** (is there a better name for this?)\r\n**Type:** string, optional, default=msgtype\r\n_How the results should be broken down. Possible options are âmsgtypeâ (message type), âconntypeâ (connection type), or ânetworkâ._\r\n\r\n**Argument 2: direction** (again, is there a better name for this?)\r\n**Type:** string, optional, default=received\r\n_If the results should be for received messages or ones that have been sent. Possible options are âreceivedâ and âsent;_\r\n\r\nAs youâll see below, Iâve decided to always return the message count and number of bytes. Admittedly, this decision is arbitrary. It makes naming easier, particularly because I am struggling with the return fields. \r\n\r\nShould they be generic enough to support any kind of response? Or should they be specific to what the user is requesting? For example, the call could just return a number like `âgetaddrâ: 5`, or fields could be more specific like `âgetaddr_bytesâ: 555` / `âgetaddr_countâ: 5`. I know that the user should remember what arguments they invoked the call with, but I can see someone copy pasting a response and sending it over to a friend without specifying the units (bytes or count). If a number is going to appear somewhere, I tend to prefer if the units are close by.\r\n\r\nOn the flip side, it's very hard to develop against APIs that don't have reliable return fields. It's much easier when you know exactly what you are getting back, regardless of how a call is being made.\r\n\r\n### Example responses\r\n\r\n**Example 1:** `bitcoin-cli getnetworkmsgstats`\r\n_defaults to received messages broken down by message type_\r\n```yaml\r\n {\r\n    âaddrâ: {\r\n        âcountâ: 5,\r\n        âbytesâ: 555\r\n    },\r\n    âblockâ: {\r\n        âcountâ: 3,\r\n        âbytesâ: 333\r\n    },\r\n    âinvâ: {\r\n        âcountâ: 7,\r\n        âbytesâ: 777\r\n    }\r\n    â¦\r\n}\r\n```\r\n\r\n**Example 2:** `bitcoin-cli getnetworkmsgstats âconntypeâ âsentâ`\r\n_sent messages broken down by connection type_\r\n\r\n```yaml\r\n{\r\n    âipv4â: {\r\n        âcountâ: 5,\r\n        âbytesâ: 555\r\n    },\r\n    âipv6â: {\r\n        âcountâ: 3,\r\n        âbytesâ: 333\r\n    },\r\n    âonionâ: {\r\n        âcountâ: 7,\r\n        âbytesâ: 777\r\n    }\r\n    â¦\r\n}\r\n```\r\n\r\n### Outstanding questions\r\n\r\nIâm having the most difficulty with where to draw the line for what should be a parameter, and what should always be returned. This leads to related questions on how return fields are named. Any opinions on removing the âdirectionâ argument (received/sent) and always returning stats for both received and sent messages (wrap the top level objects in my examples into `messages_received` and `messages_sent` objects)?\r\n\r\nAny guidance and feedback is much appreciated, and many thanks to @amitiuttarwar for helping me get this far!\r\n",
      "created_at" : "2022-12-01T04:35:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1333159042",
      "id" : 1333159042,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585PdmSC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1333159042/reactions"
      },
      "updated_at" : "2022-12-01T04:41:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1333159042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   }
]
