[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6159#discussion_r30871896"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6159"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30871896"
         }
      },
      "body" : "- How can we produce an error like this for testing?\r\n- Do we know that the lock will always return a boost::interprocess:interprocess_exception, or should we be more general in  catching?\r\n- Re: translations, please don't add a translation message _() here for an extremely rare case. Just re-use the above generic message, and log the more detailed error to the debug log.",
      "commit_id" : "00bf1d994521e24fb45b285d99410adcea743215",
      "created_at" : "2015-05-22T06:25:34Z",
      "diff_hunk" : "@@ -862,9 +866,15 @@ bool AppInit2(boost::thread_group& threadGroup)\n     boost::filesystem::path pathLockFile = GetDataDir() / \".lock\";\n     FILE* file = fopen(pathLockFile.string().c_str(), \"a\"); // empty lock file; created if it doesn't exist.\n     if (file) fclose(file);\n-    static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n-    if (!lock.try_lock())\n-        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.\"), strDataDir));\n+\n+    try {\n+        static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n+        if (!lock.try_lock())\n+            return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.\"), strDataDir));\n+    } catch(const boost::interprocess::interprocess_exception& e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6159#discussion_r30871896",
      "id" : 30871896,
      "original_commit_id" : "00bf1d994521e24fb45b285d99410adcea743215",
      "original_position" : 25,
      "path" : "src/init.cpp",
      "position" : 25,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6159",
      "updated_at" : "2015-05-22T06:25:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30871896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6159#discussion_r30872230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6159"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30872230"
         }
      },
      "body" : "a) chmod 000 <datadir>\n\nb) if the boost docs are to be believed, this is the only exception it\nthrows.  i could not find a base exception beyond this.\n\nc) i was wary of adding a translation, but this is a pretty ugly error that\nshould be explained clearly.  we can't log it (beyond -printtoconsole)\nbecause we're blowing up due to an invalid datadir.  what do you think?\n",
      "commit_id" : "00bf1d994521e24fb45b285d99410adcea743215",
      "created_at" : "2015-05-22T06:37:41Z",
      "diff_hunk" : "@@ -862,9 +866,15 @@ bool AppInit2(boost::thread_group& threadGroup)\n     boost::filesystem::path pathLockFile = GetDataDir() / \".lock\";\n     FILE* file = fopen(pathLockFile.string().c_str(), \"a\"); // empty lock file; created if it doesn't exist.\n     if (file) fclose(file);\n-    static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n-    if (!lock.try_lock())\n-        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.\"), strDataDir));\n+\n+    try {\n+        static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n+        if (!lock.try_lock())\n+            return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.\"), strDataDir));\n+    } catch(const boost::interprocess::interprocess_exception& e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6159#discussion_r30872230",
      "id" : 30872230,
      "original_commit_id" : "00bf1d994521e24fb45b285d99410adcea743215",
      "original_position" : 25,
      "path" : "src/init.cpp",
      "position" : 25,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6159",
      "updated_at" : "2015-05-22T06:37:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30872230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/430315?v=3",
         "events_url" : "https://api.github.com/users/ajweiss/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajweiss/followers",
         "following_url" : "https://api.github.com/users/ajweiss/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajweiss/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajweiss",
         "id" : 430315,
         "login" : "ajweiss",
         "organizations_url" : "https://api.github.com/users/ajweiss/orgs",
         "received_events_url" : "https://api.github.com/users/ajweiss/received_events",
         "repos_url" : "https://api.github.com/users/ajweiss/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajweiss/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajweiss/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajweiss"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6159#discussion_r30878664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6159"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30878664"
         }
      },
      "body" : "re a,b) thanks, clear\r\n\r\nc) OK. But the problem is that any message returned by .what() will be either in English, or completely incomprehensible. \r\n\r\nSo may as well keep the entire message in English then. Easier to Google, too. \r\n\r\nThe alternative would be to have a translated message that explains the probable source of the problem and how to resolve it in understandable language. Adding another translation for \"Could not lock data directory\" isn't useful.\r\n\r\nIf you mean to get this in for 0.11, where a string freeze is in progress, I'd go for the first.\r\n",
      "commit_id" : "00bf1d994521e24fb45b285d99410adcea743215",
      "created_at" : "2015-05-22T08:49:30Z",
      "diff_hunk" : "@@ -862,9 +866,15 @@ bool AppInit2(boost::thread_group& threadGroup)\n     boost::filesystem::path pathLockFile = GetDataDir() / \".lock\";\n     FILE* file = fopen(pathLockFile.string().c_str(), \"a\"); // empty lock file; created if it doesn't exist.\n     if (file) fclose(file);\n-    static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n-    if (!lock.try_lock())\n-        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.\"), strDataDir));\n+\n+    try {\n+        static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n+        if (!lock.try_lock())\n+            return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.\"), strDataDir));\n+    } catch(const boost::interprocess::interprocess_exception& e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6159#discussion_r30878664",
      "id" : 30878664,
      "original_commit_id" : "00bf1d994521e24fb45b285d99410adcea743215",
      "original_position" : 25,
      "path" : "src/init.cpp",
      "position" : 25,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6159",
      "updated_at" : "2015-05-22T08:50:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30878664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
