[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30901955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30901955"
         }
      },
      "body" : "Would it not be possible to rewrite/adapt this test so it would conform to other `qa/rpc-tests/*` and would therefore use the same framework?",
      "commit_id" : "7b6c288f18a59ab2507e3e741dd5d35dcf0baee2",
      "created_at" : "2015-05-22T14:57:43Z",
      "diff_hunk" : "@@ -0,0 +1,315 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test replace-by-fee\n+#\n+\n+import os\n+import sys\n+\n+# Add python-bitcoinlib to module search path:\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinlib\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30901955",
      "id" : 30901955,
      "original_commit_id" : "a4d1ddae217266f594fd2a2b4495bfede133d847",
      "original_position" : 14,
      "path" : "qa/replace-by-fee/replace-by-fee-tests.py",
      "position" : 14,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176",
      "updated_at" : "2015-05-23T17:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30901955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30902489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30902489"
         }
      },
      "body" : "Sure, but that framework kinda sucks due to the lack of a good python Bitcoin library. Also, like I said above, I know I'll be backporting it so I needed a stand-alone set of tests that I could test the backports against.",
      "commit_id" : "7b6c288f18a59ab2507e3e741dd5d35dcf0baee2",
      "created_at" : "2015-05-22T15:02:41Z",
      "diff_hunk" : "@@ -0,0 +1,315 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test replace-by-fee\n+#\n+\n+import os\n+import sys\n+\n+# Add python-bitcoinlib to module search path:\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinlib\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30902489",
      "id" : 30902489,
      "original_commit_id" : "a4d1ddae217266f594fd2a2b4495bfede133d847",
      "original_position" : 14,
      "path" : "qa/replace-by-fee/replace-by-fee-tests.py",
      "position" : 14,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176",
      "updated_at" : "2015-05-23T17:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30902489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30902625"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30902625"
         }
      },
      "body" : "Empty code block?",
      "commit_id" : "7b6c288f18a59ab2507e3e741dd5d35dcf0baee2",
      "created_at" : "2015-05-22T15:03:58Z",
      "diff_hunk" : "@@ -1051,8 +1152,26 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n+        // Are we replacing an existing transaction?\n+        if (pool.exists(hash))\n+        {\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30902625",
      "id" : 30902625,
      "original_commit_id" : "a4d1ddae217266f594fd2a2b4495bfede133d847",
      "original_position" : 134,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176",
      "updated_at" : "2015-05-23T17:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30902625",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30903649"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30903649"
         }
      },
      "body" : "Lol, I must be blind... That's stub code replaced by the lines just below it; fixed, thanks!",
      "commit_id" : "7b6c288f18a59ab2507e3e741dd5d35dcf0baee2",
      "created_at" : "2015-05-22T15:14:33Z",
      "diff_hunk" : "@@ -1051,8 +1152,26 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n+        // Are we replacing an existing transaction?\n+        if (pool.exists(hash))\n+        {\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30903649",
      "id" : 30903649,
      "original_commit_id" : "a4d1ddae217266f594fd2a2b4495bfede133d847",
      "original_position" : 134,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176",
      "updated_at" : "2015-05-23T17:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30903649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30908342"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30908342"
         }
      },
      "body" : "I believe it shouldn't be possible for there to be more than one transaction in ```ltxConflicted``` here, is that right?  Perhaps clarifying the comment at line 1155 (or adding an assertion about the size of this list) would be helpful.",
      "commit_id" : "7b6c288f18a59ab2507e3e741dd5d35dcf0baee2",
      "created_at" : "2015-05-22T16:08:55Z",
      "diff_hunk" : "@@ -1051,8 +1152,21 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n+        // Remove conflicting transaction(s) from mempool (if any)\n+        list<CTransaction> ltxConflicted;\n+        pool.removeConflicts(tx, ltxConflicted);\n+\n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, !IsInitialBlockDownload());\n+\n+        BOOST_FOREACH(const CTransaction &txConflicted, ltxConflicted)\n+        {\n+            LogPrint(\"mempool\", \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n+                     txConflicted.GetHash().ToString(),\n+                     hash.ToString(),\n+                     FormatMoney(nFees - nConflictingFees),\n+                     (int)nSize - (int)nConflictingSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30908342",
      "id" : 30908342,
      "original_commit_id" : "fb472276b103ecabde5f6cd54a7a7adf8c2896c8",
      "original_position" : 144,
      "path" : "src/main.cpp",
      "position" : 166,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176",
      "updated_at" : "2015-05-23T17:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30908342",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30911637"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30911637"
         }
      },
      "body" : "The mempool isn't locked the whole time, so I believe there's a small chance there could be more than one conflicting transaction. (never mind future design changes!)\r\n\r\nUpdated comment.",
      "commit_id" : "7b6c288f18a59ab2507e3e741dd5d35dcf0baee2",
      "created_at" : "2015-05-22T16:52:51Z",
      "diff_hunk" : "@@ -1051,8 +1152,21 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n+        // Remove conflicting transaction(s) from mempool (if any)\n+        list<CTransaction> ltxConflicted;\n+        pool.removeConflicts(tx, ltxConflicted);\n+\n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, !IsInitialBlockDownload());\n+\n+        BOOST_FOREACH(const CTransaction &txConflicted, ltxConflicted)\n+        {\n+            LogPrint(\"mempool\", \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n+                     txConflicted.GetHash().ToString(),\n+                     hash.ToString(),\n+                     FormatMoney(nFees - nConflictingFees),\n+                     (int)nSize - (int)nConflictingSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r30911637",
      "id" : 30911637,
      "original_commit_id" : "fb472276b103ecabde5f6cd54a7a7adf8c2896c8",
      "original_position" : 144,
      "path" : "src/main.cpp",
      "position" : 166,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176",
      "updated_at" : "2015-05-23T17:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30911637",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "I think we need to add a check that the replacing transaction isn't spending an output of the to-be-replaced transaction; I just wrote up a quick test and it looks to me like this would cause an orphan transaction to enter the mempool.",
      "created_at" : "2015-05-23T10:04:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-104877829",
      "id" : 104877829,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6176",
      "updated_at" : "2015-05-23T10:04:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/104877829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "@sdaftuar Nice catch! Fixed.",
      "created_at" : "2015-05-23T16:14:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-104918678",
      "id" : 104918678,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6176",
      "updated_at" : "2015-05-23T16:14:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/104918678",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "Should also ensure that no inputs have been removed or changed (other than scriptsigs) -- only added.\r\n\r\nOtherwise, the semantics change for the original signers.  Imagine a tx with two inputs from different parties.  Should it be easy for party 1 to be able to eliminate party 2 as a contributor of funds?  It's not difficult to imagine real-world consequences to not having contributed to the transaction. tx-level attributes like nLocktime should not change either.\r\n\r\nThe result would be something very like CPFP, but with the new inputs and outputs merged into the original tx, saving space and tx count.",
      "created_at" : "2015-05-26T18:40:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-105630255",
      "id" : 105630255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6176",
      "updated_at" : "2015-05-26T18:40:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105630255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4284124?v=3",
         "events_url" : "https://api.github.com/users/dgenr8/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dgenr8/followers",
         "following_url" : "https://api.github.com/users/dgenr8/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dgenr8/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dgenr8",
         "id" : 4284124,
         "login" : "dgenr8",
         "organizations_url" : "https://api.github.com/users/dgenr8/orgs",
         "received_events_url" : "https://api.github.com/users/dgenr8/received_events",
         "repos_url" : "https://api.github.com/users/dgenr8/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dgenr8/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dgenr8"
      }
   },
   {
      "body" : "I don't see a problem with removing inputs, but perhaps we should consider an additional requirement that any inputs not in the original transaction must also not be in the mempool (and therefore must already be confirmed).\r\n\r\nI think the idea should be that the replacing-transaction is more likely to be confirmed than the previous transaction.  If the replacing transaction has slightly higher fees but adds an input that depends on an unlikely-to-be-confirmed transaction, then a miner might prefer to not do the replacement.",
      "created_at" : "2015-05-26T19:30:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-105642248",
      "id" : 105642248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6176",
      "updated_at" : "2015-05-26T19:30:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105642248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r31074514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31074514"
         }
      },
      "body" : "Mostly an fyi after looking at this more: despite the mempool lock not being held the whole time, cs_main is held, and that seems important for a preventing a race condition (otherwise the result of ```view.HaveInputs()``` at line 1029 could have changed by the time you get to ```pool.addUnchecked()``` at line 1182)...  Anyway, I don't think there can be more than one conflicting transaction.",
      "commit_id" : "7b6c288f18a59ab2507e3e741dd5d35dcf0baee2",
      "created_at" : "2015-05-26T20:13:26Z",
      "diff_hunk" : "@@ -1051,8 +1152,21 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n+        // Remove conflicting transaction(s) from mempool (if any)\n+        list<CTransaction> ltxConflicted;\n+        pool.removeConflicts(tx, ltxConflicted);\n+\n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, !IsInitialBlockDownload());\n+\n+        BOOST_FOREACH(const CTransaction &txConflicted, ltxConflicted)\n+        {\n+            LogPrint(\"mempool\", \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n+                     txConflicted.GetHash().ToString(),\n+                     hash.ToString(),\n+                     FormatMoney(nFees - nConflictingFees),\n+                     (int)nSize - (int)nConflictingSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#discussion_r31074514",
      "id" : 31074514,
      "original_commit_id" : "fb472276b103ecabde5f6cd54a7a7adf8c2896c8",
      "original_position" : 144,
      "path" : "src/main.cpp",
      "position" : 166,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6176",
      "updated_at" : "2015-05-26T20:13:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31074514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "@sdaftuar That's an interesting point. You're right that just forcing the input to be confirmed works; a more sophisticated - but still fairly easy to implement - approach would be to to have the mempool track the sum fee of transactions' parents and reject the replacement if you're going from a higher fee/KB parent to a lower one.\r\n\r\nHaving said that, I'm don't think you can really create an attack out of this: in either case the attacker is limited by the min-relay-fee, so they could have always done an attack by just broadcasting a long chain of transactions anyway.\r\n\r\nAnyway, I can't think of any applications other than adding inputs to transactions signed with SIGHASH_SINGLE where restricting new inputs to be confirmed would be a major limitation.",
      "created_at" : "2015-05-27T01:14:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-105709000",
      "id" : 105709000,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6176",
      "updated_at" : "2015-05-27T01:14:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105709000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "@dgenr8 re: nLockTime, we only allow transactions into the mempool if they're final, in which case the exact nLockTime value is irrelevant; I don't think we should bend over backwards to accommodate weird smart contract protocols, particularly when it's easy to design them such that eliminating a contributor of funds from the transaction means the \"thing\" that was meant to happen doesn't happen. In all the smart contract stuff I've worked on the natural outcome of party #1 eliminating party #2 from being an input simply means that they've decided to \"purchase\" the thing/contract/right/whatever in question all by themselves rather than with the assistance of others.\r\n\r\nI didn't write it up in my FSS RBF writeup, but being able to replace transaction inputs rather than simply add to the vin makes fee bumping significantly more efficient in many scenarios; I'll write that up later on the -dev mailing list.",
      "created_at" : "2015-05-27T01:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-105709406",
      "id" : 105709406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6176",
      "updated_at" : "2015-05-27T01:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105709406",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   }
]
