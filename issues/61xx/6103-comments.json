[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29596655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29596655"
         }
      },
      "body" : "This entire file needs to be retabbed.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-04T16:01:02Z",
      "diff_hunk" : "@@ -0,0 +1,175 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqports.h\"\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"version.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"ui_interface.h\"\n+#include \"json/json_spirit_value.h\"\n+\n+using namespace json_spirit;\n+using namespace std;\n+\n+// Global state\n+bool fZMQPub = false;\n+\n+#if ENABLE_ZMQ\n+\n+// ZMQ related file scope variables\n+static void *zmqContext;\n+static void *zmqPubSocket;\n+\n+// Internal utility functions\n+static void ZMQPublishBlock(const CBlock &blk);\n+static void ZMQPublishTransaction(const CTransaction &tx);\n+\n+static void zmqError(const char *str)\n+{\n+  LogPrint(\"ZMQ error: %s, errno=%s\\n\", str, zmq_strerror(errno));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29596655",
      "id" : 29596655,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 39,
      "path" : "src/zmqports.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29596655",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/430315?v=3",
         "events_url" : "https://api.github.com/users/ajweiss/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajweiss/followers",
         "following_url" : "https://api.github.com/users/ajweiss/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajweiss/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajweiss",
         "id" : 430315,
         "login" : "ajweiss",
         "organizations_url" : "https://api.github.com/users/ajweiss/orgs",
         "received_events_url" : "https://api.github.com/users/ajweiss/received_events",
         "repos_url" : "https://api.github.com/users/ajweiss/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajweiss/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajweiss/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajweiss"
      }
   },
   {
      "body" : "Are you planning on supplying an RPC/regression test for this?",
      "created_at" : "2015-05-04T16:07:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-98767292",
      "id" : 98767292,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-04T16:07:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98767292",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/430315?v=3",
         "events_url" : "https://api.github.com/users/ajweiss/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajweiss/followers",
         "following_url" : "https://api.github.com/users/ajweiss/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajweiss/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajweiss",
         "id" : 430315,
         "login" : "ajweiss",
         "organizations_url" : "https://api.github.com/users/ajweiss/orgs",
         "received_events_url" : "https://api.github.com/users/ajweiss/received_events",
         "repos_url" : "https://api.github.com/users/ajweiss/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajweiss/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajweiss/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajweiss"
      }
   },
   {
      "body" : "That work was in previous PR. I can't see a use case where this is useful. Maybe @jmcorgan have something to say about that, otherwise I would remove this RPC call.",
      "created_at" : "2015-05-04T16:10:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-98768493",
      "id" : 98768493,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-04T16:18:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98768493",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29597688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29597688"
         }
      },
      "body" : "As mentioned in one of the previous PRs, block acceptance is really not interesting or useful. It does not mean the block is part of the best chain, or even that it is valid. Use the NotifyBlockTip signal place, which indicates a new tip of the best chain was accepted.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-04T16:13:07Z",
      "diff_hunk" : "@@ -95,6 +97,12 @@ class CClientUIInterface\n \n     /** New block has been accepted */\n     boost::signals2::signal<void (const uint256& hash)> NotifyBlockTip;\n+\n+    /** New block has been accepted */\n+    boost::signals2::signal<void (const CBlock& block)> NotifyAcceptBlock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29597688",
      "id" : 29597688,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 15,
      "path" : "src/ui_interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29597688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "As far as I know, no RPC tests for ZMQ support have yet been PR'd.\r\n\r\nI think there might be some confusion here.  When I say RPC tests, I mean the Python regression tests that live qa/rpc-tests tree.  They're pretty much only called RPC tests because of history and the primary way they interface with bitcoind.  They exercise and verify many large bits of functionality and are always useful!  Case in point, when REST support was originally added, it had some pretty serious bugs that weren't caught because there was no RPC test.  See PR #5379 for an example of how RPC tests for the REST interface were implemented.\r\n\r\nI suppose RPC tests could be PR'd separately, but I bet this will go in faster and with more enthusiasm if tests are added.",
      "created_at" : "2015-05-04T16:22:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-98771316",
      "id" : 98771316,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-04T16:22:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98771316",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/430315?v=3",
         "events_url" : "https://api.github.com/users/ajweiss/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajweiss/followers",
         "following_url" : "https://api.github.com/users/ajweiss/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajweiss/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajweiss",
         "id" : 430315,
         "login" : "ajweiss",
         "organizations_url" : "https://api.github.com/users/ajweiss/orgs",
         "received_events_url" : "https://api.github.com/users/ajweiss/received_events",
         "repos_url" : "https://api.github.com/users/ajweiss/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajweiss/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajweiss/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajweiss"
      }
   },
   {
      "body" : "@promag Nice that you have started recycle/update/rebase this!\r\nI have plans to test this during this week and therefore would be willing to write some RPC'like tests.",
      "created_at" : "2015-05-04T18:38:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-98808690",
      "id" : 98808690,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-04T18:38:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/98808690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29646858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29646858"
         }
      },
      "body" : "L39: s/`LogPrint`/`LogPrintf` otherwise you start introducing a debug category with string identifier `\"ZMQ error: %s, errno=%s\\n\"`.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T06:52:56Z",
      "diff_hunk" : "@@ -0,0 +1,175 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqports.h\"\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"version.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"ui_interface.h\"\n+#include \"json/json_spirit_value.h\"\n+\n+using namespace json_spirit;\n+using namespace std;\n+\n+// Global state\n+bool fZMQPub = false;\n+\n+#if ENABLE_ZMQ\n+\n+// ZMQ related file scope variables\n+static void *zmqContext;\n+static void *zmqPubSocket;\n+\n+// Internal utility functions\n+static void ZMQPublishBlock(const CBlock &blk);\n+static void ZMQPublishTransaction(const CTransaction &tx);\n+\n+static void zmqError(const char *str)\n+{\n+  LogPrint(\"ZMQ error: %s, errno=%s\\n\", str, zmq_strerror(errno));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29646858",
      "id" : 29646858,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 39,
      "path" : "src/zmqports.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29646858",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29646980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29646980"
         }
      },
      "body" : "this should be: `bitcoind -zmqpub=tcp://127.0.0.1:28332` (~~dash~~ colon instead slash before port)\r\nEdit: dash / colon",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T06:57:15Z",
      "diff_hunk" : "@@ -0,0 +1,145 @@\n+# Block and Transaction Broadcasting With ZeroMQ\n+\n+[ZeroMQ](http://zeromq.org/) is a lightweight wrapper around TCP\n+connections, inter-process communications, and shared-memory,\n+providing various message-oriented semantics such as publish/subcribe,\n+request/reply, and push/pull.\n+\n+The Bitcoin Core daemon can be configured to act as a trusted \"border\n+router\", implementing the bitcoin wire protocol and relay, making\n+consensus decisions, maintaining the local blockchain database,\n+broadcasting locally generated transactions into the network, and\n+providing a queryable RPC interface to interact on a polled basis for\n+requesting blockchain related data.  However, there exists only a\n+limited service to notify external software of events like the arrival\n+of new blocks or transactions.\n+\n+The ZeroMQ facility binds a \"publish\" port that broadcasts all newly\n+arrived *and validated* blocks and transactions to one or more\n+connected subscribers.  This read-only facility requires only the\n+connection of a corresponding ZeroMQ subscriber port in receiving\n+software; it is not authenticated nor is there any two-way protocol\n+involvement.\n+\n+In this fashion, external software can use a trusted Bitcoin Core\n+daemon to do the heavy lifting of communicating with the P2P network,\n+while still receiving network information asynchronously in real\n+time. As transactions and blocks arrive via the P2P network, Bitcoin\n+Core will apply all the validation and standardization rules to this\n+data, only passing along through ZeroMQ those items that pass.\n+\n+ZeroMQ sockets are self-connecting and self-healing; that is, connects\n+made between two endpoints will be automatically restored after an\n+outage, and either end may be freely started or stopped in any order.\n+\n+Because ZeroMQ is message oriented, subscribers receive transactions\n+and blocks all-at-once and do not need to implement any sort of\n+buffering or reassembly.\n+\n+## Prerequisites\n+\n+The ZeroMQ feature in Bitcoin Core uses only a very small part of the\n+ZeroMQ C API, and is thus compatible with any version of ZeroMQ\n+from 2.1 onward, including all versions in the 3.x and 4.x release\n+series.  Typically, it is packaged by distributions as something like\n+*libzmq-dev*.\n+\n+The C++ wrapper for ZeroMQ is *not* needed.\n+\n+## Enabling\n+\n+By default, the ZeroMQ port functionality is disabled.  Two steps are\n+required to enable--compiling in the ZeroMQ code, and configuring\n+runtime operation on the command-line or configuration file.\n+\n+    $ ./configure --enable-zmq (other options)\n+\n+This will produce a binary that is capable of providing the ZeroMQ\n+facility, but will not do so until also configured properly.\n+\n+## Configuration\n+\n+Currently, the ZeroMQ facility only needs to have the ZeroMQ endpoint\n+specified:\n+\n+    $ bitcoind -zmqpub=tcp://127.0.0.1/28332",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29646980",
      "id" : 29646980,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 65,
      "path" : "doc/zmq.md",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29646980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29647082"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29647082"
         }
      },
      "body" : "Does it make sense to use the uiInterface `CClientUIInterface` as signaling layer for zmq? Or would it be better to introduce a custom signaling class/struct?",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T07:00:54Z",
      "diff_hunk" : "@@ -0,0 +1,175 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqports.h\"\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"version.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"ui_interface.h\"\n+#include \"json/json_spirit_value.h\"\n+\n+using namespace json_spirit;\n+using namespace std;\n+\n+// Global state\n+bool fZMQPub = false;\n+\n+#if ENABLE_ZMQ\n+\n+// ZMQ related file scope variables\n+static void *zmqContext;\n+static void *zmqPubSocket;\n+\n+// Internal utility functions\n+static void ZMQPublishBlock(const CBlock &blk);\n+static void ZMQPublishTransaction(const CTransaction &tx);\n+\n+static void zmqError(const char *str)\n+{\n+  LogPrint(\"ZMQ error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n+}\n+\n+// Called at startup to conditionally set up ZMQ socket(s)\n+void ZMQInitialize(const std::string &endp)\n+{\n+  zmqContext = zmq_init(1);\n+  if (!zmqContext) {\n+    zmqError(\"Unable to initialize ZMQ context\");\n+    return;\n+  }\n+\n+  zmqPubSocket = zmq_socket(zmqContext, ZMQ_PUB);\n+  if (!zmqPubSocket) {\n+    zmqError(\"Unable to open ZMQ pub socket\");\n+    return;\n+  }\n+\n+  int rc = zmq_bind(zmqPubSocket, endp.c_str());\n+  if (rc != 0) {\n+    zmqError(\"Unable to bind ZMQ socket\");\n+    zmq_close(zmqPubSocket);\n+    zmqPubSocket = 0;\n+    return;\n+  }\n+\n+  uiInterface.NotifyAcceptBlock.connect(ZMQPublishBlock);\n+  uiInterface.NotifyRelayTx.connect(ZMQPublishTransaction);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29647082",
      "id" : 29647082,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 66,
      "path" : "src/zmqports.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29647082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29648007"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29648007"
         }
      },
      "body" : "What's the use case of `getzmqurl`? Why should someone need to get the ZMQ URL over RPC?",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T07:27:29Z",
      "diff_hunk" : "@@ -282,6 +282,9 @@ static const CRPCCommand vRPCCommands[] =\n     { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n     { \"network\",            \"ping\",                   &ping,                   true  },\n \n+    /* ZMQ notification */\n+    { \"zmq\",                \"getzmqurl\",              &getzmqurl,              true  },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29648007",
      "id" : 29648007,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 5,
      "path" : "src/rpcserver.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29648007",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29649282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29649282"
         }
      },
      "body" : "I think this line can be removed. Also L112.\r\nSee also: https://github.com/bitcoin/bitcoin/blob/master/src/rpcblockchain.cpp#L308 and https://github.com/bitcoin/bitcoin/blob/master/src/rest.cpp#L182",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T07:59:11Z",
      "diff_hunk" : "@@ -0,0 +1,175 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqports.h\"\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"version.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"ui_interface.h\"\n+#include \"json/json_spirit_value.h\"\n+\n+using namespace json_spirit;\n+using namespace std;\n+\n+// Global state\n+bool fZMQPub = false;\n+\n+#if ENABLE_ZMQ\n+\n+// ZMQ related file scope variables\n+static void *zmqContext;\n+static void *zmqPubSocket;\n+\n+// Internal utility functions\n+static void ZMQPublishBlock(const CBlock &blk);\n+static void ZMQPublishTransaction(const CTransaction &tx);\n+\n+static void zmqError(const char *str)\n+{\n+  LogPrint(\"ZMQ error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n+}\n+\n+// Called at startup to conditionally set up ZMQ socket(s)\n+void ZMQInitialize(const std::string &endp)\n+{\n+  zmqContext = zmq_init(1);\n+  if (!zmqContext) {\n+    zmqError(\"Unable to initialize ZMQ context\");\n+    return;\n+  }\n+\n+  zmqPubSocket = zmq_socket(zmqContext, ZMQ_PUB);\n+  if (!zmqPubSocket) {\n+    zmqError(\"Unable to open ZMQ pub socket\");\n+    return;\n+  }\n+\n+  int rc = zmq_bind(zmqPubSocket, endp.c_str());\n+  if (rc != 0) {\n+    zmqError(\"Unable to bind ZMQ socket\");\n+    zmq_close(zmqPubSocket);\n+    zmqPubSocket = 0;\n+    return;\n+  }\n+\n+  uiInterface.NotifyAcceptBlock.connect(ZMQPublishBlock);\n+  uiInterface.NotifyRelayTx.connect(ZMQPublishTransaction);\n+\n+  fZMQPub = true;\n+  LogPrint(\"zmq\", \"PUB socket listening at %s\\n\", endp);\n+}\n+\n+// Internal function to publish a serialized data stream on a given\n+// topic\n+//\n+// Note: assumes topic is a valid null terminated C string\n+static void zmqPublish(const char *topic, const CDataStream &ss)\n+{\n+  zmq_msg_t msg;\n+  const unsigned int topiclen = strlen(topic);\n+  const unsigned int msglen = ss.size() + topiclen;\n+\n+  // Initialize a new zmq_msg_t to hold serialized content\n+  int rc = zmq_msg_init_size(&msg, msglen);\n+  if (rc) {\n+    zmqError(\"Unable to initialize ZMQ msg\");\n+    return;\n+  }\n+\n+  // Copy topic and serialized TX into message buffer\n+  unsigned char *buf = (unsigned char *)zmq_msg_data(&msg);\n+  memcpy(&buf[0], topic, topiclen); // omits null trailer\n+  memcpy(&buf[topiclen], &ss[0], ss.size());\n+\n+  // Fire-and-forget\n+  rc = zmq_msg_send(&msg, zmqPubSocket, 0);\n+  if (rc == -1) {\n+    zmqError(\"Unable to send ZMQ message\");\n+    return;\n+  }\n+\n+  LogPrint(\"zmq\", \"Published to topic %s\\n\", topic);\n+}\n+\n+// Called after all transaction relay checks are completed\n+static void ZMQPublishTransaction(const CTransaction &tx)\n+{\n+  if (!zmqPubSocket)\n+    return;\n+\n+  // Serialize transaction\n+  CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+  ss.reserve(10000); // FIXME used defined constant\n+  ss << tx;\n+\n+  zmqPublish(\"TXN\", ss);\n+}\n+\n+// Called after all block checks completed and successfully added to\n+// disk index\n+static void ZMQPublishBlock(const CBlock &blk)\n+{\n+  if (!zmqPubSocket)\n+    return;\n+\n+  // Serialize block\n+  CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+  ss.reserve(1000000); // FIXME use defined constant",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29649282",
      "id" : 29649282,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 127,
      "path" : "src/zmqports.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29649282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655661"
         }
      },
      "body" : "fixed in upcoming commit",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T09:53:56Z",
      "diff_hunk" : "@@ -0,0 +1,145 @@\n+# Block and Transaction Broadcasting With ZeroMQ\n+\n+[ZeroMQ](http://zeromq.org/) is a lightweight wrapper around TCP\n+connections, inter-process communications, and shared-memory,\n+providing various message-oriented semantics such as publish/subcribe,\n+request/reply, and push/pull.\n+\n+The Bitcoin Core daemon can be configured to act as a trusted \"border\n+router\", implementing the bitcoin wire protocol and relay, making\n+consensus decisions, maintaining the local blockchain database,\n+broadcasting locally generated transactions into the network, and\n+providing a queryable RPC interface to interact on a polled basis for\n+requesting blockchain related data.  However, there exists only a\n+limited service to notify external software of events like the arrival\n+of new blocks or transactions.\n+\n+The ZeroMQ facility binds a \"publish\" port that broadcasts all newly\n+arrived *and validated* blocks and transactions to one or more\n+connected subscribers.  This read-only facility requires only the\n+connection of a corresponding ZeroMQ subscriber port in receiving\n+software; it is not authenticated nor is there any two-way protocol\n+involvement.\n+\n+In this fashion, external software can use a trusted Bitcoin Core\n+daemon to do the heavy lifting of communicating with the P2P network,\n+while still receiving network information asynchronously in real\n+time. As transactions and blocks arrive via the P2P network, Bitcoin\n+Core will apply all the validation and standardization rules to this\n+data, only passing along through ZeroMQ those items that pass.\n+\n+ZeroMQ sockets are self-connecting and self-healing; that is, connects\n+made between two endpoints will be automatically restored after an\n+outage, and either end may be freely started or stopped in any order.\n+\n+Because ZeroMQ is message oriented, subscribers receive transactions\n+and blocks all-at-once and do not need to implement any sort of\n+buffering or reassembly.\n+\n+## Prerequisites\n+\n+The ZeroMQ feature in Bitcoin Core uses only a very small part of the\n+ZeroMQ C API, and is thus compatible with any version of ZeroMQ\n+from 2.1 onward, including all versions in the 3.x and 4.x release\n+series.  Typically, it is packaged by distributions as something like\n+*libzmq-dev*.\n+\n+The C++ wrapper for ZeroMQ is *not* needed.\n+\n+## Enabling\n+\n+By default, the ZeroMQ port functionality is disabled.  Two steps are\n+required to enable--compiling in the ZeroMQ code, and configuring\n+runtime operation on the command-line or configuration file.\n+\n+    $ ./configure --enable-zmq (other options)\n+\n+This will produce a binary that is capable of providing the ZeroMQ\n+facility, but will not do so until also configured properly.\n+\n+## Configuration\n+\n+Currently, the ZeroMQ facility only needs to have the ZeroMQ endpoint\n+specified:\n+\n+    $ bitcoind -zmqpub=tcp://127.0.0.1/28332",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655661",
      "id" : 29655661,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 65,
      "path" : "doc/zmq.md",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655725"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655725"
         }
      },
      "body" : "I've changed this to use zeromq multipart messages. Changed in upcoming commit",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T09:54:53Z",
      "diff_hunk" : "@@ -0,0 +1,175 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqports.h\"\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"version.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"ui_interface.h\"\n+#include \"json/json_spirit_value.h\"\n+\n+using namespace json_spirit;\n+using namespace std;\n+\n+// Global state\n+bool fZMQPub = false;\n+\n+#if ENABLE_ZMQ\n+\n+// ZMQ related file scope variables\n+static void *zmqContext;\n+static void *zmqPubSocket;\n+\n+// Internal utility functions\n+static void ZMQPublishBlock(const CBlock &blk);\n+static void ZMQPublishTransaction(const CTransaction &tx);\n+\n+static void zmqError(const char *str)\n+{\n+  LogPrint(\"ZMQ error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n+}\n+\n+// Called at startup to conditionally set up ZMQ socket(s)\n+void ZMQInitialize(const std::string &endp)\n+{\n+  zmqContext = zmq_init(1);\n+  if (!zmqContext) {\n+    zmqError(\"Unable to initialize ZMQ context\");\n+    return;\n+  }\n+\n+  zmqPubSocket = zmq_socket(zmqContext, ZMQ_PUB);\n+  if (!zmqPubSocket) {\n+    zmqError(\"Unable to open ZMQ pub socket\");\n+    return;\n+  }\n+\n+  int rc = zmq_bind(zmqPubSocket, endp.c_str());\n+  if (rc != 0) {\n+    zmqError(\"Unable to bind ZMQ socket\");\n+    zmq_close(zmqPubSocket);\n+    zmqPubSocket = 0;\n+    return;\n+  }\n+\n+  uiInterface.NotifyAcceptBlock.connect(ZMQPublishBlock);\n+  uiInterface.NotifyRelayTx.connect(ZMQPublishTransaction);\n+\n+  fZMQPub = true;\n+  LogPrint(\"zmq\", \"PUB socket listening at %s\\n\", endp);\n+}\n+\n+// Internal function to publish a serialized data stream on a given\n+// topic\n+//\n+// Note: assumes topic is a valid null terminated C string\n+static void zmqPublish(const char *topic, const CDataStream &ss)\n+{\n+  zmq_msg_t msg;\n+  const unsigned int topiclen = strlen(topic);\n+  const unsigned int msglen = ss.size() + topiclen;\n+\n+  // Initialize a new zmq_msg_t to hold serialized content\n+  int rc = zmq_msg_init_size(&msg, msglen);\n+  if (rc) {\n+    zmqError(\"Unable to initialize ZMQ msg\");\n+    return;\n+  }\n+\n+  // Copy topic and serialized TX into message buffer\n+  unsigned char *buf = (unsigned char *)zmq_msg_data(&msg);\n+  memcpy(&buf[0], topic, topiclen); // omits null trailer\n+  memcpy(&buf[topiclen], &ss[0], ss.size());\n+\n+  // Fire-and-forget\n+  rc = zmq_msg_send(&msg, zmqPubSocket, 0);\n+  if (rc == -1) {\n+    zmqError(\"Unable to send ZMQ message\");\n+    return;\n+  }\n+\n+  LogPrint(\"zmq\", \"Published to topic %s\\n\", topic);\n+}\n+\n+// Called after all transaction relay checks are completed\n+static void ZMQPublishTransaction(const CTransaction &tx)\n+{\n+  if (!zmqPubSocket)\n+    return;\n+\n+  // Serialize transaction\n+  CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+  ss.reserve(10000); // FIXME used defined constant\n+  ss << tx;\n+\n+  zmqPublish(\"TXN\", ss);\n+}\n+\n+// Called after all block checks completed and successfully added to\n+// disk index\n+static void ZMQPublishBlock(const CBlock &blk)\n+{\n+  if (!zmqPubSocket)\n+    return;\n+\n+  // Serialize block\n+  CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+  ss.reserve(1000000); // FIXME use defined constant",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655725",
      "id" : 29655725,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 127,
      "path" : "src/zmqports.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655725",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655732"
         }
      },
      "body" : "Removed in upcoming commit",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T09:55:00Z",
      "diff_hunk" : "@@ -282,6 +282,9 @@ static const CRPCCommand vRPCCommands[] =\n     { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n     { \"network\",            \"ping\",                   &ping,                   true  },\n \n+    /* ZMQ notification */\n+    { \"zmq\",                \"getzmqurl\",              &getzmqurl,              true  },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655732",
      "id" : 29655732,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 5,
      "path" : "src/rpcserver.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655767"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655767"
         }
      },
      "body" : "I believe this discussion should happen in a different PR.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T09:55:43Z",
      "diff_hunk" : "@@ -0,0 +1,175 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqports.h\"\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"version.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"ui_interface.h\"\n+#include \"json/json_spirit_value.h\"\n+\n+using namespace json_spirit;\n+using namespace std;\n+\n+// Global state\n+bool fZMQPub = false;\n+\n+#if ENABLE_ZMQ\n+\n+// ZMQ related file scope variables\n+static void *zmqContext;\n+static void *zmqPubSocket;\n+\n+// Internal utility functions\n+static void ZMQPublishBlock(const CBlock &blk);\n+static void ZMQPublishTransaction(const CTransaction &tx);\n+\n+static void zmqError(const char *str)\n+{\n+  LogPrint(\"ZMQ error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n+}\n+\n+// Called at startup to conditionally set up ZMQ socket(s)\n+void ZMQInitialize(const std::string &endp)\n+{\n+  zmqContext = zmq_init(1);\n+  if (!zmqContext) {\n+    zmqError(\"Unable to initialize ZMQ context\");\n+    return;\n+  }\n+\n+  zmqPubSocket = zmq_socket(zmqContext, ZMQ_PUB);\n+  if (!zmqPubSocket) {\n+    zmqError(\"Unable to open ZMQ pub socket\");\n+    return;\n+  }\n+\n+  int rc = zmq_bind(zmqPubSocket, endp.c_str());\n+  if (rc != 0) {\n+    zmqError(\"Unable to bind ZMQ socket\");\n+    zmq_close(zmqPubSocket);\n+    zmqPubSocket = 0;\n+    return;\n+  }\n+\n+  uiInterface.NotifyAcceptBlock.connect(ZMQPublishBlock);\n+  uiInterface.NotifyRelayTx.connect(ZMQPublishTransaction);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655767",
      "id" : 29655767,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 66,
      "path" : "src/zmqports.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655767",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655781"
         }
      },
      "body" : "Fixed in upcoming commit",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T09:56:01Z",
      "diff_hunk" : "@@ -95,6 +97,12 @@ class CClientUIInterface\n \n     /** New block has been accepted */\n     boost::signals2::signal<void (const uint256& hash)> NotifyBlockTip;\n+\n+    /** New block has been accepted */\n+    boost::signals2::signal<void (const CBlock& block)> NotifyAcceptBlock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655781",
      "id" : 29655781,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 15,
      "path" : "src/ui_interface.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655781",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655814"
         }
      },
      "body" : "Fixed in upcoming commit",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T09:56:36Z",
      "diff_hunk" : "@@ -0,0 +1,175 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqports.h\"\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"version.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"ui_interface.h\"\n+#include \"json/json_spirit_value.h\"\n+\n+using namespace json_spirit;\n+using namespace std;\n+\n+// Global state\n+bool fZMQPub = false;\n+\n+#if ENABLE_ZMQ\n+\n+// ZMQ related file scope variables\n+static void *zmqContext;\n+static void *zmqPubSocket;\n+\n+// Internal utility functions\n+static void ZMQPublishBlock(const CBlock &blk);\n+static void ZMQPublishTransaction(const CTransaction &tx);\n+\n+static void zmqError(const char *str)\n+{\n+  LogPrint(\"ZMQ error: %s, errno=%s\\n\", str, zmq_strerror(errno));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29655814",
      "id" : 29655814,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 39,
      "path" : "src/zmqports.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29655814",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29657727"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29657727"
         }
      },
      "body" : "I believe this is the right way of getting a block.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T10:29:54Z",
      "diff_hunk" : "@@ -0,0 +1,183 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqports.h\"\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"version.h\"\n+#include \"main.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"ui_interface.h\"\n+#include \"json/json_spirit_value.h\"\n+\n+using namespace json_spirit;\n+using namespace std;\n+\n+// Global state\n+bool fZMQPub = false;\n+\n+#if ENABLE_ZMQ\n+\n+// ZMQ related file scope variables\n+static void *zmqContext;\n+static void *zmqPubSocket;\n+\n+// Internal utility functions\n+static void ZMQPublishBlock(const uint256 &hash);\n+static void ZMQPublishTransaction(const CTransaction &tx);\n+\n+static void zmqError(const char *str)\n+{\n+    LogPrint(\"ZMQ error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n+}\n+\n+// Called at startup to conditionally set up ZMQ socket(s)\n+void ZMQInitialize(const std::string &endp)\n+{\n+    zmqContext = zmq_init(1);\n+    if (!zmqContext) {\n+        zmqError(\"Unable to initialize ZMQ context\");\n+        return;\n+    }\n+\n+    zmqPubSocket = zmq_socket(zmqContext, ZMQ_PUB);\n+    if (!zmqPubSocket) {\n+        zmqError(\"Unable to open ZMQ pub socket\");\n+        return;\n+    }\n+\n+    int rc = zmq_bind(zmqPubSocket, endp.c_str());\n+    if (rc != 0) {\n+        zmqError(\"Unable to bind ZMQ socket\");\n+        zmq_close(zmqPubSocket);\n+        zmqPubSocket = 0;\n+        return;\n+    }\n+\n+    uiInterface.NotifyBlockTip.connect(ZMQPublishBlock);\n+    uiInterface.NotifyRelayTx.connect(ZMQPublishTransaction);\n+\n+    fZMQPub = true;\n+    LogPrint(\"zmq\", \"PUB socket listening at %s\\n\", endp);\n+}\n+\n+// Internal function to publish a serialized data stream on a given\n+// topic\n+//\n+// Note: assumes topic is a valid null terminated C string\n+static void zmqPublish(const char *topic, const CDataStream &ss)\n+{\n+    zmq_msg_t msg;\n+    const unsigned int topiclen = strlen(topic);\n+    const unsigned int msglen = ss.size() + topiclen;\n+\n+    // Initialize a new zmq_msg_t to hold serialized content\n+    int rc = zmq_msg_init_size(&msg, msglen);\n+    if (rc) {\n+        zmqError(\"Unable to initialize ZMQ msg\");\n+        return;\n+    }\n+\n+    // Copy topic and serialized TX into message buffer\n+    unsigned char *buf = (unsigned char *)zmq_msg_data(&msg);\n+    memcpy(&buf[0], topic, topiclen); // omits null trailer\n+    memcpy(&buf[topiclen], &ss[0], ss.size());\n+\n+    // Fire-and-forget\n+    rc = zmq_msg_send(&msg, zmqPubSocket, 0);\n+    if (rc == -1) {\n+        zmqError(\"Unable to send ZMQ message\");\n+        return;\n+    }\n+\n+    LogPrint(\"zmq\", \"Published to topic %s\\n\", topic);\n+}\n+\n+// Called after all transaction relay checks are completed\n+static void ZMQPublishTransaction(const CTransaction &tx)\n+{\n+    if (!zmqPubSocket)\n+        return;\n+\n+    // Serialize transaction\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    ss << tx;\n+\n+    zmqPublish(\"TXN\", ss);\n+}\n+\n+// Called after all block checks completed and successfully added to\n+// disk index\n+static void ZMQPublishBlock(const uint256 &hash)\n+{\n+    if (!zmqPubSocket)\n+        return;\n+\n+    CBlock blk;\n+    {\n+        LOCK(cs_main);\n+    \n+        CBlockIndex* pblockindex = mapBlockIndex[hash];\n+        if(!ReadBlockFromDisk(blk, pblockindex))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29657727",
      "id" : 29657727,
      "original_commit_id" : "8e9ff5c88de98aeb2e7cc0310f40693253d5f607",
      "original_position" : 130,
      "path" : "src/zmqports.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29657727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "I'm planning to add the option -zmqformat=raw|json. This way a subscriber doesn't need to rely on 3rd libs to process the messages. What do you think?\r\nPending on #6108",
      "created_at" : "2015-05-05T10:37:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99028978",
      "id" : 99028978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T11:14:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99028978",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29660299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29660299"
         }
      },
      "body" : "I didn't say it has to be removed. I just don't see a usecase for this. Maybe @jgarzik can roll this up?",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T11:21:33Z",
      "diff_hunk" : "@@ -282,6 +282,9 @@ static const CRPCCommand vRPCCommands[] =\n     { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n     { \"network\",            \"ping\",                   &ping,                   true  },\n \n+    /* ZMQ notification */\n+    { \"zmq\",                \"getzmqurl\",              &getzmqurl,              true  },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29660299",
      "id" : 29660299,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 5,
      "path" : "src/rpcserver.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29660299",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29660573"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29660573"
         }
      },
      "body" : "Is the reason why the `#ifdefs` are here instead of wrapping the code-part in `init.cpp` to lower the #ifdef in `init.cpp`? Maybe also something for @jgarzik to answer.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T11:28:05Z",
      "diff_hunk" : "@@ -0,0 +1,26 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQPORTS_H\n+#define BITCOIN_ZMQPORTS_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include <string>\n+\n+// Global state\n+extern bool fZMQPub;\n+\n+#if ENABLE_ZMQ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29660573",
      "id" : 29660573,
      "original_commit_id" : "a268d1cfc0a5e5631b8e60723155fbaa79fcc9de",
      "original_position" : 18,
      "path" : "src/zmqports.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29660573",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29661012"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29661012"
         }
      },
      "body" : "FYI https://github.com/bitcoin/bitcoin/pull/4594#issuecomment-50352710",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T11:37:06Z",
      "diff_hunk" : "@@ -0,0 +1,26 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQPORTS_H\n+#define BITCOIN_ZMQPORTS_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include <string>\n+\n+// Global state\n+extern bool fZMQPub;\n+\n+#if ENABLE_ZMQ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29661012",
      "id" : 29661012,
      "original_commit_id" : "a268d1cfc0a5e5631b8e60723155fbaa79fcc9de",
      "original_position" : 18,
      "path" : "src/zmqports.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29661012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "Would be nice if you could cherry-pick / pull-in this RPC/ZMQ test case:\r\nhttps://github.com/jonasschnelli/bitcoin/commit/91334e70ee5b2713ebbb7d5dbd6a5a29936aba66",
      "created_at" : "2015-05-05T11:40:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99052323",
      "id" : 99052323,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T11:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99052323",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29661290"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29661290"
         }
      },
      "body" : "@promag: Thanks. Yes this makes sense.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T11:42:19Z",
      "diff_hunk" : "@@ -0,0 +1,26 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQPORTS_H\n+#define BITCOIN_ZMQPORTS_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include <string>\n+\n+// Global state\n+extern bool fZMQPub;\n+\n+#if ENABLE_ZMQ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29661290",
      "id" : 29661290,
      "original_commit_id" : "a268d1cfc0a5e5631b8e60723155fbaa79fcc9de",
      "original_position" : 18,
      "path" : "src/zmqports.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29661290",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29661313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29661313"
         }
      },
      "body" : "Or maybe something for @jmcorgan",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T11:42:49Z",
      "diff_hunk" : "@@ -282,6 +282,9 @@ static const CRPCCommand vRPCCommands[] =\n     { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n     { \"network\",            \"ping\",                   &ping,                   true  },\n \n+    /* ZMQ notification */\n+    { \"zmq\",                \"getzmqurl\",              &getzmqurl,              true  },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29661313",
      "id" : 29661313,
      "original_commit_id" : "77ecbe3e0187e52a00255349328d6457508eb8d0",
      "original_position" : 5,
      "path" : "src/rpcserver.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29661313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29661529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29661529"
         }
      },
      "body" : "typo: should be `ZMQInitialize(mapArgs[\"-zmqpub\"]);` (mind the dash)",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T11:47:33Z",
      "diff_hunk" : "@@ -1022,6 +1029,11 @@ bool AppInit2(boost::thread_group& threadGroup)\n     BOOST_FOREACH(string strDest, mapMultiArgs[\"-seednode\"])\n         AddOneShot(strDest);\n \n+    if (mapArgs.count(\"-zmqpub\"))\n+    {\n+        ZMQInitialize(mapArgs[\"zmqpub\"]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29661529",
      "id" : 29661529,
      "original_commit_id" : "a268d1cfc0a5e5631b8e60723155fbaa79fcc9de",
      "original_position" : 34,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29661529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@promag: I would not add JSON support and keep ZMQ as clean and low-level as possible. Keeping it bin only can make things faster and with JSON there is always a risks of things get handled different during enc-/decoding of JSON streams depending on the library you use.",
      "created_at" : "2015-05-05T12:03:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99060018",
      "id" : 99060018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T12:03:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99060018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Tested reviewed leak-checked ACK.\r\nnits: usage of `uiInterface` as \"signal layer\"",
      "created_at" : "2015-05-05T12:07:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99061930",
      "id" : 99061930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T12:07:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99061930",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29663747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29663747"
         }
      },
      "body" : "nit: L128 has whitespace.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T12:32:00Z",
      "diff_hunk" : "@@ -0,0 +1,164 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqports.h\"\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"version.h\"\n+#include \"main.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"ui_interface.h\"\n+#include \"json/json_spirit_value.h\"\n+\n+using namespace json_spirit;\n+using namespace std;\n+\n+// Global state\n+bool fZMQPub = false;\n+\n+#if ENABLE_ZMQ\n+\n+// ZMQ related file scope variables\n+static void *zmqContext;\n+static void *zmqPubSocket;\n+\n+// Internal utility functions\n+static void ZMQPublishBlock(const uint256 &hash);\n+static void ZMQPublishTransaction(const CTransaction &tx);\n+\n+static void zmqError(const char *str)\n+{\n+    LogPrint(\"ZMQ error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n+}\n+\n+// Called at startup to conditionally set up ZMQ socket(s)\n+void ZMQInitialize(const std::string &endp)\n+{\n+    zmqContext = zmq_init(1);\n+    if (!zmqContext) {\n+        zmqError(\"Unable to initialize ZMQ context\");\n+        return;\n+    }\n+\n+    zmqPubSocket = zmq_socket(zmqContext, ZMQ_PUB);\n+    if (!zmqPubSocket) {\n+        zmqError(\"Unable to open ZMQ pub socket\");\n+        return;\n+    }\n+\n+    int rc = zmq_bind(zmqPubSocket, endp.c_str());\n+    if (rc != 0) {\n+        zmqError(\"Unable to bind ZMQ socket\");\n+        zmq_close(zmqPubSocket);\n+        zmqPubSocket = 0;\n+        return;\n+    }\n+\n+    uiInterface.NotifyBlockTip.connect(ZMQPublishBlock);\n+    uiInterface.NotifyRelayTx.connect(ZMQPublishTransaction);\n+\n+    fZMQPub = true;\n+    LogPrint(\"zmq\", \"PUB socket listening at %s\\n\", endp);\n+}\n+\n+// Internal function to publish a serialized data stream on a given\n+// topic\n+//\n+// Note: assumes topic is a valid null terminated C string\n+static void zmqPublish(const char *topic, const CDataStream &ss)\n+{\n+    zmq_msg_t msg;\n+    const unsigned int topiclen = strlen(topic);\n+    const unsigned int msglen = ss.size() + topiclen;\n+\n+    // Initialize a new zmq_msg_t to hold serialized content\n+    int rc = zmq_msg_init_size(&msg, msglen);\n+    if (rc) {\n+        zmqError(\"Unable to initialize ZMQ msg\");\n+        return;\n+    }\n+\n+    // Copy topic and serialized TX into message buffer\n+    unsigned char *buf = (unsigned char *)zmq_msg_data(&msg);\n+    memcpy(&buf[0], topic, topiclen); // omits null trailer\n+    memcpy(&buf[topiclen], &ss[0], ss.size());\n+\n+    // Fire-and-forget\n+    rc = zmq_msg_send(&msg, zmqPubSocket, 0);\n+    if (rc == -1) {\n+        zmqError(\"Unable to send ZMQ message\");\n+        return;\n+    }\n+\n+    LogPrint(\"zmq\", \"Published to topic %s\\n\", topic);\n+}\n+\n+// Called after all transaction relay checks are completed\n+static void ZMQPublishTransaction(const CTransaction &tx)\n+{\n+    if (!zmqPubSocket)\n+        return;\n+\n+    // Serialize transaction\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    ss << tx;\n+\n+    zmqPublish(\"TXN\", ss);\n+}\n+\n+// Called after all block checks completed and successfully added to\n+// disk index\n+static void ZMQPublishBlock(const uint256 &hash)\n+{\n+    if (!zmqPubSocket)\n+        return;\n+\n+    CBlock blk;\n+    {\n+        LOCK(cs_main);\n+    ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29663747",
      "id" : 29663747,
      "original_commit_id" : "3f4f2b098605632d7ff1265f185cdb9862563a5c",
      "original_position" : 128,
      "path" : "src/zmqports.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29663747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "nit:\r\nsignaling disconnect is missing\r\n\r\n```diff\r\ndiff --git a/src/zmqports.cpp b/src/zmqports.cpp\r\nindex d083292..bd1229c 100644\r\n--- a/src/zmqports.cpp\r\n+++ b/src/zmqports.cpp\r\n@@ -155,6 +155,9 @@ void ZMQShutdown()\r\n \r\n         zmq_ctx_destroy(zmqContext);\r\n         zmqContext = 0;\r\n+\r\n+        uiInterface.NotifyBlockTip.disconnect(ZMQPublishBlock);\r\n+        uiInterface.NotifyRelayTx.disconnect(ZMQPublishTransaction);\r\n     }\r\n \r\n     fZMQPub = false;\r\n```",
      "created_at" : "2015-05-05T12:39:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99067391",
      "id" : 99067391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T12:39:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99067391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli Regarding the output formats, I don't think having JSON is that bad, it is just an option.\r\nActually I think we could support 3 formats for now:\r\n - network: currently supported\r\n - json: needs BlockToUni to convert to JSON (similar to RPC getblock)\r\n - hash: just send the block hash or txid (this allows a subscriber to queue the notification to process it later)",
      "created_at" : "2015-05-05T13:15:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99074984",
      "id" : 99074984,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T13:31:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99074984",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@promag I agree with 1 (p2p) and 3 (hash). IMO the ZMQ interface is a push/notify interface (for now). If someone like to get JSON output he could do a RPC request with received data. Adding JSON format over ZMQ level would just encourage user \"to go the wrong way\".\r\nAdding a way of only receiving hashes over ZMQ would be good.\r\nBut i'm ready to hear other opinions.",
      "created_at" : "2015-05-05T13:21:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99076113",
      "id" : 99076113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T13:21:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99076113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Specifically for blocks, I'm not sure that pushing full blocks is even useful, unless we make it push all new blocks (including intermediary reorged ones). The interesting information is \"there is a new block chain tip, and this is it\".",
      "created_at" : "2015-05-05T13:23:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99076584",
      "id" : 99076584,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T13:23:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99076584",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa consider the following use case: a subscriber wants to know if there are transactions (in the new block chain tip) with outputs targeting a set of addresses.",
      "created_at" : "2015-05-05T13:27:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99077359",
      "id" : 99077359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T13:27:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99077359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "I'm not sure if publishing a block of 20MB is problematic.",
      "created_at" : "2015-05-05T13:37:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99079734",
      "id" : 99079734,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T13:37:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99079734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "That use case would not be covered, as the current code only reports the\nnew tip, not potential intermediate blocks that were connected as part of a\nreorganization.\n\nA possibility is reporting all new chain blocks, but what if this (due to a\nfork bug, perhaps) ends up reporting 100s of megabytes?\n",
      "created_at" : "2015-05-05T13:52:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99083743",
      "id" : 99083743,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T13:52:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99083743",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa right, so publishing the new tip hash and having the consumer walk the block chain would be more appropriate/secure.",
      "created_at" : "2015-05-05T13:54:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99084210",
      "id" : 99084210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T13:54:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99084210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "For now i see the ZMQ extension as a notification-only one-way interface. I guess it's more optimized if a user gets informed about a new block **hash** (or new mempool tx **hash**) and then he decides if he likes to load the block with or without tx details over REST or RPC.",
      "created_at" : "2015-05-05T13:59:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99085599",
      "id" : 99085599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T13:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99085599",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Agree on network binary format and hash format? Other publish strategies can be discussed later after this PR.",
      "created_at" : "2015-05-05T14:04:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99086882",
      "id" : 99086882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T14:04:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99086882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@promag: i think you need to get rid of commit 454285518915d73e55674cf702bd0372a2da266e",
      "created_at" : "2015-05-05T14:05:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99087164",
      "id" : 99087164,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T14:05:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99087164",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@jonasschnelli rebased\r\nmissing updated doc and test to reflect multipart message",
      "created_at" : "2015-05-05T14:31:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99095760",
      "id" : 99095760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T14:31:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99095760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "Should we use CValidationInterface instead of CClientUIInterface?",
      "created_at" : "2015-05-05T14:39:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99098817",
      "id" : 99098817,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T14:39:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99098817",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "Yes.\n",
      "created_at" : "2015-05-05T14:45:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99100905",
      "id" : 99100905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T14:45:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99100905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Pending questions:\r\n 1. support network binary format and hash format?\r\n 2. class name CZMQPublisher : public CValidationInterface?\r\n 3. use CValidationInterface::SetBestChain instead of CClientUIInterface::NotifyBlockTip?",
      "created_at" : "2015-05-05T15:57:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99123650",
      "id" : 99123650,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T15:57:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99123650",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "1. Hash is enough for me. Binary makes sense if we make sure the full set of newly accepted blocks is announced.\r\n\r\n2. Sounds good.\r\n\r\n3. SetBestChain won't work, as it is only called after the best chain on disk is changed (which is infrequently). I'll write a patch to add the signals you need to CValidationInterface.",
      "created_at" : "2015-05-05T16:00:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99124284",
      "id" : 99124284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T16:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99124284",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa At the moment CValidationInterface is very related to CWallet, but it shouldn't right?",
      "created_at" : "2015-05-05T16:03:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99125552",
      "id" : 99125552,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T16:03:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99125552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@promag It used to be called CWalletInterface. We renamed it because it shouldn't be used exclusively for wallets.",
      "created_at" : "2015-05-05T16:03:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99125730",
      "id" : 99125730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T16:03:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99125730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29690327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29690327"
         }
      },
      "body" : "waiting @sipa patch, for now assuming UpdatedBlockTip exists in CValidationInterface.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T17:12:25Z",
      "diff_hunk" : "@@ -0,0 +1,39 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQPORTS_H\n+#define BITCOIN_ZMQPORTS_H\n+\n+#include \"validationinterface.h\"\n+#include <string>\n+\n+class CZMQPublisher : public CValidationInterface\n+{\n+public:\n+    enum Format\n+    {\n+        HashFormat,\n+        NetworkFormat\n+    };\n+  \n+    CZMQPublisher();\n+    virtual ~CZMQPublisher();\n+\n+    void Initialize(const std::string &endpoint, Format format);\n+    void Shutdown();\n+\n+protected: // CValidationInterface\n+    void SyncTransaction(const CTransaction &tx, const CBlock *pblock);\n+    void UpdatedBlockTip(const CBlock &block);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29690327",
      "id" : 29690327,
      "original_commit_id" : "12cefe533ed2d9a98bac8a8084bd1a46fa765f59",
      "original_position" : 29,
      "path" : "src/zmqports.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29690327",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29690371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29690371"
         }
      },
      "body" : "Not sure if this is OK or NETWORK_FORMAT. Same for HashFormat.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T17:13:06Z",
      "diff_hunk" : "@@ -0,0 +1,39 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ZMQPORTS_H\n+#define BITCOIN_ZMQPORTS_H\n+\n+#include \"validationinterface.h\"\n+#include <string>\n+\n+class CZMQPublisher : public CValidationInterface\n+{\n+public:\n+    enum Format\n+    {\n+        HashFormat,\n+        NetworkFormat",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29690371",
      "id" : 29690371,
      "original_commit_id" : "12cefe533ed2d9a98bac8a8084bd1a46fa765f59",
      "original_position" : 18,
      "path" : "src/zmqports.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29690371",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29690427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29690427"
         }
      },
      "body" : "@jonasschnelli is this OK?",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T17:13:45Z",
      "diff_hunk" : "@@ -0,0 +1,195 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqports.h\"\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"version.h\"\n+#include \"main.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"ui_interface.h\"\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+\n+// Internal utility functions\n+static void zmqError(const char *str)\n+{\n+    LogPrint(\"zmq\", \"Error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n+}\n+#endif\n+\n+CZMQPublisher::CZMQPublisher()\n+    : pcontext(NULL)\n+    , psocket(NULL)\n+    , format(HashFormat)\n+{\n+}\n+\n+CZMQPublisher::~CZMQPublisher()\n+{\n+    // ensure Shutdown if Initialize is called\n+    assert(!pcontext);\n+    assert(!psocket);\n+}\n+\n+// Called at startup to conditionally set up ZMQ socket(s)\n+void CZMQPublisher::Initialize(const std::string &endpoint, CZMQPublisher::Format fmt)\n+{\n+#if ENABLE_ZMQ\n+    assert(!pcontext);\n+    assert(!psocket);\n+\n+    pcontext = zmq_init(1);\n+    if (!pcontext)\n+    {\n+        zmqError(\"Unable to initialize ZMQ context\");\n+        return;\n+    }\n+\n+    psocket = zmq_socket(pcontext, ZMQ_PUB);\n+    if (!psocket)\n+    {\n+        zmqError(\"Unable to open ZMQ pub socket\");\n+        zmq_ctx_destroy(pcontext);\n+        pcontext = 0;\n+        return;\n+    }\n+\n+    int rc = zmq_bind(psocket, endpoint.c_str());\n+    if (rc != 0) \n+    {\n+        zmqError(\"Unable to bind ZMQ socket\");\n+        zmq_close(psocket);\n+        zmq_ctx_destroy(pcontext);\n+        psocket = 0;\n+        pcontext = 0;\n+        return;\n+    }\n+\n+    format = fmt;\n+    LogPrint(\"zmq\", \"PUB socket listening at %s\\n\", endpoint);\n+#endif\n+}\n+\n+// Called during shutdown sequence\n+void CZMQPublisher::Shutdown()\n+{\n+#if ENABLE_ZMQ\n+    if(psocket)\n+    {\n+        int linger = 0;\n+        zmq_setsockopt(psocket, ZMQ_LINGER, &linger, sizeof(linger));\n+        zmq_close(psocket);\n+        psocket = 0;\n+\n+        zmq_ctx_destroy(pcontext);\n+        pcontext = 0;\n+    }\n+#endif\n+}\n+\n+\n+// Internal function to pack a zmq_msg_t and send it\n+// Note: assumes topic is a valid null terminated C string\n+int CZMQPublisher::Publish(const void* data, size_t size, int flags)\n+{\n+#if ENABLE_ZMQ\n+    zmq_msg_t msg;\n+    \n+    int rc = zmq_msg_init_size(&msg, size);\n+    if (rc != 0)\n+    {\n+        zmqError(\"Unable to initialize ZMQ msg\");\n+        return -1;\n+    }\n+\n+    void *buf = zmq_msg_data(&msg);\n+    memcpy(buf, data, size);\n+\n+    rc = zmq_msg_send(&msg, psocket, flags);\n+    if (rc == -1)\n+    {\n+        zmqError(\"Unable to send ZMQ msg\");\n+        return -1;\n+    }\n+\n+    zmq_msg_close(&msg);\n+#endif\n+    return 0;\n+}\n+\n+void CZMQPublisher::SyncTransaction(const CTransaction &tx, const CBlock *pblock)\n+{\n+#if ENABLE_ZMQ\n+    if (!psocket)\n+        return;\n+\n+    if (format==HashFormat)\n+    {\n+        uint256 hash = tx.GetHash();\n+        int rc = Publish(\"TXN\", 3, ZMQ_SNDMORE);\n+        if (rc==0)\n+            Publish(hash.begin(), hash.size(), 0);\n+    }\n+    else if (format==NetworkFormat)\n+    {\n+        // Serialize transaction\n+        CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+        ss << tx;\n+    \n+        // Send multipart message\n+        int rc = Publish(\"TXN\", 3, ZMQ_SNDMORE);\n+        if (rc==0)\n+            Publish(&ss[0], ss.size(), 0);\n+    }\n+#endif\n+}\n+\n+// Called after the block chain tip changed\n+void CZMQPublisher::UpdatedBlockTip(const CBlock &block)\n+{\n+    if (!psocket)\n+        return;\n+\n+    if (format==HashFormat)\n+    {\n+        uint256 hash = block.GetHash();\n+\n+        // Send multipart message\n+        int rc = Publish(\"BLK\", 3, ZMQ_SNDMORE);\n+        if (rc==0)\n+            Publish(hash.begin(), hash.size(), 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29690427",
      "id" : 29690427,
      "original_commit_id" : "12cefe533ed2d9a98bac8a8084bd1a46fa765f59",
      "original_position" : 171,
      "path" : "src/zmqports.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29690427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "Later will address https://github.com/bitcoin/bitcoin/pull/5303#discussion-diff-26264618",
      "created_at" : "2015-05-05T17:44:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99155906",
      "id" : 99155906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T17:45:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99155906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29699244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29699244"
         }
      },
      "body" : "LGTM.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-05T18:41:59Z",
      "diff_hunk" : "@@ -0,0 +1,195 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"zmqports.h\"\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"version.h\"\n+#include \"main.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"netbase.h\"\n+#include \"ui_interface.h\"\n+\n+#if ENABLE_ZMQ\n+#include <zmq.h>\n+\n+// Internal utility functions\n+static void zmqError(const char *str)\n+{\n+    LogPrint(\"zmq\", \"Error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n+}\n+#endif\n+\n+CZMQPublisher::CZMQPublisher()\n+    : pcontext(NULL)\n+    , psocket(NULL)\n+    , format(HashFormat)\n+{\n+}\n+\n+CZMQPublisher::~CZMQPublisher()\n+{\n+    // ensure Shutdown if Initialize is called\n+    assert(!pcontext);\n+    assert(!psocket);\n+}\n+\n+// Called at startup to conditionally set up ZMQ socket(s)\n+void CZMQPublisher::Initialize(const std::string &endpoint, CZMQPublisher::Format fmt)\n+{\n+#if ENABLE_ZMQ\n+    assert(!pcontext);\n+    assert(!psocket);\n+\n+    pcontext = zmq_init(1);\n+    if (!pcontext)\n+    {\n+        zmqError(\"Unable to initialize ZMQ context\");\n+        return;\n+    }\n+\n+    psocket = zmq_socket(pcontext, ZMQ_PUB);\n+    if (!psocket)\n+    {\n+        zmqError(\"Unable to open ZMQ pub socket\");\n+        zmq_ctx_destroy(pcontext);\n+        pcontext = 0;\n+        return;\n+    }\n+\n+    int rc = zmq_bind(psocket, endpoint.c_str());\n+    if (rc != 0) \n+    {\n+        zmqError(\"Unable to bind ZMQ socket\");\n+        zmq_close(psocket);\n+        zmq_ctx_destroy(pcontext);\n+        psocket = 0;\n+        pcontext = 0;\n+        return;\n+    }\n+\n+    format = fmt;\n+    LogPrint(\"zmq\", \"PUB socket listening at %s\\n\", endpoint);\n+#endif\n+}\n+\n+// Called during shutdown sequence\n+void CZMQPublisher::Shutdown()\n+{\n+#if ENABLE_ZMQ\n+    if(psocket)\n+    {\n+        int linger = 0;\n+        zmq_setsockopt(psocket, ZMQ_LINGER, &linger, sizeof(linger));\n+        zmq_close(psocket);\n+        psocket = 0;\n+\n+        zmq_ctx_destroy(pcontext);\n+        pcontext = 0;\n+    }\n+#endif\n+}\n+\n+\n+// Internal function to pack a zmq_msg_t and send it\n+// Note: assumes topic is a valid null terminated C string\n+int CZMQPublisher::Publish(const void* data, size_t size, int flags)\n+{\n+#if ENABLE_ZMQ\n+    zmq_msg_t msg;\n+    \n+    int rc = zmq_msg_init_size(&msg, size);\n+    if (rc != 0)\n+    {\n+        zmqError(\"Unable to initialize ZMQ msg\");\n+        return -1;\n+    }\n+\n+    void *buf = zmq_msg_data(&msg);\n+    memcpy(buf, data, size);\n+\n+    rc = zmq_msg_send(&msg, psocket, flags);\n+    if (rc == -1)\n+    {\n+        zmqError(\"Unable to send ZMQ msg\");\n+        return -1;\n+    }\n+\n+    zmq_msg_close(&msg);\n+#endif\n+    return 0;\n+}\n+\n+void CZMQPublisher::SyncTransaction(const CTransaction &tx, const CBlock *pblock)\n+{\n+#if ENABLE_ZMQ\n+    if (!psocket)\n+        return;\n+\n+    if (format==HashFormat)\n+    {\n+        uint256 hash = tx.GetHash();\n+        int rc = Publish(\"TXN\", 3, ZMQ_SNDMORE);\n+        if (rc==0)\n+            Publish(hash.begin(), hash.size(), 0);\n+    }\n+    else if (format==NetworkFormat)\n+    {\n+        // Serialize transaction\n+        CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+        ss << tx;\n+    \n+        // Send multipart message\n+        int rc = Publish(\"TXN\", 3, ZMQ_SNDMORE);\n+        if (rc==0)\n+            Publish(&ss[0], ss.size(), 0);\n+    }\n+#endif\n+}\n+\n+// Called after the block chain tip changed\n+void CZMQPublisher::UpdatedBlockTip(const CBlock &block)\n+{\n+    if (!psocket)\n+        return;\n+\n+    if (format==HashFormat)\n+    {\n+        uint256 hash = block.GetHash();\n+\n+        // Send multipart message\n+        int rc = Publish(\"BLK\", 3, ZMQ_SNDMORE);\n+        if (rc==0)\n+            Publish(hash.begin(), hash.size(), 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r29699244",
      "id" : 29699244,
      "original_commit_id" : "12cefe533ed2d9a98bac8a8084bd1a46fa765f59",
      "original_position" : 171,
      "path" : "src/zmqports.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29699244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Will do additional tests when `UpdatedBlockTip` is ready.",
      "created_at" : "2015-05-05T18:42:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99175489",
      "id" : 99175489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T18:42:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99175489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "It seems Travis is not building with zeromq. Can this be addressed?",
      "created_at" : "2015-05-05T21:29:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99228868",
      "id" : 99228868,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-05T21:29:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99228868",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@promag Yes. You'll need to add the dependency. You can pull this commit: https://github.com/theuni/bitcoin/commit/3661302abfca852a871b8b3cb406d5d10dfc33ae to get travis to test.\r\nEdit: Updated version: https://github.com/theuni/bitcoin/commit/eda02cf35626a6bc988aa9bd6df217df2a23c7ae\r\n\r\nNote, however, that the windows build currently fails because zeromq refuses to static-link with mingw. I chose to leave this broken rather than disabling the windows build because we'll have to come up with a plan, even if it's just to explicitly disable it there.",
      "created_at" : "2015-05-06T00:33:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99272898",
      "id" : 99272898,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-06T02:55:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99272898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@sipa if you like I can add the new signal to CValidationInterface. I suppose I can emit it before the NotifyBlockTip.",
      "created_at" : "2015-05-06T09:09:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99391865",
      "id" : 99391865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-06T09:09:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99391865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@theuni BTW why static linking? and why not dynamic linking on travis because of http://docs.travis-ci.com/user/ci-environment/#Messaging-Technology",
      "created_at" : "2015-05-06T10:07:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99405316",
      "id" : 99405316,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-06T10:07:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99405316",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@promag Travis builds exactly as we build for release. The current build failure means that we wouldn't be able to package zeromq into a windows binary. Until that's fixed, failing is the right thing to do imo. The question is: is it worth it to try to work around their mingw situation, or just disable it for windows.",
      "created_at" : "2015-05-06T17:41:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99548504",
      "id" : 99548504,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-06T17:41:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99548504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "Having ZMQ for windows as well would be nice in near future. With ZMQ we could place a (daemon)script into the /contrib folder and deprecate the -notify features. IIRC there where serval issues with the -notify commands on windows.\r\n\r\n@promag: I think it would be nice if you could complete this and try to add the new signal to `CValidationInterface()`",
      "created_at" : "2015-05-07T06:47:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-99744736",
      "id" : 99744736,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-07T06:47:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/99744736",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "@theuni should we disable zmq in windows?\r\nping @sipa ",
      "created_at" : "2015-05-18T14:44:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-103083194",
      "id" : 103083194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-18T14:44:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/103083194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r30613243"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30613243"
         }
      },
      "body" : "s/-zmqformat=hash|network**>**/-zmqformat=**<**hash|network**>**/",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-05-19T15:44:04Z",
      "diff_hunk" : "@@ -345,6 +357,10 @@ std::string HelpMessage(HelpMessageMode mode)\n                     \n #endif\n \n+    strUsage += HelpMessageGroup(_(\"ZeroMQ publisher options\"));\n+    strUsage += HelpMessageOpt(\"-zmqpub=<endpoint>\",_(\"Publish blocks and transactions on 'endpoint'\"));\n+    strUsage += HelpMessageOpt(\"-zmqformat=hash|network>\",_(\"Publish format is either hash (default) or network\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r30613243",
      "id" : 30613243,
      "original_commit_id" : "ac4f864bab954d0447dde6bc91574c0b8a2e20fb",
      "original_position" : 39,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T16:07:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30613243",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Disabled zeromq in windows because zmq fails to build as a static lib in mingw.",
      "created_at" : "2015-05-20T15:41:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-103931954",
      "id" : 103931954,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-20T15:41:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/103931954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "utACK",
      "created_at" : "2015-05-22T06:32:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-104537176",
      "id" : 104537176,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-22T06:32:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/104537176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Why not publish both formats and let clients choose which to subscribe to?",
      "created_at" : "2015-05-23T20:03:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-104940082",
      "id" : 104940082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-23T20:03:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/104940082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@promag That only disables the windows build for travis, not for anyone actually building for windows.\r\n\r\nPlease instead use something like:\r\n```\r\npackages:=boost openssl\r\npackages_darwin:=zeromq\r\npackages_linux:=zeromq\r\n```\r\n\r\nPlease also document the fact that it's unusable for Windows due to upstream build issues.",
      "created_at" : "2015-05-23T21:41:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-104946990",
      "id" : 104946990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-23T21:41:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/104946990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@luke-jr you mean one address per format?\r\n@theuni right, will do.",
      "created_at" : "2015-05-23T22:13:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-104950869",
      "id" : 104950869,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-23T22:13:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/104950869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@promag I mean using ZeroMQ's topics so clients can filter which they want.",
      "created_at" : "2015-05-23T23:26:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-104954799",
      "id" : 104954799,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-23T23:26:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/104954799",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@luke-jr Actually I was thinking removing the option to publish the entire transaction/block. The block will have a maximum size of 20mb. And writing all formats to the socket sequentially can cause some lag each time there is a new block. Also, at the moment, writing to the socket happens in the main thread, and the publisher should be as fast as possible.\r\n\r\nAt the moment we use the hash format, and the hash is enqueued in a persistent/reliable queue so that it can be processed later on a easy pace. Then the RPC interface is used to get more details about it. We think the load of bitcoind is much lower than publishing the entire data.",
      "created_at" : "2015-05-25T08:52:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-105170976",
      "id" : 105170976,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-25T08:52:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/105170976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "In fact, apart from several formats and topics for PUB, we could allow the option of using either PUB or PUSH instead of forcing it to be PUB?\r\nPUSH should be much faster than PUB, for big things like blocks (both with 1 MB and 20 MB blocks, which is something completely orthogonal to this PR).\r\n\r\nEDIT: I think the option for a topic could be useful for smaller things like transactions, for example, and there's no reason not to make it generic just because that option may be slow for blocks.\r\nIn fact, since you should be able to configure each event independently, so I think we should have a block publisher/pusher option and an analogous one for transactions.\r\n\r\nThis way you could, for example, configure a topic-based publisher for transactions and a simple pusher for blocks (or the opposite, push both: any combination).\r\n",
      "created_at" : "2015-05-28T16:01:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-106444601",
      "id" : 106444601,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-28T16:15:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/106444601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon IMHO this notification mechanism should be as simple as possible. Just publishing the event/hash is enough for the downstream to make RPC calls to get more information about blocks/transactions, including computed data which is not in the raw data, for instance, confirmations etc.\r\n\r\nIn our use case we tried to avoid RPC calls upstream, but ended giving up because we didn't want to miss the blockchain maintenance of bitcoind, ie, handling forks, double spends, etc. So, with this notifications we just avoid notify-* scripts and RPC polling.\r\n\r\nMoreover, I would never send the raw data, because it is too much and requires the downstream to \"know\" how to parse the raw data. Handling JSON RPC is much easier.\r\n\r\nRegarding the socket type, I wouldn't choose a socket where the send operation is blocking as this could lead to, either internal queue in a separate thread, or making bitcoind malfunction. Therefore, IIRC PUB/SUB is the only type that has non-blocking send.",
      "created_at" : "2015-05-29T09:01:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-106750622",
      "id" : 106750622,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-29T09:01:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/106750622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "> @jtimon IMHO this notification mechanism should be as simple as possible. \r\n\r\nIMO it should be as flexible as possible. That's what I love most about zmq, anyway.\r\n\r\n> In our use case we tried to avoid RPC calls upstream, but ended giving up because we didn't want to miss the blockchain maintenance of bitcoind, ie, handling forks, double spends, etc. So, with this notifications we just avoid notify-* scripts and RPC polling.\r\n\r\nThat's seems good for your use case. Other uses of zmq could be to precisely replace rpc calls (although we're not supporting REQ/REP in this PR and that's fine). Remember that RPCs also take locks and all that. Anyway, please don't assume that everybody wants to use the zmq integration in the same way you do.\r\n\r\n> Moreover, I would never send the raw data, because it is too much and requires the downstream to \"know\" how to parse the raw data. Handling JSON RPC is much easier.\r\n\r\nZmq also supports json, but I can see some potential consumers preferring raw data.\r\n\r\n> Regarding the socket type, I wouldn't choose a socket where the send operation is blocking as this could lead to, either internal queue in a separate thread, or making bitcoind malfunction. Therefore, IIRC PUB/SUB is the only type that has non-blocking send.\r\n\r\nI didn't know that PULL/PUSH was blocking, but doesn't make much sense to me. Then why wouldn't people just use a PUB/SUB with a single subscriber that then pushes to another sockets (to avoid making the original send blocking)?\r\nCan you link me to the zmq documentation that says PUSH sends are blocking but PUB are not?\r\nEven if that's the case, it may be worth it for some use cases.\r\n\r\nAnyway, your arguments for not supporting topics in PUB/SUB (as Luke-Jr proposes) seem invalid to me, specially if you were assuming that only hashes will be sent.\r\n",
      "created_at" : "2015-05-29T10:06:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-106763520",
      "id" : 106763520,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-29T10:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/106763520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon From http://api.zeromq.org/4-0:zmq-socket\r\n\r\n> When a ZMQ_PUSH socket enters the mute state due to having reached the high water mark for all downstream nodes, or if there are no downstream nodes at all, then any zmq_send(3) operations on the socket shall block until the mute state ends or at least one downstream node becomes available for sending; messages are not discarded.\r\n",
      "created_at" : "2015-05-29T10:25:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-106767109",
      "id" : 106767109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-29T10:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/106767109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "IMHO the true purpose of this PR is to eventually avoid/deprecate notify scripts. It should provide the CValidationInterface signals to the outside world. I agree with all that flexibility/options but for me it is out of scope of this PR.",
      "created_at" : "2015-05-29T10:45:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-106771184",
      "id" : 106771184,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-29T10:45:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/106771184",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "Oh I see, of course, push is blocking when you don't have ready pullers...that has a simple solution: have pullers. That's a problem for the user to solve. IMO not a good reason not to support PUSH ( which is so similar to PUB in all other things).\r\n\r\nAbout the scope of this PR, sure, this doesn't have to do everything, but for example supporting PUB/SUB topics definitely seems within scope.\r\n\r\nIf we're going to leave pushers for later, that's fine, sunce we want a different option to activate it anyway. Still, the current options could indicate that this is for PUB explicitly, for the options to be more clear when/if we add PUSH (or even REP) later. Also, one should be able to configure the transactions and  locks events independently.",
      "created_at" : "2015-05-29T11:22:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-106778056",
      "id" : 106778056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-29T11:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/106778056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "So in summary, I would separate zmqpub into zmqpubtx and zmqpubblock or something similar, and I would add support for topics, everything else can be left for later.",
      "created_at" : "2015-05-29T11:26:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-106778450",
      "id" : 106778450,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-29T11:26:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/106778450",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "What you mean by zmqpubtx and zmqpubblock? Two pub sockets binded to different addresses?",
      "created_at" : "2015-05-29T11:49:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-106781668",
      "id" : 106781668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-29T11:49:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/106781668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "On Fri, May 29, 2015 at 2:02 AM, JoÃÂ£o Barbosa <notifications@github.com>\nwrote:\n\n> Regarding the socket type, I wouldn't choose a socket where the send\n> operation is blocking as this could lead to, either internal queue in a\n> separate thread, or making bitcoind malfunction. Therefore, IIRC PUB/SUB is\n> the only type that has non-blocking send.\n>\n\nThis is precisely the reason PUB was chosen when I originally implemented\nthis.\n\n-- \nJohnathan Corgan\nCorgan Labs - SDR Training and Development Services\nIntro to SDR Classes - June 4-5, Columbia MD, June 29-30, El Segundo, CA\nhttp://corganlabs.com\n",
      "created_at" : "2015-05-29T16:24:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-106863530",
      "id" : 106863530,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-29T16:24:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/106863530",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1492956?v=3",
         "events_url" : "https://api.github.com/users/jmcorgan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jmcorgan/followers",
         "following_url" : "https://api.github.com/users/jmcorgan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jmcorgan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jmcorgan",
         "id" : 1492956,
         "login" : "jmcorgan",
         "organizations_url" : "https://api.github.com/users/jmcorgan/orgs",
         "received_events_url" : "https://api.github.com/users/jmcorgan/received_events",
         "repos_url" : "https://api.github.com/users/jmcorgan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jmcorgan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jmcorgan"
      }
   },
   {
      "body" : "This pull already implements topics via construction of multipart messages.  They are \"BLK\" and \"TXN\".  If the zmq library on the publisher side is recent enough, it will filter on the publisher side as per the subscriber's topic preferences.  \r\n\r\nThis, however, doesn't help all that much as ideally you'd want something that can tell whether or not anyone is subscribed to a topic so you can save the cost of serialization when it's not necessary.  AFAIK, there's no simple way to ask zmq if anyone is subscribed or what topics are subscribed.\r\n\r\nWhether or not the cost of serialization/zmq_sending on all transactions and blocks is enough to justify adding configuration options (and translation/documentation overhead) to selectively turn block or transaction publishing on/off is an open question.  I have not measured it.  ",
      "created_at" : "2015-05-29T19:27:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-106909421",
      "id" : 106909421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-05-29T19:27:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/106909421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/430315?v=3",
         "events_url" : "https://api.github.com/users/ajweiss/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajweiss/followers",
         "following_url" : "https://api.github.com/users/ajweiss/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajweiss/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajweiss",
         "id" : 430315,
         "login" : "ajweiss",
         "organizations_url" : "https://api.github.com/users/ajweiss/orgs",
         "received_events_url" : "https://api.github.com/users/ajweiss/received_events",
         "repos_url" : "https://api.github.com/users/ajweiss/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajweiss/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajweiss/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajweiss"
      }
   },
   {
      "body" : "> What you mean by zmqpubtx and zmqpubblock? Two pub sockets binded to different addresses?\r\n\r\nYes. well in fact maybe you want to connect both to the same socket, but yes the goal would be that you are able to configure them independently (maybe you confiure blocks but not transactions or viceversa).",
      "created_at" : "2015-06-01T06:23:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-107320983",
      "id" : 107320983,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-01T06:23:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/107320983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "If the goal is to merely notify of hashes, I suggest an external program triggered by -*notify may be better.",
      "created_at" : "2015-06-02T03:21:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-107786003",
      "id" : 107786003,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-02T03:21:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/107786003",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@luke-jr notify scripts only support wallet transactions and blocks. There is no support for mempool notifications (#6072).\r\n\r\nBeside that, executing a script for each hash is overkill, specially when lots of transactions change state like when the blockchain is incremented. Also, notify scripts execute in the same machine the bitcoind runs whereas sockets provide much more flexibility.",
      "created_at" : "2015-06-02T09:59:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-107904017",
      "id" : 107904017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-02T09:59:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/107904017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "So does it make sense to be able to configure independent sockets for transactions and blocks?\r\nYou could still connect both to the same port instead of binding them, presumably used in combination of a zmq Forwarder or binding a single subscriber.\r\n",
      "created_at" : "2015-06-02T10:37:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-107912213",
      "id" : 107912213,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-02T10:37:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/107912213",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@promag Ok, you've made your point. I suggest at least offering RPC over ZMQ though, but that's I guess out of scope here.",
      "created_at" : "2015-06-02T10:49:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-107914471",
      "id" : 107914471,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-02T10:49:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/107914471",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "RPC over ZMQ is indeed out of scope on this pull request, but definitely worth considering.",
      "created_at" : "2015-06-02T13:37:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-107955489",
      "id" : 107955489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-02T13:37:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/107955489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1492956?v=3",
         "events_url" : "https://api.github.com/users/jmcorgan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jmcorgan/followers",
         "following_url" : "https://api.github.com/users/jmcorgan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jmcorgan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jmcorgan",
         "id" : 1492956,
         "login" : "jmcorgan",
         "organizations_url" : "https://api.github.com/users/jmcorgan/orgs",
         "received_events_url" : "https://api.github.com/users/jmcorgan/received_events",
         "repos_url" : "https://api.github.com/users/jmcorgan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jmcorgan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jmcorgan"
      }
   },
   {
      "body" : "Agree on discarding RPC for now.\r\n\r\nSo I think we could allow arguments -zmq{type}{format}{object}={address} where\r\n - type = pub (push in the future)\r\n - format = hash | raw\r\n - object = transaction | block\r\n - address = a valid zmq socket address\r\n\r\nExample:\r\n`-zmqpubhashblock=ipc:///tmp/bitcoin.block.hash -zmqpubrawtransaction=ipc:///tmp/bitcoin.transaction.raw`",
      "created_at" : "2015-06-03T16:27:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-108510944",
      "id" : 108510944,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-03T16:29:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108510944",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "> Agree on discarding RPC for now.\n>\n> So I think we could allow arguments -zmq{type}{format}{object}={address} where\n>\n> type = pub (push in the future)\n> format = hash | raw\n> object = transaction | block\n> address = a valid zmq socket address\n\nSounds great to me.\n",
      "created_at" : "2015-06-03T16:51:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-108521083",
      "id" : 108521083,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-03T16:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108521083",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Ops, forgot to add the topic option, which is important if an address is shared. Unless topic is the same as the object.",
      "created_at" : "2015-06-03T17:27:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-108535849",
      "id" : 108535849,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-03T17:38:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/108535849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "@jonasschnelli @jgarzik please review the refactor, still wip",
      "created_at" : "2015-06-05T17:28:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-109370385",
      "id" : 109370385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-05T17:28:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/109370385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r31846217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31846217"
         }
      },
      "body" : "It looks like that this is not implemented like that. Example: `zmqpubrawblock` is not supported. Only `zmqpubhashblock` and `zmqpubhashtransaction` is supported IMO. At least the should be a warning or error if you try to add a zmq channel which is not supported.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-06-05T19:58:08Z",
      "diff_hunk" : "@@ -349,9 +361,12 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n     strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n         \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n-                    \n+\n #endif\n \n+    strUsage += HelpMessageGroup(_(\"ZeroMQ publisher options\"));\n+    strUsage += HelpMessageOpt(\"-zmq<type><format><object>=<address>\",_(\"Enable notification through zmq socket <address> (type=pub, format=hash|raw, object=block|transaction)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r31846217",
      "id" : 31846217,
      "original_commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "original_position" : 51,
      "path" : "src/init.cpp",
      "position" : 51,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T19:58:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31846217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "**This PR needs some love.**\r\n\r\n1. documentation out of date (or lets say out of sync because it's not yet available)\r\n2. `./contrib/zmq/zmq_sub.py` out of date, doesn't run.\r\n3. `./contrib/zmq/zmq_sub.py` as no `+x` (executable) flag like `linearize.py`, etc.\r\n4. zmq rpc test does not run, out of date\r\n5. the factory thing as well as the flexible `-zmq<pub><...>` feels over the top and should throw an error if given \"format\" could not generate a listener.\r\n\r\nI really think ZMQ within bitcoin-core would be a great step, but this PR lacks here and there at the moment.",
      "created_at" : "2015-06-05T20:09:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-109424805",
      "id" : 109424805,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-05T20:09:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/109424805",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r31849061"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31849061"
         }
      },
      "body" : "As stated it's just an initial version to ask for comments. The usage help will havÃÂª the supported options.",
      "commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "created_at" : "2015-06-05T20:35:07Z",
      "diff_hunk" : "@@ -349,9 +361,12 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n     strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n         \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n-                    \n+\n #endif\n \n+    strUsage += HelpMessageGroup(_(\"ZeroMQ publisher options\"));\n+    strUsage += HelpMessageOpt(\"-zmq<type><format><object>=<address>\",_(\"Enable notification through zmq socket <address> (type=pub, format=hash|raw, object=block|transaction)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#discussion_r31849061",
      "id" : 31849061,
      "original_commit_id" : "df435c5fc3e51253649d6f096cd9398873bf62c3",
      "original_position" : 51,
      "path" : "src/init.cpp",
      "position" : 51,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6103",
      "updated_at" : "2015-06-05T20:35:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/31849061",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "body" : "Agree but before polishing and squash I want to be sure that the refactor is acceptable.\r\n\r\nInstead of having lots of switch/ifs I added a notifier type for each type of notification. Later other types of notifications can be added easilly. If it's OK then I'll update everything.",
      "created_at" : "2015-06-05T20:40:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6103#issuecomment-109433295",
      "id" : 109433295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6103",
      "updated_at" : "2015-06-05T20:40:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/109433295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=3",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
