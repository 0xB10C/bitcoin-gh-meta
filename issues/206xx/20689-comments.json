[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK (modulo context / future plans for this script; I don't know).",
      "created_at" : "2020-12-17T19:38:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20689#issuecomment-747656215",
      "id" : 747656215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20689",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzY1NjIxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-17T19:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747656215",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20689#discussion_r545773078"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20689"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545773078"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a missed opportunity; please use python's internal hashing instead of calling out to an utility here.",
      "commit_id" : "bb801302eef5b5a13fc67b8c8e3a48326cbf8ab7",
      "created_at" : "2020-12-18T11:30:49Z",
      "diff_hunk" : "@@ -0,0 +1,189 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Script for verifying Bitoin Core release binaries\n+\n+This script attempts to download the signature file SHA256SUMS.asc from\n+bitcoincore.org and bitcoin.org and compares them.\n+It first checks if the signature passes, and then downloads the files\n+specified in the file, and checks if the hashes of these files match those\n+that are specified in the signature file.\n+The script returns 0 if everything passes the checks. It returns 1 if either\n+the signature check or the hash check doesn't pass. If an error occurs the\n+return value is >= 2.\n+\"\"\"\n+import os\n+import subprocess\n+import sys\n+from textwrap import indent\n+\n+WORKINGDIR = \"/tmp/bitcoin_verify_binaries\"\n+HASHFILE = \"hashes.tmp\"\n+HOST1 = \"https://bitcoincore.org\"\n+HOST2 = \"https://bitcoin.org\"\n+VERSIONPREFIX = \"bitcoin-core-\"\n+SIGNATUREFILENAME = \"SHA256SUMS.asc\"\n+\n+\n+def parse_version_string(version_str):\n+    if version_str.startswith(VERSIONPREFIX):  # remove version prefix\n+        version_str = version_str[len(VERSIONPREFIX):]\n+\n+    parts = version_str.split('-')\n+    version_base = parts[0]\n+    version_rc = \"\"\n+    version_os = \"\"\n+    if len(parts) == 2:  # \"<version>-rcN\" or \"version-platform\"\n+        if \"rc\" in parts[1]:\n+            version_rc = parts[1]\n+        else:\n+            version_os = parts[1]\n+    elif len(parts) == 3:  # \"<version>-rcN-platform\"\n+        version_rc = parts[1]\n+        version_os = parts[2]\n+\n+    return version_base, version_rc, version_os\n+\n+\n+def download_with_wget(remote_file, local_file=None):\n+    if local_file:\n+        wget_args = ['wget', '-N', '-O', local_file, remote_file]\n+    else:\n+        wget_args = ['wget', '-N', remote_file]\n+\n+    result = subprocess.run(wget_args,\n+                            stderr=subprocess.STDOUT, stdout=subprocess.PIPE)\n+    return result.returncode == 0, result.stdout.decode().rstrip()\n+\n+\n+def verify_with_gpg(signature_filename, output_filename):\n+    result = subprocess.run(['gpg', '--yes', '--decrypt', '--output',\n+                             output_filename, signature_filename],\n+                             stderr=subprocess.STDOUT, stdout=subprocess.PIPE)\n+    return result.returncode, result.stdout.decode().rstrip()\n+\n+\n+def apply_filter_on_file(filename, filter_):\n+    subprocess.run(f'grep {filter_} {filename} > {filename}-tmp', shell=True)\n+    if os.path.getsize(f\"{filename}-tmp\") == 0:\n+        return False\n+    subprocess.run(f\"mv {filename}-tmp {filename}\", shell=True)\n+    return True\n+\n+\n+def verify_with_sha256sum(files_to_verify, hashfile):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20689#discussion_r545773078",
      "id" : 545773078,
      "line" : 75,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc3MzA3OA==",
      "original_commit_id" : "bb801302eef5b5a13fc67b8c8e3a48326cbf8ab7",
      "original_line" : 75,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "contrib/verifybinaries/verify.py",
      "position" : 75,
      "pull_request_review_id" : 555411451,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20689",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-18T11:30:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545773078",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, I generally prefer python to shell code as things become more complex, I find it easier to review and structure. It also doesn't need to rely so much on tooling that happens to be scattered around the system (like your OS's [favorite command line sha256 hashers](https://github.com/bitcoin/bitcoin/blob/master/contrib/install_db4.sh#L32-L46)).",
      "created_at" : "2020-12-18T11:31:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20689#issuecomment-748036735",
      "id" : 748036735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20689",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODAzNjczNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-18T11:34:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748036735",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on the general idea of replacing this shell script with a Python script.\r\n\r\nThe current version of the Python script shells out to `wget`, `gpg`, `grep`, `mv`, `diff` and `sha256sum`.\r\n\r\nAFAICT the only necessary external command that would be non-trivial to replace by using only what is supplied by the Python standard library is `gpg`.\r\n\r\nWould it be possible to re-write this script to make it shell out only to `gpg`?",
      "created_at" : "2020-12-18T14:38:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20689#issuecomment-748118062",
      "id" : 748118062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20689",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODExODA2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-18T14:38:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748118062",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20689#discussion_r546037244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20689"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546037244"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point! When I thought about using internal hashing I was initially put off about potentially loading dozens of MBs into memory (I guess `sha256sum` does this in a smart way by loading chunk after chunk, instead of the whole file at once), but OTOH this should not be a problem at all and the advantage of getting rid of an external tool outweighs this by far.",
      "commit_id" : "bb801302eef5b5a13fc67b8c8e3a48326cbf8ab7",
      "created_at" : "2020-12-18T19:12:14Z",
      "diff_hunk" : "@@ -0,0 +1,189 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Script for verifying Bitoin Core release binaries\n+\n+This script attempts to download the signature file SHA256SUMS.asc from\n+bitcoincore.org and bitcoin.org and compares them.\n+It first checks if the signature passes, and then downloads the files\n+specified in the file, and checks if the hashes of these files match those\n+that are specified in the signature file.\n+The script returns 0 if everything passes the checks. It returns 1 if either\n+the signature check or the hash check doesn't pass. If an error occurs the\n+return value is >= 2.\n+\"\"\"\n+import os\n+import subprocess\n+import sys\n+from textwrap import indent\n+\n+WORKINGDIR = \"/tmp/bitcoin_verify_binaries\"\n+HASHFILE = \"hashes.tmp\"\n+HOST1 = \"https://bitcoincore.org\"\n+HOST2 = \"https://bitcoin.org\"\n+VERSIONPREFIX = \"bitcoin-core-\"\n+SIGNATUREFILENAME = \"SHA256SUMS.asc\"\n+\n+\n+def parse_version_string(version_str):\n+    if version_str.startswith(VERSIONPREFIX):  # remove version prefix\n+        version_str = version_str[len(VERSIONPREFIX):]\n+\n+    parts = version_str.split('-')\n+    version_base = parts[0]\n+    version_rc = \"\"\n+    version_os = \"\"\n+    if len(parts) == 2:  # \"<version>-rcN\" or \"version-platform\"\n+        if \"rc\" in parts[1]:\n+            version_rc = parts[1]\n+        else:\n+            version_os = parts[1]\n+    elif len(parts) == 3:  # \"<version>-rcN-platform\"\n+        version_rc = parts[1]\n+        version_os = parts[2]\n+\n+    return version_base, version_rc, version_os\n+\n+\n+def download_with_wget(remote_file, local_file=None):\n+    if local_file:\n+        wget_args = ['wget', '-N', '-O', local_file, remote_file]\n+    else:\n+        wget_args = ['wget', '-N', remote_file]\n+\n+    result = subprocess.run(wget_args,\n+                            stderr=subprocess.STDOUT, stdout=subprocess.PIPE)\n+    return result.returncode == 0, result.stdout.decode().rstrip()\n+\n+\n+def verify_with_gpg(signature_filename, output_filename):\n+    result = subprocess.run(['gpg', '--yes', '--decrypt', '--output',\n+                             output_filename, signature_filename],\n+                             stderr=subprocess.STDOUT, stdout=subprocess.PIPE)\n+    return result.returncode, result.stdout.decode().rstrip()\n+\n+\n+def apply_filter_on_file(filename, filter_):\n+    subprocess.run(f'grep {filter_} {filename} > {filename}-tmp', shell=True)\n+    if os.path.getsize(f\"{filename}-tmp\") == 0:\n+        return False\n+    subprocess.run(f\"mv {filename}-tmp {filename}\", shell=True)\n+    return True\n+\n+\n+def verify_with_sha256sum(files_to_verify, hashfile):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20689#discussion_r546037244",
      "id" : 546037244,
      "in_reply_to_id" : 545773078,
      "line" : 75,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAzNzI0NA==",
      "original_commit_id" : "bb801302eef5b5a13fc67b8c8e3a48326cbf8ab7",
      "original_line" : 75,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "contrib/verifybinaries/verify.py",
      "position" : 75,
      "pull_request_review_id" : 555749155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20689",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-18T19:12:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546037244",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for all the conceptual reviews! I agree with the idea to reduce calls to external tools, if we move to a language that has 'batteries included' we should also use them to be more deterministic, robust and platform-independent.\r\n\r\n> It also doesn't need to rely so much on tooling that happens to be scattered around the system (like your OS's [favorite command line sha256 hashers](https://github.com/bitcoin/bitcoin/blob/master/contrib/install_db4.sh#L32-L46)).\r\n\r\nI didn't know it was that bad and not even `sha256sum` is available consistently across Linux and *BSDs ð \r\n\r\n> Would it be possible to re-write this script to make it shell out only to `gpg`?\r\n\r\nChallenge accepted :-)\r\n\r\n",
      "created_at" : "2020-12-18T19:12:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20689#issuecomment-748269056",
      "id" : 748269056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20689",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODI2OTA1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-18T19:12:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748269056",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed with the following changes, eliminating several external tool call (`subprocess.run`) instances, according to the reviewers suggestions:\r\n- replaced call to external `grep` and `mv` with simple manual filtering (we don't need the contents in a file anyways)\r\n- replaced call to external `sha256sum` with python's internal hashing (`hashlib.sha256`)\r\n- replaced call to external `diff` with a trivial comparison routine (new function `files_are_equal(...)`)\r\n\r\nFor now I decided to keep the call to `wget` for two reasons:\r\n1. we currently take advantage of its timestamping function (parameter `-N`, see https://linux.die.net/man/1/wget), that only downloads a file if both local and remote timestamp and size differ: \"_When running Wget with -N, with or without -r or -p, the decision as to whether or not to download a newer copy of a file depends on the local and remote timestamp and size of the file._\" This is useful for not needing to re-download binaries that are already there, and I don't think its worth it to implement a similar mechanism in the script.\r\n\r\n2. IMHO the verbose step-by-step-output in case of failure can be quite useful for diagnosing the problem, that would possibly be quite hard to get in the same detail level in python (w/o possibly catching lots of individual exceptions), e.g.:\r\n```\r\nwget output:\r\n        --2020-12-21 00:17:29--  https://bitcoincore.org/bin/bitcoin-core-0.20.0/test.rc23/SHA256SUMS.asc\r\n        Resolving bitcoincore.org (bitcoincore.org)... 198.251.83.116, 107.191.99.5\r\n        Connecting to bitcoincore.org (bitcoincore.org)|198.251.83.116|:443... connected.\r\n        HTTP request sent, awaiting response... 404 Not Found\r\n        2020-12-21 00:17:29 ERROR 404: Not Found.\r\n```\r\n\r\nSo the remaining external calls would be to `gpg` and `wget` right now. Happy though to also get rid of the latter one, if that is the general wish.",
      "created_at" : "2020-12-20T23:25:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20689#issuecomment-748686395",
      "id" : 748686395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20689",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODY4NjM5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-20T23:25:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748686395",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I was thinking of this script yesterday during a [twitter thread](https://twitter.com/orionwl/status/1340286384867860482), and wondered if it would be useful to make it do verification against gitian deterministic build attestations. This would be more thorough than validating my signature. At the least rewriting it in Python makes it easier to do this.\r\n\r\nThis is out of scope for this PR of course.\r\n\r\n> So the remaining external calls would be to gpg and wget right now. Happy though to also get rid of the latter one, if that is the general wish.\r\n\r\n`wget` is not low-hanging fruit in this regard. It's fairly easy to implement a poor man's wget in Python, but adding other features such as a progress bar makes it a lot more work. Especially as we don't want to introduce external Python dependencies. \r\nCould also be done in a later PR. I think it's fine like this.",
      "created_at" : "2020-12-21T09:23:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20689#issuecomment-748868668",
      "id" : 748868668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20689",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODg2ODY2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-21T09:31:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748868668",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Testing a bit\r\n```bash\r\n$ ./verify.py 0.20.1-linux\r\nDownloading bitcoin-0.20.1-aarch64-linux-gnu.tar.gz\r\nDownloading bitcoin-0.20.1-arm-linux-gnueabihf.tar.gz\r\nDownloading bitcoin-0.20.1-riscv64-linux-gnu.tar.gz\r\nDownloading bitcoin-0.20.1-x86_64-linux-gnu.tar.gz\r\nKeep the binaries in /tmp/bitcoin_verify_binaries\r\nVerified hashes of\r\nbitcoin-0.20.1-aarch64-linux-gnu.tar.gz\r\nbitcoin-0.20.1-arm-linux-gnueabihf.tar.gz\r\nbitcoin-0.20.1-riscv64-linux-gnu.tar.gz\r\nbitcoin-0.20.1-x86_64-linux-gnu.tar.gz\r\n$ ./verify.py 0.19.0.1-linux\r\nDownloading bitcoin-0.19.0.1-aarch64-linux-gnu.tar.gz\r\nDownloading bitcoin-0.19.0.1-arm-linux-gnueabihf.tar.gz\r\nDownloading bitcoin-0.19.0.1-i686-pc-linux-gnu.tar.gz\r\nDownloading bitcoin-0.19.0.1-riscv64-linux-gnu.tar.gz\r\nDownloading bitcoin-0.19.0.1-x86_64-linux-gnu.tar.gz\r\nKeep the binaries in /tmp/bitcoin_verify_binaries\r\nVerified hashes of\r\nbitcoin-0.19.0.1-aarch64-linux-gnu.tar.gz\r\nbitcoin-0.19.0.1-arm-linux-gnueabihf.tar.gz\r\nbitcoin-0.19.0.1-i686-pc-linux-gnu.tar.gz\r\nbitcoin-0.19.0.1-riscv64-linux-gnu.tar.gz\r\nbitcoin-0.19.0.1-x86_64-linux-gnu.tar.gz\r\n$ ./verify.py 0.20.0-linux  # <---------------------------------------------------\r\nbitcoin.org and bitcoincore.org signature files were not equal?\r\n$ ./verify.py 0.20.0-linux\r\nDownloading bitcoin-0.20.0-aarch64-linux-gnu.tar.gz\r\nDownloading bitcoin-0.20.0-aarch64-linux-gnu.tar.gz\r\nDownloading bitcoin-0.20.0-arm-linux-gnueabihf.tar.gz\r\nDownloading bitcoin-0.20.0-riscv64-linux-gnu.tar.gz\r\nDownloading bitcoin-0.20.0-x86_64-linux-gnu.tar.gz\r\nKeep the binaries in /tmp/bitcoin_verify_binaries\r\nVerified hashes of\r\nbitcoin-0.20.0-aarch64-linux-gnu.tar.gz\r\nbitcoin-0.20.0-arm-linux-gnueabihf.tar.gz\r\nbitcoin-0.20.0-riscv64-linux-gnu.tar.gz\r\nbitcoin-0.20.0-x86_64-linux-gnu.tar.gz\r\n```\r\nThe intermittent issue was strange. I'd love to see more detailed output in case of such an error, or at the least not removing the files immediately. ",
      "created_at" : "2020-12-21T09:34:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20689#issuecomment-748874322",
      "id" : 748874322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20689",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODg3NDMyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-21T09:38:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748874322",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
