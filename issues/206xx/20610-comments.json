[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, I cannot test this but this is a great first contribution.",
      "created_at" : "2020-12-10T10:01:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#issuecomment-742416062",
      "id" : 742416062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20610",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjQxNjA2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T10:01:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742416062",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Currently testing...",
      "created_at" : "2020-12-13T21:21:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#issuecomment-744070387",
      "id" : 744070387,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20610",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NDA3MDM4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-13T21:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744070387",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542009126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542009126"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "pkg_add is the default package handler...\r\n - I believe it is best to use the default package handler.\r\n- when enumerating the build and installation steps - should `sudo` be added to the commands explicitly? \r\n\r\nAn option is to add pkgin to the initial command.\r\n\r\n`\r\nnetbsd# pkg_add pkgin autoconf automake libtool pkg-config git gmake boost libevent\r\n`\r\n\r\nThis assumes the user has sudo privileges, is clearer on the procedure - and eliminates the need to change all the pkgin commands. ",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-13T21:26:51Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542009126",
      "id" : 542009126,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAwOTEyNg==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 40,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 48,
      "pull_request_review_id" : 550961958,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-13T23:07:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542009126",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542025468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542025468"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I am using a completely clean os...\r\n\r\n```\r\nnetbsd# git clone https://github.com/bitcoin/bitcoin\r\nCloning into 'bitcoin'...\r\nerror: failed to write new configuration file /root/bitcoin/.git/config.lock\r\nwarning: unable to unlink '/root/bitcoin/.git/config.lock': Operation not permitted\r\nfatal: could not set 'core.repositoryformatversion' to '0'\r\nnetbsd# \r\n```\r\n\r\nsetting a better testing environment for NetBSD...",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-13T22:57:37Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+Now that `git` and all the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+``` bash",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542025468",
      "id" : 542025468,
      "line" : 51,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAyNTQ2OA==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 51,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 68,
      "pull_request_review_id" : 550970995,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-13T22:57:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542025468",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542027081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542027081"
         }
      },
      "author_association" : "NONE",
      "body" : "That should be an error in the system side. First, make sure you have proper read/write access to that directory from your user. I could be wrong, but it looks like you are trying to write somewhere on root from a user. Some other troubleshooting tips: try allocating more space for the netBSD partition or manually deleting the config.lock which could have been put there by another program or process. ",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-13T23:06:32Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+Now that `git` and all the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+``` bash",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542027081",
      "id" : 542027081,
      "in_reply_to_id" : 542025468,
      "line" : 51,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAyNzA4MQ==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 51,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 68,
      "pull_request_review_id" : 550971987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-13T23:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542027081",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/23396902?v=4",
         "events_url" : "https://api.github.com/users/jarolrod/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jarolrod/followers",
         "following_url" : "https://api.github.com/users/jarolrod/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jarolrod/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jarolrod",
         "id" : 23396902,
         "login" : "jarolrod",
         "node_id" : "MDQ6VXNlcjIzMzk2OTAy",
         "organizations_url" : "https://api.github.com/users/jarolrod/orgs",
         "received_events_url" : "https://api.github.com/users/jarolrod/received_events",
         "repos_url" : "https://api.github.com/users/jarolrod/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jarolrod/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jarolrod/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jarolrod"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542028125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542028125"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks for testing! NetBSD's official documentation [recommends](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) to use `pkgin` for most binary application tasks. I didn't include it as a dependency because it isn't, the user is free to use `pkg_add` instead of `pkgin`. I also link to documentation on how to install packages on NetBSD so the user can make a choice. Do you think I should explicitly add preparation instructions on installing `pkgin`?",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-13T23:12:01Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542028125",
      "id" : 542028125,
      "in_reply_to_id" : 542009126,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAyODEyNQ==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 40,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 48,
      "pull_request_review_id" : 550972633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-13T23:12:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542028125",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/23396902?v=4",
         "events_url" : "https://api.github.com/users/jarolrod/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jarolrod/followers",
         "following_url" : "https://api.github.com/users/jarolrod/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jarolrod/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jarolrod",
         "id" : 23396902,
         "login" : "jarolrod",
         "node_id" : "MDQ6VXNlcjIzMzk2OTAy",
         "organizations_url" : "https://api.github.com/users/jarolrod/orgs",
         "received_events_url" : "https://api.github.com/users/jarolrod/received_events",
         "repos_url" : "https://api.github.com/users/jarolrod/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jarolrod/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jarolrod/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jarolrod"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542099951"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542099951"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here is a docker repo for testing NetBSD9.#\r\n\r\nhttps://github.com/bitcoincore-dev/core-review/tree/docker-netbsd9/docker/netbsd\r\nWorks - figured others might find it useful...",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-14T04:13:57Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+Now that `git` and all the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+``` bash",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542099951",
      "id" : 542099951,
      "in_reply_to_id" : 542025468,
      "line" : 51,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA5OTk1MQ==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 51,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 68,
      "pull_request_review_id" : 551032260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-14T04:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542099951",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542104931"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542104931"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "These code blocks don't copy and paste into the CL in NetBSD...\r\nI think it is better to just use a single line format...\r\n```bash\r\n\r\n./configure --with-gui=no CPPFLAGS=\"-I/usr/pkg/include\" LDFLAGS=\"-L/usr/pkg/lib\" --with-boost-libdir=/usr/pkg/lib MAKE=gmake\r\n\r\n```\r\nIt doesn't look as good - but it is much easier for the user to copy and paste...\r\n\r\n",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-14T04:31:59Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+Now that `git` and all the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+``` bash\n git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n-See [dependencies.md](dependencies.md) for a complete overview.\n+### 3. Install Optional Dependencies\n+\n+#### Wallet Dependencies\n+It is not necessary to build wallet functionality to run bitcoind or the GUI. To enable legacy wallets, you must install `db4`. To enable [descriptor wallets](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md), `sqlite3` is required. Skip `db4` if you intend to *exclusively* use descriptor wallets\n+\n+###### Legacy Wallet Support\n+`db4` is required to enable support for legacy wallets. Skip if you don't intend to use legacy wallets\n+\n+```bash\n+pkgin install db4\n+```\n \n-### Building BerkeleyDB\n+###### Descriptor Wallet Support\n+\n+`sqlite3` is required to enable support for descriptor wallets. Skip if you don't intend to use descriptor wallets.\n+``` bash\n+pkgin install sqlite3\n+```\n+---\n \n-BerkeleyDB is only necessary for the wallet functionality. To skip this, pass\n-`--disable-wallet` to `./configure` and skip to the next section.\n+#### GUI Dependencies\n+###### Qt5\n \n-It is recommended to use Berkeley DB 4.8. You cannot use the BerkeleyDB library\n-from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n-If you have to build it yourself, you can use [the installation script included\n-in contrib/](/contrib/install_db4.sh) like so:\n+Bitcoin Core includes a GUI built with the cross-platform Qt Framework. To compile the GUI, we need to install `qt5`. Skip if you don't intend to use the GUI.\n+```bash\n+pkgin install qt5\n+```\n+###### qrencode\n \n+The GUI can encode addresses in a QR Code. To build in QR support for the GUI, install `qrencode`. Skip if not using the GUI or don't want QR code functionality.\n ```bash\n-./contrib/install_db4.sh `pwd`\n+pkgin install qrencode\n ```\n+---\n \n-from the root of the repository. Then set `BDB_PREFIX` for the next section:\n+#### Test Suite Dependencies\n+There is an included test suite that is useful for testing code changes when developing.\n+To run the test suite (recommended), you will need to have Python 3 installed:\n \n ```bash\n-export BDB_PREFIX=\"$PWD/db4\"\n+pkgin install python37\n ```\n+---\n \n ### Building Bitcoin Core\n \n **Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n \n-With wallet:\n+\n+### 1. Configuration\n+\n+There are many ways to configure Bitcoin Core, here are a few common examples:\n+##### Wallet (BDB + SQlite) Support, No GUI:\n+This explicitly enables legacy wallet support and disables the GUI. An error will be thrown if `db4` is not installed. If `sqlite3` is installed, then descriptor wallet support will also be built.\n ```bash\n ./autogen.sh\n-./configure --with-gui=no CPPFLAGS=\"-I/usr/pkg/include\" \\\n+./configure --with-gui=no \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542104931",
      "id" : 542104931,
      "line" : 111,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwNDkzMQ==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 111,
      "original_position" : 141,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 141,
      "pull_request_review_id" : 551036836,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-14T04:32:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542104931",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542108414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542108414"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "When adding code blocks - add a newline before the ticks - it is a markdown thing...\r\nThis ensures better cross platform rendering...\r\n\r\n![Screen Shot 2020-12-13 at 11 38 28 PM](https://user-images.githubusercontent.com/152159/102041016-58dcf400-3d9c-11eb-8e99-3030988ed785.png)\r\n\r\n\r\n###### Descriptor Wallet Support\r\n\r\n`sqlite3` is required to enable support for descriptor wallets. Skip if you don't intend to use descriptor wallets.\r\n\r\n``` bash\r\npkgin install sqlite3\r\n```\r\n---\r\n\r\n",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-14T04:44:45Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+Now that `git` and all the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+``` bash\n git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n-See [dependencies.md](dependencies.md) for a complete overview.\n+### 3. Install Optional Dependencies\n+\n+#### Wallet Dependencies\n+It is not necessary to build wallet functionality to run bitcoind or the GUI. To enable legacy wallets, you must install `db4`. To enable [descriptor wallets](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md), `sqlite3` is required. Skip `db4` if you intend to *exclusively* use descriptor wallets\n+\n+###### Legacy Wallet Support\n+`db4` is required to enable support for legacy wallets. Skip if you don't intend to use legacy wallets\n+\n+```bash\n+pkgin install db4\n+```\n \n-### Building BerkeleyDB\n+###### Descriptor Wallet Support\n+\n+`sqlite3` is required to enable support for descriptor wallets. Skip if you don't intend to use descriptor wallets.\n+``` bash",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542108414",
      "id" : 542108414,
      "line" : 70,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwODQxNA==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 70,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 89,
      "pull_request_review_id" : 551040077,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-14T04:44:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542108414",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542113414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542113414"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "While running ./configure ...\r\nconfig.log is marked as a directory...\r\nI am not sure if this is a result of copy and pasting the multiline command into the terminal...\r\nOr if it is a bug... going to rebuild the image from scratch and run again...\r\n\r\n![Screen Shot 2020-12-13 at 11 58 46 PM](https://user-images.githubusercontent.com/152159/102042224-4d3efc80-3d9f-11eb-8c6f-22e74aa9568c.png)",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-14T05:02:51Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+Now that `git` and all the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+``` bash\n git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n-See [dependencies.md](dependencies.md) for a complete overview.\n+### 3. Install Optional Dependencies\n+\n+#### Wallet Dependencies\n+It is not necessary to build wallet functionality to run bitcoind or the GUI. To enable legacy wallets, you must install `db4`. To enable [descriptor wallets](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md), `sqlite3` is required. Skip `db4` if you intend to *exclusively* use descriptor wallets\n+\n+###### Legacy Wallet Support\n+`db4` is required to enable support for legacy wallets. Skip if you don't intend to use legacy wallets\n+\n+```bash\n+pkgin install db4\n+```\n \n-### Building BerkeleyDB\n+###### Descriptor Wallet Support\n+\n+`sqlite3` is required to enable support for descriptor wallets. Skip if you don't intend to use descriptor wallets.\n+``` bash\n+pkgin install sqlite3\n+```\n+---\n \n-BerkeleyDB is only necessary for the wallet functionality. To skip this, pass\n-`--disable-wallet` to `./configure` and skip to the next section.\n+#### GUI Dependencies\n+###### Qt5\n \n-It is recommended to use Berkeley DB 4.8. You cannot use the BerkeleyDB library\n-from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n-If you have to build it yourself, you can use [the installation script included\n-in contrib/](/contrib/install_db4.sh) like so:\n+Bitcoin Core includes a GUI built with the cross-platform Qt Framework. To compile the GUI, we need to install `qt5`. Skip if you don't intend to use the GUI.\n+```bash\n+pkgin install qt5\n+```\n+###### qrencode\n \n+The GUI can encode addresses in a QR Code. To build in QR support for the GUI, install `qrencode`. Skip if not using the GUI or don't want QR code functionality.\n ```bash\n-./contrib/install_db4.sh `pwd`\n+pkgin install qrencode\n ```\n+---\n \n-from the root of the repository. Then set `BDB_PREFIX` for the next section:\n+#### Test Suite Dependencies\n+There is an included test suite that is useful for testing code changes when developing.\n+To run the test suite (recommended), you will need to have Python 3 installed:\n \n ```bash\n-export BDB_PREFIX=\"$PWD/db4\"\n+pkgin install python37\n ```\n+---\n \n ### Building Bitcoin Core\n \n **Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n \n-With wallet:\n+\n+### 1. Configuration\n+\n+There are many ways to configure Bitcoin Core, here are a few common examples:\n+##### Wallet (BDB + SQlite) Support, No GUI:\n+This explicitly enables legacy wallet support and disables the GUI. An error will be thrown if `db4` is not installed. If `sqlite3` is installed, then descriptor wallet support will also be built.\n ```bash\n ./autogen.sh\n-./configure --with-gui=no CPPFLAGS=\"-I/usr/pkg/include\" \\\n+./configure --with-gui=no \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542113414",
      "id" : 542113414,
      "line" : 111,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjExMzQxNA==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 111,
      "original_position" : 141,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 141,
      "pull_request_review_id" : 551044777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-14T05:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542113414",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542405591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542405591"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "After more thinking on this - maybe there should be a note that states that the master HEAD isn't always stable.\r\nMaybe this should be a git clone command to a release tag?",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-14T14:01:09Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+Now that `git` and all the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+``` bash\n git clone https://github.com/bitcoin/bitcoin.git",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542405591",
      "id" : 542405591,
      "line" : 52,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwNTU5MQ==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 52,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 69,
      "pull_request_review_id" : 551392844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-14T14:01:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542405591",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nðµï¸ @harding @fanquake have been requested to review this pull request as specified in the REVIEWERS file.",
      "created_at" : "2020-12-14T19:12:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#issuecomment-744649946",
      "id" : 744649946,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20610",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NDY0OTk0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-14T19:12:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744649946",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Just as above the config.log is being flagged as a directory\r\n\r\n![Screen Shot 2020-12-14 at 5 59 06 PM](https://user-images.githubusercontent.com/152159/102145941-24b61180-3e36-11eb-91d3-1eacd56e709d.png)\r\n\r\n\r\n",
      "created_at" : "2020-12-14T23:01:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#issuecomment-744765418",
      "id" : 744765418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20610",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NDc2NTQxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-14T23:01:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744765418",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "### I think it is better if this doc:\r\n- Assumes that it is a basic system - that has no prior configs or packages such as `pkgin`\r\n- From that assumption - it addresses the git install issue related to\r\n- `pkg_add -v mozilla-rootcerts` (ssl certs)\r\n- `mozilla-rootcerts install`\r\n- Not dependent on outside documentation\r\n- Assumes only a basic level of understanding of the user\r\n\r\n### With these assumptions - I believe Issues will be minimized - less support workload by community \r\n\r\nRelated walk thru for git install issue:\r\nhttps://troglobit.com/howto/netbsd-pkgsrc/",
      "created_at" : "2020-12-16T19:12:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#issuecomment-746854104",
      "id" : 746854104,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20610",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0Njg1NDEwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T19:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746854104",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   }
]
