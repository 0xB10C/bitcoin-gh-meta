[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, I cannot test this but this is a great first contribution.",
      "created_at" : "2020-12-10T10:01:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#issuecomment-742416062",
      "id" : 742416062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20610",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjQxNjA2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T10:01:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742416062",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Currently testing...",
      "created_at" : "2020-12-13T21:21:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#issuecomment-744070387",
      "id" : 744070387,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20610",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NDA3MDM4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-13T21:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/744070387",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542009126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542009126"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "pkg_add is the default package handler...\r\n - I believe it is best to use the default package handler.\r\n- when enumerating the build and installation steps - should `sudo` be added to the commands explicitly? \r\n\r\nAn option is to add pkgin to the initial command.\r\n\r\n`\r\nnetbsd# pkg_add pkgin autoconf automake libtool pkg-config git gmake boost libevent\r\n`\r\n\r\nThis assumes the user has sudo privileges, is clearer on the procedure - and eliminates the need to change all the pkgin commands. ",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-13T21:26:51Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542009126",
      "id" : 542009126,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAwOTEyNg==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 40,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 48,
      "pull_request_review_id" : 550961958,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-13T23:07:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542009126",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542025468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542025468"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I am using a completely clean os...\r\n\r\n```\r\nnetbsd# git clone https://github.com/bitcoin/bitcoin\r\nCloning into 'bitcoin'...\r\nerror: failed to write new configuration file /root/bitcoin/.git/config.lock\r\nwarning: unable to unlink '/root/bitcoin/.git/config.lock': Operation not permitted\r\nfatal: could not set 'core.repositoryformatversion' to '0'\r\nnetbsd# \r\n```\r\n\r\nsetting a better testing environment for NetBSD...",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-13T22:57:37Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+Now that `git` and all the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+``` bash",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542025468",
      "id" : 542025468,
      "line" : 51,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAyNTQ2OA==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 51,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 68,
      "pull_request_review_id" : 550970995,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-13T22:57:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542025468",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542027081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542027081"
         }
      },
      "author_association" : "NONE",
      "body" : "That should be an error in the system side. First, make sure you have proper read/write access to that directory from your user. I could be wrong, but it looks like you are trying to write somewhere on root from a user. Some other troubleshooting tips: try allocating more space for the netBSD partition or manually deleting the config.lock which could have been put there by another program or process. ",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-13T23:06:32Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+Now that `git` and all the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+``` bash",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542027081",
      "id" : 542027081,
      "in_reply_to_id" : 542025468,
      "line" : 51,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAyNzA4MQ==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 51,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 68,
      "pull_request_review_id" : 550971987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-13T23:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542027081",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/23396902?v=4",
         "events_url" : "https://api.github.com/users/jarolrod/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jarolrod/followers",
         "following_url" : "https://api.github.com/users/jarolrod/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jarolrod/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jarolrod",
         "id" : 23396902,
         "login" : "jarolrod",
         "node_id" : "MDQ6VXNlcjIzMzk2OTAy",
         "organizations_url" : "https://api.github.com/users/jarolrod/orgs",
         "received_events_url" : "https://api.github.com/users/jarolrod/received_events",
         "repos_url" : "https://api.github.com/users/jarolrod/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jarolrod/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jarolrod/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jarolrod"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542028125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542028125"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks for testing! NetBSD's official documentation [recommends](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) to use `pkgin` for most binary application tasks. I didn't include it as a dependency because it isn't, the user is free to use `pkg_add` instead of `pkgin`. I also link to documentation on how to install packages on NetBSD so the user can make a choice. Do you think I should explicitly add preparation instructions on installing `pkgin`?",
      "commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "created_at" : "2020-12-13T23:12:01Z",
      "diff_hunk" : "@@ -1,81 +1,145 @@\n-NetBSD build guide\n-======================\n-(updated for NetBSD 8.0)\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+**Updated for NetBSD [9.1](https://netbsd.org/releases/formal-9/NetBSD-9.1.html)**\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Dependencies\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+The following dependencies are **required**:\n+\n+ Library                                          | Purpose    | Description\n+ -------------------------------------------------|------------|----------------------\n+ [autoconf](https://pkgsrc.se/devel/autoconf)     | Build      | Automatically configure software source code\n+ [automake](https://pkgsrc.se/devel/automake)     | Build      | Generate makefile (requires autoconf)\n+ [libtool](https://pkgsrc.se/devel/libtool)       | Build      | Shared library support\n+ [pkg-config](https://pkgsrc.se/devel/pkg-config) | Build      | Configure compiler and linker flags\n+ [git](https://pkgsrc.se/devel/git)               | Clone      | Version control system\n+ [gmake](https://pkgsrc.se/devel/gmake)           | Compile    | Generate executables\n+ [boost](https://pkgsrc.se/meta-pkgs/boost)       | Utility    | Library for threading, data structures, etc\n+ [libevent](https://pkgsrc.se/devel/libevent)     | Networking | OS independent asynchronous networking\n+\n+\n+The following dependencies are **optional**:\n+\n+  Library                                            | Purpose          | Description\n+  ---------------------------------------------------|------------------|----------------------\n+  [db4](https://pkgsrc.se/databases/db4)             | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+  [qt5](https://pkgsrc.se/x11/qt5)                   | GUI              | GUI toolkit (only needed when GUI enabled)\n+  [qrencode](https://pkgsrc.se/converters/qrencode)  | QR codes in GUI  | Generating QR codes (only needed when GUI enabled)\n+  [zeromq](https://pkgsrc.se/net/zeromq)             | ZMQ notification | Allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+  [sqlite3](https://pkgsrc.se/databases/sqlite3)     | SQLite DB        | Wallet storage (only needed when wallet enabled)\n+  [python37](https://pkgsrc.se/lang/python37)        | Testing          | Python Interpreter (only needed when running the test suite)\n+\n+  See [dependencies.md](dependencies.md) for a complete overview.\n+\n+\n+## Preparation\n+\n+### 1. Install Required Dependencies\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc) - either with `pkg_add` or `pkgin`. The example commands below use `pkgin` which is usually run as `root` or via `sudo`.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20610#discussion_r542028125",
      "id" : 542028125,
      "in_reply_to_id" : 542009126,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAyODEyNQ==",
      "original_commit_id" : "6ac875c6c673b5dde36950420283b31acecc0e53",
      "original_line" : 40,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 48,
      "pull_request_review_id" : 550972633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20610",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-13T23:12:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/542028125",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/23396902?v=4",
         "events_url" : "https://api.github.com/users/jarolrod/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jarolrod/followers",
         "following_url" : "https://api.github.com/users/jarolrod/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jarolrod/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jarolrod",
         "id" : 23396902,
         "login" : "jarolrod",
         "node_id" : "MDQ6VXNlcjIzMzk2OTAy",
         "organizations_url" : "https://api.github.com/users/jarolrod/orgs",
         "received_events_url" : "https://api.github.com/users/jarolrod/received_events",
         "repos_url" : "https://api.github.com/users/jarolrod/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jarolrod/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jarolrod/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jarolrod"
      }
   }
]
