[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20773 (refactor: split CWallet::Create by S3RK)\n* #20404 (Remove names from translatable strings by hebasto)\n* #17526 (Use Single Random Draw In addition to knapsack as coin selection fallback by achow101)\n* #17331 (Use effective values throughout coin selection by achow101)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-13T06:45:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-743962460",
      "id" : 743962460,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20640",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0Mzk2MjQ2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-26T18:51:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743962460",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20640#discussion_r546194751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20640"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546194751"
         }
      },
      "author_association" : "NONE",
      "body" : "While it's arguably not, strictly speaking, part of the proposed change, the comment about the change position parameter that's being maintained here is a bit misleading. This is a bit nit-picky, so bare with me please, but I think it's more appropriate to:\r\n1. Use a const instead of inline comment in order to convey the meaning. e.g. `const int RANDOM_CHANGE_POSITION = -1`). This value is used more than once, so another reason to use a const.\r\n2. Convey that passing `-1` means \"actively set the position to a random one\" rather than \"no requested location\" which doesn't really let the reader know what's going to happen.",
      "commit_id" : "5865c38c6a3dd6a98ff3d03ad5e49c550db49a21",
      "created_at" : "2020-12-19T05:27:43Z",
      "diff_hunk" : "@@ -215,21 +215,19 @@ Result CreateRateBumpTransaction(CWallet& wallet, const uint256& txid, const CCo\n     // We cannot source new unconfirmed inputs(bip125 rule 2)\n     new_coin_control.m_min_depth = 1;\n \n-    CTransactionRef tx_new;\n-    CAmount fee_ret;\n-    int change_pos_in_out = -1; // No requested location for change\n     bilingual_str fail_reason;\n     FeeCalculation fee_calc_out;\n-    if (!wallet.CreateTransaction(recipients, tx_new, fee_ret, change_pos_in_out, fail_reason, new_coin_control, fee_calc_out, false)) {\n+    auto txr = wallet.CreateTransaction(recipients, /* No requested location for change */ -1, fail_reason, new_coin_control, fee_calc_out, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20640#discussion_r546194751",
      "id" : 546194751,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE5NDc1MQ==",
      "original_commit_id" : "8e9266fb7ec8577c989d09937f3de958b2a0332f",
      "original_line" : 220,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 555918142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20640",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-27T19:17:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546194751",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/47615825?v=4",
         "events_url" : "https://api.github.com/users/pox/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pox/followers",
         "following_url" : "https://api.github.com/users/pox/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pox/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pox",
         "id" : 47615825,
         "login" : "pox",
         "node_id" : "MDQ6VXNlcjQ3NjE1ODI1",
         "organizations_url" : "https://api.github.com/users/pox/orgs",
         "received_events_url" : "https://api.github.com/users/pox/received_events",
         "repos_url" : "https://api.github.com/users/pox/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pox/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pox/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pox"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20640#discussion_r546195248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20640"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546195248"
         }
      },
      "author_association" : "NONE",
      "body" : "This is a lot more readable indeed! ð",
      "commit_id" : "5865c38c6a3dd6a98ff3d03ad5e49c550db49a21",
      "created_at" : "2020-12-19T05:33:54Z",
      "diff_hunk" : "@@ -3099,42 +3103,34 @@ bool CWallet::CreateTransactionInternal(\n               feeCalc.est.fail.start, feeCalc.est.fail.end,\n               (feeCalc.est.fail.totalConfirmed + feeCalc.est.fail.inMempool + feeCalc.est.fail.leftMempool) > 0.0 ? 100 * feeCalc.est.fail.withinTarget / (feeCalc.est.fail.totalConfirmed + feeCalc.est.fail.inMempool + feeCalc.est.fail.leftMempool) : 0.0,\n               feeCalc.est.fail.withinTarget, feeCalc.est.fail.totalConfirmed, feeCalc.est.fail.inMempool, feeCalc.est.fail.leftMempool);\n-    return true;\n+    return CreatedTransactionResult(tx, nFeeRet, nChangePosInOut);\n }\n \n-bool CWallet::CreateTransaction(\n+std::optional<CreatedTransactionResult> CWallet::CreateTransaction(\n         const std::vector<CRecipient>& vecSend,\n-        CTransactionRef& tx,\n-        CAmount& nFeeRet,\n-        int& nChangePosInOut,\n+        int nChangePos,\n         bilingual_str& error,\n         const CCoinControl& coin_control,\n         FeeCalculation& fee_calc_out,\n         bool sign)\n {\n-    int nChangePosIn = nChangePosInOut;\n-    Assert(!tx); // tx is an out-param. TODO change the return type from bool to tx (or nullptr)\n-    bool res = CreateTransactionInternal(vecSend, tx, nFeeRet, nChangePosInOut, error, coin_control, fee_calc_out, sign);\n+    auto txr_ungrouped = CreateTransactionInternal(vecSend, nChangePos, error, coin_control, fee_calc_out, sign);\n+    if (!txr_ungrouped) return {};\n     // try with avoidpartialspends unless it's enabled already\n-    if (res && nFeeRet > 0 /* 0 means non-functional fee rate estimation */ && m_max_aps_fee > -1 && !coin_control.m_avoid_partial_spends) {\n+    if (txr_ungrouped->fee > 0 /* 0 means non-functional fee rate estimation */ && m_max_aps_fee > -1 && !coin_control.m_avoid_partial_spends) {\n         CCoinControl tmp_cc = coin_control;\n         tmp_cc.m_avoid_partial_spends = true;\n-        CAmount nFeeRet2;\n-        CTransactionRef tx2;\n-        int nChangePosInOut2 = nChangePosIn;\n         bilingual_str error2; // fired and forgotten; if an error occurs, we discard the results\n-        if (CreateTransactionInternal(vecSend, tx2, nFeeRet2, nChangePosInOut2, error2, tmp_cc, fee_calc_out, sign)) {\n+        auto txr_grouped = CreateTransactionInternal(vecSend, nChangePos, error2, tmp_cc, fee_calc_out, sign);\n+        if (txr_grouped) {\n             // if fee of this alternative one is within the range of the max fee, we use this one\n-            const bool use_aps = nFeeRet2 <= nFeeRet + m_max_aps_fee;\n-            WalletLogPrintf(\"Fee non-grouped = %lld, grouped = %lld, using %s\\n\", nFeeRet, nFeeRet2, use_aps ? \"grouped\" : \"non-grouped\");\n-            if (use_aps) {\n-                tx = tx2;\n-                nFeeRet = nFeeRet2;\n-                nChangePosInOut = nChangePosInOut2;\n-            }\n+            const bool use_aps = txr_grouped->fee <= txr_ungrouped->fee + m_max_aps_fee;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20640#discussion_r546195248",
      "id" : 546195248,
      "line" : 3127,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE5NTI0OA==",
      "original_commit_id" : "8e9266fb7ec8577c989d09937f3de958b2a0332f",
      "original_line" : 3127,
      "original_position" : 208,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 208,
      "pull_request_review_id" : 555918142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20640",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-27T19:17:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546195248",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/47615825?v=4",
         "events_url" : "https://api.github.com/users/pox/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pox/followers",
         "following_url" : "https://api.github.com/users/pox/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pox/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pox",
         "id" : 47615825,
         "login" : "pox",
         "node_id" : "MDQ6VXNlcjQ3NjE1ODI1",
         "organizations_url" : "https://api.github.com/users/pox/orgs",
         "received_events_url" : "https://api.github.com/users/pox/received_events",
         "repos_url" : "https://api.github.com/users/pox/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pox/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pox/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pox"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20640#discussion_r549154793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20640"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549154793"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks a lot for reviewing, good point! I probably was a bit over-enthusiastic in getting rid of as many variables as possible before the call to `CreateTransaction` ;-) Introducing a `RANDOM_CHANGE_POSITION` constant makes a lot of sense to me, see latest force-push of the second commit. Not sure yet if putting the constant into the header is a good idea, as it is only used for one single method and hence many modules that don't need the constant would see it as well. Probably a candidate for a follow-up PR?",
      "commit_id" : "5865c38c6a3dd6a98ff3d03ad5e49c550db49a21",
      "created_at" : "2020-12-27T19:26:21Z",
      "diff_hunk" : "@@ -215,21 +215,19 @@ Result CreateRateBumpTransaction(CWallet& wallet, const uint256& txid, const CCo\n     // We cannot source new unconfirmed inputs(bip125 rule 2)\n     new_coin_control.m_min_depth = 1;\n \n-    CTransactionRef tx_new;\n-    CAmount fee_ret;\n-    int change_pos_in_out = -1; // No requested location for change\n     bilingual_str fail_reason;\n     FeeCalculation fee_calc_out;\n-    if (!wallet.CreateTransaction(recipients, tx_new, fee_ret, change_pos_in_out, fail_reason, new_coin_control, fee_calc_out, false)) {\n+    auto txr = wallet.CreateTransaction(recipients, /* No requested location for change */ -1, fail_reason, new_coin_control, fee_calc_out, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20640#discussion_r549154793",
      "id" : 549154793,
      "in_reply_to_id" : 546194751,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1NDc5Mw==",
      "original_commit_id" : "8e9266fb7ec8577c989d09937f3de958b2a0332f",
      "original_line" : 220,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/feebumper.cpp",
      "position" : null,
      "pull_request_review_id" : 558954188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20640",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-27T19:26:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549154793",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed with the proposed changes by @pox (see https://github.com/bitcoin/bitcoin/pull/20640#discussion_r546194751), introducing new constants `RANDOM_CHANGE_POSITION` to be used as second parameter for `CWallet::CreateTransaction`.",
      "created_at" : "2020-12-27T19:29:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-751506956",
      "id" : 751506956,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20640",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MTUwNjk1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-27T19:29:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751506956",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   }
]
