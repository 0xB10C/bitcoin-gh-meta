[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20012 (rpc: Remove duplicate name and argNames from CRPCCommand by MarcoFalke)\n* #15946 (Allow maintaining the blockfilterindex when using prune by jonasschnelli)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-16T06:06:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#issuecomment-745787257",
      "id" : 745787257,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20664",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTc4NzI1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T06:06:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745787257",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550247480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550247480"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`scanblockfilters`",
      "commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "created_at" : "2020-12-30T16:14:53Z",
      "diff_hunk" : "@@ -0,0 +1,29 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the scantxoutset rpc call.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550247480",
      "id" : 550247480,
      "line" : 5,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI0NzQ4MA==",
      "original_commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/rpc_scanblockfilters.py",
      "position" : 5,
      "pull_request_review_id" : 560111078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-30T16:21:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550247480",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550247720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550247720"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe add a node without this index and test that the RPC call fails.",
      "commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "created_at" : "2020-12-30T16:15:36Z",
      "diff_hunk" : "@@ -0,0 +1,29 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the scantxoutset rpc call.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+class ScanblockfiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-blockfilterindex=1\"]]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550247720",
      "id" : 550247720,
      "line" : 12,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI0NzcyMA==",
      "original_commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "original_line" : 12,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/rpc_scanblockfilters.py",
      "position" : 12,
      "pull_request_review_id" : 560111078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-30T16:21:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550247720",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550248324"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550248324"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a bit hard to read, maybe start with `start_height = self.nodes[0].getblockheader(blockhash_new)['height']`",
      "commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "created_at" : "2020-12-30T16:17:25Z",
      "diff_hunk" : "@@ -0,0 +1,29 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the scantxoutset rpc call.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+class ScanblockfiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-blockfilterindex=1\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        addr_1 = self.nodes[0].getnewaddress()\n+        self.nodes[0].sendtoaddress(addr_1, 1.0)\n+        assert_equal(self.nodes[0].scanblockfilters([\"addr(\"+addr_1+\")\"]), [])\n+        blockhash = self.nodes[0].generate(1)[0]\n+        assert(blockhash in self.nodes[0].scanblockfilters([\"addr(\"+addr_1+\")\"]))\n+        blockhash_new = self.nodes[0].generate(1)[0]\n+        self.log.info(\"Test scanblockfilters startheight...\")\n+        assert(blockhash not in self.nodes[0].scanblockfilters([\"addr(\"+addr_1+\")\"], self.nodes[0].getblockheader(blockhash_new)['height']))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550248324",
      "id" : 550248324,
      "line" : 25,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI0ODMyNA==",
      "original_commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "original_line" : 25,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "test/functional/rpc_scanblockfilters.py",
      "position" : 25,
      "pull_request_review_id" : 560111078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-30T16:21:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550248324",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550249111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550249111"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would be good to add an object descriptor too.",
      "commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "created_at" : "2020-12-30T16:19:53Z",
      "diff_hunk" : "@@ -2284,6 +2284,108 @@ static RPCHelpMan scantxoutset()\n     };\n }\n \n+\n+static RPCHelpMan scanblockfilters()\n+{\n+    return RPCHelpMan{\"scanblockfilters\",\n+                \"\\nReturn relevant blockhashes for given descriptors.\\n\",\n+                {\n+                    {\"scanobjects\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"Array of scan objects.\\n\"\n+            \"                                  Every scan object is either a string descriptor or an object:\",\n+                        {\n+                            {\"descriptor\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"An output descriptor\"},\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"An object with output descriptor and metadata\",\n+                                {\n+                                    {\"desc\", RPCArg::Type::STR, RPCArg::Optional::NO, \"An output descriptor\"},\n+                                    {\"range\", RPCArg::Type::RANGE, /* default */ \"1000\", \"The range of HD chain indexes to explore (either end or [begin,end])\"},\n+                                },\n+                            },\n+                        },\n+                        \"[scanobjects,...]\"},\n+                    {\"startheight\", RPCArg::Type::NUM, /*default*/ \"0\", \"height to start to filter from\"},\n+                    {\"filtertype\", RPCArg::Type::STR, /*default*/ \"basic\", \"The type name of the filter\"}\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR_HEX, \"\", \"The blockhash\"},\n+                    }},\n+                RPCExamples{\n+                    HelpExampleCli(\"scanblockfilters\", \"[\\\"addr(bcrt1q4u4nsgk6ug0sqz7r3rj9tykjxrsl0yy4d0wwte)\\\"] 300000\") +",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550249111",
      "id" : 550249111,
      "line" : 2314,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI0OTExMQ==",
      "original_commit_id" : "94722b9fd07864829504f3eaa18456ef7a517da2",
      "original_line" : 2314,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 31,
      "pull_request_review_id" : 560111078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-30T16:21:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550249111",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550250917"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550250917"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is worth logging in general rather than RPC only, just like `rescanwallet`. It took a few seconds between issuing the RPC command and seeing these log entries, any idea why?",
      "commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "created_at" : "2020-12-30T16:25:04Z",
      "diff_hunk" : "@@ -2284,6 +2284,108 @@ static RPCHelpMan scantxoutset()\n     };\n }\n \n+\n+static RPCHelpMan scanblockfilters()\n+{\n+    return RPCHelpMan{\"scanblockfilters\",\n+                \"\\nReturn relevant blockhashes for given descriptors.\\n\",\n+                {\n+                    {\"scanobjects\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"Array of scan objects.\\n\"\n+            \"                                  Every scan object is either a string descriptor or an object:\",\n+                        {\n+                            {\"descriptor\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"An output descriptor\"},\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"An object with output descriptor and metadata\",\n+                                {\n+                                    {\"desc\", RPCArg::Type::STR, RPCArg::Optional::NO, \"An output descriptor\"},\n+                                    {\"range\", RPCArg::Type::RANGE, /* default */ \"1000\", \"The range of HD chain indexes to explore (either end or [begin,end])\"},\n+                                },\n+                            },\n+                        },\n+                        \"[scanobjects,...]\"},\n+                    {\"startheight\", RPCArg::Type::NUM, /*default*/ \"0\", \"height to start to filter from\"},\n+                    {\"filtertype\", RPCArg::Type::STR, /*default*/ \"basic\", \"The type name of the filter\"}\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR_HEX, \"\", \"The blockhash\"},\n+                    }},\n+                RPCExamples{\n+                    HelpExampleCli(\"scanblockfilters\", \"[\\\"addr(bcrt1q4u4nsgk6ug0sqz7r3rj9tykjxrsl0yy4d0wwte)\\\"] 300000\") +\n+                    HelpExampleRpc(\"scanblockfilters\", \"[\\\"addr(bcrt1q4u4nsgk6ug0sqz7r3rj9tykjxrsl0yy4d0wwte)\\\"] 300000\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::string filtertype_name = \"basic\";\n+    if (!request.params[2].isNull()) {\n+        filtertype_name = request.params[1].get_str();\n+    }\n+\n+    BlockFilterType filtertype;\n+    if (!BlockFilterTypeByName(filtertype_name, filtertype)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Unknown filtertype\");\n+    }\n+\n+    BlockFilterIndex* index = GetBlockFilterIndex(filtertype);\n+    if (!index) {\n+        throw JSONRPCError(RPC_MISC_ERROR, \"Index is not enabled for filtertype \" + filtertype_name);\n+    }\n+\n+    // set the stop-height\n+    const CBlockIndex* block = nullptr;\n+    {\n+        LOCK(cs_main);\n+        block = ::ChainActive().Tip();\n+        if (!request.params[1].isNull()) {\n+            block = ::ChainActive()[request.params[1].get_int()];\n+            if (!block) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Invalid stopheight\");\n+            }\n+        }\n+    }\n+    CHECK_NONFATAL(block);\n+\n+    // loop through the scan objects, add scripts to the element_set\n+    GCSFilter::ElementSet needle_set;\n+    for (const UniValue& scanobject : request.params[0].get_array().getValues()) {\n+        FlatSigningProvider provider;\n+        std::vector<CScript> scripts = EvalDescriptorStringOrObject(scanobject, provider);\n+        for (const CScript& script : scripts) {\n+            needle_set.emplace(script.begin(), script.end());\n+        }\n+    }\n+    NodeContext& node = EnsureNodeContext(request.context);\n+    UniValue ret(UniValue::VARR);\n+    const int amount_per_chunk = 10000;\n+    const CBlockIndex* start_index = block;\n+    std::vector<BlockFilter> filters;\n+    while (block) {\n+        node.rpc_interruption_point(); // allow a clean shutdown\n+        const CBlockIndex* next = nullptr;\n+        {\n+            LOCK(cs_main);\n+            next = ChainActive().Next(block);\n+        }\n+        if (start_index->nHeight+amount_per_chunk == block->nHeight || next == nullptr) {\n+            LogPrint(BCLog::RPC, \"Fetching blockfilters from height %d to height %d.\\n\", start_index->nHeight, block->nHeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550250917",
      "id" : 550250917,
      "line" : 2370,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI1MDkxNw==",
      "original_commit_id" : "94722b9fd07864829504f3eaa18456ef7a517da2",
      "original_line" : 2370,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 87,
      "pull_request_review_id" : 560115072,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-30T16:27:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550250917",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550297373"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550297373"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like the example is missing quotes\r\n```suggestion\r\n                    HelpExampleCli(\"scanblockfilters\", \"'[\\\"addr(bcrt1q4u4nsgk6ug0sqz7r3rj9tykjxrsl0yy4d0wwte)\\\"]' 300000\") +\r\n```\r\n```\r\n$ bitcoin-cli -signet scanblockfilters [\"addr(tb1qdydhyacp7tj2asc0u4mhtf6rn65dfjxclrdd7a)\"] 0\r\nerror: Error parsing JSON: [addr(tb1qdydhyacp7tj2asc0u4mhtf6rn65dfjxclrdd7a)]\r\n```\r\n```\r\n$ bitcoin-cli -signet scanblockfilters '[\"addr(tb1qdydhyacp7tj2asc0u4mhtf6rn65dfjxclrdd7a)\"]' 0\r\n[\r\n  \"0000013b318daf6e8d4c531b8293ebf800871f4220fc4b7b25cc6798ec5cb155\",\r\n  \"000001003f625cbecd53924713929b5a91b12edf4eb844f33781ecb6bb78e69b\",\r\n  \"000000840904ea8ff963d4f776c0175a622228738cdf9ebd481e3ef483ccdff0\"\r\n]\r\n",
      "commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "created_at" : "2020-12-30T19:06:18Z",
      "diff_hunk" : "@@ -2284,6 +2284,108 @@ static RPCHelpMan scantxoutset()\n     };\n }\n \n+\n+static RPCHelpMan scanblockfilters()\n+{\n+    return RPCHelpMan{\"scanblockfilters\",\n+                \"\\nReturn relevant blockhashes for given descriptors.\\n\",\n+                {\n+                    {\"scanobjects\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"Array of scan objects.\\n\"\n+            \"                                  Every scan object is either a string descriptor or an object:\",\n+                        {\n+                            {\"descriptor\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"An output descriptor\"},\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"An object with output descriptor and metadata\",\n+                                {\n+                                    {\"desc\", RPCArg::Type::STR, RPCArg::Optional::NO, \"An output descriptor\"},\n+                                    {\"range\", RPCArg::Type::RANGE, /* default */ \"1000\", \"The range of HD chain indexes to explore (either end or [begin,end])\"},\n+                                },\n+                            },\n+                        },\n+                        \"[scanobjects,...]\"},\n+                    {\"startheight\", RPCArg::Type::NUM, /*default*/ \"0\", \"height to start to filter from\"},\n+                    {\"filtertype\", RPCArg::Type::STR, /*default*/ \"basic\", \"The type name of the filter\"}\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR_HEX, \"\", \"The blockhash\"},\n+                    }},\n+                RPCExamples{\n+                    HelpExampleCli(\"scanblockfilters\", \"[\\\"addr(bcrt1q4u4nsgk6ug0sqz7r3rj9tykjxrsl0yy4d0wwte)\\\"] 300000\") +",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550297373",
      "id" : 550297373,
      "line" : 2314,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI5NzM3Mw==",
      "original_commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "original_line" : 2314,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 31,
      "pull_request_review_id" : 560168090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-30T19:42:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550297373",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550299205"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550299205"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The actual default start height currently seems to be the tip, not 0.\r\n```cpp\r\nblock = ::ChainActive().Tip();\r\n```",
      "commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "created_at" : "2020-12-30T19:13:33Z",
      "diff_hunk" : "@@ -2284,6 +2284,108 @@ static RPCHelpMan scantxoutset()\n     };\n }\n \n+\n+static RPCHelpMan scanblockfilters()\n+{\n+    return RPCHelpMan{\"scanblockfilters\",\n+                \"\\nReturn relevant blockhashes for given descriptors.\\n\",\n+                {\n+                    {\"scanobjects\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"Array of scan objects.\\n\"\n+            \"                                  Every scan object is either a string descriptor or an object:\",\n+                        {\n+                            {\"descriptor\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"An output descriptor\"},\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"An object with output descriptor and metadata\",\n+                                {\n+                                    {\"desc\", RPCArg::Type::STR, RPCArg::Optional::NO, \"An output descriptor\"},\n+                                    {\"range\", RPCArg::Type::RANGE, /* default */ \"1000\", \"The range of HD chain indexes to explore (either end or [begin,end])\"},\n+                                },\n+                            },\n+                        },\n+                        \"[scanobjects,...]\"},\n+                    {\"startheight\", RPCArg::Type::NUM, /*default*/ \"0\", \"height to start to filter from\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550299205",
      "id" : 550299205,
      "line" : 2305,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI5OTIwNQ==",
      "original_commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "original_line" : 2305,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 22,
      "pull_request_review_id" : 560168090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-30T19:36:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550299205",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550300920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550300920"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like this should be `params[2]`\r\n```suggestion\r\n        filtertype_name = request.params[2].get_str();\r\n```\r\n\r\nIn the functional test, suggest asserting that a call with \"basic\" and another with no arg return the same result:\r\n```\r\nbitcoin-cli -signet scanblockfilters \\\r\n  '[\"addr(tb1qdydhyacp7tj2asc0u4mhtf6rn65dfjxclrdd7a)\"]' 0 basic\r\n[\r\n  \"0000013b318daf6e8d4c531b8293ebf800871f4220fc4b7b25cc6798ec5cb155\",\r\n  \"000001003f625cbecd53924713929b5a91b12edf4eb844f33781ecb6bb78e69b\",\r\n  \"000000840904ea8ff963d4f776c0175a622228738cdf9ebd481e3ef483ccdff0\"\r\n]\r\n\r\nbitcoin-cli -signet scanblockfilters \\\r\n  '[\"addr(tb1qdydhyacp7tj2asc0u4mhtf6rn65dfjxclrdd7a)\"]' 0 \r\n[\r\n  \"0000013b318daf6e8d4c531b8293ebf800871f4220fc4b7b25cc6798ec5cb155\",\r\n  \"000001003f625cbecd53924713929b5a91b12edf4eb844f33781ecb6bb78e69b\",\r\n  \"000000840904ea8ff963d4f776c0175a622228738cdf9ebd481e3ef483ccdff0\"\r\n]\r\n```",
      "commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "created_at" : "2020-12-30T19:19:47Z",
      "diff_hunk" : "@@ -2284,6 +2284,108 @@ static RPCHelpMan scantxoutset()\n     };\n }\n \n+\n+static RPCHelpMan scanblockfilters()\n+{\n+    return RPCHelpMan{\"scanblockfilters\",\n+                \"\\nReturn relevant blockhashes for given descriptors.\\n\",\n+                {\n+                    {\"scanobjects\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"Array of scan objects.\\n\"\n+            \"                                  Every scan object is either a string descriptor or an object:\",\n+                        {\n+                            {\"descriptor\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"An output descriptor\"},\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"An object with output descriptor and metadata\",\n+                                {\n+                                    {\"desc\", RPCArg::Type::STR, RPCArg::Optional::NO, \"An output descriptor\"},\n+                                    {\"range\", RPCArg::Type::RANGE, /* default */ \"1000\", \"The range of HD chain indexes to explore (either end or [begin,end])\"},\n+                                },\n+                            },\n+                        },\n+                        \"[scanobjects,...]\"},\n+                    {\"startheight\", RPCArg::Type::NUM, /*default*/ \"0\", \"height to start to filter from\"},\n+                    {\"filtertype\", RPCArg::Type::STR, /*default*/ \"basic\", \"The type name of the filter\"}\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR_HEX, \"\", \"The blockhash\"},\n+                    }},\n+                RPCExamples{\n+                    HelpExampleCli(\"scanblockfilters\", \"[\\\"addr(bcrt1q4u4nsgk6ug0sqz7r3rj9tykjxrsl0yy4d0wwte)\\\"] 300000\") +\n+                    HelpExampleRpc(\"scanblockfilters\", \"[\\\"addr(bcrt1q4u4nsgk6ug0sqz7r3rj9tykjxrsl0yy4d0wwte)\\\"] 300000\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::string filtertype_name = \"basic\";\n+    if (!request.params[2].isNull()) {\n+        filtertype_name = request.params[1].get_str();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550300920",
      "id" : 550300920,
      "line" : 2321,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMwMDkyMA==",
      "original_commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "original_line" : 2321,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 38,
      "pull_request_review_id" : 560168090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-30T21:16:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550300920",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550301218"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550301218"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can be `const`\r\n```diff\r\n- std::string filtertype_name = \"basic\";\r\n- if (!request.params[2].isNull()) {\r\n-     filtertype_name = request.params[1].get_str();\r\n- }\r\n+ const std::string filtertype_name{request.params[2].isNull() ? \"basic\" : request.params[2].get_str()};\r\n```\r\n",
      "commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "created_at" : "2020-12-30T19:21:02Z",
      "diff_hunk" : "@@ -2284,6 +2284,108 @@ static RPCHelpMan scantxoutset()\n     };\n }\n \n+\n+static RPCHelpMan scanblockfilters()\n+{\n+    return RPCHelpMan{\"scanblockfilters\",\n+                \"\\nReturn relevant blockhashes for given descriptors.\\n\",\n+                {\n+                    {\"scanobjects\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"Array of scan objects.\\n\"\n+            \"                                  Every scan object is either a string descriptor or an object:\",\n+                        {\n+                            {\"descriptor\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"An output descriptor\"},\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"An object with output descriptor and metadata\",\n+                                {\n+                                    {\"desc\", RPCArg::Type::STR, RPCArg::Optional::NO, \"An output descriptor\"},\n+                                    {\"range\", RPCArg::Type::RANGE, /* default */ \"1000\", \"The range of HD chain indexes to explore (either end or [begin,end])\"},\n+                                },\n+                            },\n+                        },\n+                        \"[scanobjects,...]\"},\n+                    {\"startheight\", RPCArg::Type::NUM, /*default*/ \"0\", \"height to start to filter from\"},\n+                    {\"filtertype\", RPCArg::Type::STR, /*default*/ \"basic\", \"The type name of the filter\"}\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR_HEX, \"\", \"The blockhash\"},\n+                    }},\n+                RPCExamples{\n+                    HelpExampleCli(\"scanblockfilters\", \"[\\\"addr(bcrt1q4u4nsgk6ug0sqz7r3rj9tykjxrsl0yy4d0wwte)\\\"] 300000\") +\n+                    HelpExampleRpc(\"scanblockfilters\", \"[\\\"addr(bcrt1q4u4nsgk6ug0sqz7r3rj9tykjxrsl0yy4d0wwte)\\\"] 300000\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::string filtertype_name = \"basic\";\n+    if (!request.params[2].isNull()) {\n+        filtertype_name = request.params[1].get_str();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550301218",
      "id" : 550301218,
      "in_reply_to_id" : 550300920,
      "line" : 2321,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMwMTIxOA==",
      "original_commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "original_line" : 2321,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 38,
      "pull_request_review_id" : 560168090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-30T19:36:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550301218",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550304054"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550304054"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps also `assert_raises_rpc_error` on\r\n- \"Unknown filtertype\"\r\n- \"Index is not enabled for filtertype \" + filtertype_name\r\n- \"Invalid stopheight\"",
      "commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "created_at" : "2020-12-30T19:31:53Z",
      "diff_hunk" : "@@ -0,0 +1,29 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the scantxoutset rpc call.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+class ScanblockfiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-blockfilterindex=1\"]]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r550304054",
      "id" : 550304054,
      "in_reply_to_id" : 550247720,
      "line" : 12,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMwNDA1NA==",
      "original_commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "original_line" : 12,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/rpc_scanblockfilters.py",
      "position" : 12,
      "pull_request_review_id" : 560168090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-30T19:41:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550304054",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Seems like block filters are just a potential implementation detail/optimisation here, not part of the fundamental concept...\r\n\r\nMaybe rename it to `scanblocks` (and consider supporting a slow scan when the filters are disabled?)",
      "created_at" : "2021-01-03T21:20:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#issuecomment-753677860",
      "id" : 753677860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20664",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzY3Nzg2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-03T21:20:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753677860",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-01-06T00:11:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#issuecomment-754977795",
      "id" : 754977795,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20664",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NDk3Nzc5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-06T00:11:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754977795",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Maybe rename it to scanblocks (and consider supporting a slow scan when the filters are disabled?)\r\n\r\nI can do that. But the call doesn't scan blocks (hence your proposed name `scanblocks`). It looks for relevant block**hashes** based on descriptors.\r\n`scanblocks` doesn't sound after what this call is doing.",
      "created_at" : "2021-01-06T08:51:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#issuecomment-755169858",
      "id" : 755169858,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20664",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NTE2OTg1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-06T08:51:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/755169858",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r552445929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552445929"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice. Will adapt this.",
      "commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "created_at" : "2021-01-06T08:57:29Z",
      "diff_hunk" : "@@ -2284,6 +2284,108 @@ static RPCHelpMan scantxoutset()\n     };\n }\n \n+\n+static RPCHelpMan scanblockfilters()\n+{\n+    return RPCHelpMan{\"scanblockfilters\",\n+                \"\\nReturn relevant blockhashes for given descriptors.\\n\",\n+                {\n+                    {\"scanobjects\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"Array of scan objects.\\n\"\n+            \"                                  Every scan object is either a string descriptor or an object:\",\n+                        {\n+                            {\"descriptor\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"An output descriptor\"},\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"An object with output descriptor and metadata\",\n+                                {\n+                                    {\"desc\", RPCArg::Type::STR, RPCArg::Optional::NO, \"An output descriptor\"},\n+                                    {\"range\", RPCArg::Type::RANGE, /* default */ \"1000\", \"The range of HD chain indexes to explore (either end or [begin,end])\"},\n+                                },\n+                            },\n+                        },\n+                        \"[scanobjects,...]\"},\n+                    {\"startheight\", RPCArg::Type::NUM, /*default*/ \"0\", \"height to start to filter from\"},\n+                    {\"filtertype\", RPCArg::Type::STR, /*default*/ \"basic\", \"The type name of the filter\"}\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR_HEX, \"\", \"The blockhash\"},\n+                    }},\n+                RPCExamples{\n+                    HelpExampleCli(\"scanblockfilters\", \"[\\\"addr(bcrt1q4u4nsgk6ug0sqz7r3rj9tykjxrsl0yy4d0wwte)\\\"] 300000\") +\n+                    HelpExampleRpc(\"scanblockfilters\", \"[\\\"addr(bcrt1q4u4nsgk6ug0sqz7r3rj9tykjxrsl0yy4d0wwte)\\\"] 300000\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::string filtertype_name = \"basic\";\n+    if (!request.params[2].isNull()) {\n+        filtertype_name = request.params[1].get_str();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20664#discussion_r552445929",
      "id" : 552445929,
      "in_reply_to_id" : 550300920,
      "line" : 2321,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQ0NTkyOQ==",
      "original_commit_id" : "b245ecc148643a4d81185006c8ac3a9af09fd9f1",
      "original_line" : 2321,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 38,
      "pull_request_review_id" : 562418625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20664",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-06T08:57:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552445929",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   }
]
