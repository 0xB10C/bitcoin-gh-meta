[
   {
      "author_association" : "MEMBER",
      "body" : "Wouldn't it be possible to feed to node some addresses of python `TestNode`s (either via p2p or by putting them into the address database file when setting up the node).\r\n\r\nI haven't given it a try yet, but I'd be surprised if testing outbound connections was conceptually a hard problem to solve.",
      "created_at" : "2018-09-12T20:15:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-420782194",
      "id" : 420782194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMDc4MjE5NA==",
      "updated_at" : "2018-09-12T20:15:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420782194",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't remember the entirety of the rabbit hole I went down trying to make this work, but I believe at least one of the issues I encountered had to do with special handling for `IsLocal()` addresses in our net code.\r\n\r\nOne thing that occurs to me is that we have a couple options, we could try to rewrite our code to make it easier to test, or we could come up with a new testing environment that is able to exercise the logic.   For instance maybe launching a test that fires up nodes on different hosts (whether a dedicated cluster or some containerized thing), with some appropriate IP address assignment, would do the trick.",
      "created_at" : "2018-09-12T20:34:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-420788060",
      "id" : 420788060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMDc4ODA2MA==",
      "updated_at" : "2018-09-12T20:34:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420788060",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "In case anyone is thinking about this -- I believe #15486 is another untestable code change in our current framework.",
      "created_at" : "2019-03-01T21:47:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-468823327",
      "id" : 468823327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODgyMzMyNw==",
      "updated_at" : "2019-03-01T21:47:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468823327",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "For background on what we should test, the paper by  @EthanHeilman e.a. explains how the P2P networking works and the kinds of eclipse attack defences that were recently added: \r\nhttps://eprint.iacr.org/2015/263.pdf\r\n \r\nIn addition to the problem @sdaftuar points to about the difference between manually adding nodes with `addnode` and spontaneous connections, there's two other problems.\r\n\r\n1. The regtest nodes are able to connect to each other via P2P on the same IP but with different ports. That's insufficient for thoroughly testing the behavior because net.cpp checks `IsLocal`, and because the connection buckets are IP based. There's also no DNS seed for regtest.\r\n\r\n2. The networking code relies on real time\r\n\r\nOne approach could be a combination of regtest specific tweaks to the networking code and a few regtest specific RPC calls. The former is always scary, the latter probably fine.\r\n\r\n**Regtest specific networking tweaks** \r\n\r\nThe test framework allows 5000 (`PORT_RANGE`)  distinct port numbers. We could divide those in groups of 1000 to represent `/16 IPv4` IPv4 ranges. Modulo 100 represents the IP address. That leaves 10 nodes max that a regtest node would still consider being local.\r\n\r\nThe cryptographic hash for bucket selection would be hard coded for regtest.\r\n\r\nThe DNS resolver code could have a regtest branch that fetches a fake result from a file (which tests can populate).\r\n\r\nAdd `SetTime()` to set the time which  `GetTime()` can read.\r\n\r\nSwitch the DNS 11 second delay from `sleep_for(std::chrono::seconds(11)` to checking `SetAdjusttedTime` every 0.01 seconds until 11 \"seconds\" have passed.\r\n\r\nDitto for `CConnman::ThreadOpenConnections`; instead of the thread sleeping `std::chrono::milliseconds(500)` it could sleep much shorter and check the \"time\".\r\n\r\n**Regtest RPC calls**\r\n\r\n* `settime` calls `SetAdjusttedTime()`\r\n*  methods to get the various peer lists",
      "created_at" : "2019-03-02T15:59:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-468932953",
      "id" : 468932953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODkzMjk1Mw==",
      "updated_at" : "2019-03-02T16:00:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468932953",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I want to second this. Better test coverage and a network level mocking framework for testing Bitcoin's P2P network is something that would be immensely helpful. I started to work on it in 2015 as part of the eclipse attack paper but unfortunately I ran out of time to build it myself and no longer have the bandwidth.",
      "created_at" : "2019-03-04T16:10:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-469310515",
      "id" : 469310515,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTMxMDUxNQ==",
      "updated_at" : "2019-03-04T16:10:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469310515",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Obviously I am lacking the background, but how hard would it be to copy a python-mininode and a python-regtest-dns-seeder to a couple of 1 EUR/month vps boxes?",
      "created_at" : "2019-03-04T16:19:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-469314059",
      "id" : 469314059,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTMxNDA1OQ==",
      "updated_at" : "2019-03-04T16:19:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469314059",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Obviously whoever writes the code and does the work gets to decide, but my personal preference would be a way of replacing the network interface with a faked out network interface so that:\r\n\r\n1. A test could spin up a bunch of nodes, \r\n2. assign them fake IP addresses,\r\n3. and let them talk to each other without depending on any external systems or touching any network.\r\n\r\nIt would allow mostly deterministic tests of all sorts of complex behavior and network failures.",
      "created_at" : "2019-03-04T16:29:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-469318300",
      "id" : 469318300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2OTMxODMwMA==",
      "updated_at" : "2019-03-04T16:29:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469318300",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Is there already someone working on this ?\r\n\r\n@EthanHeilman by faking out a network interface you mean something like swapping the system-level socket interface by one of our own, which would talk to MockNetworkRouter with a set of methods on this one to simulate network failures, configure topologies, broadcast random messages (or something lighter)?\r\nObviously, would gladly take inputs from anyone !",
      "created_at" : "2019-03-14T20:16:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-473043333",
      "id" : 473043333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzA0MzMzMw==",
      "updated_at" : "2019-03-14T20:16:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473043333",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've chatted with @theuni about this a bit, and it would seem that getting `CConnman` to be self contained (as in, no reference to globals from within `CConnman` and removing the globals inside `net.cpp`) would allow us to achieve what @EthanHeilman is proposing.\r\n\r\nI would like to know what people's thoughts are on:\r\n1. @EthanHeilman's proposal above\r\n2. What's missing aside from getting `CConnman` to be self-contained\r\n\r\nIf people think this is worthwhile to move ahead on, I believe it would be a great target to motivate and more importantly focus incremental net improvements.",
      "created_at" : "2019-03-14T21:16:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-473066565",
      "id" : 473066565,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzA2NjU2NQ==",
      "updated_at" : "2019-03-14T21:16:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473066565",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@EthanHeilman Yes, I mean replacing the socket function with an interface with the same functions but that actually just routes between the local nodes. You could override the MockNetworkRouter to simulate botnet attacks, package failures, or really old nodes.",
      "created_at" : "2019-03-14T21:19:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-473067654",
      "id" : 473067654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzA2NzY1NA==",
      "updated_at" : "2019-03-14T21:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473067654",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Upon further inspection, we might be able to use something like network namespaces thru [pyroute2](https://pyroute2.org/)",
      "created_at" : "2019-03-14T22:04:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-473083133",
      "id" : 473083133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzA4MzEzMw==",
      "updated_at" : "2019-03-14T22:04:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473083133",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I love to be able to do this in unittests for net.cpp. In those environments the MockNetworkRouter would  just be a shared object injected into the components that would be talking to each other. Not saying this is the best way, but just the way I've always thought about it.",
      "created_at" : "2019-03-15T14:53:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-473317205",
      "id" : 473317205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzMxNzIwNQ==",
      "updated_at" : "2019-03-15T14:53:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473317205",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@dongcarl  I've more digged into MockNetworkRouter way, if we use pyroute2 to attach fake-addresses to node instances each embbeded in its network namespace, are we gonna be able to simulate easily as much events (packets failures, ...) than with our crafted router ?",
      "created_at" : "2019-03-15T16:50:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-473361633",
      "id" : 473361633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzM2MTYzMw==",
      "updated_at" : "2019-03-15T16:50:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473361633",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@dongcarl and I discussed this today, and I wanted to chime in here because there's a good bit of history.\r\n\r\n> Obviously whoever writes the code and does the work gets to decide, but my personal preference would be a way of replacing the network interface with a faked out network interface so that:\r\n> \r\n>     1. A test could spin up a bunch of nodes,\r\n> \r\n>     2. assign them fake IP addresses,\r\n> \r\n>     3. and let them talk to each other without depending on any external systems or touching any network.\r\n> \r\n> \r\n> It would allow mostly deterministic tests of all sorts of complex behavior and network failures.\r\n\r\nThis type of testing was almost the entire intention of the CConnman refactor, which got pretty close, and now @dongcarl has picked up lately. It is frustratingly close to being useful.\r\n\r\nThe idea, again, is to be able to run multiple networking instances inside of one bitcoind process.\r\n\r\nIt would be trivial to implement (I have it done in an ancient branch somewhere) the logic to spoof connection data inside of CConnman in order to simulate different test conditions. Phony IPs, fake latency, dropped packets, peer selection algorithm changes, etc. That's how these tests SHOULD work. Spinning up entire instances of bitcoind just to test net behavior is overkill.\r\n\r\nI really think that time and energy would be better spent on finishing up the isolated CConnman instantiation.",
      "created_at" : "2019-03-19T22:40:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-474612477",
      "id" : 474612477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NDYxMjQ3Nw==",
      "updated_at" : "2019-03-19T22:40:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/474612477",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "From my discussion with @theuni today, if we're going with the route that @EthanHeilman seems to be advocating for, we thought it best to center this work around a minimal, motivating test case that should make the rest very easy. Here's what we came up with:\r\n\r\n1. Instantiate a `CConnman` (let's call it `c1`) with a huge `nSendBufferMaxSize`\r\n2. Instantiate a `CConnman` (let's call it `c2`) with a tiny `nReceiveFloodSize`\r\n3. Start sending messages from `c1` to `c2` and ensure that the buffer size restrictions are honored.\r\n\r\nI believe being able to do this would have caught bugs like https://github.com/bitcoin/bitcoin/pull/12392. `CConnman` being instantiable like this would allow us to inspect why a `CConnman` instance might have stopped receiving data rather than just guessing based on pings and timing checks.\r\n\r\n-----\r\n\r\n> I love to be able to do this in unittests for net.cpp. In those environments the MockNetworkRouter would just be a shared object injected into the components that would be talking to each other. Not saying this is the best way, but just the way I've always thought about it.\r\n\r\nI believe that if we achieve instantiable `CConnman`, a `MockNetworkRouter` would be quite easy.",
      "created_at" : "2019-03-19T23:14:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-474620519",
      "id" : 474620519,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14210",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NDYyMDUxOQ==",
      "updated_at" : "2019-03-19T23:14:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/474620519",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   }
]
