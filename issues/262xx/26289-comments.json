[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23962](https://github.com/bitcoin/bitcoin/pull/23962) (Use `int32_t` type for transaction size/weight consistently by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-10-10T23:50:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26289#issuecomment-1273919667",
      "id" : 1273919667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26289",
      "node_id" : "IC_kwDOABII585L7niz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1273919667/reactions"
      },
      "updated_at" : "2022-10-19T10:32:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1273919667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-10-20T22:08:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26289#issuecomment-1286211972",
      "id" : 1286211972,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26289",
      "node_id" : "IC_kwDOABII585MqgmE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1286211972/reactions"
      },
      "updated_at" : "2022-10-20T22:08:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1286211972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26289#discussion_r1001810274"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001810274"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Even when this currently cannot fail (because of the no limits and search parents args), I would be more conservative and catch + log any possible result error instead of assert the result.\r\n\r\nIn this way, we keep the current behavior, and use an empty `ancestors` set instead of aborting in production if something gets changed inside `CalculateMemPoolAncestors` and we forget to update this call.",
      "commit_id" : "a425537fbfc20d87c325b5ae2f06f2597a31cf0e",
      "created_at" : "2022-10-21T13:47:08Z",
      "diff_hunk" : "@@ -394,9 +395,7 @@ void BlockAssembler::addPackageTxs(const CTxMemPool& mempool, int& nPackagesSele\n             continue;\n         }\n \n-        CTxMemPool::setEntries ancestors;\n-        std::string dummy;\n-        mempool.CalculateMemPoolAncestors(*iter, ancestors, CTxMemPool::Limits::NoLimits(), dummy, false);\n+        auto ancestors{*Assert(mempool.CalculateMemPoolAncestors(*iter, CTxMemPool::Limits::NoLimits(), /*fSearchForParents=*/false))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26289#discussion_r1001810274",
      "id" : 1001810274,
      "line" : 398,
      "node_id" : "PRRC_kwDOABII5847tmli",
      "original_commit_id" : "a425537fbfc20d87c325b5ae2f06f2597a31cf0e",
      "original_line" : 398,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/node/miner.cpp",
      "position" : 15,
      "pull_request_review_id" : 1150991801,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26289",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001810274/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-21T13:48:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001810274",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26289#discussion_r1003202320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003202320"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Interesting. I see your point re robustness, but generally, I really don't like silent failures - even when logged. I'd much rather they throw so we can more easily detect and fix unexpected behaviour as early on as possible. There are 7 instances in this PR where we do this kind of assertion - would you only want to update it here or also in the other instances? I also understand that the current behaviour is that of silent failure, so I wouldn't want to break anything with this change - but as you mention, I don't think it does, given the `NoLimits()` parameter in all of these instances.\r\n\r\nCc'ing the other reviewers in case anyone else has a view (@w0xlt @glozow @theStack @aureleoules)\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/node/miner.cpp b/src/node/miner.cpp\r\nindex 0dc50c75c..c6838aee0 100644\r\n--- a/src/node/miner.cpp\r\n+++ b/src/node/miner.cpp\r\n@@ -395,7 +395,13 @@ void BlockAssembler::addPackageTxs(const CTxMemPool& mempool, int& nPackagesSele\r\n             continue;\r\n         }\r\n \r\n-        auto ancestors{*Assert(mempool.CalculateMemPoolAncestors(*iter, CTxMemPool::Limits::NoLimits(), /*fSearchForParents=*/false))};\r\n+        auto ancestors_result{Assume(mempool.CalculateMemPoolAncestors(*iter, CTxMemPool::Limits::NoLimits(), /*fSearchForParents=*/false))};\r\n+        if (!ancestors_result) {\r\n+            LogPrintLevel(BCLog::MEMPOOL, BCLog::Level::Error, \r\n+                          \"%s: CalculateMemPoolAncestors failed unexpectedly, continuing with empty ancestor set (%s)\",\r\n+                          __func__, util::ErrorString(ancestors_result));\r\n+        }\r\n+        auto ancestors{ancestors_result.value_or(CTxMemPool::setEntries{})}; // for robustness, continue with empty ancestors if the calculation failed\r\n \r\n         onlyUnconfirmed(ancestors);\r\n         ancestors.insert(iter);\r\n```\r\n</details>\r\n\r\n_edit: now using `Assume()` in the diff as per MarcoFalke's suggestion_",
      "commit_id" : "a425537fbfc20d87c325b5ae2f06f2597a31cf0e",
      "created_at" : "2022-10-24T11:25:08Z",
      "diff_hunk" : "@@ -394,9 +395,7 @@ void BlockAssembler::addPackageTxs(const CTxMemPool& mempool, int& nPackagesSele\n             continue;\n         }\n \n-        CTxMemPool::setEntries ancestors;\n-        std::string dummy;\n-        mempool.CalculateMemPoolAncestors(*iter, ancestors, CTxMemPool::Limits::NoLimits(), dummy, false);\n+        auto ancestors{*Assert(mempool.CalculateMemPoolAncestors(*iter, CTxMemPool::Limits::NoLimits(), /*fSearchForParents=*/false))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26289#discussion_r1003202320",
      "id" : 1003202320,
      "in_reply_to_id" : 1001810274,
      "line" : 398,
      "node_id" : "PRRC_kwDOABII5847y6cQ",
      "original_commit_id" : "a425537fbfc20d87c325b5ae2f06f2597a31cf0e",
      "original_line" : 398,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/node/miner.cpp",
      "position" : 15,
      "pull_request_review_id" : 1152982732,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26289",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003202320/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-24T11:38:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003202320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26289#discussion_r1003208882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003208882"
         }
      },
      "author_association" : "MEMBER",
      "body" : "At least you'll still need to use `Assume` to abort in debug builds",
      "commit_id" : "a425537fbfc20d87c325b5ae2f06f2597a31cf0e",
      "created_at" : "2022-10-24T11:33:48Z",
      "diff_hunk" : "@@ -394,9 +395,7 @@ void BlockAssembler::addPackageTxs(const CTxMemPool& mempool, int& nPackagesSele\n             continue;\n         }\n \n-        CTxMemPool::setEntries ancestors;\n-        std::string dummy;\n-        mempool.CalculateMemPoolAncestors(*iter, ancestors, CTxMemPool::Limits::NoLimits(), dummy, false);\n+        auto ancestors{*Assert(mempool.CalculateMemPoolAncestors(*iter, CTxMemPool::Limits::NoLimits(), /*fSearchForParents=*/false))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26289#discussion_r1003208882",
      "id" : 1003208882,
      "in_reply_to_id" : 1001810274,
      "line" : 398,
      "node_id" : "PRRC_kwDOABII5847y8Cy",
      "original_commit_id" : "a425537fbfc20d87c325b5ae2f06f2597a31cf0e",
      "original_line" : 398,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/node/miner.cpp",
      "position" : 15,
      "pull_request_review_id" : 1152991981,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26289",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003208882/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-24T11:33:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003208882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26289#discussion_r1003341042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003341042"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Interesting. I see your point re robustness, but generally, I really don't like silent failures - even when logged. I'd much rather they throw so we can more easily detect and fix unexpected behaviour as early on as possible\r\n\r\nWell, at least on the mempool and validation areas, I'm on the totally opposite position.\r\nIf a result can have different meanings, then I would forcibly handle every possible outcome. We want robustness there.\r\n\r\nGenerally speaking: as the node's mempool state is built from the network, if there is a way to trigger something like this from an external source and we overseeing it (which could happen because we are humans), then an attacker could crash nodes remotely. And once that happens, there isn't a quick fix. Core isn't a common piece of software, any new version distribution and update coordination is hard.\r\n\r\nThus why I would rather be more conservative in terms of using assertions there. And instead, I would actually force us to not ignore errors paths (we could extend our result class to work similarly to the [Rust result type](https://doc.rust-lang.org/std/result/), so we are always forced to handle every possible outcome by default) or to rewrite code so it cannot fail in places that we don't expect failures.\r\n\r\nThis all comes from very bad experiences that I had in the past..\r\n\r\n> At least you'll still need to use Assume to abort in debug builds\r\n\r\n@MarcoFalke that wouldn't work, the result class internally asserts that the value exists when the `operator*()` is called (the upper `Assert()` call is actually redundant).",
      "commit_id" : "a425537fbfc20d87c325b5ae2f06f2597a31cf0e",
      "created_at" : "2022-10-24T13:51:33Z",
      "diff_hunk" : "@@ -394,9 +395,7 @@ void BlockAssembler::addPackageTxs(const CTxMemPool& mempool, int& nPackagesSele\n             continue;\n         }\n \n-        CTxMemPool::setEntries ancestors;\n-        std::string dummy;\n-        mempool.CalculateMemPoolAncestors(*iter, ancestors, CTxMemPool::Limits::NoLimits(), dummy, false);\n+        auto ancestors{*Assert(mempool.CalculateMemPoolAncestors(*iter, CTxMemPool::Limits::NoLimits(), /*fSearchForParents=*/false))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26289#discussion_r1003341042",
      "id" : 1003341042,
      "in_reply_to_id" : 1001810274,
      "line" : 398,
      "node_id" : "PRRC_kwDOABII5847zcTy",
      "original_commit_id" : "a425537fbfc20d87c325b5ae2f06f2597a31cf0e",
      "original_line" : 398,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/node/miner.cpp",
      "position" : 15,
      "pull_request_review_id" : 1153180496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26289",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003341042/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-24T13:51:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003341042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26289#discussion_r1003347640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26289"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003347640"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> @MarcoFalke that wouldn't work, the result class internally asserts that the value exists when the operator*() is called (the upper Assert() call is actually redundant).\r\n\r\nSure, but not when `*` is replaced with `value_or`.",
      "commit_id" : "a425537fbfc20d87c325b5ae2f06f2597a31cf0e",
      "created_at" : "2022-10-24T13:56:59Z",
      "diff_hunk" : "@@ -394,9 +395,7 @@ void BlockAssembler::addPackageTxs(const CTxMemPool& mempool, int& nPackagesSele\n             continue;\n         }\n \n-        CTxMemPool::setEntries ancestors;\n-        std::string dummy;\n-        mempool.CalculateMemPoolAncestors(*iter, ancestors, CTxMemPool::Limits::NoLimits(), dummy, false);\n+        auto ancestors{*Assert(mempool.CalculateMemPoolAncestors(*iter, CTxMemPool::Limits::NoLimits(), /*fSearchForParents=*/false))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26289#discussion_r1003347640",
      "id" : 1003347640,
      "in_reply_to_id" : 1001810274,
      "line" : 398,
      "node_id" : "PRRC_kwDOABII5847zd64",
      "original_commit_id" : "a425537fbfc20d87c325b5ae2f06f2597a31cf0e",
      "original_line" : 398,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/node/miner.cpp",
      "position" : 15,
      "pull_request_review_id" : 1153190071,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26289",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003347640/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-24T13:57:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003347640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
