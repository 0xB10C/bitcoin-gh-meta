[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [theuni](https://github.com/bitcoin/bitcoin/pull/26296#issuecomment-1289657388), [dergoegge](https://github.com/bitcoin/bitcoin/pull/26296#issuecomment-1321868448) |\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25797](https://github.com/bitcoin/bitcoin/pull/25797) (build: Add CMake-based build system by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-10-12T15:07:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26296#issuecomment-1276336114",
      "id" : 1276336114,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26296",
      "node_id" : "IC_kwDOABII585ME1fy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276336114/reactions"
      },
      "updated_at" : "2022-11-21T10:56:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276336114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If this requires clang-15, I'd prefer to wait until that is backported to Ubuntu Jammy instead of hopping the short-term releases.",
      "created_at" : "2022-10-12T15:13:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26296#issuecomment-1276344403",
      "id" : 1276344403,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26296",
      "node_id" : "IC_kwDOABII585ME3hT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276344403/reactions"
      },
      "updated_at" : "2022-10-12T15:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276344403",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If this requires clang-15, I'd prefer to wait until that is backported to Ubuntu Jammy instead of hopping the short-term releases.\r\n\r\nThis doesn't actually require LLVM 15, it's just that the `run-clang-tidy` script shipped with LLVM 15 has [support for passing `-load` arguments](https://github.com/llvm/llvm-project/commit/b1f1688e90b22dedc829f5abc9a912f18c034fbc) through to clang-tidy.\r\n\r\nI've dropped the Kinetic / LLVM 15 bump, in favour of a different approach; patching `-load` support into the llvm 14 `run-clang-tidy` script.",
      "created_at" : "2022-10-24T10:45:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26296#issuecomment-1288843472",
      "id" : 1288843472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26296",
      "node_id" : "IC_kwDOABII585M0jDQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1288843472/reactions"
      },
      "updated_at" : "2022-10-24T10:45:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1288843472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK (obviously). Thought dump below.\r\n\r\nA few things worth considering when it comes to these plugins:\r\n- They do exactly what you tell them to do - no more and no less.\r\n- Tests are really important\r\n- We may want different checks for certain parts of the code.\r\n\r\nElaborating:\r\n\r\nc++ is complicated, so defining compiler rules is also complicated. Taking this code for a trivial example:\r\n```c++\r\nstruct A{};\r\nvoid func()\r\n{\r\n    A foo;\r\n    const A bar;\r\n}\r\n```\r\nIn testing, one may find that the following query works to find all declarations of type A:\r\n`varDecl(hasType(asString(\"struct A\")))`\r\nHowever, this will find only the non-const-qualified `foo` and not `bar`.\r\n\r\nInstead, we'd want something more like: `varDecl(hasType(cxxRecordDecl(hasName(\"A\"))))`\r\n\r\nI'm mentioning this to try to demonstrate what I meant by \"they do exactly what you tell them to\". It's quite common (especially when just getting started) to end up with an overly-broad or unnecessarily specific query. The first query would appear to be fine if a `const A` is not used anywhere. The best defense against this from what I can tell is adding a test for each failing corner-case.\r\n\r\nSo I think we'll likely want some pretty thorough documentation that states exactly what the check is intended to do. Additionally, we'll want tests that verify those intentions. In the case of the plugin here, I have added some loose checks here but nothing automated: https://github.com/theuni/bitcoin-tidy/blob/main/test_desig_init.cpp . An example of a corner-case that wasn't caught at first with this check is included here: nested structs with uninitialized members.\r\n\r\ntl;dr: before merge, I think we'll want to add a mini test suite to the plugin repo that allows us to verify that checks are working as defined/intended. Additionally, there will need to be some understanding that checks will likely require refinement over time as new corner cases are exposed.\r\n\r\n> - We may want different checks for certain parts of the code.\r\n\r\nThis isn't important for now, but I suspect that the infrastructure for this will end up being more complicated eventually. The obvious outlier (imo) is libbitcoinkernel, where we may want to add more strict checks that other parts of the code (bitcoin-qt for ex) aren't required to abide by.",
      "created_at" : "2022-10-24T21:45:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26296#issuecomment-1289657388",
      "id" : 1289657388,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26296",
      "node_id" : "IC_kwDOABII585M3pws",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1289657388/reactions"
      },
      "updated_at" : "2022-10-24T21:45:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1289657388",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2022-11-21T10:55:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26296#issuecomment-1321868448",
      "id" : 1321868448,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26296",
      "node_id" : "IC_kwDOABII585Oyhyg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1321868448/reactions"
      },
      "updated_at" : "2022-11-21T10:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1321868448",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   }
]
