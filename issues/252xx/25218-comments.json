[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-05-26T00:46:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1138021445",
      "id" : 1138021445,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585D1NRF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138021445/reactions"
      },
      "updated_at" : "2022-05-26T00:46:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138021445",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25273](https://github.com/bitcoin/bitcoin/pull/25273) (wallet: Pass through transaction locktime and preset input sequences and scripts to CreateTransaction by achow101)\n* [#25269](https://github.com/bitcoin/bitcoin/pull/25269) (wallet: re-activate the not triggered  \"AmountWithFeeExceedsBalance\" error by furszy)\n* [#25234](https://github.com/bitcoin/bitcoin/pull/25234) (bench: add benchmark for wallet 'AvailableCoins' function. by furszy)\n* [#24897](https://github.com/bitcoin/bitcoin/pull/24897) ([Draft / POC] Silent Payments by w0xlt)\n* [#23444](https://github.com/bitcoin/bitcoin/pull/23444) (fuzz: Add regression test for wallet crash by MarcoFalke)\n* [#19602](https://github.com/bitcoin/bitcoin/pull/19602) (wallet: Migrate legacy wallets to descriptor wallets by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-05-26T09:02:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1138321489",
      "id" : 1138321489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585D2WhR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138321489/reactions"
      },
      "updated_at" : "2022-06-21T19:09:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138321489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-05-26T19:48:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1138948586",
      "id" : 1138948586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585D4vnq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138948586/reactions"
      },
      "updated_at" : "2022-05-26T19:48:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138948586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "rebased, conflicts solved.",
      "created_at" : "2022-05-27T12:57:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1139594490",
      "id" : 1139594490,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585D7NT6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1139594490/reactions"
      },
      "updated_at" : "2022-05-27T12:57:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1139594490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This basically seems like a good design.\r\n\r\nIn the simple case, you call a function and it can either succeed or fail, and if it fails it will provide an error string. In this case, the function returns `OperationResult` which contains the information packaged up in a standard format.\r\n\r\nIn the slightly more complicated case, the function has a return value. Maybe it's an informational return value, or maybe it's a return value with details about errors if the caller needs to handle different errors in different ways. Either way, `CallResult<T>` can package up the result type with the error string, and return the information a standard format.\r\n\r\nSome design questions / things I'm not sure about:\r\n\r\n- Can `OperationResult` `bool m_res` member be dropped? It seems like just having a single `std::optional<bilingual_str> m_error` member without the `bool` would provide a more minimal and unambiguous version of that class. Treating nullopt case as success, and non-nullopt case as error would avoid the need for the `bool`.\r\n\r\n- Maybe `OperationResult` type should be replaced with `CallResult<void>`, just have one result class instead of two classes\r\n\r\n- Maybe result classes should provide a standard way to chain errors. If some inner function returns an error string, the caller might want to add its own error string placing the error in context. I think we also have some wallet code that returns lists of warnings and lists of errors, so it's not clear if this result classes here would want to expand to handle this kind of thing, or they should just focus on simple cases.\r\n\r\nNo need to resolve these questions to merge the PR, I think. Can add result classes now, and experiment with using them, and add/remove features as needed.",
      "created_at" : "2022-06-16T19:37:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1158062263",
      "id" : 1158062263,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FBqC3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1158062263/reactions"
      },
      "updated_at" : "2022-06-16T19:37:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1158062263",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-06-16T19:42:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1158065992",
      "id" : 1158065992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FBq9I",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1158065992/reactions"
      },
      "updated_at" : "2022-06-16T19:42:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1158065992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I like this rust-inspired idea.\r\nOne additional idea might be to parametrize Result on both the result and error type (in case it is not always a string). ",
      "created_at" : "2022-06-16T22:10:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1158182313",
      "id" : 1158182313,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FCHWp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1158182313/reactions"
      },
      "updated_at" : "2022-06-16T22:10:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1158182313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I also wonder why this needs three members and 6 constructors. Can this be implemented in less code by just using a `std::variant` with two types?\r\n\r\n\r\nGoing to the extreme, with just two lines of code:\r\n\r\n```cpp\r\ntemplate <typename Obj, typename Err>\r\nusing CallResult = std::variant<Obj, Err>;",
      "created_at" : "2022-06-17T06:30:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1158539008",
      "id" : 1158539008,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FDecA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1158539008/reactions"
      },
      "updated_at" : "2022-06-17T06:30:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1158539008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Not sure what is wrong with GitHub. This absolutely has a merge conflict, but it is not detected by GitHub.",
      "created_at" : "2022-06-21T05:29:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161282532",
      "id" : 1161282532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FN8Pk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161282532/reactions"
      },
      "updated_at" : "2022-06-21T05:29:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161282532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing for now due to the GitHub bug. You can open a new pull after you rebased it, or ask us to reopen this one.",
      "created_at" : "2022-06-21T05:31:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161283606",
      "id" : 1161283606,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FN8gW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161283606/reactions"
      },
      "updated_at" : "2022-06-21T05:31:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161283606",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "hmm, @MarcoFalke I just rebased it locally and didn't have any merge conflict.",
      "created_at" : "2022-06-21T12:38:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161693314",
      "id" : 1161693314,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FPgiC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161693314/reactions"
      },
      "updated_at" : "2022-06-21T12:38:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161693314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It probably depends on the version of git, as they regularly change the merge algorithm.",
      "created_at" : "2022-06-21T12:52:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161707416",
      "id" : 1161707416,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FPj-Y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161707416/reactions"
      },
      "updated_at" : "2022-06-21T12:52:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161707416",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "k np, thanks for re-opening it.\r\nI actually have been working on your `std::variant` comment the past days (great point), wanted to finish wrapping up the idea properly before rebase this branch.",
      "created_at" : "2022-06-21T12:57:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161712996",
      "id" : 1161712996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FPlVk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161712996/reactions"
      },
      "updated_at" : "2022-06-21T12:57:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161712996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "FWIW, I do not think the std::variant / rust comments are a good idea. I see the main benefit of this PR *not* as providing a way of returning structured results and errors, but as a way of returning displayable and loggable error strings in a convenient way, and a way of replacing ad-hoc `bilingual_str& error` and `std::vector<bilingual_str>& warnings` output parameters with a more consistent and streamlined return mechanism.\r\n\r\nI don't think it is a good idea for the internal `bilingual_str` error type to be customizable, or for it to be directly exposed to callers. I think the internal `bilingual_str` error field that is private and has convenient constructors and accessors in 9ba14ec845a364396b2a364c02dd17043bf5a678 is a good starting design. In the future, the internal type could become more complex if we decide to add support for chaining errors, or passing warnings along with errors.\r\n\r\nRust-style `std::variant` style result types that allow returning different success and error states with data attached are great, but they are already compatible with this PR in its current form. If you want a `std::variant` return type, you can use `CallResult<std::variant<...>>`. There should be no need or benefit to making `CallResult` into a `std::variant`",
      "created_at" : "2022-06-21T14:43:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161843649",
      "id" : 1161843649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FQFPB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161843649/reactions"
      },
      "updated_at" : "2022-06-21T14:43:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161843649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> don't think it is a good idea for the internal bilingual_str error type to be customizable, or for it to be directly exposed to callers. I think the internal bilingual_str error field that is private and has convenient constructors and accessors in https://github.com/bitcoin/bitcoin/commit/9ba14ec845a364396b2a364c02dd17043bf5a678 is a good starting design. In the future, the internal type could become more complex if we decide to add support for chaining errors, or passing warnings along with errors.\r\n\r\nHow would you achieve this without providing the option to `<template>` on the error type. Currently in code, some places use an error string only, some use error+warnings. If the class here only accommodates one type, it can not be used in the other place.\r\n\r\n> Rust-style std::variant style result types that allow returning different success and error states with data attached are great, but they are already compatible with this PR in its current form. If you want a std::variant return type, you can use CallResult<std::variant<...>>. There should be no need or benefit to making CallResult into a std::variant\r\n\r\nNot sure how this would work if I wanted to write a method that calculates the sum, unless it is not possible, in which case it should provide the reason.\r\n\r\nCurrently I could write:\r\n\r\n```cpp\r\nenum class ArithError{ OVERFLOW, UNDERFLOW};\r\nstd::variant<int, ArithErr> sum(int, int);\r\n```\r\n\r\nHowever, the downside is that the calling code would need to unwrap the variant verbosely.\r\n\r\nI don't see how\r\n\r\n```cpp\r\nCallResult<std::variant<int,ArithErr>> sum(int,int);\r\n```\r\n\r\nmakes any sense for the caller",
      "created_at" : "2022-06-21T14:55:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161857704",
      "id" : 1161857704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FQIqo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161857704/reactions"
      },
      "updated_at" : "2022-06-21T14:55:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161857704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think this result class is helpful (or hurtful) for low level level functions that compute sums and need to return structured result data to callers. I think this result class is more useful for high level functions that load wallets and create transactions and refill keypools and need to return human readable results and diagnostics to end-users.\r\n\r\n> > In the future, the internal type could become more complex if we decide to add support for chaining errors, or passing warnings along with errors.\r\n> \r\n> How would you achieve this without providing the option to `<template>` on the error type. Currently in code, some places use an error string only, some use error+warnings. If the class here only accommodates one type, it can not be used in the other place.\r\n\r\nThe type can change in the future and the API can degrade gracefully. Version 1 of this class in this PR just lets function return simple error strings and lets callers display or log them or use them in RPC results. Version 2 of this class in a future PR might add support for multiple errors or chained errors. Callers of version 2 result class could update their code to handle multiple errors in separate strings, or they could continue asking for a single error and get multiple errors in a single string. Version 3 of this class in a future-future PR might add support for warnings. Callers of version 3 result class could ask for the warning separately, or they could keep just asking for errors, and get the warnings returned as errors.\r\n\r\nThe class just gets rid of `bilingual_str& error` output parameters for now, but can grow and become more full featured in the future.\r\n\r\n> > Rust-style std::variant style result types that allow returning different success and error states with data attached are great, but they are already compatible with this PR in its current form. If you want a std::variant return type, you can use CallResult<std::variant<...>>. There should be no need or benefit to making CallResult into a std::variant\r\n> \r\n> Not sure how this would work if I wanted to write a method that calculates the sum, unless it is not possible, in which case it should provide the reason.\r\n\r\nI don't think you would use this result class in a method that calculates a sum, unless you want that method to return loggable and displayable error strings as well as sums.\r\n\r\n> Currently I could write:\r\n> \r\n> ```c++\r\n> enum class ArithError{ OVERFLOW, UNDERFLOW};\r\n> std::variant<int, ArithErr> sum(int, int);\r\n> ```\r\n> \r\n> However, the downside is that the calling code would need to unwrap the variant verbosely.\r\n\r\nRight. I don't think think there will be a good solution to verbosity until pattern matching features are added to c++. I just think this is orthogonal to anything in this PR. It is certainly orthogonal to anything in 9ba14ec845a364396b2a364c02dd17043bf5a678. If you want your sum function to return overflow/underflow/int, std::variant is your best bet probably, and I don't think this PR or another PR is going to give you something better.",
      "created_at" : "2022-06-21T15:23:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161910489",
      "id" : 1161910489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FQVjZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161910489/reactions"
      },
      "updated_at" : "2022-06-21T15:23:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161910489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't think this PR or another PR is going to give you something better.\r\n\r\nI'd guess that pattern matching (or emulating it verbosely) might be overkill to handle two cases. Though, if this is ever needed, it can be implemented in the future and this pull can be used as-is for now.",
      "created_at" : "2022-06-21T15:35:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161924519",
      "id" : 1161924519,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FQY-n",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161924519/reactions"
      },
      "updated_at" : "2022-06-21T15:35:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161924519",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "There might be some tricks that give a limited form of pattern matching. For example could replace enum in previous example with:\r\n\r\n```c++\r\nstruct OverflowError {};\r\nstruct UnderflowError {};\r\nstd::variant<int, OverflowError, UnderflowError> sum(int, int);\r\n```\r\n\r\nand use [`std::visit` + `util::Overloaded`lambdas trick](https://github.com/bitcoin/bitcoin/blob/34869114a72435b9d8364385abaefed70d703fa8/src/wallet/transaction.h#L89-L95) to handle the different cases.\r\n",
      "created_at" : "2022-06-21T15:46:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161936770",
      "id" : 1161936770,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FQb-C",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161936770/reactions"
      },
      "updated_at" : "2022-06-21T15:46:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161936770",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yeah, but that's ugly because the lambdas must have the same return type",
      "created_at" : "2022-06-21T15:59:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161952420",
      "id" : 1161952420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FQfyk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161952420/reactions"
      },
      "updated_at" : "2022-06-21T15:59:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161952420",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Yeah, but that's ugly because the lambdas must have the same return type\r\n\r\nYes probably the lambdas would return void and just execute code and modify local variables, like a `switch` statement. But like you said this is overkill for two cases. `std::variant` would be useful when there are more cases that need to be handled in many different ways.",
      "created_at" : "2022-06-21T16:20:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1161975272",
      "id" : 1161975272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FQlXo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161975272/reactions"
      },
      "updated_at" : "2022-06-21T16:21:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161975272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "A bit late but here.\r\n\r\n> and use [std::visit + util::Overloadedlambdas trick](https://github.com/bitcoin/bitcoin/blob/34869114a72435b9d8364385abaefed70d703fa8/src/wallet/transaction.h#L89-L95) to handle the different cases.\r\n\r\nI was actually experimenting with that (and few more things). Essentially, was making a generic wrapper class for std::variant to eliminate the extra verbosity that comes with it + adding the ability to catch, at compile-time, any not handled function outcome/s.\r\n\r\nBut.. haven't finished the experiment yet (been jumping across other findings).\r\n\r\nFrom my side, if you guys are happy with the current PR state, we could move forward with it. At the end, it cleans up a lot of boilerplate code, can easily be used in a lot of places right away, and encapsulates the result object mechanics into its own class (which, while the class interface is good, as ryanofsky said, it can be upgraded/changed in the future without any trouble).\r\nNote: decision will not stop me from continuing with the experiment.",
      "created_at" : "2022-06-24T18:17:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1165820370",
      "id" : 1165820370,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FfQHS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165820370/reactions"
      },
      "updated_at" : "2022-06-24T18:25:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165820370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "My main suggestions for improvement are here: https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1158062263. I think  `bool m_res` member should be dropped and `m_error`member  being non-empty should be the only condition that determines whether the result is an error. Also just IMO but I think naming could be improved. I'd change `CallResult<T>` to `util::Result<T>` and `OperationResult` to `util::Result<void>`. I think a short name for the class is better so code is concise is and easy to read. Also I don't think when you are writing code you should need to think about vocabulary and whether a function that returns a value is considered an \"operation\" or an \"call\".",
      "created_at" : "2022-06-24T18:53:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1165846070",
      "id" : 1165846070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FfWY2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165846070/reactions"
      },
      "updated_at" : "2022-06-24T18:53:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165846070",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> My main suggestions for improvement are here: https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1158062263. I think bool m_res member should be dropped and m_error member being non-empty should be the only condition that determines whether the result is an error.\r\n\r\nYeah ok ðð¼ .\r\n\r\nWouldn't be bad to think further about the \"result code\" notion there (where any <=0 value means \"failed\") to not make the optional string value a requirement (depends on where the function that uses the `Result` class is located, layer's wise, we might don't want to involve strings in the result and just error codes so then the upper layers can translate the error accordantly to a more informational string). --> Note: and I'm not targeting to low-level arithmetic functions, I'm thinking about middleware functions that are called from different places and mean a slightly different thing depending from where they are called.\r\n\r\nBut.. I'm just thinking out loud.. this could be implemented in the future using a generic error type as well (if needed).\r\n\r\n> Also just IMO but I think naming could be improved. I'd change CallResult<T> to util::Result<T> and OperationResult to util::Result<void>. I think a short name for the class is better so code is concise is and easy to read. Also I don't think when you are writing code you should need to think about vocabulary and whether a function that returns a value is considered an \"operation\" or an \"call\".\r\n\r\nYeah agree, I didn't use the \"Result\" term before because it's being used in other places and didn't want to clash with them: `feebumper.h` has a `Result` enum and `nanobench.h` has a `Result` class.\r\nBut.. just saw that those are under different namespaces, so all good.",
      "created_at" : "2022-06-24T20:00:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25218#issuecomment-1165894089",
      "id" : 1165894089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
      "node_id" : "IC_kwDOABII585FfiHJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165894089/reactions"
      },
      "updated_at" : "2022-06-24T20:01:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165894089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   }
]
