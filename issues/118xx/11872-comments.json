[
   {
      "author_association" : "OWNER",
      "body" : "Vague concept ACK that accepting a list instead of a dict should be supported. I have little opinion on how to do that in a backward compatible way.",
      "created_at" : "2017-12-12T05:12:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-350947402",
      "id" : 350947402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-12T05:17:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350947402",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\nI think the backward compatibility is solved in a good way... not sure if it should be mentioned somewhere (at least in some comments)",
      "created_at" : "2017-12-12T06:10:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-350955121",
      "id" : 350955121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-12T06:10:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350955121",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Should use deprecated flag to enable backward compatibility?",
      "created_at" : "2017-12-12T07:22:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-350966576",
      "id" : 350966576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-12T07:22:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350966576",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11872#discussion_r156337084"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11872"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156337084"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This will raise `JSON value is not an object as expected` which doesn't match with the new signature. I suggest to switch to `isObject()` above so that `get_array` throws. In that case, it is not necessary to call`get_obj()`:\r\n```cpp\r\n... = outputs_is_object ? request.params[1] : request.params[1].get_array();\r\n```",
      "commit_id" : "fa961b9bca444533881aa495ae71c062ff68eab4",
      "created_at" : "2017-12-12T11:16:09Z",
      "diff_hunk" : "@@ -349,14 +355,25 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"data\\\\\\\":\\\\\\\"00010203\\\\\\\"}\\\"\")\n             + HelpExampleRpc(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\", \\\"{\\\\\\\"address\\\\\\\":0.01}\\\"\")\n             + HelpExampleRpc(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\", \\\"{\\\\\\\"data\\\\\\\":\\\\\\\"00010203\\\\\\\"}\\\"\")\n+            // clang-format on\n         );\n+    }\n \n-    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ, UniValue::VNUM}, true);\n+    RPCTypeCheck(request.params,\n+        {\n+            UniValue::VARR,\n+            UniValueType(), // ARR or OBJ, checked later\n+            UniValue::VNUM\n+        },\n+        true);\n     if (request.params[0].isNull() || request.params[1].isNull())\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, arguments 1 and 2 must be non-null\");\n \n     UniValue inputs = request.params[0].get_array();\n-    UniValue sendTo = request.params[1].get_obj();\n+    const bool outputs_is_array = request.params[1].isArray();\n+    UniValue outputs = outputs_is_array ?\n+                           request.params[1].get_array() :\n+                           request.params[1].get_obj();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#discussion_r156337084",
      "id" : 156337084,
      "original_commit_id" : "fa961b9bca444533881aa495ae71c062ff68eab4",
      "original_position" : 59,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 59,
      "pull_request_review_id" : 82795869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11872",
      "updated_at" : "2017-12-12T11:18:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156337084",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Concept ACK, I've frequently wondered why this was a dictionary.\r\n\r\n> Should use deprecated flag to enable backward compatibility?\r\n\r\nI think both ways should be supported for the foreseeable future, no need to deprecate anything right now. There's no reason to break software for this.",
      "created_at" : "2017-12-12T11:16:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-351021736",
      "id" : 351021736,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-12T11:16:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351021736",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj so just add a note that the parameter as object is deprecated?",
      "created_at" : "2017-12-12T11:20:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-351022736",
      "id" : 351022736,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-12T11:20:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351022736",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> TODO: Needs tests\r\n\r\n~~Something that I guess needs to be tested explicitly now: duplicate address causes failure (or is that an actual use-case? we don't allow multiple outputs to the same address in the wallet, at least).~~\r\nEdit, a check and error for that already exists, #11877 adds a test.",
      "created_at" : "2017-12-12T11:27:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-351024184",
      "id" : 351024184,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-12T15:08:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351024184",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Note that this didn't break any functional test, so it should be compatible with the previous interface.",
      "created_at" : "2017-12-12T21:16:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-351197040",
      "id" : 351197040,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-12T21:16:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351197040",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I'll review once there are tests.\r\n\r\nHave you seen luke-jr's change to allow RPC Type Checking against more than one type. It's in commit https://github.com/bitcoin/bitcoin/pull/11660/commits/8334875d8dcebab3841e42ab25e4e1d5247070a6 in #11660. Would it be useful here?",
      "created_at" : "2017-12-12T21:42:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-351204136",
      "id" : 351204136,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-12T21:42:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351204136",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11872#discussion_r156535969"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11872"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156535969"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you provide code to reproduce that throw, please. When I tested it a day ago in the gui, it didn't throw.",
      "commit_id" : "fa961b9bca444533881aa495ae71c062ff68eab4",
      "created_at" : "2017-12-13T00:31:50Z",
      "diff_hunk" : "@@ -349,14 +355,25 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"data\\\\\\\":\\\\\\\"00010203\\\\\\\"}\\\"\")\n             + HelpExampleRpc(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\", \\\"{\\\\\\\"address\\\\\\\":0.01}\\\"\")\n             + HelpExampleRpc(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\", \\\"{\\\\\\\"data\\\\\\\":\\\\\\\"00010203\\\\\\\"}\\\"\")\n+            // clang-format on\n         );\n+    }\n \n-    RPCTypeCheck(request.params, {UniValue::VARR, UniValue::VOBJ, UniValue::VNUM}, true);\n+    RPCTypeCheck(request.params,\n+        {\n+            UniValue::VARR,\n+            UniValueType(), // ARR or OBJ, checked later\n+            UniValue::VNUM\n+        },\n+        true);\n     if (request.params[0].isNull() || request.params[1].isNull())\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, arguments 1 and 2 must be non-null\");\n \n     UniValue inputs = request.params[0].get_array();\n-    UniValue sendTo = request.params[1].get_obj();\n+    const bool outputs_is_array = request.params[1].isArray();\n+    UniValue outputs = outputs_is_array ?\n+                           request.params[1].get_array() :\n+                           request.params[1].get_obj();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#discussion_r156535969",
      "id" : 156535969,
      "in_reply_to_id" : 156337084,
      "original_commit_id" : "fa961b9bca444533881aa495ae71c062ff68eab4",
      "original_position" : 59,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : 59,
      "pull_request_review_id" : 83029557,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11872",
      "updated_at" : "2017-12-13T00:31:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156535969",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Why? Invalid parameter, duplicated address is thrown.\r\n\r\nNot when the dict implementation eats duplicate keys. This is at least the case for python's dict and javascript's dict.\r\n\r\n> Why does it matters?\r\n\r\nThe outputs structure is a vector, i.e. sorted in the bitcoin protocol, thus one could falsely assume that creating a raw transaction via `createrawtransaction` populates that vector in the same order as the outputs are typed. \r\n\r\n> Have you seen luke-jr's change to allow RPC Type Checking against more than one type. It's in commit 8334875 in #11660. Would it be useful here?\r\n\r\nYes, that could be useful. Though out of scope for this pull, imo. I am calling either `get_array` or `get_obj`, both of which throw on invalid type. So I am pretty sure I don't need to pull in further features.\r\n\r\nC.f. https://dev.visucore.com/bitcoin/doxygen/univalue__get_8cpp_source.html#l00141",
      "created_at" : "2017-12-13T00:38:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-351242893",
      "id" : 351242893,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-13T00:38:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351242893",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> Not when the dict implementation eats duplicate keys. This is at least the case for python's dict and javascript's dict.\r\n\r\nNormally whatever dict/object implementation is on the client-side will eat it.\r\nTo be able pass duplicate keys, the clients need to some way emit an array as a JSON object.\r\nThat's absolutely against the JSON spec, just like expecting object attributes to be emitted in a certain order. To quote myself from IRC:\r\n\r\n> \\<wumpus\\> FWIW in principle it is already possible to specify the order of outputs, but only if the client-side JSON library can emit ordered dictionaries. Python's can do this when you use Collections.OrderedDict() instead of a dictionary. The server-side (univalue) won't reorder dictionaries. But using an array is conforming to the spec instead of 'it happens to work'.\r\n\r\n> Note that this didn't break any functional test, so it should be compatible with the previous interface.\r\n\r\nIt seems to break Travis, any idea why (or is this another fluke?).\r\n",
      "created_at" : "2017-12-13T05:49:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-351290268",
      "id" : 351290268,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-13T06:28:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351290268",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It seems to break Travis, any idea why (or is this another fluke?).\r\n\r\nNo, not a random Travis failure. This rpc unit test is broken:\r\n\r\n```\r\nBOOST_CHECK_THROW(CallRPC(\"createrawtransaction [] []\"), std::runtime_error);\r\n```\r\n(src/test/rpc_tests.cpp, L55)\r\n\r\nsince `createrawtransaction` can now take an array as the second argument.",
      "created_at" : "2017-12-13T12:48:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-351381708",
      "id" : 351381708,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-13T12:48:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351381708",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I will rebase and fixup all of this when the other createrawtransaction test are merged.",
      "created_at" : "2017-12-13T14:32:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-351407918",
      "id" : 351407918,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11872",
      "updated_at" : "2017-12-13T14:32:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351407918",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
