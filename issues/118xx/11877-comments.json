[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Relates to #11872 (https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-351024184).",
      "created_at" : "2017-12-12T15:05:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11877#issuecomment-351078061",
      "id" : 351078061,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11877",
      "updated_at" : "2017-12-12T15:06:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351078061",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156392203"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156392203"
         }
      },
      "author_association" : "OWNER",
      "body" : "So there is already a check for duplicated address?\r\nThat's great!\r\n",
      "commit_id" : "0df137b8c719a904c792240a0e373ca38c334443",
      "created_at" : "2017-12-12T15:06:34Z",
      "diff_hunk" : "@@ -39,6 +49,41 @@ def run_test(self):\n         self.nodes[0].generate(5)\n         self.sync_all()\n \n+        # Test `createrawtransaction` required parameters\n+        assert_raises_rpc_error(-1, \"createrawtransaction\", self.nodes[0].createrawtransaction)\n+        assert_raises_rpc_error(-1, \"createrawtransaction\", self.nodes[0].createrawtransaction, [])\n+\n+        # Test `createrawtransaction` invalid extra parameters\n+        assert_raises_rpc_error(-1, \"createrawtransaction\", self.nodes[0].createrawtransaction, [], {}, 0, False, 'foo')\n+\n+        # Test `createrawtransaction` invalid `inputs`\n+        txid = '1d1d4e24ed99057e84c3f80fd8fbec79ed9e1acee37da269356ecea000000000'\n+        assert_raises_rpc_error(-3, \"Expected type array\", self.nodes[0].createrawtransaction, 'foo', {})\n+        assert_raises_rpc_error(-1, \"JSON value is not an object as expected\", self.nodes[0].createrawtransaction, ['foo'], {})\n+        assert_raises_rpc_error(-8, \"txid must be hexadecimal string\", self.nodes[0].createrawtransaction, [{}], {})\n+        assert_raises_rpc_error(-8, \"txid must be hexadecimal string\", self.nodes[0].createrawtransaction, [{'txid': 'foo'}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, missing vout key\", self.nodes[0].createrawtransaction, [{'txid': txid}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, missing vout key\", self.nodes[0].createrawtransaction, [{'txid': txid, 'vout': 'foo'}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, vout must be positive\", self.nodes[0].createrawtransaction, [{'txid': txid, 'vout': -1}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, sequence number is out of range\", self.nodes[0].createrawtransaction, [{'txid': txid, 'vout': 0, 'sequence': -1}], {})\n+\n+        # Test `createrawtransaction` invalid `outputs`\n+        address = self.nodes[0].getnewaddress()\n+        assert_raises_rpc_error(-3, \"Expected type object\", self.nodes[0].createrawtransaction, [], 'foo')\n+        assert_raises_rpc_error(-8, \"Data must be hexadecimal string\", self.nodes[0].createrawtransaction, [], {'data': 'foo'})\n+        assert_raises_rpc_error(-5, \"Invalid Bitcoin address\", self.nodes[0].createrawtransaction, [], {'foo': 0})\n+        assert_raises_rpc_error(-3, \"Invalid amount\", self.nodes[0].createrawtransaction, [], {address: 'foo'})\n+        assert_raises_rpc_error(-3, \"Amount out of range\", self.nodes[0].createrawtransaction, [], {address: -1})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, duplicated address: %s\" % address, self.nodes[0].createrawtransaction, [], multidict([(address, 1), (address, 1)]))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156392203",
      "id" : 156392203,
      "original_commit_id" : "0df137b8c719a904c792240a0e373ca38c334443",
      "original_position" : 46,
      "path" : "test/functional/rawtransactions.py",
      "position" : 46,
      "pull_request_review_id" : 82861275,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11877",
      "updated_at" : "2017-12-12T15:06:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156392203",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156392721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156392721"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, `createrawtransaction` and `sendmany` RPC's check for duplicated address.",
      "commit_id" : "0df137b8c719a904c792240a0e373ca38c334443",
      "created_at" : "2017-12-12T15:08:16Z",
      "diff_hunk" : "@@ -39,6 +49,41 @@ def run_test(self):\n         self.nodes[0].generate(5)\n         self.sync_all()\n \n+        # Test `createrawtransaction` required parameters\n+        assert_raises_rpc_error(-1, \"createrawtransaction\", self.nodes[0].createrawtransaction)\n+        assert_raises_rpc_error(-1, \"createrawtransaction\", self.nodes[0].createrawtransaction, [])\n+\n+        # Test `createrawtransaction` invalid extra parameters\n+        assert_raises_rpc_error(-1, \"createrawtransaction\", self.nodes[0].createrawtransaction, [], {}, 0, False, 'foo')\n+\n+        # Test `createrawtransaction` invalid `inputs`\n+        txid = '1d1d4e24ed99057e84c3f80fd8fbec79ed9e1acee37da269356ecea000000000'\n+        assert_raises_rpc_error(-3, \"Expected type array\", self.nodes[0].createrawtransaction, 'foo', {})\n+        assert_raises_rpc_error(-1, \"JSON value is not an object as expected\", self.nodes[0].createrawtransaction, ['foo'], {})\n+        assert_raises_rpc_error(-8, \"txid must be hexadecimal string\", self.nodes[0].createrawtransaction, [{}], {})\n+        assert_raises_rpc_error(-8, \"txid must be hexadecimal string\", self.nodes[0].createrawtransaction, [{'txid': 'foo'}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, missing vout key\", self.nodes[0].createrawtransaction, [{'txid': txid}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, missing vout key\", self.nodes[0].createrawtransaction, [{'txid': txid, 'vout': 'foo'}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, vout must be positive\", self.nodes[0].createrawtransaction, [{'txid': txid, 'vout': -1}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, sequence number is out of range\", self.nodes[0].createrawtransaction, [{'txid': txid, 'vout': 0, 'sequence': -1}], {})\n+\n+        # Test `createrawtransaction` invalid `outputs`\n+        address = self.nodes[0].getnewaddress()\n+        assert_raises_rpc_error(-3, \"Expected type object\", self.nodes[0].createrawtransaction, [], 'foo')\n+        assert_raises_rpc_error(-8, \"Data must be hexadecimal string\", self.nodes[0].createrawtransaction, [], {'data': 'foo'})\n+        assert_raises_rpc_error(-5, \"Invalid Bitcoin address\", self.nodes[0].createrawtransaction, [], {'foo': 0})\n+        assert_raises_rpc_error(-3, \"Invalid amount\", self.nodes[0].createrawtransaction, [], {address: 'foo'})\n+        assert_raises_rpc_error(-3, \"Amount out of range\", self.nodes[0].createrawtransaction, [], {address: -1})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, duplicated address: %s\" % address, self.nodes[0].createrawtransaction, [], multidict([(address, 1), (address, 1)]))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156392721",
      "id" : 156392721,
      "in_reply_to_id" : 156392203,
      "original_commit_id" : "0df137b8c719a904c792240a0e373ca38c334443",
      "original_position" : 46,
      "path" : "test/functional/rawtransactions.py",
      "position" : 46,
      "pull_request_review_id" : 82861888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11877",
      "updated_at" : "2017-12-12T15:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156392721",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156393176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156393176"
         }
      },
      "author_association" : "OWNER",
      "body" : "Indeed! I hadn't expected a check here because passing this is tricky in JSON object format.",
      "commit_id" : "0df137b8c719a904c792240a0e373ca38c334443",
      "created_at" : "2017-12-12T15:09:48Z",
      "diff_hunk" : "@@ -39,6 +49,41 @@ def run_test(self):\n         self.nodes[0].generate(5)\n         self.sync_all()\n \n+        # Test `createrawtransaction` required parameters\n+        assert_raises_rpc_error(-1, \"createrawtransaction\", self.nodes[0].createrawtransaction)\n+        assert_raises_rpc_error(-1, \"createrawtransaction\", self.nodes[0].createrawtransaction, [])\n+\n+        # Test `createrawtransaction` invalid extra parameters\n+        assert_raises_rpc_error(-1, \"createrawtransaction\", self.nodes[0].createrawtransaction, [], {}, 0, False, 'foo')\n+\n+        # Test `createrawtransaction` invalid `inputs`\n+        txid = '1d1d4e24ed99057e84c3f80fd8fbec79ed9e1acee37da269356ecea000000000'\n+        assert_raises_rpc_error(-3, \"Expected type array\", self.nodes[0].createrawtransaction, 'foo', {})\n+        assert_raises_rpc_error(-1, \"JSON value is not an object as expected\", self.nodes[0].createrawtransaction, ['foo'], {})\n+        assert_raises_rpc_error(-8, \"txid must be hexadecimal string\", self.nodes[0].createrawtransaction, [{}], {})\n+        assert_raises_rpc_error(-8, \"txid must be hexadecimal string\", self.nodes[0].createrawtransaction, [{'txid': 'foo'}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, missing vout key\", self.nodes[0].createrawtransaction, [{'txid': txid}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, missing vout key\", self.nodes[0].createrawtransaction, [{'txid': txid, 'vout': 'foo'}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, vout must be positive\", self.nodes[0].createrawtransaction, [{'txid': txid, 'vout': -1}], {})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, sequence number is out of range\", self.nodes[0].createrawtransaction, [{'txid': txid, 'vout': 0, 'sequence': -1}], {})\n+\n+        # Test `createrawtransaction` invalid `outputs`\n+        address = self.nodes[0].getnewaddress()\n+        assert_raises_rpc_error(-3, \"Expected type object\", self.nodes[0].createrawtransaction, [], 'foo')\n+        assert_raises_rpc_error(-8, \"Data must be hexadecimal string\", self.nodes[0].createrawtransaction, [], {'data': 'foo'})\n+        assert_raises_rpc_error(-5, \"Invalid Bitcoin address\", self.nodes[0].createrawtransaction, [], {'foo': 0})\n+        assert_raises_rpc_error(-3, \"Invalid amount\", self.nodes[0].createrawtransaction, [], {address: 'foo'})\n+        assert_raises_rpc_error(-3, \"Amount out of range\", self.nodes[0].createrawtransaction, [], {address: -1})\n+        assert_raises_rpc_error(-8, \"Invalid parameter, duplicated address: %s\" % address, self.nodes[0].createrawtransaction, [], multidict([(address, 1), (address, 1)]))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156393176",
      "id" : 156393176,
      "in_reply_to_id" : 156392203,
      "original_commit_id" : "0df137b8c719a904c792240a0e373ca38c334443",
      "original_position" : 46,
      "path" : "test/functional/rawtransactions.py",
      "position" : 46,
      "pull_request_review_id" : 82862462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11877",
      "updated_at" : "2017-12-12T15:09:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156393176",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK 0df137b",
      "created_at" : "2017-12-12T15:09:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11877#issuecomment-351079464",
      "id" : 351079464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11877",
      "updated_at" : "2017-12-12T15:09:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351079464",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
