[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811327243"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811327243"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It looks like there aren't any dedicated test files for `getmempoolentry`, `getmempoolancestors` and `getmempooldescendants` (I wanted to insert my tests in such a file).\r\n\r\nShould I create a new `rpc_getmempoolpendingtx.py` to put more tests (e.g. some failure cases)?",
      "commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "created_at" : "2022-02-21T17:27:55Z",
      "diff_hunk" : "@@ -100,6 +100,11 @@ def run_test(self):\n             entry = self.nodes[0].getmempoolentry(x)\n             assert_equal(entry, mempool[x])\n \n+            # Check that getmempoolspendingtx is consistent with getrawmempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811327243",
      "id" : 811327243,
      "line" : 103,
      "node_id" : "PRRC_kwDOABII584wW98L",
      "original_commit_id" : "2a7db52cec1cb1c4962e384374da6d79fd200b61",
      "original_line" : 103,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 4,
      "pull_request_review_id" : 888961324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811327243/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-21T17:27:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811327243",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "For this usecase, why not using `getmempoolentry`'s `spentby` field?",
      "created_at" : "2022-02-21T17:28:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047099947",
      "id" : 1047099947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-aXor",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047099947/reactions"
      },
      "updated_at" : "2022-02-21T17:28:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047099947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> For this usecase, why not using getmempoolentry's spentby field?\r\n\r\nBecause that wouldn't work for confirmed utxos!\r\n\r\nMy funding transaction (or any L2 protocol initial state) has been confirmed on-chain and I want to check who spends it in the mempool. I can't use `getmempoolentry` because I don't know yet the `txid` of the spending tx...\r\n\r\nMaybe the RPC name is misleading, because its inputs (`txid` and `vout`) aren't necessarily for a mempool tx (and most of the time will not), but the RPC output will be a mempool tx (or `null`).",
      "created_at" : "2022-02-21T17:30:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047101622",
      "id" : 1047101622,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-aYC2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047101622/reactions"
      },
      "updated_at" : "2022-02-21T17:31:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047101622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Right, sorry, i shouldn't have inferred the behaviour from the name. I see it's in the context of `txindex` then, so i don't have an opinion.",
      "created_at" : "2022-02-21T17:39:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047107192",
      "id" : 1047107192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-aZZ4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047107192/reactions"
      },
      "updated_at" : "2022-02-21T17:39:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047107192",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It's much weaker than `txindex`, it's exposing a `txindex` for mempool contents, which is why I think it's acceptable (I'm only querying existing mempool functions).",
      "created_at" : "2022-02-21T17:50:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047114442",
      "id" : 1047114442,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-abLK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047114442/reactions"
      },
      "updated_at" : "2022-02-21T17:51:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047114442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > For this usecase, why not using getmempoolentry's spentby field?\r\n> \r\n> Because that wouldn't work for confirmed utxos!\r\n> \r\n> My funding transaction (or any L2 protocol initial state) has been confirmed on-chain and I want to check who spends it in the mempool. I can't use `getmempoolentry` because I don't know yet the `txid` of the spending tx...\r\n> \r\n> Maybe the RPC name is misleading, because its inputs (`txid` and `vout`) aren't necessarily for a mempool tx (and most of the time will not), but the RPC output will be a mempool tx (or `null`).\r\n\r\nIs it possible to add it in existing RPC `getmempoolentry` by adding more arguments (optional)?",
      "created_at" : "2022-02-22T02:04:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047356352",
      "id" : 1047356352,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-bWPA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047356352/reactions"
      },
      "updated_at" : "2022-02-22T02:04:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047356352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Is it possible to add it in existing RPC getmempoolentry by adding more arguments (optional)?\r\n\r\nI'm not sure it would be very ergonomic, because `getmempoolentry` requires the `txid` of the mempool transaction you're fetching. If we wanted to overload it, it would have the following two distinct sets of behaviors:\r\n\r\n- a `txid` is provided, so we return a mempool transaction that matches this `txid`\r\n- a `txid` (probably named differently to avoid confusion) and a `vout` are provided, so we return a mempool transaction spending this given `txid:vout`\r\n\r\nCorrectly defining the arguments lists (and which are required) to support both use-cases without creating confusion seems hard to be honest...",
      "created_at" : "2022-02-22T08:48:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047557230",
      "id" : 1047557230,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-cHRu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047557230/reactions"
      },
      "updated_at" : "2022-02-22T08:48:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047557230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Not being able to walk the chain forward is certainly the source of huge friction and hacky code while working with Bitcoin RPC. I'd even go that far to claim that this is the single largest missing feature that if we'd have, it would have saved the most time for me personally. Certainly cACK this approach, but I'd like to note a general version of it would be more useful, somehow we should be able to determine which transaction spends a UTXO if any, regardless if it's from mempool or not.",
      "created_at" : "2022-02-22T11:15:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047689558",
      "id" : 1047689558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-cnlW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047689558/reactions"
      },
      "updated_at" : "2022-02-22T11:15:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047689558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811842010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811842010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, that's probably the move. \"rpc_mempool_info.py\" would be a good place to put tests for all of these RPCs.",
      "commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "created_at" : "2022-02-22T11:22:51Z",
      "diff_hunk" : "@@ -100,6 +100,11 @@ def run_test(self):\n             entry = self.nodes[0].getmempoolentry(x)\n             assert_equal(entry, mempool[x])\n \n+            # Check that getmempoolspendingtx is consistent with getrawmempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811842010",
      "id" : 811842010,
      "in_reply_to_id" : 811327243,
      "line" : 103,
      "node_id" : "PRRC_kwDOABII584wY7na",
      "original_commit_id" : "2a7db52cec1cb1c4962e384374da6d79fd200b61",
      "original_line" : 103,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 4,
      "pull_request_review_id" : 889639706,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811842010/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T11:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811842010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811843082"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811843082"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm wondering if, in the future, you might want to pass in a list of prevouts? (e.g. if you have transaction(s) with multiple inputs and want to see if anything in the mempool conflicts)",
      "commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "created_at" : "2022-02-22T11:24:16Z",
      "diff_hunk" : "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()\n+{\n+    return RPCHelpMan{\"getmempoolspendingtx\",\n+                \"\\nScans the mempool to find a transaction spending the given output\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"transaction id\"},\n+                    {\"n\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"vout number\"},\n+                },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811843082",
      "id" : 811843082,
      "line" : 796,
      "node_id" : "PRRC_kwDOABII584wY74K",
      "original_commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "original_line" : 796,
      "original_position" : 11,
      "original_start_line" : 792,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 11,
      "pull_request_review_id" : 889639706,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811843082/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 792,
      "start_side" : "RIGHT",
      "updated_at" : "2022-02-22T11:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811843082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811846174"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811846174"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry to nitpick but I was confused in the beginning by the name as well (I thought you wanted the child of a mempool transaction). Maybe `gettxspendingprevout` would be better, but I'm sure there's someone out there who would find it even more confusing :sweat_smile:",
      "commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "created_at" : "2022-02-22T11:28:05Z",
      "diff_hunk" : "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811846174",
      "id" : 811846174,
      "line" : 789,
      "node_id" : "PRRC_kwDOABII584wY8oe",
      "original_commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "original_line" : 789,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 4,
      "pull_request_review_id" : 889639706,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811846174/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T11:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811846174",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I'd like to note a general version of it would be more useful, somehow we should be able to determine which transaction spends a UTXO if any, regardless if it's from mempool or not.\r\n\r\nThis might be tricky (the non-mempool case) since we would have deleted the UTXO from our chainstate. And not possible sometimes on a pruned node.",
      "created_at" : "2022-02-22T11:32:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047703058",
      "id" : 1047703058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-cq4S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047703058/reactions"
      },
      "updated_at" : "2022-02-22T11:32:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047703058",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK - rationale in PR description seems strong and other projects (e.g. Wasabi) have experienced same issue.\r\n\r\n> I'd like to note a general version of it would be more useful, somehow we should be able to determine which transaction spends a UTXO if any, regardless if it's from mempool or not\r\n\r\nI think the use case from @nopara73's comment above would be you don't know whether the transaction spending the UTXO is in your mempool or confirmed onchain and you want to query your mempool first and then your transaction index? I think generally you'd want one RPC to query your mempool and one RPC to query your transaction index. Combining both into a single RPC seems to me against separation of concerns (and is easily resolved by just running two RPC commands).\r\n\r\n",
      "created_at" : "2022-02-22T11:55:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047720804",
      "id" : 1047720804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-cvNk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047720804/reactions"
      },
      "updated_at" : "2022-02-22T11:55:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047720804",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "FTR there's `gettxout`. I think my suggestion would fit best there.",
      "created_at" : "2022-02-22T12:01:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047725184",
      "id" : 1047725184,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-cwSA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047725184/reactions"
      },
      "updated_at" : "2022-02-22T12:01:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047725184",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> FTR there's gettxout. I think my suggestion would fit best there.\r\n\r\n@nopara73 do you mean that instead of adding a new RPC like I'm doing, we could update `gettxout` to return the spending tx when the utxo is spent?\r\n\r\nIn the case where the spending tx is not in the mempool, I think the only solution would be to walk the chain backwards and analyze each block to see if the spending tx is inside it. However, as @glozow says, if you're running a pruned node, you will likely analyze every block you have and won't find anything, which is very inefficient. Even worse, if the provided utxo never existed, you will walk the whole chain without finding anything...\r\n\r\nIt looks like a much more debatable change which would involve serious trade-offs, that's why I think restricting this PR to mempool txs has a better chance of being accepted. I could still reuse `gettxout` instead of adding a new RPC, but that would make it harder (backwards-compatibility wise) to accept a list of `prevouts` as @glozow suggests [here](https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811843082).",
      "created_at" : "2022-02-22T12:31:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1047749530",
      "id" : 1047749530,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-c2Oa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047749530/reactions"
      },
      "updated_at" : "2022-02-22T12:31:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047749530",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811897533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811897533"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree, I'm not a fan of the name! Should it be `getmempooltxspendingprevout` though to highlight that we return a mempool tx (with ancestor / descendant feerates, which are useful in fee-bumping cases)? It's a long name, but at least it's quite obvious what it does (hopefully).",
      "commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "created_at" : "2022-02-22T12:33:49Z",
      "diff_hunk" : "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811897533",
      "id" : 811897533,
      "in_reply_to_id" : 811846174,
      "line" : 789,
      "node_id" : "PRRC_kwDOABII584wZJK9",
      "original_commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "original_line" : 789,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 4,
      "pull_request_review_id" : 889728684,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811897533/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T12:33:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811897533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811898624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811898624"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That's a good idea, it's worth adding this flexibility right now to avoid running in backwards-compatibility issues if we add it later, I'll try that. I'll take a list of `prevouts` and return a map of `prevout -> spending tx (or null if not found)`.",
      "commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "created_at" : "2022-02-22T12:35:09Z",
      "diff_hunk" : "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()\n+{\n+    return RPCHelpMan{\"getmempoolspendingtx\",\n+                \"\\nScans the mempool to find a transaction spending the given output\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"transaction id\"},\n+                    {\"n\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"vout number\"},\n+                },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r811898624",
      "id" : 811898624,
      "in_reply_to_id" : 811843082,
      "line" : 796,
      "node_id" : "PRRC_kwDOABII584wZJcA",
      "original_commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "original_line" : 796,
      "original_position" : 11,
      "original_start_line" : 792,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 11,
      "pull_request_review_id" : 889730193,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811898624/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 792,
      "start_side" : "RIGHT",
      "updated_at" : "2022-02-22T12:35:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811898624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r814057779"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814057779"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done in https://github.com/bitcoin/bitcoin/pull/24408/commits/0015ceb04cb3545914e2bf7c4b2cde6d66f172ed, I have only added tests for my new RPC for now, future PRs can add tests for `getmempoolentry`, `getmempoolancestors` and `getmempooldescendants` here if that makes sense.",
      "commit_id" : "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "created_at" : "2022-02-24T16:31:51Z",
      "diff_hunk" : "@@ -100,6 +100,11 @@ def run_test(self):\n             entry = self.nodes[0].getmempoolentry(x)\n             assert_equal(entry, mempool[x])\n \n+            # Check that getmempoolspendingtx is consistent with getrawmempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r814057779",
      "id" : 814057779,
      "in_reply_to_id" : 811327243,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584whYkz",
      "original_commit_id" : "2a7db52cec1cb1c4962e384374da6d79fd200b61",
      "original_line" : 103,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : null,
      "pull_request_review_id" : 892692776,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814057779/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-25T15:41:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814057779",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r814060287"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814060287"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done in https://github.com/bitcoin/bitcoin/pull/24408/commits/0015ceb04cb3545914e2bf7c4b2cde6d66f172ed\r\nI chose to return only the `spendingtxid` instead of the mempool tx data, because otherwise if a transaction appears multiple times (because it spends many of the provided prevouts) it would be duplicated, which is a (small) waste.\r\n\r\nCallers can chain this with `getmempoolentry` to get more data about the conflicting transaction.\r\nIf you think it makes more sense to directly include the mempool tx let me know, I don't have strong feelings about that.",
      "commit_id" : "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "created_at" : "2022-02-24T16:34:20Z",
      "diff_hunk" : "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()\n+{\n+    return RPCHelpMan{\"getmempoolspendingtx\",\n+                \"\\nScans the mempool to find a transaction spending the given output\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"transaction id\"},\n+                    {\"n\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"vout number\"},\n+                },",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r814060287",
      "id" : 814060287,
      "in_reply_to_id" : 811843082,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584whZL_",
      "original_commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "original_line" : 804,
      "original_position" : 11,
      "original_start_line" : 792,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 892696288,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814060287/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-02-25T15:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814060287",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r814061201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814061201"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I updated the name, but now that is accepts multiple prevouts, I'm not sure whether I should make it plural or not...\r\nNone of the names I find are completely satisfying, so I'll let reviewers chime in with better proposals!",
      "commit_id" : "263b0a775d606035a852cebfc7c70a3c1a45dce3",
      "created_at" : "2022-02-24T16:35:13Z",
      "diff_hunk" : "@@ -786,6 +786,49 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempoolspendingtx()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r814061201",
      "id" : 814061201,
      "in_reply_to_id" : 811846174,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584whZaR",
      "original_commit_id" : "cc038b6b09ecc36b2f915669116eddf8b6018cf9",
      "original_line" : 789,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 892697968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814061201/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T16:35:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/814061201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24537](https://github.com/bitcoin/bitcoin/pull/24537) (rpc: Split mempool RPCs from blockchain.cpp by MarcoFalke)\n* [#22341](https://github.com/bitcoin/bitcoin/pull/22341) (rpc: add getxpub by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-02-25T06:51:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1050575675",
      "id" : 1050575675,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-noM7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1050575675/reactions"
      },
      "updated_at" : "2022-03-13T02:11:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1050575675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Maybe the two commits can be merged.\r\n\r\nDefinitely, done. I was waiting for the builds to complete to check that I hadn't missed something else that would need fixing.",
      "created_at" : "2022-02-25T15:40:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1050962672",
      "id" : 1050962672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584-pGrw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1050962672/reactions"
      },
      "updated_at" : "2022-02-25T15:40:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1050962672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-03T18:38:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1058365232",
      "id" : 1058365232,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584_FV8w",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1058365232/reactions"
      },
      "updated_at" : "2022-03-03T18:38:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1058365232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Without this RPC, application developers need to first call getrawmempool which returns a long list of txid, then fetch each of these transactions individually (getrawtransaction) to check whether they spend the given outpoints, which wastes a lot of bandwidth (in the worst case we need to transfer the whole mempool).\r\n\r\nI think without this RPC, you can create a tx that spends the input and only fetch the whole mempool if the input was spent.\r\n\r\nMoreover, I wonder what happens if the tx is included in a block right away? So the input will be gone, but there isn't a tx in the mempool that spends it.\r\n\r\nWhile the RPC makes sense on its own, it doesn't fix your problem completely?",
      "created_at" : "2022-03-03T19:23:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1058405400",
      "id" : 1058405400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584_FfwY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1058405400/reactions"
      },
      "updated_at" : "2022-03-03T19:23:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1058405400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r818993962"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/818993962"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe move this to a separate file for now?\r\n\r\n`doc/release-notes-24408.md`",
      "commit_id" : "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "created_at" : "2022-03-03T19:24:54Z",
      "diff_hunk" : "@@ -123,6 +123,8 @@ New RPCs\n   a future release. Note that in either case, the `status` field\n   now reflects the status of the current block rather than the next\n   block. (#23508)\n+- A new `getmempooltxspendingprevout` RPC has been added, which scans the mempool to find\n+  transactions spending any of the given outpoints. (#24408)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r818993962",
      "id" : 818993962,
      "line" : 127,
      "node_id" : "PRRC_kwDOABII584w0Nsq",
      "original_commit_id" : "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "original_line" : 127,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : 5,
      "pull_request_review_id" : 899417562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/818993962/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-03T19:24:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/818993962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r818994278"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/818994278"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                \"Scans the mempool to find transactions spending any of the given outputs\",\r\n```\r\n\r\nnit: I think those can be removed",
      "commit_id" : "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "created_at" : "2022-03-03T19:25:21Z",
      "diff_hunk" : "@@ -786,6 +786,90 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"\\nScans the mempool to find transactions spending any of the given outputs\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r818994278",
      "id" : 818994278,
      "line" : 792,
      "node_id" : "PRRC_kwDOABII584w0Nxm",
      "original_commit_id" : "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "original_line" : 792,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 7,
      "pull_request_review_id" : 899418005,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/818994278/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-03T19:26:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/818994278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the review @MarcoFalke!\r\n\r\n> I think without this RPC, you can create a tx that spends the input and only fetch the whole mempool if the input was spent.\r\n> Moreover, I wonder what happens if the tx is included in a block right away? So the input will be gone, but there isn't a tx in the mempool that spends it.\r\n> While the RPC makes sense on its own, it doesn't fix your problem completely?\r\n\r\nI probably tried to be a bit too general in my description, let me try to explain in more details my current scenario.\r\n\r\nIn the specific case where I want to apply this in the short term, I'm trying to spend lightning htlcs. I have a pre-signed transaction that spends the outpoint I'm interested in but doesn't provide enough fees, so I'll want to add more inputs to reach the right feerate.\r\n\r\nThe complete flow looks like this:\r\n\r\n- I verify that the output is unspent with `gettxout` (without including the mempool)\r\n  - If it's spent, then I have nothing to do (actually it triggers another flow to spend the output of that spending tx, but that's orthogonal)\r\n  - Otherwise, I check if there is already a mempool tx spending this output with `getmempooltxspendingprevout`\r\n    - If nothing is in the mempool, I'll use `fundrawtransaction` to add inputs and broadcast the transaction\r\n    - Otherwise, I'll modify the mempool transaction to pay more fees (by lowering/removing the existing change output and potentially adding new inputs)\r\n\r\nWithout this RPC, I would have to optimistically fund and broadcast, and if that fails fetch the whole mempool to find the conflicting transaction. I expect to regularly have to go through the RBF flow, so it feels inefficient to have to dump the mempool when that happens :(\r\n\r\nYou're right that if the current mempool transaction confirms while I'm funding its replacement, I'll need to correctly handle it, but that doesn't seem to be too much of a problem for my use-case.\r\n\r\nDoes that make sense with this more detailed scenario?\r\n",
      "created_at" : "2022-03-03T23:52:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1058677337",
      "id" : 1058677337,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584_GiJZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1058677337/reactions"
      },
      "updated_at" : "2022-03-03T23:52:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1058677337",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r819162210"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819162210"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Agreed, done in https://github.com/bitcoin/bitcoin/pull/24408/commits/4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "commit_id" : "4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "created_at" : "2022-03-04T00:00:50Z",
      "diff_hunk" : "@@ -786,6 +786,90 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"\\nScans the mempool to find transactions spending any of the given outputs\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r819162210",
      "id" : 819162210,
      "in_reply_to_id" : 818994278,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584w02xi",
      "original_commit_id" : "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "original_line" : 792,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 899663446,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819162210/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-04T00:00:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819162210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r819162399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819162399"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done in https://github.com/bitcoin/bitcoin/pull/24408/commits/4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21, let me know if the format should be different",
      "commit_id" : "4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "created_at" : "2022-03-04T00:01:14Z",
      "diff_hunk" : "@@ -123,6 +123,8 @@ New RPCs\n   a future release. Note that in either case, the `status` field\n   now reflects the status of the current block rather than the next\n   block. (#23508)\n+- A new `getmempooltxspendingprevout` RPC has been added, which scans the mempool to find\n+  transactions spending any of the given outpoints. (#24408)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r819162399",
      "id" : 819162399,
      "in_reply_to_id" : 818993962,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584w020f",
      "original_commit_id" : "0015ceb04cb3545914e2bf7c4b2cde6d66f172ed",
      "original_line" : 127,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 899663676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819162399/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-04T00:01:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/819162399",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Actually there is a simpler place where we'll use that new RPC in our codebase. When a lightning node restarts, it lists its channels from its internal DB and verifies that the funding outpoint of each channel is still unspent (with `gettxout`).\r\n\r\nIf we discover than a channel has actually been spent (maybe our counterparty is malicious and saw that we were offline, and tried to cheat), we want to find the spending transaction to be able to react and publish our set of follow-up transactions. So the first thing we do is look into the mempool, currently by dumping it and checking every transaction ourselves. With `getmempooltxspendingprevout` we would avoid a performance hit here.\r\n\r\nOf course, if the spending transaction isn't in the mempool, then we have to check recent blocks one by one, but that shouldn't happen often, and since lightning nodes shouldn't be offline for too long, you usually only have to check 1 or 2 blocks (which means transferring < 5MB which is much smaller than the whole mempool).",
      "created_at" : "2022-03-04T14:02:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1059188351",
      "id" : 1059188351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584_Ie5_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059188351/reactions"
      },
      "updated_at" : "2022-03-04T14:02:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059188351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r820032184"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820032184"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n- A new `getmempoolprevout` RPC has been added, which scans the mempool to find\r\n```",
      "commit_id" : "4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "created_at" : "2022-03-05T03:49:56Z",
      "diff_hunk" : "@@ -0,0 +1,5 @@\n+New RPCs\n+--------\n+\n+- A new `getmempooltxspendingprevout` RPC has been added, which scans the mempool to find",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r820032184",
      "id" : 820032184,
      "line" : 4,
      "node_id" : "PRRC_kwDOABII584w4LK4",
      "original_commit_id" : "4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "original_line" : 4,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/release-notes/release-notes-24408.md",
      "position" : 4,
      "pull_request_review_id" : 900888495,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820032184/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-05T03:49:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820032184",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This seems like it should be using a watch-only wallet instead.",
      "created_at" : "2022-03-07T20:00:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1061079594",
      "id" : 1061079594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584_Psoq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061079594/reactions"
      },
      "updated_at" : "2022-03-07T20:00:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061079594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r822857757"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822857757"
         }
      },
      "author_association" : "NONE",
      "body" : "nit: I think it should be spelled \"omitted\" (only one m) :) ",
      "commit_id" : "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "created_at" : "2022-03-09T16:41:45Z",
      "diff_hunk" : "@@ -786,6 +786,90 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (ommitted if unspent)\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r822857757",
      "id" : 822857757,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584xC9Ad",
      "original_commit_id" : "4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "original_line" : 812,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 904662270,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822857757/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-09T17:26:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/822857757",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25042473?v=4",
         "events_url" : "https://api.github.com/users/danielabrozzoni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/danielabrozzoni/followers",
         "following_url" : "https://api.github.com/users/danielabrozzoni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/danielabrozzoni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/danielabrozzoni",
         "id" : 25042473,
         "login" : "danielabrozzoni",
         "node_id" : "MDQ6VXNlcjI1MDQyNDcz",
         "organizations_url" : "https://api.github.com/users/danielabrozzoni/orgs",
         "received_events_url" : "https://api.github.com/users/danielabrozzoni/received_events",
         "repos_url" : "https://api.github.com/users/danielabrozzoni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/danielabrozzoni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/danielabrozzoni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/danielabrozzoni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This seems like it should be using a watch-only wallet instead.\r\n\r\nThis wouldn't work for users that don't have or don't want a bdb/sqlite dependency as well the overhead of having to deal with wallet maintenance. So I can see the argument that this RPC makes it easier for users.",
      "created_at" : "2022-03-09T17:47:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1063193347",
      "id" : 1063193347,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584_XwsD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1063193347/reactions"
      },
      "updated_at" : "2022-03-09T17:47:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1063193347",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-16T10:32:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1068971697",
      "id" : 1068971697,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII584_tzax",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1068971697/reactions"
      },
      "updated_at" : "2022-03-16T10:32:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1068971697",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r834105358"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834105358"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Fixed in https://github.com/bitcoin/bitcoin/pull/24408/commits/9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "commit_id" : "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "created_at" : "2022-03-24T09:39:30Z",
      "diff_hunk" : "@@ -786,6 +786,90 @@ static RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (ommitted if unspent)\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r834105358",
      "id" : 834105358,
      "in_reply_to_id" : 822857757,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584xt3AO",
      "original_commit_id" : "4c96203ec36f5634d6f73f3b9a1d99bbd91dcc21",
      "original_line" : 812,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 919975417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834105358/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-24T09:39:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/834105358",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> This seems like it should be using a watch-only wallet instead.\r\n\r\n@luke-jr can you detail how that would work? I may be missing something, but I don't see how that would address my issue. I do need a regular wallet as I'm relying heavily on `fundrawtransaction`, it would be wasteful to need both a watch-only wallet and a regular wallet to make this use-case work?",
      "created_at" : "2022-03-24T09:45:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1077433383",
      "id" : 1077433383,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII585AOFQn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1077433383/reactions"
      },
      "updated_at" : "2022-03-24T09:45:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1077433383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry for the delay in responding to comments and rebasing, I've been away for a while, the PR is now rebased.\r\n\r\nOne of the points that I'd like more feedback on is that I chose to return only the `spendingtxid` instead of the mempool tx data, because otherwise if a transaction appears multiple times (because it spends many of the provided prevouts) it would be duplicated, which is a (small) waste.\r\n\r\nCallers can chain this with `getmempoolentry` to get more complete tx data for the conflicting transaction. If you think it makes more sense to directly include the mempool tx let me know, I don't have strong feelings about that.",
      "created_at" : "2022-03-24T09:47:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#issuecomment-1077435461",
      "id" : 1077435461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24408",
      "node_id" : "IC_kwDOABII585AOFxF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1077435461/reactions"
      },
      "updated_at" : "2022-03-24T09:47:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1077435461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r840701421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840701421"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n        outputs.emplace_back(txid, nOutput);\r\n```\r\n\r\nChange this can avoid a copy of the object",
      "commit_id" : "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "created_at" : "2022-04-01T15:31:58Z",
      "diff_hunk" : "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r840701421",
      "id" : 840701421,
      "line" : 437,
      "node_id" : "PRRC_kwDOABII584yHBXt",
      "original_commit_id" : "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "original_line" : 437,
      "original_position" : 62,
      "original_start_line" : 436,
      "path" : "src/rpc/mempool.cpp",
      "position" : 62,
      "pull_request_review_id" : 929105300,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840701421/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 436,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-01T15:38:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840701421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/17150045?v=4",
         "events_url" : "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vincenzopalazzo/followers",
         "following_url" : "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vincenzopalazzo",
         "id" : 17150045,
         "login" : "vincenzopalazzo",
         "node_id" : "MDQ6VXNlcjE3MTUwMDQ1",
         "organizations_url" : "https://api.github.com/users/vincenzopalazzo/orgs",
         "received_events_url" : "https://api.github.com/users/vincenzopalazzo/received_events",
         "repos_url" : "https://api.github.com/users/vincenzopalazzo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vincenzopalazzo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vincenzopalazzo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r840705230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840705230"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n    for (const COutPoint& output : outputs) {\r\n        result.emplace_back(UniValue::VOBJ);\r\n        UniValue o = result.back();\r\n        o.pushKV(\"txid\", output.hash.ToString());\r\n        o.pushKV(\"vout\", (uint64_t)output.n);\r\n\r\n        const CTransaction* spendingTx = mempool.GetConflictTx(output);\r\n        if (spendingTx != nullptr) {\r\n            o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\r\n        }\r\n    }\r\n```\r\n\r\nIn this way we avoid the move too, and for a transaction this is important IMHO",
      "commit_id" : "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "created_at" : "2022-04-01T15:36:35Z",
      "diff_hunk" : "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);\n+    }\n+\n+    const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+    LOCK(mempool.cs);\n+\n+    UniValue result{UniValue::VARR};\n+\n+    for (const COutPoint& output : outputs) {\n+        UniValue o(UniValue::VOBJ);\n+        o.pushKV(\"txid\", output.hash.ToString());\n+        o.pushKV(\"vout\", (uint64_t)output.n);\n+\n+        const CTransaction* spendingTx = mempool.GetConflictTx(output);\n+        if (spendingTx != nullptr) {\n+            o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+        }\n+\n+        result.push_back(o);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r840705230",
      "id" : 840705230,
      "line" : 456,
      "node_id" : "PRRC_kwDOABII584yHCTO",
      "original_commit_id" : "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "original_line" : 456,
      "original_position" : 81,
      "original_start_line" : 445,
      "path" : "src/rpc/mempool.cpp",
      "position" : 81,
      "pull_request_review_id" : 929105300,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840705230/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 445,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-01T15:38:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/840705230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/17150045?v=4",
         "events_url" : "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vincenzopalazzo/followers",
         "following_url" : "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vincenzopalazzo",
         "id" : 17150045,
         "login" : "vincenzopalazzo",
         "node_id" : "MDQ6VXNlcjE3MTUwMDQ1",
         "organizations_url" : "https://api.github.com/users/vincenzopalazzo/orgs",
         "received_events_url" : "https://api.github.com/users/vincenzopalazzo/received_events",
         "repos_url" : "https://api.github.com/users/vincenzopalazzo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vincenzopalazzo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vincenzopalazzo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841428747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841428747"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, done in https://github.com/bitcoin/bitcoin/pull/24408/commits/8e6db71ff6cf2c8f724183996b4842fcf53d16b0",
      "commit_id" : "8e6db71ff6cf2c8f724183996b4842fcf53d16b0",
      "created_at" : "2022-04-04T07:14:32Z",
      "diff_hunk" : "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841428747",
      "id" : 841428747,
      "in_reply_to_id" : 840701421,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yJy8L",
      "original_commit_id" : "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "original_line" : 437,
      "original_position" : 62,
      "original_start_line" : 436,
      "path" : "src/rpc/mempool.cpp",
      "position" : null,
      "pull_request_review_id" : 929919934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841428747/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-04T07:14:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841428747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841429455"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841429455"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the review! This doesn't seem to compile though...and I'm not sure it's needed at all, we're not dealing with a whole transaction here, just a `txid`, so a copy is really not something we care about IMO.",
      "commit_id" : "8e6db71ff6cf2c8f724183996b4842fcf53d16b0",
      "created_at" : "2022-04-04T07:15:36Z",
      "diff_hunk" : "@@ -376,6 +376,90 @@ RPCHelpMan getmempoolentry()\n     };\n }\n \n+static RPCHelpMan getmempooltxspendingprevout()\n+{\n+    return RPCHelpMan{\"getmempooltxspendingprevout\",\n+                \"Scans the mempool to find transactions spending any of the given outputs\",\n+                {\n+                    {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The transaction outputs that we want to check, and within each, the txid (string) vout (numeric).\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n+                                },\n+                            },\n+                        },\n+                    },\n+                },\n+                RPCResult{\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id of the spent output\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value of the spent output\"},\n+                            {RPCResult::Type::STR_HEX, \"spendingtxid\", \"the transaction id of the mempool transaction spending this output (omitted if unspent)\"},\n+                        }},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                    + HelpExampleRpc(\"getmempooltxspendingprevout\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":3}]\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    RPCTypeCheckArgument(request.params[0], UniValue::VARR);\n+    const UniValue& output_params = request.params[0];\n+    if (output_params.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, outputs are missing\");\n+    }\n+\n+    std::vector<COutPoint> outputs;\n+    outputs.reserve(output_params.size());\n+\n+    for (unsigned int idx = 0; idx < output_params.size(); idx++) {\n+        const UniValue& o = output_params[idx].get_obj();\n+\n+        RPCTypeCheckObj(o,\n+            {\n+                {\"txid\", UniValueType(UniValue::VSTR)},\n+                {\"vout\", UniValueType(UniValue::VNUM)},\n+            });\n+\n+        const uint256 txid(ParseHashO(o, \"txid\"));\n+        const int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout cannot be negative\");\n+        }\n+\n+        const COutPoint output(txid, nOutput);\n+        outputs.push_back(output);\n+    }\n+\n+    const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+    LOCK(mempool.cs);\n+\n+    UniValue result{UniValue::VARR};\n+\n+    for (const COutPoint& output : outputs) {\n+        UniValue o(UniValue::VOBJ);\n+        o.pushKV(\"txid\", output.hash.ToString());\n+        o.pushKV(\"vout\", (uint64_t)output.n);\n+\n+        const CTransaction* spendingTx = mempool.GetConflictTx(output);\n+        if (spendingTx != nullptr) {\n+            o.pushKV(\"spendingtxid\", spendingTx->GetHash().ToString());\n+        }\n+\n+        result.push_back(o);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24408#discussion_r841429455",
      "id" : 841429455,
      "in_reply_to_id" : 840705230,
      "line" : 455,
      "node_id" : "PRRC_kwDOABII584yJzHP",
      "original_commit_id" : "9a9011c5aa4a9d069ba897b07ff9792349692cbb",
      "original_line" : 456,
      "original_position" : 81,
      "original_start_line" : 445,
      "path" : "src/rpc/mempool.cpp",
      "position" : 80,
      "pull_request_review_id" : 929921000,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24408",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841429455/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 444,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-04T07:15:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/841429455",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   }
]
