[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14866](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14866.html) (Improve property evaluation way in bitcoin.conf by AkioNak)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-05-02T00:43:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-488521738",
      "id" : 488521738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODUyMTczOA==",
      "updated_at" : "2019-05-04T01:26:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488521738",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "NACK, this is redundant with #11082 which is a better solution.",
      "created_at" : "2019-05-02T12:09:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-488648120",
      "id" : 488648120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODY0ODEyMA==",
      "updated_at" : "2019-05-02T12:09:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488648120",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-488648120\r\n\r\nJust as background, the settings file is not supposed to replace the config file. The settings file is supposed to replace some [`QSettings`](https://doc.qt.io/qt-5/qsettings.html) uses in `bitcoin-qt`, implementing type-safe persistent storage, and sharing this functionality with `bitcoind`, so settings modified at runtime will be stored in a common place regardless of whether you're using the GUI or a plain RPC interface. (You can see in 0ab41dd770c1f13983df528b111cfc8a51fe016a from #15936 how this works in the GUI or in 04c80c40df9fc6f4734ba238ea7f65607cf88089 from #15937 how this can be used in an RPC.)\r\n\r\n> this is redundant with #11082 which is a better solution.\r\n\r\nEvery solution has some tradeoffs, and I'm sure you can elaborate more on advantages of #11082 compared to this. But here are what I see as nice things about this approach:\r\n\r\n- Standard format. The `bitcoin.conf` format works pretty well as a manual configuration mechanism. But the format is unspecified and unstable, and less appealing for use as persistent key/value store compared to JSON which is well understood and supported by many tools and libraries.\r\n\r\n- Uniformity of representation. Since `bitcoin.conf` files are meant to be written by people and parsed by software, it's reasonable for them to provide many ways to do things like represent true/false values (`foo=1` `foo=` `foo=23` `foo=-1`, `nofoo=0` for true / `foo=0` `nofoo=1` `foo=false` for false), or to strip whitespace. But for a file that is meant to be round-trip read and written by software, only accepting plain `true` `false` keywords as bools and not mangling strings is a better way to avoid complexity, configuration errors, and software bugs.\r\n\r\n- Flexibility of representation. `bitcoin.conf` format can't currently represent strings with pound (`#`) or newline characters or strings with various types of whitespace. It can also only awkwardly represent lists by repeating settings (so there is no distinction between a non-list value and a single-element list). I think these things are likely to cause bugs, unnecessary limitations, headaches, and extra boilerplate in application-level code that reads and writes settings.\r\n\r\n- Maintainability. JSON for all that's good and bad about it is stable and usable enough and isn't going to change. Even writing this PR didn't require adding new parsing or formatting code. By contrast, #11082 not only adds new code right now to parse and generate `bitcoin_rw.conf` files, but will also require more work on an ongoing basis whenever the `bitcoin.conf` format is extended, because any new change will now require roundtrip support. (For example if we added an escaping mechanism it would require new code to escape values in addition to new code parsing escapes.)\r\n\r\nThis PR is also not mutually exclusive with #11082. I don't know exactly what features you wanted to implement on top of #11082, but if you are thinking of new features different from #15936 and #13937 that call for injecting settings into a human-edited config file, nothing in this PR should get in the way of that.\r\n\r\nThere were some other issues I had with #11082 when I reviewed it (adding a new `bitcoin.conf` parser instead of extending the existing one, and concerns about init order and inconsistent interpretation of network sections in `bitcoin.conf` and `bitcoin_rw.conf`), but those issues were specific to the implementation and not inherent to the approach.",
      "created_at" : "2019-05-08T20:35:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-490641194",
      "id" : 490641194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY0MTE5NA==",
      "updated_at" : "2019-05-08T20:35:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490641194",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\n> Standard format. The bitcoin.conf format works pretty well as a manual configuration mechanism. But the format is unspecified and unstable, and less appealing for use as persistent key/value store compared to JSON which is well understood and supported by many tools and libraries.\r\n\r\nI strongly agree with that.",
      "created_at" : "2019-05-18T10:58:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-493668134",
      "id" : 493668134,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzY2ODEzNA==",
      "updated_at" : "2019-05-18T10:58:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493668134",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "INI is a standard format, supported by at least as many tools and libraries for longer. It has been working fine for bitcoin.conf and rwconf for years now.\r\n\r\nJSON, on the other hand, is fragile, doesn't allow users to add comments, and is currently supposed to only be used for the JSON-RPC/REST interfaces of Core.\r\n\r\nThe only thing to gain over the current INI format would be to avoid rewriting the entire file for changes. JSON doesn't get us that (nor anything else).",
      "created_at" : "2019-05-18T19:52:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-493702800",
      "id" : 493702800,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzcwMjgwMA==",
      "updated_at" : "2019-05-18T19:52:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493702800",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   }
]
