[
   {
      "author_association" : "MEMBER",
      "body" : "Rewritten; a much simpler change was possible to accomplish the same.",
      "created_at" : "2019-05-03T23:08:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15950#issuecomment-489266711",
      "id" : 489266711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15950",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTI2NjcxMQ==",
      "updated_at" : "2019-05-03T23:08:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489266711",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "sha1 and ripemd160 need the same treatment.",
      "created_at" : "2019-05-04T01:33:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15950#issuecomment-489282920",
      "id" : 489282920,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15950",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTI4MjkyMA==",
      "updated_at" : "2019-05-04T01:33:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489282920",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Very nice find! Thanks for fixing!\r\n\r\nSimilar issues:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f19a3b2ded4b86d859c0a464f550e0743af78ae3/src/uint256.cpp#L44-L52\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f19a3b2ded4b86d859c0a464f550e0743af78ae3/src/crypto/sha1.cpp#L166\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f19a3b2ded4b86d859c0a464f550e0743af78ae3/src/crypto/ripemd160.cpp#L259\r\n\r\nWhen looking for pointer arithmetic issues in the SHA256 and SHA512 code I stumbled across these two:\r\n\r\nConsider the case where `keylen` is 64:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f19a3b2ded4b86d859c0a464f550e0743af78ae3/src/crypto/hmac_sha256.cpp#L9-L14\r\n\r\nConsider the case where `keylen` is 128:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f19a3b2ded4b86d859c0a464f550e0743af78ae3/src/crypto/hmac_sha512.cpp#L9-L14\r\n\r\nAFAIK `p` in `memset(p, Ã¢ÂÂ¦, n)` must be valid for writing even in the case where `n` is 0 to avoid UB.\r\n\r\nAnyways -- concept ACK of course:\r\n\r\nGetting rid of also the \"not-yet-(ab-)used-by-compiler-authors-for-optimisation\" class of UB makes perfect sense:\r\n* a.) avoiding UB makes our code robust against future time bombs introduced by new compiler optimisations,\r\n* b.) UB is a nuisance when trying do apply formal methods, and\r\n* c.) the warm fuzzy feeling that follows from knowing that our consensus critical piece of software will only make use of defined operations :-)\r\n\r\nAvoiding UB is largely about avoiding **future** problems. This is a frequently missed point when discussing UB.\r\n\r\nWe should assume that current and future compiler writers care about benchmarks and that they will (ab-)use all optimisation opportunities given to them in the form of UB - regardless of if such optimisations would be \"good\" or \"bad\" for us. As been shown historically it is a risky strategy to assume otherwise: [Changes in GCC Code Optimization Can Cause a Crash in BIND](https://kb.isc.org/docs/aa-01167), [D J Bernstein boringcc announcement](https://groups.google.com/d/msg/boring-crypto/48qa1kWignU/o8GGp2K1DAAJ), etc.",
      "created_at" : "2019-05-04T08:48:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15950#issuecomment-489307953",
      "id" : 489307953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15950",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTMwNzk1Mw==",
      "updated_at" : "2019-05-04T12:18:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489307953",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@gmaxwell Extended to SHA1 and RIPEMD160.",
      "created_at" : "2019-05-04T21:05:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15950#issuecomment-489365507",
      "id" : 489365507,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15950",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTM2NTUwNw==",
      "updated_at" : "2019-05-04T21:05:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489365507",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift I don't see the issue with the uint256 code (as far as I can see, all pointers are to objects or one-past the object which is legal). I also can't find a reference for requiring that the `memset` argument needs to be a writable pointer if length is 0 (it needs to be a valid pointer, but it is; just not a writable one).\r\n\r\nAlso no reason to explain me why fixing UB is a good idea; I obviously agree, or I wouldn't have opened this PR.",
      "created_at" : "2019-05-04T21:07:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15950#issuecomment-489365660",
      "id" : 489365660,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15950",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTM2NTY2MA==",
      "updated_at" : "2019-05-04T21:07:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489365660",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\n> I don't see the issue with the uint256 code (as far as I can see, all pointers are to objects or one-past the object which is legal)\r\n\r\n@sipa see  #14734",
      "created_at" : "2019-05-05T18:54:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15950#issuecomment-489453257",
      "id" : 489453257,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15950",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTQ1MzI1Nw==",
      "updated_at" : "2019-05-05T18:54:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489453257",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13120787?v=4",
         "events_url" : "https://api.github.com/users/251Labs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/251Labs/followers",
         "following_url" : "https://api.github.com/users/251Labs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/251Labs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/251Labs",
         "id" : 13120787,
         "login" : "251Labs",
         "node_id" : "MDQ6VXNlcjEzMTIwNzg3",
         "organizations_url" : "https://api.github.com/users/251Labs/orgs",
         "received_events_url" : "https://api.github.com/users/251Labs/received_events",
         "repos_url" : "https://api.github.com/users/251Labs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/251Labs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/251Labs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/251Labs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't see the issue with the uint256 code (as far as I can see, all pointers are to objects or one-past the object which is legal).\r\n\r\nConsider the case `SetHex(\"1000000000000000000000000000000000000000000000000000000000000000\")`:\r\n\r\nWhen the reverse processing reaches the leading `1` we have `psz == pbegin` and the following happens:\r\n\r\n```\r\n*p1 |= ((unsigned char)HexDigit(*psz--) << 4);\r\n```\r\n\r\nPlease note that `psz` has now been decremented to `pbegin - 1` which is outside of the object.\r\n\r\nLet me know if I'm reading this incorrectly.\r\n\r\n> I also can't find a reference for requiring that the memset argument needs to be a writable pointer if length is 0 (it needs to be a valid pointer, but it is; just not a writable one).\r\n\r\nUnfortunately the spec is not entirely clear on this (see 7.24.1.2. and 7.1.4.1. in ISO/IEC 9899:201x N1570).\r\n\r\nArguments for why the pointer should be valid for writing even in the case of `n` is 0 are given here: \r\n* https://stackoverflow.com/questions/29844298/is-it-legal-to-call-memcpy-with-zero-length-on-a-pointer-just-past-the-end-of-an\r\n\r\nThe discussion is about `memcpy` but `memset` should have the same pointer requirements in this case.\r\n\r\n> Also no reason to explain me why fixing UB is a good idea; I obviously agree, or I wouldn't have opened this PR.\r\n\r\nI was just giving a proper rationale for my concept ACK. Let me know if I'm too verbose in my concept ACKs and I'll adjust :-)",
      "created_at" : "2019-05-05T20:44:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15950#issuecomment-489461791",
      "id" : 489461791,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15950",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTQ2MTc5MQ==",
      "updated_at" : "2019-05-05T20:46:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489461791",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
