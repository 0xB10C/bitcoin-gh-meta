[
   {
      "body" : "Concept ACK.\r\nI just wonder if this makes the wallet code more complex (add another layer).\r\n\r\nMy idea was it to duplicate the current wallet implementation (`cp src/wallet src/newwallet`-approach) and add such things there (after removing the accounts-related code). Also the Bip32 and @CodeShark multi-wallet PR could be added there.\r\n\r\nThe second wallet could come without API stableness (for the first two releases or so) and could be marked as experimental.",
      "created_at" : "2016-03-21T16:14:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-199361174",
      "id" : 199361174,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-03-21T16:14:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/199361174",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "> I just wonder if this makes the wallet code more complex (add another layer).\r\n\r\nI disagree:\r\n\r\n- All of this functionality is required anyway to support the GUI.\r\n- Yes, there is some intentional duplication, but only until the account calls are ripped out, which should be one of the next steps.\r\n- There are only added RPC calls in rpcwallet.cpp. The `CWallet` class is not complicated by this.\r\n\r\nThe point here is to give a non-deprecated equivalent to the 'label' system as used in the GUI, so the subset of the 'account system' that people are still allowed to use. This is a required, but up to now missing part of deprecating the account system.\r\n\r\nI'm not trying to rule out any other work that is being done such as multi-wallet support. I think this is pretty much orthogonal. As for alternative wallets, they've been proposed since at least 2012 - but none have materialized yet. And none of this change rules them out.\r\n",
      "created_at" : "2016-03-21T16:17:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-199362346",
      "id" : 199362346,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-03-21T16:24:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/199362346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "> As for alternative wallets, they've been proposed since at least 2012 - but none have materialized yet. And none of this change rules them out.\r\n\r\nYes. I agree.\r\nThis PR has a clear value.",
      "created_at" : "2016-03-21T16:33:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-199368604",
      "id" : 199368604,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-03-21T16:33:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/199368604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Note getaccountaddress does not presently get a \"default\" address, it gets an *unused* address with the label, creating one if necessary. This seems useful *only* for mining, since no other context can guarantee an address hasn't been \"used\" but not sent to yet. I can't think of a good way to deprecate this, however.",
      "created_at" : "2016-03-21T19:42:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-199444036",
      "id" : 199444036,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-03-21T19:42:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/199444036",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "> it gets an unused address with the label, creating one if necessary.\r\n\r\nI wonder if we can find a better (or at least simpler, the `GetAccountAddress` function is pretty terrible) way to do this, now that we're creating a new API anyway. Need to think about this a bit.",
      "created_at" : "2016-03-22T08:53:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-199705726",
      "id" : 199705726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-03-22T08:54:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/199705726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@luke-jr \r\n> I wonder if we can find a better (or at least simpler, the GetAccountAddress function is pretty terrible) way to do this, now that we're creating a new API anyway. Need to think about this a bit.\r\n\r\nI thought of the following: you could use two labels, one for the 'active' address, one for the 'normal'. Say `mining_active` and `mining`.\r\n\r\nWhen the miner needs an address it will:\r\n- *addr* = `getaddressesbylabel mining_active` (if no address returned, go to \"if so\" directly below and skip the first)\r\n- `getreceivedbyaddress` - check with wallet that *addr* has been used before (or maybe add a more convenient RPC call for checking a single address)\r\n- If so:\r\n  -  `setlabel <addr> mining`  - move current address to normal label\r\n  - *addr* = `getnewaddress mining_active` - generate new address in `mining_active` label\r\n  - Use *addr* for mining to\r\n- If not:\r\n  - Use *addr* for mining to\r\n\r\nThis is a little bit more involved at the user side, but it avoids special administration (needing to keep around `CAccount` structure per label) at the server side.",
      "created_at" : "2016-03-23T07:10:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-200219840",
      "id" : 200219840,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-03-23T07:16:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/200219840",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "That looks like a lot of overhead, and this is a rather time-sensitive call, as the miner is working on stale work until it's done.\r\n\r\nAlso, why are there no getreceivedbylabel/listreceivedbylabel? These don't have anything to do with balances.",
      "created_at" : "2016-04-07T07:25:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-206735494",
      "id" : 206735494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-04-07T07:25:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/206735494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "> That looks like a lot of overhead, and this is a rather time-sensitive call, as the miner is working on stale work until it's done.\r\n\r\nI'd suggest to try it. It shouldn't be much slower.\r\n\r\n> Also, why are there no getreceivedbylabel/listreceivedbylabel? These don't have anything to do with balances.\r\n\r\nLooks like you're right. `getreceivedbyaccount` doesn't actually return the account balance, but the total number of coins sent to the addresses that make up the account?\r\n\r\n`listreceivedbyaccount`  on the other hand goes over the account tally. But I agree if it only were to show actual transactions sent to addresses belonging to a label it'd be ok.\r\n",
      "created_at" : "2016-04-07T14:19:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-206927479",
      "id" : 206927479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-04-07T14:19:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/206927479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "@luke-jr Wouldn't it be feasible to instead generate a sequence of deterministic addresses for mining, for example using BIP32 derivation with the block height as index?",
      "created_at" : "2016-04-07T14:24:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-206929678",
      "id" : 206929678,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-04-07T14:24:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/206929678",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> I'd suggest to try it. It shouldn't be much slower.\r\n\r\n@laanwj getreceivedbyaddress at least would loop over all the wtx... and then there's the additional latency from the back and forth of multiple calls. I haven't tried it yet, though.\r\n\r\n> Wouldn't it be feasible to instead generate a sequence of deterministic addresses for mining, for example using BIP32 derivation with the block height as index?\r\n\r\n@sipa Perhaps, if the wallet had a way to do this. Using the height seems incompatible with gap limits, though?",
      "created_at" : "2016-04-07T14:37:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-206934807",
      "id" : 206934807,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-04-07T14:37:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/206934807",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "@luke-jr I mean the mining software can do derivation, and import the keys into the wallet when a block is found.\r\n\r\n",
      "created_at" : "2016-04-07T14:48:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-206938418",
      "id" : 206938418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-04-07T14:48:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/206938418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "The functional test coverage for accounts is minimal or not existent, I think we should move forward with this pull.\r\n\r\nNeeds rebase.",
      "created_at" : "2016-05-22T12:02:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-220828728",
      "id" : 220828728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
      "updated_at" : "2016-05-22T12:02:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220828728",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=3",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
