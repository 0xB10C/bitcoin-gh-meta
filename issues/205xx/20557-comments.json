[
   {
      "author_association" : "MEMBER",
      "body" : "The code currently rebuckets entries (losing the additional bucket positions) if the asmap checksum changes. I'm not sure if that's necessary and don't see any downside to keeping the same bucketing if restarting with a new asmap. If others agree, I can update this PR to not do that rebucketing.",
      "created_at" : "2020-12-03T11:39:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-737888519",
      "id" : 737888519,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzg4ODUxOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-03T11:39:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737888519",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "We should also add a regression test for this. I think a good test would be to add a round trip serialize/unserialize to the addrman fuzz test, and compare the addrman before and after that round trip. There's some internal state that isn't reconstructed from serialize/unserialize (eg the vRandom ordering), but a comparator function that checked number of entries and bucket->entry pairs should work.\r\n\r\nIf anyone wants to add that fuzz test or other tests, I'm happy to add them to this PR.",
      "created_at" : "2020-12-03T11:43:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-737890278",
      "id" : 737890278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzg5MDI3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-03T11:43:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737890278",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r535204097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535204097"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\r\n```",
      "commit_id" : "dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3",
      "created_at" : "2020-12-03T12:55:03Z",
      "diff_hunk" : "@@ -500,47 +501,59 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int bucket_size{0};\n+            s >> bucket_size;\n+            for (int n = 0; n < bucket_size; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // Attempt to restore the entry's new buckets if the bucket count and asmap\n+        // checksum haven't changed\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r535204097",
      "id" : 535204097,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwNDA5Nw==",
      "original_commit_id" : "595e9e56d58afdd283dc83e9bff554d431a34b8c",
      "original_line" : 530,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 543923638,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T11:01:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535204097",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r535206817"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535206817"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3",
      "created_at" : "2020-12-03T12:59:23Z",
      "diff_hunk" : "@@ -500,47 +501,59 @@ friend class CAddrManTest;\n         nTried -= nLost;\n \n         // Store positions in the new table buckets to apply later (if possible).\n-        std::map<int, int> entryToBucket; // Represents which entry belonged to which bucket when serializing\n-\n-        for (int bucket = 0; bucket < nUBuckets; bucket++) {\n-            int nSize = 0;\n-            s >> nSize;\n-            for (int n = 0; n < nSize; n++) {\n-                int nIndex = 0;\n-                s >> nIndex;\n-                if (nIndex >= 0 && nIndex < nNew) {\n-                    entryToBucket[nIndex] = bucket;\n+        // An entry may appear in up to ADDRMAN_NEW_BUCKETS_PER_ADDRESS buckets,\n+        // so we store all bucket-entry_index pairs to iterate through later.\n+        std::vector<std::pair<int, int>> bucket_entries;\n+\n+        for (int bucket = 0; bucket < nUBuckets; ++bucket) {\n+            int bucket_size{0};\n+            s >> bucket_size;\n+            for (int n = 0; n < bucket_size; ++n) {\n+                int entry_index{0};\n+                s >> entry_index;\n+                if (entry_index >= 0 && entry_index < nNew) {\n+                    bucket_entries.emplace_back(bucket, entry_index);\n                 }\n             }\n         }\n \n-        uint256 supplied_asmap_version;\n+        // Attempt to restore the entry's new buckets if the bucket count and asmap\n+        // checksum haven't changed\n+        uint256 supplied_asmap_checksum;\n         if (m_asmap.size() != 0) {\n-            supplied_asmap_version = SerializeHash(m_asmap);\n+            supplied_asmap_checksum = SerializeHash(m_asmap);\n         }\n-        uint256 serialized_asmap_version;\n+        uint256 serialized_asmap_checksum;\n         if (format >= Format::V2_ASMAP) {\n-            s >> serialized_asmap_version;\n+            s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r535206817",
      "id" : 535206817,
      "in_reply_to_id" : 535204097,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwNjgxNw==",
      "original_commit_id" : "595e9e56d58afdd283dc83e9bff554d431a34b8c",
      "original_line" : 530,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 543926955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T11:01:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535206817",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18722 (addrman: improve performance by using more suitable containers by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-03T13:28:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-737994022",
      "id" : 737994022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzk5NDAyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-03T13:28:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737994022",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\n>The code currently rebuckets entries (losing the additional bucket positions) if the asmap checksum changes. I'm not sure if that's necessary and don't see any downside to keeping the same bucketing if restarting with a new asmap. If others agree, I can update this PR to not do that rebucketing.\r\n\r\nThat would mean that asmap is applied to only newly learned addresses, which is a downside (assuming asmap is an improvement). On the other hand, losing the existing 8 buckets is unfortunate.\r\nI'm fine either way.\r\n\r\nWe could do the 8 existing + 1 asmap bucket if we really want... but that also has some consequences of potentially overriding existing buckets etc.\r\n\r\nAlso, we should keep in mind that non-rebucketing on a new asmap may allow existing records to appear in 16 buckets now instead of 8 (probably *all* existing records on first asmap appearance). Which is... also not particularly terrible but should be considered?",
      "created_at" : "2020-12-04T01:57:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-738505022",
      "id" : 738505022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczODUwNTAyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-04T01:57:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738505022",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> That would mean that asmap is applied to only newly learned addresses, which is a downside (assuming asmap is an improvement)\r\n\r\nCurrently the bucket positions for existing new addresses are lost entirely when changing asmap, so I don't understand how this is a downside. The choice is between throwing away those bucket positions or not.\r\n\r\n> Also, we should keep in mind that non-rebucketing on a new asmap may allow existing records to appear in 16 buckets now instead of 8 (probably all existing records on first asmap appearance). Which is... also not particularly terrible but should be considered?\r\n\r\nNo. We won't add an entry to more than 8 buckets: https://github.com/bitcoin/bitcoin/blob/257cf05f9b841ba30202f23a94bcdb1743feded2/src/addrman.cpp#L294-L296.",
      "created_at" : "2020-12-04T09:39:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-738680739",
      "id" : 738680739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczODY4MDczOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-04T09:39:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738680739",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Currently the bucket positions for existing new addresses are lost entirely when changing asmap, so I don't understand how this is a downside. The choice is between throwing away those bucket positions or not.\r\n\r\nI expressed my agreement with you in the following sentence: \"On the other hand, losing the existing 8 buckets is unfortunate.\". Still, ideally, we would apply a new asmap to existing addrs without losing the data. Unfortunately, since we don't store addr source, we have to make this choice between the two. And I agree that of these 2 choices, the one you're suggesting is probably better.\r\n\r\n>No. We won't add an entry to more than 8 buckets: \r\n\r\nGood to know! That was just my wrong assumption without looking deep into code :)",
      "created_at" : "2020-12-04T17:38:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-738917757",
      "id" : 738917757,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczODkxNzc1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-04T17:39:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738917757",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538141515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538141515"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This comment is weird in general. I don't think we have anything like `ADDRMAN_UNKNOWN_BUCKET_COUNT` anymore?",
      "commit_id" : "dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3",
      "created_at" : "2020-12-08T08:40:13Z",
      "diff_hunk" : "@@ -348,8 +349,8 @@ friend class CAddrManTest;\n      * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n-     * otherwise it is reconstructed as well.\n+     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT and the asmap checksum",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538141515",
      "id" : 538141515,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0MTUxNQ==",
      "original_commit_id" : "3d438273fd3a0d6f0065244a31b423664a99f990",
      "original_line" : 352,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 546862075,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T11:01:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538141515",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538142013"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538142013"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be talking about ADDRMAN_NEW_BUCKET_COUNT, ADDRMAN_NEW_BUCKETS_PER_ADDRESS.",
      "commit_id" : "dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3",
      "created_at" : "2020-12-08T08:41:02Z",
      "diff_hunk" : "@@ -348,8 +349,8 @@ friend class CAddrManTest;\n      * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n-     * otherwise it is reconstructed as well.\n+     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT and the asmap checksum",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538142013",
      "id" : 538142013,
      "in_reply_to_id" : 538141515,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0MjAxMw==",
      "original_commit_id" : "3d438273fd3a0d6f0065244a31b423664a99f990",
      "original_line" : 352,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 546862698,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T11:01:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538142013",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538144329"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538144329"
         }
      },
      "author_association" : "MEMBER",
      "body" : "So this happens if a new version of Bitcoin Core reduced `ADDRMAN_NEW_BUCKETS_PER_ADDRESS`, and in this case we completely forget the extra addrs.\r\n\r\nWhy do you think it's more reasonable? Assuming addrman is less-than-half-full, there's a good chance this odd addr can find a new place without evicting anything.",
      "commit_id" : "dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3",
      "created_at" : "2020-12-08T08:44:35Z",
      "diff_hunk" : "@@ -525,19 +527,26 @@ friend class CAddrManTest;\n         if (format >= Format::V2_ASMAP) {\n             s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n         for (auto bucket_entry : bucket_entries) {\n             int bucket{bucket_entry.first};\n             const int entry_index{bucket_entry.second};\n             CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538144329",
      "id" : 538144329,
      "line" : 542,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0NDMyOQ==",
      "original_commit_id" : "75c4f0f3f4b73b62ce9f5a5c93f7aff24b0e878f",
      "original_line" : 542,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/addrman.h",
      "position" : 99,
      "pull_request_review_id" : 546865300,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T11:01:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538144329",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538145834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538145834"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I find it hard to parse \"restore the entry's new buckets\".\r\n1. Not only buckets, but also positions.\r\n2. What exactly is \"restore\" is also a bit unclear, I'm thinking if there's a better verb. Perhaps just \"use the serialized [...]\"",
      "commit_id" : "dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3",
      "created_at" : "2020-12-08T08:47:01Z",
      "diff_hunk" : "@@ -517,6 +517,8 @@ friend class CAddrManTest;\n             }\n         }\n \n+        // Attempt to restore the entry's new buckets if the bucket count and asmap",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r538145834",
      "id" : 538145834,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0NTgzNA==",
      "original_commit_id" : "75c4f0f3f4b73b62ce9f5a5c93f7aff24b0e878f",
      "original_line" : 520,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 546867085,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T11:01:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538145834",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r540073174"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540073174"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, changed to ADDRMAN_NEW_BUCKET_COUNT.",
      "commit_id" : "dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3",
      "created_at" : "2020-12-10T10:57:41Z",
      "diff_hunk" : "@@ -348,8 +349,8 @@ friend class CAddrManTest;\n      * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n-     * otherwise it is reconstructed as well.\n+     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT and the asmap checksum",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r540073174",
      "id" : 540073174,
      "in_reply_to_id" : 538141515,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA3MzE3NA==",
      "original_commit_id" : "3d438273fd3a0d6f0065244a31b423664a99f990",
      "original_line" : 352,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 549079380,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T11:01:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540073174",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r540073873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540073873"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Because `ADDRMAN_NEW_BUCKETS_PER_ADDRESS` should be an invariant in addrman. No entry should appear in no more than `ADDRMAN_NEW_BUCKETS_PER_ADDRESS` buckets.",
      "commit_id" : "dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3",
      "created_at" : "2020-12-10T10:58:47Z",
      "diff_hunk" : "@@ -525,19 +527,26 @@ friend class CAddrManTest;\n         if (format >= Format::V2_ASMAP) {\n             s >> serialized_asmap_checksum;\n         }\n+        const bool restore_bucketing{nUBuckets == ADDRMAN_NEW_BUCKET_COUNT &&\n+                                     serialized_asmap_checksum == supplied_asmap_checksum};\n \n         for (auto bucket_entry : bucket_entries) {\n             int bucket{bucket_entry.first};\n             const int entry_index{bucket_entry.second};\n             CAddrInfo& info = mapInfo[entry_index];\n+\n+            // The entry shouldn't appear in more than\n+            // ADDRMAN_NEW_BUCKETS_PER_ADDRESS. If it has already, just skip\n+            // this bucket_entry.\n+            if (info.nRefCount >= ADDRMAN_NEW_BUCKETS_PER_ADDRESS) continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r540073873",
      "id" : 540073873,
      "in_reply_to_id" : 538144329,
      "line" : 542,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA3Mzg3Mw==",
      "original_commit_id" : "75c4f0f3f4b73b62ce9f5a5c93f7aff24b0e878f",
      "original_line" : 542,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/addrman.h",
      "position" : 99,
      "pull_request_review_id" : 549080242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T11:01:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540073873",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r540075665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540075665"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed wording to \"If the bucket count and asmap checksum haven't changed, then attempt to restore the entries to the buckets/positions they were in before serialization.\" Hopefully that's clearer!\r\n",
      "commit_id" : "dbdf63c6d82ae8d1ca73f11d1b8844614f0bf8e3",
      "created_at" : "2020-12-10T11:01:35Z",
      "diff_hunk" : "@@ -517,6 +517,8 @@ friend class CAddrManTest;\n             }\n         }\n \n+        // Attempt to restore the entry's new buckets if the bucket count and asmap",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#discussion_r540075665",
      "id" : 540075665,
      "in_reply_to_id" : 538145834,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA3NTY2NQ==",
      "original_commit_id" : "75c4f0f3f4b73b62ce9f5a5c93f7aff24b0e878f",
      "original_line" : 520,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/addrman.h",
      "position" : null,
      "pull_request_review_id" : 549082343,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20557",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T11:01:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540075665",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @naumenkogs. I've addressed all your comments.",
      "created_at" : "2020-12-10T11:02:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-742449291",
      "id" : 742449291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjQ0OTI5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T11:02:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742449291",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, and the code change looks overall good to me. \r\n\r\n> https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-737890278\r\n\r\nAgree that a test would be useful, to make it easier to see that this fixes the mentioned problems and prevent future regression.",
      "created_at" : "2020-12-10T13:08:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20557#issuecomment-742510425",
      "id" : 742510425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20557",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjUxMDQyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T13:08:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742510425",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
