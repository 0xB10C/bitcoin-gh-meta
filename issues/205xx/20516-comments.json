[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20509 (net: CAddress deser: use stream's version, not what's coming from disk by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-11-27T02:24:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20516#issuecomment-734548674",
      "id" : 734548674,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20516",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDU0ODY3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T02:24:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734548674",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I merged the anchors.dat addrv2 support from #20514 into this PR, as doing it correctly requires changes the `Cservice` serialization from stream version based to stored version based.",
      "created_at" : "2020-11-27T19:17:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20516#issuecomment-734958654",
      "id" : 734958654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20516",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDk1ODY1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T19:17:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734958654",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nFrom the PR description and quick code reading it follows that there is no hurry to backport these changes into 0.21, right?",
      "created_at" : "2020-11-27T19:49:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20516#issuecomment-734965909",
      "id" : 734965909,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20516",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDk2NTkwOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T19:49:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734965909",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Indeed, there is probably no hurry, unless we want to support torv3 anchors in 0.21.",
      "created_at" : "2020-11-27T19:50:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20516#issuecomment-734966179",
      "id" : 734966179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20516",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDk2NjE3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T19:50:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734966179",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20516#discussion_r532026970"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20516"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532026970"
         }
      },
      "author_association" : "MEMBER",
      "body" : "501de309e682f2edddb7e51e55665e034e1a86be, while this line is touched, it seems natural to inherit the stream type as well:\r\n\r\n```suggestion\r\n        CHashWriter hasher(stream.GetType(), stream.GetVersion());\r\n```\r\n\r\nAnd `CHashVerifier` uses type of stream.",
      "commit_id" : "04e3733b8dc073562e30a12f955a0430793cfe25",
      "created_at" : "2020-11-28T11:03:35Z",
      "diff_hunk" : "@@ -23,7 +23,7 @@ bool SerializeDB(Stream& stream, const Data& data)\n {\n     // Write and commit header, data\n     try {\n-        CHashWriter hasher(SER_DISK, CLIENT_VERSION);\n+        CHashWriter hasher(SER_DISK, stream.GetVersion());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20516#discussion_r532026970",
      "id" : 532026970,
      "line" : 26,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAyNjk3MA==",
      "original_commit_id" : "04e3733b8dc073562e30a12f955a0430793cfe25",
      "original_line" : 26,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : 5,
      "pull_request_review_id" : 540368109,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20516",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-28T12:26:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532026970",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20516#discussion_r532053363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20516"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532053363"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6d16903c4c384bc15f3f29e5635bb9dccd789cb6\r\n```suggestion\r\n    static_assert(DISK_VERSION_ADDRV2 == ADDRV2_FORMAT, \"DISK_VERSION_ADDRV2 must be equal to ADDRV2_FORMAT for backward compatibility\");\r\n```",
      "commit_id" : "04e3733b8dc073562e30a12f955a0430793cfe25",
      "created_at" : "2020-11-28T15:43:53Z",
      "diff_hunk" : "@@ -361,43 +362,97 @@ class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** Historically, CAddress disk serialization stored the CLIENT_VERSION, optionally OR'ed with\n+     *  the ADDRV2_FORMAT flag to indicate V2 serialization. The first field has since been\n+     *  disentangled from client versioning, and now instead:\n+     *  - The low bits (masked by DISK_VERSION_IGNORE_MASK) store the fixed value DISK_VERSION_INIT,\n+     *    (in case any code exists that treats it as a client version) but are ignored on\n+     *    deserialization.\n+     *  - The high bits (masked by ~DISK_VERSION_IGNORE_MASK) store actual serialization information.\n+     *    Only 0 or DISK_VERSION_ADDRV2 (equal to the historical ADDRV2_FORMAT) are valid now, and\n+     *    any other value triggers a deserialization failure. Other values can be added later if\n+     *    needed.\n+     *\n+     *  For disk deserialization, ADDRV2_FORMAT signals that ADDRV2 deserialization is permitted,\n+     *  but the actual format is determined by the high bits in the stored version field.\n+     *  For network serialization ADDRV2_FORMAT determines the actual format used (as it has no\n+     *  embedded version number).\n+     */\n+    static constexpr uint32_t DISK_VERSION_INIT{220000};\n+    static constexpr uint32_t DISK_VERSION_IGNORE_MASK{(1 << 19) - 1};\n+    static_assert((DISK_VERSION_INIT & ~DISK_VERSION_IGNORE_MASK) == 0, \"DISK_VERSION_INIT must be covered by DISK_VERSION_IGNORE_MASK\");\n+    static constexpr uint32_t DISK_VERSION_ADDRV2 = 0x20000000;\n+    static_assert((DISK_VERSION_ADDRV2 & DISK_VERSION_IGNORE_MASK) == 0, \"DISK_VERSION_ADDRV2 must not be covered by DISK_VERSION_IGNORE_MASK\");\n+    static_assert(DISK_VERSION_ADDRV2 == ADDRV2_FORMAT, \"DISK_VERSION_ADDRV2 must ADDRV2_FORMAT for backward compatibility\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20516#discussion_r532053363",
      "id" : 532053363,
      "line" : 386,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA1MzM2Mw==",
      "original_commit_id" : "04e3733b8dc073562e30a12f955a0430793cfe25",
      "original_line" : 386,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 33,
      "pull_request_review_id" : 540383063,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20516",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-28T15:43:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532053363",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20516#discussion_r532057230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20516"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532057230"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe present `DISK_VERSION_ADDRV2` as a bit flag explicitly, i.e.\r\n```suggestion\r\n    static constexpr uint32_t DISK_VERSION_ADDRV2 = 1 << 29;\r\n```\r\n?",
      "commit_id" : "04e3733b8dc073562e30a12f955a0430793cfe25",
      "created_at" : "2020-11-28T16:21:41Z",
      "diff_hunk" : "@@ -361,43 +362,97 @@ class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** Historically, CAddress disk serialization stored the CLIENT_VERSION, optionally OR'ed with\n+     *  the ADDRV2_FORMAT flag to indicate V2 serialization. The first field has since been\n+     *  disentangled from client versioning, and now instead:\n+     *  - The low bits (masked by DISK_VERSION_IGNORE_MASK) store the fixed value DISK_VERSION_INIT,\n+     *    (in case any code exists that treats it as a client version) but are ignored on\n+     *    deserialization.\n+     *  - The high bits (masked by ~DISK_VERSION_IGNORE_MASK) store actual serialization information.\n+     *    Only 0 or DISK_VERSION_ADDRV2 (equal to the historical ADDRV2_FORMAT) are valid now, and\n+     *    any other value triggers a deserialization failure. Other values can be added later if\n+     *    needed.\n+     *\n+     *  For disk deserialization, ADDRV2_FORMAT signals that ADDRV2 deserialization is permitted,\n+     *  but the actual format is determined by the high bits in the stored version field.\n+     *  For network serialization ADDRV2_FORMAT determines the actual format used (as it has no\n+     *  embedded version number).\n+     */\n+    static constexpr uint32_t DISK_VERSION_INIT{220000};\n+    static constexpr uint32_t DISK_VERSION_IGNORE_MASK{(1 << 19) - 1};\n+    static_assert((DISK_VERSION_INIT & ~DISK_VERSION_IGNORE_MASK) == 0, \"DISK_VERSION_INIT must be covered by DISK_VERSION_IGNORE_MASK\");\n+    static constexpr uint32_t DISK_VERSION_ADDRV2 = 0x20000000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20516#discussion_r532057230",
      "id" : 532057230,
      "line" : 384,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA1NzIzMA==",
      "original_commit_id" : "04e3733b8dc073562e30a12f955a0430793cfe25",
      "original_line" : 384,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 31,
      "pull_request_review_id" : 540385340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20516",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-28T16:27:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532057230",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20516#discussion_r532057860"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20516"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532057860"
         }
      },
      "author_association" : "MEMBER",
      "body" : "When a new bit flag for disk serialization will be introduced in the future, a downgraded (after upgrading) node will throw an exception during deserialization. Maybe:\r\n```suggestion\r\n            } else if (stored_format_version & DISK_VERSION_ADDRV2 && (s.GetVersion() & ADDRV2_FORMAT)) {\r\n```\r\n?",
      "commit_id" : "04e3733b8dc073562e30a12f955a0430793cfe25",
      "created_at" : "2020-11-28T16:27:28Z",
      "diff_hunk" : "@@ -361,43 +362,97 @@ class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** Historically, CAddress disk serialization stored the CLIENT_VERSION, optionally OR'ed with\n+     *  the ADDRV2_FORMAT flag to indicate V2 serialization. The first field has since been\n+     *  disentangled from client versioning, and now instead:\n+     *  - The low bits (masked by DISK_VERSION_IGNORE_MASK) store the fixed value DISK_VERSION_INIT,\n+     *    (in case any code exists that treats it as a client version) but are ignored on\n+     *    deserialization.\n+     *  - The high bits (masked by ~DISK_VERSION_IGNORE_MASK) store actual serialization information.\n+     *    Only 0 or DISK_VERSION_ADDRV2 (equal to the historical ADDRV2_FORMAT) are valid now, and\n+     *    any other value triggers a deserialization failure. Other values can be added later if\n+     *    needed.\n+     *\n+     *  For disk deserialization, ADDRV2_FORMAT signals that ADDRV2 deserialization is permitted,\n+     *  but the actual format is determined by the high bits in the stored version field.\n+     *  For network serialization ADDRV2_FORMAT determines the actual format used (as it has no\n+     *  embedded version number).\n+     */\n+    static constexpr uint32_t DISK_VERSION_INIT{220000};\n+    static constexpr uint32_t DISK_VERSION_IGNORE_MASK{(1 << 19) - 1};\n+    static_assert((DISK_VERSION_INIT & ~DISK_VERSION_IGNORE_MASK) == 0, \"DISK_VERSION_INIT must be covered by DISK_VERSION_IGNORE_MASK\");\n+    static constexpr uint32_t DISK_VERSION_ADDRV2 = 0x20000000;\n+    static_assert((DISK_VERSION_ADDRV2 & DISK_VERSION_IGNORE_MASK) == 0, \"DISK_VERSION_ADDRV2 must not be covered by DISK_VERSION_IGNORE_MASK\");\n+    static_assert(DISK_VERSION_ADDRV2 == ADDRV2_FORMAT, \"DISK_VERSION_ADDRV2 must ADDRV2_FORMAT for backward compatibility\");\n+\n public:\n     CAddress() : CService{} {};\n     CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n     CAddress(CService ipIn, ServiceFlags nServicesIn, uint32_t nTimeIn) : CService{ipIn}, nTime{nTimeIn}, nServices{nServicesIn} {};\n \n     SERIALIZE_METHODS(CAddress, obj)\n     {\n-        SER_READ(obj, obj.nTime = TIME_INIT);\n-        int nVersion = s.GetVersion();\n+        // CAddress has a distinct network serialization and a disk serialization, but it should never\n+        // be hashed (except through CHashWriter in addrdb.cpp, which sets SER_DISK), and it's\n+        // ambiguous what that would mean. Make sure no code relying on that is introduced:\n+        assert(!(s.GetType() & SER_GETHASH));\n+        bool use_v2;\n+        bool store_time;\n         if (s.GetType() & SER_DISK) {\n-            READWRITE(nVersion);\n-        }\n-        if ((s.GetType() & SER_DISK) ||\n-            (nVersion != INIT_PROTO_VERSION && !(s.GetType() & SER_GETHASH))) {\n+            uint32_t stored_format_version = DISK_VERSION_INIT;\n+            if (s.GetVersion() & ADDRV2_FORMAT) stored_format_version |= DISK_VERSION_ADDRV2;\n+            READWRITE(stored_format_version);\n+            stored_format_version &= ~DISK_VERSION_IGNORE_MASK; // ignore low bits\n+            if (stored_format_version == 0) {\n+                use_v2 = false;\n+            } else if (stored_format_version == DISK_VERSION_ADDRV2 && (s.GetVersion() & ADDRV2_FORMAT)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20516#discussion_r532057860",
      "id" : 532057860,
      "line" : 408,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA1Nzg2MA==",
      "original_commit_id" : "04e3733b8dc073562e30a12f955a0430793cfe25",
      "original_line" : 408,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 61,
      "pull_request_review_id" : 540385340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20516",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-28T16:29:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532057860",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20516#discussion_r532091123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20516"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532091123"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, that would break the ability to add other formats in a compatible way.",
      "commit_id" : "04e3733b8dc073562e30a12f955a0430793cfe25",
      "created_at" : "2020-11-28T18:23:55Z",
      "diff_hunk" : "@@ -361,43 +362,97 @@ class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /** Historically, CAddress disk serialization stored the CLIENT_VERSION, optionally OR'ed with\n+     *  the ADDRV2_FORMAT flag to indicate V2 serialization. The first field has since been\n+     *  disentangled from client versioning, and now instead:\n+     *  - The low bits (masked by DISK_VERSION_IGNORE_MASK) store the fixed value DISK_VERSION_INIT,\n+     *    (in case any code exists that treats it as a client version) but are ignored on\n+     *    deserialization.\n+     *  - The high bits (masked by ~DISK_VERSION_IGNORE_MASK) store actual serialization information.\n+     *    Only 0 or DISK_VERSION_ADDRV2 (equal to the historical ADDRV2_FORMAT) are valid now, and\n+     *    any other value triggers a deserialization failure. Other values can be added later if\n+     *    needed.\n+     *\n+     *  For disk deserialization, ADDRV2_FORMAT signals that ADDRV2 deserialization is permitted,\n+     *  but the actual format is determined by the high bits in the stored version field.\n+     *  For network serialization ADDRV2_FORMAT determines the actual format used (as it has no\n+     *  embedded version number).\n+     */\n+    static constexpr uint32_t DISK_VERSION_INIT{220000};\n+    static constexpr uint32_t DISK_VERSION_IGNORE_MASK{(1 << 19) - 1};\n+    static_assert((DISK_VERSION_INIT & ~DISK_VERSION_IGNORE_MASK) == 0, \"DISK_VERSION_INIT must be covered by DISK_VERSION_IGNORE_MASK\");\n+    static constexpr uint32_t DISK_VERSION_ADDRV2 = 0x20000000;\n+    static_assert((DISK_VERSION_ADDRV2 & DISK_VERSION_IGNORE_MASK) == 0, \"DISK_VERSION_ADDRV2 must not be covered by DISK_VERSION_IGNORE_MASK\");\n+    static_assert(DISK_VERSION_ADDRV2 == ADDRV2_FORMAT, \"DISK_VERSION_ADDRV2 must ADDRV2_FORMAT for backward compatibility\");\n+\n public:\n     CAddress() : CService{} {};\n     CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n     CAddress(CService ipIn, ServiceFlags nServicesIn, uint32_t nTimeIn) : CService{ipIn}, nTime{nTimeIn}, nServices{nServicesIn} {};\n \n     SERIALIZE_METHODS(CAddress, obj)\n     {\n-        SER_READ(obj, obj.nTime = TIME_INIT);\n-        int nVersion = s.GetVersion();\n+        // CAddress has a distinct network serialization and a disk serialization, but it should never\n+        // be hashed (except through CHashWriter in addrdb.cpp, which sets SER_DISK), and it's\n+        // ambiguous what that would mean. Make sure no code relying on that is introduced:\n+        assert(!(s.GetType() & SER_GETHASH));\n+        bool use_v2;\n+        bool store_time;\n         if (s.GetType() & SER_DISK) {\n-            READWRITE(nVersion);\n-        }\n-        if ((s.GetType() & SER_DISK) ||\n-            (nVersion != INIT_PROTO_VERSION && !(s.GetType() & SER_GETHASH))) {\n+            uint32_t stored_format_version = DISK_VERSION_INIT;\n+            if (s.GetVersion() & ADDRV2_FORMAT) stored_format_version |= DISK_VERSION_ADDRV2;\n+            READWRITE(stored_format_version);\n+            stored_format_version &= ~DISK_VERSION_IGNORE_MASK; // ignore low bits\n+            if (stored_format_version == 0) {\n+                use_v2 = false;\n+            } else if (stored_format_version == DISK_VERSION_ADDRV2 && (s.GetVersion() & ADDRV2_FORMAT)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20516#discussion_r532091123",
      "id" : 532091123,
      "in_reply_to_id" : 532057860,
      "line" : 408,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5MTEyMw==",
      "original_commit_id" : "04e3733b8dc073562e30a12f955a0430793cfe25",
      "original_line" : 408,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 61,
      "pull_request_review_id" : 540408979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20516",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-28T18:23:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532091123",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed comments.",
      "created_at" : "2020-11-30T21:41:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20516#issuecomment-736073151",
      "id" : 736073151,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20516",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNjA3MzE1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-30T21:41:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736073151",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
