[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20267 (Disable and fix tests for when BDB is not compiled by achow101)\n* #17355 (gui: grey out used address in address book by za-kk)\n* #15129 (rpc: Added ability to remove watch only addresses by benthecarman)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-07T18:34:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740100466",
      "id" : 740100466,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDEwMDQ2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-07T18:34:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740100466",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If this PR is intended to address issue #20181, can you add \"Closes #20181\" or \"Fixes #20181\" to the PR description instead of the PR title?",
      "created_at" : "2020-12-07T21:16:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740184798",
      "id" : 740184798,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDE4NDc5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-07T21:17:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740184798",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Is it right this way ?",
      "created_at" : "2020-12-07T21:21:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740187113",
      "id" : 740187113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDE4NzExMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-07T21:21:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740187113",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/75384375?v=4",
         "events_url" : "https://api.github.com/users/BitcoinTsunami/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinTsunami/followers",
         "following_url" : "https://api.github.com/users/BitcoinTsunami/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinTsunami/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinTsunami",
         "id" : 75384375,
         "login" : "BitcoinTsunami",
         "node_id" : "MDQ6VXNlcjc1Mzg0Mzc1",
         "organizations_url" : "https://api.github.com/users/BitcoinTsunami/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinTsunami/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinTsunami/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinTsunami/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinTsunami/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinTsunami"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, thank you.",
      "created_at" : "2020-12-07T21:33:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740193240",
      "id" : 740193240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDE5MzI0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-07T21:33:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740193240",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-12-07T21:45:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#issuecomment-740198726",
      "id" : 740198726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20591",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDE5ODcyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-07T21:45:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740198726",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537871606"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537871606"
         }
      },
      "author_association" : "MEMBER",
      "body" : "commit 4997a2ea5f2 \"wallet: fix ComputeTimeSmart algorithm to use blocktime during old block rescanning fixes #20181\"\r\n\r\n- does the `ComputeTimeSmart` doxygen documentation need to be updated?\r\n\r\n- missing space\r\n```suggestion\r\n            if (!rescanning_old_block) {\r\n```\r\n\r\n- maybe start with the truthy case first, e.g. `if (rescanning_old_block) {`...\r\n\r\n- can drop the \"fixes #20181\" from the commit message, same for the test commit message (remove \"refs #20181\"); having \"Fixes #20181\" in the PR description is enough\r\n\r\n- suggestion to reviewers: review this commit diff with `-w`",
      "commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "created_at" : "2020-12-07T22:11:38Z",
      "diff_hunk" : "@@ -3679,38 +3679,42 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t>& mapKeyBirth) const {\n  * https://bitcointalk.org/?topic=54527, or\n  * https://github.com/bitcoin/bitcoin/pull/1393.\n  */\n-unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n+unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx, bool rescanning_old_block) const\n {\n     unsigned int nTimeSmart = wtx.nTimeReceived;\n     if (!wtx.isUnconfirmed() && !wtx.isAbandoned()) {\n         int64_t blocktime;\n         if (chain().findBlock(wtx.m_confirm.hashBlock, FoundBlock().time(blocktime))) {\n-            int64_t latestNow = wtx.nTimeReceived;\n-            int64_t latestEntry = 0;\n-\n-            // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n-            int64_t latestTolerated = latestNow + 300;\n-            const TxItems& txOrdered = wtxOrdered;\n-            for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n-                CWalletTx* const pwtx = it->second;\n-                if (pwtx == &wtx) {\n-                    continue;\n-                }\n-                int64_t nSmartTime;\n-                nSmartTime = pwtx->nTimeSmart;\n-                if (!nSmartTime) {\n-                    nSmartTime = pwtx->nTimeReceived;\n-                }\n-                if (nSmartTime <= latestTolerated) {\n-                    latestEntry = nSmartTime;\n-                    if (nSmartTime > latestNow) {\n-                        latestNow = nSmartTime;\n+            if(!rescanning_old_block) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537871606",
      "id" : 537871606,
      "line" : 3688,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3MTYwNg==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 3688,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 88,
      "pull_request_review_id" : 546580921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-07T22:56:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537871606",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537877209"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537877209"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: 2 spaces before each comment per PEP8\r\n```suggestion\r\n        restorenode = self.nodes[2]  # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\r\n```",
      "commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "created_at" : "2020-12-07T22:21:29Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537877209",
      "id" : 537877209,
      "line" : 27,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3NzIwOQ==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : 27,
      "pull_request_review_id" : 546580921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-07T22:38:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537877209",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537883472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537883472"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The test does indeed fail without the change and passes with it.\r\n```\r\n2020-12-07T22:04:28.394000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 126, in main\r\n    self.run_test()\r\n  File \"test/functional/wallet_transactiontime_rescan.py\", line 152, in run_test\r\n    assert_equal(tx['time'], 1525971225)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/util.py\", line 50, in assert_equal\r\n    raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\nAssertionError: not(1527699225 == 1525971225)\r\n```\r\nBut the test commit needs to be after the commit that makes the change, not before, otherwise the test commit fails. The tests and CI should pass for each commit. Also, you can squash the linter fixup commit into the test commit. (Note that you can run the Python test linter on the command line with `test/lint/lint-python.sh`).",
      "commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "created_at" : "2020-12-07T22:32:10Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')\n+\n+        self.log.info('Start transactions')\n+\n+        # check blockcount\n+        assert_equal(minernode.getblockcount(), 200)\n+\n+        # generate some btc to create transactions and check blockcount\n+        minernode.generatetoaddress(300, m1)\n+        assert_equal(minernode.getblockcount(), 500)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days)\n+        usernode.setmocktime(mocktime + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days)\n+        # send 10 btc to user first watch-only address\n+        self.log.info('Send 10 btc to user')\n+        miner_wallet.sendtoaddress(wo1, 10)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 600)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days + ten_days)\n+        usernode.setmocktime(mocktime + ten_days + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days + ten_days)\n+        # send 5 btc to our second watch-only address\n+        self.log.info('Send 5 btc to user')\n+        miner_wallet.sendtoaddress(wo2, 5)\n+\n+        # generate blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 700)\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        usernode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        restorenode.setmocktime(mocktime + ten_days + ten_days + ten_days)\n+        # send 1 btc to our third watch-only address\n+        self.log.info('Send 1 btc to user')\n+        miner_wallet.sendtoaddress(wo3, 1)\n+\n+        # generate more blocks and check blockcount\n+        minernode.generatetoaddress(100, m1)\n+        assert_equal(minernode.getblockcount(), 800)\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance')\n+        assert_equal(wo_wallet.getbalance(), 16)\n+        assert_equal(len(wo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time')\n+        for tx in wo_wallet.listtransactions():\n+            if tx['address'] == 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx':\n+                assert_equal(tx['blocktime'], 1525971225)\n+                assert_equal(tx['time'], 1525971225)\n+            elif tx['address'] == 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q':\n+                assert_equal(tx['blocktime'], 1526835225)\n+                assert_equal(tx['time'], 1526835225)\n+            elif tx['address'] == 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5':\n+                assert_equal(tx['blocktime'], 1527699225)\n+                assert_equal(tx['time'], 1527699225)\n+\n+        # restore user wallet without rescan\n+        self.log.info('Restore user wallet on another node without rescan')\n+        restorenode.createwallet(wallet_name='wo', disable_private_keys=True, )\n+        restorewo_wallet = restorenode.get_wallet_rpc('wo')\n+\n+        restorewo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef', rescan=False)\n+        restorewo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b', rescan=False)\n+        restorewo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a', rescan=False)\n+\n+        # check user has 0 balance and no transaction\n+        assert_equal(restorewo_wallet.getbalance(), 0)\n+        assert_equal(len(restorewo_wallet.listtransactions()), 0)\n+\n+        # proceed to rescan, first with an incomplete one, then with a full rescan\n+        self.log.info('Rescan last history part')\n+        restorewo_wallet.rescanblockchain(650)\n+        self.log.info('Rescan all history')\n+        restorewo_wallet.rescanblockchain()\n+\n+        # check user final balance and transaction count\n+        self.log.info('Check user final balance after restoration')\n+        assert_equal(restorewo_wallet.getbalance(), 16)\n+        assert_equal(len(restorewo_wallet.listtransactions()), 3)\n+\n+        # check transactions time\n+        self.log.info('Check transactions time after restoration')\n+        for tx in restorewo_wallet.listtransactions():\n+            if tx['address'] == 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx':\n+                assert_equal(tx['blocktime'], 1525971225)\n+                assert_equal(tx['time'], 1525971225)\n+            elif tx['address'] == 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q':",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537883472",
      "id" : 537883472,
      "line" : 152,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4MzQ3Mg==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 152,
      "original_position" : 152,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : 152,
      "pull_request_review_id" : 546580921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-07T22:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537883472",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537886648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886648"
         }
      },
      "author_association" : "MEMBER",
      "body" : "could use current time, grep in the functional tests for `int(time.time()`",
      "commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "created_at" : "2020-12-07T22:37:49Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537886648",
      "id" : 537886648,
      "line" : 30,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4NjY0OA==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 30,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : 30,
      "pull_request_review_id" : 546580921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-07T22:38:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886648",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537886972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886972"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The addresses and pubkeys don't need to be hardcoded. Have a look in other tests how this can be done (grep for \"importpubkey\", \"deterministic\", \"pub_key\", \"priv_key\", etc.)",
      "commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "created_at" : "2020-12-07T22:38:30Z",
      "diff_hunk" : "@@ -0,0 +1,160 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction time during old block rescanning\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal\n+)\n+\n+\n+class TransactionTimeRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 3\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Prepare nodes and wallet')\n+\n+        minernode = self.nodes[0] # node used to mine BTC and create transactions\n+        usernode = self.nodes[1] # user node with correct time\n+        restorenode = self.nodes[2] # node used to restore user wallet and check time determination in ComputeSmartTime (wallet.cpp)\n+\n+        # time constant\n+        mocktime = 1525107225\n+        ten_days = 10 * 24 * 60 * 60\n+\n+        # synchronize nodes and time\n+        self.sync_all()\n+        minernode.setmocktime(mocktime)\n+        usernode.setmocktime(mocktime)\n+        restorenode.setmocktime(mocktime)\n+\n+        # prepare miner wallet\n+        minernode.createwallet(wallet_name='default')\n+        miner_wallet = minernode.get_wallet_rpc('default')\n+        m1 = miner_wallet.getnewaddress()\n+\n+        # prepare the user wallet with 3 public key\n+        wo1 = 'bcrt1qqvs4h9g5kemwu8zdffv3c9tm3dm2qp9uzlxwzx'\n+        wo2 = 'bcrt1qnw7peeq89hwrg674zjf4phzzluld798p667q7q'\n+        wo3 = 'bcrt1qdr36v724uddf50jhnju3amzap2gmmt9tf4aac5'\n+\n+        usernode.createwallet(wallet_name='wo', disable_private_keys=True)\n+        wo_wallet = usernode.get_wallet_rpc('wo')\n+\n+        wo_wallet.importpubkey(pubkey='02f8802962c2ca756d8961c719f75bdfff2b6dbb775788ed54a68bcb182c0ea1ef')\n+        wo_wallet.importpubkey(pubkey='0330f4a96800a38fa0a49cde4b5f802e95a0c1044e5954389a8d00cecde01b842b')\n+        wo_wallet.importpubkey(pubkey='02f5ccbee49546e0b5bf2e76422ed959e983dafaa94c8abafc9c8f8b99ef23d16a')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537886972",
      "id" : 537886972,
      "line" : 54,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg4Njk3Mg==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/wallet_transactiontime_rescan.py",
      "position" : 54,
      "pull_request_review_id" : 546580921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-07T22:38:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537886972",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537892800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537892800"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It would probaby be good to update the Doxygen documentation here.",
      "commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "created_at" : "2020-12-07T22:49:30Z",
      "diff_hunk" : "@@ -664,7 +664,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * Abandoned state should probably be more carefully tracked via different\n      * posInBlock signals or by checking mempool presence when necessary.\n      */\n-    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, CWalletTx::Confirmation confirm, bool fUpdate, bool rescanning_old_block) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537892800",
      "id" : 537892800,
      "line" : 667,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg5MjgwMA==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 667,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 5,
      "pull_request_review_id" : 546604258,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-07T22:49:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537892800",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537894706"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537894706"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit\r\n```suggestion\r\n                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate, /* rescanning_old_block */ true);\r\n```\r\n",
      "commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "created_at" : "2020-12-07T22:53:21Z",
      "diff_hunk" : "@@ -1788,7 +1788,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n                 break;\n             }\n             for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n-                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate);\n+                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate, true /* rescanning_old_block */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20591#discussion_r537894706",
      "id" : 537894706,
      "line" : 1791,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg5NDcwNg==",
      "original_commit_id" : "0fdd53f46c98d7bbcf068e2b4c652cd32c5476e1",
      "original_line" : 1791,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 53,
      "pull_request_review_id" : 546606289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20591",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-07T22:53:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537894706",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
